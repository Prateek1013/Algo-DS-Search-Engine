{"Weird Algorithm": ["https://cses.fi/problemset/task/1068", "\nCSES - Weird Algorithm\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider an algorithm that takes as input a positive integer nn. If nn is even, the algorithm divides it by two, and if nn is odd, the algorithm multiplies it by three and adds one. The algorithm repeats this, until nn is one. For example, the sequence for n=3n=3 is as follows:\n3\u219210\u21925\u219216\u21928\u21924\u21922\u219213\u219210\u21925\u219216\u21928\u21924\u21922\u21921\nYour task is to simulate the execution of the algorithm for a given value of nn.\n\nInput\n\nThe only input line contains an integer nn.\n\nOutput\n\nPrint a line that contains all values of nn during the algorithm.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\n3\n\nOutput:\n3 10 5 16 8 4 2 1 "], "Missing Number": ["https://cses.fi/problemset/task/1083", "\nCSES - Missing Number\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given all numbers between 1,2,\u2026,n1,2,\u2026,n except one. Your task is to find the missing number.\n\nInput\n\nThe first input line contains an integer nn.\n\nThe second line contains n\u22121n\u22121 numbers. Each number is distinct and between 11 and nn (inclusive).\n\nOutput\n\nPrint the missing number.\n\nConstraints\n\n2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n5\n2 3 1 5\n\nOutput:\n4 "], "Repetitions": ["https://cses.fi/problemset/task/1069", "\nCSES - Repetitions\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a DNA sequence: a string consisting of characters A, C, G, and T. Your task is to find the longest repetition in the sequence. This is a maximum-length substring containing only one type of character.\n\nInput\n\nThe only input line contains a string of nn characters.\n\nOutput\n\nPrint one integer: the length of the longest repetition.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\nATTCGGGA\n\nOutput:\n3 "], "Increasing Array": ["https://cses.fi/problemset/task/1094", "\nCSES - Increasing Array\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array of nn integers. You want to modify the array so that it is increasing, i.e., every element is at least as large as the previous element.\n\nOn each move, you may increase the value of any element by one. What is the minimum number of moves required?\n\nInput\n\nThe first input line contains an integer nn: the size of the array.\n\nThen, the second line contains nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint the minimum number of moves.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n 1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n5\n3 2 5 1 7\n\nOutput:\n5 "], "Permutations": ["https://codeforces.com/problemset/problem/124/B", "B. Permutationstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given n k-digit integers. You have to rearrange the digits in the integers so that the difference between the largest and the smallest number was minimum. Digits should be rearranged by the same rule in all integers.InputThe first line contains integers n and k \u2014 the number and digit capacity of numbers correspondingly (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u20098). Next n lines contain k-digit positive integers. Leading zeroes are allowed both in the initial integers and the integers resulting from the rearranging of digits.OutputPrint a single number: the minimally possible difference between the largest and the smallest number after the digits are rearranged in all integers by the same rule.ExamplesInputCopy6 4523727537523572353272537OutputCopy2700InputCopy3 3010909012OutputCopy3InputCopy7 550808366033719844911299944254350156OutputCopy20522NoteIn the first sample, if we rearrange the digits in numbers as (3,1,4,2), then the 2-nd and the 4-th numbers will equal 5237 and 2537 correspondingly (they will be maximum and minimum for such order of digits).In the second sample, if we swap the second digits and the first ones, we get integers 100, 99 and 102."], "Number Spiral": ["https://cses.fi/problemset/task/1071", "\nCSES - Number Spiral\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA number spiral is an infinite grid whose upper-left square has number 1. Here are the first five layers of the spiral:\n\nYour task is to find out the number in row yy and column xx.\n\nInput\n\nThe first input line contains an integer tt: the number of tests.\n\nAfter this, there are tt lines, each containing integers yy and xx.\n\nOutput\n\nFor each test, print the number in row yy and column xx.\n\nConstraints\n\n1\u2264t\u22641051\u2264t\u2264105\n1\u2264y,x\u22641091\u2264y,x\u2264109\n\nExample\n\nInput:\n3\n2 3\n1 1\n4 2\n\nOutput:\n8\n1\n15 "], "Two Knights": ["https://cses.fi/problemset/task/1072", "\nCSES - Two Knights\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count for k=1,2,\u2026,nk=1,2,\u2026,n the number of ways two knights can be placed on a k\u00d7kk\u00d7k chessboard so that they do not attack each other.\n\nInput\n\nThe only input line contains an integer nn.\n\nOutput\n\nPrint nn integers: the results.\n\nConstraints\n\n1\u2264n\u2264100001\u2264n\u226410000\n\nExample\n\nInput:\n8\n\nOutput:\n0\n6\n28\n96\n252\n550\n1056\n1848 "], "Two Sets": ["https://cses.fi/problemset/task/1092", "\nCSES - Two Sets\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to divide the numbers 1,2,\u2026,n1,2,\u2026,n into two sets of equal sum.\n\nInput\n\nThe only input line contains an integer nn.\n\nOutput\n\nPrint \"YES\", if the division is possible, and \"NO\" otherwise.\n\nAfter this, if the division is possible, print an example of how to create the sets. First, print the number of elements in the first set followed by the elements themselves in a separate line, and then, print the second set in a similar way.\n\nConstraints\n\n 1\u2264n\u22641061\u2264n\u2264106\n\nExample 1\n\nInput:\n7\n\nOutput:\nYES\n4\n1 2 4 7\n3\n3 5 6\n\nExample 2\n\nInput:\n6\n\nOutput:\nNO "], "Bit Strings": ["https://cses.fi/problemset/task/1617", "\nCSES - Bit Strings\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to calculate the number of bit strings of length nn.\n\nFor example, if n=3n=3, the correct answer is 88, because the possible bit strings are 000, 001, 010, 011, 100, 101, 110, and 111.\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint the result modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\n3\n\nOutput:\n8 "], "Trailing Zeros": ["https://cses.fi/problemset/task/1618", "\nCSES - Trailing Zeros\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to calculate the number of trailing zeros in the factorial n!n!.\n\nFor example, 20!=243290200817664000020!=2432902008176640000 and it has 44 trailing zeros.\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint the number of trailing zeros in n!n!.\n\nConstraints\n\n1\u2264n\u22641091\u2264n\u2264109\n\nExample\n\nInput:\n20\n\nOutput:\n4 "], "Coin Piles": ["https://cses.fi/problemset/task/1754", "\nCSES - Coin Piles\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou have two coin piles containing aa and bb coins. On each move, you can either remove one coin from the left pile and two coins from the right pile, or two coins from the left pile and one coin from the right pile.\n\nYour task is to efficiently find out if you can empty both the piles.\n\nInput\n\nThe first input line has an integer tt: the number of tests.\n\nAfter this, there are tt lines, each of which has two integers aa and bb: the numbers of coins in the piles.\n\nOutput\n\nFor each test, print \"YES\" if you can empty the piles and \"NO\" otherwise.\n\nConstraints\n\n1\u2264t\u22641051\u2264t\u2264105\n0\u2264a,b\u22641090\u2264a,b\u2264109\n\nExample\n\nInput:\n3\n2 1\n2 2\n3 3\n\nOutput:\nYES\nNO\nYES "], "Palindrome Reorder": ["https://cses.fi/problemset/task/1755", "\nCSES - Palindrome Reorder\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string, your task is to reorder its letters in such a way that it becomes a palindrome (i.e., it reads the same forwards and backwards).\n\nInput\n\nThe only input line has a string of length nn consisting of characters A\u2013Z.\n\nOutput\n\nPrint a palindrome consisting of the characters of the original string. You may print any valid solution. If there are no solutions, print \"NO SOLUTION\".\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\nAAAACACBA\n\nOutput:\nAACABACAA "], "Gray Code": ["https://cses.fi/problemset/task/2205", "\nCSES - Gray Code\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA Gray code is a list of all 2n2n bit strings of length nn, where any two successive strings differ in exactly one bit (i.e., their Hamming distance is one).\n\nYour task is to create a Gray code for a given length nn.\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint 2n2n lines that describe the Gray code. You can print any valid solution.\n\nConstraints\n\n1\u2264n\u2264161\u2264n\u226416\n\nExample\n\nInput:\n2\n\nOutput:\n00\n01\n11\n10 "], "Tower of Hanoi": ["https://cses.fi/problemset/task/2165", "\nCSES - Tower of Hanoi\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThe Tower of Hanoi game consists of three stacks (left, middle and right) and nn round disks of different sizes. Initially, the left stack has all the disks, in increasing order of size from top to bottom. \n\nThe goal is to move all the disks to the right stack using the middle stack. On each move you can move the uppermost disk from a stack to another stack. In addition, it is not allowed to place a larger disk on a smaller disk.\n\nYour task is to find a solution that minimizes the number of moves.\n\nInput\n\nThe only input line has an integer nn: the number of disks.\n\nOutput\n\nFirst print an integer kk: the minimum number of moves.\n\nAfter this, print kk lines that describe the moves. Each line has two integers aa and bb: you move a disk from stack aa to stack bb.\n\nConstraints\n\n1\u2264n\u2264161\u2264n\u226416\n\nExample\n\nInput:\n2\n\nOutput:\n3\n1 2\n1 3\n2 3 "], "Creating Strings": ["https://cses.fi/problemset/task/1622", "\nCSES - Creating Strings\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string, your task is to generate all different strings that can be created using its characters.\n\nInput\n\nThe only input line has a string of length nn. Each character is between a\u2013z.\n\nOutput\n\nFirst print an integer kk: the number of strings. Then print kk lines: the strings in alphabetical order.\n\nConstraints\n\n1\u2264n\u226481\u2264n\u22648\n\nExample\n\nInput:\naabac\n\nOutput:\n20\naaabc\naaacb\naabac\naabca\naacab\naacba\nabaac\nabaca\nabcaa\nacaab\nacaba\nacbaa\nbaaac\nbaaca\nbacaa\nbcaaa\ncaaab\ncaaba\ncabaa\ncbaaa "], "Apple Division": ["https://cses.fi/problemset/task/1623", "\nCSES - Apple Division\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn apples with known weights. Your task is to divide the apples into two groups so that the difference between the weights of the groups is minimal.\n\nInput\n\nThe first input line has an integer nn: the number of apples.\n\nThe next line has nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn: the weight of each apple.\n\nOutput\n\nPrint one integer: the minimum difference between the weights of the groups.\n\nConstraints\n\n1\u2264n\u2264201\u2264n\u226420\n1\u2264pi\u22641091\u2264pi\u2264109\n\nExample\n\nInput:\n5\n3 2 7 4 1\n\nOutput:\n1\n\nExplanation: Group 1 has weights 2, 3 and 4 (total weight 9), and group 2 has weights 1 and 7 (total weight 8).    "], "Chessboard and Queens": ["https://cses.fi/problemset/task/1624", "\nCSES - Chessboard and Queens\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to place eight queens on a chessboard so that no two queens are attacking each other. As an additional challenge, each square is either free or reserved, and you can only place queens on the free squares. However, the reserved squares do not prevent queens from attacking each other.\n\nHow many possible ways are there to place the queens?\n\nInput\n\nThe input has eight lines, and each of them has eight characters. Each square is either free (.) or reserved (*).\n\nOutput\n\nPrint one integer: the number of ways you can place the queens.\n\nExample\n\nInput:\n........\n........\n..*.....\n........\n........\n.....**.\n...*....\n........\n\nOutput:\n65 "], "Digit Queries": ["https://cses.fi/problemset/task/2431", "\nCSES - Digit Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider an infinite string that consists of all positive integers in increasing order:\n\n12345678910111213141516171819202122232425...\n\nYour task is to process qq queries of the form: what is the digit at position kk in the string?\n\nInput\n\nThe first input line has an integer qq: the number of queries.\n\nAfter this, there are qq lines that describe the queries. Each line has an integer kk: a 11-indexed position in the string.\n\nOutput\n\nFor each query, print the corresponding digit.\n\nConstraints\n\n 1\u2264q\u226410001\u2264q\u22641000\n 1\u2264k\u226410181\u2264k\u22641018\n\nExample\n\nInput:\n3\n7\n19\n12\n\nOutput:\n7\n4\n1 "], "Grid Paths": ["https://cses.fi/problemset/task/1078", "\nCSES - Grid Paths\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider an n\u00d7nn\u00d7n grid whose top-left square is (1,1)(1,1) and bottom-right square is (n,n)(n,n).\n\nYour task is to move from the top-left square to the bottom-right square. On each step you may move one square right or down. In addition, there are mm traps in the grid. You cannot move to a square with a trap.\n\nWhat is the total number of possible paths?\n\nInput\n\nThe first input line contains two integers nn and mm: the size of the grid and the number of traps.\n\nAfter this, there are mm lines describing the traps. Each such line contains two integers yy and xx: the location of a trap.\n\nYou can assume that there are no traps in the top-left and bottom-right square.\n\nOutput\n\nPrint the number of paths modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n1\u2264m\u226410001\u2264m\u22641000\n1\u2264y,x\u2264n1\u2264y,x\u2264n\n\nExample\n\nInput:\n3 1\n2 2\n\nOutput:\n2 "], "Distinct Numbers": ["https://cses.fi/problemset/task/1621", "\nCSES - Distinct Numbers\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a list of nn integers, and your task is to calculate the number of distinct values in the list.\n\nInput\n\nThe first input line has an integer nn: the number of values.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn.\n\nOutput\n\nPrint one integers: the number of distinct values.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n5\n2 3 2 2 3\n\nOutput:\n2 "], "Apartments": ["https://cses.fi/problemset/task/1084", "\nCSES - Apartments\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn applicants and mm free apartments. Your task is to distribute the apartments so that as many applicants as possible will get an apartment.\n\nEach applicant has a desired apartment size, and they will accept any apartment whose size is close enough to the desired size.\n\nInput\n\nThe first input line has three integers nn, mm, and kk: the number of applicants, the number of apartments, and the maximum allowed difference.\n\nThe next line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an: the desired apartment size of each applicant. If the desired size of an applicant is xx, he or she will accept any apartment whose size is between x\u2212kx\u2212k and x+kx+k.\n\nThe last line contains mm integers b1,b2,\u2026,bmb1,b2,\u2026,bm: the size of each apartment.\n\nOutput\n\nPrint one integer: the number of applicants who will get an apartment.\n\nConstraints\n\n 1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n 0\u2264k\u22641090\u2264k\u2264109\n 1\u2264ai,bi\u22641091\u2264ai,bi\u2264109\n\nExample\n\nInput:\n4 3 5\n60 45 80 60\n30 60 75\n\nOutput:\n2 "], "Ferris Wheel": ["https://cses.fi/problemset/task/1090", "\nCSES - Ferris Wheel\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn children who want to go to a Ferris wheel, and your task is to find a gondola for each child.\n\nEach gondola may have one or two children in it, and in addition, the total weight in a gondola may not exceed xx. You know the weight of every child.\n\nWhat is the minimum number of gondolas needed for the children?\n\nInput\n\nThe first input line contains two integers nn and xx: the number of children and the maximum allowed weight.\n\nThe next line contains nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn: the weight of each child.\n\nOutput\n\nPrint one integer: the minimum number of gondolas.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264x\u22641091\u2264x\u2264109\n1\u2264pi\u2264x1\u2264pi\u2264x\n\nExample\n\nInput:\n4 10\n7 2 3 9\n\nOutput:\n3 "], "Concert Tickets": ["https://cses.fi/problemset/task/1091", "\nCSES - Concert Tickets\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn concert tickets available, each with a certain price. Then, mm customers arrive, one after another.\n\nEach customer announces the maximum price they are willing to pay for a ticket, and after this, they will get a ticket with the nearest possible price such that it does not exceed the maximum price.\n\nInput\n\nThe first input line contains integers nn and mm: the number of tickets and the number of customers.\n\nThe next line contains nn integers h1,h2,\u2026,hnh1,h2,\u2026,hn: the price of each ticket.\n\nThe last line contains mm integers t1,t2,\u2026,tmt1,t2,\u2026,tm: the maximum price for each customer in the order they arrive.\n\nOutput\n\nPrint, for each customer, the price that they will pay for their ticket. After this, the ticket cannot be purchased again.\n\nIf a customer cannot get any ticket, print \u22121\u22121.\n\nConstraints\n\n1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n1\u2264hi,ti\u22641091\u2264hi,ti\u2264109\n\nExample\n\nInput:\n5 3\n5 3 7 8 5\n4 8 3\n\nOutput:\n3\n8\n-1 "], "Restaurant Customers": ["https://cses.fi/problemset/task/1619", "\nCSES - Restaurant Customers\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given the arrival and leaving times of nn customers in a restaurant.\n\nWhat was the maximum number of customers in the restaurant at any time?\n\nInput\n\nThe first input line has an integer nn: the number of customers.\n\nAfter this, there are nn lines that describe the customers. Each line has two integers aa and bb: the arrival and leaving times of a customer.\n\nYou may assume that all arrival and leaving times are distinct.\n\nOutput\n\nPrint one integer: the maximum number of customers.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a<b\u22641091\u2264a<b\u2264109\n\nExample\n\nInput:\n3\n5 8\n2 4\n3 9\n\nOutput:\n2 "], "Movie Festival": ["https://cses.fi/problemset/task/1629", "\nCSES - Movie Festival\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nIn a movie festival nn movies will be shown. You know the starting and ending time of each movie. What is the maximum number of movies you can watch entirely?\n\nInput\n\nThe first input line has an integer nn: the number of movies.\n\nAfter this, there are nn lines that describe the movies. Each line has two integers aa and bb: the starting and ending times of a movie.\n\nOutput\n\nPrint one integer: the maximum number of movies.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a<b\u22641091\u2264a<b\u2264109\n\nExample\n\nInput:\n3\n3 5\n4 9\n5 8\n\nOutput:\n2 "], "Sum of Two Values": ["https://cses.fi/problemset/task/1640", "\nCSES - Sum of Two Values\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array of nn integers, and your task is to find two values (at distinct positions) whose sum is xx.\n\nInput\n\nThe first input line has two integers nn and xx: the array size and the target sum.\n\nThe second line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: the array values.\n\nOutput\n\nPrint two integers: the positions of the values. If there are several solutions, you may print any of them. If there are no solutions, print IMPOSSIBLE.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264x,ai\u22641091\u2264x,ai\u2264109\n\nExample\n\nInput:\n4 8\n2 7 5 1\n\nOutput:\n2 4 "], "Maximum Subarray Sum": ["https://cses.fi/problemset/task/1643", "\nCSES - Maximum Subarray Sum\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to find the maximum sum of values in a contiguous, nonempty subarray.\n\nInput\n\nThe first input line has an integer nn: the size of the array.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nOutput\n\nPrint one integer: the maximum subarray sum.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\u2212109\u2264xi\u2264109\u2212109\u2264xi\u2264109\n\nExample\n\nInput:\n8\n-1 3 -2 5 3 -5 2 2\n\nOutput:\n9 "], "Stick Lengths": ["https://cses.fi/problemset/task/1074", "\nCSES - Stick Lengths\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn sticks with some lengths. Your task is to modify the sticks so that each stick has the same length.\n\nYou can either lengthen and shorten each stick. Both operations cost xx where xx is the difference between the new and original length.\n\nWhat is the minimum total cost?\n\nInput\n\nThe first input line contains an integer nn: the number of sticks.\n\nThen there are nn integers: p1,p2,\u2026,pnp1,p2,\u2026,pn: the lengths of the sticks.\n\nOutput\n\nPrint one integer: the minimum total cost.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264pi\u22641091\u2264pi\u2264109\n\nExample\n\nInput:\n5\n2 3 1 5 2\n\nOutput:\n5 "], "Missing Coin Sum": ["https://cses.fi/problemset/task/2183", "\nCSES - Missing Coin Sum\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou have nn coins with positive integer values. What is the smallest sum you cannot create using a subset of the coins?\n\nInput\n\nThe first input line has an integer nn: the number of coins.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the value of each coin.\n\nOutput\n\nPrint one integer: the smallest coin sum.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n5\n2 9 1 2 7\n\nOutput:\n6 "], "Collecting Numbers": ["https://cses.fi/problemset/task/2216", "\nCSES - Collecting Numbers\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array that contains each number between 1\u2026n1\u2026n exactly once. Your task is to collect the numbers from 11 to nn in increasing order.\n\nOn each round, you go through the array from left to right and collect as many numbers as possible. What will be the total number of rounds?\n\nInput\n\nThe first line has an integer nn: the array size.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the numbers in the array.\n\nOutput\n\nPrint one integer: the number of rounds.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n5\n4 2 1 5 3\n\nOutput:\n3 "], "Collecting Numbers II": ["https://cses.fi/problemset/task/2217", "\nCSES - Collecting Numbers II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array that contains each number between 1\u2026n1\u2026n exactly once. Your task is to collect the numbers from 11 to nn in increasing order.\n\nOn each round, you go through the array from left to right and collect as many numbers as possible.\n\nGiven mm operations that swap two numbers in the array, your task is to report the number of rounds after each operation.\n\nInput\n\nThe first line has two integers nn and mm: the array size and the number of operations.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the numbers in the array.\n\nFinally, there are mm lines that describe the operations. Each line has two integers aa and bb: the numbers at positions aa and bb are swapped.\n\nOutput\n\nPrint mm integers: the number of rounds after each swap.\n\nConstraints\n\n1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3\n4 2 1 5 3\n2 3\n1 5\n2 3\n\nOutput:\n2\n3\n4 "], "Playlist": ["https://cses.fi/problemset/task/1141", "\nCSES - Playlist\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a playlist of a radio station since its establishment. The playlist has a total of nn songs.\n\nWhat is the longest sequence of successive songs where each song is unique?\n\nInput\n\nThe first input line contains an integer nn: the number of songs.\n\nThe next line has nn integers k1,k2,\u2026,knk1,k2,\u2026,kn: the id number of each song.\n\nOutput\n\nPrint the length of the longest sequence of unique songs.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264ki\u22641091\u2264ki\u2264109\n\nExample\n\nInput:\n8\n1 2 1 3 2 7 4 2\n\nOutput:\n5 "], "Towers": ["https://codeforces.com/problemset/problem/479/B", "B. Towerstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAs you know, all the kids in Berland love playing with cubes. Little Petya has n towers consisting of cubes of the same size. Tower with number i consists of ai cubes stacked one on top of the other. Petya defines the instability of a set of towers as a value equal to the difference between the heights of the highest and the lowest of the towers. For example, if Petya built five cube towers with heights (8, 3, 2, 6, 3), the instability of this set is equal to 6 (the highest tower has height 8, the lowest one has height 2). The boy wants the instability of his set of towers to be as low as possible. All he can do is to perform the following operation several times: take the top cube from some tower and put it on top of some other tower of his set. Please note that Petya would never put the cube on the same tower from which it was removed because he thinks it's a waste of time. Before going to school, the boy will have time to perform no more than k such operations. Petya does not want to be late for class, so you have to help him accomplish this task.InputThe first line contains two space-separated positive integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100, 1\u2009\u2264\u2009k\u2009\u2264\u20091000) \u2014 the number of towers in the given set and the maximum number of operations Petya can perform. The second line contains n space-separated positive integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009104) \u2014 the towers' initial heights.OutputIn the first line print two space-separated non-negative integers s and m (m\u2009\u2264\u2009k). The first number is the value of the minimum possible instability that can be obtained after performing at most k operations, the second number is the number of operations needed for that.In the next m lines print the description of each operation as two positive integers i and j, each of them lies within limits from 1 to n. They represent that Petya took the top cube from the i-th tower and put in on the j-th one (i\u2009\u2260\u2009j). Note that in the process of performing operations the heights of some towers can become equal to zero.If there are multiple correct sequences at which the minimum possible instability is achieved, you are allowed to print any of them.ExamplesInputCopy3 25 8 5OutputCopy0 22 12 3InputCopy3 42 2 4OutputCopy1 13 2InputCopy5 38 3 2 6 3OutputCopy3 31 31 21 3NoteIn the first sample you need to move the cubes two times, from the second tower to the third one and from the second one to the first one. Then the heights of the towers are all the same and equal to 6."], "Traffic Lights": ["https://cses.fi/problemset/task/1163", "\nCSES - Traffic Lights\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is a street of length xx whose positions are numbered 0,1,\u2026,x0,1,\u2026,x. Initially there are no traffic lights, but nn sets of traffic lights are added to the street one after another.\n\nYour task is to calculate the length of the longest passage without traffic lights after each addition.\n\nInput\n\nThe first input line contains two integers xx and nn: the length of the street and the number of sets of traffic lights.\n\nThen, the next line contains nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn: the position of each set of traffic lights. Each position is distinct.\n\nOutput\n\nPrint the length of the longest passage without traffic lights after each addition.\n\nConstraints\n\n1\u2264x\u22641091\u2264x\u2264109\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n0<pi<x0<pi<x\n\nExample\n\nInput:\n8 3\n3 6 2\n\nOutput:\n5 3 3 "], "Josephus Problem I": ["https://cses.fi/problemset/task/2162", "\nCSES - Josephus Problem I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a game where there are nn children (numbered 1,2,\u2026,n1,2,\u2026,n) in a circle. During the game, every second child is removed from the circle, until there are no children left. In which order will the children be removed?\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint nn integers: the removal order.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n7\n\nOutput:\n2 4 6 1 5 3 7 "], "Josephus Problem II": ["https://cses.fi/problemset/task/2163", "\nCSES - Josephus Problem II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a game where there are nn children (numbered 1,2,\u2026,n1,2,\u2026,n) in a circle. During the game, repeatedly kk children are skipped and one child is removed from the circle. In which order will the children be removed?\n\nInput\n\nThe only input line has two integers nn and kk.\n\nOutput\n\nPrint nn integers: the removal order.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n 0\u2264k\u22641090\u2264k\u2264109\n\nExample\n\nInput:\n7 2\n\nOutput:\n3 6 2 7 5 1 4 "], "Nested Ranges Check": ["https://cses.fi/problemset/task/2168", "\nCSES - Nested Ranges Check\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven nn ranges, your task is to determine for each range if it contains some other range and if some other range contains it.\n\nRange [a,b][a,b] contains range [c,d][c,d] if a\u2264ca\u2264c and d\u2264bd\u2264b.\n\nInput\n\nThe first input line has an integer nn: the number of ranges.\n\nAfter this, there are nn lines that describe the ranges. Each line has two integers xx and yy: the range is [x,y][x,y].\n\nYou may assume that no range appears more than once in the input.\n\nOutput\n\nFirst print a line that describes for each range (in the input order) if it contains some other range (1) or not (0).\n\nThen print a line that describes for each range (in the input order) if some other range contains it (1) or not (0).\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264x<y\u22641091\u2264x<y\u2264109\n\nExample\n\nInput:\n4\n1 6\n2 4\n4 8\n3 6\n\nOutput:\n1 0 0 0\n0 1 0 1 "], "Nested Ranges Count": ["https://cses.fi/problemset/task/2169", "\nCSES - Nested Ranges Count\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven nn ranges, your task is to count for each range how many other ranges it contains and how many other ranges contain it.\n\nRange [a,b][a,b] contains range [c,d][c,d] if a\u2264ca\u2264c and d\u2264bd\u2264b.\n\nInput\n\nThe first input line has an integer nn: the number of ranges.\n\nAfter this, there are nn lines that describe the ranges. Each line has two integers xx and yy: the range is [x,y][x,y].\n\nYou may assume that no range appears more than once in the input.\n\nOutput\n\nFirst print a line that describes for each range (in the input order) how many other ranges it contains.\n\nThen print a line that describes for each range (in the input order) how many other ranges contain it.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264x<y\u22641091\u2264x<y\u2264109\n\nExample\n\nInput:\n4\n1 6\n2 4\n4 8\n3 6\n\nOutput:\n2 0 0 0\n0 1 0 1 "], "Room Allocation": ["https://cses.fi/problemset/task/1164", "\nCSES - Room Allocation\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is a large hotel, and nn customers will arrive soon. Each customer wants to have a single room.\n\nYou know each customer's arrival and departure day. Two customers can stay in the same room if the departure day of the first customer is earlier than the arrival day of the second customer.\n\nWhat is the minimum number of rooms that are needed to accommodate all customers? And how can the rooms be allocated?\n\nInput\n\nThe first input line contains an integer nn: the number of customers.\n\nThen there are nn lines, each of which describes one customer. Each line has two integers aa and bb: the arrival and departure day.\n\nOutput\n\nPrint first an integer kk: the minimum number of rooms required.\n\nAfter that, print a line that contains the room number of each customer in the same order as in the input. The rooms are numbered 1,2,\u2026,k1,2,\u2026,k. You can print any valid solution.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a\u2264b\u22641091\u2264a\u2264b\u2264109\n\nExample\n\nInput:\n3\n1 2\n2 4\n4 4\n\nOutput:\n2\n1 2 1 "], "Factory Machines": ["https://cses.fi/problemset/task/1620", "\nCSES - Factory Machines\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA factory has nn machines which can be used to make products. Your goal is to make a total of tt products.\n\nFor each machine, you know the number of seconds it needs to make a single product. The machines can work simultaneously, and you can freely decide their schedule.\n\nWhat is the shortest time needed to make tt products?\n\nInput\n\nThe first input line has two integers nn and tt: the number of machines and products.\n\nThe next line has nn integers k1,k2,\u2026,knk1,k2,\u2026,kn: the time needed to make a product using each machine.\n\nOutput\n\nPrint one integer: the minimum time needed to make tt products.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264t\u22641091\u2264t\u2264109\n1\u2264ki\u22641091\u2264ki\u2264109\n\nExample\n\nInput:\n3 7\n3 2 5\n\nOutput:\n8\n\nExplanation: Machine 1 makes two products, machine 2 makes four products and machine 3 makes one product.    "], "Tasks and Deadlines": ["https://cses.fi/problemset/task/1630", "\nCSES - Tasks and Deadlines\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou have to process nn tasks. Each task has a duration and a deadline, and you will process the tasks in some order one after another. Your reward for a task is d\u2212fd\u2212f where dd is its deadline and ff is your finishing time. (The starting time is 00, and you have to process all tasks even if a task would yield negative reward.)\n\nWhat is your maximum reward if you act optimally?\n\nInput\n\nThe first input line has an integer nn: the number of tasks.\n\nAfter this, there are nn lines that describe the tasks. Each line has two integers aa and dd: the duration and deadline of the task.\n\nOutput\n\nPrint one integer: the maximum reward.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a,d\u22641061\u2264a,d\u2264106\n\nExample\n\nInput:\n3\n6 10\n8 15\n5 12\n\nOutput:\n2 "], "Reading Books": ["https://cses.fi/problemset/task/1631", "\nCSES - Reading Books\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn books, and Kotivalo and Justiina are going to read them all. For each book, you know the time it takes to read it.\n\nThey both read each book from beginning to end, and they cannot read a book at the same time. What is the minimum total time required?\n\nInput\n\nThe first input line has an integer nn: the number of books.\n\nThe second line has nn integers t1,t2,\u2026,tnt1,t2,\u2026,tn: the time required to read each book.\n\nOutput\n\nPrint one integer: the minimum total time.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264ti\u22641091\u2264ti\u2264109\n\nExample\n\nInput:\n3\n2 8 3\n\nOutput:\n16 "], "Sum of Three Values": ["https://cses.fi/problemset/task/1641", "\nCSES - Sum of Three Values\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array of nn integers, and your task is to find three values (at distinct positions) whose sum is xx.\n\nInput\n\nThe first input line has two integers nn and xx: the array size and the target sum.\n\nThe second line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: the array values.\n\nOutput\n\nPrint three integers: the positions of the values. If there are several solutions, you may print any of them. If there are no solutions, print IMPOSSIBLE.\n\nConstraints\n\n1\u2264n\u226450001\u2264n\u22645000\n1\u2264x,ai\u22641091\u2264x,ai\u2264109\n\nExample\n\nInput:\n4 8\n2 7 5 1\n\nOutput:\n1 3 4 "], "Sum of Four Values": ["https://cses.fi/problemset/task/1642", "\nCSES - Sum of Four Values\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array of nn integers, and your task is to find four values (at distinct positions) whose sum is xx.\n\nInput\n\nThe first input line has two integers nn and xx: the array size and the target sum.\n\nThe second line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: the array values.\n\nOutput\n\nPrint four integers: the positions of the values. If there are several solutions, you may print any of them. If there are no solutions, print IMPOSSIBLE.\n\nConstraints\n\n1\u2264n\u226410001\u2264n\u22641000\n1\u2264x,ai\u22641091\u2264x,ai\u2264109\n\nExample\n\nInput:\n8 15\n3 2 5 8 1 3 2 3\n\nOutput:\n2 4 6 7 "], "Nearest Smaller Values": ["https://cses.fi/problemset/task/1645", "\nCSES - Nearest Smaller Values\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to find for each array position the nearest position to its left having a smaller value.\n\nInput\n\nThe first input line has an integer nn: the size of the array.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nOutput\n\nPrint nn integers: for each array position the nearest position with a smaller value. If there is no such position, print 00.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n8\n2 5 1 4 8 3 2 5\n\nOutput:\n0 1 0 3 4 3 3 7 "], "Subarray Sums I": ["https://cses.fi/problemset/task/1660", "\nCSES - Subarray Sums I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn positive integers, your task is to count the number of subarrays having sum xx.\n\nInput\n\nThe first input line has two integers nn and xx: the size of the array and the target sum xx.\n\nThe next line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: the contents of the array.\n\nOutput\n\nPrint one integer: the required number of subarrays.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264x,ai\u22641091\u2264x,ai\u2264109\n\nExample\n\nInput:\n5 7\n2 4 1 2 7\n\nOutput:\n3 "], "Subarray Sums II": ["https://cses.fi/problemset/task/1661", "\nCSES - Subarray Sums II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to count the number of subarrays having sum xx.\n\nInput\n\nThe first input line has two integers nn and xx: the size of the array and the target sum xx.\n\nThe next line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: the contents of the array.\n\nOutput\n\nPrint one integer: the required number of subarrays.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\u2212109\u2264x,ai\u2264109\u2212109\u2264x,ai\u2264109\n\nExample\n\nInput:\n5 7\n2 -1 3 5 -2\n\nOutput:\n2 "], "Subarray Divisibility": ["https://cses.fi/problemset/task/1662", "\nCSES - Subarray Divisibility\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to count the number of subarrays where the sum of values is divisible by nn.\n\nInput\n\nThe first input line has an integer nn: the size of the array.\n\nThe next line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: the contents of the array.\n\nOutput\n\nPrint one integer: the required number of subarrays.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109\n\nExample\n\nInput:\n5\n3 1 2 7 4\n\nOutput:\n1 "], "Subarray Distinct Values": ["https://cses.fi/problemset/task/2428", "\nCSES - Subarray Distinct Values\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to calculate the number of subarrays that have at most kk distinct values.\n\nInput\n\nThe first input line has two integers nn and kk.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint one integer: the number of subarrays.\n\nConstraints\n\n 1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105\n 1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n5 2\n1 2 3 1 1\n\nOutput:\n10 "], "Array Division": ["https://cses.fi/problemset/task/1085", "\nCSES - Array Division\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array containing nn positive integers.\n\nYour task is to divide the array into kk subarrays so that the maximum sum in a subarray is as small as possible.\n\nInput\n\nThe first input line contains two integers nn and kk: the size of the array and the number of subarrays in the division.\n\nThe next line contains nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint one integer: the maximum sum in a subarray in the optimal division.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264k\u2264n1\u2264k\u2264n\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n5 3\n2 4 7 3 5\n\nOutput:\n8\n\nExplanation: An optimal division is [2,4],[7],[3,5][2,4],[7],[3,5] where the sums of the subarrays are 6,7,86,7,8. The largest sum is the last sum 88.    "], "Sliding Median": ["https://cses.fi/problemset/task/1076", "\nCSES - Sliding Median\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array of nn integers. Your task is to calculate the median of each window of kk elements, from left to right.\n\nThe median is the middle element when the elements are sorted. If the number of elements is even, there are two possible medians and we assume that the median is the smaller of them.\n\nInput\n\nThe first input line contains two integers nn and kk: the number of elements and the size of the window.\n\nThen there are nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint n\u2212k+1n\u2212k+1 values: the medians.\n\nConstraints\n\n1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n8 3\n2 4 3 5 8 1 2 1\n\nOutput:\n3 4 5 5 2 1 "], "Sliding Cost": ["https://cses.fi/problemset/task/1077", "\nCSES - Sliding Cost\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array of nn integers. Your task is to calculate for each window of kk elements, from left to right, the minimum total cost of making all elements equal.\n\nYou can increase or decrease each element with cost xx where xx is the difference between the new and the original value. The total cost is the sum of such costs.\n\nInput\n\nThe first input line contains two integers nn and kk: the number of elements and the size of the window.\n\nThen there are nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nOutput n\u2212k+1n\u2212k+1 values: the costs.\n\nConstraints\n\n1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n8 3\n2 4 3 5 8 1 2 1\n\nOutput:\n2 2 5 7 7 1 "], "Movie Festival II": ["https://cses.fi/problemset/task/1632", "\nCSES - Movie Festival II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nIn a movie festival, nn movies will be shown. Syrj\u00e4l\u00e4's movie club consists of kk members, who will be all attending the festival.\n\nYou know the starting and ending time of each movie. What is the maximum total number of movies the club members can watch entirely if they act optimally?\n\nInput\n\nThe first input line has two integers nn and kk: the number of movies and club members.\n\nAfter this, there are nn lines that describe the movies. Each line has two integers aa and bb: the starting and ending time of a movie.\n\nOutput\n\nPrint one integer: the maximum total number of movies.\n\nConstraints\n\n1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105\n1\u2264a<b\u22641091\u2264a<b\u2264109\n\nExample\n\nInput:\n5 2\n1 5\n8 10\n3 6\n2 5\n6 9\n\nOutput:\n4 "], "Maximum Subarray Sum II": ["https://cses.fi/problemset/task/1644", "\nCSES - Maximum Subarray Sum II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to find the maximum sum of values in a contiguous subarray with length between aa and bb.\n\nInput\n\nThe first input line has three integers nn, aa and bb: the size of the array and the minimum and maximum subarray length.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nOutput\n\nPrint one integer: the maximum subarray sum.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\u2212109\u2264xi\u2264109\u2212109\u2264xi\u2264109\n\nExample\n\nInput:\n8 1 2\n-1 3 -2 5 3 -5 2 2\n\nOutput:\n8 "], "Dice Combinations": ["https://cses.fi/problemset/task/1633", "\nCSES - Dice Combinations\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of ways to construct sum nn by throwing a dice one or more times. Each throw produces an outcome between 11 and  66.\n\nFor example, if n=3n=3, there are 44 ways:\n 1+1+11+1+1\n 1+21+2\n 2+12+1\n 33\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\n3\n\nOutput:\n4 "], "Minimizing Coins": ["https://cses.fi/problemset/task/1634", "\nCSES - Minimizing Coins\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a money system consisting of nn coins. Each coin has a positive integer value. Your task is to produce a sum of money xx using the available coins in such a way that the number of coins is minimal.\n\nFor example, if the coins are {1,5,7}{1,5,7} and the desired sum is 1111, an optimal solution is 5+5+15+5+1 which requires 33 coins.\n\nInput\n\nThe first input line has two integers nn and xx: the number of coins and the desired sum of money.\n\nThe second line has nn distinct integers c1,c2,\u2026,cnc1,c2,\u2026,cn: the value of each coin.\n\nOutput\n\nPrint one integer: the minimum number of coins. If it is not possible to produce the desired sum, print \u22121\u22121.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264x\u22641061\u2264x\u2264106\n1\u2264ci\u22641061\u2264ci\u2264106\n\nExample\n\nInput:\n3 11\n1 5 7\n\nOutput:\n3 "], "Coin Combinations I": ["https://cses.fi/problemset/task/1635", "\nCSES - Coin Combinations I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a money system consisting of nn coins. Each coin has a positive integer value. Your task is to calculate the number of distinct ways you can produce a money sum xx using the available coins.\n\nFor example, if the coins are {2,3,5}{2,3,5} and the desired sum is 99, there are 88 ways:\n 2+2+52+2+5\n 2+5+22+5+2\n 5+2+25+2+2\n 3+3+33+3+3\n 2+2+2+32+2+2+3\n 2+2+3+22+2+3+2\n 2+3+2+22+3+2+2\n 3+2+2+23+2+2+2\n\nInput\n\nThe first input line has two integers nn and xx: the number of coins and the desired sum of money.\n\nThe second line has nn distinct integers c1,c2,\u2026,cnc1,c2,\u2026,cn: the value of each coin.\n\nOutput\n\nPrint one integer: the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264x\u22641061\u2264x\u2264106\n1\u2264ci\u22641061\u2264ci\u2264106\n\nExample\n\nInput:\n3 9\n2 3 5\n\nOutput:\n8 "], "Coin Combinations II": ["https://cses.fi/problemset/task/1636", "\nCSES - Coin Combinations II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a money system consisting of nn coins. Each coin has a positive integer value. Your task is to calculate the number of distinct ordered ways you can produce a money sum xx using the available coins.\n\nFor example, if the coins are {2,3,5}{2,3,5} and the desired sum is 99, there are 33 ways:\n 2+2+52+2+5\n 3+3+33+3+3\n 2+2+2+32+2+2+3\n\nInput\n\nThe first input line has two integers nn and xx: the number of coins and the desired sum of money.\n\nThe second line has nn distinct integers c1,c2,\u2026,cnc1,c2,\u2026,cn: the value of each coin.\n\nOutput\n\nPrint one integer: the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264x\u22641061\u2264x\u2264106\n1\u2264ci\u22641061\u2264ci\u2264106\n\nExample\n\nInput:\n3 9\n2 3 5\n\nOutput:\n3 "], "Removing Digits": ["https://cses.fi/problemset/task/1637", "\nCSES - Removing Digits\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an integer nn. On each step, you may subtract one of the digits from the number.\n\nHow many steps are required to make the number equal to 00?\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint one integer: the minimum number of steps.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\n27\n\nOutput:\n5\n\nExplanation: An optimal solution is 27\u219220\u219218\u219210\u21929\u2192027\u219220\u219218\u219210\u21929\u21920.    "], "Book Shop": ["https://cses.fi/problemset/task/1158", "\nCSES - Book Shop\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are in a book shop which sells nn different books. You know the price and number of pages of each book.\n\nYou have decided that the total price of your purchases will be at most xx. What is the maximum number of pages you can buy? You can buy each book at most once.\n\nInput\n\nThe first input line contains two integers nn and xx: the number of books and the maximum total price.\n\nThe next line contains nn integers h1,h2,\u2026,hnh1,h2,\u2026,hn: the price of each book.\n\nThe last line contains nn integers s1,s2,\u2026,sns1,s2,\u2026,sn: the number of pages of each book.\n\nOutput\n\nPrint one integer: the maximum number of pages.\n\nConstraints\n\n1\u2264n\u226410001\u2264n\u22641000\n1\u2264x\u22641051\u2264x\u2264105\n1\u2264hi,si\u226410001\u2264hi,si\u22641000\n\nExample\n\nInput:\n4 10\n4 8 5 3\n5 12 8 1\n\nOutput:\n13\n\nExplanation: You can buy books 1 and 3. Their price is 4+5=94+5=9 and the number of pages is 5+8=135+8=13.    "], "Array Description": ["https://cses.fi/problemset/task/1746", "\nCSES - Array Description\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou know that an array has nn integers between 11 and  mm, and the absolute difference between two adjacent values is at most 11.\n\nGiven a description of the array where some values may be unknown, your task is to count the number of arrays that match the description.\n\nInput\n\nThe first input line has two integers nn and mm: the array size and the upper bound for each value.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array. Value 00 denotes an unknown value.\n\nOutput\n\nPrint one integer: the number of arrays modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22641001\u2264m\u2264100\n0\u2264xi\u2264m0\u2264xi\u2264m\n\nExample\n\nInput:\n3 5\n2 0 2\n\nOutput:\n3\n\nExplanation: The arrays [2,1,2][2,1,2], [2,2,2][2,2,2] and [2,3,2][2,3,2] match the description.    "], "Counting Towers": ["https://cses.fi/problemset/task/2413", "\nCSES - Counting Towers\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to build a tower whose width is 22 and height is nn. You have an unlimited supply of blocks whose width and height are integers.\n\nFor example, here are some possible solutions for n=6n=6:\n\nGiven nn, how many different towers can you build? Mirrored and rotated towers are counted separately if they look different.\n\nInput\n\nThe first input line contains an integer tt: the number of tests.\n\nAfter this, there are tt lines, and each line contains an integer nn: the height of the tower.\n\nOutput\n\nFor each test, print the number of towers modulo 109+7109+7.\n\nConstraints\n\n1\u2264t\u22641001\u2264t\u2264100\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\n3\n2\n6\n1337\n\nOutput:\n8\n2864\n640403945 "], "Edit Distance": ["https://cses.fi/problemset/task/1639", "\nCSES - Edit Distance\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThe edit distance between two strings is the minimum number of operations required to transform one string into the other.\n\nThe allowed operations are:\nAdd one character to the string.\nRemove one character from the string.\nReplace one character in the string.\n\nFor example, the edit distance between LOVE and MOVIE is 2, because you can first replace L with M, and then add I.\n\nYour task is to calculate the edit distance between two strings.\n\nInput\n\nThe first input line has a string that contains nn characters between A\u2013Z.\n\nThe second input line has a string that contains mm characters between A\u2013Z.\n\nOutput\n\nPrint one integer: the edit distance between the strings.\n\nConstraints\n\n1\u2264n,m\u226450001\u2264n,m\u22645000\n\nExample\n\nInput:\nLOVE\nMOVIE\n\nOutput:\n2 "], "Rectangle Cutting": ["https://cses.fi/problemset/task/1744", "\nCSES - Rectangle Cutting\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an a\u00d7ba\u00d7b rectangle, your task is to cut it into squares. On each move you can select a rectangle and cut it into two rectangles in such a way that all side lengths remain integers. What is the minimum possible number of moves?\n\nInput\n\nThe only input line has two integers aa and bb.\n\nOutput\n\nPrint one integer: the minimum number of moves.\n\nConstraints\n\n1\u2264a,b\u22645001\u2264a,b\u2264500\n\nExample\n\nInput:\n3 5\n\nOutput:\n3 "], "Money Sums": ["https://cses.fi/problemset/task/1745", "\nCSES - Money Sums\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou have nn coins with certain values. Your task is to find all money sums you can create using these coins.\n\nInput\n\nThe first input line has an integer nn: the number of coins.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the values of the coins.\n\nOutput\n\nFirst print an integer kk: the number of distinct money sums. After this, print all possible sums in increasing order.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264xi\u226410001\u2264xi\u22641000\n\nExample\n\nInput:\n4\n4 2 5 2\n\nOutput:\n9\n2 4 5 6 7 8 9 11 13 "], "Removal Game": ["https://cses.fi/problemset/task/1097", "\nCSES - Removal Game\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is a list of nn numbers and two players who move alternately. On each move, a player removes either the first or last number from the list, and their score increases by that number. Both players try to maximize their scores.\n\nWhat is the maximum possible score for the first player when both players play optimally?\n\nInput\n\nThe first input line contains an integer nn: the size of the list.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the list.\n\nOutput\n\nPrint the maximum possible score for the first player.\n\nConstraints\n\n1\u2264n\u226450001\u2264n\u22645000\n\u2212109\u2264xi\u2264109\u2212109\u2264xi\u2264109\n\nExample\n\nInput:\n4\n4 5 1 3\n\nOutput:\n8 "], "Two Sets II": ["https://cses.fi/problemset/task/1093", "\nCSES - Two Sets II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of ways numbers 1,2,\u2026,n1,2,\u2026,n can be divided into two sets of equal sum.\n\nFor example, if n=7n=7, there are four solutions:\n\n{1,3,4,6}{1,3,4,6} and {2,5,7}{2,5,7}\n{1,2,5,6}{1,2,5,6} and {3,4,7}{3,4,7}\n{1,2,4,7}{1,2,4,7} and {3,5,6}{3,5,6}\n{1,6,7}{1,6,7} and {2,3,4,5}{2,3,4,5}\n\nInput\n\nThe only input line contains an integer nn.\n\nOutput\n\nPrint the answer modulo 109+7109+7.\n\nConstraints\n\n 1\u2264n\u22645001\u2264n\u2264500\n\nExample\n\nInput:\n7\n\nOutput:\n4 "], "Increasing Subsequence": ["https://cses.fi/problemset/task/1145", "\nCSES - Increasing Subsequence\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array containing nn integers. Your task is to determine the longest increasing subsequence in the array, i.e., the longest subsequence where every element is larger than the previous one.\n\nA subsequence is a sequence that can be derived from the array by deleting some elements without changing the order of the remaining elements. \n\nInput\n\nThe first line contains an integer nn: the size of the array.\n\nAfter this there are nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint the length of the longest increasing subsequence.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n8\n7 3 5 3 6 2 9 8\n\nOutput:\n4 "], "Projects": ["https://cses.fi/problemset/task/1140", "\nCSES - Projects\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn projects you can attend. For each project, you know its starting and ending days and the amount of money you would get as reward. You can only attend one project during a day.\n\nWhat is the maximum amount of money you can earn?\n\nInput\n\nThe first input line contains an integer nn: the number of projects.\n\nAfter this, there are nn lines. Each such line has three integers aiai, bibi, and pipi: the starting day, the ending day, and the reward.\n\nOutput\n\nPrint one integer: the maximum amount of money you can earn.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264ai\u2264bi\u22641091\u2264ai\u2264bi\u2264109\n1\u2264pi\u22641091\u2264pi\u2264109\n\nExample\n\nInput:\n4\n2 4 4\n3 6 6\n6 8 2\n5 7 3\n\nOutput:\n7 "], "Elevator Rides": ["https://cses.fi/problemset/task/1653", "\nCSES - Elevator Rides\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn people who want to get to the top of a building which has only one elevator. You know the weight of each person and the maximum allowed weight in the elevator. What is the minimum number of elevator rides?\n\nInput\n\nThe first input line has two integers nn and xx: the number of people and the maximum allowed weight in the elevator.\n\nThe second line has nn integers w1,w2,\u2026,wnw1,w2,\u2026,wn: the weight of each person.\n\nOutput\n\nPrint one integer: the minimum number of rides.\n\nConstraints\n\n1\u2264n\u2264201\u2264n\u226420\n1\u2264x\u22641091\u2264x\u2264109\n1\u2264wi\u2264x1\u2264wi\u2264x\n\nExample\n\nInput:\n4 10\n4 8 6 1\n\nOutput:\n2 "], "Counting Tilings": ["https://cses.fi/problemset/task/2181", "\nCSES - Counting Tilings\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of ways you can fill an n\u00d7mn\u00d7m grid using 1\u00d721\u00d72 and 2\u00d712\u00d71 tiles.\n\nInput\n\nThe only input line has two integers nn and mm.\n\nOutput\n\nPrint one integer: the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u2264101\u2264n\u226410\n1\u2264m\u226410001\u2264m\u22641000\n\nExample\n\nInput:\n4 7\n\nOutput:\n781 "], "Counting Numbers": ["https://cses.fi/problemset/task/2220", "\nCSES - Counting Numbers\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of integers between aa and bb where no two adjacent digits are the same.\n\nInput\n\nThe only input line has two integers aa and bb.\n\nOutput\n\nPrint one integer: the answer to the problem.\n\nConstraints\n\n0\u2264a\u2264b\u226410180\u2264a\u2264b\u22641018\n\nExample\n\nInput:\n123 321\n\nOutput:\n171 "], "Counting Rooms": ["https://cses.fi/problemset/task/1192", "\nCSES - Counting Rooms\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a map of a building, and your task is to count the number of its rooms. The size of the map is n\u00d7mn\u00d7m squares, and each square is either floor or wall. You can walk left, right, up, and down through the floor squares.\n\nInput\n\nThe first input line has two integers nn and mm: the height and width of the map.\n\nThen there are nn lines of mm characters describing the map. Each character is either . (floor) or # (wall).\n\nOutput\n\nPrint one integer: the number of rooms.\n\nConstraints\n\n1\u2264n,m\u226410001\u2264n,m\u22641000\n\nExample\n\nInput:\n5 8\n########\n#..#...#\n####.#.#\n#..#...#\n########\n\nOutput:\n3 "], "Labyrinth": ["https://cses.fi/problemset/task/1193", "\nCSES - Labyrinth\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a map of a labyrinth, and your task is to find a path from start to end. You can walk left, right, up and down.\n\nInput\n\nThe first input line has two integers nn and mm: the height and width of the map.\n\nThen there are nn lines of mm characters describing the labyrinth. Each character is . (floor), # (wall), A (start), or B (end). There is exactly one A and one B in the input.\n\nOutput\n\nFirst print \"YES\", if there is a path, and \"NO\" otherwise.\n\nIf there is a path, print the length of the shortest such path and its description as a string consisting of characters L (left), R (right), U (up), and D (down). You can print any valid solution.\n\nConstraints\n\n1\u2264n,m\u226410001\u2264n,m\u22641000\n\nExample\n\nInput:\n5 8\n########\n#.A#...#\n#.##.#B#\n#......#\n########\n\nOutput:\nYES\n9\nLDDRRRRRU "], "Building Roads": ["https://cses.fi/problemset/task/1666", "\nCSES - Building Roads\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nByteland has nn cities, and mm roads between them. The goal is to construct new roads so that there is a route between any two cities.\n\nYour task is to find out the minimum number of roads required, and also determine which roads should be built.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and roads. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter that, there are mm lines describing the roads. Each line has two integers aa and bb: there is a road between those cities.\n\nA road always connects two different cities, and there is at most one road between any two cities.\n\nOutput\n\nFirst print an integer kk: the number of required roads.\n\nThen, print kk lines that describe the new roads. You can print any valid solution.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 2\n1 2\n3 4\n\nOutput:\n1\n2 3 "], "Message Route": ["https://cses.fi/problemset/task/1667", "\nCSES - Message Route\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nSyrj\u00e4l\u00e4's network has nn computers and mm connections. Your task is to find out if Uolevi can send a message to Maija, and if it is possible, what is the minimum number of computers on such a route.\n\nInput\n\nThe first input line has two integers nn and mm: the number of computers and connections. The computers are numbered 1,2,\u2026,n1,2,\u2026,n. Uolevi's computer is 11 and Maija's computer is nn.\n\nThen, there are mm lines describing the connections. Each line has two integers aa and bb: there is a connection between those computers.\n\nEvery connection is between two different computers, and there is at most one connection between any two computers.\n\nOutput\n\nIf it is possible to send a message, first print kk: the minimum number of computers on a valid route. After this, print an example of such a route. You can print any valid solution.\n\nIf there are no routes, print \"IMPOSSIBLE\".\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 5\n1 2\n1 3\n1 4\n2 3\n5 4\n\nOutput:\n3\n1 4 5 "], "Building Teams": ["https://cses.fi/problemset/task/1668", "\nCSES - Building Teams\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn pupils in Uolevi's class, and mm friendships between them. Your task is to divide the pupils into two teams in such a way that no two pupils in a team are friends. You can freely choose the sizes of the teams.\n\nInput\n\nThe first input line has two integers nn and mm: the number of pupils and friendships. The pupils are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the friendships. Each line has two integers aa and bb: pupils aa and bb are friends.\n\nEvery friendship is between two different pupils. You can assume that there is at most one friendship between any two pupils.\n\nOutput\n\nPrint an example of how to build the teams. For each pupil, print \"1\" or \"2\" depending on to which team the pupil will be assigned. You can print any valid team.\n\nIf there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3\n1 2\n1 3\n4 5\n\nOutput:\n1 2 2 1 2 "], "Round Trip": ["https://cses.fi/problemset/task/1669", "\nCSES - Round Trip\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nByteland has nn cities and mm roads between them. Your task is to design a round trip that begins in a city, goes through two or more other cities, and finally returns to the starting city. Every intermediate city on the route has to be distinct.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and roads. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the roads. Each line has two integers aa and bb: there is a road between those cities.\n\nEvery road is between two different cities, and there is at most one road between any two cities.\n\nOutput\n\nFirst print an integer kk: the number of cities on the route. Then print kk cities in the order they will be visited. You can print any valid solution.\n\nIf there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 6\n1 3\n1 2\n5 3\n1 5\n2 4\n4 5\n\nOutput:\n4\n3 5 1 3 "], "Monsters": ["https://cses.fi/problemset/task/1194", "\nCSES - Monsters\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou and some monsters are in a labyrinth. When taking a step to some direction in the labyrinth, each monster may simultaneously take one as well. Your goal is to reach one of the boundary squares without ever sharing a square with a monster.\n\nYour task is to find out if your goal is possible, and if it is, print a path that you can follow. Your plan has to work in any situation; even if the monsters know your path beforehand.\n\nInput\n\nThe first input line has two integers nn and mm: the height and width of the map.\n\nAfter this there are nn lines of mm characters describing the map. Each character is . (floor), # (wall), A (start), or M (monster). There is exactly one A in the input.\n\nOutput\n\nFirst print \"YES\" if your goal is possible, and \"NO\" otherwise.\n\nIf your goal is possible, also print an example of a valid path (the length of the path and its description using characters D, U, L, and R). You can print any path, as long as its length is at most n\u22c5mn\u22c5m steps.\n\nConstraints\n\n1\u2264n,m\u226410001\u2264n,m\u22641000\n\nExample\n\nInput:\n5 8\n########\n#M..A..#\n#.#.M#.#\n#M#..#..\n#.######\n\nOutput:\nYES\n5\nRRDDR "], "Shortest Routes I": ["https://cses.fi/problemset/task/1671", "\nCSES - Shortest Routes I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm flight connections between them. Your task is to determine the length of the shortest route from Syrj\u00e4l\u00e4 to every city.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and flight connections. The cities are numbered 1,2,\u2026,n1,2,\u2026,n, and city 11 is Syrj\u00e4l\u00e4.\n\nAfter that, there are mm lines describing the flight connections. Each line has three integers aa, bb and cc: a flight begins at city aa, ends at city bb, and its length is cc. Each flight is a one-way flight.\n\nYou can assume that it is possible to travel from Syrj\u00e4l\u00e4 to all other cities.\n\nOutput\n\nPrint nn integers: the shortest route lengths from Syrj\u00e4l\u00e4 to cities 1,2,\u2026,n1,2,\u2026,n.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264c\u22641091\u2264c\u2264109\n\nExample\n\nInput:\n3 4\n1 2 6\n1 3 2\n3 2 3\n1 3 4\n\nOutput:\n0 5 2 "], "Shortest Routes II": ["https://cses.fi/problemset/task/1672", "\nCSES - Shortest Routes II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm roads between them. Your task is to process qq queries where you have to determine the length of the shortest route between two given cities.\n\nInput\n\nThe first input line has three integers nn, mm and qq: the number of cities, roads, and queries.\n\nThen, there are mm lines describing the roads. Each line has three integers aa, bb and cc: there is a road between cities aa and bb whose length is cc. All roads are two-way roads.\n\nFinally, there are qq lines describing the queries. Each line has two integers aa and bb: determine the length of the shortest route between cities aa and bb.\n\nOutput\n\nPrint the length of the shortest route for each query. If there is no route, print \u22121\u22121 instead.\n\nConstraints\n\n1\u2264n\u22645001\u2264n\u2264500\n1\u2264m\u2264n21\u2264m\u2264n2\n1\u2264q\u22641051\u2264q\u2264105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264c\u22641091\u2264c\u2264109\n\nExample\n\nInput:\n4 3 5\n1 2 5\n1 3 9\n2 3 3\n1 2\n2 1\n1 3\n1 4\n3 2\n\nOutput:\n5\n5\n8\n-1\n3 "], "High Score": ["https://cses.fi/problemset/task/1673", "\nCSES - High Score\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou play a game consisting of nn rooms and mm tunnels. Your initial score is 00, and each tunnel increases your score by xx where xx may be both positive or negative. You may go through a tunnel several times.\n\nYour task is to walk from room 11 to room nn. What is the maximum score you can get?\n\nInput\n\nThe first input line has two integers nn and mm: the number of rooms and tunnels. The rooms are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the tunnels. Each line has three integers aa, bb and xx: the tunnel starts at room aa, ends at room bb, and it increases your score by xx. All tunnels are one-way tunnels.\n\nYou can assume that it is possible to get from room 11 to room nn.\n\nOutput\n\nPrint one integer: the maximum score you can get. However, if you can get an arbitrarily large score, print \u22121\u22121.\n\nConstraints\n\n1\u2264n\u226425001\u2264n\u22642500\n1\u2264m\u226450001\u2264m\u22645000\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\u2212109\u2264x\u2264109\u2212109\u2264x\u2264109\n\nExample\n\nInput:\n4 5\n1 2 3\n2 4 -1\n1 3 -2\n3 4 7\n1 4 4\n\nOutput:\n5 "], "Flight Discount": ["https://cses.fi/problemset/task/1195", "\nCSES - Flight Discount\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to find a minimum-price flight route from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4. You have one discount coupon, using which you can halve the price of any single flight during the route. However, you can only use the coupon once.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and flight connections. The cities are numbered 1,2,\u2026,n1,2,\u2026,n. City 1 is Syrj\u00e4l\u00e4, and city nn is Mets\u00e4l\u00e4.\n\nAfter this there are mm lines describing the flights. Each line has three integers aa, bb, and cc: a flight begins at city aa, ends at city bb, and its price is cc. Each flight is unidirectional.\n\nYou can assume that it is always possible to get from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4.\n\nOutput\n\nPrint one integer: the price of the cheapest route from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4.\n\nWhen you use the discount coupon for a flight whose price is xx, its price becomes \u230ax/2\u230b\u230ax/2\u230b (it is rounded down to an integer).\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264c\u22641091\u2264c\u2264109\n\nExample\n\nInput:\n3 4\n1 2 3\n2 3 1\n1 3 7\n2 1 5\n\nOutput:\n2 "], "Cycle Finding": ["https://cses.fi/problemset/task/1197", "\nCSES - Cycle Finding\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a directed graph, and your task is to find out if it contains a negative cycle, and also give an example of such a cycle.\n\nInput\n\nThe first input line has two integers nn and mm: the number of nodes and edges. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, the input has mm lines describing the edges. Each line has three integers aa, bb, and cc: there is an edge from node aa to node bb whose length is cc.\n\nOutput\n\nIf the graph contains a negative cycle, print first \"YES\", and then the nodes in the cycle in their correct order. If there are several negative cycles, you can print any of them. If there are no negative cycles, print \"NO\".\n\nConstraints\n\n1\u2264n\u226425001\u2264n\u22642500\n1\u2264m\u226450001\u2264m\u22645000\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\u2212109\u2264c\u2264109\u2212109\u2264c\u2264109\n\nExample\n\nInput:\n4 5\n1 2 1\n2 4 1\n3 1 1\n4 1 -3\n4 3 -2\n\nOutput:\nYES\n1 2 4 1 "], "Flight Routes": ["https://cses.fi/problemset/task/1196", "\nCSES - Flight Routes\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to find the kk shortest flight routes from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4. A route can visit the same city several times.\n\nNote that there can be several routes with the same price and each of them should be considered (see the example).\n\nInput\n\nThe first input line has three integers nn, mm, and kk: the number of cities, the number of flights, and the parameter kk. The cities are numbered 1,2,\u2026,n1,2,\u2026,n. City 1 is Syrj\u00e4l\u00e4, and city nn is Mets\u00e4l\u00e4.\n\nAfter this, the input has mm lines describing the flights. Each line has three integers aa, bb, and cc: a flight begins at city aa, ends at city bb, and its price is cc. All flights are one-way flights.\n\nYou may assume that there are at least kk distinct routes from Syrj\u00e4l\u00e4 to Mets\u00e4l\u00e4.\n\nOutput\n\nPrint kk integers: the prices of the kk cheapest routes sorted according to their prices.\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264c\u22641091\u2264c\u2264109\n1\u2264k\u2264101\u2264k\u226410\n\nExample\n\nInput:\n4 6 3\n1 2 1\n1 3 3\n2 3 2\n2 4 6\n3 2 8\n3 4 1\n\nOutput:\n4 4 7\n\nExplanation: The cheapest routes are 1\u21923\u219241\u21923\u21924 (price 44), 1\u21922\u21923\u219241\u21922\u21923\u21924 (price 44) and 1\u21922\u219241\u21922\u21924 (price 77).    "], "Round Trip II": ["https://cses.fi/problemset/task/1678", "\nCSES - Round Trip II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nByteland has nn cities and mm flight connections. Your task is to design a round trip that begins in a city, goes through one or more other cities, and finally returns to the starting city. Every intermediate city on the route has to be distinct.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and flights. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the flights. Each line has two integers aa and bb: there is a flight connection from city aa to city bb. All connections are one-way flights from a city to another city.\n\nOutput\n\nFirst print an integer kk: the number of cities on the route. Then print kk cities in the order they will be visited. You can print any valid solution.\n\nIf there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 5\n1 3\n2 1\n2 4\n3 2\n3 4\n\nOutput:\n4\n2 1 3 2 "], "Course Schedule": ["https://cses.fi/problemset/task/1679", "\nCSES - Course Schedule\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou have to complete nn courses. There are mm requirements of the form \"course aa has to be completed before course bb\". Your task is to find an order in which you can complete the courses.\n\nInput\n\nThe first input line has two integers nn and mm: the number of courses and requirements. The courses are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the requirements. Each line has two integers aa and bb: course aa has to be completed before course bb.\n\nOutput\n\nPrint an order in which you can complete the courses. You can print any valid order that includes all the courses.\n\nIf there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3\n1 2\n3 1\n4 5\n\nOutput:\n3 4 1 5 2 "], "Longest Flight Route": ["https://cses.fi/problemset/task/1680", "\nCSES - Longest Flight Route\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nUolevi has won a contest, and the prize is a free flight trip that can consist of one or more flights through cities. Of course, Uolevi wants to choose a trip that has as many cities as possible.\n\nUolevi wants to fly from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4 so that he visits the maximum number of cities. You are given the list of possible flights, and you know that there are no directed cycles in the flight network.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and flights. The cities are numbered 1,2,\u2026,n1,2,\u2026,n. City 11 is Syrj\u00e4l\u00e4, and city nn is Lehm\u00e4l\u00e4.\n\nAfter this, there are mm lines describing the flights. Each line has two integers aa and bb: there is a flight from city aa to city bb. Each flight is a one-way flight.\n\nOutput\n\nFirst print the maximum number of cities on the route. After this, print the cities in the order they will be visited. You can print any valid solution.\n\nIf there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 5\n1 2\n2 5\n1 3\n3 4\n4 5\n\nOutput:\n4\n1 3 4 5 "], "Game Routes": ["https://cses.fi/problemset/task/1681", "\nCSES - Game Routes\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA game has nn levels, connected by mm teleporters, and your task is to get from level 11 to level nn. The game has been designed so that there are no directed cycles in the underlying graph. In how many ways can you complete the game?\n\nInput\n\nThe first input line has two integers nn and mm: the number of levels and teleporters. The levels are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the teleporters. Each line has two integers aa and bb: there is a teleporter from level aa to level bb.\n\nOutput\n\nPrint one integer: the number of ways you can complete the game. Since the result may be large, print it modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 5\n1 2\n2 4\n1 3\n3 4\n1 4\n\nOutput:\n3 "], "Investigation": ["https://cses.fi/problemset/task/1202", "\nCSES - Investigation\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are going to travel from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4 by plane. You would like to find answers to the following questions:\n\n what is the minimum price of such a route?\n how many minimum-price routes are there? (modulo 109+7)109+7)\n what is the minimum number of flights in a minimum-price route?\n what is the maximum number of flights in a minimum-price route?\n\nInput\n\nThe first input line contains two integers nn and mm: the number of cities and the number of flights. The cities are numbered 1,2,\u2026,n1,2,\u2026,n. City 1 is Syrj\u00e4l\u00e4, and city nn is Lehm\u00e4l\u00e4.\n\nAfter this, there are mm lines describing the flights. Each line has three integers aa, bb, and cc: there is a flight from city aa to city bb with price cc. All flights are one-way flights.\n\nYou may assume that there is a route from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4.\n\nOutput\n\nPrint four integers according to the problem statement.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264c\u22641091\u2264c\u2264109\n\nExample\n\nInput:\n4 5\n1 4 5\n1 2 4\n2 4 5\n1 3 2\n3 4 3\n\nOutput:\n5 2 1 2 "], "Planets Queries I": ["https://cses.fi/problemset/task/1750", "\nCSES - Planets Queries I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are playing a game consisting of nn planets. Each planet has a teleporter to another planet (or the planet itself).\n\nYour task is to process qq queries of the form: when you begin on planet xx and travel through kk teleporters, which planet will you reach?\n\nInput\n\nThe first input line has two integers nn and qq: the number of planets and queries. The planets are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe second line has nn integers t1,t2,\u2026,tnt1,t2,\u2026,tn: for each planet, the destination of the teleporter. It is possible that ti=iti=i.\n\nFinally, there are qq lines describing the queries. Each line has two integers xx and kk: you start on planet xx and travel through kk teleporters.\n\nOutput\n\nPrint the answer to each query.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264ti\u2264n1\u2264ti\u2264n\n1\u2264x\u2264n1\u2264x\u2264n\n0\u2264k\u22641090\u2264k\u2264109\n\nExample\n\nInput:\n4 3\n2 1 1 4\n1 2\n3 4\n4 1\n\nOutput:\n1\n2\n4 "], "Planets Queries II": ["https://cses.fi/problemset/task/1160", "\nCSES - Planets Queries II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are playing a game consisting of n planets. Each planet has a teleporter to another planet (or the planet itself).\n\nYou have to process qq queries of the form: You are now on planet aa and want to reach planet bb. What is the minimum number of teleportations?\n\nInput\n\nThe first input line contains two integers nn and qq: the number of planets and queries. The planets are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe second line contains nn integers t1,t2,\u2026,tnt1,t2,\u2026,tn: for each planet, the destination of the teleporter.\n\nFinally, there are qq lines describing the queries. Each line has two integers aa and bb: you are now on planet aa and want to reach planet bb.\n\nOutput\n\nFor each query, print the minimum number of teleportations. If it is not possible to reach the destination, print \u22121\u22121.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3\n2 3 2 3 2\n1 2\n1 3\n1 4\n\nOutput:\n1\n2\n-1 "], "Planets Cycles": ["https://cses.fi/problemset/task/1751", "\nCSES - Planets Cycles\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are playing a game consisting of nn planets. Each planet has a teleporter to another planet (or the planet itself).\n\nYou start on a planet and then travel through teleporters until you reach a planet that you have already visited before.\n\nYour task is to calculate for each planet the number of teleportations there would be if you started on that planet.\n\nInput\n\nThe first input line has an integer nn: the number of planets. The planets are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe second line has nn integers t1,t2,\u2026,tnt1,t2,\u2026,tn: for each planet, the destination of the teleporter. It is possible that ti=iti=i.\n\nOutput\n\nPrint nn integers according to the problem statement.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264ti\u2264n1\u2264ti\u2264n\n\nExample\n\nInput:\n5\n2 4 3 1 4\n\nOutput:\n3 3 1 3 4 "], "Road Reparation": ["https://cses.fi/problemset/task/1675", "\nCSES - Road Reparation\n\n\nTime limit: 1.00 s\nMemory limit: 128 MB\n\n\n\nThere are nn cities and mm roads between them. Unfortunately, the condition of the roads is so poor that they cannot be used. Your task is to repair some of the roads so that there will be a decent route between any two cities.\n\nFor each road, you know its reparation cost, and you should find a solution where the total cost is as small as possible.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and roads. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the roads. Each line has three integers aa, bb and cc: there is a road between cities aa and bb, and its reparation cost is cc. All roads are two-way roads.\n\nEvery road is between two different cities, and there is at most one road between two cities.\n\nOutput\n\nPrint one integer: the minimum total reparation cost. However, if there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264c\u22641091\u2264c\u2264109\n\nExample\n\nInput:\n5 6\n1 2 3\n2 3 5\n2 4 2\n3 4 8\n5 1 7\n5 4 4\n\nOutput:\n14 "], "Road Construction": ["https://codeforces.com/problemset/problem/330/B", "B. Road Constructiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA country has n cities. Initially, there is no road in the country. One day, the king decides to construct some roads connecting pairs of cities. Roads can be traversed either way. He wants those roads to be constructed in such a way that it is possible to go from each city to any other city by traversing at most two roads. You are also given m pairs of cities \u2014 roads cannot be constructed between these pairs of cities.Your task is to construct the minimum number of roads that still satisfy the above conditions. The constraints will guarantee that this is always possible.InputThe first line consists of two integers n and m .Then m lines follow, each consisting of two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n, ai\u2009\u2260\u2009bi), which means that it is not possible to construct a road connecting cities ai and bi. Consider the cities are numbered from 1 to n.It is guaranteed that every pair of cities will appear at most once in the input.OutputYou should print an integer s: the minimum number of roads that should be constructed, in the first line. Then s lines should follow, each consisting of two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n,\u2009ai\u2009\u2260\u2009bi), which means that a road should be constructed between cities ai and bi.If there are several solutions, you may print any of them.ExamplesInputCopy4 11 3OutputCopy31 24 22 3NoteThis is one possible solution of the example:   These are examples of wrong solutions:   The above solution is wrong because it doesn't use the minimum number of edges (4 vs 3). In addition, it also tries to construct a road between cities 1 and 3, while the input specifies that it is not allowed to construct a road between the pair.   The above solution is wrong because you need to traverse at least 3 roads to go from city 1 to city 3, whereas in your country it must be possible to go from any city to another by traversing at most 2 roads.   Finally, the above solution is wrong because it must be possible to go from any city to another, whereas it is not possible in this country to go from city 1 to 3, 2 to 3, and 4 to 3."], "Flight Routes Check": ["https://cses.fi/problemset/task/1682", "\nCSES - Flight Routes Check\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm flight connections. Your task is to check if you can travel from any city to any other city using the available flights.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and flights. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the flights. Each line has two integers aa and bb: there is a flight from city aa to city bb. All flights are one-way flights.\n\nOutput\n\nPrint \"YES\" if all routes are possible, and \"NO\" otherwise. In the latter case also print two cities aa and bb such that you cannot travel from city aa to city bb.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 5\n1 2\n2 3\n3 1\n1 4\n3 4\n\nOutput:\nNO\n4 2 "], "Planets and Kingdoms": ["https://cses.fi/problemset/task/1683", "\nCSES - Planets and Kingdoms\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA game has nn planets, connected by mm teleporters. Two planets aa and bb belong to the same kingdom exactly when there is a route both from aa to bb and from bb to aa. Your task is to determine for each planet its kingdom.\n\nInput\n\nThe first input line has two integers nn and mm: the number of planets and teleporters. The planets are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the teleporters. Each line has two integers aa and bb: you can travel from planet aa to planet bb through a teleporter.\n\nOutput\n\nFirst print an integer kk: the number of kingdoms. After this, print for each planet a kingdom label between 11 and kk. You can print any valid solution.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 6\n1 2\n2 3\n3 1\n3 4\n4 5\n5 4\n\nOutput:\n2\n1 1 1 2 2 "], "Giant Pizza": ["https://cses.fi/problemset/task/1684", "\nCSES - Giant Pizza\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nUolevi's family is going to order a large pizza and eat it together. A total of nn family members will join the order, and there are mm possible toppings. The pizza may have any number of toppings.\n\nEach family member gives two wishes concerning the toppings of the pizza. The wishes are of the form \"topping xx is good/bad\". Your task is to choose the toppings so that at least one wish from everybody becomes true (a good topping is included in the pizza or a bad topping is not included).\n\nInput\n\nThe first input line has two integers nn and mm: the number of family members and toppings. The toppings are numbered 1,2,\u2026,m1,2,\u2026,m.\n\nAfter this, there are nn lines describing the wishes. Each line has two wishes of the form \"+ xx\" (topping xx is good) or \"- xx\" (topping xx is bad).\n\nOutput\n\nPrint a line with mm symbols: for each topping \"+\" if it is included and \"-\" if it is not included. You can print any valid solution.\n\nIf there are no valid solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n,m\u22641051\u2264n,m\u2264105\n1\u2264x\u2264m1\u2264x\u2264m\n\nExample\n\nInput:\n3 5\n+ 1 + 2\n- 1 + 3\n+ 4 - 2\n\nOutput:\n- + + + - "], "Coin Collector": ["https://cses.fi/problemset/task/1686", "\nCSES - Coin Collector\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA game has nn rooms and mm tunnels between them. Each room has a certain number of coins. What is the maximum number of coins you can collect while moving through the tunnels when you can freely choose your starting and ending room?\n\nInput\n\nThe first input line has two integers nn and mm: the number of rooms and tunnels. The rooms are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are nn integers k1,k2,\u2026,knk1,k2,\u2026,kn: the number of coins in each room.\n\nFinally, there are mm lines describing the tunnels. Each line has two integers aa and bb: there is a tunnel from room aa to room bb. Each tunnel is a one-way tunnel.\n\nOutput\n\nPrint one integer: the maximum number of coins you can collect.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264ki\u22641091\u2264ki\u2264109\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 4\n4 5 2 7\n1 2\n2 1\n1 3\n2 4\n\nOutput:\n16 "], "Mail Delivery": ["https://cses.fi/problemset/task/1691", "\nCSES - Mail Delivery\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to deliver mail to the inhabitants of a city. For this reason, you want to find a route whose starting and ending point are the post office, and that goes through every street exactly once.\n\nInput\n\nThe first input line has two integers nn and mm: the number of crossings and streets. The crossings are numbered 1,2,\u2026,n1,2,\u2026,n, and the post office is located at crossing 11.\n\nAfter that, there are m lines describing the streets. Each line has two integers aa and bb: there is a street between crossings aa and bb. All streets are two-way streets.\n\nEvery street is between two different crossings, and there is at most one street between two crossings.\n\nOutput\n\nPrint all the crossings on the route in the order you will visit them. You can print any valid solution.\n\nIf there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m\u22642.1051\u2264m\u22642.105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n6 8\n1 2\n1 3\n2 3\n2 4\n2 6\n3 5\n3 6\n4 5\n\nOutput:\n1 2 6 3 2 4 5 3 1 "], "De Bruijn Sequence": ["https://cses.fi/problemset/task/1692", "\nCSES - De Bruijn Sequence\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to construct a minimum-length bit string that contains all possible substrings of length nn. For example, when n=2n=2, the string 00110 is a valid solution, because its substrings of length 22 are 00, 01, 10 and 11.\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint a minimum-length bit string that contains all substrings of length nn. You can print any valid solution.\n\nConstraints\n\n1\u2264n\u2264151\u2264n\u226415\n\nExample\n\nInput:\n2\n\nOutput:\n00110 "], "Teleporters Path": ["https://cses.fi/problemset/task/1693", "\nCSES - Teleporters Path\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA game has nn levels and mm teleportes between them. You win the game if you move from level 11 to level nn using every teleporter exactly once.\n\nCan you win the game, and what is a possible way to do it?\n\nInput\n\nThe first input line has two integers nn and mm: the number of levels and teleporters. The levels are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the teleporters. Each line has two integers aa and bb: there is a teleporter from level aa to level bb.\n\nYou can assume that each pair (a,b)(a,b) in the input is distinct.\n\nOutput\n\nPrint m+1m+1 integers: the sequence in which you visit the levels during the game. You can print any valid solution.\n\nIf there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 6\n1 2\n1 3\n2 4\n2 5\n3 1\n4 2\n\nOutput:\n1 3 1 2 4 2 5 "], "Hamiltonian Flights": ["https://cses.fi/problemset/task/1690", "\nCSES - Hamiltonian Flights\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm flight connections between them. You want to travel from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4 so that you visit each city exactly once. How many possible routes are there?\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and flights. The cities are numbered 1,2,\u2026,n1,2,\u2026,n. City 11 is Syrj\u00e4l\u00e4, and city nn is Lehm\u00e4l\u00e4.\n\nThen, there are mm lines describing the flights. Each line has two integers aa and bb: there is a flight from city aa to city bb. All flights are one-way flights.\n\nOutput\n\nPrint one integer: the number of routes modulo 109+7109+7.\n\nConstraints\n\n2\u2264n\u2264202\u2264n\u226420\n1\u2264m\u2264n21\u2264m\u2264n2\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 6\n1 2\n1 3\n2 3\n3 2\n2 4\n3 4\n\nOutput:\n2 "], "Knight's Tour": ["https://cses.fi/problemset/task/1689", "\nCSES - Knight's Tour\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a starting position of a knight on an 8\u00d788\u00d78 chessboard, your task is to find a sequence of moves such that it visits every square exactly once.\n\nOn each move, the knight may either move two steps horizontally and one step vertically, or one step horizontally and two steps vertically.\n\nInput\n\nThe only line has two integers xx and yy: the knight's starting position.\n\nOutput\n\nPrint a grid that shows how the knight moves (according to the example). You can print any valid solution.\n\nConstraints\n\n1\u2264x,y\u226481\u2264x,y\u22648\n\nExample\n\nInput:\n2 1\n\nOutput:\n8 1 10 13 6 3 20 17 \n11 14 7 2 19 16 23 4 \n26 9 12 15 24 5 18 21 \n49 58 25 28 51 22 33 30 \n40 27 50 59 32 29 52 35 \n57 48 41 44 37 34 31 62 \n42 39 46 55 60 63 36 53 \n47 56 43 38 45 54 61 64 "], "Download Speed": ["https://cses.fi/problemset/task/1694", "\nCSES - Download Speed\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a network consisting of nn computers and mm connections. Each connection specifies how fast a computer can send data to another computer.\n\nKotivalo wants to download some data from a server. What is the maximum speed he can do this, using the connections in the network?\n\nInput\n\nThe first input line has two integers nn and mm: the number of computers and connections. The computers are numbered 1,2,\u2026,n1,2,\u2026,n. Computer 11 is the server and computer nn is Kotivalo's computer.\n\nAfter this, there are mm lines describing the connections. Each line has three integers aa, bb and cc: computer aa can send data to computer bb at speed cc.\n\nOutput\n\nPrint one integer: the maximum speed Kotivalo can download data.\n\nConstraints\n\n1\u2264n\u22645001\u2264n\u2264500\n1\u2264m\u226410001\u2264m\u22641000\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264c\u22641091\u2264c\u2264109\n\nExample\n\nInput:\n4 5\n1 2 3\n2 4 2\n1 3 4\n3 4 5\n4 1 3\n\nOutput:\n6 "], "Police Chase": ["https://cses.fi/problemset/task/1695", "\nCSES - Police Chase\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nKaaleppi has just robbed a bank and is now heading to the harbor. However, the police wants to stop him by closing some streets of the city.\n\nWhat is the minimum number of streets that should be closed so that there is no route between the bank and the harbor?\n\nInput\n\nThe first input line has two integers nn and mm: the number of crossings and streets. The crossings are numbered 1,2,\u2026,n1,2,\u2026,n. The bank is located at crossing 11, and the harbor is located at crossing nn.\n\nAfter this, there are mm lines that describing the streets. Each line has two integers aa and bb: there is a street between crossings aa and bb. All streets are two-way streets, and there is at most one street between two crossings.\n\nOutput\n\nFirst print an integer kk: the minimum number of streets that should be closed. After this, print kk lines describing the streets. You can print any valid solution.\n\nConstraints\n\n2\u2264n\u22645002\u2264n\u2264500\n1\u2264m\u226410001\u2264m\u22641000\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 5\n1 2\n1 3\n2 3\n3 4\n1 4\n\nOutput:\n2\n3 4\n1 4 "], "School Dance": ["https://cses.fi/problemset/task/1696", "\nCSES - School Dance\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn boys and mm girls in a school. Next week a school dance will be organized. A dance pair consists of a boy and a girl, and there are kk potential pairs.\n\nYour task is to find out the maximum number of dance pairs and show how this number can be achieved.\n\nInput\n\nThe first input line has three integers nn, mm and kk: the number of boys, girls, and potential pairs. The boys are numbered 1,2,\u2026,n1,2,\u2026,n, and the girls are numbered 1,2,\u2026,m1,2,\u2026,m.\n\nAfter this, there are kk lines describing the potential pairs. Each line has two integers aa and bb: boy aa and girl bb are willing to dance together.\n\nOutput\n\nFirst print one integer rr: the maximum number of dance pairs. After this, print rr lines describing the pairs. You can print any valid solution.\n\nConstraints\n\n1\u2264n,m\u22645001\u2264n,m\u2264500\n1\u2264k\u226410001\u2264k\u22641000\n1\u2264a\u2264n1\u2264a\u2264n\n1\u2264b\u2264m1\u2264b\u2264m\n\nExample\n\nInput:\n3 2 4\n1 1\n1 2\n2 1\n3 1\n\nOutput:\n2\n1 2\n3 1 "], "Distinct Routes": ["https://cses.fi/problemset/task/1711", "\nCSES - Distinct Routes\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA game consists of nn rooms and mm teleporters. At the beginning of each day, you start in room 11 and you have to reach room nn.\n\nYou can use each teleporter at most once during the game. How many days can you play if you choose your routes optimally?\n\nInput\n\nThe first input line has two integers nn and mm: the number of rooms and teleporters. The rooms are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the teleporters. Each line has two integers aa and bb: there is a teleporter from room aa to room bb.\n\nThere are no two teleporters whose starting and ending room are the same.\n\nOutput\n\nFirst print an integer kk: the maximum number of days you can play the game. Then, print kk route descriptions according to the example. You can print any valid solution.\n\nConstraints\n\n2\u2264n\u22645002\u2264n\u2264500\n1\u2264m\u226410001\u2264m\u22641000\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n6 7\n1 2\n1 3\n2 6\n3 4\n3 5\n4 6\n5 6\n\nOutput:\n2\n3\n1 2 6\n4\n1 3 4 6 "], "Static Range Sum Queries": ["https://cses.fi/problemset/task/1646", "\nCSES - Static Range Sum Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to process qq queries of the form: what is the sum of values in range [a,b][a,b]?\n\nInput\n\nThe first input line has two integers nn and qq: the number of values and queries.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nFinally, there are qq lines describing the queries. Each line has two integers aa and bb: what is the sum of values in range [a,b][a,b]?\n\nOutput\n\nPrint the result of each query.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 4\n5 6\n1 8\n3 3\n\nOutput:\n11\n2\n24\n4 "], "Static Range Minimum Queries": ["https://cses.fi/problemset/task/1647", "\nCSES - Static Range Minimum Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to process qq queries of the form: what is the minimum value in range [a,b][a,b]?\n\nInput\n\nThe first input line has two integers nn and qq: the number of values and queries.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nFinally, there are qq lines describing the queries. Each line has two integers aa and bb: what is the minimum value in range [a,b][a,b]?\n\nOutput\n\nPrint the result of each query.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 4\n5 6\n1 8\n3 3\n\nOutput:\n2\n1\n1\n4 "], "Dynamic Range Sum Queries": ["https://cses.fi/problemset/task/1648", "\nCSES - Dynamic Range Sum Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to process qq queries of the following types:\n update the value at position kk to uu\n what is the sum of values in range [a,b][a,b]?\n\nInput\n\nThe first input line has two integers nn and qq: the number of values and queries.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nFinally, there are qq lines describing the queries. Each line has three integers: either \"11 kk uu\" or \"22 aa bb\".\n\nOutput\n\nPrint the result of each query of type 2.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264xi,u\u22641091\u2264xi,u\u2264109\n1\u2264k\u2264n1\u2264k\u2264n\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 1 4\n2 5 6\n1 3 1\n2 1 4\n\nOutput:\n14\n2\n11 "], "Dynamic Range Minimum Queries": ["https://cses.fi/problemset/task/1649", "\nCSES - Dynamic Range Minimum Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to process qq queries of the following types:\n update the value at position kk to uu\n what is the minimum value in range [a,b][a,b]?\n\nInput\n\nThe first input line has two integers nn and qq: the number of values and queries.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nFinally, there are qq lines describing the queries. Each line has three integers: either \"11 kk uu\" or \"22 aa bb\".\n\nOutput\n\nPrint the result of each query of type 2.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264xi,u\u22641091\u2264xi,u\u2264109\n1\u2264k\u2264n1\u2264k\u2264n\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 1 4\n2 5 6\n1 2 3\n2 1 4\n\nOutput:\n2\n1\n3 "], "Range Xor Queries": ["https://cses.fi/problemset/task/1650", "\nCSES - Range Xor Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to process qq queries of the form: what is the xor sum of values in range [a,b][a,b]?\n\nInput\n\nThe first input line has two integers nn and qq: the number of values and queries.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nFinally, there are qq lines describing the queries. Each line has two integers aa and bb: what is the xor sum of values in range [a,b][a,b]?\n\nOutput\n\nPrint the result of each query.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n8 4\n3 2 4 5 1 1 5 3\n2 4\n5 6\n1 8\n3 3\n\nOutput:\n3\n0\n6\n4 "], "Range Update Queries": ["https://cses.fi/problemset/task/1651", "\nCSES - Range Update Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to process qq queries of the following types:\n increase each value in range [a,b][a,b] by uu\n what is the value at position kk?\n\nInput\n\nThe first input line has two integers nn and qq: the number of values and queries.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nFinally, there are qq lines describing the queries. Each line has three integers: either \"11 aa bb uu\" or \"22 kk\".\n\nOutput\n\nPrint the result of each query of type 2.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264xi,u\u22641091\u2264xi,u\u2264109\n1\u2264k\u2264n1\u2264k\u2264n\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n8 3\n3 2 4 5 1 1 5 3\n2 4\n1 2 5 1\n2 4\n\nOutput:\n5\n6 "], "Forest Queries": ["https://cses.fi/problemset/task/1652", "\nCSES - Forest Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an n\u00d7nn\u00d7n grid representing the map of a forest. Each square is either empty or contains a tree. The upper-left square has coordinates (1,1)(1,1), and the lower-right square has coordinates (n,n)(n,n).\n\nYour task is to process qq queries of the form: how many trees are inside a given rectangle in the forest?\n\nInput\n\nThe first input line has two integers nn and qq: the size of the forest and the number of queries.\n\nThen, there are nn lines describing the forest. Each line has nn characters: . is an empty square and * is a tree.\n\nFinally, there are qq lines describing the queries. Each line has four integers y1y1, x1x1, y2y2, x2x2 corresponding to the corners of a rectangle.\n\nOutput\n\nPrint the number of trees inside each rectangle.\n\nConstraints\n\n1\u2264n\u226410001\u2264n\u22641000\n1\u2264q\u22642\u22c51051\u2264q\u22642\u22c5105\n1\u2264y1\u2264y2\u2264n1\u2264y1\u2264y2\u2264n\n1\u2264x1\u2264x2\u2264n1\u2264x1\u2264x2\u2264n\n\nExample\n\nInput:\n4 3\n.*..\n*.**\n**..\n****\n2 2 3 4\n3 1 3 1\n1 1 2 2\n\nOutput:\n3\n1\n2 "], "Hotel Queries": ["https://cses.fi/problemset/task/1143", "\nCSES - Hotel Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn hotels on a street. For each hotel you know the number of free rooms. Your task is to assign hotel rooms for groups of tourists. All members of a group want to stay in the same hotel.\n\nThe groups will come to you one after another, and you know for each group the number of rooms it requires. You always assign a group to the first hotel having enough rooms. After this, the number of free rooms in the hotel decreases.\n\nInput\n\nThe first input line contains two integers nn and mm: the number of hotels and the number of groups. The hotels are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line contains nn integers h1,h2,\u2026,hnh1,h2,\u2026,hn: the number of free rooms in each hotel.\n\nThe last line contains mm integers r1,r2,\u2026,rmr1,r2,\u2026,rm: the number of rooms each group requires.\n\nOutput\n\nPrint the assigned hotel for each group. If a group cannot be assigned a hotel, print 0 instead.\n\nConstraints\n\n1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n1\u2264hi\u22641091\u2264hi\u2264109\n1\u2264ri\u22641091\u2264ri\u2264109\n\nExample\n\nInput:\n8 5\n3 2 4 1 5 5 2 6\n4 4 7 1 1\n\nOutput:\n3 5 0 1 1 "], "List Removals": ["https://cses.fi/problemset/task/1749", "\nCSES - List Removals\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a list consisting of nn integers. Your task is to remove elements from the list at given positions, and report the removed elements.\n\nInput\n\nThe first input line has an integer nn: the initial size of the list. During the process, the elements are numbered 1,2,\u2026,k1,2,\u2026,k where kk is the current size of the list.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the list.\n\nThe last line has nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn: the positions of the elements to be removed.\n\nOutput\n\nPrint the elements in the order they are removed.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n1\u2264pi\u2264n\u2212i+11\u2264pi\u2264n\u2212i+1\n\nExample\n\nInput:\n5\n2 6 1 4 2\n3 1 3 1 1\n\nOutput:\n1 2 2 6 4\n\nExplanation: The contents of the list are [2,6,1,4,2][2,6,1,4,2], [2,6,4,2][2,6,4,2], [6,4,2][6,4,2], [6,4][6,4], [4][4] and [][].    "], "Salary Queries": ["https://cses.fi/problemset/task/1144", "\nCSES - Salary Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA company has nn employees with certain salaries. Your task is to keep track of the salaries and process queries.\n\nInput\n\nThe first input line contains two integers nn and qq: the number of employees and queries. The employees are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn: each employee's salary.\n\nAfter this, there are qq lines describing the queries. Each line has one of the following forms:\n! kk xx: change the salary of employee kk to xx\n? aa bb: count the number of employees whose salary is between a\u2026ba\u2026b\n\nOutput\n\nPrint the answer to each ? query.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264pi\u22641091\u2264pi\u2264109\n1\u2264k\u2264n1\u2264k\u2264n\n1\u2264x\u22641091\u2264x\u2264109\n1\u2264a\u2264b\u22641091\u2264a\u2264b\u2264109\n\nExample\n\nInput:\n5 3\n3 7 2 2 5\n? 2 3\n! 3 6\n? 2 3\n\nOutput:\n3\n2 "], "Prefix Sum Queries": ["https://cses.fi/problemset/task/2166", "\nCSES - Prefix Sum Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to process qq queries of the following types:\n update the value at position kk to uu\n what is the maximum prefix sum in range [a,b][a,b]?\n\nInput\n\nThe first input line has two integers nn and qq: the number of values and queries.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nFinally, there are qq lines describing the queries. Each line has three integers: either \"11 kk uu\" or \"22 aa bb\".\n\nOutput\n\nPrint the result of each query of type 2.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n\u2212109\u2264xi,u\u2264109\u2212109\u2264xi,u\u2264109\n1\u2264k\u2264n1\u2264k\u2264n\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n8 4\n1 2 -1 3 1 -5 1 4\n2 2 6\n1 4 -2\n2 2 6\n2 3 4\n\nOutput:\n5\n2\n0 "], "Pizzeria Queries": ["https://cses.fi/problemset/task/2206", "\nCSES - Pizzeria Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn buildings on a street, numbered 1,2,\u2026,n1,2,\u2026,n. Each building has a pizzeria and an apartment.\n\nThe pizza price in building kk is pkpk. If you order a pizza from building aa to building bb, its price (with delivery) is pa+|a\u2212b|pa+|a\u2212b|.\n\nYour task is to process two types of queries:\n The pizza price pkpk in building kk becomes xx.\n You are in building kk and want to order a pizza. What is the minimum price?\n\nInput\n\nThe first input line has two integers nn and qq: the number of buildings and queries.\n\nThe second line has nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn: the initial pizza price in each building.\n\nFinally, there are qq lines that describe the queries. Each line is either \"1 kk xx\" or \"2 kk\".\n\nOutput\n\nPrint the answer for each query of type 2.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264pi,x\u22641091\u2264pi,x\u2264109\n1\u2264k\u2264n1\u2264k\u2264n\n\nExample\n\nInput:\n6 3\n8 6 4 5 7 5\n2 2\n1 5 1\n2 2\n\nOutput:\n5\n4 "], "Subarray Sum Queries": ["https://cses.fi/problemset/task/1190", "\nCSES - Subarray Sum Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is an array consisting of nn integers. Some values of the array will be updated, and after each update, your task is to report the maximum subarray sum in the array. \n\nInput\n\nThe first input line contains integers nn and mm: the size of the array and the number of updates. The array is indexed 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has nn integers: x1,x2,\u2026,xnx1,x2,\u2026,xn: the initial contents of the array.\n\nThen there are mm lines describing the changes. Each line has two integers kk and xx: the value at position kk becomes xx.\n\nOutput\n\nAfter each update, print the maximum subarray sum. Empty subarrays (with sum 00) are allowed.\n\nConstraints\n\n1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n\u2212109\u2264xi\u2264109\u2212109\u2264xi\u2264109\n1\u2264k\u2264n1\u2264k\u2264n\n\u2212109\u2264x\u2264109\u2212109\u2264x\u2264109\n\nExample\n\nInput:\n5 3\n1 2 -3 5 -1\n2 6\n3 1\n2 -2\n\nOutput:\n9\n13\n6 "], "Distinct Values Queries": ["https://cses.fi/problemset/task/1734", "\nCSES - Distinct Values Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array of nn integers and qq queries of the form: how many distinct values are there in a range [a,b][a,b]?\n\nInput\n\nThe first input line has two integers nn and qq: the array size and number of queries.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the array values.\n\nFinally, there are qq lines describing the queries. Each line has two integers aa and bb.\n\nOutput\n\nFor each query, print the number of distinct values in the range.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n5 3\n3 2 3 1 2\n1 3\n2 4\n1 5\n\nOutput:\n2\n3\n3 "], "Increasing Array Queries": ["https://cses.fi/problemset/task/2416", "\nCSES - Increasing Array Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array that consists of nn integers. The array elements are indexed 1,2,\u2026,n1,2,\u2026,n.\n\nYou can modify the array using the following operation: choose an array element and increase its value by one.\n\nYour task is to process qq queries of the form: when we consider a subarray from position aa to position bb, what is the minimum number of operations after which the subarray is increasing?\n\nAn array is increasing if each element is greater than or equal with the previous element.\n\nInput\n\nThe first input line has two integers nn and qq: the size of the array and the number of queries.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nFinally, there are qq lines that describe the queries. Each line has two integers aa and bb: the starting and ending position of a subarray.\n\nOutput\n\nFor each query, print the minimum number of operations.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n5 3\n2 10 4 2 5\n3 5\n2 2\n1 4\n\nOutput:\n2\n0\n14 "], "Forest Queries II": ["https://cses.fi/problemset/task/1739", "\nCSES - Forest Queries II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an n\u00d7nn\u00d7n grid representing the map of a forest. Each square is either empty or has a tree. Your task is to process qq queries of the following types:\nChange the state (empty/tree) of a square.\nHow many trees are inside a rectangle in the forest?\n\nInput\n\nThe first input line has two integers nn and qq: the size of the forest and the number of queries.\n\nThen, there are nn lines describing the forest. Each line has nn characters: . is an empty square and * is a tree.\n\nFinally, there are qq lines describing the queries. The format of each line is either \"11 yy xx\" or \"2 y1y1 x1x1 y2y2 x2x2\".\n\nOutput\n\nPrint the answer to each query of the second type.\n\nConstraints\n\n1\u2264n\u226410001\u2264n\u22641000\n1\u2264q\u22642\u22c51051\u2264q\u22642\u22c5105\n1\u2264y,x\u2264n1\u2264y,x\u2264n\n1\u2264y1\u2264y2\u2264n1\u2264y1\u2264y2\u2264n\n1\u2264x1\u2264x2\u2264n1\u2264x1\u2264x2\u2264n\n\nExample\n\nInput:\n4 3\n.*..\n*.**\n**..\n****\n2 2 2 3 4\n1 3 3\n2 2 2 3 4\n\nOutput:\n3\n4 "], "Range Updates and Sums": ["https://cses.fi/problemset/task/1735", "\nCSES - Range Updates and Sums\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to maintain an array of nn values and efficiently process the following types of queries:\n Increase each value in range [a,b][a,b] by xx.\n Set each value in range [a,b][a,b] to xx.\n Calculate the sum of values in range [a,b][a,b].\n\nInput\n\nThe first input line has two integers nn and qq: the array size and the number of queries.\n\nThe next line has nn values t1,t2,\u2026,tnt1,t2,\u2026,tn: the initial contents of the array.\n\nFinally, there are qq lines describing the queries. The format of each line is one of the following: \"1 aa bb xx\",  \"2 aa bb xx\", or \"3 aa bb\". \n\nOutput\n\nPrint the answer to each sum query.\n\nConstraints\n\n 1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n 1\u2264ti,x\u22641061\u2264ti,x\u2264106\n 1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n6 5\n2 3 1 1 5 3\n3 3 5\n1 2 4 2\n3 3 5\n2 2 4 5\n3 3 5\n\nOutput:\n7\n11\n15 "], "Polynomial Queries": ["https://cses.fi/problemset/task/1736", "\nCSES - Polynomial Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to maintain an array of nn values and efficiently process the following types of queries:\nIncrease the first value in range [a,b][a,b] by 11, the second value by 22, the third value by 33, and so on.\nCalculate the sum of values in range [a,b][a,b].\n\nInput\n\nThe first input line has two integers nn and qq: the size of the array and the number of queries.\n\nThe next line has nn values t1,t2,\u2026,tnt1,t2,\u2026,tn: the initial contents of the array.\n\nFinally, there are qq lines describing the queries. The format of each line is either \"1 aa bb\" or \"2 aa bb\".\n\nOutput\n\nPrint the answer to each sum query.\n\nConstraints\n\n 1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n 1\u2264ti\u22641061\u2264ti\u2264106\n 1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n5 3\n4 2 3 1 7\n2 1 5\n1 1 5\n2 1 5\n\nOutput:\n17\n32 "], "Range Queries and Copies": ["https://cses.fi/problemset/task/1737", "\nCSES - Range Queries and Copies\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to maintain a list of arrays which initially has a single array. You have to process the following types of queries:\nSet the value aa in array kk to xx.\nCalculate the sum of values in range [a,b][a,b] in array kk.\nCreate a copy of array kk and add it to the end of the list.\n\nInput\n\nThe first input line has two integers nn and qq: the array size and the number of queries.\n\nThe next line has nn integers t1,t2,\u2026,tnt1,t2,\u2026,tn: the initial contents of the array.\n\nFinally, there are qq lines describing the queries. The format of each line is one of the following: \"1 kk aa xx\", \"2 kk aa bb\" or \"3 kk\".\n\nOutput\n\nPrint the answer to each sum query.\n\nConstraints\n\n 1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n 1\u2264ti,x\u22641091\u2264ti,x\u2264109\n 1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n5 6\n2 3 1 2 5\n3 1\n2 1 1 5\n2 2 1 5\n1 2 2 5\n2 1 1 5\n2 2 1 5\n\nOutput:\n13\n13\n13\n15 "], "Subordinates": ["https://cses.fi/problemset/task/1674", "\nCSES - Subordinates\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven the structure of a company, your task is to calculate for each employee the number of their subordinates.\n\nInput\n\nThe first input line has an integer nn: the number of employees. The employees are numbered 1,2,\u2026,n1,2,\u2026,n, and employee 11 is the general director of the company.\n\nAfter this, there are n\u22121n\u22121 integers: for each employee 2,3,\u2026,n2,3,\u2026,n their direct boss in the company.\n\nOutput\n\nPrint nn integers: for each employee 1,2,\u2026,n1,2,\u2026,n the number of their subordinates.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n5\n1 1 2 3\n\nOutput:\n4 1 1 0 0 "], "Tree Matching": ["https://cses.fi/problemset/task/1130", "\nCSES - Tree Matching\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a tree consisting of nn nodes.\n\nA matching is a set of edges where each node is an endpoint of at most one edge. What is the maximum number of edges in a matching?\n\nInput\n\nThe first input line contains an integer nn: the number of nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nOutput\n\nPrint one integer: the maximum number of pairs.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n2\n\nExplanation: One possible matching is (1,2)(1,2) and (3,4)(3,4).    "], "Tree Diameter": ["https://cses.fi/problemset/task/1131", "\nCSES - Tree Diameter\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a tree consisting of nn nodes.\n\nThe diameter of a tree is the maximum distance between two nodes. Your task is to determine the diameter of the tree.\n\nInput\n\nThe first input line contains an integer nn: the number of nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nOutput\n\nPrint one integer: the diameter of the tree.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n3\n\nExplanation: The diameter corresponds to the path 2\u21921\u21923\u219252\u21921\u21923\u21925.    "], "Tree Distances I": ["https://cses.fi/problemset/task/1132", "\nCSES - Tree Distances I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a tree consisting of nn nodes.\n\nYour task is to determine for each node the maximum distance to another node.\n\nInput\n\nThe first input line contains an integer nn: the number of nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nOutput\n\nPrint nn integers: for each node 1,2,\u2026,n1,2,\u2026,n, the maximum distance to another node.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n2 3 2 3 3 "], "Tree Distances II": ["https://cses.fi/problemset/task/1133", "\nCSES - Tree Distances II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a tree consisting of nn nodes.\n\nYour task is to determine for each node the sum of the distances from the node to all other nodes.\n\nInput\n\nThe first input line contains an integer nn: the number of nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nOutput\n\nPrint nn integers: for each node 1,2,\u2026,n1,2,\u2026,n, the sum of the distances.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n6 9 5 8 8 "], "Company Queries I": ["https://cses.fi/problemset/task/1687", "\nCSES - Company Queries I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA company has nn employees, who form a tree hierarchy where each employee has a boss, except for the general director.\n\nYour task is to process qq queries of the form: who is employee xx's boss kk levels higher up in the hierarchy?\n\nInput\n\nThe first input line has two integers nn and qq: the number of employees and queries. The employees are numbered 1,2,\u2026,n1,2,\u2026,n, and employee 11 is the general director.\n\nThe next line has n\u22121n\u22121 integers e2,e3,\u2026,ene2,e3,\u2026,en: for each employee 2,3,\u2026,n2,3,\u2026,n their boss.\n\nFinally, there are qq lines describing the queries. Each line has two integers xx and kk: who is employee xx's boss kk levels higher up?\n\nOutput\n\nPrint the answer for each query. If such a boss does not exist, print \u22121\u22121.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264ei\u2264i\u221211\u2264ei\u2264i\u22121\n1\u2264x\u2264n1\u2264x\u2264n\n1\u2264k\u2264n1\u2264k\u2264n\n\nExample\n\nInput:\n5 3\n1 1 3 3\n4 1\n4 2\n4 3\n\nOutput:\n3\n1\n-1 "], "Company Queries II": ["https://cses.fi/problemset/task/1688", "\nCSES - Company Queries II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA company has nn employees, who form a tree hierarchy where each employee has a boss, except for the general director.\n\nYour task is to process qq queries of the form: who is the lowest common boss of employees aa and bb in the hierarchy?\n\nInput\n\nThe first input line has two integers nn and qq: the number of employees and queries. The employees are numbered 1,2,\u2026,n1,2,\u2026,n, and employee 11 is the general director.\n\nThe next line has n\u22121n\u22121 integers e2,e3,\u2026,ene2,e3,\u2026,en: for each employee 2,3,\u2026,n2,3,\u2026,n their boss.\n\nFinally, there are qq lines describing the queries. Each line has two integers aa and bb: who is the lowest common boss of employees aa and bb?\n\nOutput\n\nPrint the answer for each query.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264ei\u2264i\u221211\u2264ei\u2264i\u22121\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3\n1 1 3 3\n4 5\n2 5\n1 4\n\nOutput:\n3\n1\n1 "], "Distance Queries": ["https://cses.fi/problemset/task/1135", "\nCSES - Distance Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a tree consisting of nn nodes.\n\nYour task is to process qq queries of the form: what is the distance between nodes aa and bb?\n\nInput\n\nThe first input line contains two integers nn and qq: the number of nodes and queries. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nFinally, there are qq lines describing the queries. Each line contains two integer aa and bb: what is the distance between nodes aa and bb?\n\nOutput\n\nPrint qq integers: the answer to each query.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3\n1 2\n1 3\n3 4\n3 5\n1 3\n2 5\n1 4\n\nOutput:\n1\n3\n2 "], "Counting Paths": ["https://cses.fi/problemset/task/1136", "\nCSES - Counting Paths\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a tree consisting of nn nodes, and mm paths in the tree.\n\nYour task is to calculate for each node the number of paths containing that node.\n\nInput\n\nThe first input line contains integers nn and mm: the number of nodes and paths. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nFinally, there are mm lines describing the paths. Each line contains two integers aa and bb: there is a path between nodes aa and bb.\n\nOutput\n\nPrint nn integers: for each node 1,2,\u2026,n1,2,\u2026,n, the number of paths containing that node.\n\nConstraints\n\n1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3\n1 2\n1 3\n3 4\n3 5\n1 3\n2 5\n1 4\n\nOutput:\n3 1 3 1 1 "], "Subtree Queries": ["https://cses.fi/problemset/task/1137", "\nCSES - Subtree Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a rooted tree consisting of nn nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n, and node 11 is the root. Each node has a value.\n\nYour task is to process following types of queries:\n change the value of node ss to xx\n calculate the sum of values in the subtree of node ss\n\nInput\n\nThe first input line contains two integers nn and qq: the number of nodes and queries. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has nn integers v1,v2,\u2026,vnv1,v2,\u2026,vn: the value of each node.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contans two integers aa and bb: there is an edge between nodes aa and bb.\n\nFinally, there are qq lines describing the queries. Each query is either of the form \"1 ss xx\" or \"2 ss\".\n\nOutput\n\nPrint the answer to each query of type 2.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264a,b,s\u2264n1\u2264a,b,s\u2264n\n1\u2264vi,x\u22641091\u2264vi,x\u2264109\n\nExample\n\nInput:\n5 3\n4 2 5 2 1\n1 2\n1 3\n3 4\n3 5\n2 3\n1 5 3\n2 3\n\nOutput:\n8\n10 "], "Path Queries": ["https://cses.fi/problemset/task/1138", "\nCSES - Path Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a rooted tree consisting of nn nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n, and node 11 is the root. Each node has a value.\n\nYour task is to process following types of queries:\n change the value of node ss to xx\n calculate the sum of values on the path from the root to node ss\n\nInput\n\nThe first input line contains two integers nn and qq: the number of nodes and queries. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has nn integers v1,v2,\u2026,vnv1,v2,\u2026,vn: the value of each node.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nFinally, there are qq lines describing the queries. Each query is either of the form \"1 ss xx\" or \"2 ss\".\n\nOutput\n\nPrint the answer to each query of type 2.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264a,b,s\u2264n1\u2264a,b,s\u2264n\n1\u2264vi,x\u22641091\u2264vi,x\u2264109\n\nExample\n\nInput:\n5 3\n4 2 5 2 1\n1 2\n1 3\n3 4\n3 5\n2 4\n1 3 2\n2 4\n\nOutput:\n11\n8 "], "Path Queries II": ["https://cses.fi/problemset/task/2134", "\nCSES - Path Queries II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a tree consisting of nn nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n. Each node has a value.\n\nYour task is to process following types of queries:\n change the value of node ss to xx\n find the maximum value on the path between nodes aa and bb.\n\nInput\n\nThe first input line contains two integers nn and qq: the number of nodes and queries. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has nn integers v1,v2,\u2026,vnv1,v2,\u2026,vn: the value of each node.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nFinally, there are qq lines describing the queries. Each query is either of the form \"1 ss xx\" or \"2 aa bb\".\n\nOutput\n\nPrint the answer to each query of type 2.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264a,b,s\u2264n1\u2264a,b,s\u2264n\n1\u2264vi,x\u22641091\u2264vi,x\u2264109\n\nExample\n\nInput:\n5 3\n2 4 1 3 3\n1 2\n1 3\n2 4\n2 5\n2 3 5\n1 2 2\n2 3 5\n\nOutput:\n4 3 "], "Distinct Colors": ["https://cses.fi/problemset/task/1139", "\nCSES - Distinct Colors\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a rooted tree consisting of nn nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n, and node 11 is the root. Each node has a color.\n\nYour task is to determine for each node the number of distinct colors in the subtree of the node.\n\nInput\n\nThe first input line contains an integer nn: the number of nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line consists of nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn: the color of each node.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nOutput\n\nPrint nn integers: for each node 1,2,\u2026,n1,2,\u2026,n, the number of distinct colors.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264ci\u22641091\u2264ci\u2264109\n\nExample\n\nInput:\n5\n2 3 2 2 1\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n3 1 2 1 1 "], "Finding a Centroid": ["https://cses.fi/problemset/task/2079", "\nCSES - Finding a Centroid\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a tree of nn nodes, your task is to find a centroid, i.e., a node such that when it is appointed the root of the tree, each subtree has at most \u230an/2\u230b\u230an/2\u230b nodes.\n\nInput\n\nThe first input line contains an integer nn: the number of nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nOutput\n\nPrint one integer: a centroid node. If there are several possibilities, you can choose any of them.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5\n1 2\n2 3\n3 4\n3 5\n\nOutput:\n3 "], "Fixed-Length Paths I": ["https://cses.fi/problemset/task/2080", "\nCSES - Fixed-Length Paths I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a tree of nn nodes, your task is to count the number of distinct paths that consist of exactly kk edges.\n\nInput\n\nThe first input line contains two integers nn and kk: the number of nodes and the path length. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nOutput\n\nPrint one integer: the number of paths.\n\nConstraints\n\n1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 2\n1 2\n2 3\n3 4\n3 5\n\nOutput:\n4 "], "Fixed-Length Paths II": ["https://cses.fi/problemset/task/2081", "\nCSES - Fixed-Length Paths II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a tree of nn nodes, your task is to count the number of distinct paths that have at least k1k1 and at most k2k2 edges.\n\nInput\n\nThe first input line contains three integers nn, k1k1 and k2k2: the number of nodes and the path lengths. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen there are n\u22121n\u22121 lines describing the edges. Each line contains two integers aa and bb: there is an edge between nodes aa and bb.\n\nOutput\n\nPrint one integer: the number of paths.\n\nConstraints\n\n1\u2264k1\u2264k2\u2264n\u22642\u22c51051\u2264k1\u2264k2\u2264n\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 2 3\n1 2\n2 3\n3 4\n3 5\n\nOutput:\n6 "], "Josephus Queries": ["https://cses.fi/problemset/task/2164", "\nCSES - Josephus Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a game where there are nn children (numbered 1,2,\u2026,n1,2,\u2026,n) in a circle. During the game, every second child is removed from the circle, until there are no children left.\n\nYour task is to process qq queries of the form: \"when there are nn children, who is the kkth child that will be removed?\"\n\nInput\n\nThe first input line has an integer qq: the number of queries.\n\nAfter this, there are qq lines that describe the queries. Each line has two integers nn and kk: the number of children and the position of the child.\n\nOutput\n\nPrint qq integers: the answer for each query.\n\nConstraints\n\n 1\u2264q\u22641051\u2264q\u2264105\n 1\u2264k\u2264n\u22641091\u2264k\u2264n\u2264109\n\nExample\n\nInput:\n4\n7 1\n7 3\n2 2\n1337 1313\n\nOutput:\n2\n6\n1\n1107 "], "Exponentiation": ["https://cses.fi/problemset/task/1095", "\nCSES - Exponentiation\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to efficiently calculate values abab modulo 109+7109+7.\n\nNote that in this task we assume that 00=100=1.\n\nInput\n\nThe first input line contains an integer nn: the number of calculations.\n\nAfter this, there are nn lines, each containing two integers aa and bb.\n\nOutput\n\nPrint each value abab modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n0\u2264a,b\u22641090\u2264a,b\u2264109\n\nExample\n\nInput:\n3\n3 4\n2 8\n123 123\n\nOutput:\n81\n256\n921450052 "], "Exponentiation II": ["https://cses.fi/problemset/task/1712", "\nCSES - Exponentiation II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to efficiently calculate values abcabc modulo 109+7109+7.\n\nNote that in this task we assume that 00=100=1.\n\nInput\n\nThe first input line has an integer nn: the number of calculations.\n\nAfther this, there are nn lines, each containing three integers aa, bb and cc.\n\nOutput\n\nPrint each value abcabc modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n0\u2264a,b,c\u22641090\u2264a,b,c\u2264109\n\nExample\n\nInput:\n3\n3 7 1\n15 2 2\n3 4 5\n\nOutput:\n2187\n50625\n763327764 "], "Counting Divisors": ["https://cses.fi/problemset/task/1713", "\nCSES - Counting Divisors\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven nn integers, your task is to report for each integer the number of its divisors.\n\nFor example, if x=18x=18, the correct answer is 66 because its divisors are 1,2,3,6,9,181,2,3,6,9,18.\n\nInput\n\nThe first input line has an integer nn: the number of integers.\n\nAfter this, there are nn lines, each containing an integer xx.\n\nOutput\n\nFor each integer, print the number of its divisors.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264x\u22641061\u2264x\u2264106\n\nExample\n\nInput:\n3\n16\n17\n18\n\nOutput:\n5\n2\n6 "], "Common Divisors": ["https://codeforces.com/problemset/problem/182/D", "D. Common Divisorstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has recently learned at school what a number's divisor is and decided to determine a string's divisor. Here is what he came up with.String a is the divisor of string b if and only if there exists a positive integer x such that if we write out string a consecutively x times, we get string b. For example, string \"abab\" has two divisors \u2014 \"ab\" and \"abab\".Now Vasya wants to write a program that calculates the number of common divisors of two strings. Please help him.InputThe first input line contains a non-empty string s1.The second input line contains a non-empty string s2.Lengths of strings s1 and s2 are positive and do not exceed 105. The strings only consist of lowercase Latin letters.OutputPrint the number of common divisors of strings s1 and s2. ExamplesInputCopyabcdabcdabcdabcdabcdabcdOutputCopy2InputCopyaaaaaOutputCopy1NoteIn first sample the common divisors are strings \"abcd\" and \"abcdabcd\".In the second sample the common divisor is a single string \"a\". String \"aa\" isn't included in the answer as it isn't a divisor of string \"aaa\"."], "Sum of Divisors": ["https://cses.fi/problemset/task/1082", "\nCSES - Sum of Divisors\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nLet \u03c3(n)\u03c3(n) denote the sum of divisors of an integer nn. For example, \u03c3(12)=1+2+3+4+6+12=28\u03c3(12)=1+2+3+4+6+12=28.\n\nYour task is to calculate the sum \u2211ni=1\u03c3(i)\u2211i=1n\u03c3(i) modulo 109+7109+7.\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint \u2211ni=1\u03c3(i)\u2211i=1n\u03c3(i) modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u226410121\u2264n\u22641012\n\nExample\n\nInput:\n5\n\nOutput:\n21 "], "Divisor Analysis": ["https://cses.fi/problemset/task/2182", "\nCSES - Divisor Analysis\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an integer, your task is to find the number, sum and product of its divisors. As an example, let us consider the number 1212:\n the number of divisors is 66 (they are 11, 22, 33, 44, 66, 1212)\n the sum of divisors is 1+2+3+4+6+12=281+2+3+4+6+12=28\n the product of divisors is 1\u22c52\u22c53\u22c54\u22c56\u22c512=17281\u22c52\u22c53\u22c54\u22c56\u22c512=1728\n\nSince the input number may be large, it is given as a prime factorization.\n\nInput\n\nThe first line has an integer nn: the number of parts in the prime factorization.\n\nAfter this, there are nn lines that describe the factorization. Each line has two numbers xx and kk where xx is a prime and kk is its power.\n\nOutput\n\nPrint three integers modulo 109+7109+7: the number, sum and product of the divisors.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n2\u2264x\u22641062\u2264x\u2264106\neach xx is a distinct prime\n1\u2264k\u22641091\u2264k\u2264109\n\nExample\n\nInput:\n2\n2 2\n3 1\n\nOutput:\n6 28 1728 "], "Prime Multiples": ["https://cses.fi/problemset/task/2185", "\nCSES - Prime Multiples\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given kk distinct prime numbers a1,a2,\u2026,aka1,a2,\u2026,ak and an integer nn.\n\nYour task is to calculate how many of the first nn positive integers are divisible by at least one of the given prime numbers.\n\nInput\n\nThe first input line has two integers nn and kk.\n\nThe second line has kk prime numbers a1,a2,\u2026,aka1,a2,\u2026,ak.\n\nOutput\n\nPrint one integer: the number integers within the interval 1,2,\u2026,n1,2,\u2026,n that are divisible by at least one of the prime numbers.\n\nConstraints\n\n 1\u2264n\u226410181\u2264n\u22641018\n 1\u2264k\u2264201\u2264k\u226420\n 2\u2264ai\u2264n2\u2264ai\u2264n\n\nExample\n\nInput:\n20 2\n2 5\n\nOutput:\n12\n\nExplanation: the 1212 numbers are 2,4,5,6,8,10,12,14,15,16,18,202,4,5,6,8,10,12,14,15,16,18,20.    "], "Counting Coprime Pairs": ["https://cses.fi/problemset/task/2417", "\nCSES - Counting Coprime Pairs\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a list of nn positive integers, your task is to count the number of pairs of integers that are coprime (i.e., their greatest common divisor is one).\n\nInput\n\nThe first input line has an integer nn: the number of elements.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the list.\n\nOutput\n\nPrint one integer: the answer for the task.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264xi\u22641061\u2264xi\u2264106\n\nExample\n\nInput:\n8\n5 4 20 1 16 17 5 15\n\nOutput:\n19 "], "Binomial Coefficients": ["https://cses.fi/problemset/task/1079", "\nCSES - Binomial Coefficients\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to calculate nn binomial coefficients modulo 109+7109+7.\n\nA binomial coefficient (ab)(ab) can be calculated using the formula a!b!(a\u2212b)!a!b!(a\u2212b)!. We assume that aa and bb are integers and 0\u2264b\u2264a0\u2264b\u2264a.\n\nInput\n\nThe first input line contains an integer nn: the number of calculations.\n\nAfter this, there are nn lines, each of which contains two integers aa and bb.\n\nOutput\n\nPrint each binomial coefficient modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n0\u2264b\u2264a\u22641060\u2264b\u2264a\u2264106\n\nExample\n\nInput:\n3\n5 3\n8 1\n9 5\n\nOutput:\n10\n8\n126 "], "Creating Strings II": ["https://cses.fi/problemset/task/1715", "\nCSES - Creating Strings II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string, your task is to calculate the number of different strings that can be created using its characters.\n\nInput\n\nThe only input line has a string of length nn. Each character is between a\u2013z.\n\nOutput\n\nPrint the number of different strings modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\naabac\n\nOutput:\n20 "], "Distributing Apples": ["https://cses.fi/problemset/task/1716", "\nCSES - Distributing Apples\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn children and mm apples that will be distributed to them. Your task is to count the number of ways this can be done.\n\nFor example, if n=3n=3 and m=2m=2, there are 66 ways: [0,0,2][0,0,2], [0,1,1][0,1,1], [0,2,0][0,2,0], [1,0,1][1,0,1], [1,1,0][1,1,0] and [2,0,0][2,0,0].\n\nInput\n\nThe only input line has two integers nn and mm.\n\nOutput\n\nPrint the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n,m\u22641061\u2264n,m\u2264106\n\nExample\n\nInput:\n3 2\n\nOutput:\n6 "], "Christmas Party": ["https://cses.fi/problemset/task/1717", "\nCSES - Christmas Party\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn children at a Christmas party, and each of them has brought a gift. The idea is that everybody will get a gift brought by someone else.\n\nIn how many ways can the gifts be distributed?\n\nInput\n\nThe only input line has an integer nn: the number of children.\n\nOutput\n\nPrint the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\n4\n\nOutput:\n9 "], "Bracket Sequences I": ["https://cses.fi/problemset/task/2064", "\nCSES - Bracket Sequences I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to calculate the number of valid bracket sequences of length nn. For example, when n=6n=6, there are 55 sequences:\n ()()()\n ()(())\n (())()\n ((()))\n (()())\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint the number of sequences modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\n6\n\nOutput:\n5 "], "Bracket Sequences II": ["https://cses.fi/problemset/task/2187", "\nCSES - Bracket Sequences II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to calculate the number of valid bracket sequences of length nn when a prefix of the sequence is given.\n\nInput\n\nThe first input line has an integer nn.\n\nThe second line has a string of kk characters: the prefix of the sequence.\n\nOutput\n\nPrint the number of sequences modulo 109+7109+7.\n\nConstraints\n\n1\u2264k\u2264n\u22641061\u2264k\u2264n\u2264106\n\nExample\n\nInput:\n6\n(()\n\nOutput:\n2\n\nExplanation: There are two possible sequences: (())() and (()()).    "], "Counting Necklaces": ["https://cses.fi/problemset/task/2209", "\nCSES - Counting Necklaces\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of different necklaces that consist of nn pearls and each pearl has mm possible colors.\n\nTwo necklaces are considered to be different if it is not possible to rotate one of them so that they look the same.\n\nInput\n\nThe only input line has two numbers nn and mm: the number of pearls and colors.\n\nOutput\n\nPrint one integer: the number of different necklaces modulo 109+7109+7.\n\nConstraints\n\n1\u2264n,m\u22641061\u2264n,m\u2264106\n\nExample\n\nInput:\n4 3\n\nOutput:\n24 "], "Counting Grids": ["https://cses.fi/problemset/task/2210", "\nCSES - Counting Grids\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of different n\u00d7nn\u00d7n grids whose each square is black or white.\n\nTwo grids are considered to be different if it is not possible to rotate one of them so that they look the same.\n\nInput\n\nThe only input line has an integer nn: the size of the grid.\n\nOutput\n\nPrint one integer: the number of grids modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641091\u2264n\u2264109\n\nExample\n\nInput:\n4\n\nOutput:\n16456 "], "Fibonacci Numbers": ["https://cses.fi/problemset/task/1722", "\nCSES - Fibonacci Numbers\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThe Fibonacci numbers can be defined as follows:\nF0=0F0=0\nF1=1F1=1\nFn=Fn\u22122+Fn\u22121Fn=Fn\u22122+Fn\u22121\n\nYour task is to calculate the value of FnFn for a given nn.\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint the value of FnFn modulo 109+7109+7.\n\nConstraints\n\n0\u2264n\u226410180\u2264n\u22641018\n\nExample\n\nInput:\n10\n\nOutput:\n55 "], "Throwing Dice": ["https://cses.fi/problemset/task/1096", "\nCSES - Throwing Dice\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to calculate the number of ways to get a sum nn by throwing dice. Each throw yields an integer between 1\u202661\u20266.\n\nFor example, if n=10n=10, some possible ways are 3+3+43+3+4, 1+4+1+41+4+1+4 and 1+1+6+1+11+1+6+1+1.\n\nInput\n\nThe only input line contains an integer nn.\n\nOutput\n\nPrint the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u226410181\u2264n\u22641018\n\nExample\n\nInput:\n8\n\nOutput:\n125 "], "Graph Paths I": ["https://cses.fi/problemset/task/1723", "\nCSES - Graph Paths I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a directed graph that has nn nodes and mm edges. Your task is to count the number of paths from node 11 to node nn with exactly kk edges.\n\nInput\n\nThe first input line contains three integers nn, mm and kk: the number of nodes and edges, and the length of the path. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the edges. Each line contains two integers aa and bb: there is an edge from node aa to node bb.\n\nOutput\n\nPrint the number of paths modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264m\u2264n(n\u22121)1\u2264m\u2264n(n\u22121)\n1\u2264k\u22641091\u2264k\u2264109\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n3 4 8\n1 2\n2 3\n3 1\n3 2\n\nOutput:\n2\n\nExplanation: The paths are 1\u21922\u21923\u21921\u21922\u21923\u21921\u21922\u219231\u21922\u21923\u21921\u21922\u21923\u21921\u21922\u21923 and 1\u21922\u21923\u21922\u21923\u21922\u21923\u21922\u219231\u21922\u21923\u21922\u21923\u21922\u21923\u21922\u21923.    "], "Graph Paths II": ["https://cses.fi/problemset/task/1724", "\nCSES - Graph Paths II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a directed weighted graph having nn nodes and mm edges. Your task is to calculate the minimum path length from node 11 to node nn with exactly kk edges.\n\nInput\n\nThe first input line contains three integers nn, mm and kk: the number of nodes and edges, and the length of the path. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are m lines describing the edges. Each line contains three integers aa, bb and cc: there is an edge from node aa to node bb with weight cc.\n\nOutput\n\nPrint the minimum path length. If there are no such paths, print \u22121\u22121.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264m\u2264n(n\u22121)1\u2264m\u2264n(n\u22121)\n1\u2264k\u22641091\u2264k\u2264109\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264c\u22641091\u2264c\u2264109\n\nExample\n\nInput:\n3 4 8\n1 2 5\n2 3 4\n3 1 1\n3 2 2\n\nOutput:\n27 "], "Dice Probability": ["https://cses.fi/problemset/task/1725", "\nCSES - Dice Probability\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou throw a dice nn times, and every throw produces an outcome between 11 and 66. What is the probability that the sum of outcomes is between aa and bb?\n\nInput\n\nThe only input line contains three integers nn, aa and bb.\n\nOutput\n\nPrint the probability rounded to six decimal places.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264a\u2264b\u22646n1\u2264a\u2264b\u22646n\n\nExample\n\nInput:\n2 9 10\n\nOutput:\n0.194444 "], "Moving Robots": ["https://cses.fi/problemset/task/1726", "\nCSES - Moving Robots\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nEach square of an 8\u00d788\u00d78 chessboard has a robot. Each robot independently moves kk steps, and there can be many robots on the same square.\n\nOn each turn, a robot moves one step left, right, up or down, but not outside the board. It randomly chooses a direction among those where it can move.\n\nYour task is to calculate the expected number of empty squares after kk turns.\n\nInput\n\nThe only input line has an integer kk.\n\nOutput\n\nPrint the expected number of empty squares rounded to six decimal places.\n\nConstraints\n\n1\u2264k\u22641001\u2264k\u2264100\n\nExample\n\nInput:\n10\n\nOutput:\n23.120740 "], "Candy Lottery": ["https://cses.fi/problemset/task/1727", "\nCSES - Candy Lottery\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn children, and each of them independently gets a random integer number of candies between 11 and kk.\n\nWhat is the expected maximum number of candies a child gets?\n\nInput\n\nThe only input line contains two integers nn and kk.\n\nOutput\n\nPrint the expected number rounded to six decimal places.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264k\u22641001\u2264k\u2264100\n\nExample\n\nInput:\n2 3\n\nOutput:\n2.444444 "], "Inversion Probability": ["https://cses.fi/problemset/task/1728", "\nCSES - Inversion Probability\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nAn array has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn, and each of them has been randomly chosen between 11 and riri. An inversion is a pair (a,b)(a,b) where a<ba<b and xa>xbxa>xb.\n\nWhat is the expected number of inversions in the array?\n\nInput\n\nThe first input line contains an integer nn: the size of the array.\n\nThe second line contains nn integers r1,r2,\u2026,rnr1,r2,\u2026,rn: the range of possible values for each array position.\n\nOutput\n\nPrint the expected number of inversions rounded to six decimal places.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264ri\u22641001\u2264ri\u2264100\n\nExample\n\nInput:\n3\n5 2 7\n\nOutput:\n1.057143 "], "Stick Game": ["https://cses.fi/problemset/task/1729", "\nCSES - Stick Game\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a game where two players remove sticks from a heap. The players move alternately, and the player who removes the last stick wins the game.\n\nA set P={p1,p2,\u2026,pk}P={p1,p2,\u2026,pk} determines the allowed moves. For example, if P={1,3,4}P={1,3,4}, a player may remove 11, 33 or 44 sticks.\n\nYour task is find out for each number of sticks 1,2,\u2026,n1,2,\u2026,n if the first player has a winning or losing position.\n\nInput\n\nThe first input line has two integers nn and kk: the number of sticks and moves.\n\nThe next line has kk integers p1,p2,\u2026,pkp1,p2,\u2026,pk that describe the allowed moves. All integers are distinct, and one of them is 11.\n\nOutput\n\nPrint a string containing nn characters: W means a winning position, and L means a losing position.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n1\u2264k\u22641001\u2264k\u2264100\n1\u2264pi\u2264n1\u2264pi\u2264n\n\nExample\n\nInput:\n10 3\n1 3 4\n\nOutput:\nWLWWWWLWLW "], "Nim Game I": ["https://cses.fi/problemset/task/1730", "\nCSES - Nim Game I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn heaps of sticks and two players who move alternately. On each move, a player chooses a non-empty heap and removes any number of sticks. The player who removes the last stick wins the game.\n\nYour task is to find out who wins if both players play optimally.\n\nInput\n\nThe first input line contains an integer tt: the number of tests. After this, tt test cases are described:\n\nThe first line contains an integer nn: the number of heaps.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the number of sticks in each heap.\n\nOutput\n\nFor each test case, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\n\nConstraints\n\n1\u2264t\u22642\u22c51051\u2264t\u22642\u22c5105\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\nthe sum of all nn is at most 2\u22c51052\u22c5105\n\nExample\n\nInput:\n3\n4\n5 7 2 5\n2\n4 1\n3\n3 5 6\n\nOutput:\nfirst\nfirst\nsecond "], "Nim Game II": ["https://cses.fi/problemset/task/1098", "\nCSES - Nim Game II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn heaps of sticks and two players who move alternately. On each move, a player chooses a non-empty heap and removes 11, 22, or 33 sticks. The player who removes the last stick wins the game.\n\nYour task is to find out who wins if both players play optimally.\n\nInput\n\nThe first input line contains an integer tt: the number of tests. After this, tt test cases are described:\n\nThe first line contains an integer nn: the number of heaps.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the number of sticks in each heap.\n\nOutput\n\nFor each test case, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\n\nConstraints\n\n1\u2264t\u22642\u22c51051\u2264t\u22642\u22c5105\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\nthe sum of all nn is at most 2\u22c51052\u22c5105\n\nExample\n\nInput:\n3\n4\n5 7 2 5\n2\n4 1\n3\n4 4 4\n\nOutput:\nfirst\nfirst\nsecond "], "Stair Game": ["https://cses.fi/problemset/task/1099", "\nCSES - Stair Game\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is a staircase consisting of nn stairs, numbered 1,2,\u2026,n1,2,\u2026,n. Initially, each stair has some number of balls.\n\nThere are two players who move alternately. On each move, a player chooses a stair kk where k\u22601k\u22601 and it has at least one ball. Then, the player moves any number of balls from stair kk to stair k\u22121k\u22121. The player who moves last wins the game.\n\nYour task is to find out who wins the game when both players play optimally.\n\nNote that if there are no possible moves at all, the second player wins.\n\nInput\n\nThe first input line has an integer tt: the number of tests. After this, tt test cases are described:\n\nThe first line contains an integer nn: the number of stairs.\n\nThe next line has nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn: the initial number of balls on each stair.\n\nOutput\n\nFor each test, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\n\nConstraints\n\n1\u2264t\u22642\u22c51051\u2264t\u22642\u22c5105\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n0\u2264pi\u22641090\u2264pi\u2264109\n the sum of all nn is at most 2\u22c51052\u22c5105\n\nExample\n\nInput:\n3\n3\n0 2 1\n4\n1 1 1 1\n2\n5 3\n\nOutput:\nfirst\nsecond\nfirst "], "Grundy's Game": ["https://cses.fi/problemset/task/2207", "\nCSES - Grundy's Game\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is a heap of nn coins and two players who move alternately. On each move, a player chooses a heap and divides into two nonempty heaps that have a different number of coins. The player who makes the last move wins the game.\n\nYour task is to find out who wins if both players play optimally.\n\nInput\n\nThe first input line contains an integer tt: the number of tests.\n\nAfter this, there are tt lines that describe the tests. Each line has an integer nn: the number of coins in the initial heap.\n\nOutput\n\nFor each test case, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\n\nConstraints\n\n1\u2264t\u22641051\u2264t\u2264105\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\n3\n6\n7\n8\n\nOutput:\nfirst\nsecond\nfirst "], "Another Game": ["https://cses.fi/problemset/task/2208", "\nCSES - Another Game\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn heaps of coins and two players who move alternately. On each move, a player selects some of the nonempty heaps and removes one coin from each heap. The player who removes the last coin wins the game.\n\nYour task is to find out who wins if both players play optimally.\n\nInput\n\nThe first input line contains an integer tt: the number of tests. After this, tt test cases are described:\n\nThe first line contains an integer nn: the number of heaps.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the number of coins in each heap.\n\nOutput\n\nFor each test case, print \"first\" if the first player wins the game and \"second\" if the second player wins the game.\n\nConstraints\n\n1\u2264t\u22642\u22c51051\u2264t\u22642\u22c5105\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\nthe sum of all nn is at most 2\u22c51052\u22c5105\n\nExample\n\nInput:\n3\n3\n1 2 3\n2\n2 2\n4\n5 5 4 5\n\nOutput:\nfirst\nsecond\nfirst "], "Word Combinations": ["https://cses.fi/problemset/task/1731", "\nCSES - Word Combinations\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a string of length nn and a dictionary containing kk words. In how many ways can you create the string using the words?\n\nInput\n\nThe first input line has a string containing nn characters between a\u2013z.\n\nThe second line has an integer kk: the number of words in the dictionary.\n\nFinally there are kk lines describing the words. Each word is unique and consists of characters a\u2013z.\n\nOutput\n\nPrint the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u226450001\u2264n\u22645000\n1\u2264k\u22641051\u2264k\u2264105\nthe total length of the words is at most 106106\n\nExample\n\nInput:\nababc\n4\nab\nabab\nc\ncb\n\nOutput:\n2\n\nExplanation: The possible ways are ab+ab+c and abab+c.    "], "String Matching": ["https://cses.fi/problemset/task/1753", "\nCSES - String Matching\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string and a pattern, your task is to count the number of positions where the pattern occurs in the string.\n\nInput\n\nThe first input line has a string of length nn, and the second input line has a pattern of length mm. Both of them consist of characters a\u2013z.\n\nOutput\n\nPrint one integer: the number of occurrences.\n\nConstraints\n\n1\u2264n,m\u22641061\u2264n,m\u2264106\n\nExample\n\nInput:\nsaippuakauppias\npp\n\nOutput:\n2 "], "Finding Borders": ["https://cses.fi/problemset/task/1732", "\nCSES - Finding Borders\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA border of a string is a prefix that is also a suffix of the string but not the whole string. For example, the borders of abcababcab are ab and abcab.\n\nYour task is to find all border lengths of a given string.\n\nInput\n\nThe only input line has a string of length nn consisting of characters a\u2013z.\n\nOutput\n\nPrint all border lengths of the string in increasing order.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\nabcababcab\n\nOutput:\n2 5 "], "Finding Periods": ["https://cses.fi/problemset/task/1733", "\nCSES - Finding Periods\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA period of a string is a prefix that can be used to generate the whole string by repeating the prefix. The last repetition may be partial. For example, the periods of abcabca are abc, abcabc and abcabca.\n\nYour task is to find all period lengths of a string.\n\nInput\n\nThe only input line has a string of length nn consisting of characters a\u2013z.\n\nOutput\n\nPrint all period lengths in increasing order.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\nabcabca\n\nOutput:\n3 6 7 "], "Minimal Rotation": ["https://cses.fi/problemset/task/1110", "\nCSES - Minimal Rotation\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA rotation of a string can be generated by moving characters one after another from beginning to end. For example, the rotations of acab are acab, caba, abac, and baca.\n\nYour task is to determine the lexicographically minimal rotation of a string.\n\nInput\n\nThe only input line contains a string of length nn. Each character is one of a\u2013z.\n\nOutput\n\nPrint the lexicographically minimal rotation.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\nacab\n\nOutput:\nabac "], "Longest Palindrome": ["https://codeforces.com/problemset/problem/1304/B", "B. Longest Palindrometime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputReturning back to problem solving, Gildong is now studying about palindromes. He learned that a palindrome is a string that is the same as its reverse. For example, strings \"pop\", \"noon\", \"x\", and \"kkkkkk\" are palindromes, while strings \"moon\", \"tv\", and \"abab\" are not. An empty string is also a palindrome.Gildong loves this concept so much, so he wants to play with it. He has nn distinct strings of equal length mm. He wants to discard some of the strings (possibly none or all) and reorder the remaining strings so that the concatenation becomes a palindrome. He also wants the palindrome to be as long as possible. Please help him find one.InputThe first line contains two integers nn and mm (1\u2264n\u22641001\u2264n\u2264100, 1\u2264m\u2264501\u2264m\u226450) \u2014 the number of strings and the length of each string.Next nn lines contain a string of length mm each, consisting of lowercase Latin letters only. All strings are distinct.OutputIn the first line, print the length of the longest palindrome string you made.In the second line, print that palindrome. If there are multiple answers, print any one of them. If the palindrome is empty, print an empty line or don't print this line at all.ExamplesInputCopy3 3\ntab\none\nbat\nOutputCopy6\ntabbat\nInputCopy4 2\noo\nox\nxo\nxx\nOutputCopy6\noxxxxo\nInputCopy3 5\nhello\ncodef\norces\nOutputCopy0\n\nInputCopy9 4\nabab\nbaba\nabcd\nbcde\ncdef\ndefg\nwxyz\nzyxw\nijji\nOutputCopy20\nababwxyzijjizyxwbaba\nNoteIn the first example, \"battab\" is also a valid answer.In the second example, there can be 4 different valid answers including the sample output. We are not going to provide any hints for what the others are.In the third example, the empty string is the only valid palindrome string."], "Required Substring": ["https://cses.fi/problemset/task/1112", "\nCSES - Required Substring\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to calculate the number of strings of length nn having a given pattern of length mm as their substring. All strings consist of characters A\u2013Z.\n\nInput\n\nThe first input line has an integer nn: the length of the final string.\n\nThe second line has a pattern of length mm.\n\nOutput\n\nPrint the number of strings modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u226410001\u2264n\u22641000\n1\u2264m\u22641001\u2264m\u2264100\n\nExample\n\nInput:\n6\nABCDB\n\nOutput:\n52\n\nExplanation: The final string will be of the form ABCDBxx or xxABCDB where xx is any character between A\u2013Z.    "], "Palindrome Queries": ["https://cses.fi/problemset/task/2420", "\nCSES - Palindrome Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a string that consists of nn characters between a\u2013z. The positions of the string are indexed 1,2,\u2026,n1,2,\u2026,n.\n\nYour task is to process mm operations of the following types:\n Change the character at position kk to xx\n Check if the substring from position aa to position bb is a palindrome\n\nInput\n\nThe first input line has two integers nn and mm: the length of the string and the number of operations.\n\nThe next line has a string that consists of nn characters.\n\nFinally, there are mm lines that describe the operations. Each line is of the form \"1 kk xx\" or \"2 aa bb\".\n\nOutput\n\nFor each operation 2, print YES if the substring is a palindrome and NO otherwise.\n\nConstraints\n\n1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n1\u2264k\u2264n1\u2264k\u2264n\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n7 5\naybabtu\n2 3 5\n1 3 x\n2 3 5\n1 5 x\n2 3 5\n\nOutput:\nYES\nNO\nYES "], "Finding Patterns": ["https://cses.fi/problemset/task/2102", "\nCSES - Finding Patterns\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string and patterns, check for each pattern if it appears in the string.\n\nInput\n\nThe first input line has a string of length nn.\n\nThe next input line has an integer kk: the number of patterns. Finally, there are kk lines that describe the patterns.\n\nThe string and the patterns consist of characters a\u2013z.\n\nOutput\n\nFor each pattern, print \"YES\" if it appears in the string and \"NO\" otherwise.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264k\u22645\u22c51051\u2264k\u22645\u22c5105\nthe total length of the patterns is at most 5\u22c51055\u22c5105\n\nExample\n\nInput:\naybabtu\n3\nbab\nabc\nayba\n\nOutput:\nYES\nNO\nYES "], "Counting Patterns": ["https://cses.fi/problemset/task/2103", "\nCSES - Counting Patterns\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string and patterns, count for each pattern the number of positions where it appears in the string.\n\nInput\n\nThe first input line has a string of length nn.\n\nThe next input line has an integer kk: the number of patterns. Finally, there are kk lines that describe the patterns.\n\nThe string and the patterns consist of characters a\u2013z.\n\nOutput\n\nFor each pattern, print the number of positions.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264k\u22645\u22c51051\u2264k\u22645\u22c5105\nthe total length of the patterns is at most 5\u22c51055\u22c5105\n\nExample\n\nInput:\naybabtu\n3\nbab\nabc\na\n\nOutput:\n1\n0\n2 "], "Pattern Positions": ["https://cses.fi/problemset/task/2104", "\nCSES - Pattern Positions\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string and patterns, find for each pattern the first position (1-indexed) where it appears in the string.\n\nInput\n\nThe first input line has a string of length nn.\n\nThe next input line has an integer kk: the number of patterns. Finally, there are kk lines that describe the patterns.\n\nThe string and the patterns consist of characters a\u2013z.\n\nOutput\n\nPrint the first position for each pattern (or \u22121\u22121 if it does not appear at all).\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264k\u22645\u22c51051\u2264k\u22645\u22c5105\nthe total length of the patterns is at most 5\u22c51055\u22c5105\n\nExample\n\nInput:\naybabtu\n3\nbab\nabc\na\n\nOutput:\n3\n-1\n1 "], "Distinct Substrings": ["https://cses.fi/problemset/task/2105", "\nCSES - Distinct Substrings\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nCount the number of distinct substrings that appear in a string.\n\nInput\n\nThe only input line has a string of length nn that consists of characters a\u2013z.\n\nOutput\n\nPrint one integer: the number of substrings.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n\nExample\n\nInput:\nabaa\n\nOutput:\n8\n\nExplanation: the substrings are a, b, aa, ab, ba, aba, baa and abaa.    "], "Repeating Substring": ["https://cses.fi/problemset/task/2106", "\nCSES - Repeating Substring\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA repeating substring is a substring that occurs in two (or more) locations in the string. Your task is to find the longest repeating substring in a given string.\n\nInput\n\nThe only input line has a string of length nn that consists of characters a\u2013z.\n\nOutput\n\nPrint the longest repeating substring. If there are several possibilities, you can print any of them. If there is no repeating substring, print \u22121\u22121.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n\nExample\n\nInput:\ncabababc\n\nOutput:\nabab "], "String Functions": ["https://cses.fi/problemset/task/2107", "\nCSES - String Functions\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nWe consider a string of nn characters, indexed 1,2,\u2026,n1,2,\u2026,n. Your task is to calculate all values of the following functions:\n\n z(i)z(i) denotes the maximum length of a substring that begins at position ii and is a prefix of the string. In addition, z(1)=0z(1)=0.\n \u03c0(i)\u03c0(i) denotes the maximum length of a substring that ends at position ii, is a prefix of the string, and whose length is at most i\u22121i\u22121.\n\nNote that the function zz is used in the Z-algorithm, and the function \u03c0\u03c0 is used in the KMP algorithm.\n\nInput\n\nThe only input line has a string of length nn. Each character is between a\u2013z.\n\nOutput\n\nPrint two lines: first the values of the zz function, and then the values of the \u03c0\u03c0 function.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\nabaabca\n\nOutput:\n0 0 1 2 0 0 1\n0 0 1 1 2 0 1 "], "Substring Order I": ["https://cses.fi/problemset/task/2108", "\nCSES - Substring Order I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a string of length nn. If all of its distinct substrings are ordered lexicographically, what is the kkth smallest of them?\n\nInput\n\nThe first input line has a string of length nn that consists of characters a\u2013z.\n\nThe second input line has an integer kk.\n\nOutput\n\nPrint the kkth smallest distinct substring in lexicographical order.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264k\u2264n(n+1)21\u2264k\u2264n(n+1)2\nIt is guaranteed that kk does not exceed the number of distinct substrings.\n\nExample\n\nInput:\nbabaacbaab\n10\n\nOutput:\naba\n\nExplanation: The 10 smallest distinct substrings in order are a, aa, aab, aac, aacb, aacba, aacbaa, aacbaab, ab, and aba.    "], "Substring Order II": ["https://cses.fi/problemset/task/2109", "\nCSES - Substring Order II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a string of length nn. If all of its substrings (not necessarily distinct) are ordered lexicographically, what is the kkth smallest of them?\n\nInput\n\nThe first input line has a string of length nn that consists of characters a\u2013z.\n\nThe second input line has an integer kk.\n\nOutput\n\nPrint the kkth smallest substring in lexicographical order.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264k\u2264n(n+1)21\u2264k\u2264n(n+1)2\n\nExample\n\nInput:\nbaabaa\n10\n\nOutput:\nab\n\nExplanation: The 10 smallest substrings in order are a, a, a, a, aa, aa, aab, aaba, aabaa, and ab.    "], "Substring Distribution": ["https://cses.fi/problemset/task/2110", "\nCSES - Substring Distribution\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a string of length nn. For every integer between 1\u2026n1\u2026n you need to print the number of distinct substrings of that length.\n\nInput\n\nThe only input line has a string of length nn that consists of characters a\u2013z.\n\nOutput\n\nFor each integer between 1\u2026n1\u2026n print the number of distinct substrings of that length.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n\nExample\n\nInput:\nabab\n\nOutput:\n2 2 2 1\n"], "Point Location Test": ["https://cses.fi/problemset/task/2189", "\nCSES - Point Location Test\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is a line that goes through the points p1=(x1,y1)p1=(x1,y1) and p2=(x2,y2)p2=(x2,y2). There is also a point p3=(x3,y3)p3=(x3,y3).\n\nYour task is to determine whether p3p3 is located on the left or right side of the line or if it touches the line when we are looking from p1p1 to p2p2.\n\nInput\n\nThe first input line has an integer tt: the number of tests.\n\nAfter this, there are tt lines that describe the tests. Each line has six integers: x1x1, y1y1, x2x2, y2y2, x3x3 and y3y3.\n\nOutput\n\nFor each test, print \"LEFT\", \"RIGHT\" or \"TOUCH\".\n\nConstraints\n\n1\u2264t\u22641051\u2264t\u2264105\n\u2212109\u2264x1,y1,x2,y2,x3,y3\u2264109\u2212109\u2264x1,y1,x2,y2,x3,y3\u2264109\nx1\u2260x2x1\u2260x2 or y1\u2260y2y1\u2260y2\n\nExample\n\nInput:\n3\n1 1 5 3 2 3\n1 1 5 3 4 1\n1 1 5 3 3 2\n\nOutput:\nLEFT\nRIGHT\nTOUCH "], "Line Segment Intersection": ["https://cses.fi/problemset/task/2190", "\nCSES - Line Segment Intersection\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are two line segments: the first goes through the points (x1,y1)(x1,y1) and (x2,y2)(x2,y2), and the second goes through the points (x3,y3)(x3,y3) and (x4,y4)(x4,y4).\n\nYour task is to determine if the line segments intersect, i.e., they have at least one common point.\n\nInput\n\nThe first input line has an integer tt: the number of tests.\n\nAfter this, there are tt lines that describe the tests. Each line has eight integers x1x1, y1y1, x2x2, y2y2, x3x3, y3y3, x4x4 and y4y4.\n\nOutput\n\nFor each test, print \"YES\" if the line segments intersect and \"NO\" otherwise.\n\nConstraints\n\n1\u2264t\u22641051\u2264t\u2264105\n\u2212109\u2264x1,y1,x2,y2,x3,y3,x4,y4\u2264109\u2212109\u2264x1,y1,x2,y2,x3,y3,x4,y4\u2264109\n(x1,y1)\u2260(x2,y2)(x1,y1)\u2260(x2,y2)\n(x3,y3)\u2260(x4,y4)(x3,y3)\u2260(x4,y4)\n\nExample\n\nInput:\n5\n1 1 5 3 1 2 4 3\n1 1 5 3 1 1 4 3\n1 1 5 3 2 3 4 1\n1 1 5 3 2 4 4 1\n1 1 5 3 3 2 7 4\n\nOutput:\nNO\nYES\nYES\nYES\nYES "], "Polygon Area": ["https://cses.fi/problemset/task/2191", "\nCSES - Polygon Area\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to calculate the area of a given polygon.\n\nThe polygon consists of nn vertices (x1,y1),(x2,y2),\u2026,(xn,yn)(x1,y1),(x2,y2),\u2026,(xn,yn). The vertices (xi,yi)(xi,yi) and (xi+1,yi+1)(xi+1,yi+1) are adjacent for i=1,2,\u2026,n\u22121i=1,2,\u2026,n\u22121, and the vertices (x1,y1)(x1,y1) and (xn,yn)(xn,yn) are also adjacent.\n\nInput\n\nThe first input line has an integer nn: the number of vertices.\n\nAfter this, there are nn lines that describe the vertices. The iith such line has two integers xixi and yiyi.\n\nYou may assume that the polygon is simple, i.e., it does not intersect itself.\n\nOutput\n\nPrint one integer: 2a2a where the area of the polygon is aa (this ensures that the result is an integer).\n\nConstraints\n\n3\u2264n\u226410003\u2264n\u22641000\n\u2212109\u2264xi,yi\u2264109\u2212109\u2264xi,yi\u2264109\n\nExample\n\nInput:\n4\n1 1\n4 2\n3 5\n1 4\n\nOutput:\n16 "], "Point in Polygon": ["https://cses.fi/problemset/task/2192", "\nCSES - Point in Polygon\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a polygon of nn vertices and a list of mm points. Your task is to determine for each point if it is inside, outside or on the boundary of the polygon.\n\nThe polygon consists of nn vertices (x1,y1),(x2,y2),\u2026,(xn,yn)(x1,y1),(x2,y2),\u2026,(xn,yn). The vertices (xi,yi)(xi,yi) and (xi+1,yi+1)(xi+1,yi+1) are adjacent for i=1,2,\u2026,n\u22121i=1,2,\u2026,n\u22121, and the vertices (x1,y1)(x1,y1) and (xn,yn)(xn,yn) are also adjacent.\n\nInput\n\nThe first input line has two integers nn and mm: the number of vertices in the polygon and the number of points.\n\nAfter this, there are nn lines that describe the polygon. The iith such line has two integers xixi and yiyi.\n\nYou may assume that the polygon is simple, i.e., it does not intersect itself.\n\nFinally, there are mm lines that describe the points. Each line has two integers xx and yy.\n\nOutput\n\nFor each point, print \"INSIDE\", \"OUTSIDE\" or \"BOUNDARY\".\n\nConstraints\n\n3\u2264n,m\u226410003\u2264n,m\u22641000\n1\u2264m\u226410001\u2264m\u22641000\n\u2212109\u2264xi,yi\u2264109\u2212109\u2264xi,yi\u2264109\n\u2212109\u2264x,y\u2264109\u2212109\u2264x,y\u2264109\n\nExample\n\nInput:\n4 3\n1 1\n4 2\n3 5\n1 4\n2 3\n3 1\n1 3\n\nOutput:\nINSIDE\nOUTSIDE\nBOUNDARY "], "Polygon Lattice Points": ["https://cses.fi/problemset/task/2193", "\nCSES - Polygon Lattice Points\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a polygon, your task is to calculate the number of lattice points inside the polygon and on its boundary. A lattice point is a point whose coordinates are integers.\n\nThe polygon consists of nn vertices (x1,y1),(x2,y2),\u2026,(xn,yn)(x1,y1),(x2,y2),\u2026,(xn,yn). The vertices (xi,yi)(xi,yi) and (xi+1,yi+1)(xi+1,yi+1) are adjacent for i=1,2,\u2026,n\u22121i=1,2,\u2026,n\u22121, and the vertices (x1,y1)(x1,y1) and (xn,yn)(xn,yn) are also adjacent.\n\nInput\n\nThe first input line has an integer nn: the number of vertices.\n\nAfter this, there are nn lines that describe the vertices. The iith such line has two integers xixi and yiyi.\n\nYou may assume that the polygon is simple, i.e., it does not intersect itself.\n\nOutput\n\nPrint two integers: the number of lattice points inside the polygon and on its boundary.\n\nConstraints\n\n3\u2264n\u22641053\u2264n\u2264105\n\u2212106\u2264xi,yi\u2264106\u2212106\u2264xi,yi\u2264106\n\nExample\n\nInput:\n4\n1 1\n5 3\n3 5\n1 4\n\nOutput:\n6 8 "], "Minimum Euclidean Distance": ["https://cses.fi/problemset/task/2194", "\nCSES - Minimum Euclidean Distance\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a set of points in the two-dimensional plane, your task is to find the minimum Euclidean distance between two distinct points.\n\nThe Euclidean distance of points (x1,y1)(x1,y1) and (x2,y2)(x2,y2) is (x1\u2212x2)2+(y1\u2212y2)2\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u221a(x1\u2212x2)2+(y1\u2212y2)2.\n\nInput\n\nThe first input line has an integer nn: the number of points.\n\nAfter this, there are nn lines that describe the points. Each line has two integers xx and yy. You may assume that each point is distinct.\n\nOutput\n\nPrint one integer: d2d2 where dd is the minimum Euclidean distance (this ensures that the result is an integer).\n\nConstraints\n\n2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105\n\u2212109\u2264x,y\u2264109\u2212109\u2264x,y\u2264109\n\nExample\n\nInput:\n4\n2 1\n4 4\n1 2\n6 3\n\nOutput:\n2 "], "Convex Hull": ["https://cses.fi/problemset/task/2195", "\nCSES - Convex Hull\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a set of nn points in the two-dimensional plane, your task is to determine the convex hull of the points.\n\nInput\n\nThe first input line has an integer nn: the number of points.\n\nAfter this, there are nn lines that describe the points. Each line has two integers xx and yy: the coordinates of a point.\n\nYou may assume that each point is distinct, and the area of the hull is positive.\n\nOutput\n\nFirst print an integer kk: the number of points in the convex hull.\n\nAfter this, print kk lines that describe the points. You can print the points in any order. Print all points that lie on the convex hull.\n\nConstraints\n\n3\u2264n\u22642\u22c51053\u2264n\u22642\u22c5105\n\u2212109\u2264x,y\u2264109\u2212109\u2264x,y\u2264109\n\nExample\n\nInput:\n6\n2 1\n2 5\n3 3\n4 3\n4 4\n6 3\n\nOutput:\n4\n2 1\n2 5\n4 4\n6 3 "], "Meet in the Middle": ["https://cses.fi/problemset/task/1628", "\nCSES - Meet in the Middle\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array of nn numbers. In how many ways can you choose a subset of the numbers with sum xx?\n\nInput\n\nThe first input line has two numbers nn and xx: the array size and the required sum.\n\nThe second line has nn integers t1,t2,\u2026,tnt1,t2,\u2026,tn: the numbers in the array.\n\nOutput\n\nPrint the number of ways you can create the sum xx.\n\nConstraints\n\n1\u2264n\u2264401\u2264n\u226440\n1\u2264x\u22641091\u2264x\u2264109\n1\u2264ti\u22641091\u2264ti\u2264109\n\nExample\n\nInput:\n4 5\n1 2 3 2\n\nOutput:\n3 "], "Hamming Distance": ["https://cses.fi/problemset/task/2136", "\nCSES - Hamming Distance\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThe Hamming distance between two strings aa and bb of equal length is the number of positions where the strings differ.\n\nYou are given nn bit strings, each of length kk and your task is to calculate the minimum Hamming distance between two strings. \n\nInput\n\nThe first input line has two integers nn and kk: the number of bit strings and their length. \n\nThen there are nn lines each consisting of one bit string of length kk.\n\nOutput\n\nPrint the minimum Hamming distance between two strings.\n\nConstraints\n\n2\u2264n\u22642\u22c51042\u2264n\u22642\u22c5104\n1\u2264k\u2264301\u2264k\u226430\n\nExample\n\nInput:\n5 6\n110111\n001000\n100001\n101000\n101110\n\nOutput:\n1\n\nExplanation: The strings 101000 and 001000 differ only at the first position.    "], "Beautiful Subgrids": ["https://cses.fi/problemset/task/2137", "\nCSES - Beautiful Subgrids\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an n\u00d7nn\u00d7n grid whose each square is either black or white. A subgrid is called beautiful if its height and width is at least two and all of its corners are black. How many beautiful subgrids are there within the given grid?\n\nInput\n\nThe first input line has an integer nn: the size of the grid.\n\nThen there are nn lines describing the grid: 1 means that a square is black and 0 means it is white.\n\nOutput\n\nPrint the number of beautiful subgrids.\n\nConstraints\n\n1\u2264n\u226430001\u2264n\u22643000\n\nExample\n\nInput:\n5\n00010\n11111\n00110\n11001\n00010\n\nOutput:\n4 "], "Reachable Nodes": ["https://cses.fi/problemset/task/2138", "\nCSES - Reachable Nodes\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA directed acyclic graph consists of nn nodes and mm edges. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nCalculate for each node the number of nodes you can reach from that node (including the node itself).\n\nInput\n\nThe first input line has two integers nn and mm: the number of nodes and edges.\n\nThen there are mm lines describing the edges. Each line has two distinct integers aa and bb: there is an edge from node aa to node bb.\n\nOutput\n\nPrint nn integers: for each node the number of reachable nodes.\n\nConstraints\n\n1\u2264n\u22645\u22c51041\u2264n\u22645\u22c5104\n1\u2264m\u22641051\u2264m\u2264105\n\nExample\n\nInput:\n5 6\n1 2\n1 3\n1 4\n2 3\n3 5\n4 5\n\nOutput:\n5 3 2 2 1 "], "Reachability Queries": ["https://cses.fi/problemset/task/2143", "\nCSES - Reachability Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA directed graph consists of nn nodes and mm edges. The edges are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nYour task is to answer qq queries of the form \"can you reach node bb from node aa?\"\n\nInput\n\nThe first input line has three integers nn, mm and qq: the number of nodes, edges and queries.\n\nThen there are mm lines describing the edges. Each line has two distinct integers aa and bb: there is an edge from node aa to node bb.\n\nFinally there are qq lines describing the queries. Each line consists of two integers aa and bb: \"can you reach node bb from node aa?\"\n\nOutput\n\nPrint the answer for each query: either \"YES\" or \"NO\".\n\nConstraints\n\n1\u2264n\u22645\u22c51041\u2264n\u22645\u22c5104\n1\u2264m,q\u22641051\u2264m,q\u2264105\n\nExample\n\nInput:\n4 4 3\n1 2\n2 3\n3 1\n4 3\n1 3\n1 4\n4 1\n\nOutput:\nYES\nNO\nYES\n "], "Cut and Paste": ["https://cses.fi/problemset/task/2072", "\nCSES - Cut and Paste\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string, your task is to process operations where you cut a substring and paste it to the end of the string. What is the final string after all the operations?\n\nInput\n\nThe first input line has two integers nn and mm: the length of the string and the number of operations. The characters of the string are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has a string of length nn that consists of characters A\u2013Z.\n\nFinally, there are mm lines that describe the operations. Each line has two integers aa and bb: you cut a substring from position aa to position bb.\n\nOutput\n\nPrint the final string after all the operations.\n\nConstraints\n\n 1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n 1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n7 2\nAYBABTU\n3 5\n3 5\n\nOutput:\nAYABTUB "], "Substring Reversals": ["https://cses.fi/problemset/task/2073", "\nCSES - Substring Reversals\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string, your task is to process operations where you reverse a substring of the string. What is the final string after all the operations?\n\nInput\n\nThe first input line has two integers nn and mm: the length of the string and the number of operations. The characters of the string are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has a string of length nn that consists of characters A\u2013Z.\n\nFinally, there are mm lines that describe the operations. Each line has two integers aa and bb: you reverse a substring from position aa to position bb.\n\nOutput\n\nPrint the final string after all the operations.\n\nConstraints\n\n 1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n 1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n7 2\nAYBABTU\n3 4\n4 7\n\nOutput:\nAYAUTBB "], "Reversals and Sums": ["https://cses.fi/problemset/task/2074", "\nCSES - Reversals and Sums\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, you have to process following operations:\n\n reverse a subarray\n calculate the sum of values in a subarray\n\nInput\n\nThe first input line has two integers nn and mm: the size of the array and the number of operations. The array elements are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line as nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nFinally, there are mm lines that describe the operations. Each line has three integers tt, aa and bb. If t=1t=1, you should reverse a subarray from aa to bb. If t=2t=2, you should calculate the sum of values from aa to bb.\n\nOutput\n\nPrint the answer to each operation where t=2t=2.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n 1\u2264m\u22641051\u2264m\u2264105\n 0\u2264xi\u22641090\u2264xi\u2264109\n 1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n8 3\n2 1 3 4 5 3 4 4\n2 2 4\n1 3 6\n2 2 4\n\nOutput:\n8\n9 "], "Necessary Roads": ["https://cses.fi/problemset/task/2076", "\nCSES - Necessary Roads\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm roads between them. There is a route between any two cities.\n\nA road is called necessary if there is no route between some two cities after removing that road. Your task is to find all necessary roads.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and roads. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines that describe the roads. Each line has two integers aa and bb: there is a road between cities aa and bb. There is at most one road between two cities, and every road connects two distinct cities.\n\nOutput\n\nFirst print an integer kk: the number of necessary roads. After that, print kk lines that describe the roads. You may print the roads in any order.\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 5\n1 2\n1 4\n2 4\n3 5\n4 5\n\nOutput:\n2\n3 5\n4 5 "], "Necessary Cities": ["https://cses.fi/problemset/task/2077", "\nCSES - Necessary Cities\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm roads between them. There is a route between any two cities.\n\nA city is called necessary if there is no route between some other two cities after removing that city (and adjacent roads). Your task is to find all necessary cities.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and roads. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines that describe the roads. Each line has two integers aa and bb: there is a road between cities aa and bb. There is at most one road between two cities, and every road connects two distinct cities.\n\nOutput\n\nFirst print an integer kk: the number of necessary cities. After that, print a list of kk cities. You may print the cities in any order.\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 5\n1 2\n1 4\n2 4\n3 5\n4 5\n\nOutput:\n2\n4 5 "], "Eulerian Subgraphs": ["https://cses.fi/problemset/task/2078", "\nCSES - Eulerian Subgraphs\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an undirected graph that has nn nodes and mm edges.\n\nWe consider subgraphs that have all nodes of the original graph and some of its edges. A subgraph is called Eulerian if each node has even degree.\n\nYour task is to count the number of Eulerian subgraphs modulo 109+7109+7.\n\nInput\n\nThe first input line has two integers nn and mm: the number of nodes and edges. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines that describe the edges. Each line has two integers aa and bb: there is an edge between nodes aa and bb. There is at most one edge between two nodes, and each edge connects two distinct nodes.\n\nOutput\n\nPrint the number of Eulerian subgraphs modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n0\u2264m\u22642\u22c51050\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 3\n1 2\n1 3\n2 3\n\nOutput:\n2\n\nExplanation: You can either keep or remove all edges, so there are two possible Eulerian subgraphs.    "], "Monster Game I": ["https://cses.fi/problemset/task/2084", "\nCSES - Monster Game I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are playing a game that consists of nn levels. Each level has a monster. On levels 1,2,\u2026,n\u221211,2,\u2026,n\u22121, you can either kill or escape the monster. However, on level nn you must kill the final monster to win the game.\n\nKilling a monster takes sfsf time where ss is the monster's strength and ff is your skill factor (lower skill factor is better). After killing a monster, you get a new skill factor. What is the minimum total time in which you can win the game?\n\nInput\n\nThe first input line has two integers nn and xx: the number of levels and your initial skill factor.\n\nThe second line has nn integers s1,s2,\u2026,sns1,s2,\u2026,sn: each monster's strength.\n\nThe third line has nn integers f1,f2,\u2026,fnf1,f2,\u2026,fn: your new skill factor after killing a monster.\n\nOutput\n\nPrint one integer: the minimum total time to win the game.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n 1\u2264x\u22641061\u2264x\u2264106\n 1\u2264s1\u2264s2\u2264\u22ef\u2264sn\u22641061\u2264s1\u2264s2\u2264\u22ef\u2264sn\u2264106\n x\u2265f1\u2265f2\u2265\u22ef\u2265fn\u22651x\u2265f1\u2265f2\u2265\u22ef\u2265fn\u22651\n\nExample\n\nInput:\n5 100\n20 30 30 50 90\n90 60 20 20 10\n\nOutput:\n4800\n\nExplanation: The best way to play is to kill the second and fifth monster.    "], "Monster Game II": ["https://cses.fi/problemset/task/2085", "\nCSES - Monster Game II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are playing a game that consists of nn levels. Each level has a monster. On levels 1,2,\u2026,n\u221211,2,\u2026,n\u22121, you can either kill or escape the monster. However, on level nn you must kill the final monster to win the game.\n\nKilling a monster takes sfsf time where ss is the monster's strength and ff is your skill factor. After killing a monster, you get a new skill factor  (lower skill factor is better). What is the minimum total time in which you can win the game?\n\nInput\n\nThe first input line has two integers nn and xx: the number of levels and your initial skill factor.\n\nThe second line has nn integers s1,s2,\u2026,sns1,s2,\u2026,sn: each monster's strength.\n\nThe third line has nn integers f1,f2,\u2026,fnf1,f2,\u2026,fn: your new skill factor after killing a monster.\n\nOutput\n\nPrint one integer: the minimum total time to win the game.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n 1\u2264x\u22641061\u2264x\u2264106\n 1\u2264si,fi\u22641061\u2264si,fi\u2264106\n\nExample\n\nInput:\n5 100\n50 20 30 90 30\n60 20 20 10 90\n\nOutput:\n2600\n\nExplanation: The best way to play is to kill the second and fifth monster.    "], "Subarray Squares": ["https://cses.fi/problemset/task/2086", "\nCSES - Subarray Squares\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn elements, your task is to divide into kk subarrays. The cost of each subarray is the square of the sum of the values in the subarray. What is the minimum total cost if you act optimally?\n\nInput\n\nThe first input line has two integers nn and kk: the array elements and the number of subarrays. The array elements are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint one integer: the minimum total cost.\n\nConstraints\n\n1\u2264k\u2264n\u226430001\u2264k\u2264n\u22643000\n1\u2264xi\u22641051\u2264xi\u2264105\n\nExample\n\nInput:\n8 3\n2 3 1 2 2 3 4 1\n\nOutput:\n110\n\nExplanation: An optimal solution is [2,3,1][2,3,1], [2,2,3][2,2,3], [4,1][4,1], whose cost is (2+3+1)2+(2+2+3)2+(4+1)2=110(2+3+1)2+(2+2+3)2+(4+1)2=110.    "], "Houses and Schools": ["https://cses.fi/problemset/task/2087", "\nCSES - Houses and Schools\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn houses on a street, numbered 1,2,\u2026,n1,2,\u2026,n. The distance of houses aa and bb is |a\u2212b||a\u2212b|. You know the number of children in each house.\n\nYour task is to establish kk schools in such a way that each school is in some house. Then, each child goes to the nearest school. What is the minimum total walking distance of the children if you act optimally?\n\nInput\n\nThe first input line has two integers nn and kk: the number of houses and the number of schools. The houses are numbered 1,2\u2026,n1,2\u2026,n.\n\nAfter this, there are nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn: the number of children in each house.\n\nOutput\n\nPrint the minimum total distance.\n\nConstraints\n\n1\u2264k\u2264n\u226430001\u2264k\u2264n\u22643000\n1\u2264ci\u22641091\u2264ci\u2264109\n\nExample\n\nInput:\n6 2\n2 7 1 4 6 4\n\nOutput:\n11\n\nExplanation: Houses 2 and 5 will have schools.    "], "Knuth Division": ["https://cses.fi/problemset/task/2088", "\nCSES - Knuth Division\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn numbers, your task is to divide it into nn subarrays, each of which has a single element.\n\nOn each move, you may choose any subarray and split it into two subarrays. The cost of such a move is the sum of values in the chosen subarray.\n\nWhat is the minimum total cost if you act optimally?\n\nInput\n\nThe first input line has an integer nn: the array size. The array elements are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint one integer: the minimum total cost.\n\nConstraints\n\n1\u2264n\u226450001\u2264n\u22645000\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n5\n2 7 3 2 5\n\nOutput:\n43 "], "Apples and Bananas": ["https://cses.fi/problemset/task/2111", "\nCSES - Apples and Bananas\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are apples and bananas and each of them has an integer weight between 1\u2026k1\u2026k. Your task is to calculate for each weight ww between 2...2k2...2k the number of ways we can choose an apple and a banana whose combined weight is ww.\n\nInput\n\nThe first input line contains three integers kk, nn and mm: the number kk, the number of apples and the number of bananas.\n\nThe next line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an: weight of each apple.\n\nThe last line contains mm integers b1,b2,\u2026,bmb1,b2,\u2026,bm: weight of each banana.\n\nOutput\n\nFor each integer ww between 2\u20262k2\u20262k print the number of ways to choose an apple and a banana whose combined weight is ww.\n\nConstraints\n\n1\u2264k,n,m\u22642\u22c51051\u2264k,n,m\u22642\u22c5105\n1\u2264ai\u2264k1\u2264ai\u2264k\n1\u2264bi\u2264k1\u2264bi\u2264k\n\nExample\n\nInput:\n5 3 4\n5 2 5\n4 3 2 3\n\nOutput:\n0 0 1 2 1 2 4 2 0  \n\nExplanation: For example for ww = 88 there are 44 different ways: we can pick an apple of weight 55 in two different ways and a banana of weight 33 in two different ways.    "], "One Bit Positions": ["https://cses.fi/problemset/task/2112", "\nCSES - One Bit Positions\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a binary string of length nn and your task is to calculate for every k between 1\u2026n\u221211\u2026n\u22121 the number of ways we can choose two positions ii and jj such that i\u2212j=ki\u2212j=k and there is a one-bit at both positions.\n\nInput\n\nThe only input line has a string that consists only of characters 00 and 11.\n\nOutput\n\nFor every distance kk between 1\u2026n\u221211\u2026n\u22121 print the number of ways we can choose two such positions.\n\nConstraints\n\n2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n1001011010\n\nOutput:\n1 2 3 0 2 1 0 1 0 "], "Signal Processing": ["https://cses.fi/problemset/task/2113", "\nCSES - Signal Processing\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given two integer sequences: a signal and a mask. Your task is to process the signal by moving the mask through the signal from left to right. At each mask position calculate the sum of products of aligned signal and mask values in the part where the signal and the mask overlap.\n\nInput\n\nThe first input line consists of two integers nn and mm: the length of the signal and the length of the mask.\n\nThe next line consists of nn integers a1,a2,\u2026,ana1,a2,\u2026,an defining the signal.\n\nThe last line consists of mm integers b1,b2,\u2026,bmb1,b2,\u2026,bm defining the mask. \n\nOutput\n\nPrint n+m\u22121n+m\u22121 integers: the sum of products of aligned values at each mask position from left to right.\n\nConstraints\n\n1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105\n1\u2264ai,bi\u22641001\u2264ai,bi\u2264100\n\nExample\n\nInput:\n5 3\n1 3 2 1 4\n1 2 3\n\nOutput:\n3 11 13 10 16 9 4\n\nExplanation: For example, at the second mask position the sum of aligned products is 2\u22c51+3\u22c53=112\u22c51+3\u22c53=11.    "], "New Roads Queries": ["https://cses.fi/problemset/task/2101", "\nCSES - New Roads Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities in Byteland but no roads between them. However, each day, a new road will be built. There will be a total of mm roads.\n\nYour task is to process qq queries of the form: \"after how many days can we travel from city aa to city bb for the first time?\"\n\nInput\n\nThe first input line has three integers nn, mm and qq: the number of cities, roads and queries. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines that describe the roads in the order they are built. Each line has two integers aa and bb: there will be a road between cities aa and bb.\n\nFinally, there are qq lines that describe the queries. Each line has two integers aa and bb: we want to travel from city aa to city bb.\n\nOutput\n\nFor each query, print the number of days, or \u22121\u22121 if it is never possible.\n\nConstraints\n\n1\u2264n,m,q\u22642\u22c51051\u2264n,m,q\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 4 3\n1 2\n2 3\n1 3\n2 5\n1 3\n3 4\n3 5\n\nOutput:\n2\n-1\n4 "], "Dynamic Connectivity": ["https://cses.fi/problemset/task/2133", "\nCSES - Dynamic Connectivity\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider an undirected graph that consists of nn nodes and mm edges. There are two types of events that can happen:\nA new edge is created between nodes aa and bb.\nAn existing edge between nodes aa and bb is removed.\n\nYour task is to report the number of components after every event.\n\nInput\n\nThe first input line has three integers nn, mm and kk: the number of nodes, edges and events.\n\nAfter this there are mm lines describing the edges. Each line has two integers aa and bb: there is an edge between nodes aa and bb. There is at most one edge between any pair of nodes.\n\nThen there are kk lines describing the events. Each line has the form \"tt aa bb\" where tt is 1 (create a new edge) or 2 (remove an edge). A new edge is always created between two nodes that do not already have an edge between them, and only existing edges can get removed.\n\nOutput\n\nPrint k+1k+1 integers: first the number of components before the first event, and after this the new number of components after each event.\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m,k\u22641051\u2264m,k\u2264105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3 3\n1 4\n2 3\n3 5\n1 2 5\n2 3 5\n1 1 2\n\nOutput:\n2 2 2 1 "], "Parcel Delivery": ["https://cses.fi/problemset/task/2121", "\nCSES - Parcel Delivery\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm routes through which parcels can be carried from one city to another city. For each route, you know the maximum number of parcels and the cost of a single parcel.\n\nYou want to send kk parcels from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4. What is the cheapest way to do that?\n\nInput\n\nThe first input line has three integers nn, mm and kk: the number of cities, routes and parcels. The cities are numbered 1,2,\u2026,n1,2,\u2026,n. City 11 is Syrj\u00e4l\u00e4 and city nn is Lehm\u00e4l\u00e4.\n\nAfter this, there are mm lines that describe the routes. Each line has four integers aa, bb, rr and cc: there is a route from city aa to city bb, at most rr parcels can be carried through the route, and the cost of each parcel is cc.\n\nOutput\n\nPrint one integer: the minimum total cost or \u22121\u22121 if there are no solutions.\n\nConstraints\n\n1\u2264n\u22645001\u2264n\u2264500\n1\u2264m\u226410001\u2264m\u22641000\n1\u2264k\u22641001\u2264k\u2264100\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264r,c\u226410001\u2264r,c\u22641000\n\nExample\n\nInput:\n4 5 3\n1 2 5 100\n1 3 10 50\n1 4 7 500\n2 4 8 350\n3 4 2 100\n\nOutput:\n750\n\nExplanation: One parcel is delivered through route 1\u21922\u219241\u21922\u21924 (cost 1\u22c5450=4501\u22c5450=450) and two parcels are delivered through route 1\u21923\u219241\u21923\u21924 (cost 2\u22c5150=3002\u22c5150=300).    "], "Task Assignment": ["https://cses.fi/problemset/task/2129", "\nCSES - Task Assignment\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA company has nn employees and there are nn tasks that need to be done. We know for each employee the cost of carrying out each task. Every employee should be assigned to exactly one task. What is the minimum total cost if we assign the tasks optimally and how could they be assigned?\n\nInput\n\nThe first input line has one integer nn: the number of employees and the number of tasks that need to be done.\n\nAfter this, there are nn lines each consisting of nn integers. The iith line consists of integers ci1,ci2,\u2026,cinci1,ci2,\u2026,cin: the cost of each task when it is assigned to the iith employee.\n\nOutput\n\nFirst print the minimum total cost.\n\nThen print n lines each consisting of two integers aa and bb: you assign the bbth task to the aath employee.\n\nIf there are multiple solutions you can print any of them.\n\nConstraints\n\n1\u2264n\u22642001\u2264n\u2264200\n1\u2264cij\u226410001\u2264cij\u22641000\n\nExample\n\nInput:\n4\n17 8 16 9\n7 15 12 19\n6 9 10 11\n14 7 13 10\n\nOutput:\n33\n1 4\n2 1\n3 3\n4 2\n\nExplanation: The minimum total cost is 3333. We can reach this by assigning employee 1 task 4, employee 2 task 1, employee 3 task 3 and employee 4 task 2. This will cost 9+7+10+7=339+7+10+7=33.    "], "Distinct Routes II": ["https://cses.fi/problemset/task/2130", "\nCSES - Distinct Routes II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA game consists of nn rooms and mm teleporters. At the beginning of each day, you start in room 11 and you have to reach room nn.\n\nYou can use each teleporter at most once during the game. You want to play the game for exactly kk days. Every time you use any teleporter you have to pay one coin. What is the minimum number of coins you have to pay during kk days if you play optimally?\n\nInput\n\nThe first input line has three integers nn, mm and kk: the number of rooms, the number of teleporters and the number of days you play the game. The rooms are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the teleporters. Each line has two integers aa and bb: there is a teleporter from room aa to room bb.\n\nThere are no two teleporters whose starting and ending room are the same.\n\nOutput\n\nFirst print one integer: the minimum number of coins you have to pay if you play optimally. Then, print kk route descriptions according to the example. You can print any valid solution.\n\nIf it is not possible to play the game for kk days, print only -1.\n\nConstraints\n\n2\u2264n\u22645002\u2264n\u2264500\n1\u2264m\u226410001\u2264m\u22641000\n1\u2264k\u2264n\u221211\u2264k\u2264n\u22121\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n8 10 2\n1 2\n1 3\n2 5\n2 4\n3 5 \n3 6\n4 8\n5 8\n6 7 \n7 8\n\nOutput:\n6\n4\n1 2 4 8 \n4\n1 3 5 8  "], "Shortest Subsequence": ["https://cses.fi/problemset/task/1087", "\nCSES - Shortest Subsequence\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a DNA sequence consisting of characters A, C, G, and T.\n\nYour task is to find the shortest DNA sequence that is not a subsequence of the original sequence.\n\nInput\n\nThe only input line contains a DNA sequence with nn characters.\n\nOutput\n\nPrint the shortest DNA sequence that is not a subsequence of the original sequence. If there are several solutions, you may print any of them.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\nACGTACGT\n\nOutput:\nAAA "], "Counting Bits": ["https://cses.fi/problemset/task/1146", "\nCSES - Counting Bits\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of one bits in the binary representations of integers between 11 and nn.\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint the number of one bits in the binary representations of integers between 11 and nn.\n\nConstraints\n\n1\u2264n\u226410151\u2264n\u22641015\n\nExample\n\nInput:\n7\n\nOutput:\n12\n\nExplanation: The binary representations of 1\u202671\u20267 are 1, 10, 11, 100, 101, 110, and 111, so there are a total of 12 one bits.    "], "Swap Game": ["https://cses.fi/problemset/task/1670", "\nCSES - Swap Game\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a 3\u00d733\u00d73 grid containing the numbers 1,2,\u2026,91,2,\u2026,9. Your task is to perform a sequence of moves so that the grid will look like this:\n\n1 2 3\n4 5 6\n7 8 9\n\nOn each move, you can swap the numbers in any two adjacent squares (horizontally or vertically). What is the minimum number of moves required?\n\nInput\n\nThe input has three lines, and each of them has three integers.\n\nOutput\n\nPrint one integer: the minimum number of moves.\n\nExample\n\nInput:\n2 1 3\n7 5 9\n8 4 6\n\nOutput:\n4 "], "Pr\u00fcfer Code": ["https://cses.fi/problemset/task/1134", "\nCSES - Pr\u00fcfer Code\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA Pr\u00fcfer code of a tree of nn nodes is a sequence of n\u22122n\u22122 integers that uniquely specifies the structure of the tree.\n\nThe code is constructed as follows: As long as there are at least three nodes left, find a leaf with the smallest label, add the label of its only neighbor to the code, and remove the leaf from the tree.\n\nGiven a Pr\u00fcfer code of a tree, your task is to construct the original tree.\n\nInput\n\nThe first input line contains an integer nn: the number of nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe second line contains n\u22122n\u22122 integers: the Pr\u00fcfer code.\n\nOutput\n\nPrint n\u22121n\u22121 lines describing the edges of the tree. Each line has to contain two integers aa and bb: there is an edge between nodes aa and bb. You can print the edges in any order.\n\nConstraints\n\n3\u2264n\u22642\u22c51053\u2264n\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5\n2 2 4\n\nOutput:\n1 2\n2 3\n2 4\n4 5 "], "Acyclic Graph Edges": ["https://cses.fi/problemset/task/1756", "\nCSES - Acyclic Graph Edges\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an undirected graph, your task is to choose a direction for each edge so that the resulting directed graph is acyclic.\n\nInput\n\nThe first input line has two integers nn and mm: the number of nodes and edges. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the edges. Each line has two distinct integers aa and bb: there is an edge between nodes aa and bb.\n\nOutput\n\nPrint mm lines describing the directions of the edges. Each line has two integers aa and bb: there is an edge from node aa to node bb. You can print any valid solution.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n3 3\n1 2\n2 3\n3 1\n\nOutput:\n1 2\n3 2\n3 1 "], "Strongly Connected Edges": ["https://cses.fi/problemset/task/2177", "\nCSES - Strongly Connected Edges\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an undirected graph, your task is to choose a direction for each edge so that the resulting directed graph is strongly connected.\n\nInput\n\nThe first input line has two integers nn and mm: the number of nodes and edges. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the edges. Each line has two integers aa and bb: there is an edge between nodes aa and bb.\n\nYou may assume that the graph is simple, i.e., there are at most one edge between two nodes and every edge connects two distinct nodes.\n\nOutput\n\nPrint mm lines describing the directions of the edges. Each line has two integers aa and bb: there is an edge from node aa to node bb. You can print any valid solution.\n\nIf there are no solutions, only print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n3 3\n1 2\n1 3\n2 3\n\nOutput:\n1 2\n2 3\n3 1 "], "Even Outdegree Edges": ["https://cses.fi/problemset/task/2179", "\nCSES - Even Outdegree Edges\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an undirected graph, your task is to choose a direction for each edge so that in the resulting directed graph each node has an even outdegree. The outdegree of a node is the number of edges coming out of that node.\n\nInput\n\nThe first input line has two integers nn and mm: the number of nodes and edges. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the edges. Each line has two integers aa and bb: there is an edge between nodes aa and bb.\n\nYou may assume that the graph is simple, i.e., there is at most one edge between any two nodes and every edge connects two distinct nodes.\n\nOutput\n\nPrint mm lines describing the directions of the edges. Each line has two integers aa and bb: there is an edge from node aa to node bb. You can print any valid solution.\n\nIf there are no solutions, only print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 4\n1 2\n2 3\n3 4\n1 4\n\nOutput:\n1 2\n3 2\n3 4\n1 4 "], "Multiplication Table": ["https://codeforces.com/problemset/problem/39/H", "H. Multiplication Tabletime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputPetya studies positional notations. He has already learned to add and subtract numbers in the systems of notations with different radices and has moved on to a more complicated action \u2014 multiplication. To multiply large numbers one has to learn the multiplication table. Unfortunately, in the second grade students learn only the multiplication table of decimals (and some students even learn it in the first grade). Help Petya make a multiplication table for numbers in the system of notations with the radix k.InputThe first line contains a single integer k (2\u2009\u2264\u2009k\u2009\u2264\u200910) \u2014 the radix of the system.OutputOutput the multiplication table for the system of notations with the radix k. The table must contain k\u2009-\u20091 rows and k\u2009-\u20091 columns. The element on the crossing of the i-th row and the j-th column is equal to the product of i and j in the system of notations with the radix k. Each line may have any number of spaces between the numbers (the extra spaces in the samples are put for clarity).ExamplesInputCopy10OutputCopy1  2  3  4  5  6  7  8  92  4  6  8 10 12 14 16 183  6  9 12 15 18 21 24 274  8 12 16 20 24 28 32 365 10 15 20 25 30 35 40 456 12 18 24 30 36 42 48 547 14 21 28 35 42 49 56 638 16 24 32 40 48 56 64 729 18 27 36 45 54 63 72 81InputCopy3OutputCopy1  22 11"], "Advertisement": ["https://cses.fi/problemset/task/1142", "\nCSES - Advertisement\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA fence consists of nn vertical boards. The width of each board is 1 and their heights may vary.\n\nYou want to attach a rectangular advertisement to the fence. What is the maximum area of such an advertisement?\n\nInput\n\nThe first input line contains an integer nn: the width of the fence.\n\nAfter this, there are nn integers k1,k2,\u2026,knk1,k2,\u2026,kn: the height of each board.\n\nOutput\n\nPrint one integer: the maximum area of an advertisement.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264ki\u22641091\u2264ki\u2264109\n\nExample\n\nInput:\n8\n4 1 5 3 3 2 4 1\n\nOutput:\n10 "], "Special Substrings": ["https://cses.fi/problemset/task/2186", "\nCSES - Special Substrings\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA substring is called special if every character that appears in the string appears the same number of times in the substring.\n\nYour task is to count the number of special substrings in a given string.\n\nInput\n\nThe only input line has a string of length nn. Every character is between a...z.\n\nOutput\n\nPrint one integer: the number of special substrings.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\nabccabab\n\nOutput:\n5\n\nExplanation: The special substrings are abc, cab, abccab, bccaba and ccabab.    "], "Permutation Inversions": ["https://cses.fi/problemset/task/2229", "\nCSES - Permutation Inversions\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of permutations of 1,2,\u2026,n1,2,\u2026,n that have exactly kk inversions (i.e., pairs of elements in the wrong order).\n\nFor example, when n=4n=4 and k=3k=3, there are 66 such permutations:\n [1,4,3,2][1,4,3,2]\n [2,3,4,1][2,3,4,1]\n [2,4,1,3][2,4,1,3]\n [3,1,4,2][3,1,4,2]\n [3,2,1,4][3,2,1,4]\n [4,1,2,3][4,1,2,3]\n\nInput\n\nThe only input line has two integers nn and kk.\n\nOutput\n\nPrint the answer modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22645001\u2264n\u2264500\n0\u2264k\u2264n(n\u22121)20\u2264k\u2264n(n\u22121)2\n\nExample\n\nInput:\n4 3\n\nOutput:\n6 "], "Maximum Xor Subarray": ["https://cses.fi/problemset/task/1655", "\nCSES - Maximum Xor Subarray\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to find the maximum xor sum in a subarray.\n\nInput\n\nThe first input line has an integer nn: the size of the array.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint one integer: the maximum xor sum in a subarray.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n0\u2264xi\u22641090\u2264xi\u2264109\n\nExample\n\nInput:\n4\n5 1 5 9\n\nOutput:\n13 "], "Movie Festival Queries": ["https://cses.fi/problemset/task/1664", "\nCSES - Movie Festival Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nIn a movie festival, nn movies will be shown. You know the starting and ending time of each movie.\n\nYour task is to process qq queries of the form: if you arrive and leave the festival at specific times, what is the maximum number of movies you can watch?\n\nYou can watch two movies if the first movie ends before or exactly when the second movie starts. You can start the first movie exactly when you arrive and leave exactly when the last movie ends.\n\nInput\n\nThe first input line has two integers nn and qq: the number of movies and queries.\n\nAfter this, there are nn lines describing the movies. Each line has two integers aa and bb: the starting and ending time of a movie.\n\nFinally, there are qq lines describing the queries. Each line has two integers aa and bb: your arrival and leaving time.\n\nOutput\n\nPrint the maximum number of movies for each query.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264a<b\u22641061\u2264a<b\u2264106\n\nExample\n\nInput:\n4 3\n2 5\n6 10\n4 7\n9 10\n5 9\n2 10\n7 10\n\nOutput:\n0\n2\n1 "], "Chess Tournament": ["https://cses.fi/problemset/task/1697", "\nCSES - Chess Tournament\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere will be a chess tournament of nn players. Each player has announced the number of games they want to play.\n\nEach pair of players can play at most one game. Your task is to determine which games will be played so that everybody will be happy.\n\nInput\n\nThe first input line has an integer nn: the number of players. The players are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: for each player, the number of games they want to play.\n\nOutput\n\nFirst print an integer kk: the number of games. Then, print kk lines describing the games. You can print any valid solution.\n\nIf there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n\u2211ni=1xi\u22642\u22c5105\u2211i=1nxi\u22642\u22c5105\n\nExample\n\nInput:\n5\n1 3 2 0 2\n\nOutput:\n4\n1 2\n2 3\n2 5\n3 5 "], "Tree Traversals": ["https://cses.fi/problemset/task/1702", "\nCSES - Tree Traversals\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are three common ways to traverse the nodes of a binary tree:\n\nPreorder: First process the root, then the left subtree, and finally the right subtree.\nInorder: First process the left subtree, then the root, and finally the right subtree.\nPostorder: First process the left subtree, then the right subtree, and finally the root.\n\nThere is a binary tree of nn nodes with distinct labels. You are given the preorder and inorder traversals of the tree, and your task is to determine its postorder traversal.\n\nInput\n\nThe first input line has an integer nn: the number of nodes. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are two lines describing the preorder and inorder traversals of the tree. Both lines consist of nn integers.\n\nYou can assume that the input corresponds to a binary tree.\n\nOutput\n\nPrint the postorder traversal of the tree.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n\nExample\n\nInput:\n5\n5 3 2 1 4\n3 5 1 2 4\n\nOutput:\n3 1 4 2 5 "], "Network Renovation": ["https://cses.fi/problemset/task/1704", "\nCSES - Network Renovation\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nSyrj\u00e4l\u00e4's network consists of nn computers and n\u22121n\u22121 connections between them. It is possible to send data between any two computers.\n\nHowever, if any connection breaks down, it will no longer be possible to send data between some computers. Your task is to add the minimum number of new connections in such a way that you can still send data between any two computers even if any single connection breaks down.\n\nInput\n\nThe first input line has an integer nn: the number of computers. The computers are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are n\u22121n\u22121 lines describing the connections. Each line has two integers aa and bb: there is a connection between computers aa and bb.\n\nOutput\n\nFirst print an integer kk: the minimum number of new connections. After this, print kk lines describing the connections. You can print any valid solution.\n\nConstraints\n\n3\u2264n\u22641053\u2264n\u2264105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5\n1 2\n1 3\n3 4\n3 5\n\nOutput:\n2\n2 4\n4 5 "], "Graph Girth": ["https://cses.fi/problemset/task/1707", "\nCSES - Graph Girth\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an undirected graph, your task is to determine its girth, i.e., the length of its shortest cycle.\n\nInput\n\nThe first input line has two integers nn and mm: the number of nodes and edges. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the edges. Each line has two integers aa and bb: there is an edge between nodes aa and bb.\n\nYou may assume that there is at most one edge between each two nodes.\n\nOutput\n\nPrint one integer: the girth of the graph. If there are no cycles, print \u22121\u22121.\n\nConstraints\n\n1\u2264n\u226425001\u2264n\u22642500\n1\u2264m\u226450001\u2264m\u22645000\n\nExample\n\nInput:\n5 6\n1 2\n1 3\n2 4\n2 5\n3 4\n4 5\n\nOutput:\n3 "], "Intersection Points": ["https://cses.fi/problemset/task/1740", "\nCSES - Intersection Points\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven nn horizontal and vertical line segments, your task is to calculate the number of their intersection points.\n\nYou can assume that no parallel line segments intersect, and no endpoint of a line segment is an intersection point.\n\nInput\n\nThe first input line has an integer nn: the number of line segments.\n\nThen there are nn lines describing the line segments. Each line has four integers: x1x1, y1y1, x2x2 and y2y2: a line segment begins at point (x1,y1)(x1,y1) and ends at point (x2,y2)(x2,y2).\n\nOutput\n\nPrint the number of intersection points.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n\u2212106\u2264x1\u2264x2\u2264106\u2212106\u2264x1\u2264x2\u2264106\n\u2212106\u2264y1\u2264y2\u2264106\u2212106\u2264y1\u2264y2\u2264106\n(x1,y1)\u2260(x2,y2)(x1,y1)\u2260(x2,y2)\n\nExample\n\nInput:\n3\n2 3 7 3\n3 1 3 5\n6 2 6 6\n\nOutput:\n2 "], "Inverse Inversions": ["https://cses.fi/problemset/task/2214", "\nCSES - Inverse Inversions\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to create a permutation of numbers 1,2,\u2026,n1,2,\u2026,n that has exactly kk inversions.\n\nAn inversion is a pair (a,b)(a,b) where a<ba<b and pa>pbpa>pb where pipi denotes the number at position ii in the permutation.\n\nInput\n\nThe only input line has two integers nn and kk.\n\nOutput\n\nPrint a line that contains the permutation. You can print any valid solution.\n\nConstraints\n\n 1\u2264n\u22641061\u2264n\u2264106\n 0\u2264k\u2264n(n\u22121)20\u2264k\u2264n(n\u22121)2\n\nExample\n\nInput:\n5 4\n\nOutput:\n1 5 2 4 3 "], "Monotone Subsequences": ["https://cses.fi/problemset/task/2215", "\nCSES - Monotone Subsequences\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to create a permutation of numbers 1,2,\u2026,n1,2,\u2026,n whose longest monotone subsequence has exactly kk elements.\n\nA monotone subsequence is either increasing or decreasing. For example, some monotone subsequences in [2,1,4,5,3][2,1,4,5,3] are [2,4,5][2,4,5] and [4,3][4,3].\n\nInput\n\nThe first input line has an integer tt: the number of tests.\n\nAfter this, there are tt lines. Each line has two integers nn and kk.\n\nOutput\n\nFor each test, print a line that contains the permutation. You can print any valid solution. If there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n 1\u2264t\u226410001\u2264t\u22641000\n 1\u2264k\u2264n\u22641001\u2264k\u2264n\u2264100\n\nExample\n\nInput:\n3\n5 3\n5 2\n7 7\n\nOutput:\n2 1 4 5 3\nIMPOSSIBLE\n1 2 3 4 5 6 7 "], "String Reorder": ["https://cses.fi/problemset/task/1743", "\nCSES - String Reorder\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a string, you want to reorder its characters so that no two adjacent characters are the same. What is the lexicographically minimal such string?\n\nInput\n\nThe only input line as a string of length nn consisting of characters A\u2013Z.\n\nOutput\n\nPrint the lexicographically minimal reordered string where no two adjacent characters are the same. If it is not possible to create such a string, print \u22121\u22121.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\nHATTIVATTI\n\nOutput:\nAHATITITVT "], "Stack Weights": ["https://cses.fi/problemset/task/2425", "\nCSES - Stack Weights\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou have nn coins, each of which has a distinct weight.\n\nThere are two stacks which are initially empty. On each step you move one coin to a stack. You never remove a coin from a stack.\n\nAfter each move, your task is to determine which stack is heavier (if we can be sure that either stack is heavier).\n\nInput\n\nThe first input line has an integer nn: the number of coins. The coins are numbered 1,2,\u2026,n1,2,\u2026,n. You know that coin ii is always heavier than coin i\u22121i\u22121, but you don't know their exact weights.\n\nAfter this, there are nn lines that describe the moves. Each line has two integers cc and ss: move coin cc to stack ss (1 = left, 2 = right).\n\nOutput\n\nAfter each move, print < if the right stack is heavier, > if the left stack is heavier, and ? if we can't know which stack is heavier.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n3\n2 1\n3 2\n1 1\n\nOutput:\n>\n<\n?\n\nExplanation: After the last move, if the coins are [2,3,4][2,3,4], the left stack is heavier, but if the coins are [1,2,5][1,2,5], the right stack is heavier.    "], "Pyramid Array": ["https://cses.fi/problemset/task/1747", "\nCSES - Pyramid Array\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array consisting of nn distinct integers. On each move, you can swap any two adjacent values.\n\nYou want to transform the array into a pyramid array. This means that the final array has to be first increasing and then decreasing. It is also allowed that the final array is only increasing or decreasing.\n\nWhat is the minimum number of moves needed?\n\nInput\n\nThe first input line has an integer nn: the size of the array.\n\nThe next line has nn distinct integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint one integer: the minimum number of moves.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n4\n2 1 5 3\n\nOutput:\n1\n\nExplanation: You may swap the first two values which creates a pyramid array [1,2,5,3][1,2,5,3].    "], "Increasing Subsequence II": ["https://cses.fi/problemset/task/1748", "\nCSES - Increasing Subsequence II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an array of nn integers, your task is to calculate the number of increasing subsequences it contains. If two subsequences have the same values but in different positions in the array, they are counted separately.\n\nInput\n\nThe first input line has an integer nn: the size of the array.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint one integer: the number of increasing subsequences modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n3\n2 1 3\n\nOutput:\n5\n\nExplanation: The increasing subsequences are [2][2], [1][1], [3][3], [2,3][2,3] and [1,3][1,3].    "], "String Removals": ["https://cses.fi/problemset/task/1149", "\nCSES - String Removals\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a string. You can remove any number of characters from it, but you cannot change the order of the remaining characters.\n\nHow many different strings can you generate?\n\nInput\n\nThe first input line contains a string of size nn. Each character is one of a\u2013z.\n\nOutput\n\nPrint one integer: the number of strings modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22645\u22c51051\u2264n\u22645\u22c5105\n\nExample\n\nInput:\naybabtu\n\nOutput:\n103 "], "Bit Inversions": ["https://cses.fi/problemset/task/1188", "\nCSES - Bit Inversions\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is a bit string consisting of nn bits. Then, there are some changes that invert one given bit. Your task is to report, after each change, the length of the longest substring whose each bit is the same.\n\nInput\n\nThe first input line has a bit string consisting of nn bits. The bits are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line contains an integer mm: the number of changes.\n\nThe last line contains mm integers x1,x2,\u2026,xmx1,x2,\u2026,xm describing the changes.\n\nOutput\n\nAfter each change, print the length of the longest substring whose each bit is the same.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264xi\u2264n1\u2264xi\u2264n\n\nExample\n\nInput:\n001011\n3\n3 2 5\n\nOutput:\n4 2 3\n\nExplanation: The bit string first becomes 000011, then 010011, and finally 010001.    "], "Xor Pyramid": ["https://cses.fi/problemset/task/2419", "\nCSES - Xor Pyramid\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a xor pyramid where each number is the xor of lower-left and lower-right numbers. Here is an example pyramid:\n\nGiven the bottom row of the pyramid, your task is to find the topmost number.\n\nInput\n\nThe first input line has an integer nn: the size of the pyramid.\n\nThe next line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: the bottom row of the pyramid.\n\nOutput\n\nPrint one integer: the topmost number.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n1\u2264ai\u22641091\u2264ai\u2264109\n\nExample\n\nInput:\n8\n2 10 5 12 9 5 1 5\n\nOutput:\n9 "], "Writing Numbers": ["https://cses.fi/problemset/task/1086", "\nCSES - Writing Numbers\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou would like to write a list of positive integers 1,2,3,\u20261,2,3,\u2026 using your computer. However, you can press each key 00\u201399 at most nn times during the process.\n\nWhat is the last number you can write?\n\nInput\n\nThe only input line contains the value of nn.\n\nOutput\n\nPrint the last number you can write.\n\nConstraints\n\n1\u2264n\u226410181\u2264n\u22641018\n\nExample\n\nInput:\n5\n\nOutput:\n12\n\nExplanation: You can write the numbers 1,2,\u2026,121,2,\u2026,12. This requires that you press key 11 five times, so you cannot write the number 1313.    "], "String Transform": ["https://cses.fi/problemset/task/1113", "\nCSES - String Transform\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider the following string transformation:\n\n append the character # to the string (we assume that # is lexicographically smaller than all other characters of the string)\n generate all rotations of the string\n sort the rotations in increasing order\n based on this order, construct a new string that contains the last character of each rotation\n\nFor example, the string babc becomes babc#. Then, the sorted list of rotations is #babc, abc#b, babc#, bc#ba, and c#bab. This yields a string cb#ab.\n\nInput\n\nThe only input line contains the transformed string of length n+1n+1. Each character of the original string is one of a\u2013z.\n\nOutput\n\nPrint the original string of length nn.\n\nConstraints\n\n1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\ncb#ab\n\nOutput:\nbabc "], "Letter Pair Move Game": ["https://cses.fi/problemset/task/2427", "\nCSES - Letter Pair Move Game\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are 2n2n boxes in a line. Two adjacent boxes are empty, and all other boxes have a letter \"A\" or \"B\". Both letters appear in exactly n\u22121n\u22121 boxes.\n\nYour task is to move the letters so that all letters \"A\" appear before any letter \"B\". On each turn you can choose any two adjacent boxes that have a letter and move the letters to the two adjacent empty boxes, preserving their order.\n\nIt can be proven that either there is a solution that consists of at most 10n10n turns or there are no solutions.\n\nInput\n\nThe first line has an integer nn: there are 2n2n boxes.\n\nThe second line has a string of 2n2n characters which describes the starting position. Each character is \"A\", \"B\" or \".\" (empty box).\n\nOutput\n\nFirst print an integer kk: the number of turns. After this, print kk lines that describe the moves. You can print any solution, as long as k\u22641000k\u22641000.\n\nIf there are no solutions, print only \"-1\".\n\nConstraints\n\n 1\u2264n\u22641001\u2264n\u2264100\n\nExample 1\n\nInput:\n3\nAB..BA\n\nOutput:\n2\nABBA..\nA..ABB\n\nExample 2\n\nInput:\n3\nABAB..\n\nOutput:\n-1 "], "Maximum Building I": ["https://cses.fi/problemset/task/1147", "\nCSES - Maximum Building I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a map of a forest where some squares are empty and some squares have trees.\n\nWhat is the maximum area of a rectangular building that can be placed in the forest so that no trees must be cut down?\n\nInput\n\nThe first input line contains integers nn and mm: the size of the forest.\n\nAfter this, the forest is described. Each square is empty (.) or has trees (*).\n\nInput\n\nPrint the maximum area of a rectangular building.\n\nConstraints\n\n1\u2264n,m\u226410001\u2264n,m\u22641000\n\nExample\n\nInput:\n4 7\n...*.*.\n.*.....\n.......\n......*\n\nOutput:\n12 "], "Sorting Methods": ["https://cses.fi/problemset/task/1162", "\nCSES - Sorting Methods\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nHere are some possible methods using which we can sort the elements of an array in increasing order:\n At each step, choose two adjacent elements and swap them.\n At each step, choose any two elements and swap them.\n At each step, choose any element and move it to another position.\n At each step, choose any element and move it to the front of the array.\n\nGiven a permutation of numbers 1,2,\u2026,n1,2,\u2026,n, calculate the minimum number of steps to sort the array using the above methods.\n\nInput\n\nThe first input line contains an integer nn.\n\nThe second line contains nn integers describing the permutation.\n\nOutput\n\nPrint four numbers: the minimum number of steps using each method.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n8\n7 8 2 6 5 1 3 4\n\nOutput:\n20 6 5 6 "], "Cyclic Array": ["https://cses.fi/problemset/task/1191", "\nCSES - Cyclic Array\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a cyclic array consisting of nn values. Each element has two neighbors; the elements at positions nn and 11 are also considered neighbors.\n\nYour task is to divide the array into subarrays so that the sum of each subarray is at most kk. What is the minimum number of subarrays?\n\nInput\n\nThe first input line contains integers nn and kk.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nThere is always at least one division (i.e., no value in the array is larger than kk).\n\nOutput\n\nPrint one integer: the minimum number of subarrays.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n 1\u2264xi\u22641091\u2264xi\u2264109\n 1\u2264k\u226410181\u2264k\u22641018\n\nExample\n\nInput:\n8 5\n2 2 2 1 3 1 2 1\n\nOutput:\n3\n\nExplanation: We can create three subarrays: [2,2,1][2,2,1], [3,1][3,1], and [2,1,2][2,1,2] (remember that the array is cyclic).    "], "List of Sums": ["https://cses.fi/problemset/task/2414", "\nCSES - List of Sums\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nList AA consists of nn positive integers, and list BB contains the sum of each element pair of list AA.\n\nFor example, if A=[1,2,3]A=[1,2,3], then B=[3,4,5]B=[3,4,5], and if A=[1,3,3,3]A=[1,3,3,3], then B=[4,4,4,6,6,6]B=[4,4,4,6,6,6].\n\nGiven list BB, your task is to reconstruct list AA.\n\nInput\n\nThe first input line has an integer nn: the size of list AA.\n\nThe next line has n(n\u22121)2n(n\u22121)2 integers: the contents of list BB.\n\nYou can assume that there is a list AA that corresponds to the input, and each value in AA is between 1\u2026k1\u2026k.\n\nOutput\n\nPrint nn integers: the contents of list AA.\n\nYou can print the values in any order. If there are more than one solution, you can print any of them.\n\nConstraints\n\n3\u2264n\u22641003\u2264n\u2264100\n1\u2264k\u22641091\u2264k\u2264109\n\nExample\n\nInput:\n4\n4 4 4 6 6 6\n\nOutput:\n1 3 3 3\n\nExplanation: In this case list AA can be either [1,3,3,3][1,3,3,3] or [2,2,2,4][2,2,2,4] and both solutions are accepted.    "], "Increasing Array II": ["https://cses.fi/problemset/task/2132", "\nCSES - Increasing Array II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array of nn integers. You want to modify the array so that it is increasing, i.e., every element is at least as large as the previous element.\n\nOn each move, you can increase or decrease the value of any element by one. What is the minimum number of moves required?\n\nInput\n\nThe first input line contains an integer nn: the size of the array.\n\nThen, the second line contains nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nPrint the minimum number of moves.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n 1\u2264xi\u22641091\u2264xi\u2264109\n\nExample\n\nInput:\n5\n3 8 5 6 5\n\nOutput:\n4 "], "Food Division": ["https://cses.fi/problemset/task/1189", "\nCSES - Food Division\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn children around a round table. For each child, you know the amount of food they currently have and the amount of food they want. The total amount of food in the table is correct.\n\nAt each step, a child can give one unit of food to his or her neighbour. What is the minimum number of steps needed?\n\nInput\n\nThe first input line contains an integer nn: the number of children.\n\nThe next line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: the current amount of food for each child.\n\nThe last line has nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn: the required amount of food for each child.\n\nOutput\n\nPrint one integer: the minimum number of steps.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n0\u2264ai,bi\u22641060\u2264ai,bi\u2264106\n\nExample\n\nInput:\n3\n3 5 0\n2 4 2\n\nOutput:\n2\n\nExplanation: Child 1 gives one unit of food to child 3, and child 2 gives one unit of food to child 3.    "], "Bit Problem": ["https://cses.fi/problemset/task/1654", "\nCSES - Bit Problem\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven a list of nn integers, your task is to calculate for each element xx:\n the number of elements yy such that x\u2223y=xx\u2223y=x\n the number of elements yy such that x&y=xx&y=x\n the number of elements yy such that x&y\u22600x&y\u22600\n\nInput\n\nThe first input line has an integer nn: the size of the list.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the elements of the list.\n\nOutput\n\nPrint nn lines: for each element the required values.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n 1\u2264xi\u22641061\u2264xi\u2264106\n\nExample\n\nInput:\n5\n3 7 2 9 2\n\nOutput:\n3 2 5\n4 1 5\n2 4 4\n1 1 3\n2 4 4 "], "Swap Round Sorting": ["https://cses.fi/problemset/task/1698", "\nCSES - Swap Round Sorting\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an array containing a permutation of numbers 1,2,\u2026,n1,2,\u2026,n, and your task is to sort the array using swap rounds. On each swap round, you can choose any number of distinct pairs of elements and swap each pair.\n\nYour task is to find the minimum number of rounds and show how you can choose the pairs in each round.\n\nInput\n\nThe first input line has an integer nn: the size of the array.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the initial permutation.\n\nOutput\n\nFirst print an integer kk: the minimum number of rounds.\n\nThen, for each round, print the number of swaps and the indices of each swap. You can print any valid solution.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n5\n5 2 1 3 4\n\nOutput:\n2\n2\n1 3\n4 5\n1\n3 5\n\nExplanation: The inital array is [5,2,1,3,4][5,2,1,3,4]. After round 11, the array becomes [1,2,5,4,3][1,2,5,4,3]. After round 22, the array becomes [1,2,3,4,5][1,2,3,4,5].    "], "Binary Subsequences": ["https://cses.fi/problemset/task/2430", "\nCSES - Binary Subsequences\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to find a minimum length bit string that has exactly nn distinct subsequences.\n\nFor example, a correct solution for n=6n=6 is 101 whose distinct subsequences are 0, 1, 01, 10, 11 and 101.\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint one bit string: a solution to the task. You can print any valid solution.\n\nConstraints\n\n 1\u2264n\u22641061\u2264n\u2264106\n\nExample\n\nInput:\n6\n\nOutput:\n101 "], "Tree Isomorphism I": ["https://cses.fi/problemset/task/1700", "\nCSES - Tree Isomorphism I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven two rooted trees, your task is to find out if they are isomorphic, i.e., it is possible to draw them so that they look the same.\n\nInput\n\nThe first input line has an integer tt: the number of tests. Then, there are tt tests described as follows:\n\nThe first line has an integer nn: the number of nodes in both trees. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n, and node 11 is the root.\n\nThen, there are n\u22121n\u22121 lines describing the edges of the first tree, and finally n\u22121n\u22121 lines describing the edges of the second tree.\n\nOutput\n\nFor each test, print \"YES\", if the trees are isomorphic, and \"NO\" otherwise.\n\nConstraints\n\n1\u2264t\u226410001\u2264t\u22641000\n2\u2264n\u22641052\u2264n\u2264105\nthe sum of all values of nn is at most 105105\n\nExample\n\nInput:\n2\n3\n1 2\n2 3\n1 2\n1 3\n3\n1 2\n2 3\n1 3\n3 2\n\nOutput:\nNO\nYES "], "Counting Sequences": ["https://cses.fi/problemset/task/2228", "\nCSES - Counting Sequences\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of sequences of length nn where each element is an integer between 1\u2026k1\u2026k and each integer between 1\u2026k1\u2026k appears at least once in the sequence.\n\nFor example, when n=6n=6 and k=4k=4, some valid sequences are [1,3,1,4,3,2][1,3,1,4,3,2] and [2,2,1,3,4,2][2,2,1,3,4,2].\n\nInput\n\nThe only input line has two integers nn and kk.\n\nOutput\n\nPrint one integer: the number of sequences modulo 109+7109+7.\n\nConstraints\n\n1\u2264k\u2264n\u22641061\u2264k\u2264n\u2264106\n\nExample\n\nInput:\n6 4\n\nOutput:\n1560 "], "Critical Cities": ["https://cses.fi/problemset/task/1703", "\nCSES - Critical Cities\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm flight connections between them. A city is called a critical city if it appears on every route from a city to another city.\n\nYour task is to find all critical cities from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and flights. The cities are numbered 1,2,\u2026,n1,2,\u2026,n. City 11 is Syrj\u00e4l\u00e4, and city nn is Lehm\u00e4l\u00e4.\n\nThen, there are mm lines describing the connections. Each line has two integers aa and bb: there is a flight from city aa to city bb. All flights are one-way.\n\nYou may assume that there is a route from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4.\n\nOutput\n\nFirst print an integer kk: the number of critical cities. After this, print kk integers: the critical cities in increasing order.\n\nConstraints\n\n2\u2264n\u22641052\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 5\n1 2\n2 3\n2 4\n3 5\n4 5\n\nOutput:\n3\n1 2 5 "], "School Excursion": ["https://cses.fi/problemset/task/1706", "\nCSES - School Excursion\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA group of nn children are coming to Helsinki. There are two possible attractions: a child can visit either Korkeasaari (zoo) or Linnanm\u00e4ki (amusement park).\n\nThere are mm pairs of children who want to visit the same attraction. Your task is to find all possible alternatives for the number of children that will visit Korkeasaari. The children's wishes have to be taken into account.\n\nInput\n\nThe first input line has two integers nn and mm: the number of children and their wishes. The children are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the children's wishes. Each line has two integers aa and bb: children aa and bb want to visit the same attraction.\n\nOutput\n\nPrint a bit string of length nn where a one-bit at index ii indicates that it is possible that exactly ii children visit Korkeasaari (the bit string is to be considered one-indexed).\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n0\u2264m\u22641050\u2264m\u2264105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3\n1 2\n2 3\n1 5\n\nOutput:\n10011\n\nExplanation: The number of children visiting Korkeasaari can be 11, 44 or 55.    "], "Coin Grid": ["https://cses.fi/problemset/task/1709", "\nCSES - Coin Grid\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is an n\u00d7nn\u00d7n grid whose each square is empty or has a coin. On each move, you can remove all coins in a row or column.\n\nWhat is the minimum number of moves after which the grid is empty?\n\nInput\n\nThe first input line has an integer nn: the size of the grid. The rows and columns are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are nn lines describing the grid. Each line has nn characters: each character is either . (empty) or o (coin).\n\nOutput\n\nFirst print an integer kk: the minimum number of moves. After this, print kk lines describing the moves.\n\nOn each line, first print 11 (row) or 22 (column), and then the number of a row or column. You can print any valid solution.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n\nExample\n\nInput:\n3\n..o\no.o\n...\n\nOutput:\n2\n1 2\n2 3 "], "Robot Path": ["https://cses.fi/problemset/task/1742", "\nCSES - Robot Path\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a description of a robot's path. The robot begins at point (0,0)(0,0) and performs nn commands. Each command moves the robot some distance up, down, left or right.\n\nThe robot will stop when it has performed all commands, or immediately when it returns to a point that it has already visited. Your task is to calculate the total distance the robot moves.\n\nInput\n\nThe first input line has an integer nn: the number of commands.\n\nAfter that, there are nn lines describing the commands. Each line has a character dd and an integer xx: the robot moves the distance  xx to the direction dd. Each direction is U (up), D (down), L (left), or R (right).\n\nOutput\n\nPrint the total distance the robot moves.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264x\u22641061\u2264x\u2264106\n\nExample\n\nInput:\n5\nU 2\nR 3\nD 1\nL 5\nU 2\n\nOutput:\n9 "], "Programmers and Artists": ["https://cses.fi/problemset/task/2426", "\nCSES - Programmers and Artists\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA company wants to hire aa programmers and bb artists.\n\nThere are a total of nn applicants, and each applicant can become either a programmer or an artist. You know each applicant's programming and artistic skills.\n\nYour task is to select the new employees so that the sum of their skills is maximum.\n\nInput\n\nThe first input line has three integers aa, bb and nn: the required number of programmers and artists, and the total number of applicants.\n\nAfter this, there are nn lines that describe the applicants. Each line has two integers xx and yy: the applicant's programming and artistic skills.\n\nOutput\n\nPrint one integer: the maximum sum of skills.\n\nConstraints\n\n 1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n 0\u2264a,b\u2264n0\u2264a,b\u2264n\n a+b\u2264na+b\u2264n\n 1\u2264x,y\u22641091\u2264x,y\u2264109\n\nExample\n\nInput:\n2 1 4\n3 7\n9 8\n1 5\n4 2\n\nOutput:\n20\n\nExplanation: An optimal solution is to hire two programmers with skills 99 and 44 and one artist with skill 77. The sum of the skills is 9+4+7=209+4+7=20.    "], "Course Schedule II": ["https://cses.fi/problemset/task/1757", "\nCSES - Course Schedule II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou want to complete nn courses that have requirements of the form \"course aa has to be completed before course bb\".\n\nYou want to complete course 11 as soon as possible. If there are several ways to do this, you want then to complete course 22 as soon as possible, and so on.\n\nYour task is to determine the order in which you complete the courses.\n\nInput\n\nThe first input line has two integers nn and mm: the number of courses and requirements. The courses are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the requirements. Each line has two integers aa and bb: course aa has to be completed before course bb.\n\nYou can assume that there is at least one valid schedule.\n\nOutput\n\nPrint one line having nn integers: the order in which you complete the courses.\n\nConstraints\n\n 1\u2264n\u22641051\u2264n\u2264105\n 1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n 1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 2\n2 1\n2 3\n\nOutput:\n2 1 3 4 "], "Removing Digits II": ["https://cses.fi/problemset/task/2174", "\nCSES - Removing Digits II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an integer nn. On each step, you may substract from it any one-digit number that appears in it.\n\nHow many steps are required to make the number equal to 00?\n\nInput\n\nThe only input line has an integer nn.\n\nOutput\n\nPrint one integer: the minimum number of steps.\n\nConstraints\n\n1\u2264n\u226410181\u2264n\u22641018\n\nExample\n\nInput:\n27\n\nOutput:\n5\n\nExplanation: An optimal solution is 27\u219220\u219218\u219210\u21929\u2192027\u219220\u219218\u219210\u21929\u21920.    "], "Coin Arrangement": ["https://cses.fi/problemset/task/2180", "\nCSES - Coin Arrangement\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is a 2\u00d7n2\u00d7n grid whose each cell contains some number of coins. The total number of coins is 2n2n.\n\nYour task is to arrange the coins so that each cell contains exactly one coin. On each move you can choose any coin and move it one step left, right, up or down.\n\nWhat is the minimum number of moves if you act optimally?\n\nInput\n\nThe first input line has an integer nn: the width of the grid.\n\nAfter this, there are two lines that describe the grid. Each line has nn integers: the number of coins in each cell.\n\nOutput\n\nPrint one integer: the minimum number of moves.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n\nExample\n\nInput:\n4\n0 1 0 1\n2 0 1 3\n\nOutput:\n5 "], "Counting Bishops": ["https://cses.fi/problemset/task/2176", "\nCSES - Counting Bishops\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to count the number of ways kk bishops can be placed on an n\u00d7nn\u00d7n chessboard so that no two bishops attack each other.\n\nTwo bishops attack each other if they are on the same diagonal.\n\nInput\n\nThe only input line has two integers nn and kk: the board size and the number of bishops.\n\nOutput\n\nPrint one integer: the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22645001\u2264n\u2264500\n1\u2264k\u2264n21\u2264k\u2264n2\n\nExample\n\nInput:\n5 4\n\nOutput:\n2728 "], "Grid Puzzle I": ["https://cses.fi/problemset/task/2432", "\nCSES - Grid Puzzle I\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is an n\u00d7nn\u00d7n grid, and your task is to choose from each row and column some number of squares. How can you do that?\n\nInput\n\nThe first input line has an integer nn: the size of the grid. The rows and columns are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: You must choose exactly aiai squares from the iith row.\n\nThe las line has nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn: You must choose exactly bjbj squares from the jjth column.\n\nOutput\n\nPrint nn lines describing which squares you choose (X means that you choose a square, . means that you don't choose it). You can print any valid solution.\n\nIf it is not possible to satisfy the conditions print only \u22121\u22121.\n\nConstraints\n\n1\u2264n\u2264501\u2264n\u226450\n0\u2264ai\u2264n0\u2264ai\u2264n\n0\u2264bj\u2264n0\u2264bj\u2264n\n\nExample\n\nInput:\n5\n0 1 3 2 0\n1 2 2 0 1\n\nOutput:\n.....\n..X..\n.XX.X\nXX...\n..... "], "Grid Puzzle II": ["https://cses.fi/problemset/task/2131", "\nCSES - Grid Puzzle II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere is an n\u00d7nn\u00d7n grid whose each square has some number of coins in it.\n\nYou know for each row and column how many squares you must choose from that row or column. You get all coins from every square you choose. What is the maximum number of coins you can collect and how could you choose the squares so that the given conditions are satisfied?\n\nInput\n\nThe first input line has an integer nn: the size of the grid. The rows and columns are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has nn integers a1,a2,\u2026,ana1,a2,\u2026,an: You must choose exactly aiai squares from the iith row.\n\nThe next line has nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn: You must choose exactly bjbj squares from the jjth column.\n\nFinally, there are nn lines describing the grid. You can assume The sums of a1,a2,\u2026,ana1,a2,\u2026,an and b1,b2,\u2026,bnb1,b2,\u2026,bn are equal.\n\nOutput\n\nFirst print an integer kk: the maximum number of coins you can collect. After this print nn lines describing which squares you choose (X means that you choose a square, . means that you don't choose it).\n\nIf it is not possible to satisfy the conditions print only \u22121\u22121.\n\nConstraints\n\n1\u2264n\u2264501\u2264n\u226450\n0\u2264ai\u2264n0\u2264ai\u2264n\n0\u2264bj\u2264n0\u2264bj\u2264n\n0\u2264cij\u226410000\u2264cij\u22641000\n\nExample\n\nInput:\n5\n0 1 3 2 0\n1 2 2 0 1\n2 5 1 5 1\n0 2 5 1 2\n3 8 9 3 5\n1 4 3 7 3\n0 3 6 2 8\n\nOutput:\n32\n.....\n..X..\n.XX.X\nXX...\n..... "], "Empty String": ["https://cses.fi/problemset/task/1080", "\nCSES - Empty String\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a string consisting of nn characters between a and z.\n\nOn each turn, you may remove any two adjacent characters that are equal. Your goal is to construct an empty string by removing all the characters.\n\nIn how many ways can you do this?\n\nInput\n\nThe only input line has a string of length nn.\n\nOutput\n\nPrint one integer: the number of ways modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22645001\u2264n\u2264500\n\nExample\n\nInput:\naabccb\n\nOutput:\n3 "], "Bit Substrings": ["https://cses.fi/problemset/task/2115", "\nCSES - Bit Substrings\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a bit string of length nn. Your task is to calculate for each kk between 0\u2026n0\u2026n the number of non-empty substrings that contain exactly kk ones.\n\nFor example, if the string is 101, there are:\n\n1 substring that contains 0 ones: 0\n4 substrings that contain 1 one: 01, 1, 1, 10\n1 substring that contains 2 ones: 101\n0 substrings that contain 3 ones\n\nInput\n\nThe only input line contains a binary string of length nn.\n\nOutput\n\nPrint n+1n+1 values as specified above.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n101\n\nOutput:\n1 4 1 0  "], "Reversal Sorting": ["https://cses.fi/problemset/task/2075", "\nCSES - Reversal Sorting\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou have an array that contains a permutation of integers 1,2,\u2026,n1,2,\u2026,n. Your task is to sort the array in increasing order by reversing subarrays. You can construct any solution that has at most nn reversals.\n\nInput\n\nThe first input line has an integer nn: the size of the array. The array elements are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThe next line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the contents of the array.\n\nOutput\n\nFirst print an integer kk: the number of reversals.\n\nAfter that, print kk lines that describe the reversals. Each line has two integers aa and bb: you reverse a subarray from position aa to position bb.\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n4\n2 3 1 4\n\nOutput:\n2\n1 3\n2 3 "], "Counting Reorders": ["https://cses.fi/problemset/task/2421", "\nCSES - Counting Reorders\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nCalculate the number of ways you can reorder the characters of a string so that no two adjacent characters are the same.\n\nFor example, the answer for aabc is 66, because the possible orders are abac, abca, acab, acba, baca, and caba.\n\nInput\n\nThe only input line has a string that consists of nn characters between a\u2013z.\n\nOutput\n\nPrint an integer: the answer modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u226450001\u2264n\u22645000\n\nExample\n\nInput:\naabc\n\nOutput:\n6 "], "Book Shop II": ["https://cses.fi/problemset/task/1159", "\nCSES - Book Shop II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are in a book shop which sells nn different books. You know the price, the number of pages and the number of copies of each book.\n\nYou have decided that the total price of your purchases will be at most xx. What is the maximum number of pages you can buy? You can buy several copies of the same book.\n\nInput\n\nThe first input line contains two integers nn and xx: the number of book and the maximum total price.\n\nThe next line contains nn integers h1,h2,\u2026,hnh1,h2,\u2026,hn: the price of each book.\n\nThe next line contains nn integers s1,s2,\u2026,sns1,s2,\u2026,sn: the number of pages of each book.\n\nThe last line contains nn integers k1,k2,\u2026,knk1,k2,\u2026,kn: the number of copies of each book.\n\nOutput\n\nPrint one integer: the maximum number of pages.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n1\u2264x\u22641051\u2264x\u2264105\n1\u2264hi,si,ki\u226410001\u2264hi,si,ki\u22641000\n\nExample\n\nInput:\n3 10\n2 6 3\n8 5 4\n3 5 2\n\nOutput:\n28\n\nExplanation: You can buy three copies of book 1 and one copy of book 3. The price is 3\u22c52+3=93\u22c52+3=9 and the number of pages is 3\u22c58+4=283\u22c58+4=28.    "], "Network Breakdown": ["https://cses.fi/problemset/task/1677", "\nCSES - Network Breakdown\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nSyrj\u00e4l\u00e4's network has nn computers and mm connections between them. The network consists of components of computers that can send messages to each other.\n\nNobody in Syrj\u00e4l\u00e4 understands how the network works. For this reason, if a connection breaks down, nobody will repair it. In this situation a component may be divided into two components.\n\nYour task is to calculate the number of components after each connection breakdown.\n\nInput\n\nThe first input line has three integers nn, mm and kk: the number of computers, connections and breakdowns. The computers are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the connections. Each line has two integers aa and bb: there is a connection between computers aa and bb. Each connection is between two different computers, and there is at most one connection between two computers.\n\nFinally, there are kk lines describing the breakdowns. Each line has two integers aa and bb: the connection between computers aa and bb breaks down.\n\nOutput\n\nAfter each breakdown, print the number of components.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264k\u2264m1\u2264k\u2264m\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 5 3\n1 2\n1 3\n2 3\n3 4\n4 5\n3 4\n2 3\n4 5\n\nOutput:\n2 2 3 "], "Visiting Cities": ["https://cses.fi/problemset/task/1203", "\nCSES - Visiting Cities\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou want to travel from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4 by plane using a minimum-price route. Which cities will you certainly visit?\n\nInput\n\nThe first input line contains two integers nn and mm: the number of cities and the number of flights. The cities are numbered 1,2,\u2026,n1,2,\u2026,n. City 1 is Syrj\u00e4l\u00e4, and city nn is Lehm\u00e4l\u00e4.\n\nAfter this, there are mm lines describing the flights. Each line has three integers aa, bb, and cc: there is a flight from city aa to city bb with price cc. All flights are one-way flights.\n\nYou may assume that there is a route from Syrj\u00e4l\u00e4 to Lehm\u00e4l\u00e4.\n\nOutput\n\nFirst print an integer kk: the number of cities that are certainly in the route. After this, print the kk cities sorted in increasing order.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n1\u2264c\u22641091\u2264c\u2264109\n\nExample\n\nInput:\n5 6\n1 2 3\n1 3 4\n2 3 1\n2 4 5\n3 4 1\n4 5 8\n\nOutput:\n4\n1 3 4 5 "], "Missing Coin Sum Queries": ["https://cses.fi/problemset/task/2184", "\nCSES - Missing Coin Sum Queries\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou have nn coins with positive integer values. The coins are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nYour task is to process qq queries of the form: \"if you can use coins a\u2026ba\u2026b, what is the smallest sum you cannot produce?\"\n\nInput\n\nThe first input line has two integers nn and qq: the number of coins and queries.\n\nThe second line has nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn: the value of each coin.\n\nFinally, there are qq lines that describe the queries. Each line has two values aa and bb: you can use coins a\u2026ba\u2026b.\n\nOutput\n\nPrint the answer for each query.\n\nConstraints\n\n1\u2264n,q\u22642\u22c51051\u2264n,q\u22642\u22c5105\n1\u2264xi\u22641091\u2264xi\u2264109\n1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n\n\nExample\n\nInput:\n5 3\n2 9 1 2 7\n2 4\n4 4\n1 5\n\nOutput:\n4\n1\n6\n\nExplanation: First you can use coins [9,1,2][9,1,2], then coins [2][2] and finally coins [2,9,1,2,7][2,9,1,2,7].    "], "Number Grid": ["https://cses.fi/problemset/task/1157", "\nCSES - Number Grid\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nConsider a two-dimensional grid whose rows and columns are 11-indexed. Each square contains the smallest nonnegative integer that does not appear to the left on the same row or above on the same column.\n\nYour task is to calculate the value at square (y,x)(y,x).\n\nInput\n\nThe only input line contains two integers yy and xx.\n\nOutput\n\nPrint one integer: the value at square (y,x)(y,x).\n\nConstraints\n\n1\u2264y,x\u22641091\u2264y,x\u2264109\n\nExample\n\nInput:\n3 5\n\nOutput:\n6 "], "Maximum Building II": ["https://cses.fi/problemset/task/1148", "\nCSES - Maximum Building II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given a map of a forest where some squares are empty and some squares have trees.\n\nYou want to place a rectangular building in the forest so that no trees need to be cut down. For each building size, your task is to calculate the number of ways you can do this.\n\nInput\n\nThe first input line contains integers nn and mm: the size of the forest.\n\nAfter this, the forest is described. Each square is empty (.) or has trees (*).\n\nOutput\n\nPrint nn lines each containing mm integers.\n\nConstraints\n\n1\u2264n,m\u226410001\u2264n,m\u22641000\n\nExample\n\nInput:\n4 7\n...*.*.\n.*.....\n.......\n......*\n\nOutput:\n24 17 13 9 6 3 1 \n16 9 7 5 3 1 0 \n9 3 2 1 0 0 0 \n3 0 0 0 0 0 0\n\nExplanation: For example, there are 55 possible places for a building of size 2\u00d742\u00d74.    "], "Filling Trominos": ["https://cses.fi/problemset/task/2423", "\nCSES - Filling Trominos\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to fill an n\u00d7mn\u00d7m grid using L-trominos (three squares that have an L-shape). For example, here is one way to fill a 4\u00d764\u00d76 grid:\n\nInput\n\nThe first input line has an integer tt: the number of tests.\n\nAfter that, there are tt lines that describe the tests. Each line has two integers nn and mm.\n\nOutput\n\nFor each test, print YES if there is a solution, and NO otherwise.\n\nIf there is a solution, also print nn lines that each contain mm letters between A\u2013Z. Adjacent squares must have the same letter exactly when they belong to the same tromino. You can print any valid solution.\n\nConstraints\n\n1\u2264t\u22641001\u2264t\u2264100\n1\u2264n,m\u22641001\u2264n,m\u2264100\n\nExample\n\nInput:\n2\n4 6\n4 7\n\nOutput:\nYES\nAADDBB\nACCDEB\nBCAEEC\nBBAACC\nNO "], "Stick Divisions": ["https://cses.fi/problemset/task/1161", "\nCSES - Stick Divisions\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou have a stick of length xx and you want to divide it into nn sticks, with given lengths, whose total length is xx.\n\nOn each move you can take any stick and divide it into two sticks. The cost of such an operation is the length of the original stick.\n\nWhat is the minimum cost needed to create the sticks?\n\nInput\n\nThe first input line has two integers xx and nn: the length of the stick and the number of sticks in the division.\n\nThe second line has nn integers d1,d2,\u2026,dnd1,d2,\u2026,dn: the length of each stick in the division.\n\nOutput\n\nPrint one integer: the minimum cost of the division.\n\nConstraints\n\n1\u2264x\u22641091\u2264x\u2264109\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\u2211di=x\u2211di=x\n\nExample\n\nInput:\n8 3\n2 3 3\n\nOutput:\n13\n\nExplanation: You first divide the stick of length 88 into sticks of length 33 and 55 (cost 88). After this, you divide the stick of length 55 into sticks of length 22 and 33 (cost 55). The total cost is 8+5=138+5=13.    "], "Coding Company": ["https://cses.fi/problemset/task/1665", "\nCSES - Coding Company\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour company has nn coders, and each of them has a skill level between 00 and 100100. Your task is to divide the coders into teams that work together.\n\nBased on your experience, you know that teams work well when the skill levels of the coders are about the same. For this reason, the penalty for creating a team is the skill level difference between the best and the worst coder.\n\nIn how many ways can you divide the coders into teams such that the sum of the penalties is at most xx?\n\nInput\n\nThe first input line has two integers nn and xx: the number of coders and the maximum allowed penalty sum.\n\nThe next line has nn integers t1,t2,\u2026,tnt1,t2,\u2026,tn: the skill level of each coder.\n\nOutput\n\nPrint one integer: the number of valid divisions modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u22641001\u2264n\u2264100\n0\u2264x\u226450000\u2264x\u22645000\n0\u2264ti\u22641000\u2264ti\u2264100\n\nExample\n\nInput:\n3 2\n2 5 3\n\nOutput:\n3 "], "Flight Route Requests": ["https://cses.fi/problemset/task/1699", "\nCSES - Flight Route Requests\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities with airports but no flight connections. You are given mm requests which routes should be possible to travel.\n\nYour task is to determine the minimum number of one-way flight connections which makes it possible to fulfil all requests.\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and requests. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the requests. Each line has two integers aa and bb: there has to be a route from city aa to city bb. Each request is unique.\n\nOutput\n\nPrint one integer: the minimum number of flight connections.\n\nConstraints\n\n 1\u2264n\u22641051\u2264n\u2264105\n 1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n 1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 5\n1 2\n2 3\n2 4\n3 1\n3 4\n\nOutput:\n4\n\nExplanation: You can create the connections 1\u219221\u21922, 2\u219232\u21923, 2\u219242\u21924 and 3\u219213\u21921. Then you can also fly from city 33 to city 44 using the route 3\u21921\u21922\u219243\u21921\u21922\u21924.    "], "Two Stacks Sorting": ["https://cses.fi/problemset/task/2402", "\nCSES - Two Stacks Sorting\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYou are given an input list that consists of nn numbers. Each integer between 11 and nn appears exactly once in the list.\n\nYour task is to create a sorted output list using two stacks. On each move you can do one of the following:\n Move the first number from the input list to a stack\n Move a number from a stack to the end of the output list\n\nInput\n\nThe first input line has an integer nn.\n\nThe second line has nn integers: the contents of the input list.\n\nOutput\n\nPrint nn integers: for each number the stack where it is moved (11 or 22).\n\nYou can print any valid solution. If there are no solutions, print \"IMPOSSIBLE\".\n\nConstraints\n\n1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105\n\nExample\n\nInput:\n5\n2 3 1 5 4\n\nOutput:\n1 2 1 1 2 "], "Tree Isomorphism II": ["https://cses.fi/problemset/task/1701", "\nCSES - Tree Isomorphism II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven two (not rooted) trees, your task is to find out if they are isomorphic, i.e., it is possible to draw them so that they look the same.\n\nInput\n\nThe first input line has an integer tt: the number of tests. Then, there are tt tests described as follows:\n\nThe first line has an integer nn: the number of nodes in both trees. The nodes are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are n\u22121n\u22121 lines describing the edges of the first tree, and finally n\u22121n\u22121 lines describing the edges of the second tree.\n\nOutput\n\nFor each test, print \"YES\", if the trees are isomorphic, and \"NO\" otherwise.\n\nConstraints\n\n1\u2264t\u226410001\u2264t\u22641000\n2\u2264n\u22641052\u2264n\u2264105\nthe sum of all values of nn is at most 105105\n\nExample\n\nInput:\n2\n3\n1 2\n2 3\n1 2\n1 3\n3\n1 2\n2 3\n1 3\n3 2\n\nOutput:\nYES\nYES "], "Forbidden Cities": ["https://cses.fi/problemset/task/1705", "\nCSES - Forbidden Cities\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm roads between them. Kaaleppi is currently in city aa and wants to travel to city bb.\n\nHowever, there is a problem: Kaaleppi has recently robbed a bank in city cc and can't enter the city, because the local police would catch him. Your task is to find out if there is a route from city aa to city bb that does not visit city cc.\n\nAs an additional challenge, you have to process qq queries where aa, bb and cc vary.\n\nInput\n\nThe first input line has three integers nn, mm and qq: the number of cities, roads and queries. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nThen, there are mm lines describing the roads. Each line has two integers aa and bb: there is a road between cities aa and bb. Each road is bidirectional.\n\nFinally, there are qq lines describing the queries. Each line has three integers aa, bb and cc: is there a route from city aa to city bb that does not visit city cc?\n\nYou can assume that there is a route between any two cities.\n\nOutput\n\nFor each query, print \"YES\", if there is such a route, and \"NO\" otherwise.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264q\u22641051\u2264q\u2264105\n1\u2264a,b,c\u2264n1\u2264a,b,c\u2264n\n\nExample\n\nInput:\n5 6 3\n1 2\n1 3\n2 3\n2 4\n3 4\n4 5\n1 4 2\n3 5 4\n3 5 2\n\nOutput:\nYES\nNO\nYES "], "Area of Rectangles": ["https://cses.fi/problemset/task/1741", "\nCSES - Area of Rectangles\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven nn rectangles, your task is to determine the total area of their union.\n\nInput\n\nThe first input line has an integer nn: the number of rectangles.\n\nAfter that, there are nn lines describing the rectangles. Each line has four integers x1x1, y1y1, x2x2 and y2y2: a rectangle begins at point (x1,y1)(x1,y1) and ends at point (x2,y2)(x2,y2).\n\nOutput\n\nPrint the total area covered by the rectangles.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n\u2212106\u2264x1<x2\u2264106\u2212106\u2264x1<x2\u2264106\n\u2212106\u2264y1<y2\u2264106\u2212106\u2264y1<y2\u2264106\n\nExample\n\nInput:\n3\n1 3 4 5\n3 1 7 4\n5 3 8 6\n\nOutput:\n24 "], "Grid Completion": ["https://cses.fi/problemset/task/2429", "\nCSES - Grid Completion\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nYour task is to create an n\u00d7nn\u00d7n grid whose each row and column has exactly one A and B. Some of the characters have already been placed. In how many ways can you complete the grid?\n\nInput\n\nThe first input line has an integer nn: the size of the grid.\n\nAfter this, there are nn lines that describe the grid. Each line has nn characters: . means an empty square, and A and B show the characters already placed.\n\nYou can assume that every row and column has at most one A and B.\n\nOutput\n\nPrint one integer: the number of ways modulo 109+7109+7.\n\nConstraints\n\n 2\u2264n\u22645002\u2264n\u2264500\n\nExample\n\nInput:\n5\n.....\n..AB.\n.....\nB....\n...A.\n\nOutput:\n16 "], "Creating Offices": ["https://cses.fi/problemset/task/1752", "\nCSES - Creating Offices\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and n\u22121n\u22121 roads between them. There is a unique route between any two cities, and their distance is the number of roads on that route.\n\nA company wants to have offices in some cities, but the distance between any two offices has to be at least dd. What is the maximum number of offices they can have?\n\nInput\n\nThe first input line has two integers nn and dd: the number of cities and the minimum distance. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are n\u22121n\u22121 lines describing the roads. Each line has two integers aa and bb: there is a road between cities aa and bb.\n\nOutput\n\nFirst print an integer kk: the maximum number of offices. After that, print the cities which will have offices. You can print any valid solution.\n\nConstraints\n\n1\u2264n,d\u22642\u22c51051\u2264n,d\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n5 3\n1 2\n2 3\n3 4\n3 5\n\nOutput:\n2\n1 4 "], "Permutations II": ["https://cses.fi/problemset/task/1075", "\nCSES - Permutations II\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA permutation of integers 1,2,\u2026,n1,2,\u2026,n is called beautiful if there are no adjacent elements whose difference is 11.\n\nGiven nn, your task is to count the number of beautiful permutations.\n\nInput\n\nThe only input line contains an integer nn.\n\nOutput\n\nPrint the number of beautiful permutations of 1,2,\u2026,n1,2,\u2026,n modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u226410001\u2264n\u22641000\n\nExample\n\nInput:\n5\n\nOutput:\n14 "], "Functional Graph Distribution": ["https://cses.fi/problemset/task/2415", "\nCSES - Functional Graph Distribution\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nA functional graph is a directed graph where each node has outdegree 11. For example, here is a functional graph that has 99 nodes and 22 components:\n\nGiven nn, your task is to calculate for each k=1\u2026nk=1\u2026n the number of functional graphs that have nn nodes and kk components.\n\nInput\n\nThe only input line has an integer nn: the number of nodes.\n\nOutput\n\nPrint nn lines: for each k=1\u2026nk=1\u2026n the number of graphs modulo 109+7109+7.\n\nConstraints\n\n1\u2264n\u226450001\u2264n\u22645000\n\nExample\n\nInput:\n3\n\nOutput:\n17\n9\n1 "], "New Flight Routes": ["https://cses.fi/problemset/task/1685", "\nCSES - New Flight Routes\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nThere are nn cities and mm flight connections between them. Your task is to add new flights so that it will be possible to travel from any city to any other city. What is the minimum number of new flights required?\n\nInput\n\nThe first input line has two integers nn and mm: the number of cities and flights. The cities are numbered 1,2,\u2026,n1,2,\u2026,n.\n\nAfter this, there are mm lines describing the flights. Each line has two integers aa and bb: there is a flight from city aa to city bb. All flights are one-way flights.\n\nOutput\n\nFirst print an integer kk: the required number of new flights. After this, print kk lines describing the new flights. You can print any valid solution.\n\nConstraints\n\n1\u2264n\u22641051\u2264n\u2264105\n1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105\n1\u2264a,b\u2264n1\u2264a,b\u2264n\n\nExample\n\nInput:\n4 5\n1 2\n2 3\n3 1\n1 4\n3 4\n\nOutput:\n1\n4 2 "], "Grid Path Construction": ["https://cses.fi/problemset/task/2418", "\nCSES - Grid Path Construction\n\n\nTime limit: 1.00 s\nMemory limit: 512 MB\n\n\n\nGiven an n\u00d7mn\u00d7m grid and two squares a=(y1,x1)a=(y1,x1) and b=(y2,x2)b=(y2,x2), create a path from aa to bb that visits each square exactly once.\n\nFor example, here is a path from a=(1,3)a=(1,3) to b=(3,6)b=(3,6) in a 4\u00d774\u00d77 grid:\n\nInput\n\nThe first input line has an integer tt: the number of tests.\n\nAfter this, there are tt lines that describe the tests. Each line has six integers nn, mm, y1y1, x1x1, y2y2 and x2x2.\n\nIn all tests 1\u2264y1,y2\u2264n1\u2264y1,y2\u2264n ja 1\u2264x1,x2\u2264m1\u2264x1,x2\u2264m. In addition, y1\u2260y2y1\u2260y2 or x1\u2260x2x1\u2260x2.\n\nOutput\n\nPrint YES, if it is possible to construct a path, and NO otherwise.\n\nIf there is a path, also print its description which consists of characters U (up), D (down), L (left) ja R (right). If there are several paths, you can print any of them.\n\nConstraints\n\n1\u2264t\u22641001\u2264t\u2264100\n1\u2264n\u2264501\u2264n\u226450\n1\u2264m\u2264501\u2264m\u226450\n\nExample\n\nInput:\n5\n1 3 1 1 1 3\n1 3 1 2 1 3\n2 2 1 1 2 2\n2 2 1 1 2 1\n4 7 1 3 3 6\n\nOutput:\nYES\nRR\nNO\nNO\nYES\nRDL\nYES\nRRRRDDDLLLLLLUUURDDRURDRURD "], "17. Letter Combinations of a Phone Number": ["https://leetcode.com/problems/letter-combinations-of-a-phone-number", "Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.\nA mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.\n\n\u00a0\nExample 1:\nInput: digits = \"23\"\nOutput: [\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"]\n\nExample 2:\nInput: digits = \"\"\nOutput: []\n\nExample 3:\nInput: digits = \"2\"\nOutput: [\"a\",\"b\",\"c\"]\n\n\u00a0\nConstraints:\n\n0 <= digits.length <= 4\ndigits[i] is a digit in the range ['2', '9'].\n\n"], "1. Two Sum": ["https://leetcode.com/problems/two-sum", "Given an array of integers nums\u00a0and an integer target, return indices of the two numbers such that they add up to target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nYou can return the answer in any order.\n\u00a0\nExample 1:\nInput: nums = [2,7,11,15], target = 9\nOutput: [0,1]\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].\n\nExample 2:\nInput: nums = [3,2,4], target = 6\nOutput: [1,2]\n\nExample 3:\nInput: nums = [3,3], target = 6\nOutput: [0,1]\n\n\u00a0\nConstraints:\n\n2 <= nums.length <= 104\n-109 <= nums[i] <= 109\n-109 <= target <= 109\nOnly one valid answer exists.\n\n\u00a0\nFollow-up:\u00a0Can you come up with an algorithm that is less than\u00a0O(n2)\u00a0time complexity?"], "2. Add Two Numbers": ["https://leetcode.com/problems/add-two-numbers", "You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum\u00a0as a linked list.\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\u00a0\nExample 1:\n\nInput: l1 = [2,4,3], l2 = [5,6,4]\nOutput: [7,0,8]\nExplanation: 342 + 465 = 807.\n\nExample 2:\nInput: l1 = [0], l2 = [0]\nOutput: [0]\n\nExample 3:\nInput: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\nOutput: [8,9,9,9,0,0,0,1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in each linked list is in the range [1, 100].\n0 <= Node.val <= 9\nIt is guaranteed that the list represents a number that does not have leading zeros.\n\n"], "3. Longest Substring Without Repeating Characters": ["https://leetcode.com/problems/longest-substring-without-repeating-characters", "Given a string s, find the length of the longest substring without repeating characters.\n\u00a0\nExample 1:\nInput: s = \"abcabcbb\"\nOutput: 3\nExplanation: The answer is \"abc\", with the length of 3.\n\nExample 2:\nInput: s = \"bbbbb\"\nOutput: 1\nExplanation: The answer is \"b\", with the length of 1.\n\nExample 3:\nInput: s = \"pwwkew\"\nOutput: 3\nExplanation: The answer is \"wke\", with the length of 3.\nNotice that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n\n\u00a0\nConstraints:\n\n0 <= s.length <= 5 * 104\ns consists of English letters, digits, symbols and spaces.\n\n"], "4. Median of Two Sorted Arrays": ["https://leetcode.com/problems/median-of-two-sorted-arrays", "Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.\nThe overall run time complexity should be O(log (m+n)).\n\u00a0\nExample 1:\nInput: nums1 = [1,3], nums2 = [2]\nOutput: 2.00000\nExplanation: merged array = [1,2,3] and median is 2.\n\nExample 2:\nInput: nums1 = [1,2], nums2 = [3,4]\nOutput: 2.50000\nExplanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n\n\u00a0\nConstraints:\n\nnums1.length == m\nnums2.length == n\n0 <= m <= 1000\n0 <= n <= 1000\n1 <= m + n <= 2000\n-106 <= nums1[i], nums2[i] <= 106\n\n"], "5. Longest Palindromic Substring": ["https://leetcode.com/problems/longest-palindromic-substring", "Given a string s, return the longest palindromic substring in s.\n\u00a0\nExample 1:\nInput: s = \"babad\"\nOutput: \"bab\"\nExplanation: \"aba\" is also a valid answer.\n\nExample 2:\nInput: s = \"cbbd\"\nOutput: \"bb\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\ns consist of only digits and English letters.\n\n"], "6. Zigzag Conversion": ["https://leetcode.com/problems/zigzag-conversion", ""], "7. Reverse Integer": ["https://leetcode.com/problems/reverse-integer", "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.\nAssume the environment does not allow you to store 64-bit integers (signed or unsigned).\n\u00a0\nExample 1:\nInput: x = 123\nOutput: 321\n\nExample 2:\nInput: x = -123\nOutput: -321\n\nExample 3:\nInput: x = 120\nOutput: 21\n\n\u00a0\nConstraints:\n\n-231 <= x <= 231 - 1\n\n"], "8. String to Integer (atoi)": ["https://leetcode.com/problems/string-to-integer-atoi", "Implement the myAtoi(string s) function, which converts a string to a 32-bit signed integer (similar to C/C++'s atoi function).\nThe algorithm for myAtoi(string s) is as follows:\n\nRead in and ignore any leading whitespace.\nCheck if the next character (if not already at the end of the string) is '-' or '+'. Read this character in if it is either. This determines if the final result is negative or positive respectively. Assume the result is positive if neither is present.\nRead in next the characters until the next non-digit character or the end of the input is reached. The rest of the string is ignored.\nConvert these digits into an integer (i.e. \"123\" -> 123, \"0032\" -> 32). If no digits were read, then the integer is 0. Change the sign as necessary (from step 2).\nIf the integer is out of the 32-bit signed integer range [-231, 231 - 1], then clamp the integer so that it remains in the range. Specifically, integers less than -231 should be clamped to -231, and integers greater than 231 - 1 should be clamped to 231 - 1.\nReturn the integer as the final result.\n\nNote:\n\nOnly the space character ' ' is considered a whitespace character.\nDo not ignore any characters other than the leading whitespace or the rest of the string after the digits.\n\n\u00a0\nExample 1:\nInput: s = \"42\"\nOutput: 42\nExplanation: The underlined characters are what is read in, the caret is the current reader position.\nStep 1: \"42\" (no characters read because there is no leading whitespace)\n         ^\nStep 2: \"42\" (no characters read because there is neither a '-' nor '+')\n         ^\nStep 3: \"42\" (\"42\" is read in)\n           ^\nThe parsed integer is 42.\nSince 42 is in the range [-231, 231 - 1], the final result is 42.\n\nExample 2:\nInput: s = \"   -42\"\nOutput: -42\nExplanation:\nStep 1: \"   -42\" (leading whitespace is read and ignored)\n            ^\nStep 2: \"   -42\" ('-' is read, so the result should be negative)\n             ^\nStep 3: \"   -42\" (\"42\" is read in)\n               ^\nThe parsed integer is -42.\nSince -42 is in the range [-231, 231 - 1], the final result is -42.\n\nExample 3:\nInput: s = \"4193 with words\"\nOutput: 4193\nExplanation:\nStep 1: \"4193 with words\" (no characters read because there is no leading whitespace)\n         ^\nStep 2: \"4193 with words\" (no characters read because there is neither a '-' nor '+')\n         ^\nStep 3: \"4193 with words\" (\"4193\" is read in; reading stops because the next character is a non-digit)\n             ^\nThe parsed integer is 4193.\nSince 4193 is in the range [-231, 231 - 1], the final result is 4193.\n\n\u00a0\nConstraints:\n\n0 <= s.length <= 200\ns consists of English letters (lower-case and upper-case), digits (0-9), ' ', '+', '-', and '.'.\n\n"], "9. Palindrome Number": ["https://leetcode.com/problems/palindrome-number", "Given an integer x, return true if x is palindrome integer.\nAn integer is a palindrome when it reads the same backward as forward.\n\nFor example, 121 is a palindrome while 123 is not.\n\n\u00a0\nExample 1:\nInput: x = 121\nOutput: true\nExplanation: 121 reads as 121 from left to right and from right to left.\n\nExample 2:\nInput: x = -121\nOutput: false\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n\nExample 3:\nInput: x = 10\nOutput: false\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.\n\n\u00a0\nConstraints:\n\n-231\u00a0<= x <= 231\u00a0- 1\n\n\u00a0\nFollow up: Could you solve it without converting the integer to a string?"], "10. Regular Expression Matching": ["https://leetcode.com/problems/regular-expression-matching", "Given an input string s\u00a0and a pattern p, implement regular expression matching with support for '.' and '*' where:\n\n'.' Matches any single character.\u200b\u200b\u200b\u200b\n'*' Matches zero or more of the preceding element.\n\nThe matching should cover the entire input string (not partial).\n\u00a0\nExample 1:\nInput: s = \"aa\", p = \"a\"\nOutput: false\nExplanation: \"a\" does not match the entire string \"aa\".\n\nExample 2:\nInput: s = \"aa\", p = \"a*\"\nOutput: true\nExplanation: '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes \"aa\".\n\nExample 3:\nInput: s = \"ab\", p = \".*\"\nOutput: true\nExplanation: \".*\" means \"zero or more (*) of any character (.)\".\n\n\u00a0\nConstraints:\n\n1 <= s.length\u00a0<= 20\n1 <= p.length\u00a0<= 30\ns contains only lowercase English letters.\np contains only lowercase English letters, '.', and\u00a0'*'.\nIt is guaranteed for each appearance of the character '*', there will be a previous valid character to match.\n\n"], "11. Container With Most Water": ["https://leetcode.com/problems/container-with-most-water", "You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).\nFind two lines that together with the x-axis form a container, such that the container contains the most water.\nReturn the maximum amount of water a container can store.\nNotice that you may not slant the container.\n\u00a0\nExample 1:\n\nInput: height = [1,8,6,2,5,4,8,3,7]\nOutput: 49\nExplanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\n\nExample 2:\nInput: height = [1,1]\nOutput: 1\n\n\u00a0\nConstraints:\n\nn == height.length\n2 <= n <= 105\n0 <= height[i] <= 104\n\n"], "12. Integer to Roman": ["https://leetcode.com/problems/integer-to-roman", "Roman numerals are represented by seven different symbols:\u00a0I, V, X, L, C, D and M.\nSymbol       Value\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\nFor example,\u00a02 is written as II\u00a0in Roman numeral, just two one's added together. 12 is written as\u00a0XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.\nRoman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:\n\nI can be placed before V (5) and X (10) to make 4 and 9.\u00a0\nX can be placed before L (50) and C (100) to make 40 and 90.\u00a0\nC can be placed before D (500) and M (1000) to make 400 and 900.\n\nGiven an integer, convert it to a roman numeral.\n\u00a0\nExample 1:\nInput: num = 3\nOutput: \"III\"\nExplanation: 3 is represented as 3 ones.\n\nExample 2:\nInput: num = 58\nOutput: \"LVIII\"\nExplanation: L = 50, V = 5, III = 3.\n\nExample 3:\nInput: num = 1994\nOutput: \"MCMXCIV\"\nExplanation: M = 1000, CM = 900, XC = 90 and IV = 4.\n\n\u00a0\nConstraints:\n\n1 <= num <= 3999\n\n"], "13. Roman to Integer": ["https://leetcode.com/problems/roman-to-integer", "Roman numerals are represented by seven different symbols:\u00a0I, V, X, L, C, D and M.\nSymbol       Value\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\nFor example,\u00a02 is written as II\u00a0in Roman numeral, just two one's added together. 12 is written as\u00a0XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.\nRoman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:\n\nI can be placed before V (5) and X (10) to make 4 and 9.\u00a0\nX can be placed before L (50) and C (100) to make 40 and 90.\u00a0\nC can be placed before D (500) and M (1000) to make 400 and 900.\n\nGiven a roman numeral, convert it to an integer.\n\u00a0\nExample 1:\nInput: s = \"III\"\nOutput: 3\nExplanation: III = 3.\n\nExample 2:\nInput: s = \"LVIII\"\nOutput: 58\nExplanation: L = 50, V= 5, III = 3.\n\nExample 3:\nInput: s = \"MCMXCIV\"\nOutput: 1994\nExplanation: M = 1000, CM = 900, XC = 90 and IV = 4.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 15\ns contains only\u00a0the characters ('I', 'V', 'X', 'L', 'C', 'D', 'M').\nIt is guaranteed\u00a0that s is a valid roman numeral in the range [1, 3999].\n\n"], "14. Longest Common Prefix": ["https://leetcode.com/problems/longest-common-prefix", "Write a function to find the longest common prefix string amongst an array of strings.\nIf there is no common prefix, return an empty string \"\".\n\u00a0\nExample 1:\nInput: strs = [\"flower\",\"flow\",\"flight\"]\nOutput: \"fl\"\n\nExample 2:\nInput: strs = [\"dog\",\"racecar\",\"car\"]\nOutput: \"\"\nExplanation: There is no common prefix among the input strings.\n\n\u00a0\nConstraints:\n\n1 <= strs.length <= 200\n0 <= strs[i].length <= 200\nstrs[i] consists of only lower-case English letters.\n\n"], "15. 3Sum": ["https://leetcode.com/problems/3sum", "Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.\nNotice that the solution set must not contain duplicate triplets.\n\u00a0\nExample 1:\nInput: nums = [-1,0,1,2,-1,-4]\nOutput: [[-1,-1,2],[-1,0,1]]\nExample 2:\nInput: nums = []\nOutput: []\nExample 3:\nInput: nums = [0]\nOutput: []\n\n\u00a0\nConstraints:\n\n0 <= nums.length <= 3000\n-105 <= nums[i] <= 105\n\n"], "16. 3Sum Closest": ["https://leetcode.com/problems/3sum-closest", "Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.\nReturn the sum of the three integers.\nYou may assume that each input would have exactly one solution.\n\u00a0\nExample 1:\nInput: nums = [-1,2,1,-4], target = 1\nOutput: 2\nExplanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n\nExample 2:\nInput: nums = [0,0,0], target = 1\nOutput: 0\n\n\u00a0\nConstraints:\n\n3 <= nums.length <= 1000\n-1000 <= nums[i] <= 1000\n-104 <= target <= 104\n\n"], "18. 4Sum": ["https://leetcode.com/problems/4sum", "Given an array nums of n integers, return an array of all the unique quadruplets [nums[a], nums[b], nums[c], nums[d]] such that:\n\n0 <= a, b, c, d\u00a0< n\na, b, c, and d are distinct.\nnums[a] + nums[b] + nums[c] + nums[d] == target\n\nYou may return the answer in any order.\n\u00a0\nExample 1:\nInput: nums = [1,0,-1,0,-2,2], target = 0\nOutput: [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]\n\nExample 2:\nInput: nums = [2,2,2,2,2], target = 8\nOutput: [[2,2,2,2]]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 200\n-109 <= nums[i] <= 109\n-109 <= target <= 109\n\n"], "19. Remove Nth Node From End of List": ["https://leetcode.com/problems/remove-nth-node-from-end-of-list", "Given the head of a linked list, remove the nth node from the end of the list and return its head.\n\u00a0\nExample 1:\n\nInput: head = [1,2,3,4,5], n = 2\nOutput: [1,2,3,5]\n\nExample 2:\nInput: head = [1], n = 1\nOutput: []\n\nExample 3:\nInput: head = [1,2], n = 1\nOutput: [1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is sz.\n1 <= sz <= 30\n0 <= Node.val <= 100\n1 <= n <= sz\n\n\u00a0\nFollow up: Could you do this in one pass?\n"], "20. Valid Parentheses": ["https://leetcode.com/problems/valid-parentheses", "Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\nAn input string is valid if:\n\nOpen brackets must be closed by the same type of brackets.\nOpen brackets must be closed in the correct order.\n\n\u00a0\nExample 1:\nInput: s = \"()\"\nOutput: true\n\nExample 2:\nInput: s = \"()[]{}\"\nOutput: true\n\nExample 3:\nInput: s = \"(]\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 104\ns consists of parentheses only '()[]{}'.\n\n"], "21. Merge Two Sorted Lists": ["https://leetcode.com/problems/merge-two-sorted-lists", "You are given the heads of two sorted linked lists list1 and list2.\nMerge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.\nReturn the head of the merged linked list.\n\u00a0\nExample 1:\n\nInput: list1 = [1,2,4], list2 = [1,3,4]\nOutput: [1,1,2,3,4,4]\n\nExample 2:\nInput: list1 = [], list2 = []\nOutput: []\n\nExample 3:\nInput: list1 = [], list2 = [0]\nOutput: [0]\n\n\u00a0\nConstraints:\n\nThe number of nodes in both lists is in the range [0, 50].\n-100 <= Node.val <= 100\nBoth list1 and list2 are sorted in non-decreasing order.\n\n"], "22. Generate Parentheses": ["https://leetcode.com/problems/generate-parentheses", "Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\n\u00a0\nExample 1:\nInput: n = 3\nOutput: [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\nExample 2:\nInput: n = 1\nOutput: [\"()\"]\n\n\u00a0\nConstraints:\n\n1 <= n <= 8\n\n"], "23. Merge k Sorted Lists": ["https://leetcode.com/problems/merge-k-sorted-lists", "You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.\nMerge all the linked-lists into one sorted linked-list and return it.\n\u00a0\nExample 1:\nInput: lists = [[1,4,5],[1,3,4],[2,6]]\nOutput: [1,1,2,3,4,4,5,6]\nExplanation: The linked-lists are:\n[\n  1->4->5,\n  1->3->4,\n  2->6\n]\nmerging them into one sorted list:\n1->1->2->3->4->4->5->6\n\nExample 2:\nInput: lists = []\nOutput: []\n\nExample 3:\nInput: lists = [[]]\nOutput: []\n\n\u00a0\nConstraints:\n\nk == lists.length\n0 <= k <= 104\n0 <= lists[i].length <= 500\n-104 <= lists[i][j] <= 104\nlists[i] is sorted in ascending order.\nThe sum of lists[i].length will not exceed 104.\n\n"], "24. Swap Nodes in Pairs": ["https://leetcode.com/problems/swap-nodes-in-pairs", "Given a\u00a0linked list, swap every two adjacent nodes and return its head. You must solve the problem without\u00a0modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n\u00a0\nExample 1:\n\nInput: head = [1,2,3,4]\nOutput: [2,1,4,3]\n\nExample 2:\nInput: head = []\nOutput: []\n\nExample 3:\nInput: head = [1]\nOutput: [1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the\u00a0list\u00a0is in the range [0, 100].\n0 <= Node.val <= 100\n\n"], "25. Reverse Nodes in k-Group": ["https://leetcode.com/problems/reverse-nodes-in-k-group", "Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list.\nk is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is.\nYou may not alter the values in the list's nodes, only nodes themselves may be changed.\n\u00a0\nExample 1:\n\nInput: head = [1,2,3,4,5], k = 2\nOutput: [2,1,4,3,5]\n\nExample 2:\n\nInput: head = [1,2,3,4,5], k = 3\nOutput: [3,2,1,4,5]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is n.\n1 <= k <= n <= 5000\n0 <= Node.val <= 1000\n\n\u00a0\nFollow-up: Can you solve the problem in O(1) extra memory space?\n"], "26. Remove Duplicates from Sorted Array": ["https://leetcode.com/problems/remove-duplicates-from-sorted-array", "Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same.\nSince it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums\u00a0should hold the final result. It does not matter what you leave beyond the first\u00a0k\u00a0elements.\nReturn k after placing the final result in the first k slots of nums.\nDo not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\nCustom Judge:\nThe judge will test your solution with the following code:\nint[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\n\nint k = removeDuplicates(nums); // Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i < k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n\nIf all assertions pass, then your solution will be accepted.\n\u00a0\nExample 1:\nInput: nums = [1,1,2]\nOutput: 2, nums = [1,2,_]\nExplanation: Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\nExample 2:\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\nOutput: 5, nums = [0,1,2,3,4,_,_,_,_,_]\nExplanation: Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 3 * 104\n-100 <= nums[i] <= 100\nnums is sorted in non-decreasing order.\n\n"], "27. Remove Element": ["https://leetcode.com/problems/remove-element", "Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The relative order of the elements may be changed.\nSince it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\nReturn k after placing the final result in the first k slots of nums.\nDo not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\nCustom Judge:\nThe judge will test your solution with the following code:\nint[] nums = [...]; // Input array\nint val = ...; // Value to remove\nint[] expectedNums = [...]; // The expected answer with correct length.\n                            // It is sorted with no values equaling val.\n\nint k = removeElement(nums, val); // Calls your implementation\n\nassert k == expectedNums.length;\nsort(nums, 0, k); // Sort the first k elements of nums\nfor (int i = 0; i < actualLength; i++) {\n    assert nums[i] == expectedNums[i];\n}\n\nIf all assertions pass, then your solution will be accepted.\n\u00a0\nExample 1:\nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2,_,_]\nExplanation: Your function should return k = 2, with the first two elements of nums being 2.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\nExample 2:\nInput: nums = [0,1,2,2,3,0,4,2], val = 2\nOutput: 5, nums = [0,1,4,0,3,_,_,_]\nExplanation: Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4.\nNote that the five elements can be returned in any order.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\n\u00a0\nConstraints:\n\n0 <= nums.length <= 100\n0 <= nums[i] <= 50\n0 <= val <= 100\n\n"], "28. Implement strStr()": ["https://leetcode.com/problems/implement-strstr", "Implement strStr().\nGiven two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\nClarification:\nWhat should we return when needle is an empty string? This is a great question to ask during an interview.\nFor the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf().\n\u00a0\nExample 1:\nInput: haystack = \"hello\", needle = \"ll\"\nOutput: 2\n\nExample 2:\nInput: haystack = \"aaaaa\", needle = \"bba\"\nOutput: -1\n\n\u00a0\nConstraints:\n\n1 <= haystack.length, needle.length <= 104\nhaystack and needle consist of only lowercase English characters.\n\n"], "29. Divide Two Integers": ["https://leetcode.com/problems/divide-two-integers", "Given two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.\nThe integer division should truncate toward zero, which means losing its fractional part. For example, 8.345 would be truncated to 8, and -2.7335 would be truncated to -2.\nReturn the quotient after dividing dividend by divisor.\nNote: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [\u2212231, 231 \u2212 1]. For this problem, if the quotient is strictly greater than 231 - 1, then return 231 - 1, and if the quotient is strictly less than -231, then return -231.\n\u00a0\nExample 1:\nInput: dividend = 10, divisor = 3\nOutput: 3\nExplanation: 10/3 = 3.33333.. which is truncated to 3.\n\nExample 2:\nInput: dividend = 7, divisor = -3\nOutput: -2\nExplanation: 7/-3 = -2.33333.. which is truncated to -2.\n\n\u00a0\nConstraints:\n\n-231 <= dividend, divisor <= 231 - 1\ndivisor != 0\n\n"], "30. Substring with Concatenation of All Words": ["https://leetcode.com/problems/substring-with-concatenation-of-all-words", "You are given a string s and an array of strings words of the same length. Return\u00a0all starting indices of substring(s) in s\u00a0that is a concatenation of each word in words exactly once, in any order,\u00a0and without any intervening characters.\nYou can return the answer in any order.\n\u00a0\nExample 1:\nInput: s = \"barfoothefoobarman\", words = [\"foo\",\"bar\"]\nOutput: [0,9]\nExplanation: Substrings starting at index 0 and 9 are \"barfoo\" and \"foobar\" respectively.\nThe output order does not matter, returning [9,0] is fine too.\n\nExample 2:\nInput: s = \"wordgoodgoodgoodbestword\", words = [\"word\",\"good\",\"best\",\"word\"]\nOutput: []\n\nExample 3:\nInput: s = \"barfoofoobarthefoobarman\", words = [\"bar\",\"foo\",\"the\"]\nOutput: [6,9,12]\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 104\ns consists of lower-case English letters.\n1 <= words.length <= 5000\n1 <= words[i].length <= 30\nwords[i]\u00a0consists of lower-case English letters.\n\n"], "31. Next Permutation": ["https://leetcode.com/problems/next-permutation", "A permutation of an array of integers is an arrangement of its members into a sequence or linear order.\n\nFor example, for arr = [1,2,3], the following are considered permutations of arr: [1,2,3], [1,3,2], [3,1,2], [2,3,1].\n\nThe next permutation of an array of integers is the next lexicographically greater permutation of its integer. More formally, if all the permutations of the array are sorted in one container according to their lexicographical order, then the next permutation of that array is the permutation that follows it in the sorted container. If such arrangement is not possible, the array must be rearranged as the lowest possible order (i.e., sorted in ascending order).\n\nFor example, the next permutation of arr = [1,2,3] is [1,3,2].\nSimilarly, the next permutation of arr = [2,3,1] is [3,1,2].\nWhile the next permutation of arr = [3,2,1] is [1,2,3] because [3,2,1] does not have a lexicographical larger rearrangement.\n\nGiven an array of integers nums, find the next permutation of nums.\nThe replacement must be in place and use only constant extra memory.\n\u00a0\nExample 1:\nInput: nums = [1,2,3]\nOutput: [1,3,2]\n\nExample 2:\nInput: nums = [3,2,1]\nOutput: [1,2,3]\n\nExample 3:\nInput: nums = [1,1,5]\nOutput: [1,5,1]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 100\n0 <= nums[i] <= 100\n\n"], "32. Longest Valid Parentheses": ["https://leetcode.com/problems/longest-valid-parentheses", "Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.\n\u00a0\nExample 1:\nInput: s = \"(()\"\nOutput: 2\nExplanation: The longest valid parentheses substring is \"()\".\n\nExample 2:\nInput: s = \")()())\"\nOutput: 4\nExplanation: The longest valid parentheses substring is \"()()\".\n\nExample 3:\nInput: s = \"\"\nOutput: 0\n\n\u00a0\nConstraints:\n\n0 <= s.length <= 3 * 104\ns[i] is '(', or ')'.\n\n"], "33. Search in Rotated Sorted Array": ["https://leetcode.com/problems/search-in-rotated-sorted-array", "There is an integer array nums sorted in ascending order (with distinct values).\nPrior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2].\nGiven the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.\nYou must write an algorithm with O(log n) runtime complexity.\n\u00a0\nExample 1:\nInput: nums = [4,5,6,7,0,1,2], target = 0\nOutput: 4\nExample 2:\nInput: nums = [4,5,6,7,0,1,2], target = 3\nOutput: -1\nExample 3:\nInput: nums = [1], target = 0\nOutput: -1\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5000\n-104 <= nums[i] <= 104\nAll values of nums are unique.\nnums is an ascending array that is possibly rotated.\n-104 <= target <= 104\n\n"], "34. Find First and Last Position of Element in Sorted Array": ["https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array", "Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.\nIf target is not found in the array, return [-1, -1].\nYou must\u00a0write an algorithm with\u00a0O(log n) runtime complexity.\n\u00a0\nExample 1:\nInput: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\nExample 2:\nInput: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\nExample 3:\nInput: nums = [], target = 0\nOutput: [-1,-1]\n\n\u00a0\nConstraints:\n\n0 <= nums.length <= 105\n-109\u00a0<= nums[i]\u00a0<= 109\nnums is a non-decreasing array.\n-109\u00a0<= target\u00a0<= 109\n\n"], "35. Search Insert Position": ["https://leetcode.com/problems/search-insert-position", "Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\nYou must\u00a0write an algorithm with\u00a0O(log n) runtime complexity.\n\u00a0\nExample 1:\nInput: nums = [1,3,5,6], target = 5\nOutput: 2\n\nExample 2:\nInput: nums = [1,3,5,6], target = 2\nOutput: 1\n\nExample 3:\nInput: nums = [1,3,5,6], target = 7\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-104 <= nums[i] <= 104\nnums contains distinct values sorted in ascending order.\n-104 <= target <= 104\n\n"], "36. Valid Sudoku": ["https://leetcode.com/problems/valid-sudoku", "Determine if a\u00a09 x 9 Sudoku board\u00a0is valid.\u00a0Only the filled cells need to be validated\u00a0according to the following rules:\n\nEach row\u00a0must contain the\u00a0digits\u00a01-9 without repetition.\nEach column must contain the digits\u00a01-9\u00a0without repetition.\nEach of the nine\u00a03 x 3 sub-boxes of the grid must contain the digits\u00a01-9\u00a0without repetition.\n\nNote:\n\nA Sudoku board (partially filled) could be valid but is not necessarily solvable.\nOnly the filled cells need to be validated according to the mentioned\u00a0rules.\n\n\u00a0\nExample 1:\n\nInput: board = \n[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\nOutput: true\n\nExample 2:\nInput: board = \n[[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\nOutput: false\nExplanation: Same as Example 1, except with the 5 in the top left corner being modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid.\n\n\u00a0\nConstraints:\n\nboard.length == 9\nboard[i].length == 9\nboard[i][j] is a digit 1-9 or '.'.\n\n"], "37. Sudoku Solver": ["https://leetcode.com/problems/sudoku-solver", "Write a program to solve a Sudoku puzzle by filling the empty cells.\nA sudoku solution must satisfy all of the following rules:\n\nEach of the digits 1-9 must occur exactly once in each row.\nEach of the digits 1-9 must occur exactly once in each column.\nEach of the digits 1-9 must occur exactly once in each of the 9 3x3 sub-boxes of the grid.\n\nThe '.' character indicates empty cells.\n\u00a0\nExample 1:\n\nInput: board = [[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\nOutput: [[\"5\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\"],[\"6\",\"7\",\"2\",\"1\",\"9\",\"5\",\"3\",\"4\",\"8\"],[\"1\",\"9\",\"8\",\"3\",\"4\",\"2\",\"5\",\"6\",\"7\"],[\"8\",\"5\",\"9\",\"7\",\"6\",\"1\",\"4\",\"2\",\"3\"],[\"4\",\"2\",\"6\",\"8\",\"5\",\"3\",\"7\",\"9\",\"1\"],[\"7\",\"1\",\"3\",\"9\",\"2\",\"4\",\"8\",\"5\",\"6\"],[\"9\",\"6\",\"1\",\"5\",\"3\",\"7\",\"2\",\"8\",\"4\"],[\"2\",\"8\",\"7\",\"4\",\"1\",\"9\",\"6\",\"3\",\"5\"],[\"3\",\"4\",\"5\",\"2\",\"8\",\"6\",\"1\",\"7\",\"9\"]]\nExplanation:\u00a0The input board is shown above and the only valid solution is shown below:\n\n\n\n\u00a0\nConstraints:\n\nboard.length == 9\nboard[i].length == 9\nboard[i][j] is a digit or '.'.\nIt is guaranteed that the input board has only one solution.\n\n"], "38. Count and Say": ["https://leetcode.com/problems/count-and-say", "The count-and-say sequence is a sequence of digit strings defined by the recursive formula:\n\ncountAndSay(1) = \"1\"\ncountAndSay(n) is the way you would \"say\" the digit string from countAndSay(n-1), which is then converted into a different digit string.\n\nTo determine how you \"say\" a digit string, split it into the minimal number of groups so that each group is a contiguous section all of the same character. Then for each group, say the number of characters, then say the character. To convert the saying into a digit string, replace the counts with a number and concatenate every saying.\nFor example, the saying and conversion for digit string \"3322251\":\n\nGiven a positive integer n, return the nth term of the count-and-say sequence.\n\u00a0\nExample 1:\nInput: n = 1\nOutput: \"1\"\nExplanation: This is the base case.\n\nExample 2:\nInput: n = 4\nOutput: \"1211\"\nExplanation:\ncountAndSay(1) = \"1\"\ncountAndSay(2) = say \"1\" = one 1 = \"11\"\ncountAndSay(3) = say \"11\" = two 1's = \"21\"\ncountAndSay(4) = say \"21\" = one 2 + one 1 = \"12\" + \"11\" = \"1211\"\n\n\u00a0\nConstraints:\n\n1 <= n <= 30\n\n"], "39. Combination Sum": ["https://leetcode.com/problems/combination-sum", "Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.\nThe same number may be chosen from candidates an unlimited number of times. Two combinations are unique if the frequency of at least one of the chosen numbers is different.\nIt is guaranteed that the number of unique combinations that sum up to target is less than 150 combinations for the given input.\n\u00a0\nExample 1:\nInput: candidates = [2,3,6,7], target = 7\nOutput: [[2,2,3],[7]]\nExplanation:\n2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.\n7 is a candidate, and 7 = 7.\nThese are the only two combinations.\n\nExample 2:\nInput: candidates = [2,3,5], target = 8\nOutput: [[2,2,2,2],[2,3,3],[3,5]]\n\nExample 3:\nInput: candidates = [2], target = 1\nOutput: []\n\n\u00a0\nConstraints:\n\n1 <= candidates.length <= 30\n1 <= candidates[i] <= 200\nAll elements of candidates are distinct.\n1 <= target <= 500\n\n"], "40. Combination Sum II": ["https://leetcode.com/problems/combination-sum-ii", "Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates\u00a0where the candidate numbers sum to target.\nEach number in candidates\u00a0may only be used once in the combination.\nNote:\u00a0The solution set must not contain duplicate combinations.\n\u00a0\nExample 1:\nInput: candidates = [10,1,2,7,6,1,5], target = 8\nOutput: \n[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]\n\nExample 2:\nInput: candidates = [2,5,2,1,2], target = 5\nOutput: \n[\n[1,2,2],\n[5]\n]\n\n\u00a0\nConstraints:\n\n1 <=\u00a0candidates.length <= 100\n1 <=\u00a0candidates[i] <= 50\n1 <= target <= 30\n\n"], "41. First Missing Positive": ["https://leetcode.com/problems/first-missing-positive", "Given an unsorted integer array nums, return the smallest missing positive integer.\nYou must implement an algorithm that runs in O(n) time and uses constant extra space.\n\u00a0\nExample 1:\nInput: nums = [1,2,0]\nOutput: 3\nExample 2:\nInput: nums = [3,4,-1,1]\nOutput: 2\nExample 3:\nInput: nums = [7,8,9,11,12]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5 * 105\n-231 <= nums[i] <= 231 - 1\n\n"], "42. Trapping Rain Water": ["https://leetcode.com/problems/trapping-rain-water", "Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.\n\u00a0\nExample 1:\n\nInput: height = [0,1,0,2,1,0,1,3,2,1,2,1]\nOutput: 6\nExplanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.\n\nExample 2:\nInput: height = [4,2,0,3,2,5]\nOutput: 9\n\n\u00a0\nConstraints:\n\nn == height.length\n1 <= n <= 2 * 104\n0 <= height[i] <= 105\n\n"], "43. Multiply Strings": ["https://leetcode.com/problems/multiply-strings", "Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.\nNote:\u00a0You must not use any built-in BigInteger library or convert the inputs to integer directly.\n\u00a0\nExample 1:\nInput: num1 = \"2\", num2 = \"3\"\nOutput: \"6\"\nExample 2:\nInput: num1 = \"123\", num2 = \"456\"\nOutput: \"56088\"\n\n\u00a0\nConstraints:\n\n1 <= num1.length, num2.length <= 200\nnum1 and num2 consist of digits only.\nBoth num1 and num2\u00a0do not contain any leading zero, except the number 0 itself.\n\n"], "44. Wildcard Matching": ["https://leetcode.com/problems/wildcard-matching", "Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*' where:\n\n'?' Matches any single character.\n'*' Matches any sequence of characters (including the empty sequence).\n\nThe matching should cover the entire input string (not partial).\n\u00a0\nExample 1:\nInput: s = \"aa\", p = \"a\"\nOutput: false\nExplanation: \"a\" does not match the entire string \"aa\".\n\nExample 2:\nInput: s = \"aa\", p = \"*\"\nOutput: true\nExplanation:\u00a0'*' matches any sequence.\n\nExample 3:\nInput: s = \"cb\", p = \"?a\"\nOutput: false\nExplanation:\u00a0'?' matches 'c', but the second letter is 'a', which does not match 'b'.\n\n\u00a0\nConstraints:\n\n0 <= s.length, p.length <= 2000\ns contains only lowercase English letters.\np contains only lowercase English letters, '?' or '*'.\n\n"], "45. Jump Game II": ["https://leetcode.com/problems/jump-game-ii", "Given an array of non-negative integers nums, you are initially positioned at the first index of the array.\nEach element in the array represents your maximum jump length at that position.\nYour goal is to reach the last index in the minimum number of jumps.\nYou can assume that you can always reach the last index.\n\u00a0\nExample 1:\nInput: nums = [2,3,1,1,4]\nOutput: 2\nExplanation: The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.\n\nExample 2:\nInput: nums = [2,3,0,1,4]\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n0 <= nums[i] <= 1000\n\n"], "46. Permutations": ["https://leetcode.com/problems/permutations", "Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.\n\u00a0\nExample 1:\nInput: nums = [1,2,3]\nOutput: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\nExample 2:\nInput: nums = [0,1]\nOutput: [[0,1],[1,0]]\nExample 3:\nInput: nums = [1]\nOutput: [[1]]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 6\n-10 <= nums[i] <= 10\nAll the integers of nums are unique.\n\n"], "47. Permutations II": ["https://leetcode.com/problems/permutations-ii", "Given a collection of numbers, nums,\u00a0that might contain duplicates, return all possible unique permutations in any order.\n\u00a0\nExample 1:\nInput: nums = [1,1,2]\nOutput:\n[[1,1,2],\n [1,2,1],\n [2,1,1]]\n\nExample 2:\nInput: nums = [1,2,3]\nOutput: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 8\n-10 <= nums[i] <= 10\n\n"], "48. Rotate Image": ["https://leetcode.com/problems/rotate-image", "You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).\nYou have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.\n\u00a0\nExample 1:\n\nInput: matrix = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [[7,4,1],[8,5,2],[9,6,3]]\n\nExample 2:\n\nInput: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]\nOutput: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]\n\n\u00a0\nConstraints:\n\nn == matrix.length == matrix[i].length\n1 <= n <= 20\n-1000 <= matrix[i][j] <= 1000\n\n"], "49. Group Anagrams": ["https://leetcode.com/problems/group-anagrams", "Given an array of strings strs, group the anagrams together. You can return the answer in any order.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\u00a0\nExample 1:\nInput: strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\nOutput: [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\nExample 2:\nInput: strs = [\"\"]\nOutput: [[\"\"]]\nExample 3:\nInput: strs = [\"a\"]\nOutput: [[\"a\"]]\n\n\u00a0\nConstraints:\n\n1 <= strs.length <= 104\n0 <= strs[i].length <= 100\nstrs[i] consists of lowercase English letters.\n\n"], "50. Pow(x, n)": ["https://leetcode.com/problems/powx-n", "Implement pow(x, n), which calculates x raised to the power n (i.e., xn).\n\u00a0\nExample 1:\nInput: x = 2.00000, n = 10\nOutput: 1024.00000\n\nExample 2:\nInput: x = 2.10000, n = 3\nOutput: 9.26100\n\nExample 3:\nInput: x = 2.00000, n = -2\nOutput: 0.25000\nExplanation: 2-2 = 1/22 = 1/4 = 0.25\n\n\u00a0\nConstraints:\n\n-100.0 < x < 100.0\n-231 <= n <= 231-1\n-104 <= xn <= 104\n\n"], "51. N-Queens": ["https://leetcode.com/problems/n-queens", "The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.\nGiven an integer n, return all distinct solutions to the n-queens puzzle. You may return the answer in any order.\nEach solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space, respectively.\n\u00a0\nExample 1:\n\nInput: n = 4\nOutput: [[\".Q..\",\"...Q\",\"Q...\",\"..Q.\"],[\"..Q.\",\"Q...\",\"...Q\",\".Q..\"]]\nExplanation: There exist two distinct solutions to the 4-queens puzzle as shown above\n\nExample 2:\nInput: n = 1\nOutput: [[\"Q\"]]\n\n\u00a0\nConstraints:\n\n1 <= n <= 9\n\n"], "52. N-Queens II": ["https://leetcode.com/problems/n-queens-ii", "The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.\nGiven an integer n, return the number of distinct solutions to the\u00a0n-queens puzzle.\n\u00a0\nExample 1:\n\nInput: n = 4\nOutput: 2\nExplanation: There are two distinct solutions to the 4-queens puzzle as shown.\n\nExample 2:\nInput: n = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= n <= 9\n\n"], "53. Maximum Subarray": ["https://leetcode.com/problems/maximum-subarray", "Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.\nA subarray is a contiguous part of an array.\n\u00a0\nExample 1:\nInput: nums = [-2,1,-3,4,-1,2,1,-5,4]\nOutput: 6\nExplanation: [4,-1,2,1] has the largest sum = 6.\n\nExample 2:\nInput: nums = [1]\nOutput: 1\n\nExample 3:\nInput: nums = [5,4,-1,7,8]\nOutput: 23\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n-104 <= nums[i] <= 104\n\n\u00a0\nFollow up: If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.\n"], "54. Spiral Matrix": ["https://leetcode.com/problems/spiral-matrix", "Given an m x n matrix, return all elements of the matrix in spiral order.\n\u00a0\nExample 1:\n\nInput: matrix = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [1,2,3,6,9,8,7,4,5]\n\nExample 2:\n\nInput: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\nOutput: [1,2,3,4,8,12,11,10,9,5,6,7]\n\n\u00a0\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 10\n-100 <= matrix[i][j] <= 100\n\n"], "55. Jump Game": ["https://leetcode.com/problems/jump-game", "You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.\nReturn true if you can reach the last index, or false otherwise.\n\u00a0\nExample 1:\nInput: nums = [2,3,1,1,4]\nOutput: true\nExplanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.\n\nExample 2:\nInput: nums = [3,2,1,0,4]\nOutput: false\nExplanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n0 <= nums[i] <= 105\n\n"], "56. Merge Intervals": ["https://leetcode.com/problems/merge-intervals", "Given an array\u00a0of intervals\u00a0where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.\n\u00a0\nExample 1:\nInput: intervals = [[1,3],[2,6],[8,10],[15,18]]\nOutput: [[1,6],[8,10],[15,18]]\nExplanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].\n\nExample 2:\nInput: intervals = [[1,4],[4,5]]\nOutput: [[1,5]]\nExplanation: Intervals [1,4] and [4,5] are considered overlapping.\n\n\u00a0\nConstraints:\n\n1 <= intervals.length <= 104\nintervals[i].length == 2\n0 <= starti <= endi <= 104\n\n"], "57. Insert Interval": ["https://leetcode.com/problems/insert-interval", "You are given an array of non-overlapping intervals intervals where intervals[i] = [starti, endi] represent the start and the end of the ith interval and intervals is sorted in ascending order by starti. You are also given an interval newInterval = [start, end] that represents the start and end of another interval.\nInsert newInterval into intervals such that intervals is still sorted in ascending order by starti and intervals still does not have any overlapping intervals (merge overlapping intervals if necessary).\nReturn intervals after the insertion.\n\u00a0\nExample 1:\nInput: intervals = [[1,3],[6,9]], newInterval = [2,5]\nOutput: [[1,5],[6,9]]\n\nExample 2:\nInput: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\nOutput: [[1,2],[3,10],[12,16]]\nExplanation: Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].\n\n\u00a0\nConstraints:\n\n0 <= intervals.length <= 104\nintervals[i].length == 2\n0 <= starti <= endi <= 105\nintervals is sorted by starti in ascending order.\nnewInterval.length == 2\n0 <= start <= end <= 105\n\n"], "58. Length of Last Word": ["https://leetcode.com/problems/length-of-last-word", "Given a string s consisting\u00a0of some words separated by some number of spaces, return the length of the last word in the string.\nA word is a maximal substring consisting of non-space characters only.\n\u00a0\nExample 1:\nInput: s = \"Hello World\"\nOutput: 5\nExplanation: The last word is \"World\" with length 5.\n\nExample 2:\nInput: s = \"   fly me   to   the moon  \"\nOutput: 4\nExplanation: The last word is \"moon\" with length 4.\n\nExample 3:\nInput: s = \"luffy is still joyboy\"\nOutput: 6\nExplanation: The last word is \"joyboy\" with length 6.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 104\ns consists of only English letters and spaces ' '.\nThere will be at least one word in s.\n\n"], "59. Spiral Matrix II": ["https://leetcode.com/problems/spiral-matrix-ii", "Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.\n\u00a0\nExample 1:\n\nInput: n = 3\nOutput: [[1,2,3],[8,9,4],[7,6,5]]\n\nExample 2:\nInput: n = 1\nOutput: [[1]]\n\n\u00a0\nConstraints:\n\n1 <= n <= 20\n\n"], "60. Permutation Sequence": ["https://leetcode.com/problems/permutation-sequence", "The set [1, 2, 3, ...,\u00a0n] contains a total of n! unique permutations.\nBy listing and labeling all of the permutations in order, we get the following sequence for n = 3:\n\n\"123\"\n\"132\"\n\"213\"\n\"231\"\n\"312\"\n\"321\"\n\nGiven n and k, return the kth permutation sequence.\n\u00a0\nExample 1:\nInput: n = 3, k = 3\nOutput: \"213\"\nExample 2:\nInput: n = 4, k = 9\nOutput: \"2314\"\nExample 3:\nInput: n = 3, k = 1\nOutput: \"123\"\n\n\u00a0\nConstraints:\n\n1 <= n <= 9\n1 <= k <= n!\n\n"], "61. Rotate List": ["https://leetcode.com/problems/rotate-list", "Given the head of a linked\u00a0list, rotate the list to the right by k places.\n\u00a0\nExample 1:\n\nInput: head = [1,2,3,4,5], k = 2\nOutput: [4,5,1,2,3]\n\nExample 2:\n\nInput: head = [0,1,2], k = 4\nOutput: [2,0,1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is in the range [0, 500].\n-100 <= Node.val <= 100\n0 <= k <= 2 * 109\n\n"], "62. Unique Paths": ["https://leetcode.com/problems/unique-paths", "There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time.\nGiven the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner.\nThe test cases are generated so that the answer will be less than or equal to 2 * 109.\n\u00a0\nExample 1:\n\nInput: m = 3, n = 7\nOutput: 28\n\nExample 2:\nInput: m = 3, n = 2\nOutput: 3\nExplanation: From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -> Down -> Down\n2. Down -> Down -> Right\n3. Down -> Right -> Down\n\n\u00a0\nConstraints:\n\n1 <= m, n <= 100\n\n"], "63. Unique Paths II": ["https://leetcode.com/problems/unique-paths-ii", "You are given an m x n integer array grid. There is a robot initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m-1][n-1]). The robot can only move either down or right at any point in time.\nAn obstacle and space are marked as 1 or 0 respectively in grid. A path that the robot takes cannot include any square that is an obstacle.\nReturn the number of possible unique paths that the robot can take to reach the bottom-right corner.\nThe testcases are generated so that the answer will be less than or equal to 2 * 109.\n\u00a0\nExample 1:\n\nInput: obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]\nOutput: 2\nExplanation: There is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -> Right -> Down -> Down\n2. Down -> Down -> Right -> Right\n\nExample 2:\n\nInput: obstacleGrid = [[0,1],[0,0]]\nOutput: 1\n\n\u00a0\nConstraints:\n\nm == obstacleGrid.length\nn == obstacleGrid[i].length\n1 <= m, n <= 100\nobstacleGrid[i][j] is 0 or 1.\n\n"], "64. Minimum Path Sum": ["https://leetcode.com/problems/minimum-path-sum", "Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.\nNote: You can only move either down or right at any point in time.\n\u00a0\nExample 1:\n\nInput: grid = [[1,3,1],[1,5,1],[4,2,1]]\nOutput: 7\nExplanation: Because the path 1 \u2192 3 \u2192 1 \u2192 1 \u2192 1 minimizes the sum.\n\nExample 2:\nInput: grid = [[1,2,3],[4,5,6]]\nOutput: 12\n\n\u00a0\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 200\n0 <= grid[i][j] <= 100\n\n"], "65. Valid Number": ["https://leetcode.com/problems/valid-number", "A valid number can be split up into these components (in order):\n\nA decimal number or an integer.\n(Optional) An 'e' or 'E', followed by an integer.\n\nA decimal number can be split up into these components (in order):\n\n(Optional) A sign character (either '+' or '-').\nOne of the following formats:\n\t\nOne or more digits, followed by a dot '.'.\nOne or more digits, followed by a dot '.', followed by one or more digits.\nA dot '.', followed by one or more digits.\n\n\n\nAn integer can be split up into these components (in order):\n\n(Optional) A sign character (either '+' or '-').\nOne or more digits.\n\nFor example, all the following are valid numbers: [\"2\", \"0089\", \"-0.1\", \"+3.14\", \"4.\", \"-.9\", \"2e10\", \"-90E3\", \"3e+7\", \"+6e-1\", \"53.5e93\", \"-123.456e789\"], while the following are not valid numbers: [\"abc\", \"1a\", \"1e\", \"e3\", \"99e2.5\", \"--6\", \"-+3\", \"95a54e53\"].\nGiven a string s, return true if s is a valid number.\n\u00a0\nExample 1:\nInput: s = \"0\"\nOutput: true\n\nExample 2:\nInput: s = \"e\"\nOutput: false\n\nExample 3:\nInput: s = \".\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 20\ns consists of only English letters (both uppercase and lowercase), digits (0-9), plus '+', minus '-', or dot '.'.\n\n"], "66. Plus One": ["https://leetcode.com/problems/plus-one", "You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.\nIncrement the large integer by one and return the resulting array of digits.\n\u00a0\nExample 1:\nInput: digits = [1,2,3]\nOutput: [1,2,4]\nExplanation: The array represents the integer 123.\nIncrementing by one gives 123 + 1 = 124.\nThus, the result should be [1,2,4].\n\nExample 2:\nInput: digits = [4,3,2,1]\nOutput: [4,3,2,2]\nExplanation: The array represents the integer 4321.\nIncrementing by one gives 4321 + 1 = 4322.\nThus, the result should be [4,3,2,2].\n\nExample 3:\nInput: digits = [9]\nOutput: [1,0]\nExplanation: The array represents the integer 9.\nIncrementing by one gives 9 + 1 = 10.\nThus, the result should be [1,0].\n\n\u00a0\nConstraints:\n\n1 <= digits.length <= 100\n0 <= digits[i] <= 9\ndigits does not contain any leading 0's.\n\n"], "67. Add Binary": ["https://leetcode.com/problems/add-binary", "Given two binary strings a and b, return their sum as a binary string.\n\u00a0\nExample 1:\nInput: a = \"11\", b = \"1\"\nOutput: \"100\"\nExample 2:\nInput: a = \"1010\", b = \"1011\"\nOutput: \"10101\"\n\n\u00a0\nConstraints:\n\n1 <= a.length, b.length <= 104\na and b consist\u00a0only of '0' or '1' characters.\nEach string does not contain leading zeros except for the zero itself.\n\n"], "68. Text Justification": ["https://leetcode.com/problems/text-justification", "Given an array of strings words and a width maxWidth, format the text such that each line has exactly maxWidth characters and is fully (left and right) justified.\nYou should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ' ' when necessary so that each line has exactly maxWidth characters.\nExtra spaces between words should be distributed as evenly as possible. If the number of spaces on a line does not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.\nFor the last line of text, it should be left-justified and no extra space is inserted between words.\nNote:\n\nA word is defined as a character sequence consisting of non-space characters only.\nEach word's length is guaranteed to be greater than 0 and not exceed maxWidth.\nThe input array words contains at least one word.\n\n\u00a0\nExample 1:\nInput: words = [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"], maxWidth = 16\nOutput:\n[\n\u00a0 \u00a0\"This \u00a0 \u00a0is \u00a0 \u00a0an\",\n\u00a0 \u00a0\"example \u00a0of text\",\n\u00a0 \u00a0\"justification. \u00a0\"\n]\nExample 2:\nInput: words = [\"What\",\"must\",\"be\",\"acknowledgment\",\"shall\",\"be\"], maxWidth = 16\nOutput:\n[\n\u00a0 \"What \u00a0 must \u00a0 be\",\n\u00a0 \"acknowledgment \u00a0\",\n\u00a0 \"shall be \u00a0 \u00a0 \u00a0 \u00a0\"\n]\nExplanation: Note that the last line is \"shall be    \" instead of \"shall     be\", because the last line must be left-justified instead of fully-justified.\nNote that the second line is also left-justified becase it contains only one word.\nExample 3:\nInput: words = [\"Science\",\"is\",\"what\",\"we\",\"understand\",\"well\",\"enough\",\"to\",\"explain\",\"to\",\"a\",\"computer.\",\"Art\",\"is\",\"everything\",\"else\",\"we\",\"do\"], maxWidth = 20\nOutput:\n[\n\u00a0 \"Science \u00a0is \u00a0what we\",\n  \"understand \u00a0 \u00a0 \u00a0well\",\n\u00a0 \"enough to explain to\",\n\u00a0 \"a \u00a0computer. \u00a0Art is\",\n\u00a0 \"everything \u00a0else \u00a0we\",\n\u00a0 \"do \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"\n]\n\u00a0\nConstraints:\n\n1 <= words.length <= 300\n1 <= words[i].length <= 20\nwords[i] consists of only English letters and symbols.\n1 <= maxWidth <= 100\nwords[i].length <= maxWidth\n\n"], "69. Sqrt(x)": ["https://leetcode.com/problems/sqrtx", "Given a non-negative integer x,\u00a0compute and return the square root of x.\nSince the return type\u00a0is an integer, the decimal digits are truncated, and only the integer part of the result\u00a0is returned.\nNote:\u00a0You are not allowed to use any built-in exponent function or operator, such as pow(x, 0.5) or\u00a0x ** 0.5.\n\u00a0\nExample 1:\nInput: x = 4\nOutput: 2\n\nExample 2:\nInput: x = 8\nOutput: 2\nExplanation: The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.\n\u00a0\nConstraints:\n\n0 <= x <= 231 - 1\n\n"], "70. Climbing Stairs": ["https://leetcode.com/problems/climbing-stairs", "You are climbing a staircase. It takes n steps to reach the top.\nEach time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\n\u00a0\nExample 1:\nInput: n = 2\nOutput: 2\nExplanation: There are two ways to climb to the top.\n1. 1 step + 1 step\n2. 2 steps\n\nExample 2:\nInput: n = 3\nOutput: 3\nExplanation: There are three ways to climb to the top.\n1. 1 step + 1 step + 1 step\n2. 1 step + 2 steps\n3. 2 steps + 1 step\n\n\u00a0\nConstraints:\n\n1 <= n <= 45\n\n"], "71. Simplify Path": ["https://leetcode.com/problems/simplify-path", "Given a string path, which is an absolute path (starting with a slash '/') to a file or directory in a Unix-style file system, convert it to the simplified canonical path.\nIn a Unix-style file system, a period '.' refers to the current directory, a double period '..' refers to the directory up a level, and any multiple consecutive slashes (i.e. '//') are treated as a single slash '/'. For this problem, any other format of periods such as '...' are treated as file/directory names.\nThe canonical path should have the following format:\n\nThe path starts with a single slash '/'.\nAny two directories are separated by a single slash '/'.\nThe path does not end with a trailing '/'.\nThe path only contains the directories on the path from the root directory to the target file or directory (i.e., no period '.' or double period '..')\n\nReturn the simplified canonical path.\n\u00a0\nExample 1:\nInput: path = \"/home/\"\nOutput: \"/home\"\nExplanation: Note that there is no trailing slash after the last directory name.\n\nExample 2:\nInput: path = \"/../\"\nOutput: \"/\"\nExplanation: Going one level up from the root directory is a no-op, as the root level is the highest level you can go.\n\nExample 3:\nInput: path = \"/home//foo/\"\nOutput: \"/home/foo\"\nExplanation: In the canonical path, multiple consecutive slashes are replaced by a single one.\n\n\u00a0\nConstraints:\n\n1 <= path.length <= 3000\npath consists of English letters, digits, period '.', slash '/' or '_'.\npath is a valid absolute Unix path.\n\n"], "72. Edit Distance": ["https://leetcode.com/problems/edit-distance", "Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.\nYou have the following three operations permitted on a word:\n\nInsert a character\nDelete a character\nReplace a character\n\n\u00a0\nExample 1:\nInput: word1 = \"horse\", word2 = \"ros\"\nOutput: 3\nExplanation: \nhorse -> rorse (replace 'h' with 'r')\nrorse -> rose (remove 'r')\nrose -> ros (remove 'e')\n\nExample 2:\nInput: word1 = \"intention\", word2 = \"execution\"\nOutput: 5\nExplanation: \nintention -> inention (remove 't')\ninention -> enention (replace 'i' with 'e')\nenention -> exention (replace 'n' with 'x')\nexention -> exection (replace 'n' with 'c')\nexection -> execution (insert 'u')\n\n\u00a0\nConstraints:\n\n0 <= word1.length, word2.length <= 500\nword1 and word2 consist of lowercase English letters.\n\n"], "73. Set Matrix Zeroes": ["https://leetcode.com/problems/set-matrix-zeroes", "Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.\nYou must do it in place.\n\u00a0\nExample 1:\n\nInput: matrix = [[1,1,1],[1,0,1],[1,1,1]]\nOutput: [[1,0,1],[0,0,0],[1,0,1]]\n\nExample 2:\n\nInput: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\nOutput: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n\n\u00a0\nConstraints:\n\nm == matrix.length\nn == matrix[0].length\n1 <= m, n <= 200\n-231 <= matrix[i][j] <= 231 - 1\n\n\u00a0\nFollow up:\n\nA straightforward solution using O(mn) space is probably a bad idea.\nA simple improvement uses O(m + n) space, but still not the best solution.\nCould you devise a constant space solution?\n\n"], "74. Search a 2D Matrix": ["https://leetcode.com/problems/search-a-2d-matrix", "Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:\n\nIntegers in each row are sorted from left to right.\nThe first integer of each row is greater than the last integer of the previous row.\n\n\u00a0\nExample 1:\n\nInput: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\nOutput: true\n\nExample 2:\n\nInput: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\nOutput: false\n\n\u00a0\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 100\n-104 <= matrix[i][j], target <= 104\n\n"], "75. Sort Colors": ["https://leetcode.com/problems/sort-colors", "Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.\nWe will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.\nYou must solve this problem without using the library's sort function.\n\u00a0\nExample 1:\nInput: nums = [2,0,2,1,1,0]\nOutput: [0,0,1,1,2,2]\n\nExample 2:\nInput: nums = [2,0,1]\nOutput: [0,1,2]\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= n <= 300\nnums[i] is either 0, 1, or 2.\n\n\u00a0\nFollow up:\u00a0Could you come up with a one-pass algorithm using only\u00a0constant extra space?\n"], "76. Minimum Window Substring": ["https://leetcode.com/problems/minimum-window-substring", "Given two strings s and t of lengths m and n respectively, return the minimum window substring of s such that every character in t (including duplicates) is included in the window. If there is no such substring, return the empty string \"\".\nThe testcases will be generated such that the answer is unique.\nA substring is a contiguous sequence of characters within the string.\n\u00a0\nExample 1:\nInput: s = \"ADOBECODEBANC\", t = \"ABC\"\nOutput: \"BANC\"\nExplanation: The minimum window substring \"BANC\" includes 'A', 'B', and 'C' from string t.\n\nExample 2:\nInput: s = \"a\", t = \"a\"\nOutput: \"a\"\nExplanation: The entire string s is the minimum window.\n\nExample 3:\nInput: s = \"a\", t = \"aa\"\nOutput: \"\"\nExplanation: Both 'a's from t must be included in the window.\nSince the largest window of s only has one 'a', return empty string.\n\n\u00a0\nConstraints:\n\nm == s.length\nn == t.length\n1 <= m, n\u00a0<= 105\ns and t consist of uppercase and lowercase English letters.\n\n\u00a0\nFollow up: Could you find an algorithm that runs in O(m + n) time?"], "77. Combinations": ["https://leetcode.com/problems/combinations", "Given two integers n and k, return all possible combinations of k numbers out of the range [1, n].\nYou may return the answer in any order.\n\u00a0\nExample 1:\nInput: n = 4, k = 2\nOutput:\n[\n  [2,4],\n  [3,4],\n  [2,3],\n  [1,2],\n  [1,3],\n  [1,4],\n]\n\nExample 2:\nInput: n = 1, k = 1\nOutput: [[1]]\n\n\u00a0\nConstraints:\n\n1 <= n <= 20\n1 <= k <= n\n\n"], "78. Subsets": ["https://leetcode.com/problems/subsets", "Given an integer array nums of unique elements, return all possible subsets (the power set).\nThe solution set must not contain duplicate subsets. Return the solution in any order.\n\u00a0\nExample 1:\nInput: nums = [1,2,3]\nOutput: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n\nExample 2:\nInput: nums = [0]\nOutput: [[],[0]]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 10\n-10 <= nums[i] <= 10\nAll the numbers of\u00a0nums are unique.\n\n"], "79. Word Search": ["https://leetcode.com/problems/word-search", "Given an m x n grid of characters board and a string word, return true if word exists in the grid.\nThe word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.\n\u00a0\nExample 1:\n\nInput: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\nOutput: true\n\nExample 2:\n\nInput: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"\nOutput: true\n\nExample 3:\n\nInput: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\"\nOutput: false\n\n\u00a0\nConstraints:\n\nm == board.length\nn = board[i].length\n1 <= m, n <= 6\n1 <= word.length <= 15\nboard and word consists of only lowercase and uppercase English letters.\n\n\u00a0\nFollow up: Could you use search pruning to make your solution faster with a larger board?\n"], "80. Remove Duplicates from Sorted Array II": ["https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii", "Given an integer array nums sorted in non-decreasing order, remove some duplicates in-place such that each unique element appears at most twice. The relative order of the elements should be kept the same.\nSince it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums\u00a0should hold the final result. It does not matter what you leave beyond the first\u00a0k\u00a0elements.\nReturn k after placing the final result in the first k slots of nums.\nDo not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\nCustom Judge:\nThe judge will test your solution with the following code:\nint[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\n\nint k = removeDuplicates(nums); // Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i < k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n\nIf all assertions pass, then your solution will be accepted.\n\u00a0\nExample 1:\nInput: nums = [1,1,1,2,2,3]\nOutput: 5, nums = [1,1,2,2,3,_]\nExplanation: Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\nExample 2:\nInput: nums = [0,0,1,1,1,1,2,3,3]\nOutput: 7, nums = [0,0,1,1,2,3,3,_,_]\nExplanation: Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 3 * 104\n-104 <= nums[i] <= 104\nnums is sorted in non-decreasing order.\n\n"], "81. Search in Rotated Sorted Array II": ["https://leetcode.com/problems/search-in-rotated-sorted-array-ii", "There is an integer array nums sorted in non-decreasing order (not necessarily with distinct values).\nBefore being passed to your function, nums is rotated at an unknown pivot index k (0 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,4,4,5,6,6,7] might be rotated at pivot index 5 and become [4,5,6,6,7,0,1,2,4,4].\nGiven the array nums after the rotation and an integer target, return true if target is in nums, or false if it is not in nums.\nYou must decrease the overall operation steps as much as possible.\n\u00a0\nExample 1:\nInput: nums = [2,5,6,0,0,1,2], target = 0\nOutput: true\nExample 2:\nInput: nums = [2,5,6,0,0,1,2], target = 3\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5000\n-104 <= nums[i] <= 104\nnums is guaranteed to be rotated at some pivot.\n-104 <= target <= 104\n\n\u00a0\nFollow up: This problem is similar to\u00a0Search in Rotated Sorted Array, but\u00a0nums may contain duplicates. Would this affect the runtime complexity? How and why?\n"], "82. Remove Duplicates from Sorted List II": ["https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii", "Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well.\n\u00a0\nExample 1:\n\nInput: head = [1,2,3,3,4,4,5]\nOutput: [1,2,5]\n\nExample 2:\n\nInput: head = [1,1,1,2,3]\nOutput: [2,3]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is in the range [0, 300].\n-100 <= Node.val <= 100\nThe list is guaranteed to be sorted in ascending order.\n\n"], "83. Remove Duplicates from Sorted List": ["https://leetcode.com/problems/remove-duplicates-from-sorted-list", "Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.\n\u00a0\nExample 1:\n\nInput: head = [1,1,2]\nOutput: [1,2]\n\nExample 2:\n\nInput: head = [1,1,2,3,3]\nOutput: [1,2,3]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is in the range [0, 300].\n-100 <= Node.val <= 100\nThe list is guaranteed to be sorted in ascending order.\n\n"], "84. Largest Rectangle in Histogram": ["https://leetcode.com/problems/largest-rectangle-in-histogram", "Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.\n\u00a0\nExample 1:\n\nInput: heights = [2,1,5,6,2,3]\nOutput: 10\nExplanation: The above is a histogram where width of each bar is 1.\nThe largest rectangle is shown in the red area, which has an area = 10 units.\n\nExample 2:\n\nInput: heights = [2,4]\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= heights.length <= 105\n0 <= heights[i] <= 104\n\n"], "85. Maximal Rectangle": ["https://leetcode.com/problems/maximal-rectangle", "Given a rows x cols\u00a0binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\n\u00a0\nExample 1:\n\nInput: matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]\nOutput: 6\nExplanation: The maximal rectangle is shown in the above picture.\n\nExample 2:\nInput: matrix = [[\"0\"]]\nOutput: 0\n\nExample 3:\nInput: matrix = [[\"1\"]]\nOutput: 1\n\n\u00a0\nConstraints:\n\nrows == matrix.length\ncols == matrix[i].length\n1 <= row, cols <= 200\nmatrix[i][j] is '0' or '1'.\n\n"], "86. Partition List": ["https://leetcode.com/problems/partition-list", "Given the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.\nYou should preserve the original relative order of the nodes in each of the two partitions.\n\u00a0\nExample 1:\n\nInput: head = [1,4,3,2,5,2], x = 3\nOutput: [1,2,2,4,3,5]\n\nExample 2:\nInput: head = [2,1], x = 2\nOutput: [1,2]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is in the range [0, 200].\n-100 <= Node.val <= 100\n-200 <= x <= 200\n\n"], "87. Scramble String": ["https://leetcode.com/problems/scramble-string", "We can scramble a string s to get a string t using the following algorithm:\n\nIf the length of the string is 1, stop.\nIf the length of the string is > 1, do the following:\n\t\nSplit the string into two non-empty substrings at a random index, i.e., if the string is s, divide it to x and y where s = x + y.\nRandomly\u00a0decide to swap the two substrings or to keep them in the same order. i.e., after this step, s may become s = x + y or s = y + x.\nApply step 1 recursively on each of the two substrings x and y.\n\n\n\nGiven two strings s1 and s2 of the same length, return true if s2 is a scrambled string of s1, otherwise, return false.\n\u00a0\nExample 1:\nInput: s1 = \"great\", s2 = \"rgeat\"\nOutput: true\nExplanation: One possible scenario applied on s1 is:\n\"great\" --> \"gr/eat\" // divide at random index.\n\"gr/eat\" --> \"gr/eat\" // random decision is not to swap the two substrings and keep them in order.\n\"gr/eat\" --> \"g/r / e/at\" // apply the same algorithm recursively on both substrings. divide at random index each of them.\n\"g/r / e/at\" --> \"r/g / e/at\" // random decision was to swap the first substring and to keep the second substring in the same order.\n\"r/g / e/at\" --> \"r/g / e/ a/t\" // again apply the algorithm recursively, divide \"at\" to \"a/t\".\n\"r/g / e/ a/t\" --> \"r/g / e/ a/t\" // random decision is to keep both substrings in the same order.\nThe algorithm stops now, and the result string is \"rgeat\" which is s2.\nAs one possible scenario led s1 to be scrambled to s2, we return true.\n\nExample 2:\nInput: s1 = \"abcde\", s2 = \"caebd\"\nOutput: false\n\nExample 3:\nInput: s1 = \"a\", s2 = \"a\"\nOutput: true\n\n\u00a0\nConstraints:\n\ns1.length == s2.length\n1 <= s1.length <= 30\ns1 and s2 consist of lowercase English letters.\n\n"], "88. Merge Sorted Array": ["https://leetcode.com/problems/merge-sorted-array", "You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.\nMerge nums1 and nums2 into a single array sorted in non-decreasing order.\nThe final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.\n\u00a0\nExample 1:\nInput: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3\nOutput: [1,2,2,3,5,6]\nExplanation: The arrays we are merging are [1,2,3] and [2,5,6].\nThe result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.\n\nExample 2:\nInput: nums1 = [1], m = 1, nums2 = [], n = 0\nOutput: [1]\nExplanation: The arrays we are merging are [1] and [].\nThe result of the merge is [1].\n\nExample 3:\nInput: nums1 = [0], m = 0, nums2 = [1], n = 1\nOutput: [1]\nExplanation: The arrays we are merging are [] and [1].\nThe result of the merge is [1].\nNote that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.\n\n\u00a0\nConstraints:\n\nnums1.length == m + n\nnums2.length == n\n0 <= m, n <= 200\n1 <= m + n <= 200\n-109 <= nums1[i], nums2[j] <= 109\n\n\u00a0\nFollow up: Can you come up with an algorithm that runs in O(m + n) time?\n"], "89. Gray Code": ["https://leetcode.com/problems/gray-code", "An n-bit gray code sequence is a sequence of 2n integers where:\n\nEvery integer is in the inclusive range [0, 2n - 1],\nThe first integer is 0,\nAn integer appears no more than once in the sequence,\nThe binary representation of every pair of adjacent integers differs by exactly one bit, and\nThe binary representation of the first and last integers differs by exactly one bit.\n\nGiven an integer n, return any valid n-bit gray code sequence.\n\u00a0\nExample 1:\nInput: n = 2\nOutput: [0,1,3,2]\nExplanation:\nThe binary representation of [0,1,3,2] is [00,01,11,10].\n- 00 and 01 differ by one bit\n- 01 and 11 differ by one bit\n- 11 and 10 differ by one bit\n- 10 and 00 differ by one bit\n[0,2,3,1] is also a valid gray code sequence, whose binary representation is [00,10,11,01].\n- 00 and 10 differ by one bit\n- 10 and 11 differ by one bit\n- 11 and 01 differ by one bit\n- 01 and 00 differ by one bit\n\nExample 2:\nInput: n = 1\nOutput: [0,1]\n\n\u00a0\nConstraints:\n\n1 <= n <= 16\n\n"], "90. Subsets II": ["https://leetcode.com/problems/subsets-ii", "Given an integer array nums that may contain duplicates, return all possible subsets (the power set).\nThe solution set must not contain duplicate subsets. Return the solution in any order.\n\u00a0\nExample 1:\nInput: nums = [1,2,2]\nOutput: [[],[1],[1,2],[1,2,2],[2],[2,2]]\nExample 2:\nInput: nums = [0]\nOutput: [[],[0]]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 10\n-10 <= nums[i] <= 10\n\n"], "91. Decode Ways": ["https://leetcode.com/problems/decode-ways", "A message containing letters from A-Z can be encoded into numbers using the following mapping:\n'A' -> \"1\"\n'B' -> \"2\"\n...\n'Z' -> \"26\"\n\nTo decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, \"11106\" can be mapped into:\n\n\"AAJF\" with the grouping (1 1 10 6)\n\"KJF\" with the grouping (11 10 6)\n\nNote that the grouping (1 11 06) is invalid because \"06\" cannot be mapped into 'F' since \"6\" is different from \"06\".\nGiven a string s containing only digits, return the number of ways to decode it.\nThe test cases are generated so that the answer fits in a 32-bit integer.\n\u00a0\nExample 1:\nInput: s = \"12\"\nOutput: 2\nExplanation: \"12\" could be decoded as \"AB\" (1 2) or \"L\" (12).\n\nExample 2:\nInput: s = \"226\"\nOutput: 3\nExplanation: \"226\" could be decoded as \"BZ\" (2 26), \"VF\" (22 6), or \"BBF\" (2 2 6).\n\nExample 3:\nInput: s = \"06\"\nOutput: 0\nExplanation: \"06\" cannot be mapped to \"F\" because of the leading zero (\"6\" is different from \"06\").\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 100\ns contains only digits and may contain leading zero(s).\n\n"], "92. Reverse Linked List II": ["https://leetcode.com/problems/reverse-linked-list-ii", "Given the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list.\n\u00a0\nExample 1:\n\nInput: head = [1,2,3,4,5], left = 2, right = 4\nOutput: [1,4,3,2,5]\n\nExample 2:\nInput: head = [5], left = 1, right = 1\nOutput: [5]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is n.\n1 <= n <= 500\n-500 <= Node.val <= 500\n1 <= left <= right <= n\n\n\u00a0\nFollow up: Could you do it in one pass?"], "93. Restore IP Addresses": ["https://leetcode.com/problems/restore-ip-addresses", "A valid IP address consists of exactly four integers separated by single dots. Each integer is between 0 and 255 (inclusive) and cannot have leading zeros.\n\nFor example, \"0.1.2.201\" and \"192.168.1.1\" are valid IP addresses, but \"0.011.255.245\", \"192.168.1.312\" and \"192.168@1.1\" are invalid IP addresses.\n\nGiven a string s containing only digits, return all possible valid IP addresses that can be formed by inserting dots into s. You are not allowed to reorder or remove any digits in s. You may return the valid IP addresses in any order.\n\u00a0\nExample 1:\nInput: s = \"25525511135\"\nOutput: [\"255.255.11.135\",\"255.255.111.35\"]\n\nExample 2:\nInput: s = \"0000\"\nOutput: [\"0.0.0.0\"]\n\nExample 3:\nInput: s = \"101023\"\nOutput: [\"1.0.10.23\",\"1.0.102.3\",\"10.1.0.23\",\"10.10.2.3\",\"101.0.2.3\"]\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 20\ns consists of digits only.\n\n"], "94. Binary Tree Inorder Traversal": ["https://leetcode.com/problems/binary-tree-inorder-traversal", "Given the root of a binary tree, return the inorder traversal of its nodes' values.\n\u00a0\nExample 1:\n\nInput: root = [1,null,2,3]\nOutput: [1,3,2]\n\nExample 2:\nInput: root = []\nOutput: []\n\nExample 3:\nInput: root = [1]\nOutput: [1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 100].\n-100 <= Node.val <= 100\n\n\u00a0\nFollow up: Recursive solution is trivial, could you do it iteratively?"], "95. Unique Binary Search Trees II": ["https://leetcode.com/problems/unique-binary-search-trees-ii", "Given an integer n, return all the structurally unique BST's (binary search trees), which has exactly n nodes of unique values from 1 to n. Return the answer in any order.\n\u00a0\nExample 1:\n\nInput: n = 3\nOutput: [[1,null,2,null,3],[1,null,3,2],[2,1,3],[3,1,null,null,2],[3,2,null,1]]\n\nExample 2:\nInput: n = 1\nOutput: [[1]]\n\n\u00a0\nConstraints:\n\n1 <= n <= 8\n\n"], "96. Unique Binary Search Trees": ["https://leetcode.com/problems/unique-binary-search-trees", "Given an integer n, return the number of structurally unique BST's (binary search trees) which has exactly n nodes of unique values from 1 to n.\n\u00a0\nExample 1:\n\nInput: n = 3\nOutput: 5\n\nExample 2:\nInput: n = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= n <= 19\n\n"], "97. Interleaving String": ["https://leetcode.com/problems/interleaving-string", "Given strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2.\nAn interleaving of two strings s and t is a configuration where they are divided into non-empty substrings such that:\n\ns = s1 + s2 + ... + sn\nt = t1 + t2 + ... + tm\n|n - m| <= 1\nThe interleaving is s1 + t1 + s2 + t2 + s3 + t3 + ... or t1 + s1 + t2 + s2 + t3 + s3 + ...\n\nNote: a + b is the concatenation of strings a and b.\n\u00a0\nExample 1:\n\nInput: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbcbcac\"\nOutput: true\n\nExample 2:\nInput: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbbaccc\"\nOutput: false\n\nExample 3:\nInput: s1 = \"\", s2 = \"\", s3 = \"\"\nOutput: true\n\n\u00a0\nConstraints:\n\n0 <= s1.length, s2.length <= 100\n0 <= s3.length <= 200\ns1, s2, and s3 consist of lowercase English letters.\n\n\u00a0\nFollow up: Could you solve it using only O(s2.length) additional memory space?\n"], "98. Validate Binary Search Tree": ["https://leetcode.com/problems/validate-binary-search-tree", "Given the root of a binary tree, determine if it is a valid binary search tree (BST).\nA valid BST is defined as follows:\n\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\n\u00a0\nExample 1:\n\nInput: root = [2,1,3]\nOutput: true\n\nExample 2:\n\nInput: root = [5,1,4,null,null,3,6]\nOutput: false\nExplanation: The root node's value is 5 but its right child's value is 4.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-231 <= Node.val <= 231 - 1\n\n"], "99. Recover Binary Search Tree": ["https://leetcode.com/problems/recover-binary-search-tree", "You are given the root of a binary search tree (BST), where the values of exactly two nodes of the tree were swapped by mistake. Recover the tree without changing its structure.\n\u00a0\nExample 1:\n\nInput: root = [1,3,null,null,2]\nOutput: [3,1,null,null,2]\nExplanation: 3 cannot be a left child of 1 because 3 > 1. Swapping 1 and 3 makes the BST valid.\n\nExample 2:\n\nInput: root = [3,1,4,null,null,2]\nOutput: [2,1,4,null,null,3]\nExplanation: 2 cannot be in the right subtree of 3 because 2 < 3. Swapping 2 and 3 makes the BST valid.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [2, 1000].\n-231 <= Node.val <= 231 - 1\n\n\u00a0\nFollow up: A solution using O(n) space is pretty straight-forward. Could you devise a constant O(1) space solution?"], "100. Same Tree": ["https://leetcode.com/problems/same-tree", "Given the roots of two binary trees p and q, write a function to check if they are the same or not.\nTwo binary trees are considered the same if they are structurally identical, and the nodes have the same value.\n\u00a0\nExample 1:\n\nInput: p = [1,2,3], q = [1,2,3]\nOutput: true\n\nExample 2:\n\nInput: p = [1,2], q = [1,null,2]\nOutput: false\n\nExample 3:\n\nInput: p = [1,2,1], q = [1,1,2]\nOutput: false\n\n\u00a0\nConstraints:\n\nThe number of nodes in both trees is in the range [0, 100].\n-104 <= Node.val <= 104\n\n"], "257. Binary Tree Paths": ["https://leetcode.com/problems/binary-tree-paths", "Given the root of a binary tree, return all root-to-leaf paths in any order.\nA leaf is a node with no children.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,null,5]\nOutput: [\"1->2->5\",\"1->3\"]\n\nExample 2:\nInput: root = [1]\nOutput: [\"1\"]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 100].\n-100 <= Node.val <= 100\n\n"], "258. Add Digits": ["https://leetcode.com/problems/add-digits", "Given an integer num, repeatedly add all its digits until the result has only one digit, and return it.\n\u00a0\nExample 1:\nInput: num = 38\nOutput: 2\nExplanation: The process is\n38 --> 3 + 8 --> 11\n11 --> 1 + 1 --> 2 \nSince 2 has only one digit, return it.\n\nExample 2:\nInput: num = 0\nOutput: 0\n\n\u00a0\nConstraints:\n\n0 <= num <= 231 - 1\n\n\u00a0\nFollow up: Could you do it without any loop/recursion in O(1) runtime?\n"], "260. Single Number III": ["https://leetcode.com/problems/single-number-iii", "Given an integer array nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in any order.\nYou must write an\u00a0algorithm that runs in linear runtime complexity and uses\u00a0only constant extra space.\n\u00a0\nExample 1:\nInput: nums = [1,2,1,3,2,5]\nOutput: [3,5]\nExplanation:  [5, 3] is also a valid answer.\n\nExample 2:\nInput: nums = [-1,0]\nOutput: [-1,0]\n\nExample 3:\nInput: nums = [0,1]\nOutput: [1,0]\n\n\u00a0\nConstraints:\n\n2 <= nums.length <= 3 * 104\n-231 <= nums[i] <= 231 - 1\nEach integer in nums will appear twice, only two integers will appear once.\n\n"], "262. Trips and Users": ["https://leetcode.com/problems/trips-and-users", "SQL SchemaTable: Trips\n+-------------+----------+\n| Column Name | Type     |\n+-------------+----------+\n| id          | int      |\n| client_id   | int      |\n| driver_id   | int      |\n| city_id     | int      |\n| status      | enum     |\n| request_at  | date     |     \n+-------------+----------+\nid is the primary key for this table.\nThe table holds all taxi trips. Each trip has a unique id, while client_id and driver_id are foreign keys to the users_id at the Users table.\nStatus is an ENUM type of ('completed', 'cancelled_by_driver', 'cancelled_by_client').\n\n\u00a0\nTable: Users\n+-------------+----------+\n| Column Name | Type     |\n+-------------+----------+\n| users_id    | int      |\n| banned      | enum     |\n| role        | enum     |\n+-------------+----------+\nusers_id is the primary key for this table.\nThe table holds all users. Each user has a unique users_id, and role is an ENUM type of ('client', 'driver', 'partner').\nbanned is an ENUM type of ('Yes', 'No').\n\n\u00a0\nThe cancellation rate is computed by dividing the number of canceled (by client or driver) requests with unbanned users by the total number of requests with unbanned users on that day.\nWrite a SQL query to find the cancellation rate of requests with unbanned users (both client and driver must not be banned) each day between \"2013-10-01\" and \"2013-10-03\". Round Cancellation Rate to two decimal points.\nReturn the result table in any order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nTrips table:\n+----+-----------+-----------+---------+---------------------+------------+\n| id | client_id | driver_id | city_id | status              | request_at |\n+----+-----------+-----------+---------+---------------------+------------+\n| 1  | 1         | 10        | 1       | completed           | 2013-10-01 |\n| 2  | 2         | 11        | 1       | cancelled_by_driver | 2013-10-01 |\n| 3  | 3         | 12        | 6       | completed           | 2013-10-01 |\n| 4  | 4         | 13        | 6       | cancelled_by_client | 2013-10-01 |\n| 5  | 1         | 10        | 1       | completed           | 2013-10-02 |\n| 6  | 2         | 11        | 6       | completed           | 2013-10-02 |\n| 7  | 3         | 12        | 6       | completed           | 2013-10-02 |\n| 8  | 2         | 12        | 12      | completed           | 2013-10-03 |\n| 9  | 3         | 10        | 12      | completed           | 2013-10-03 |\n| 10 | 4         | 13        | 12      | cancelled_by_driver | 2013-10-03 |\n+----+-----------+-----------+---------+---------------------+------------+\nUsers table:\n+----------+--------+--------+\n| users_id | banned | role   |\n+----------+--------+--------+\n| 1        | No     | client |\n| 2        | Yes    | client |\n| 3        | No     | client |\n| 4        | No     | client |\n| 10       | No     | driver |\n| 11       | No     | driver |\n| 12       | No     | driver |\n| 13       | No     | driver |\n+----------+--------+--------+\nOutput: \n+------------+-------------------+\n| Day        | Cancellation Rate |\n+------------+-------------------+\n| 2013-10-01 | 0.33              |\n| 2013-10-02 | 0.00              |\n| 2013-10-03 | 0.50              |\n+------------+-------------------+\nExplanation: \nOn 2013-10-01:\n  - There were 4 requests in total, 2 of which were canceled.\n  - However, the request with Id=2 was made by a banned client (User_Id=2), so it is ignored in the calculation.\n  - Hence there are 3 unbanned requests in total, 1 of which was canceled.\n  - The Cancellation Rate is (1 / 3) = 0.33\nOn 2013-10-02:\n  - There were 3 requests in total, 0 of which were canceled.\n  - The request with Id=6 was made by a banned client, so it is ignored.\n  - Hence there are 2 unbanned requests in total, 0 of which were canceled.\n  - The Cancellation Rate is (0 / 2) = 0.00\nOn 2013-10-03:\n  - There were 3 requests in total, 1 of which was canceled.\n  - The request with Id=8 was made by a banned client, so it is ignored.\n  - Hence there are 2 unbanned request in total, 1 of which were canceled.\n  - The Cancellation Rate is (1 / 2) = 0.50\n\n"], "263. Ugly Number": ["https://leetcode.com/problems/ugly-number", "An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.\nGiven an integer n, return true if n is an ugly number.\n\u00a0\nExample 1:\nInput: n = 6\nOutput: true\nExplanation: 6 = 2 \u00d7 3\n\nExample 2:\nInput: n = 1\nOutput: true\nExplanation: 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.\n\nExample 3:\nInput: n = 14\nOutput: false\nExplanation: 14 is not ugly since it includes the prime factor 7.\n\n\u00a0\nConstraints:\n\n-231 <= n <= 231 - 1\n\n"], "264. Ugly Number II": ["https://leetcode.com/problems/ugly-number-ii", "An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.\nGiven an integer n, return the nth ugly number.\n\u00a0\nExample 1:\nInput: n = 10\nOutput: 12\nExplanation: [1, 2, 3, 4, 5, 6, 8, 9, 10, 12] is the sequence of the first 10 ugly numbers.\n\nExample 2:\nInput: n = 1\nOutput: 1\nExplanation: 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.\n\n\u00a0\nConstraints:\n\n1 <= n <= 1690\n\n"], "268. Missing Number": ["https://leetcode.com/problems/missing-number", "Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.\n\u00a0\nExample 1:\nInput: nums = [3,0,1]\nOutput: 2\nExplanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.\n\nExample 2:\nInput: nums = [0,1]\nOutput: 2\nExplanation: n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.\n\nExample 3:\nInput: nums = [9,6,4,2,3,5,7,0,1]\nOutput: 8\nExplanation: n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= n <= 104\n0 <= nums[i] <= n\nAll the numbers of nums are unique.\n\n\u00a0\nFollow up: Could you implement a solution using only O(1) extra space complexity and O(n) runtime complexity?\n"], "273. Integer to English Words": ["https://leetcode.com/problems/integer-to-english-words", "Convert a non-negative integer num to its English words representation.\n\u00a0\nExample 1:\nInput: num = 123\nOutput: \"One Hundred Twenty Three\"\n\nExample 2:\nInput: num = 12345\nOutput: \"Twelve Thousand Three Hundred Forty Five\"\n\nExample 3:\nInput: num = 1234567\nOutput: \"One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven\"\n\n\u00a0\nConstraints:\n\n0 <= num <= 231 - 1\n\n"], "274. H-Index": ["https://leetcode.com/problems/h-index", "Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return compute the researcher's h-index.\nAccording to the definition of h-index on Wikipedia: A scientist has an index h if h of their n papers have at least h citations each, and the other n \u2212 h papers have no more than h citations each.\nIf there are several possible values for h, the maximum one is taken as the h-index.\n\u00a0\nExample 1:\nInput: citations = [3,0,6,1,5]\nOutput: 3\nExplanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.\nSince the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.\n\nExample 2:\nInput: citations = [1,3,1]\nOutput: 1\n\n\u00a0\nConstraints:\n\nn == citations.length\n1 <= n <= 5000\n0 <= citations[i] <= 1000\n\n"], "275. H-Index II": ["https://leetcode.com/problems/h-index-ii", "Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper and citations\u00a0is sorted in an ascending order, return compute the researcher's h-index.\nAccording to the definition of h-index on Wikipedia: A scientist has an index h if h of their n papers have at least h citations each, and the other n \u2212 h papers have no more than h citations each.\nIf there are several possible values for h, the maximum one is taken as the h-index.\nYou must write an algorithm that runs in logarithmic time.\n\u00a0\nExample 1:\nInput: citations = [0,1,3,5,6]\nOutput: 3\nExplanation: [0,1,3,5,6] means the researcher has 5 papers in total and each of them had received 0, 1, 3, 5, 6 citations respectively.\nSince the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.\n\nExample 2:\nInput: citations = [1,2,100]\nOutput: 2\n\n\u00a0\nConstraints:\n\nn == citations.length\n1 <= n <= 105\n0 <= citations[i] <= 1000\ncitations is sorted in ascending order.\n\n"], "278. First Bad Version": ["https://leetcode.com/problems/first-bad-version", "You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.\nSuppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad.\nYou are given an API bool isBadVersion(version) which returns whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\n\u00a0\nExample 1:\nInput: n = 5, bad = 4\nOutput: 4\nExplanation:\ncall isBadVersion(3) -> false\ncall isBadVersion(5)\u00a0-> true\ncall isBadVersion(4)\u00a0-> true\nThen 4 is the first bad version.\n\nExample 2:\nInput: n = 1, bad = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= bad <= n <= 231 - 1\n\n"], "279. Perfect Squares": ["https://leetcode.com/problems/perfect-squares", "Given an integer n, return the least number of perfect square numbers that sum to n.\nA perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are not.\n\u00a0\nExample 1:\nInput: n = 12\nOutput: 3\nExplanation: 12 = 4 + 4 + 4.\n\nExample 2:\nInput: n = 13\nOutput: 2\nExplanation: 13 = 4 + 9.\n\n\u00a0\nConstraints:\n\n1 <= n <= 104\n\n"], "282. Expression Add Operators": ["https://leetcode.com/problems/expression-add-operators", "Given a string num that contains only digits and an integer target, return all possibilities to insert the binary operators '+', '-', and/or '*' between the digits of num so that the resultant expression evaluates to the target value.\nNote that operands in the returned expressions should not contain leading zeros.\n\u00a0\nExample 1:\nInput: num = \"123\", target = 6\nOutput: [\"1*2*3\",\"1+2+3\"]\nExplanation: Both \"1*2*3\" and \"1+2+3\" evaluate to 6.\n\nExample 2:\nInput: num = \"232\", target = 8\nOutput: [\"2*3+2\",\"2+3*2\"]\nExplanation: Both \"2*3+2\" and \"2+3*2\" evaluate to 8.\n\nExample 3:\nInput: num = \"3456237490\", target = 9191\nOutput: []\nExplanation: There are no expressions that can be created from \"3456237490\" to evaluate to 9191.\n\n\u00a0\nConstraints:\n\n1 <= num.length <= 10\nnum consists of only digits.\n-231 <= target <= 231 - 1\n\n"], "283. Move Zeroes": ["https://leetcode.com/problems/move-zeroes", "Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.\nNote that you must do this in-place without making a copy of the array.\n\u00a0\nExample 1:\nInput: nums = [0,1,0,3,12]\nOutput: [1,3,12,0,0]\nExample 2:\nInput: nums = [0]\nOutput: [0]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-231 <= nums[i] <= 231 - 1\n\n\u00a0\nFollow up: Could you minimize the total number of operations done?"], "284. Peeking Iterator": ["https://leetcode.com/problems/peeking-iterator", "Design an iterator that supports the peek operation on an existing iterator in addition to the hasNext and the next operations.\nImplement the PeekingIterator class:\n\nPeekingIterator(Iterator<int> nums) Initializes the object with the given integer iterator iterator.\nint next() Returns the next element in the array and moves the pointer to the next element.\nboolean hasNext() Returns true if there are still elements in the array.\nint peek() Returns the next element in the array without moving the pointer.\n\nNote: Each language may have a different implementation of the constructor and Iterator, but they all support the int next() and boolean hasNext() functions.\n\u00a0\nExample 1:\nInput\n[\"PeekingIterator\", \"next\", \"peek\", \"next\", \"next\", \"hasNext\"]\n[[[1, 2, 3]], [], [], [], [], []]\nOutput\n[null, 1, 2, 2, 3, false]\n\nExplanation\nPeekingIterator peekingIterator = new PeekingIterator([1, 2, 3]); // [1,2,3]\npeekingIterator.next();    // return 1, the pointer moves to the next element [1,2,3].\npeekingIterator.peek();    // return 2, the pointer does not move [1,2,3].\npeekingIterator.next();    // return 2, the pointer moves to the next element [1,2,3]\npeekingIterator.next();    // return 3, the pointer moves to the next element [1,2,3]\npeekingIterator.hasNext(); // return False\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 1000\n1 <= nums[i] <= 1000\nAll the calls to next and peek are valid.\nAt most 1000 calls will be made to next, hasNext, and peek.\n\n\u00a0\nFollow up: How would you extend your design to be generic and work with all types, not just integer?"], "287. Find the Duplicate Number": ["https://leetcode.com/problems/find-the-duplicate-number", "Given an array of integers nums containing\u00a0n + 1 integers where each integer is in the range [1, n] inclusive.\nThere is only one repeated number in nums, return this\u00a0repeated\u00a0number.\nYou must solve the problem without modifying the array nums\u00a0and uses only constant extra space.\n\u00a0\nExample 1:\nInput: nums = [1,3,4,2,2]\nOutput: 2\n\nExample 2:\nInput: nums = [3,1,3,4,2]\nOutput: 3\n\n\u00a0\nConstraints:\n\n1 <= n <= 105\nnums.length == n + 1\n1 <= nums[i] <= n\nAll the integers in nums appear only once except for precisely one integer which appears two or more times.\n\n\u00a0\nFollow up:\n\nHow can we prove that at least one duplicate number must exist in nums?\nCan you solve the problem in linear runtime complexity?\n\n"], "289. Game of Life": ["https://leetcode.com/problems/game-of-life", "According to\u00a0Wikipedia's article: \"The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\"\nThe board is made up of an m x n grid of cells, where each cell has an initial state: live (represented by a 1) or dead (represented by a 0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):\n\nAny live cell with fewer than two live neighbors dies as if caused by under-population.\nAny live cell with two or three live neighbors lives on to the next generation.\nAny live cell with more than three live neighbors dies, as if by over-population.\nAny dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n\nThe next state is created by applying the above rules simultaneously to every cell in the current state, where births and deaths occur simultaneously. Given the current state of the m x n grid board, return the next state.\n\u00a0\nExample 1:\n\nInput: board = [[0,1,0],[0,0,1],[1,1,1],[0,0,0]]\nOutput: [[0,0,0],[1,0,1],[0,1,1],[0,1,0]]\n\nExample 2:\n\nInput: board = [[1,1],[1,0]]\nOutput: [[1,1],[1,1]]\n\n\u00a0\nConstraints:\n\nm == board.length\nn == board[i].length\n1 <= m, n <= 25\nboard[i][j] is 0 or 1.\n\n\u00a0\nFollow up:\n\nCould you solve it in-place? Remember that the board needs to be updated simultaneously: You cannot update some cells first and then use their updated values to update other cells.\nIn this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches upon the border of the array (i.e., live cells reach the border). How would you address these problems?\n\n"], "290. Word Pattern": ["https://leetcode.com/problems/word-pattern", "Given a pattern and a string s, find if s\u00a0follows the same pattern.\nHere follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.\n\u00a0\nExample 1:\nInput: pattern = \"abba\", s = \"dog cat cat dog\"\nOutput: true\n\nExample 2:\nInput: pattern = \"abba\", s = \"dog cat cat fish\"\nOutput: false\n\nExample 3:\nInput: pattern = \"aaaa\", s = \"dog cat cat dog\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= pattern.length <= 300\npattern contains only lower-case English letters.\n1 <= s.length <= 3000\ns contains only lowercase English letters and spaces ' '.\ns does not contain any leading or trailing spaces.\nAll the words in s are separated by a single space.\n\n"], "292. Nim Game": ["https://leetcode.com/problems/nim-game", "You are playing the following Nim Game with your friend:\n\nInitially, there is a heap of stones on the table.\nYou and your friend will alternate taking turns, and you go first.\nOn each turn, the person whose turn it is will remove 1 to 3 stones from the heap.\nThe one who removes the last stone is the winner.\n\nGiven n, the number of stones in the heap, return true if you can win the game assuming both you and your friend play optimally, otherwise return false.\n\u00a0\nExample 1:\nInput: n = 4\nOutput: false\nExplanation: These are the possible outcomes:\n1. You remove 1 stone. Your friend removes 3 stones, including the last stone. Your friend wins.\n2. You remove 2 stones. Your friend removes 2 stones, including the last stone. Your friend wins.\n3. You remove 3 stones. Your friend removes the last stone. Your friend wins.\nIn all outcomes, your friend wins.\n\nExample 2:\nInput: n = 1\nOutput: true\n\nExample 3:\nInput: n = 2\nOutput: true\n\n\u00a0\nConstraints:\n\n1 <= n <= 231 - 1\n\n"], "295. Find Median from Data Stream": ["https://leetcode.com/problems/find-median-from-data-stream", "The median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value and the median is the mean of the two middle values.\n\nFor example, for arr = [2,3,4], the median is 3.\nFor example, for arr = [2,3], the median is (2 + 3) / 2 = 2.5.\n\nImplement the MedianFinder class:\n\nMedianFinder() initializes the MedianFinder object.\nvoid addNum(int num) adds the integer num from the data stream to the data structure.\ndouble findMedian() returns the median of all elements so far. Answers within 10-5 of the actual answer will be accepted.\n\n\u00a0\nExample 1:\nInput\n[\"MedianFinder\", \"addNum\", \"addNum\", \"findMedian\", \"addNum\", \"findMedian\"]\n[[], [1], [2], [], [3], []]\nOutput\n[null, null, null, 1.5, null, 2.0]\n\nExplanation\nMedianFinder medianFinder = new MedianFinder();\nmedianFinder.addNum(1);    // arr = [1]\nmedianFinder.addNum(2);    // arr = [1, 2]\nmedianFinder.findMedian(); // return 1.5 (i.e., (1 + 2) / 2)\nmedianFinder.addNum(3);    // arr[1, 2, 3]\nmedianFinder.findMedian(); // return 2.0\n\n\u00a0\nConstraints:\n\n-105 <= num <= 105\nThere will be at least one element in the data structure before calling findMedian.\nAt most 5 * 104 calls will be made to addNum and findMedian.\n\n\u00a0\nFollow up:\n\nIf all integer numbers from the stream are in the range [0, 100], how would you optimize your solution?\nIf 99% of all integer numbers from the stream are in the range [0, 100], how would you optimize your solution?\n\n"], "297. Serialize and Deserialize Binary Tree": ["https://leetcode.com/problems/serialize-and-deserialize-binary-tree", "Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.\nDesign an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.\nClarification: The input/output format is the same as how LeetCode serializes a binary tree. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,null,null,4,5]\nOutput: [1,2,3,null,null,4,5]\n\nExample 2:\nInput: root = []\nOutput: []\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-1000 <= Node.val <= 1000\n\n"], "299. Bulls and Cows": ["https://leetcode.com/problems/bulls-and-cows", "You are playing the Bulls and Cows game with your friend.\nYou write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:\n\nThe number of \"bulls\", which are digits in the guess that are in the correct position.\nThe number of \"cows\", which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.\n\nGiven the secret number secret and your friend's guess guess, return the hint for your friend's guess.\nThe hint should be formatted as \"xAyB\", where x is the number of bulls and y is the number of cows. Note that both secret and guess may contain duplicate digits.\n\u00a0\nExample 1:\nInput: secret = \"1807\", guess = \"7810\"\nOutput: \"1A3B\"\nExplanation: Bulls are connected with a '|' and cows are underlined:\n\"1807\"\n  |\n\"7810\"\nExample 2:\nInput: secret = \"1123\", guess = \"0111\"\nOutput: \"1A1B\"\nExplanation: Bulls are connected with a '|' and cows are underlined:\n\"1123\"        \"1123\"\n  |      or     |\n\"0111\"        \"0111\"\nNote that only one of the two unmatched 1s is counted as a cow since the non-bull digits can only be rearranged to allow one 1 to be a bull.\n\n\u00a0\nConstraints:\n\n1 <= secret.length, guess.length <= 1000\nsecret.length == guess.length\nsecret and guess consist of digits only.\n\n"], "300. Longest Increasing Subsequence": ["https://leetcode.com/problems/longest-increasing-subsequence", "Given an integer array nums, return the length of the longest strictly increasing subsequence.\nA subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].\n\u00a0\nExample 1:\nInput: nums = [10,9,2,5,3,7,101,18]\nOutput: 4\nExplanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.\n\nExample 2:\nInput: nums = [0,1,0,3,2,3]\nOutput: 4\n\nExample 3:\nInput: nums = [7,7,7,7,7,7,7]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2500\n-104 <= nums[i] <= 104\n\n\u00a0\nFollow up:\u00a0Can you come up with an algorithm that runs in\u00a0O(n log(n)) time complexity?\n"], "301. Remove Invalid Parentheses": ["https://leetcode.com/problems/remove-invalid-parentheses", "Given a string s that contains parentheses and letters, remove the minimum number of invalid parentheses to make the input string valid.\nReturn all the possible results. You may return the answer in any order.\n\u00a0\nExample 1:\nInput: s = \"()())()\"\nOutput: [\"(())()\",\"()()()\"]\n\nExample 2:\nInput: s = \"(a)())()\"\nOutput: [\"(a())()\",\"(a)()()\"]\n\nExample 3:\nInput: s = \")(\"\nOutput: [\"\"]\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 25\ns consists of lowercase English letters and parentheses '(' and ')'.\nThere will be at most 20 parentheses in s.\n\n"], "303. Range Sum Query - Immutable": ["https://leetcode.com/problems/range-sum-query-immutable", "Given an integer array nums, handle multiple queries of the following type:\n\nCalculate the sum of the elements of nums between indices left and right inclusive where left <= right.\n\nImplement the NumArray class:\n\nNumArray(int[] nums) Initializes the object with the integer array nums.\nint sumRange(int left, int right) Returns the sum of the elements of nums between indices left and right inclusive (i.e. nums[left] + nums[left + 1] + ... + nums[right]).\n\n\u00a0\nExample 1:\nInput\n[\"NumArray\", \"sumRange\", \"sumRange\", \"sumRange\"]\n[[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]\nOutput\n[null, 1, -1, -3]\n\nExplanation\nNumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);\nnumArray.sumRange(0, 2); // return (-2) + 0 + 3 = 1\nnumArray.sumRange(2, 5); // return 3 + (-5) + 2 + (-1) = -1\nnumArray.sumRange(0, 5); // return (-2) + 0 + 3 + (-5) + 2 + (-1) = -3\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-105 <= nums[i] <= 105\n0 <= left <= right < nums.length\nAt most 104 calls will be made to sumRange.\n\n"], "304. Range Sum Query 2D - Immutable": ["https://leetcode.com/problems/range-sum-query-2d-immutable", "Given a 2D matrix matrix, handle multiple queries of the following type:\n\nCalculate the sum of the elements of matrix inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\n\nImplement the NumMatrix class:\n\nNumMatrix(int[][] matrix) Initializes the object with the integer matrix matrix.\nint sumRegion(int row1, int col1, int row2, int col2) Returns the sum of the elements of matrix inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\n\n\u00a0\nExample 1:\n\nInput\n[\"NumMatrix\", \"sumRegion\", \"sumRegion\", \"sumRegion\"]\n[[[[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]], [2, 1, 4, 3], [1, 1, 2, 2], [1, 2, 2, 4]]\nOutput\n[null, 8, 11, 12]\n\nExplanation\nNumMatrix numMatrix = new NumMatrix([[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]);\nnumMatrix.sumRegion(2, 1, 4, 3); // return 8 (i.e sum of the red rectangle)\nnumMatrix.sumRegion(1, 1, 2, 2); // return 11 (i.e sum of the green rectangle)\nnumMatrix.sumRegion(1, 2, 2, 4); // return 12 (i.e sum of the blue rectangle)\n\n\u00a0\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 200\n-105 <= matrix[i][j] <= 105\n0 <= row1 <= row2 < m\n0 <= col1 <= col2 < n\nAt most 104 calls will be made to sumRegion.\n\n"], "306. Additive Number": ["https://leetcode.com/problems/additive-number", "An additive number is a string whose digits can form an additive sequence.\nA valid additive sequence should contain at least three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.\nGiven a string containing only digits, return true if it is an additive number or false otherwise.\nNote: Numbers in the additive sequence cannot have leading zeros, so sequence 1, 2, 03 or 1, 02, 3 is invalid.\n\u00a0\nExample 1:\nInput: \"112358\"\nOutput: true\nExplanation: \nThe digits can form an additive sequence: 1, 1, 2, 3, 5, 8. \n1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8\n\nExample 2:\nInput: \"199100199\"\nOutput: true\nExplanation: \nThe additive sequence is: 1, 99, 100, 199.\u00a0\n1 + 99 = 100, 99 + 100 = 199\n\n\u00a0\nConstraints:\n\n1 <= num.length <= 35\nnum consists only of digits.\n\n\u00a0\nFollow up: How would you handle overflow for very large input integers?\n"], "307. Range Sum Query - Mutable": ["https://leetcode.com/problems/range-sum-query-mutable", "Given an integer array nums, handle multiple queries of the following types:\n\nUpdate the value of an element in nums.\nCalculate the sum of the elements of nums between indices left and right inclusive where left <= right.\n\nImplement the NumArray class:\n\nNumArray(int[] nums) Initializes the object with the integer array nums.\nvoid update(int index, int val) Updates the value of nums[index] to be val.\nint sumRange(int left, int right) Returns the sum of the elements of nums between indices left and right inclusive (i.e. nums[left] + nums[left + 1] + ... + nums[right]).\n\n\u00a0\nExample 1:\nInput\n[\"NumArray\", \"sumRange\", \"update\", \"sumRange\"]\n[[[1, 3, 5]], [0, 2], [1, 2], [0, 2]]\nOutput\n[null, 9, null, 8]\n\nExplanation\nNumArray numArray = new NumArray([1, 3, 5]);\nnumArray.sumRange(0, 2); // return 1 + 3 + 5 = 9\nnumArray.update(1, 2);   // nums = [1, 2, 5]\nnumArray.sumRange(0, 2); // return 1 + 2 + 5 = 8\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 3 * 104\n-100 <= nums[i] <= 100\n0 <= index < nums.length\n-100 <= val <= 100\n0 <= left <= right < nums.length\nAt most 3 * 104 calls will be made to update and sumRange.\n\n"], "309. Best Time to Buy and Sell Stock with Cooldown": ["https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown", "You are given an array prices where prices[i] is the price of a given stock on the ith day.\nFind the maximum profit you can achieve. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times) with the following restrictions:\n\nAfter you sell your stock, you cannot buy stock on the next day (i.e., cooldown one day).\n\nNote: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n\u00a0\nExample 1:\nInput: prices = [1,2,3,0,2]\nOutput: 3\nExplanation: transactions = [buy, sell, cooldown, buy, sell]\n\nExample 2:\nInput: prices = [1]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= prices.length <= 5000\n0 <= prices[i] <= 1000\n\n"], "310. Minimum Height Trees": ["https://leetcode.com/problems/minimum-height-trees", "A tree is an undirected graph in which any two vertices are connected by\u00a0exactly\u00a0one path. In other words, any connected graph without simple cycles is a tree.\nGiven a tree of n nodes\u00a0labelled from 0 to n - 1, and an array of\u00a0n - 1\u00a0edges where edges[i] = [ai, bi] indicates that there is an undirected edge between the two nodes\u00a0ai and\u00a0bi in the tree,\u00a0you can choose any node of the tree as the root. When you select a node x as the root, the result tree has height h. Among all possible rooted trees, those with minimum height (i.e. min(h))\u00a0 are called minimum height trees (MHTs).\nReturn a list of all MHTs' root labels.\u00a0You can return the answer in any order.\nThe height of a rooted tree is the number of edges on the longest downward path between the root and a leaf.\n\u00a0\nExample 1:\n\nInput: n = 4, edges = [[1,0],[1,2],[1,3]]\nOutput: [1]\nExplanation: As shown, the height of the tree is 1 when the root is the node with label 1 which is the only MHT.\n\nExample 2:\n\nInput: n = 6, edges = [[3,0],[3,1],[3,2],[3,4],[5,4]]\nOutput: [3,4]\n\n\u00a0\nConstraints:\n\n1 <= n <= 2 * 104\nedges.length == n - 1\n0 <= ai, bi < n\nai != bi\nAll the pairs (ai, bi) are distinct.\nThe given input is guaranteed to be a tree and there will be no repeated edges.\n\n"], "312. Burst Balloons": ["https://leetcode.com/problems/burst-balloons", "You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons.\nIf you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it.\nReturn the maximum coins you can collect by bursting the balloons wisely.\n\u00a0\nExample 1:\nInput: nums = [3,1,5,8]\nOutput: 167\nExplanation:\nnums = [3,1,5,8] --> [3,5,8] --> [3,8] --> [8] --> []\ncoins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167\nExample 2:\nInput: nums = [1,5]\nOutput: 10\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= n <= 300\n0 <= nums[i] <= 100\n\n"], "313. Super Ugly Number": ["https://leetcode.com/problems/super-ugly-number", ""], "315. Count of Smaller Numbers After Self": ["https://leetcode.com/problems/count-of-smaller-numbers-after-self", "You are given an integer array nums and you have to return a new counts array. The counts array has the property where counts[i] is the number of smaller elements to the right of nums[i].\n\u00a0\nExample 1:\nInput: nums = [5,2,6,1]\nOutput: [2,1,1,0]\nExplanation:\nTo the right of 5 there are 2 smaller elements (2 and 1).\nTo the right of 2 there is only 1 smaller element (1).\nTo the right of 6 there is 1 smaller element (1).\nTo the right of 1 there is 0 smaller element.\n\nExample 2:\nInput: nums = [-1]\nOutput: [0]\n\nExample 3:\nInput: nums = [-1,-1]\nOutput: [0,0]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n-104 <= nums[i] <= 104\n\n"], "316. Remove Duplicate Letters": ["https://leetcode.com/problems/remove-duplicate-letters", "Given a string s, remove duplicate letters so that every letter appears once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.\n\u00a0\nExample 1:\nInput: s = \"bcabc\"\nOutput: \"abc\"\n\nExample 2:\nInput: s = \"cbacdcbc\"\nOutput: \"acdb\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 104\ns consists of lowercase English letters.\n\n\u00a0\nNote: This question is the same as 1081: https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\n"], "318. Maximum Product of Word Lengths": ["https://leetcode.com/problems/maximum-product-of-word-lengths", "Given a string array words, return the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters. If no such two words exist, return 0.\n\u00a0\nExample 1:\nInput: words = [\"abcw\",\"baz\",\"foo\",\"bar\",\"xtfn\",\"abcdef\"]\nOutput: 16\nExplanation: The two words can be \"abcw\", \"xtfn\".\n\nExample 2:\nInput: words = [\"a\",\"ab\",\"abc\",\"d\",\"cd\",\"bcd\",\"abcd\"]\nOutput: 4\nExplanation: The two words can be \"ab\", \"cd\".\n\nExample 3:\nInput: words = [\"a\",\"aa\",\"aaa\",\"aaaa\"]\nOutput: 0\nExplanation: No such pair of words.\n\n\u00a0\nConstraints:\n\n2 <= words.length <= 1000\n1 <= words[i].length <= 1000\nwords[i] consists only of lowercase English letters.\n\n"], "319. Bulb Switcher": ["https://leetcode.com/problems/bulb-switcher", "There are n bulbs that are initially off. You first turn on all the bulbs, then\u00a0you turn off every second bulb.\nOn the third round, you toggle every third bulb (turning on if it's off or turning off if it's on). For the ith round, you toggle every i bulb. For the nth round, you only toggle the last bulb.\nReturn the number of bulbs that are on after n rounds.\n\u00a0\nExample 1:\n\nInput: n = 3\nOutput: 1\nExplanation: At first, the three bulbs are [off, off, off].\nAfter the first round, the three bulbs are [on, on, on].\nAfter the second round, the three bulbs are [on, off, on].\nAfter the third round, the three bulbs are [on, off, off]. \nSo you should return 1 because there is only one bulb is on.\nExample 2:\nInput: n = 0\nOutput: 0\n\nExample 3:\nInput: n = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n0 <= n <= 109\n\n"], "321. Create Maximum Number": ["https://leetcode.com/problems/create-maximum-number", "You are given two integer arrays nums1 and nums2 of lengths m and n respectively. nums1 and nums2 represent the digits of two numbers. You are also given an integer k.\nCreate the maximum number of length k <= m + n from digits of the two numbers. The relative order of the digits from the same array must be preserved.\nReturn an array of the k digits representing the answer.\n\u00a0\nExample 1:\nInput: nums1 = [3,4,6,5], nums2 = [9,1,2,5,8,3], k = 5\nOutput: [9,8,6,5,3]\n\nExample 2:\nInput: nums1 = [6,7], nums2 = [6,0,4], k = 5\nOutput: [6,7,6,0,4]\n\nExample 3:\nInput: nums1 = [3,9], nums2 = [8,9], k = 3\nOutput: [9,8,9]\n\n\u00a0\nConstraints:\n\nm == nums1.length\nn == nums2.length\n1 <= m, n <= 500\n0 <= nums1[i], nums2[i] <= 9\n1 <= k <= m + n\n\n"], "322. Coin Change": ["https://leetcode.com/problems/coin-change", "You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money.\nReturn the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.\nYou may assume that you have an infinite number of each kind of coin.\n\u00a0\nExample 1:\nInput: coins = [1,2,5], amount = 11\nOutput: 3\nExplanation: 11 = 5 + 5 + 1\n\nExample 2:\nInput: coins = [2], amount = 3\nOutput: -1\n\nExample 3:\nInput: coins = [1], amount = 0\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= coins.length <= 12\n1 <= coins[i] <= 231 - 1\n0 <= amount <= 104\n\n"], "324. Wiggle Sort II": ["https://leetcode.com/problems/wiggle-sort-ii", "Given an integer array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....\nYou may assume the input array always has a valid answer.\n\u00a0\nExample 1:\nInput: nums = [1,5,1,1,6,4]\nOutput: [1,6,1,5,1,4]\nExplanation: [1,4,1,5,1,6] is also accepted.\n\nExample 2:\nInput: nums = [1,3,2,2,3,1]\nOutput: [2,3,1,3,1,2]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5 * 104\n0 <= nums[i] <= 5000\nIt is guaranteed that there will be an answer for the given input nums.\n\n\u00a0\nFollow Up: Can you do it in O(n) time and/or in-place with O(1) extra space?"], "326. Power of Three": ["https://leetcode.com/problems/power-of-three", "Given an integer n, return true if it is a power of three. Otherwise, return false.\nAn integer n is a power of three, if there exists an integer x such that n == 3x.\n\u00a0\nExample 1:\nInput: n = 27\nOutput: true\n\nExample 2:\nInput: n = 0\nOutput: false\n\nExample 3:\nInput: n = 9\nOutput: true\n\n\u00a0\nConstraints:\n\n-231 <= n <= 231 - 1\n\n\u00a0\nFollow up: Could you solve it without loops/recursion?"], "327. Count of Range Sum": ["https://leetcode.com/problems/count-of-range-sum", "Given an integer array nums and two integers lower and upper, return the number of range sums that lie in [lower, upper] inclusive.\nRange sum S(i, j) is defined as the sum of the elements in nums between indices i and j inclusive, where i <= j.\n\u00a0\nExample 1:\nInput: nums = [-2,5,-1], lower = -2, upper = 2\nOutput: 3\nExplanation: The three ranges are: [0,0], [2,2], and [0,2] and their respective sums are: -2, -1, 2.\n\nExample 2:\nInput: nums = [0], lower = 0, upper = 0\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n-231 <= nums[i] <= 231 - 1\n-105 <= lower <= upper <= 105\nThe answer is guaranteed to fit in a 32-bit integer.\n\n"], "328. Odd Even Linked List": ["https://leetcode.com/problems/odd-even-linked-list", "Given the head of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return the reordered list.\nThe first node is considered odd, and the second node is even, and so on.\nNote that the relative order inside both the even and odd groups should remain as it was in the input.\nYou must solve the problem\u00a0in O(1)\u00a0extra space complexity and O(n) time complexity.\n\u00a0\nExample 1:\n\nInput: head = [1,2,3,4,5]\nOutput: [1,3,5,2,4]\n\nExample 2:\n\nInput: head = [2,1,3,5,6,4,7]\nOutput: [2,3,6,7,1,5,4]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the linked list is in the range [0, 104].\n-106 <= Node.val <= 106\n\n"], "329. Longest Increasing Path in a Matrix": ["https://leetcode.com/problems/longest-increasing-path-in-a-matrix", "Given an m x n integers matrix, return the length of the longest increasing path in matrix.\nFrom each cell, you can either move in four directions: left, right, up, or down. You may not move diagonally or move outside the boundary (i.e., wrap-around is not allowed).\n\u00a0\nExample 1:\n\nInput: matrix = [[9,9,4],[6,6,8],[2,1,1]]\nOutput: 4\nExplanation: The longest increasing path is [1, 2, 6, 9].\n\nExample 2:\n\nInput: matrix = [[3,4,5],[3,2,6],[2,2,1]]\nOutput: 4\nExplanation: The longest increasing path is [3, 4, 5, 6]. Moving diagonally is not allowed.\n\nExample 3:\nInput: matrix = [[1]]\nOutput: 1\n\n\u00a0\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 200\n0 <= matrix[i][j] <= 231 - 1\n\n"], "330. Patching Array": ["https://leetcode.com/problems/patching-array", "Given a sorted integer array nums and an integer n, add/patch elements to the array such that any number in the range [1, n] inclusive can be formed by the sum of some elements in the array.\nReturn the minimum number of patches required.\n\u00a0\nExample 1:\nInput: nums = [1,3], n = 6\nOutput: 1\nExplanation:\nCombinations of nums are [1], [3], [1,3], which form possible sums of: 1, 3, 4.\nNow if we add/patch 2 to nums, the combinations are: [1], [2], [3], [1,3], [2,3], [1,2,3].\nPossible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6].\nSo we only need 1 patch.\n\nExample 2:\nInput: nums = [1,5,10], n = 20\nOutput: 2\nExplanation: The two patches can be [2, 4].\n\nExample 3:\nInput: nums = [1,2,2], n = 5\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 1000\n1 <= nums[i] <= 104\nnums is sorted in ascending order.\n1 <= n <= 231 - 1\n\n"], "331. Verify Preorder Serialization of a Binary Tree": ["https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree", "One way to serialize a binary tree is to use preorder traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as '#'.\n\nFor example, the above binary tree can be serialized to the string \"9,3,4,#,#,1,#,#,2,#,6,#,#\", where '#' represents a null node.\nGiven a string of comma-separated values preorder, return true if it is a correct preorder traversal serialization of a binary tree.\nIt is guaranteed that each comma-separated value in the string must be either an integer or a character '#' representing null pointer.\nYou may assume that the input format is always valid.\n\nFor example, it could never contain two consecutive commas, such as \"1,,3\".\n\nNote:\u00a0You are not allowed to reconstruct the tree.\n\u00a0\nExample 1:\nInput: preorder = \"9,3,4,#,#,1,#,#,2,#,6,#,#\"\nOutput: true\nExample 2:\nInput: preorder = \"1,#\"\nOutput: false\nExample 3:\nInput: preorder = \"9,#,#,1\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= preorder.length <= 104\npreorder consist of integers in the range [0, 100] and '#' separated by commas ','.\n\n"], "332. Reconstruct Itinerary": ["https://leetcode.com/problems/reconstruct-itinerary", "You are given a list of airline tickets where tickets[i] = [fromi, toi] represent the departure and the arrival airports of one flight. Reconstruct the itinerary in order and return it.\nAll of the tickets belong to a man who departs from \"JFK\", thus, the itinerary must begin with \"JFK\". If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string.\n\nFor example, the itinerary [\"JFK\", \"LGA\"] has a smaller lexical order than [\"JFK\", \"LGB\"].\n\nYou may assume all tickets form at least one valid itinerary. You must use all the tickets once and only once.\n\u00a0\nExample 1:\n\nInput: tickets = [[\"MUC\",\"LHR\"],[\"JFK\",\"MUC\"],[\"SFO\",\"SJC\"],[\"LHR\",\"SFO\"]]\nOutput: [\"JFK\",\"MUC\",\"LHR\",\"SFO\",\"SJC\"]\n\nExample 2:\n\nInput: tickets = [[\"JFK\",\"SFO\"],[\"JFK\",\"ATL\"],[\"SFO\",\"ATL\"],[\"ATL\",\"JFK\"],[\"ATL\",\"SFO\"]]\nOutput: [\"JFK\",\"ATL\",\"JFK\",\"SFO\",\"ATL\",\"SFO\"]\nExplanation: Another possible reconstruction is [\"JFK\",\"SFO\",\"ATL\",\"JFK\",\"ATL\",\"SFO\"] but it is larger in lexical order.\n\n\u00a0\nConstraints:\n\n1 <= tickets.length <= 300\ntickets[i].length == 2\nfromi.length == 3\ntoi.length == 3\nfromi and toi consist of uppercase English letters.\nfromi != toi\n\n"], "334. Increasing Triplet Subsequence": ["https://leetcode.com/problems/increasing-triplet-subsequence", "Given an integer array nums, return true if there exists a triple of indices (i, j, k) such that i < j < k and nums[i] < nums[j] < nums[k]. If no such indices exists, return false.\n\u00a0\nExample 1:\nInput: nums = [1,2,3,4,5]\nOutput: true\nExplanation: Any triplet where i < j < k is valid.\n\nExample 2:\nInput: nums = [5,4,3,2,1]\nOutput: false\nExplanation: No triplet exists.\n\nExample 3:\nInput: nums = [2,1,5,0,4,6]\nOutput: true\nExplanation: The triplet (3, 4, 5) is valid because nums[3] == 0 < nums[4] == 4 < nums[5] == 6.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5 * 105\n-231 <= nums[i] <= 231 - 1\n\n\u00a0\nFollow up: Could you implement a solution that runs in O(n) time complexity and O(1) space complexity?"], "335. Self Crossing": ["https://leetcode.com/problems/self-crossing", "You are given an array of integers distance.\nYou start at point (0,0) on an X-Y plane and you move distance[0] meters to the north, then distance[1] meters to the west, distance[2] meters to the south, distance[3] meters to the east, and so on. In other words, after each move, your direction changes counter-clockwise.\nReturn true if your path crosses itself, and false if it does not.\n\u00a0\nExample 1:\n\nInput: distance = [2,1,1,2]\nOutput: true\n\nExample 2:\n\nInput: distance = [1,2,3,4]\nOutput: false\n\nExample 3:\n\nInput: distance = [1,1,1,1]\nOutput: true\n\n\u00a0\nConstraints:\n\n1 <=\u00a0distance.length <= 105\n1 <=\u00a0distance[i] <= 105\n\n"], "336. Palindrome Pairs": ["https://leetcode.com/problems/palindrome-pairs", "Given a list of unique words, return all the pairs of the\u00a0distinct indices (i, j) in the given list, so that the concatenation of the two words\u00a0words[i] + words[j] is a palindrome.\n\u00a0\nExample 1:\nInput: words = [\"abcd\",\"dcba\",\"lls\",\"s\",\"sssll\"]\nOutput: [[0,1],[1,0],[3,2],[2,4]]\nExplanation: The palindromes are [\"dcbaabcd\",\"abcddcba\",\"slls\",\"llssssll\"]\n\nExample 2:\nInput: words = [\"bat\",\"tab\",\"cat\"]\nOutput: [[0,1],[1,0]]\nExplanation: The palindromes are [\"battab\",\"tabbat\"]\n\nExample 3:\nInput: words = [\"a\",\"\"]\nOutput: [[0,1],[1,0]]\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 5000\n0 <= words[i].length <= 300\nwords[i] consists of lower-case English letters.\n\n"], "337. House Robber III": ["https://leetcode.com/problems/house-robber-iii", "The thief has found himself a new place for his thievery again. There is only one entrance to this area, called root.\nBesides the root, each house has one and only one parent house. After a tour, the smart thief realized that all houses in this place form a binary tree. It will automatically contact the police if two directly-linked houses were broken into on the same night.\nGiven the root of the binary tree, return the maximum amount of money the thief can rob without alerting the police.\n\u00a0\nExample 1:\n\nInput: root = [3,2,3,null,3,null,1]\nOutput: 7\nExplanation: Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.\n\nExample 2:\n\nInput: root = [3,4,5,1,3,null,1]\nOutput: 9\nExplanation: Maximum amount of money the thief can rob = 4 + 5 = 9.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n0 <= Node.val <= 104\n\n"], "338. Counting Bits": ["https://leetcode.com/problems/counting-bits", "Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.\n\u00a0\nExample 1:\nInput: n = 2\nOutput: [0,1,1]\nExplanation:\n0 --> 0\n1 --> 1\n2 --> 10\n\nExample 2:\nInput: n = 5\nOutput: [0,1,1,2,1,2]\nExplanation:\n0 --> 0\n1 --> 1\n2 --> 10\n3 --> 11\n4 --> 100\n5 --> 101\n\n\u00a0\nConstraints:\n\n0 <= n <= 105\n\n\u00a0\nFollow up:\n\nIt is very easy to come up with a solution with a runtime of O(n log n). Can you do it in linear time O(n) and possibly in a single pass?\nCan you do it without using any built-in function (i.e., like __builtin_popcount in C++)?\n\n"], "341. Flatten Nested List Iterator": ["https://leetcode.com/problems/flatten-nested-list-iterator", "You are given a nested list of integers nestedList. Each element is either an integer or a list whose elements may also be integers or other lists. Implement an iterator to flatten it.\nImplement the NestedIterator class:\n\nNestedIterator(List<NestedInteger> nestedList) Initializes the iterator with the nested list nestedList.\nint next() Returns the next integer in the nested list.\nboolean hasNext() Returns true if there are still some integers in the nested list and false otherwise.\n\nYour code will be tested with the following pseudocode:\ninitialize iterator with nestedList\nres = []\nwhile iterator.hasNext()\n    append iterator.next() to the end of res\nreturn res\n\nIf res matches the expected flattened list, then your code will be judged as correct.\n\u00a0\nExample 1:\nInput: nestedList = [[1,1],2,[1,1]]\nOutput: [1,1,2,1,1]\nExplanation: By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].\n\nExample 2:\nInput: nestedList = [1,[4,[6]]]\nOutput: [1,4,6]\nExplanation: By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].\n\n\u00a0\nConstraints:\n\n1 <= nestedList.length <= 500\nThe values of the integers in the nested list is in the range [-106, 106].\n\n"], "342. Power of Four": ["https://leetcode.com/problems/power-of-four", "Given an integer n, return true if it is a power of four. Otherwise, return false.\nAn integer n is a power of four, if there exists an integer x such that n == 4x.\n\u00a0\nExample 1:\nInput: n = 16\nOutput: true\nExample 2:\nInput: n = 5\nOutput: false\nExample 3:\nInput: n = 1\nOutput: true\n\n\u00a0\nConstraints:\n\n-231 <= n <= 231 - 1\n\n\u00a0\nFollow up: Could you solve it without loops/recursion?"], "343. Integer Break": ["https://leetcode.com/problems/integer-break", "Given an integer n, break it into the sum of k positive integers, where k >= 2, and maximize the product of those integers.\nReturn the maximum product you can get.\n\u00a0\nExample 1:\nInput: n = 2\nOutput: 1\nExplanation: 2 = 1 + 1, 1 \u00d7 1 = 1.\n\nExample 2:\nInput: n = 10\nOutput: 36\nExplanation: 10 = 3 + 3 + 4, 3 \u00d7 3 \u00d7 4 = 36.\n\n\u00a0\nConstraints:\n\n2 <= n <= 58\n\n"], "344. Reverse String": ["https://leetcode.com/problems/reverse-string", "Write a function that reverses a string. The input string is given as an array of characters s.\nYou must do this by modifying the input array in-place with O(1) extra memory.\n\u00a0\nExample 1:\nInput: s = [\"h\",\"e\",\"l\",\"l\",\"o\"]\nOutput: [\"o\",\"l\",\"l\",\"e\",\"h\"]\nExample 2:\nInput: s = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\nOutput: [\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns[i] is a printable ascii character.\n\n"], "345. Reverse Vowels of a String": ["https://leetcode.com/problems/reverse-vowels-of-a-string", "Given a string s, reverse only all the vowels in the string and return it.\nThe vowels are 'a', 'e', 'i', 'o', and 'u', and they can appear in both cases.\n\u00a0\nExample 1:\nInput: s = \"hello\"\nOutput: \"holle\"\nExample 2:\nInput: s = \"leetcode\"\nOutput: \"leotcede\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 3 * 105\ns consist of printable ASCII characters.\n\n"], "347. Top K Frequent Elements": ["https://leetcode.com/problems/top-k-frequent-elements", "Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.\n\u00a0\nExample 1:\nInput: nums = [1,1,1,2,2,3], k = 2\nOutput: [1,2]\nExample 2:\nInput: nums = [1], k = 1\nOutput: [1]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\nk is in the range [1, the number of unique elements in the array].\nIt is guaranteed that the answer is unique.\n\n\u00a0\nFollow up: Your algorithm's time complexity must be better than O(n log n), where n is the array's size.\n"], "349. Intersection of Two Arrays": ["https://leetcode.com/problems/intersection-of-two-arrays", "Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.\n\u00a0\nExample 1:\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\nOutput: [2]\n\nExample 2:\nInput: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\nOutput: [9,4]\nExplanation: [4,9] is also accepted.\n\n\u00a0\nConstraints:\n\n1 <= nums1.length, nums2.length <= 1000\n0 <= nums1[i], nums2[i] <= 1000\n\n"], "350. Intersection of Two Arrays II": ["https://leetcode.com/problems/intersection-of-two-arrays-ii", "Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must appear as many times as it shows in both arrays and you may return the result in any order.\n\u00a0\nExample 1:\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\nOutput: [2,2]\n\nExample 2:\nInput: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\nOutput: [4,9]\nExplanation: [9,4] is also accepted.\n\n\u00a0\nConstraints:\n\n1 <= nums1.length, nums2.length <= 1000\n0 <= nums1[i], nums2[i] <= 1000\n\n\u00a0\nFollow up:\n\nWhat if the given array is already sorted? How would you optimize your algorithm?\nWhat if nums1's size is small compared to nums2's size? Which algorithm is better?\nWhat if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?\n\n"], "352. Data Stream as Disjoint Intervals": ["https://leetcode.com/problems/data-stream-as-disjoint-intervals", "Given a data stream input of non-negative integers a1, a2, ..., an, summarize the numbers seen so far as a list of disjoint intervals.\nImplement the SummaryRanges class:\n\nSummaryRanges() Initializes the object with an empty stream.\nvoid addNum(int val) Adds the integer val to the stream.\nint[][] getIntervals() Returns a summary of the integers in the stream currently as a list of disjoint intervals [starti, endi].\n\n\u00a0\nExample 1:\nInput\n[\"SummaryRanges\", \"addNum\", \"getIntervals\", \"addNum\", \"getIntervals\", \"addNum\", \"getIntervals\", \"addNum\", \"getIntervals\", \"addNum\", \"getIntervals\"]\n[[], [1], [], [3], [], [7], [], [2], [], [6], []]\nOutput\n[null, null, [[1, 1]], null, [[1, 1], [3, 3]], null, [[1, 1], [3, 3], [7, 7]], null, [[1, 3], [7, 7]], null, [[1, 3], [6, 7]]]\n\nExplanation\nSummaryRanges summaryRanges = new SummaryRanges();\nsummaryRanges.addNum(1);      // arr = [1]\nsummaryRanges.getIntervals(); // return [[1, 1]]\nsummaryRanges.addNum(3);      // arr = [1, 3]\nsummaryRanges.getIntervals(); // return [[1, 1], [3, 3]]\nsummaryRanges.addNum(7);      // arr = [1, 3, 7]\nsummaryRanges.getIntervals(); // return [[1, 1], [3, 3], [7, 7]]\nsummaryRanges.addNum(2);      // arr = [1, 2, 3, 7]\nsummaryRanges.getIntervals(); // return [[1, 3], [7, 7]]\nsummaryRanges.addNum(6);      // arr = [1, 2, 3, 6, 7]\nsummaryRanges.getIntervals(); // return [[1, 3], [6, 7]]\n\n\u00a0\nConstraints:\n\n0 <= val <= 104\nAt most 3 * 104 calls will be made to addNum and getIntervals.\n\n\u00a0\nFollow up: What if there are lots of merges and the number of disjoint intervals is small compared to the size of the data stream?\n"], "354. Russian Doll Envelopes": ["https://leetcode.com/problems/russian-doll-envelopes", "You are given a 2D array of integers envelopes where envelopes[i] = [wi, hi] represents the width and the height of an envelope.\nOne envelope can fit into another if and only if both the width and height of one envelope are greater than the other envelope's width and height.\nReturn the maximum number of envelopes you can Russian doll (i.e., put one inside the other).\nNote: You cannot rotate an envelope.\n\u00a0\nExample 1:\nInput: envelopes = [[5,4],[6,4],[6,7],[2,3]]\nOutput: 3\nExplanation: The maximum number of envelopes you can Russian doll is 3 ([2,3] => [5,4] => [6,7]).\n\nExample 2:\nInput: envelopes = [[1,1],[1,1],[1,1]]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= envelopes.length <= 105\nenvelopes[i].length == 2\n1 <= wi, hi <= 105\n\n"], "355. Design Twitter": ["https://leetcode.com/problems/design-twitter", "Design a simplified version of Twitter where users can post tweets, follow/unfollow another user, and is able to see the 10 most recent tweets in the user's news feed.\nImplement the Twitter class:\n\nTwitter() Initializes your twitter object.\nvoid postTweet(int userId, int tweetId) Composes a new tweet with ID tweetId by the user userId. Each call to this function will be made with a unique tweetId.\nList<Integer> getNewsFeed(int userId) Retrieves the 10 most recent tweet IDs in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user themself. Tweets must be ordered from most recent to least recent.\nvoid follow(int followerId, int followeeId) The user with ID followerId started following the user with ID followeeId.\nvoid unfollow(int followerId, int followeeId) The user with ID followerId started unfollowing the user with ID followeeId.\n\n\u00a0\nExample 1:\nInput\n[\"Twitter\", \"postTweet\", \"getNewsFeed\", \"follow\", \"postTweet\", \"getNewsFeed\", \"unfollow\", \"getNewsFeed\"]\n[[], [1, 5], [1], [1, 2], [2, 6], [1], [1, 2], [1]]\nOutput\n[null, null, [5], null, null, [6, 5], null, [5]]\n\nExplanation\nTwitter twitter = new Twitter();\ntwitter.postTweet(1, 5); // User 1 posts a new tweet (id = 5).\ntwitter.getNewsFeed(1);  // User 1's news feed should return a list with 1 tweet id -> [5]. return [5]\ntwitter.follow(1, 2);    // User 1 follows user 2.\ntwitter.postTweet(2, 6); // User 2 posts a new tweet (id = 6).\ntwitter.getNewsFeed(1);  // User 1's news feed should return a list with 2 tweet ids -> [6, 5]. Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\ntwitter.unfollow(1, 2);  // User 1 unfollows user 2.\ntwitter.getNewsFeed(1);  // User 1's news feed should return a list with 1 tweet id -> [5], since user 1 is no longer following user 2.\n\n\u00a0\nConstraints:\n\n1 <= userId, followerId, followeeId <= 500\n0 <= tweetId <= 104\nAll the tweets have unique IDs.\nAt most 3 * 104 calls will be made to postTweet, getNewsFeed, follow, and unfollow.\n\n"], "357. Count Numbers with Unique Digits": ["https://leetcode.com/problems/count-numbers-with-unique-digits", "Given an integer n, return the count of all numbers with unique digits, x, where 0 <= x < 10n.\n\u00a0\nExample 1:\nInput: n = 2\nOutput: 91\nExplanation: The answer should be the total numbers in the range of 0 \u2264 x < 100, excluding 11,22,33,44,55,66,77,88,99\n\nExample 2:\nInput: n = 0\nOutput: 1\n\n\u00a0\nConstraints:\n\n0 <= n <= 8\n\n"], "363. Max Sum of Rectangle No Larger Than K": ["https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k", "Given an m x n matrix matrix and an integer k, return the max sum of a rectangle in the matrix such that its sum is no larger than k.\nIt is guaranteed that there will be a rectangle with a sum no larger than k.\n\u00a0\nExample 1:\n\nInput: matrix = [[1,0,1],[0,-2,3]], k = 2\nOutput: 2\nExplanation: Because the sum of the blue rectangle [[0, 1], [-2, 3]] is 2, and 2 is the max number no larger than k (k = 2).\n\nExample 2:\nInput: matrix = [[2,2,-1]], k = 3\nOutput: 3\n\n\u00a0\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 100\n-100 <= matrix[i][j] <= 100\n-105 <= k <= 105\n\n\u00a0\nFollow up: What if the number of rows is much larger than the number of columns?\n"], "365. Water and Jug Problem": ["https://leetcode.com/problems/water-and-jug-problem", "You are given two jugs with capacities jug1Capacity and jug2Capacity liters. There is an infinite amount of water supply available. Determine whether it is possible to measure exactly targetCapacity liters using these two jugs.\nIf targetCapacity liters of water are measurable, you must have targetCapacity liters of water contained within one or both buckets by the end.\nOperations allowed:\n\nFill any of the jugs with water.\nEmpty any of the jugs.\nPour water from one jug into another till the other jug is completely full, or the first jug itself is empty.\n\n\u00a0\nExample 1:\nInput: jug1Capacity = 3, jug2Capacity = 5, targetCapacity = 4\nOutput: true\nExplanation: The famous Die Hard example \n\nExample 2:\nInput: jug1Capacity = 2, jug2Capacity = 6, targetCapacity = 5\nOutput: false\n\nExample 3:\nInput: jug1Capacity = 1, jug2Capacity = 2, targetCapacity = 3\nOutput: true\n\n\u00a0\nConstraints:\n\n1 <= jug1Capacity, jug2Capacity, targetCapacity <= 106\n\n"], "367. Valid Perfect Square": ["https://leetcode.com/problems/valid-perfect-square", "Given a positive integer num, write a function which returns True if num is a perfect square else False.\nFollow up: Do not use any built-in library function such as sqrt.\n\u00a0\nExample 1:\nInput: num = 16\nOutput: true\nExample 2:\nInput: num = 14\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= num <= 2^31 - 1\n\n"], "368. Largest Divisible Subset": ["https://leetcode.com/problems/largest-divisible-subset", "Given a set of distinct positive integers nums, return the largest subset answer such that every pair (answer[i], answer[j]) of elements in this subset satisfies:\n\nanswer[i] % answer[j] == 0, or\nanswer[j] % answer[i] == 0\n\nIf there are multiple solutions, return any of them.\n\u00a0\nExample 1:\nInput: nums = [1,2,3]\nOutput: [1,2]\nExplanation: [1,3] is also accepted.\n\nExample 2:\nInput: nums = [1,2,4,8]\nOutput: [1,2,4,8]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 1000\n1 <= nums[i] <= 2 * 109\nAll the integers in nums are unique.\n\n"], "371. Sum of Two Integers": ["https://leetcode.com/problems/sum-of-two-integers", "Given two integers a and b, return the sum of the two integers without using the operators + and -.\n\u00a0\nExample 1:\nInput: a = 1, b = 2\nOutput: 3\nExample 2:\nInput: a = 2, b = 3\nOutput: 5\n\n\u00a0\nConstraints:\n\n-1000 <= a, b <= 1000\n\n"], "372. Super Pow": ["https://leetcode.com/problems/super-pow", "Your task is to calculate ab mod 1337 where a is a positive integer and b is an extremely large positive integer given in the form of an array.\n\u00a0\nExample 1:\nInput: a = 2, b = [3]\nOutput: 8\n\nExample 2:\nInput: a = 2, b = [1,0]\nOutput: 1024\n\nExample 3:\nInput: a = 1, b = [4,3,3,8,5,2]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= a <= 231 - 1\n1 <= b.length <= 2000\n0 <= b[i] <= 9\nb does not contain leading zeros.\n\n"], "373. Find K Pairs with Smallest Sums": ["https://leetcode.com/problems/find-k-pairs-with-smallest-sums", "You are given two integer arrays nums1 and nums2 sorted in ascending order and an integer k.\nDefine a pair (u, v) which consists of one element from the first array and one element from the second array.\nReturn the k pairs (u1, v1), (u2, v2), ..., (uk, vk) with the smallest sums.\n\u00a0\nExample 1:\nInput: nums1 = [1,7,11], nums2 = [2,4,6], k = 3\nOutput: [[1,2],[1,4],[1,6]]\nExplanation: The first 3 pairs are returned from the sequence: [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\n\nExample 2:\nInput: nums1 = [1,1,2], nums2 = [1,2,3], k = 2\nOutput: [[1,1],[1,1]]\nExplanation: The first 2 pairs are returned from the sequence: [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\n\nExample 3:\nInput: nums1 = [1,2], nums2 = [3], k = 3\nOutput: [[1,3],[2,3]]\nExplanation: All possible pairs are returned from the sequence: [1,3],[2,3]\n\n\u00a0\nConstraints:\n\n1 <= nums1.length, nums2.length <= 105\n-109 <= nums1[i], nums2[i] <= 109\nnums1 and nums2 both are sorted in ascending order.\n1 <= k <= 104\n\n"], "374. Guess Number Higher or Lower": ["https://leetcode.com/problems/guess-number-higher-or-lower", "We are playing the Guess Game. The game is as follows:\nI pick a number from 1 to n. You have to guess which number I picked.\nEvery time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess.\nYou call a pre-defined API int guess(int num), which returns three possible results:\n\n-1: Your guess is higher than the number I picked (i.e. num > pick).\n1: Your guess is lower than the number I picked (i.e. num < pick).\n0: your guess is equal to the number I picked (i.e. num == pick).\n\nReturn the number that I picked.\n\u00a0\nExample 1:\nInput: n = 10, pick = 6\nOutput: 6\n\nExample 2:\nInput: n = 1, pick = 1\nOutput: 1\n\nExample 3:\nInput: n = 2, pick = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= n <= 231 - 1\n1 <= pick <= n\n\n"], "375. Guess Number Higher or Lower II": ["https://leetcode.com/problems/guess-number-higher-or-lower-ii", "We are playing the Guessing Game. The game will work as follows:\n\nI pick a number between\u00a01\u00a0and\u00a0n.\nYou guess a number.\nIf you guess the right number, you win the game.\nIf you guess the wrong number, then I will tell you whether the number I picked is higher or lower, and you will continue guessing.\nEvery time you guess a wrong number\u00a0x, you will pay\u00a0x\u00a0dollars. If you run out of money, you lose the game.\n\nGiven a particular\u00a0n, return\u00a0the minimum amount of money you need to\u00a0guarantee a win regardless of what number I pick.\n\u00a0\nExample 1:\n\nInput: n = 10\nOutput: 16\nExplanation: The winning strategy is as follows:\n- The range is [1,10]. Guess 7.\n\u00a0   - If this is my number, your total is $0. Otherwise, you pay $7.\n\u00a0   - If my number is higher, the range is [8,10]. Guess 9.\n\u00a0       - If this is my number, your total is $7. Otherwise, you pay $9.\n\u00a0       - If my number is higher, it must be 10. Guess 10. Your total is $7 + $9 = $16.\n\u00a0       - If my number is lower, it must be 8. Guess 8. Your total is $7 + $9 = $16.\n\u00a0   - If my number is lower, the range is [1,6]. Guess 3.\n\u00a0       - If this is my number, your total is $7. Otherwise, you pay $3.\n\u00a0       - If my number is higher, the range is [4,6]. Guess 5.\n\u00a0           - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $5.\n\u00a0           - If my number is higher, it must be 6. Guess 6. Your total is $7 + $3 + $5 = $15.\n\u00a0           - If my number is lower, it must be 4. Guess 4. Your total is $7 + $3 + $5 = $15.\n\u00a0       - If my number is lower, the range is [1,2]. Guess 1.\n\u00a0           - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $1.\n\u00a0           - If my number is higher, it must be 2. Guess 2. Your total is $7 + $3 + $1 = $11.\nThe worst case in all these scenarios is that you pay $16. Hence, you only need $16 to guarantee a win.\n\nExample 2:\nInput: n = 1\nOutput: 0\nExplanation:\u00a0There is only one possible number, so you can guess 1 and not have to pay anything.\n\nExample 3:\nInput: n = 2\nOutput: 1\nExplanation:\u00a0There are two possible numbers, 1 and 2.\n- Guess 1.\n\u00a0   - If this is my number, your total is $0. Otherwise, you pay $1.\n\u00a0   - If my number is higher, it must be 2. Guess 2. Your total is $1.\nThe worst case is that you pay $1.\n\n\u00a0\nConstraints:\n\n1 <= n <= 200\n\n"], "376. Wiggle Subsequence": ["https://leetcode.com/problems/wiggle-subsequence", "A wiggle sequence is a sequence where the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with one element and a sequence with two non-equal elements are trivially wiggle sequences.\n\nFor example, [1, 7, 4, 9, 2, 5] is a wiggle sequence because the differences (6, -3, 5, -7, 3) alternate between positive and negative.\nIn contrast, [1, 4, 7, 2, 5] and [1, 7, 4, 5, 5] are not wiggle sequences. The first is not because its first two differences are positive, and the second is not because its last difference is zero.\n\nA subsequence is obtained by deleting some elements (possibly zero) from the original sequence, leaving the remaining elements in their original order.\nGiven an integer array nums, return the length of the longest wiggle subsequence of nums.\n\u00a0\nExample 1:\nInput: nums = [1,7,4,9,2,5]\nOutput: 6\nExplanation: The entire sequence is a wiggle sequence with differences (6, -3, 5, -7, 3).\n\nExample 2:\nInput: nums = [1,17,5,10,13,15,10,5,16,8]\nOutput: 7\nExplanation: There are several subsequences that achieve this length.\nOne is [1, 17, 10, 13, 10, 16, 8] with differences (16, -7, 3, -3, 6, -8).\n\nExample 3:\nInput: nums = [1,2,3,4,5,6,7,8,9]\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 1000\n0 <= nums[i] <= 1000\n\n\u00a0\nFollow up: Could you solve this in O(n) time?\n"], "377. Combination Sum IV": ["https://leetcode.com/problems/combination-sum-iv", "Given an array of distinct integers nums and a target integer target, return the number of possible combinations that add up to\u00a0target.\nThe test cases are generated so that the answer can fit in a 32-bit integer.\n\u00a0\nExample 1:\nInput: nums = [1,2,3], target = 4\nOutput: 7\nExplanation:\nThe possible combination ways are:\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\nNote that different sequences are counted as different combinations.\n\nExample 2:\nInput: nums = [9], target = 3\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 200\n1 <= nums[i] <= 1000\nAll the elements of nums are unique.\n1 <= target <= 1000\n\n\u00a0\nFollow up: What if negative numbers are allowed in the given array? How does it change the problem? What limitation we need to add to the question to allow negative numbers?\n"], "378. Kth Smallest Element in a Sorted Matrix": ["https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix", "Given an n x n matrix where each of the rows and columns is sorted in ascending order, return the kth smallest element in the matrix.\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\nYou must find a solution with a memory complexity better than O(n2).\n\u00a0\nExample 1:\nInput: matrix = [[1,5,9],[10,11,13],[12,13,15]], k = 8\nOutput: 13\nExplanation: The elements in the matrix are [1,5,9,10,11,12,13,13,15], and the 8th smallest number is 13\n\nExample 2:\nInput: matrix = [[-5]], k = 1\nOutput: -5\n\n\u00a0\nConstraints:\n\nn == matrix.length == matrix[i].length\n1 <= n <= 300\n-109 <= matrix[i][j] <= 109\nAll the rows and columns of matrix are guaranteed to be sorted in non-decreasing order.\n1 <= k <= n2\n\n\u00a0\nFollow up:\n\nCould you solve the problem with a constant memory (i.e., O(1) memory complexity)?\nCould you solve the problem in O(n) time complexity? The solution may be too advanced for an interview but you may find reading this paper fun.\n\n"], "380. Insert Delete GetRandom O(1)": ["https://leetcode.com/problems/insert-delete-getrandom-o1", "Implement the RandomizedSet class:\n\nRandomizedSet() Initializes the RandomizedSet object.\nbool insert(int val) Inserts an item val into the set if not present. Returns true if the item was not present, false otherwise.\nbool remove(int val) Removes an item val from the set if present. Returns true if the item was present, false otherwise.\nint getRandom() Returns a random element from the current set of elements (it's guaranteed that at least one element exists when this method is called). Each element must have the same probability of being returned.\n\nYou must implement the functions of the class such that each function works in\u00a0average\u00a0O(1)\u00a0time complexity.\n\u00a0\nExample 1:\nInput\n[\"RandomizedSet\", \"insert\", \"remove\", \"insert\", \"getRandom\", \"remove\", \"insert\", \"getRandom\"]\n[[], [1], [2], [2], [], [1], [2], []]\nOutput\n[null, true, false, true, 2, true, false, 2]\n\nExplanation\nRandomizedSet randomizedSet = new RandomizedSet();\nrandomizedSet.insert(1); // Inserts 1 to the set. Returns true as 1 was inserted successfully.\nrandomizedSet.remove(2); // Returns false as 2 does not exist in the set.\nrandomizedSet.insert(2); // Inserts 2 to the set, returns true. Set now contains [1,2].\nrandomizedSet.getRandom(); // getRandom() should return either 1 or 2 randomly.\nrandomizedSet.remove(1); // Removes 1 from the set, returns true. Set now contains [2].\nrandomizedSet.insert(2); // 2 was already in the set, so return false.\nrandomizedSet.getRandom(); // Since 2 is the only number in the set, getRandom() will always return 2.\n\n\u00a0\nConstraints:\n\n-231 <= val <= 231 - 1\nAt most 2 *\u00a0105 calls will be made to insert, remove, and getRandom.\nThere will be at least one element in the data structure when getRandom is called.\n\n"], "381. Insert Delete GetRandom O(1) - Duplicates allowed": ["https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed", "RandomizedCollection is a data structure that contains a collection of numbers, possibly duplicates (i.e., a multiset). It should support inserting and removing specific elements and also removing a random element.\nImplement the RandomizedCollection class:\n\nRandomizedCollection() Initializes the empty RandomizedCollection object.\nbool insert(int val) Inserts an item val into the multiset, even if the item is already present. Returns true if the item is not present, false otherwise.\nbool remove(int val) Removes an item val from the multiset if present. Returns true if the item is present, false otherwise. Note that if val has multiple occurrences in the multiset, we only remove one of them.\nint getRandom() Returns a random element from the current multiset of elements. The probability of each element being returned is linearly related to the number of same values the multiset contains.\n\nYou must implement the functions of the class such that each function works on average O(1) time complexity.\nNote: The test cases are generated such that getRandom will only be called if there is at least one item in the RandomizedCollection.\n\u00a0\nExample 1:\nInput\n[\"RandomizedCollection\", \"insert\", \"insert\", \"insert\", \"getRandom\", \"remove\", \"getRandom\"]\n[[], [1], [1], [2], [], [1], []]\nOutput\n[null, true, false, true, 2, true, 1]\n\nExplanation\nRandomizedCollection randomizedCollection = new RandomizedCollection();\nrandomizedCollection.insert(1);   // return true since the collection does not contain 1.\n                                  // Inserts 1 into the collection.\nrandomizedCollection.insert(1);   // return false since the collection contains 1.\n                                  // Inserts another 1 into the collection. Collection now contains [1,1].\nrandomizedCollection.insert(2);   // return true since the collection does not contain 2.\n                                  // Inserts 2 into the collection. Collection now contains [1,1,2].\nrandomizedCollection.getRandom(); // getRandom should:\n                                  // - return 1 with probability 2/3, or\n                                  // - return 2 with probability 1/3.\nrandomizedCollection.remove(1);   // return true since the collection contains 1.\n                                  // Removes 1 from the collection. Collection now contains [1,2].\nrandomizedCollection.getRandom(); // getRandom should return 1 or 2, both equally likely.\n\n\u00a0\nConstraints:\n\n-231 <= val <= 231 - 1\nAt most 2 * 105 calls in total will be made to insert, remove, and getRandom.\nThere will be at least one element in the data structure when getRandom is called.\n\n"], "382. Linked List Random Node": ["https://leetcode.com/problems/linked-list-random-node", "Given a singly linked list, return a random node's value from the linked list. Each node must have the same probability of being chosen.\nImplement the Solution class:\n\nSolution(ListNode head) Initializes the object with the head of the singly-linked list head.\nint getRandom() Chooses a node randomly from the list and returns its value. All the nodes of the list should be equally likely to be chosen.\n\n\u00a0\nExample 1:\n\nInput\n[\"Solution\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\"]\n[[[1, 2, 3]], [], [], [], [], []]\nOutput\n[null, 1, 3, 2, 2, 3]\n\nExplanation\nSolution solution = new Solution([1, 2, 3]);\nsolution.getRandom(); // return 1\nsolution.getRandom(); // return 3\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 3\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the linked list will be in the range [1, 104].\n-104 <= Node.val <= 104\nAt most 104 calls will be made to getRandom.\n\n\u00a0\nFollow up:\n\nWhat if the linked list is extremely large and its length is unknown to you?\nCould you solve this efficiently without using extra space?\n\n"], "383. Ransom Note": ["https://leetcode.com/problems/ransom-note", "Given two strings ransomNote and magazine, return true if ransomNote can be constructed from magazine and false otherwise.\nEach letter in magazine can only be used once in ransomNote.\n\u00a0\nExample 1:\nInput: ransomNote = \"a\", magazine = \"b\"\nOutput: false\nExample 2:\nInput: ransomNote = \"aa\", magazine = \"ab\"\nOutput: false\nExample 3:\nInput: ransomNote = \"aa\", magazine = \"aab\"\nOutput: true\n\n\u00a0\nConstraints:\n\n1 <= ransomNote.length, magazine.length <= 105\nransomNote and magazine consist of lowercase English letters.\n\n"], "384. Shuffle an Array": ["https://leetcode.com/problems/shuffle-an-array", "Given an integer array nums, design an algorithm to randomly shuffle the array. All permutations of the array should be equally likely as a result of the shuffling.\nImplement the Solution class:\n\nSolution(int[] nums) Initializes the object with the integer array nums.\nint[] reset() Resets the array to its original configuration and returns it.\nint[] shuffle() Returns a random shuffling of the array.\n\n\u00a0\nExample 1:\nInput\n[\"Solution\", \"shuffle\", \"reset\", \"shuffle\"]\n[[[1, 2, 3]], [], [], []]\nOutput\n[null, [3, 1, 2], [1, 2, 3], [1, 3, 2]]\n\nExplanation\nSolution solution = new Solution([1, 2, 3]);\nsolution.shuffle();    // Shuffle the array [1,2,3] and return its result.\n                       // Any permutation of [1,2,3] must be equally likely to be returned.\n                       // Example: return [3, 1, 2]\nsolution.reset();      // Resets the array back to its original configuration [1,2,3]. Return [1, 2, 3]\nsolution.shuffle();    // Returns the random shuffling of array [1,2,3]. Example: return [1, 3, 2]\n\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 50\n-106 <= nums[i] <= 106\nAll the elements of nums are unique.\nAt most 104 calls in total will be made to reset and shuffle.\n\n"], "385. Mini Parser": ["https://leetcode.com/problems/mini-parser", "Given a string s represents the serialization of a nested list, implement a parser to deserialize it and return the deserialized NestedInteger.\nEach element is either an integer or a list whose elements may also be integers or other lists.\n\u00a0\nExample 1:\nInput: s = \"324\"\nOutput: 324\nExplanation: You should return a NestedInteger object which contains a single integer 324.\n\nExample 2:\nInput: s = \"[123,[456,[789]]]\"\nOutput: [123,[456,[789]]]\nExplanation: Return a NestedInteger object containing a nested list with 2 elements:\n1. An integer containing value 123.\n2. A nested list containing two elements:\n    i.  An integer containing value 456.\n    ii. A nested list with one element:\n         a. An integer containing value 789\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 5 * 104\ns consists of digits, square brackets \"[]\", negative sign '-', and commas ','.\ns is the serialization of valid NestedInteger.\nAll the values in the input are in the range [-106, 106].\n\n"], "386. Lexicographical Numbers": ["https://leetcode.com/problems/lexicographical-numbers", "Given an integer n, return all the numbers in the range [1, n] sorted in lexicographical order.\nYou must write an algorithm that runs in\u00a0O(n)\u00a0time and uses O(1) extra space.\u00a0\n\u00a0\nExample 1:\nInput: n = 13\nOutput: [1,10,11,12,13,2,3,4,5,6,7,8,9]\nExample 2:\nInput: n = 2\nOutput: [1,2]\n\n\u00a0\nConstraints:\n\n1 <= n <= 5 * 104\n\n"], "387. First Unique Character in a String": ["https://leetcode.com/problems/first-unique-character-in-a-string", "Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.\n\u00a0\nExample 1:\nInput: s = \"leetcode\"\nOutput: 0\nExample 2:\nInput: s = \"loveleetcode\"\nOutput: 2\nExample 3:\nInput: s = \"aabb\"\nOutput: -1\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns consists of only lowercase English letters.\n\n"], "388. Longest Absolute File Path": ["https://leetcode.com/problems/longest-absolute-file-path", "Suppose we have a file system that stores both files and directories. An example of one system is represented in the following picture:\n\nHere, we have dir as the only directory in the root. dir contains two subdirectories, subdir1 and subdir2. subdir1 contains a file file1.ext and subdirectory subsubdir1. subdir2 contains a subdirectory subsubdir2, which contains a file file2.ext.\nIn text form, it looks like this (with \u27f6 representing the tab character):\ndir\n\u27f6 subdir1\n\u27f6 \u27f6 file1.ext\n\u27f6 \u27f6 subsubdir1\n\u27f6 subdir2\n\u27f6 \u27f6 subsubdir2\n\u27f6 \u27f6 \u27f6 file2.ext\n\nIf we were to write this representation in code, it will look like this: \"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\". Note that the '\\n' and '\\t' are the new-line and tab characters.\nEvery file and directory has a unique absolute path in the file system, which is the order of directories that must be opened to reach the file/directory itself, all concatenated by '/'s. Using the above example, the absolute path to file2.ext is \"dir/subdir2/subsubdir2/file2.ext\". Each directory name consists of letters, digits, and/or spaces. Each file name is of the form name.extension, where name and extension consist of letters, digits, and/or spaces.\nGiven a string input representing the file system in the explained format, return the length of the longest absolute path to a file in the abstracted file system. If there is no file in the system, return 0.\nNote that the testcases are generated such that the file system is valid and no file or directory name has length 0.\n\u00a0\nExample 1:\n\nInput: input = \"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext\"\nOutput: 20\nExplanation: We have only one file, and the absolute path is \"dir/subdir2/file.ext\" of length 20.\n\nExample 2:\n\nInput: input = \"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\"\nOutput: 32\nExplanation: We have two files:\n\"dir/subdir1/file1.ext\" of length 21\n\"dir/subdir2/subsubdir2/file2.ext\" of length 32.\nWe return 32 since it is the longest absolute path to a file.\n\nExample 3:\nInput: input = \"a\"\nOutput: 0\nExplanation: We do not have any files, just a single directory named \"a\".\n\n\u00a0\nConstraints:\n\n1 <= input.length <= 104\ninput may contain lowercase or uppercase English letters, a new line character '\\n', a tab character '\\t', a dot '.', a space ' ', and digits.\nAll file and directory names have positive length.\n\n"], "389. Find the Difference": ["https://leetcode.com/problems/find-the-difference", "You are given two strings s and t.\nString t is generated by random shuffling string s and then add one more letter at a random position.\nReturn the letter that was added to t.\n\u00a0\nExample 1:\nInput: s = \"abcd\", t = \"abcde\"\nOutput: \"e\"\nExplanation: 'e' is the letter that was added.\n\nExample 2:\nInput: s = \"\", t = \"y\"\nOutput: \"y\"\n\n\u00a0\nConstraints:\n\n0 <= s.length <= 1000\nt.length == s.length + 1\ns and t consist of lowercase English letters.\n\n"], "390. Elimination Game": ["https://leetcode.com/problems/elimination-game", "You have a list arr of all integers in the range [1, n] sorted in a strictly increasing order. Apply the following algorithm on arr:\n\nStarting from left to right, remove the first number and every other number afterward until you reach the end of the list.\nRepeat the previous step again, but this time from right to left, remove the rightmost number and every other number from the remaining numbers.\nKeep repeating the steps again, alternating left to right and right to left, until a single number remains.\n\nGiven the integer n, return the last number that remains in arr.\n\u00a0\nExample 1:\nInput: n = 9\nOutput: 6\nExplanation:\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\narr = [2, 4, 6, 8]\narr = [2, 6]\narr = [6]\n\nExample 2:\nInput: n = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\n\n"], "391. Perfect Rectangle": ["https://leetcode.com/problems/perfect-rectangle", "Given an array rectangles where rectangles[i] = [xi, yi, ai, bi] represents an axis-aligned rectangle. The bottom-left point of the rectangle is (xi, yi) and the top-right point of it is (ai, bi).\nReturn true if all the rectangles together form an exact cover of a rectangular region.\n\u00a0\nExample 1:\n\nInput: rectangles = [[1,1,3,3],[3,1,4,2],[3,2,4,4],[1,3,2,4],[2,3,3,4]]\nOutput: true\nExplanation: All 5 rectangles together form an exact cover of a rectangular region.\n\nExample 2:\n\nInput: rectangles = [[1,1,2,3],[1,3,2,4],[3,1,4,2],[3,2,4,4]]\nOutput: false\nExplanation: Because there is a gap between the two rectangular regions.\n\nExample 3:\n\nInput: rectangles = [[1,1,3,3],[3,1,4,2],[1,3,2,4],[2,2,4,4]]\nOutput: false\nExplanation: Because two of the rectangles overlap with each other.\n\n\u00a0\nConstraints:\n\n1 <= rectangles.length <= 2 * 104\nrectangles[i].length == 4\n-105 <= xi, yi, ai, bi <= 105\n\n"], "392. Is Subsequence": ["https://leetcode.com/problems/is-subsequence", "Given two strings s and t, return true if s is a subsequence of t, or false otherwise.\nA subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., \"ace\" is a subsequence of \"abcde\" while \"aec\" is not).\n\u00a0\nExample 1:\nInput: s = \"abc\", t = \"ahbgdc\"\nOutput: true\nExample 2:\nInput: s = \"axc\", t = \"ahbgdc\"\nOutput: false\n\n\u00a0\nConstraints:\n\n0 <= s.length <= 100\n0 <= t.length <= 104\ns and t consist only of lowercase English letters.\n\n\u00a0\nFollow up: Suppose there are lots of incoming s, say s1, s2, ..., sk where k >= 109, and you want to check one by one to see if t has its subsequence. In this scenario, how would you change your code?"], "393. UTF-8 Validation": ["https://leetcode.com/problems/utf-8-validation", "Given an integer array data representing the data, return whether it is a valid UTF-8 encoding (i.e. it translates to a sequence of valid UTF-8 encoded characters).\nA character in UTF8 can be from 1 to 4 bytes long, subjected to the following rules:\n\nFor a 1-byte character, the first bit is a 0, followed by its Unicode code.\nFor an n-bytes character, the first n bits are all one's, the n + 1 bit is 0, followed by n - 1 bytes with the most significant 2 bits being 10.\n\nThis is how the UTF-8 encoding would work:\n     Number of Bytes   |        UTF-8 Octet Sequence\n                       |              (binary)\n   --------------------+-----------------------------------------\n            1          |   0xxxxxxx\n            2          |   110xxxxx 10xxxxxx\n            3          |   1110xxxx 10xxxxxx 10xxxxxx\n            4          |   11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n\nx denotes a bit in the binary form of a byte that may be either 0 or 1.\nNote: The input is an array of integers. Only the least significant 8 bits of each integer is used to store the data. This means each integer represents only 1 byte of data.\n\u00a0\nExample 1:\nInput: data = [197,130,1]\nOutput: true\nExplanation: data represents the octet sequence: 11000101 10000010 00000001.\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\n\nExample 2:\nInput: data = [235,140,4]\nOutput: false\nExplanation: data represented the octet sequence: 11101011 10001100 00000100.\nThe first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.\nThe next byte is a continuation byte which starts with 10 and that's correct.\nBut the second continuation byte does not start with 10, so it is invalid.\n\n\u00a0\nConstraints:\n\n1 <= data.length <= 2 * 104\n0 <= data[i] <= 255\n\n"], "394. Decode String": ["https://leetcode.com/problems/decode-string", "Given an encoded string, return its decoded string.\nThe encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer.\nYou may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc.\nFurthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there will not be input like 3a or 2[4].\n\u00a0\nExample 1:\nInput: s = \"3[a]2[bc]\"\nOutput: \"aaabcbc\"\n\nExample 2:\nInput: s = \"3[a2[c]]\"\nOutput: \"accaccacc\"\n\nExample 3:\nInput: s = \"2[abc]3[cd]ef\"\nOutput: \"abcabccdcdcdef\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 30\ns consists of lowercase English letters, digits, and square brackets '[]'.\ns is guaranteed to be a valid input.\nAll the integers in s are in the range [1, 300].\n\n"], "395. Longest Substring with At Least K Repeating Characters": ["https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters", "Given a string s and an integer k, return the length of the longest substring of s such that the frequency of each character in this substring is greater than or equal to k.\n\u00a0\nExample 1:\nInput: s = \"aaabb\", k = 3\nOutput: 3\nExplanation: The longest substring is \"aaa\", as 'a' is repeated 3 times.\n\nExample 2:\nInput: s = \"ababbc\", k = 2\nOutput: 5\nExplanation: The longest substring is \"ababb\", as 'a' is repeated 2 times and 'b' is repeated 3 times.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 104\ns consists of only lowercase English letters.\n1 <= k <= 105\n\n"], "396. Rotate Function": ["https://leetcode.com/problems/rotate-function", "You are given an integer array nums of length n.\nAssume arrk to be an array obtained by rotating nums by k positions clock-wise. We define the rotation function F on nums as follow:\n\nF(k) = 0 * arrk[0] + 1 * arrk[1] + ... + (n - 1) * arrk[n - 1].\n\nReturn the maximum value of F(0), F(1), ..., F(n-1).\nThe test cases are generated so that the answer fits in a 32-bit integer.\n\u00a0\nExample 1:\nInput: nums = [4,3,2,6]\nOutput: 26\nExplanation:\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\n\nExample 2:\nInput: nums = [100]\nOutput: 0\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= n <= 105\n-100 <= nums[i] <= 100\n\n"], "397. Integer Replacement": ["https://leetcode.com/problems/integer-replacement", "Given a positive integer n,\u00a0you can apply one of the following\u00a0operations:\n\nIf n is even, replace n with n / 2.\nIf n is odd, replace n with either n + 1 or n - 1.\n\nReturn the minimum number of operations needed for n to become 1.\n\u00a0\nExample 1:\nInput: n = 8\nOutput: 3\nExplanation: 8 -> 4 -> 2 -> 1\n\nExample 2:\nInput: n = 7\nOutput: 4\nExplanation: 7 -> 8 -> 4 -> 2 -> 1\nor 7 -> 6 -> 3 -> 2 -> 1\n\nExample 3:\nInput: n = 4\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= n <= 231 - 1\n\n"], "398. Random Pick Index": ["https://leetcode.com/problems/random-pick-index", "Given an integer array nums with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.\nImplement the Solution class:\n\nSolution(int[] nums) Initializes the object with the array nums.\nint pick(int target) Picks a random index i from nums where nums[i] == target. If there are multiple valid i's, then each index should have an equal probability of returning.\n\n\u00a0\nExample 1:\nInput\n[\"Solution\", \"pick\", \"pick\", \"pick\"]\n[[[1, 2, 3, 3, 3]], [3], [1], [3]]\nOutput\n[null, 4, 0, 2]\n\nExplanation\nSolution solution = new Solution([1, 2, 3, 3, 3]);\nsolution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\nsolution.pick(1); // It should return 0. Since in the array only nums[0] is equal to 1.\nsolution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2 * 104\n-231 <= nums[i] <= 231 - 1\ntarget is an integer from nums.\nAt most 104 calls will be made to pick.\n\n"], "399. Evaluate Division": ["https://leetcode.com/problems/evaluate-division", "You are given an array of variable pairs equations and an array of real numbers values, where equations[i] = [Ai, Bi] and values[i] represent the equation Ai / Bi = values[i]. Each Ai or Bi is a string that represents a single variable.\nYou are also given some queries, where queries[j] = [Cj, Dj] represents the jth query where you must find the answer for Cj / Dj = ?.\nReturn the answers to all queries. If a single answer cannot be determined, return -1.0.\nNote: The input is always valid. You may assume that evaluating the queries will not result in division by zero and that there is no contradiction.\n\u00a0\nExample 1:\nInput: equations = [[\"a\",\"b\"],[\"b\",\"c\"]], values = [2.0,3.0], queries = [[\"a\",\"c\"],[\"b\",\"a\"],[\"a\",\"e\"],[\"a\",\"a\"],[\"x\",\"x\"]]\nOutput: [6.00000,0.50000,-1.00000,1.00000,-1.00000]\nExplanation: \nGiven: a / b = 2.0, b / c = 3.0\nqueries are: a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ?\nreturn: [6.0, 0.5, -1.0, 1.0, -1.0 ]\n\nExample 2:\nInput: equations = [[\"a\",\"b\"],[\"b\",\"c\"],[\"bc\",\"cd\"]], values = [1.5,2.5,5.0], queries = [[\"a\",\"c\"],[\"c\",\"b\"],[\"bc\",\"cd\"],[\"cd\",\"bc\"]]\nOutput: [3.75000,0.40000,5.00000,0.20000]\n\nExample 3:\nInput: equations = [[\"a\",\"b\"]], values = [0.5], queries = [[\"a\",\"b\"],[\"b\",\"a\"],[\"a\",\"c\"],[\"x\",\"y\"]]\nOutput: [0.50000,2.00000,-1.00000,-1.00000]\n\n\u00a0\nConstraints:\n\n1 <= equations.length <= 20\nequations[i].length == 2\n1 <= Ai.length, Bi.length <= 5\nvalues.length == equations.length\n0.0 < values[i] <= 20.0\n1 <= queries.length <= 20\nqueries[i].length == 2\n1 <= Cj.length, Dj.length <= 5\nAi, Bi, Cj, Dj consist of lower case English letters and digits.\n\n"], "400. Nth Digit": ["https://leetcode.com/problems/nth-digit", "Given an integer n, return the nth digit of the infinite integer sequence [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...].\n\u00a0\nExample 1:\nInput: n = 3\nOutput: 3\n\nExample 2:\nInput: n = 11\nOutput: 0\nExplanation: The 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.\n\n\u00a0\nConstraints:\n\n1 <= n <= 231 - 1\n\n"], "401. Binary Watch": ["https://leetcode.com/problems/binary-watch", "A binary watch has 4 LEDs on the top which represent the hours (0-11), and the 6 LEDs on the bottom represent the minutes (0-59). Each LED represents a zero or one, with the least significant bit on the right.\n\nFor example, the below binary watch reads \"4:51\".\n\n\nGiven an integer turnedOn which represents the number of LEDs that are currently on, return all possible times the watch could represent. You may return the answer in any order.\nThe hour must not contain a leading zero.\n\nFor example, \"01:00\" is not valid. It should be \"1:00\".\n\nThe minute must be consist of two digits and may contain a leading zero.\n\nFor example, \"10:2\" is not valid. It should be \"10:02\".\n\n\u00a0\nExample 1:\nInput: turnedOn = 1\nOutput: [\"0:01\",\"0:02\",\"0:04\",\"0:08\",\"0:16\",\"0:32\",\"1:00\",\"2:00\",\"4:00\",\"8:00\"]\nExample 2:\nInput: turnedOn = 9\nOutput: []\n\n\u00a0\nConstraints:\n\n0 <= turnedOn <= 10\n\n"], "402. Remove K Digits": ["https://leetcode.com/problems/remove-k-digits", "Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num.\n\u00a0\nExample 1:\nInput: num = \"1432219\", k = 3\nOutput: \"1219\"\nExplanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\n\nExample 2:\nInput: num = \"10200\", k = 1\nOutput: \"200\"\nExplanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\n\nExample 3:\nInput: num = \"10\", k = 2\nOutput: \"0\"\nExplanation: Remove all the digits from the number and it is left with nothing which is 0.\n\n\u00a0\nConstraints:\n\n1 <= k <= num.length <= 105\nnum consists of only digits.\nnum does not have any leading zeros except for the zero itself.\n\n"], "403. Frog Jump": ["https://leetcode.com/problems/frog-jump", "A frog is crossing a river. The river is divided into some number of units, and at each unit, there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.\nGiven a list of stones' positions (in units) in sorted ascending order, determine if the frog can cross the river by landing on the last stone. Initially, the frog is on the first stone and assumes the first jump must be 1 unit.\nIf the frog's last jump was k units, its next jump must be either k - 1, k, or k + 1 units. The frog can only jump in the forward direction.\n\u00a0\nExample 1:\nInput: stones = [0,1,3,5,6,8,12,17]\nOutput: true\nExplanation: The frog can jump to the last stone by jumping 1 unit to the 2nd stone, then 2 units to the 3rd stone, then 2 units to the 4th stone, then 3 units to the 6th stone, 4 units to the 7th stone, and 5 units to the 8th stone.\n\nExample 2:\nInput: stones = [0,1,2,3,4,8,9,11]\nOutput: false\nExplanation: There is no way to jump to the last stone as the gap between the 5th and 6th stone is too large.\n\n\u00a0\nConstraints:\n\n2 <= stones.length <= 2000\n0 <= stones[i] <= 231 - 1\nstones[0] == 0\nstones\u00a0is sorted in a strictly increasing order.\n\n"], "404. Sum of Left Leaves": ["https://leetcode.com/problems/sum-of-left-leaves", "Given the root of a binary tree, return the sum of all left leaves.\nA leaf is a node with no children. A left leaf is a leaf that is the left child of another node.\n\u00a0\nExample 1:\n\nInput: root = [3,9,20,null,null,15,7]\nOutput: 24\nExplanation: There are two left leaves in the binary tree, with values 9 and 15 respectively.\n\nExample 2:\nInput: root = [1]\nOutput: 0\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 1000].\n-1000 <= Node.val <= 1000\n\n"], "405. Convert a Number to Hexadecimal": ["https://leetcode.com/problems/convert-a-number-to-hexadecimal", "Given an integer num, return a string representing its hexadecimal representation. For negative integers, two\u2019s complement method is used.\nAll the letters in the answer string should be lowercase characters, and there should not be any leading zeros in the answer except for the zero itself.\nNote:\u00a0You are not allowed to use any built-in library method to directly solve this problem.\n\u00a0\nExample 1:\nInput: num = 26\nOutput: \"1a\"\nExample 2:\nInput: num = -1\nOutput: \"ffffffff\"\n\n\u00a0\nConstraints:\n\n-231 <= num <= 231 - 1\n\n"], "406. Queue Reconstruction by Height": ["https://leetcode.com/problems/queue-reconstruction-by-height", "You are given an array of people, people, which are the attributes of some people in a queue (not necessarily in order). Each people[i] = [hi, ki] represents the ith person of height hi with exactly ki other people in front who have a height greater than or equal to hi.\nReconstruct and return the queue that is represented by the input array people. The returned queue should be formatted as an array queue, where queue[j] = [hj, kj] is the attributes of the jth person in the queue (queue[0] is the person at the front of the queue).\n\u00a0\nExample 1:\nInput: people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]\nOutput: [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]\nExplanation:\nPerson 0 has height 5 with no other people taller or the same height in front.\nPerson 1 has height 7 with no other people taller or the same height in front.\nPerson 2 has height 5 with two persons taller or the same height in front, which is person 0 and 1.\nPerson 3 has height 6 with one person taller or the same height in front, which is person 1.\nPerson 4 has height 4 with four people taller or the same height in front, which are people 0, 1, 2, and 3.\nPerson 5 has height 7 with one person taller or the same height in front, which is person 1.\nHence [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] is the reconstructed queue.\n\nExample 2:\nInput: people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]\nOutput: [[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]\n\n\u00a0\nConstraints:\n\n1 <= people.length <= 2000\n0 <= hi <= 106\n0 <= ki < people.length\nIt is guaranteed that the queue can be reconstructed.\n\n"], "407. Trapping Rain Water II": ["https://leetcode.com/problems/trapping-rain-water-ii", "Given an m x n integer matrix heightMap representing the height of each unit cell in a 2D elevation map, return the volume of water it can trap after raining.\n\u00a0\nExample 1:\n\nInput: heightMap = [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]\nOutput: 4\nExplanation: After the rain, water is trapped between the blocks.\nWe have two small ponds 1 and 3 units trapped.\nThe total volume of water trapped is 4.\n\nExample 2:\n\nInput: heightMap = [[3,3,3,3,3],[3,2,2,2,3],[3,2,1,2,3],[3,2,2,2,3],[3,3,3,3,3]]\nOutput: 10\n\n\u00a0\nConstraints:\n\nm == heightMap.length\nn == heightMap[i].length\n1 <= m, n <= 200\n0 <= heightMap[i][j] <= 2 * 104\n\n"], "409. Longest Palindrome": ["https://leetcode.com/problems/longest-palindrome", "Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome\u00a0that can be built with those letters.\nLetters are case sensitive, for example,\u00a0\"Aa\" is not considered a palindrome here.\n\u00a0\nExample 1:\nInput: s = \"abccccdd\"\nOutput: 7\nExplanation:\nOne longest palindrome that can be built is \"dccaccd\", whose length is 7.\n\nExample 2:\nInput: s = \"a\"\nOutput: 1\n\nExample 3:\nInput: s = \"bb\"\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 2000\ns consists of lowercase and/or uppercase English\u00a0letters only.\n\n"], "410. Split Array Largest Sum": ["https://leetcode.com/problems/split-array-largest-sum", "Given an array nums which consists of non-negative integers and an integer m, you can split the array into m non-empty continuous subarrays.\nWrite an algorithm to minimize the largest sum among these m subarrays.\n\u00a0\nExample 1:\nInput: nums = [7,2,5,10,8], m = 2\nOutput: 18\nExplanation:\nThere are four ways to split nums into two subarrays.\nThe best way is to split it into [7,2,5] and [10,8],\nwhere the largest sum among the two subarrays is only 18.\n\nExample 2:\nInput: nums = [1,2,3,4,5], m = 2\nOutput: 9\n\nExample 3:\nInput: nums = [1,4,4], m = 3\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 1000\n0 <= nums[i] <= 106\n1 <= m <= min(50, nums.length)\n\n"], "412. Fizz Buzz": ["https://leetcode.com/problems/fizz-buzz", "Given an integer n, return a string array answer (1-indexed) where:\n\nanswer[i] == \"FizzBuzz\" if i is divisible by 3 and 5.\nanswer[i] == \"Fizz\" if i is divisible by 3.\nanswer[i] == \"Buzz\" if i is divisible by 5.\nanswer[i] == i (as a string) if none of the above conditions are true.\n\n\u00a0\nExample 1:\nInput: n = 3\nOutput: [\"1\",\"2\",\"Fizz\"]\nExample 2:\nInput: n = 5\nOutput: [\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\"]\nExample 3:\nInput: n = 15\nOutput: [\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\",\"Fizz\",\"7\",\"8\",\"Fizz\",\"Buzz\",\"11\",\"Fizz\",\"13\",\"14\",\"FizzBuzz\"]\n\n\u00a0\nConstraints:\n\n1 <= n <= 104\n\n"], "413. Arithmetic Slices": ["https://leetcode.com/problems/arithmetic-slices", "An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n\nFor example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.\n\nGiven an integer array nums, return the number of arithmetic subarrays of nums.\nA subarray is a contiguous subsequence of the array.\n\u00a0\nExample 1:\nInput: nums = [1,2,3,4]\nOutput: 3\nExplanation: We have 3 arithmetic slices in nums: [1, 2, 3], [2, 3, 4] and [1,2,3,4] itself.\n\nExample 2:\nInput: nums = [1]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5000\n-1000 <= nums[i] <= 1000\n\n"], "414. Third Maximum Number": ["https://leetcode.com/problems/third-maximum-number", "Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number.\n\u00a0\nExample 1:\nInput: nums = [3,2,1]\nOutput: 1\nExplanation:\nThe first distinct maximum is 3.\nThe second distinct maximum is 2.\nThe third distinct maximum is 1.\n\nExample 2:\nInput: nums = [1,2]\nOutput: 2\nExplanation:\nThe first distinct maximum is 2.\nThe second distinct maximum is 1.\nThe third distinct maximum does not exist, so the maximum (2) is returned instead.\n\nExample 3:\nInput: nums = [2,2,3,1]\nOutput: 1\nExplanation:\nThe first distinct maximum is 3.\nThe second distinct maximum is 2 (both 2's are counted together since they have the same value).\nThe third distinct maximum is 1.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-231 <= nums[i] <= 231 - 1\n\n\u00a0\nFollow up: Can you find an O(n) solution?"], "415. Add Strings": ["https://leetcode.com/problems/add-strings", "Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string.\nYou must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.\n\u00a0\nExample 1:\nInput: num1 = \"11\", num2 = \"123\"\nOutput: \"134\"\n\nExample 2:\nInput: num1 = \"456\", num2 = \"77\"\nOutput: \"533\"\n\nExample 3:\nInput: num1 = \"0\", num2 = \"0\"\nOutput: \"0\"\n\n\u00a0\nConstraints:\n\n1 <= num1.length, num2.length <= 104\nnum1 and num2 consist of only digits.\nnum1 and num2 don't have any leading zeros except for the zero itself.\n\n"], "416. Partition Equal Subset Sum": ["https://leetcode.com/problems/partition-equal-subset-sum", "Given a non-empty array nums containing only positive integers, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.\n\u00a0\nExample 1:\nInput: nums = [1,5,11,5]\nOutput: true\nExplanation: The array can be partitioned as [1, 5, 5] and [11].\n\nExample 2:\nInput: nums = [1,2,3,5]\nOutput: false\nExplanation: The array cannot be partitioned into equal sum subsets.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 200\n1 <= nums[i] <= 100\n\n"], "417. Pacific Atlantic Water Flow": ["https://leetcode.com/problems/pacific-atlantic-water-flow", "There is an m x n rectangular island that borders both the Pacific Ocean and Atlantic Ocean. The Pacific Ocean touches the island's left and top edges, and the Atlantic Ocean touches the island's right and bottom edges.\nThe island is partitioned into a grid of square cells. You are given an m x n integer matrix heights where heights[r][c] represents the height above sea level of the cell at coordinate (r, c).\nThe island receives a lot of rain, and the rain water can flow to neighboring cells directly north, south, east, and west if the neighboring cell's height is less than or equal to the current cell's height. Water can flow from any cell adjacent to an ocean into the ocean.\nReturn a 2D list of grid coordinates result where result[i] = [ri, ci] denotes that rain water can flow from cell (ri, ci) to both the Pacific and Atlantic oceans.\n\u00a0\nExample 1:\n\nInput: heights = [[1,2,2,3,5],[3,2,3,4,4],[2,4,5,3,1],[6,7,1,4,5],[5,1,1,2,4]]\nOutput: [[0,4],[1,3],[1,4],[2,2],[3,0],[3,1],[4,0]]\n\nExample 2:\nInput: heights = [[2,1],[1,2]]\nOutput: [[0,0],[0,1],[1,0],[1,1]]\n\n\u00a0\nConstraints:\n\nm == heights.length\nn == heights[r].length\n1 <= m, n <= 200\n0 <= heights[r][c] <= 105\n\n"], "419. Battleships in a Board": ["https://leetcode.com/problems/battleships-in-a-board", "Given an m x n matrix board where each cell is a battleship 'X' or empty '.', return the number of the battleships on board.\nBattleships can only be placed horizontally or vertically on board. In other words, they can only be made of the shape 1 x k (1 row, k columns) or k x 1 (k rows, 1 column), where k can be of any size. At least one horizontal or vertical cell separates between two battleships (i.e., there are no adjacent battleships).\n\u00a0\nExample 1:\n\nInput: board = [[\"X\",\".\",\".\",\"X\"],[\".\",\".\",\".\",\"X\"],[\".\",\".\",\".\",\"X\"]]\nOutput: 2\n\nExample 2:\nInput: board = [[\".\"]]\nOutput: 0\n\n\u00a0\nConstraints:\n\nm == board.length\nn == board[i].length\n1 <= m, n <= 200\nboard[i][j] is either '.' or 'X'.\n\n\u00a0\nFollow up: Could you do it in one-pass, using only O(1) extra memory and without modifying the values board?\n"], "420. Strong Password Checker": ["https://leetcode.com/problems/strong-password-checker", "A password is considered strong if the below conditions are all met:\n\nIt has at least 6 characters and at most 20 characters.\nIt contains at least one lowercase letter, at least one uppercase letter, and at least one digit.\nIt does\u00a0not contain three repeating characters in a row (i.e.,\u00a0\"...aaa...\" is weak, but \"...aa...a...\" is strong, assuming other conditions are met).\n\nGiven a string password, return the minimum number of steps required to make password strong. if password is already strong, return 0.\nIn one step, you can:\n\nInsert one character to password,\nDelete one character from password, or\nReplace\u00a0one character of password with another character.\n\n\u00a0\nExample 1:\nInput: password = \"a\"\nOutput: 5\nExample 2:\nInput: password = \"aA1\"\nOutput: 3\nExample 3:\nInput: password = \"1337C0d3\"\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= password.length <= 50\npassword consists of letters, digits, dot\u00a0'.' or exclamation mark '!'.\n\n"], "421. Maximum XOR of Two Numbers in an Array": ["https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array", "Given an integer array nums, return the maximum result of nums[i] XOR nums[j], where 0 <= i <= j < n.\n\u00a0\nExample 1:\nInput: nums = [3,10,5,25,2,8]\nOutput: 28\nExplanation: The maximum result is 5 XOR 25 = 28.\n\nExample 2:\nInput: nums = [14,70,53,83,49,91,36,80,92,51,66,70]\nOutput: 127\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2 * 105\n0 <= nums[i] <= 231 - 1\n\n"], "423. Reconstruct Original Digits from English": ["https://leetcode.com/problems/reconstruct-original-digits-from-english", "Given a string s containing an out-of-order English representation of digits 0-9, return the digits in ascending order.\n\u00a0\nExample 1:\nInput: s = \"owoztneoer\"\nOutput: \"012\"\nExample 2:\nInput: s = \"fviefuro\"\nOutput: \"45\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns[i] is one of the characters [\"e\",\"g\",\"f\",\"i\",\"h\",\"o\",\"n\",\"s\",\"r\",\"u\",\"t\",\"w\",\"v\",\"x\",\"z\"].\ns is guaranteed to be valid.\n\n"], "424. Longest Repeating Character Replacement": ["https://leetcode.com/problems/longest-repeating-character-replacement", "You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.\nReturn the length of the longest substring containing the same letter you can get after performing the above operations.\n\u00a0\nExample 1:\nInput: s = \"ABAB\", k = 2\nOutput: 4\nExplanation: Replace the two 'A's with two 'B's or vice versa.\n\nExample 2:\nInput: s = \"AABABBA\", k = 1\nOutput: 4\nExplanation: Replace the one 'A' in the middle with 'B' and form \"AABBBBA\".\nThe substring \"BBBB\" has the longest repeating letters, which is 4.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns consists of only uppercase English letters.\n0 <= k <= s.length\n\n"], "427. Construct Quad Tree": ["https://leetcode.com/problems/construct-quad-tree", "Given a n * n matrix grid of 0's and 1's only. We want to represent the grid with a Quad-Tree.\nReturn the root of the Quad-Tree representing the grid.\nNotice that you can assign the value of a node to True or False when isLeaf is False, and both are accepted in the answer.\nA Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:\n\nval: True if the node represents a grid of 1's or False if the node represents a grid of 0's.\nisLeaf: True if the node is leaf node on the tree or False if the node has the four children.\n\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n}\nWe can construct a Quad-Tree from a two-dimensional area using the following steps:\n\nIf the current grid has the same value (i.e all 1's or all 0's) set isLeaf True and set val to the value of the grid and set the four children to Null and stop.\nIf the current grid has different values, set isLeaf to False and set val to any value and divide the current grid into four sub-grids as shown in the photo.\nRecurse for each of the children with the proper sub-grid.\n\n\nIf you want to know more about the Quad-Tree, you can refer to the wiki.\nQuad-Tree format:\nThe output represents the serialized format of a Quad-Tree using level order traversal, where null signifies a path terminator where no node exists below.\nIt is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list [isLeaf, val].\nIf the value of isLeaf or val is True we represent it as 1 in the list [isLeaf, val] and if the value of isLeaf or val is False we represent it as 0.\n\u00a0\nExample 1:\n\nInput: grid = [[0,1],[1,0]]\nOutput: [[0,1],[1,0],[1,1],[1,1],[1,0]]\nExplanation: The explanation of this example is shown below:\nNotice that 0 represnts False and 1 represents True in the photo representing the Quad-Tree.\n\n\nExample 2:\n\nInput: grid = [[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0]]\nOutput: [[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\nExplanation: All values in the grid are not the same. We divide the grid into four sub-grids.\nThe topLeft, bottomLeft and bottomRight each has the same value.\nThe topRight have different values so we divide it into 4 sub-grids where each has the same value.\nExplanation is shown in the photo below:\n\n\n\u00a0\nConstraints:\n\nn == grid.length == grid[i].length\nn == 2x where 0 <= x <= 6\n\n"], "429. N-ary Tree Level Order Traversal": ["https://leetcode.com/problems/n-ary-tree-level-order-traversal", "Given an n-ary tree, return the level order traversal of its nodes' values.\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n\u00a0\nExample 1:\n\nInput: root = [1,null,3,2,4,null,5,6]\nOutput: [[1],[3,2,4],[5,6]]\n\nExample 2:\n\nInput: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\nOutput: [[1],[2,3,4,5],[6,7,8,9,10],[11,12,13],[14]]\n\n\u00a0\nConstraints:\n\nThe height of the n-ary tree is less than or equal to 1000\nThe total number of nodes is between [0, 104]\n\n"], "430. Flatten a Multilevel Doubly Linked List": ["https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list", "You are given a doubly linked list, which contains nodes that have a next pointer, a previous pointer, and an additional child pointer. This child pointer may or may not point to a separate doubly linked list, also containing these special nodes. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure as shown in the example below.\nGiven the head of the first level of the list, flatten the list so that all the nodes appear in a single-level, doubly linked list. Let curr be a node with a child list. The nodes in the child list should appear after curr and before curr.next in the flattened list.\nReturn the head of the flattened list. The nodes in the list must have all of their child pointers set to null.\n\u00a0\nExample 1:\n\nInput: head = [1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\nOutput: [1,2,3,7,8,11,12,9,10,4,5,6]\nExplanation: The multilevel linked list in the input is shown.\nAfter flattening the multilevel linked list it becomes:\n\n\nExample 2:\n\nInput: head = [1,2,null,3]\nOutput: [1,3,2]\nExplanation: The multilevel linked list in the input is shown.\nAfter flattening the multilevel linked list it becomes:\n\n\nExample 3:\nInput: head = []\nOutput: []\nExplanation: There could be empty list in the input.\n\n\u00a0\nConstraints:\n\nThe number of Nodes will not exceed 1000.\n1 <= Node.val <= 105\n\n\u00a0\nHow the multilevel linked list is represented in test cases:\nWe use the multilevel linked list from Example 1 above:\n 1---2---3---4---5---6--NULL\n         |\n         7---8---9---10--NULL\n             |\n             11--12--NULL\nThe serialization of each level is as follows:\n[1,2,3,4,5,6,null]\n[7,8,9,10,null]\n[11,12,null]\n\nTo serialize all levels together, we will add nulls in each level to signify no node connects to the upper node of the previous level. The serialization becomes:\n[1,    2,    3, 4, 5, 6, null]\n             |\n[null, null, 7,    8, 9, 10, null]\n                   |\n[            null, 11, 12, null]\n\nMerging the serialization of each level and removing trailing nulls we obtain:\n[1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\n\n"], "432. All O`one Data Structure": ["https://leetcode.com/problems/all-oone-data-structure", "Design a data structure to store the strings' count with the ability to return the strings with minimum and maximum counts.\nImplement the AllOne class:\n\nAllOne() Initializes the object of the data structure.\ninc(String key) Increments the count of the string key by 1. If key does not exist in the data structure, insert it with count 1.\ndec(String key) Decrements the count of the string key by 1. If the count of key is 0 after the decrement, remove it from the data structure. It is guaranteed that key exists in the data structure before the decrement.\ngetMaxKey() Returns one of the keys with the maximal count. If no element exists, return an empty string \"\".\ngetMinKey() Returns one of the keys with the minimum count. If no element exists, return an empty string \"\".\n\n\u00a0\nExample 1:\nInput\n[\"AllOne\", \"inc\", \"inc\", \"getMaxKey\", \"getMinKey\", \"inc\", \"getMaxKey\", \"getMinKey\"]\n[[], [\"hello\"], [\"hello\"], [], [], [\"leet\"], [], []]\nOutput\n[null, null, null, \"hello\", \"hello\", null, \"hello\", \"leet\"]\n\nExplanation\nAllOne allOne = new AllOne();\nallOne.inc(\"hello\");\nallOne.inc(\"hello\");\nallOne.getMaxKey(); // return \"hello\"\nallOne.getMinKey(); // return \"hello\"\nallOne.inc(\"leet\");\nallOne.getMaxKey(); // return \"hello\"\nallOne.getMinKey(); // return \"leet\"\n\n\u00a0\nConstraints:\n\n1 <= key.length <= 10\nkey consists of lowercase English letters.\nIt is guaranteed that for each call to dec, key is existing in the data structure.\nAt most 5 * 104\u00a0calls will be made to inc, dec, getMaxKey, and getMinKey.\n\n"], "433. Minimum Genetic Mutation": ["https://leetcode.com/problems/minimum-genetic-mutation", "A gene string can be represented by an 8-character long string, with choices from 'A', 'C', 'G', and 'T'.\nSuppose we need to investigate a mutation from a gene string start to a gene string end where one mutation is defined as one single character changed in the gene string.\n\nFor example, \"AACCGGTT\" --> \"AACCGGTA\" is one mutation.\n\nThere is also a gene bank bank that records all the valid gene mutations. A gene must be in bank to make it a valid gene string.\nGiven the two gene strings start and end and the gene bank bank, return the minimum number of mutations needed to mutate from start to end. If there is no such a mutation, return -1.\nNote that the starting point is assumed to be valid, so it might not be included in the bank.\n\u00a0\nExample 1:\nInput: start = \"AACCGGTT\", end = \"AACCGGTA\", bank = [\"AACCGGTA\"]\nOutput: 1\n\nExample 2:\nInput: start = \"AACCGGTT\", end = \"AAACGGTA\", bank = [\"AACCGGTA\",\"AACCGCTA\",\"AAACGGTA\"]\nOutput: 2\n\nExample 3:\nInput: start = \"AAAAACCC\", end = \"AACCCCCC\", bank = [\"AAAACCCC\",\"AAACCCCC\",\"AACCCCCC\"]\nOutput: 3\n\n\u00a0\nConstraints:\n\nstart.length == 8\nend.length == 8\n0 <= bank.length <= 10\nbank[i].length == 8\nstart, end, and bank[i] consist of only the characters ['A', 'C', 'G', 'T'].\n\n"], "434. Number of Segments in a String": ["https://leetcode.com/problems/number-of-segments-in-a-string", "Given a string s, return the number of segments in the string.\nA segment is defined to be a contiguous sequence of non-space characters.\n\u00a0\nExample 1:\nInput: s = \"Hello, my name is John\"\nOutput: 5\nExplanation: The five segments are [\"Hello,\", \"my\", \"name\", \"is\", \"John\"]\n\nExample 2:\nInput: s = \"Hello\"\nOutput: 1\n\n\u00a0\nConstraints:\n\n0 <= s.length <= 300\ns consists of lowercase and uppercase English letters, digits, or one of the following characters \"!@#$%^&*()_+-=',.:\".\nThe only space character in s is ' '.\n\n"], "435. Non-overlapping Intervals": ["https://leetcode.com/problems/non-overlapping-intervals", "Given an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\n\u00a0\nExample 1:\nInput: intervals = [[1,2],[2,3],[3,4],[1,3]]\nOutput: 1\nExplanation: [1,3] can be removed and the rest of the intervals are non-overlapping.\n\nExample 2:\nInput: intervals = [[1,2],[1,2],[1,2]]\nOutput: 2\nExplanation: You need to remove two [1,2] to make the rest of the intervals non-overlapping.\n\nExample 3:\nInput: intervals = [[1,2],[2,3]]\nOutput: 0\nExplanation: You don't need to remove any of the intervals since they're already non-overlapping.\n\n\u00a0\nConstraints:\n\n1 <= intervals.length <= 105\nintervals[i].length == 2\n-5 * 104 <= starti < endi <= 5 * 104\n\n"], "436. Find Right Interval": ["https://leetcode.com/problems/find-right-interval", "You are given an array of intervals, where intervals[i] = [starti, endi] and each starti is unique.\nThe right interval for an interval i is an interval j such that startj >= endi and startj is minimized. Note that i may equal j.\nReturn an array of right interval indices for each interval i. If no right interval exists for interval i, then put -1 at index i.\n\u00a0\nExample 1:\nInput: intervals = [[1,2]]\nOutput: [-1]\nExplanation: There is only one interval in the collection, so it outputs -1.\n\nExample 2:\nInput: intervals = [[3,4],[2,3],[1,2]]\nOutput: [-1,0,1]\nExplanation: There is no right interval for [3,4].\nThe right interval for [2,3] is [3,4] since start0 = 3 is the smallest start that is >= end1 = 3.\nThe right interval for [1,2] is [2,3] since start1 = 2 is the smallest start that is >= end2 = 2.\n\nExample 3:\nInput: intervals = [[1,4],[2,3],[3,4]]\nOutput: [-1,2,-1]\nExplanation: There is no right interval for [1,4] and [3,4].\nThe right interval for [2,3] is [3,4] since start2 = 3 is the smallest start that is >= end1 = 3.\n\n\u00a0\nConstraints:\n\n1 <= intervals.length <= 2 * 104\nintervals[i].length == 2\n-106 <= starti <= endi <= 106\nThe start point of each interval is unique.\n\n"], "437. Path Sum III": ["https://leetcode.com/problems/path-sum-iii", "Given the root of a binary tree and an integer targetSum, return the number of paths where the sum of the values\u00a0along the path equals\u00a0targetSum.\nThe path does not need to start or end at the root or a leaf, but it must go downwards (i.e., traveling only from parent nodes to child nodes).\n\u00a0\nExample 1:\n\nInput: root = [10,5,-3,3,2,null,11,3,-2,null,1], targetSum = 8\nOutput: 3\nExplanation: The paths that sum to 8 are shown.\n\nExample 2:\nInput: root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22\nOutput: 3\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 1000].\n-109 <= Node.val <= 109\n-1000 <= targetSum <= 1000\n\n"], "438. Find All Anagrams in a String": ["https://leetcode.com/problems/find-all-anagrams-in-a-string", "Given two strings s and p, return an array of all the start indices of p's anagrams in s. You may return the answer in any order.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\u00a0\nExample 1:\nInput: s = \"cbaebabacd\", p = \"abc\"\nOutput: [0,6]\nExplanation:\nThe substring with start index = 0 is \"cba\", which is an anagram of \"abc\".\nThe substring with start index = 6 is \"bac\", which is an anagram of \"abc\".\n\nExample 2:\nInput: s = \"abab\", p = \"ab\"\nOutput: [0,1,2]\nExplanation:\nThe substring with start index = 0 is \"ab\", which is an anagram of \"ab\".\nThe substring with start index = 1 is \"ba\", which is an anagram of \"ab\".\nThe substring with start index = 2 is \"ab\", which is an anagram of \"ab\".\n\n\u00a0\nConstraints:\n\n1 <= s.length, p.length <= 3 * 104\ns and p consist of lowercase English letters.\n\n"], "440. K-th Smallest in Lexicographical Order": ["https://leetcode.com/problems/k-th-smallest-in-lexicographical-order", "Given two integers n and k, return the kth lexicographically smallest integer in the range [1, n].\n\u00a0\nExample 1:\nInput: n = 13, k = 2\nOutput: 10\nExplanation: The lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.\n\nExample 2:\nInput: n = 1, k = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= k <= n <= 109\n\n"], "441. Arranging Coins": ["https://leetcode.com/problems/arranging-coins", "You have n coins and you want to build a staircase with these coins. The staircase consists of k rows where the ith row has exactly i coins. The last row of the staircase may be incomplete.\nGiven the integer n, return the number of complete rows of the staircase you will build.\n\u00a0\nExample 1:\n\nInput: n = 5\nOutput: 2\nExplanation: Because the 3rd row is incomplete, we return 2.\n\nExample 2:\n\nInput: n = 8\nOutput: 3\nExplanation: Because the 4th row is incomplete, we return 3.\n\n\u00a0\nConstraints:\n\n1 <= n <= 231 - 1\n\n"], "442. Find All Duplicates in an Array": ["https://leetcode.com/problems/find-all-duplicates-in-an-array", "Given an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice, return an array of all the integers that appears twice.\nYou must write an algorithm that runs in\u00a0O(n)\u00a0time and uses only constant extra space.\n\u00a0\nExample 1:\nInput: nums = [4,3,2,7,8,2,3,1]\nOutput: [2,3]\nExample 2:\nInput: nums = [1,1,2]\nOutput: [1]\nExample 3:\nInput: nums = [1]\nOutput: []\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= n <= 105\n1 <= nums[i] <= n\nEach element in nums appears once or twice.\n\n"], "443. String Compression": ["https://leetcode.com/problems/string-compression", "Given an array of characters chars, compress it using the following algorithm:\nBegin with an empty string s. For each group of consecutive repeating characters in chars:\n\nIf the group's length is 1, append the character to s.\nOtherwise, append the character followed by the group's length.\n\nThe compressed string s should not be returned separately, but instead, be stored in the input character array chars. Note that group lengths that are 10 or longer will be split into multiple characters in chars.\nAfter you are done modifying the input array, return the new length of the array.\nYou must write an algorithm that uses only constant extra space.\n\u00a0\nExample 1:\nInput: chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\nOutput: Return 6, and the first 6 characters of the input array should be: [\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\nExplanation: The groups are \"aa\", \"bb\", and \"ccc\". This compresses to \"a2b2c3\".\n\nExample 2:\nInput: chars = [\"a\"]\nOutput: Return 1, and the first character of the input array should be: [\"a\"]\nExplanation: The only group is \"a\", which remains uncompressed since it's a single character.\n\nExample 3:\nInput: chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\nOutput: Return 4, and the first 4 characters of the input array should be: [\"a\",\"b\",\"1\",\"2\"].\nExplanation: The groups are \"a\" and \"bbbbbbbbbbbb\". This compresses to \"ab12\".\n\u00a0\nConstraints:\n\n1 <= chars.length <= 2000\nchars[i] is a lowercase English letter, uppercase English letter, digit, or symbol.\n\n"], "445. Add Two Numbers II": ["https://leetcode.com/problems/add-two-numbers-ii", "You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\u00a0\nExample 1:\n\nInput: l1 = [7,2,4,3], l2 = [5,6,4]\nOutput: [7,8,0,7]\n\nExample 2:\nInput: l1 = [2,4,3], l2 = [5,6,4]\nOutput: [8,0,7]\n\nExample 3:\nInput: l1 = [0], l2 = [0]\nOutput: [0]\n\n\u00a0\nConstraints:\n\nThe number of nodes in each linked list is in the range [1, 100].\n0 <= Node.val <= 9\nIt is guaranteed that the list represents a number that does not have leading zeros.\n\n\u00a0\nFollow up:\u00a0Could you solve it without reversing the input lists?\n"], "446. Arithmetic Slices II - Subsequence": ["https://leetcode.com/problems/arithmetic-slices-ii-subsequence", "Given an integer array nums, return the number of all the arithmetic subsequences of nums.\nA sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n\nFor example, [1, 3, 5, 7, 9], [7, 7, 7, 7], and [3, -1, -5, -9] are arithmetic sequences.\nFor example, [1, 1, 2, 5, 7] is not an arithmetic sequence.\n\nA subsequence of an array is a sequence that can be formed by removing some elements (possibly none) of the array.\n\nFor example, [2,5,10] is a subsequence of [1,2,1,2,4,1,5,10].\n\nThe test cases are generated so that the answer fits in 32-bit integer.\n\u00a0\nExample 1:\nInput: nums = [2,4,6,8,10]\nOutput: 7\nExplanation: All arithmetic subsequence slices are:\n[2,4,6]\n[4,6,8]\n[6,8,10]\n[2,4,6,8]\n[4,6,8,10]\n[2,4,6,8,10]\n[2,6,10]\n\nExample 2:\nInput: nums = [7,7,7,7,7]\nOutput: 16\nExplanation: Any subsequence of this array is arithmetic.\n\n\u00a0\nConstraints:\n\n1\u00a0 <= nums.length <= 1000\n-231 <= nums[i] <= 231 - 1\n\n"], "447. Number of Boomerangs": ["https://leetcode.com/problems/number-of-boomerangs", "You are given n points in the plane that are all distinct, where points[i] = [xi, yi]. A boomerang is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters).\nReturn the number of boomerangs.\n\u00a0\nExample 1:\nInput: points = [[0,0],[1,0],[2,0]]\nOutput: 2\nExplanation: The two boomerangs are [[1,0],[0,0],[2,0]] and [[1,0],[2,0],[0,0]].\n\nExample 2:\nInput: points = [[1,1],[2,2],[3,3]]\nOutput: 2\n\nExample 3:\nInput: points = [[1,1]]\nOutput: 0\n\n\u00a0\nConstraints:\n\nn == points.length\n1 <= n <= 500\npoints[i].length == 2\n-104 <= xi, yi <= 104\nAll the points are unique.\n\n"], "448. Find All Numbers Disappeared in an Array": ["https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array", "Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.\n\u00a0\nExample 1:\nInput: nums = [4,3,2,7,8,2,3,1]\nOutput: [5,6]\nExample 2:\nInput: nums = [1,1]\nOutput: [2]\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= n <= 105\n1 <= nums[i] <= n\n\n\u00a0\nFollow up: Could you do it without extra space and in O(n) runtime? You may assume the returned list does not count as extra space.\n"], "449. Serialize and Deserialize BST": ["https://leetcode.com/problems/serialize-and-deserialize-bst", "Serialization is converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.\nDesign an algorithm to serialize and deserialize a binary search tree. There is no restriction on how your serialization/deserialization algorithm should work. You need to ensure that a binary search tree can be serialized to a string, and this string can be deserialized to the original tree structure.\nThe encoded string should be as compact as possible.\n\u00a0\nExample 1:\nInput: root = [2,1,3]\nOutput: [2,1,3]\nExample 2:\nInput: root = []\nOutput: []\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n0 <= Node.val <= 104\nThe input tree is guaranteed to be a binary search tree.\n\n"], "450. Delete Node in a BST": ["https://leetcode.com/problems/delete-node-in-a-bst", "Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.\nBasically, the deletion can be divided into two stages:\n\nSearch for a node to remove.\nIf the node is found, delete the node.\n\n\u00a0\nExample 1:\n\nInput: root = [5,3,6,2,4,null,7], key = 3\nOutput: [5,4,6,2,null,null,7]\nExplanation: Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is [5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is [5,2,6,null,4,null,7] and it's also accepted.\n\n\nExample 2:\nInput: root = [5,3,6,2,4,null,7], key = 0\nOutput: [5,3,6,2,4,null,7]\nExplanation: The tree does not contain a node with value = 0.\n\nExample 3:\nInput: root = [], key = 0\nOutput: []\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-105 <= Node.val <= 105\nEach node has a unique value.\nroot is a valid binary search tree.\n-105 <= key <= 105\n\n\u00a0\nFollow up: Could you solve it with time complexity O(height of tree)?\n"], "451. Sort Characters By Frequency": ["https://leetcode.com/problems/sort-characters-by-frequency", "Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string.\nReturn the sorted string. If there are multiple answers, return any of them.\n\u00a0\nExample 1:\nInput: s = \"tree\"\nOutput: \"eert\"\nExplanation: 'e' appears twice while 'r' and 't' both appear once.\nSo 'e' must appear before both 'r' and 't'. Therefore \"eetr\" is also a valid answer.\n\nExample 2:\nInput: s = \"cccaaa\"\nOutput: \"aaaccc\"\nExplanation: Both 'c' and 'a' appear three times, so both \"cccaaa\" and \"aaaccc\" are valid answers.\nNote that \"cacaca\" is incorrect, as the same characters must be together.\n\nExample 3:\nInput: s = \"Aabb\"\nOutput: \"bbAa\"\nExplanation: \"bbaA\" is also a valid answer, but \"Aabb\" is incorrect.\nNote that 'A' and 'a' are treated as two different characters.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 5 * 105\ns consists of uppercase and lowercase English letters and digits.\n\n"], "452. Minimum Number of Arrows to Burst Balloons": ["https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons", "There are some spherical balloons taped onto a flat wall that represents the XY-plane. The balloons are represented as a 2D integer array points where points[i] = [xstart, xend] denotes a balloon whose horizontal diameter stretches between xstart and xend. You do not know the exact y-coordinates of the balloons.\nArrows can be shot up directly vertically (in the positive y-direction) from different points along the x-axis. A balloon with xstart and xend is burst by an arrow shot at x if xstart <= x <= xend. There is no limit to the number of arrows that can be shot. A shot arrow keeps traveling up infinitely, bursting any balloons in its path.\nGiven the array points, return the minimum number of arrows that must be shot to burst all balloons.\n\u00a0\nExample 1:\nInput: points = [[10,16],[2,8],[1,6],[7,12]]\nOutput: 2\nExplanation: The balloons can be burst by 2 arrows:\n- Shoot an arrow at x = 6, bursting the balloons [2,8] and [1,6].\n- Shoot an arrow at x = 11, bursting the balloons [10,16] and [7,12].\n\nExample 2:\nInput: points = [[1,2],[3,4],[5,6],[7,8]]\nOutput: 4\nExplanation: One arrow needs to be shot for each balloon for a total of 4 arrows.\n\nExample 3:\nInput: points = [[1,2],[2,3],[3,4],[4,5]]\nOutput: 2\nExplanation: The balloons can be burst by 2 arrows:\n- Shoot an arrow at x = 2, bursting the balloons [1,2] and [2,3].\n- Shoot an arrow at x = 4, bursting the balloons [3,4] and [4,5].\n\n\u00a0\nConstraints:\n\n1 <= points.length <= 105\npoints[i].length == 2\n-231 <= xstart < xend <= 231 - 1\n\n"], "453. Minimum Moves to Equal Array Elements": ["https://leetcode.com/problems/minimum-moves-to-equal-array-elements", "Given an integer array nums of size n, return the minimum number of moves required to make all array elements equal.\nIn one move, you can increment n - 1 elements of the array by 1.\n\u00a0\nExample 1:\nInput: nums = [1,2,3]\nOutput: 3\nExplanation: Only three moves are needed (remember each move increments two elements):\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]\n\nExample 2:\nInput: nums = [1,1,1]\nOutput: 0\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= nums.length <= 105\n-109 <= nums[i] <= 109\nThe answer is guaranteed to fit in a 32-bit integer.\n\n"], "454. 4Sum II": ["https://leetcode.com/problems/4sum-ii", "Given four integer arrays nums1, nums2, nums3, and nums4 all of length n, return the number of tuples (i, j, k, l) such that:\n\n0 <= i, j, k, l < n\nnums1[i] + nums2[j] + nums3[k] + nums4[l] == 0\n\n\u00a0\nExample 1:\nInput: nums1 = [1,2], nums2 = [-2,-1], nums3 = [-1,2], nums4 = [0,2]\nOutput: 2\nExplanation:\nThe two tuples are:\n1. (0, 0, 0, 1) -> nums1[0] + nums2[0] + nums3[0] + nums4[1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -> nums1[1] + nums2[1] + nums3[0] + nums4[0] = 2 + (-1) + (-1) + 0 = 0\n\nExample 2:\nInput: nums1 = [0], nums2 = [0], nums3 = [0], nums4 = [0]\nOutput: 1\n\n\u00a0\nConstraints:\n\nn == nums1.length\nn == nums2.length\nn == nums3.length\nn == nums4.length\n1 <= n <= 200\n-228 <= nums1[i], nums2[i], nums3[i], nums4[i] <= 228\n\n"], "455. Assign Cookies": ["https://leetcode.com/problems/assign-cookies", "Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.\nEach child i has a greed factor g[i], which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s[j]. If s[j] >= g[i], we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\n\u00a0\nExample 1:\nInput: g = [1,2,3], s = [1,1]\nOutput: 1\nExplanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\nYou need to output 1.\n\nExample 2:\nInput: g = [1,2], s = [1,2,3]\nOutput: 2\nExplanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \nYou have 3 cookies and their sizes are big enough to gratify all of the children, \nYou need to output 2.\n\n\u00a0\nConstraints:\n\n1 <= g.length <= 3 * 104\n0 <= s.length <= 3 * 104\n1 <= g[i], s[j] <= 231 - 1\n\n"], "456. 132 Pattern": ["https://leetcode.com/problems/132-pattern", "Given an array\u00a0of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j] and nums[k] such that i < j < k and nums[i] < nums[k] < nums[j].\nReturn true if there is a 132 pattern in nums, otherwise, return false.\n\u00a0\nExample 1:\nInput: nums = [1,2,3,4]\nOutput: false\nExplanation: There is no 132 pattern in the sequence.\n\nExample 2:\nInput: nums = [3,1,4,2]\nOutput: true\nExplanation: There is a 132 pattern in the sequence: [1, 4, 2].\n\nExample 3:\nInput: nums = [-1,3,2,0]\nOutput: true\nExplanation: There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= n <= 2 * 105\n-109 <= nums[i] <= 109\n\n"], "457. Circular Array Loop": ["https://leetcode.com/problems/circular-array-loop", "You are playing a game involving a circular array of non-zero integers nums. Each nums[i] denotes the number of indices forward/backward you must move if you are located at index i:\n\nIf nums[i] is positive, move nums[i] steps forward, and\nIf nums[i] is negative, move nums[i] steps backward.\n\nSince the array is circular, you may assume that moving forward from the last element puts you on the first element, and moving backwards from the first element puts you on the last element.\nA cycle in the array consists of a sequence of indices seq of length k where:\n\nFollowing the movement rules above results in the repeating index sequence seq[0] -> seq[1] -> ... -> seq[k - 1] -> seq[0] -> ...\nEvery nums[seq[j]] is either all positive or all negative.\nk > 1\n\nReturn true if there is a cycle in nums, or false otherwise.\n\u00a0\nExample 1:\nInput: nums = [2,-1,1,2,2]\nOutput: true\nExplanation:\nThere is a cycle from index 0 -> 2 -> 3 -> 0 -> ...\nThe cycle's length is 3.\n\nExample 2:\nInput: nums = [-1,2]\nOutput: false\nExplanation:\nThe sequence from index 1 -> 1 -> 1 -> ... is not a cycle because the sequence's length is 1.\nBy definition the sequence's length must be strictly greater than 1 to be a cycle.\n\nExample 3:\nInput: nums = [-2,1,-1,-2,-2]\nOutput: false\nExplanation:\nThe sequence from index 1 -> 2 -> 1 -> ... is not a cycle because nums[1] is positive, but nums[2] is negative.\nEvery nums[seq[j]] must be either all positive or all negative.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5000\n-1000 <= nums[i] <= 1000\nnums[i] != 0\n\n\u00a0\nFollow up: Could you solve it in O(n) time complexity and O(1) extra space complexity?\n"], "458. Poor Pigs": ["https://leetcode.com/problems/poor-pigs", "There are buckets buckets of liquid, where exactly one of the buckets is poisonous. To figure out which one is poisonous, you feed some number of (poor) pigs the liquid to see whether they will die or not. Unfortunately, you only have minutesToTest minutes to determine which bucket is poisonous.\nYou can feed the pigs according to these steps:\n\nChoose some live pigs to feed.\nFor each pig, choose which buckets to feed it. The pig will consume all the chosen buckets simultaneously and will take no time.\nWait for minutesToDie minutes. You may not feed any other pigs during this time.\nAfter minutesToDie minutes have passed, any pigs that have been fed the poisonous bucket will die, and all others will survive.\nRepeat this process until you run out of time.\n\nGiven buckets, minutesToDie, and minutesToTest, return the minimum number of pigs needed to figure out which bucket is poisonous within the allotted time.\n\u00a0\nExample 1:\nInput: buckets = 1000, minutesToDie = 15, minutesToTest = 60\nOutput: 5\nExample 2:\nInput: buckets = 4, minutesToDie = 15, minutesToTest = 15\nOutput: 2\nExample 3:\nInput: buckets = 4, minutesToDie = 15, minutesToTest = 30\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= buckets <= 1000\n1 <=\u00a0minutesToDie <=\u00a0minutesToTest <= 100\n\n"], "459. Repeated Substring Pattern": ["https://leetcode.com/problems/repeated-substring-pattern", "Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.\n\u00a0\nExample 1:\nInput: s = \"abab\"\nOutput: true\nExplanation: It is the substring \"ab\" twice.\n\nExample 2:\nInput: s = \"aba\"\nOutput: false\n\nExample 3:\nInput: s = \"abcabcabcabc\"\nOutput: true\nExplanation: It is the substring \"abc\" four times or the substring \"abcabc\" twice.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 104\ns consists of lowercase English letters.\n\n"], "460. LFU Cache": ["https://leetcode.com/problems/lfu-cache", "Design and implement a data structure for a Least Frequently Used (LFU) cache.\nImplement the LFUCache class:\n\nLFUCache(int capacity) Initializes the object with the capacity of the data structure.\nint get(int key) Gets the value of the key if the key exists in the cache. Otherwise, returns -1.\nvoid put(int key, int value) Update the value of the key if present, or inserts the key if not already present. When the cache reaches its capacity, it should invalidate and remove the least frequently used key before inserting a new item. For this problem, when there is a tie (i.e., two or more keys with the same frequency), the least recently used key would be invalidated.\n\nTo determine the least frequently used key, a use counter is maintained for each key in the cache. The key with the smallest use counter is the least frequently used key.\nWhen a key is first inserted into the cache, its use counter is set to 1 (due to the put operation). The use counter for a key in the cache is incremented either a get or put operation is called on it.\nThe functions\u00a0get\u00a0and\u00a0put\u00a0must each run in O(1) average time complexity.\n\u00a0\nExample 1:\nInput\n[\"LFUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [3], [4, 4], [1], [3], [4]]\nOutput\n[null, null, null, 1, null, -1, 3, null, -1, 3, 4]\n\nExplanation\n// cnt(x) = the use counter for key x\n// cache=[] will show the last used order for tiebreakers (leftmost element is  most recent)\nLFUCache lfu = new LFUCache(2);\nlfu.put(1, 1);   // cache=[1,_], cnt(1)=1\nlfu.put(2, 2);   // cache=[2,1], cnt(2)=1, cnt(1)=1\nlfu.get(1);      // return 1\n                 // cache=[1,2], cnt(2)=1, cnt(1)=2\nlfu.put(3, 3);   // 2 is the LFU key because cnt(2)=1 is the smallest, invalidate 2.\n\u00a0                // cache=[3,1], cnt(3)=1, cnt(1)=2\nlfu.get(2);      // return -1 (not found)\nlfu.get(3);      // return 3\n                 // cache=[3,1], cnt(3)=2, cnt(1)=2\nlfu.put(4, 4);   // Both 1 and 3 have the same cnt, but 1 is LRU, invalidate 1.\n                 // cache=[4,3], cnt(4)=1, cnt(3)=2\nlfu.get(1);      // return -1 (not found)\nlfu.get(3);      // return 3\n                 // cache=[3,4], cnt(4)=1, cnt(3)=3\nlfu.get(4);      // return 4\n                 // cache=[4,3], cnt(4)=2, cnt(3)=3\n\n\u00a0\nConstraints:\n\n0 <= capacity\u00a0<= 104\n0 <= key <= 105\n0 <= value <= 109\nAt most 2 * 105\u00a0calls will be made to get and put.\n\n\u00a0\n\u00a0"], "461. Hamming Distance": ["https://leetcode.com/problems/hamming-distance", "The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\nGiven two integers x and y, return the Hamming distance between them.\n\u00a0\nExample 1:\nInput: x = 1, y = 4\nOutput: 2\nExplanation:\n1   (0 0 0 1)\n4   (0 1 0 0)\n       \u2191   \u2191\nThe above arrows point to positions where the corresponding bits are different.\n\nExample 2:\nInput: x = 3, y = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n0 <=\u00a0x, y <= 231 - 1\n\n"], "462. Minimum Moves to Equal Array Elements II": ["https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii", "Given an integer array nums of size n, return the minimum number of moves required to make all array elements equal.\nIn one move, you can increment or decrement an element of the array by 1.\nTest cases are designed so that the answer will fit in a 32-bit integer.\n\u00a0\nExample 1:\nInput: nums = [1,2,3]\nOutput: 2\nExplanation:\nOnly two moves are needed (remember each move increments or decrements one element):\n[1,2,3]  =>  [2,2,3]  =>  [2,2,2]\n\nExample 2:\nInput: nums = [1,10,2,9]\nOutput: 16\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= nums.length <= 105\n-109 <= nums[i] <= 109\n\n"], "463. Island Perimeter": ["https://leetcode.com/problems/island-perimeter", "You are given row x col grid representing a map where grid[i][j] = 1 represents\u00a0land and grid[i][j] = 0 represents water.\nGrid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells).\nThe island doesn't have \"lakes\", meaning the water inside isn't connected to the water around the island. One cell is a square with side length 1. The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.\n\u00a0\nExample 1:\n\nInput: grid = [[0,1,0,0],[1,1,1,0],[0,1,0,0],[1,1,0,0]]\nOutput: 16\nExplanation: The perimeter is the 16 yellow stripes in the image above.\n\nExample 2:\nInput: grid = [[1]]\nOutput: 4\n\nExample 3:\nInput: grid = [[1,0]]\nOutput: 4\n\n\u00a0\nConstraints:\n\nrow == grid.length\ncol == grid[i].length\n1 <= row, col <= 100\ngrid[i][j] is 0 or 1.\nThere is exactly one island in grid.\n\n"], "464. Can I Win": ["https://leetcode.com/problems/can-i-win", "In the \"100 game\" two players take turns adding, to a running total, any integer from 1 to 10. The player who first causes the running total to reach or exceed 100 wins.\nWhat if we change the game so that players cannot re-use integers?\nFor example, two players might take turns drawing from a common pool of numbers from 1 to 15 without replacement until they reach a total >= 100.\nGiven two integers maxChoosableInteger and desiredTotal, return true if the first player to move can force a win, otherwise, return false. Assume both players play optimally.\n\u00a0\nExample 1:\nInput: maxChoosableInteger = 10, desiredTotal = 11\nOutput: false\nExplanation:\nNo matter which integer the first player choose, the first player will lose.\nThe first player can choose an integer from 1 up to 10.\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\nThe second player will win by choosing 10 and get a total = 11, which is >= desiredTotal.\nSame with other integers chosen by the first player, the second player will always win.\n\nExample 2:\nInput: maxChoosableInteger = 10, desiredTotal = 0\nOutput: true\n\nExample 3:\nInput: maxChoosableInteger = 10, desiredTotal = 1\nOutput: true\n\n\u00a0\nConstraints:\n\n1 <= maxChoosableInteger <= 20\n0 <= desiredTotal <= 300\n\n"], "466. Count The Repetitions": ["https://leetcode.com/problems/count-the-repetitions", "We define str = [s, n] as the string str which consists of the string s concatenated n times.\n\nFor example, str == [\"abc\", 3] ==\"abcabcabc\".\n\nWe define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1.\n\nFor example, s1 = \"abc\" can be obtained from s2 = \"abdbec\" based on our definition by removing the bolded underlined characters.\n\nYou are given two strings s1 and s2 and two integers n1 and n2. You have the two strings str1 = [s1, n1] and str2 = [s2, n2].\nReturn the maximum integer m such that str = [str2, m] can be obtained from str1.\n\u00a0\nExample 1:\nInput: s1 = \"acb\", n1 = 4, s2 = \"ab\", n2 = 2\nOutput: 2\nExample 2:\nInput: s1 = \"acb\", n1 = 1, s2 = \"acb\", n2 = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= s1.length, s2.length <= 100\ns1 and s2 consist of lowercase English letters.\n1 <= n1, n2 <= 106\n\n"], "467. Unique Substrings in Wraparound String": ["https://leetcode.com/problems/unique-substrings-in-wraparound-string", "We define the string s to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so s will look like this:\n\n\"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".\n\nGiven a string p, return the number of unique non-empty substrings of p are present in s.\n\u00a0\nExample 1:\nInput: p = \"a\"\nOutput: 1\nExplanation: Only the substring \"a\" of p is in s.\n\nExample 2:\nInput: p = \"cac\"\nOutput: 2\nExplanation: There are two substrings (\"a\", \"c\") of p in s.\n\nExample 3:\nInput: p = \"zab\"\nOutput: 6\nExplanation: There are six substrings (\"z\", \"a\", \"b\", \"za\", \"ab\", and \"zab\") of p in s.\n\n\u00a0\nConstraints:\n\n1 <= p.length <= 105\np consists of lowercase English letters.\n\n"], "468. Validate IP Address": ["https://leetcode.com/problems/validate-ip-address", "Given a string queryIP, return \"IPv4\" if IP is a valid IPv4 address, \"IPv6\" if IP is a valid IPv6 address or \"Neither\" if IP is not a correct IP of any type.\nA valid IPv4 address is an IP in the form \"x1.x2.x3.x4\" where 0 <= xi <= 255 and xi cannot contain leading zeros. For example, \"192.168.1.1\" and \"192.168.1.0\" are valid IPv4 addresses but \"192.168.01.1\", while \"192.168.1.00\" and \"192.168@1.1\" are invalid IPv4 addresses.\nA valid IPv6 address is an IP in the form \"x1:x2:x3:x4:x5:x6:x7:x8\" where:\n\n1 <= xi.length <= 4\nxi is a hexadecimal string which may contain digits, lower-case English letter ('a' to 'f') and upper-case English letters ('A' to 'F').\nLeading zeros are allowed in xi.\n\nFor example, \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\" and \"2001:db8:85a3:0:0:8A2E:0370:7334\" are valid IPv6 addresses, while \"2001:0db8:85a3::8A2E:037j:7334\" and \"02001:0db8:85a3:0000:0000:8a2e:0370:7334\" are invalid IPv6 addresses.\n\u00a0\nExample 1:\nInput: queryIP = \"172.16.254.1\"\nOutput: \"IPv4\"\nExplanation: This is a valid IPv4 address, return \"IPv4\".\n\nExample 2:\nInput: queryIP = \"2001:0db8:85a3:0:0:8A2E:0370:7334\"\nOutput: \"IPv6\"\nExplanation: This is a valid IPv6 address, return \"IPv6\".\n\nExample 3:\nInput: queryIP = \"256.256.256.256\"\nOutput: \"Neither\"\nExplanation: This is neither a IPv4 address nor a IPv6 address.\n\n\u00a0\nConstraints:\n\nqueryIP consists only of English letters, digits and the characters '.' and ':'.\n\n"], "470. Implement Rand10() Using Rand7()": ["https://leetcode.com/problems/implement-rand10-using-rand7", "Given the API rand7() that generates a uniform random integer in the range [1, 7], write a function rand10() that generates a uniform random integer in the range [1, 10]. You can only call the API rand7(), and you shouldn't call any other API. Please do not use a language's built-in random API.\nEach test case will have one internal argument n, the number of times that your implemented function rand10() will be called while testing. Note that this is not an argument passed to rand10().\n\u00a0\nExample 1:\nInput: n = 1\nOutput: [2]\nExample 2:\nInput: n = 2\nOutput: [2,8]\nExample 3:\nInput: n = 3\nOutput: [3,8,10]\n\n\u00a0\nConstraints:\n\n1 <= n <= 105\n\n\u00a0\nFollow up:\n\nWhat is the expected value for the number of calls to rand7() function?\nCould you minimize the number of calls to rand7()?\n\n"], "472. Concatenated Words": ["https://leetcode.com/problems/concatenated-words", "Given an array of strings words (without duplicates), return all the concatenated words in the given list of words.\nA concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.\n\u00a0\nExample 1:\nInput: words = [\"cat\",\"cats\",\"catsdogcats\",\"dog\",\"dogcatsdog\",\"hippopotamuses\",\"rat\",\"ratcatdogcat\"]\nOutput: [\"catsdogcats\",\"dogcatsdog\",\"ratcatdogcat\"]\nExplanation: \"catsdogcats\" can be concatenated by \"cats\", \"dog\" and \"cats\"; \n\"dogcatsdog\" can be concatenated by \"dog\", \"cats\" and \"dog\"; \n\"ratcatdogcat\" can be concatenated by \"rat\", \"cat\", \"dog\" and \"cat\".\nExample 2:\nInput: words = [\"cat\",\"dog\",\"catdog\"]\nOutput: [\"catdog\"]\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 104\n0 <= words[i].length <= 30\nwords[i] consists of only lowercase English letters.\n0 <= sum(words[i].length) <= 105\n\n"], "473. Matchsticks to Square": ["https://leetcode.com/problems/matchsticks-to-square", "You are given an integer array matchsticks where matchsticks[i] is the length of the ith matchstick. You want to use all the matchsticks to make one square. You should not break any stick, but you can link them up, and each matchstick must be used exactly one time.\nReturn true if you can make this square and false otherwise.\n\u00a0\nExample 1:\n\nInput: matchsticks = [1,1,2,2,2]\nOutput: true\nExplanation: You can form a square with length 2, one side of the square came two sticks with length 1.\n\nExample 2:\nInput: matchsticks = [3,3,3,3,4]\nOutput: false\nExplanation: You cannot find a way to form a square with all the matchsticks.\n\n\u00a0\nConstraints:\n\n1 <= matchsticks.length <= 15\n1 <= matchsticks[i] <= 108\n\n"], "474. Ones and Zeroes": ["https://leetcode.com/problems/ones-and-zeroes", "You are given an array of binary strings strs and two integers m and n.\nReturn the size of the largest subset of strs such that there are at most m 0's and n 1's in the subset.\nA set x is a subset of a set y if all elements of x are also elements of y.\n\u00a0\nExample 1:\nInput: strs = [\"10\",\"0001\",\"111001\",\"1\",\"0\"], m = 5, n = 3\nOutput: 4\nExplanation: The largest subset with at most 5 0's and 3 1's is {\"10\", \"0001\", \"1\", \"0\"}, so the answer is 4.\nOther valid but smaller subsets include {\"0001\", \"1\"} and {\"10\", \"1\", \"0\"}.\n{\"111001\"} is an invalid subset because it contains 4 1's, greater than the maximum of 3.\n\nExample 2:\nInput: strs = [\"10\",\"0\",\"1\"], m = 1, n = 1\nOutput: 2\nExplanation: The largest subset is {\"0\", \"1\"}, so the answer is 2.\n\n\u00a0\nConstraints:\n\n1 <= strs.length <= 600\n1 <= strs[i].length <= 100\nstrs[i] consists only of digits '0' and '1'.\n1 <= m, n <= 100\n\n"], "475. Heaters": ["https://leetcode.com/problems/heaters", "Winter is coming! During the contest, your first job is to design a standard heater with a fixed warm radius to warm all the houses.\nEvery house can be warmed, as long as the house is within the heater's warm radius range.\u00a0\nGiven the positions of houses and heaters on a horizontal line, return the minimum radius standard of heaters\u00a0so that those heaters could cover all houses.\nNotice that\u00a0all the heaters follow your radius standard, and the warm radius will the same.\n\u00a0\nExample 1:\nInput: houses = [1,2,3], heaters = [2]\nOutput: 1\nExplanation: The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.\n\nExample 2:\nInput: houses = [1,2,3,4], heaters = [1,4]\nOutput: 1\nExplanation: The two heater was placed in the position 1 and 4. We need to use radius 1 standard, then all the houses can be warmed.\n\nExample 3:\nInput: houses = [1,5], heaters = [2]\nOutput: 3\n\n\u00a0\nConstraints:\n\n1 <= houses.length, heaters.length <= 3 * 104\n1 <= houses[i], heaters[i] <= 109\n\n"], "476. Number Complement": ["https://leetcode.com/problems/number-complement", "The complement of an integer is the integer you get when you flip all the 0's to 1's and all the 1's to 0's in its binary representation.\n\nFor example, The integer 5 is \"101\" in binary and its complement is \"010\" which is the integer 2.\n\nGiven an integer num, return its complement.\n\u00a0\nExample 1:\nInput: num = 5\nOutput: 2\nExplanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.\n\nExample 2:\nInput: num = 1\nOutput: 0\nExplanation: The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.\n\n\u00a0\nConstraints:\n\n1 <= num < 231\n\n\u00a0\nNote: This question is the same as 1009: https://leetcode.com/problems/complement-of-base-10-integer/\n"], "477. Total Hamming Distance": ["https://leetcode.com/problems/total-hamming-distance", "The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\nGiven an integer array nums, return the sum of Hamming distances between all the pairs of the integers in nums.\n\u00a0\nExample 1:\nInput: nums = [4,14,2]\nOutput: 6\nExplanation: In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\nshowing the four bits relevant in this case).\nThe answer will be:\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\n\nExample 2:\nInput: nums = [4,14,4]\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n0 <= nums[i] <= 109\nThe answer for the given input will fit in a 32-bit integer.\n\n"], "478. Generate Random Point in a Circle": ["https://leetcode.com/problems/generate-random-point-in-a-circle", "Given the radius and the position of the center of a circle, implement the function randPoint which generates a uniform random point inside the circle.\nImplement the Solution class:\n\nSolution(double radius, double x_center, double y_center) initializes the object with the radius of the circle radius and the position of the center (x_center, y_center).\nrandPoint() returns a random point inside the circle. A point on the circumference of the circle is considered to be in the circle. The answer is returned as an array [x, y].\n\n\u00a0\nExample 1:\nInput\n[\"Solution\", \"randPoint\", \"randPoint\", \"randPoint\"]\n[[1.0, 0.0, 0.0], [], [], []]\nOutput\n[null, [-0.02493, -0.38077], [0.82314, 0.38945], [0.36572, 0.17248]]\n\nExplanation\nSolution solution = new Solution(1.0, 0.0, 0.0);\nsolution.randPoint(); // return [-0.02493, -0.38077]\nsolution.randPoint(); // return [0.82314, 0.38945]\nsolution.randPoint(); // return [0.36572, 0.17248]\n\n\u00a0\nConstraints:\n\n0 <\u00a0radius <= 108\n-107 <= x_center, y_center <= 107\nAt most 3 * 104 calls will be made to randPoint.\n\n"], "479. Largest Palindrome Product": ["https://leetcode.com/problems/largest-palindrome-product", "Given an integer n, return the largest palindromic integer that can be represented as the product of two n-digits integers. Since the answer can be very large, return it modulo 1337.\n\u00a0\nExample 1:\nInput: n = 2\nOutput: 987\nExplanation: 99 x 91 = 9009, 9009 % 1337 = 987\n\nExample 2:\nInput: n = 1\nOutput: 9\n\n\u00a0\nConstraints:\n\n1 <= n <= 8\n\n"], "480. Sliding Window Median": ["https://leetcode.com/problems/sliding-window-median", "The median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle values.\n\nFor examples, if arr = [2,3,4], the median is 3.\nFor examples, if arr = [1,2,3,4], the median is (2 + 3) / 2 = 2.5.\n\nYou are given an integer array nums and an integer k. There is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.\nReturn the median array for each window in the original array. Answers within 10-5 of the actual value will be accepted.\n\u00a0\nExample 1:\nInput: nums = [1,3,-1,-3,5,3,6,7], k = 3\nOutput: [1.00000,-1.00000,-1.00000,3.00000,5.00000,6.00000]\nExplanation: \nWindow position                Median\n---------------                -----\n[1  3  -1] -3  5  3  6  7        1\n 1 [3  -1  -3] 5  3  6  7       -1\n 1  3 [-1  -3  5] 3  6  7       -1\n 1  3  -1 [-3  5  3] 6  7        3\n 1  3  -1  -3 [5  3  6] 7        5\n 1  3  -1  -3  5 [3  6  7]       6\n\nExample 2:\nInput: nums = [1,2,3,4,2,3,1,4,2], k = 3\nOutput: [2.00000,3.00000,3.00000,3.00000,2.00000,3.00000,2.00000]\n\n\u00a0\nConstraints:\n\n1 <= k <= nums.length <= 105\n-231 <= nums[i] <= 231 - 1\n\n"], "481. Magical String": ["https://leetcode.com/problems/magical-string", "A magical string s consists of only '1' and '2' and obeys the following rules:\n\nThe string s is magical because concatenating the number of contiguous occurrences of characters '1' and '2' generates the string s itself.\n\nThe first few elements of s is s = \"1221121221221121122\u2026\u2026\". If we group the consecutive 1's and 2's in s, it will be \"1 22 11 2 1 22 1 22 11 2 11 22 ......\" and the occurrences of 1's or 2's in each group are \"1 2 2 1 1 2 1 2 2 1 2 2 ......\". You can see that the occurrence sequence is s itself.\nGiven an integer n, return the number of 1's in the first n number in the magical string s.\n\u00a0\nExample 1:\nInput: n = 6\nOutput: 3\nExplanation: The first 6 elements of magical string s is \"122112\" and it contains three 1's, so return 3.\n\nExample 2:\nInput: n = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= n <= 105\n\n"], "482. License Key Formatting": ["https://leetcode.com/problems/license-key-formatting", "You are given a license key represented as a string s that consists of only alphanumeric characters and dashes. The string is separated into n + 1 groups by n dashes. You are also given an integer k.\nWe want to reformat the string s such that each group contains exactly k characters, except for the first group, which could be shorter than k but still must contain at least one character. Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase.\nReturn the reformatted license key.\n\u00a0\nExample 1:\nInput: s = \"5F3Z-2e-9-w\", k = 4\nOutput: \"5F3Z-2E9W\"\nExplanation: The string s has been split into two parts, each part has 4 characters.\nNote that the two extra dashes are not needed and can be removed.\n\nExample 2:\nInput: s = \"2-5g-3-J\", k = 2\nOutput: \"2-5G-3J\"\nExplanation: The string s has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns consists of English letters, digits, and dashes '-'.\n1 <= k <= 104\n\n"], "483. Smallest Good Base": ["https://leetcode.com/problems/smallest-good-base", "Given an integer n represented as a string, return the smallest good base of n.\nWe call k >= 2 a good base of n, if all digits of n base k are 1's.\n\u00a0\nExample 1:\nInput: n = \"13\"\nOutput: \"3\"\nExplanation: 13 base 3 is 111.\n\nExample 2:\nInput: n = \"4681\"\nOutput: \"8\"\nExplanation: 4681 base 8 is 11111.\n\nExample 3:\nInput: n = \"1000000000000000000\"\nOutput: \"999999999999999999\"\nExplanation: 1000000000000000000 base 999999999999999999 is 11.\n\n\u00a0\nConstraints:\n\nn is an integer in the range [3, 1018].\nn does not contain any leading zeros.\n\n"], "485. Max Consecutive Ones": ["https://leetcode.com/problems/max-consecutive-ones", "Given a binary array nums, return the maximum number of consecutive 1's in the array.\n\u00a0\nExample 1:\nInput: nums = [1,1,0,1,1,1]\nOutput: 3\nExplanation: The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.\n\nExample 2:\nInput: nums = [1,0,1,1,0,1]\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\nnums[i] is either 0 or 1.\n\n"], "486. Predict the Winner": ["https://leetcode.com/problems/predict-the-winner", "You are given an integer array nums. Two players are playing a game with this array: player 1 and player 2.\nPlayer 1 and player 2 take turns, with player 1 starting first. Both players start the game with a score of 0. At each turn, the player takes one of the numbers from either end of the array (i.e., nums[0] or nums[nums.length - 1]) which reduces the size of the array by 1. The player adds the chosen number to their score. The game ends when there are no more elements in the array.\nReturn true if Player 1 can win the game. If the scores of both players are equal, then player 1 is still the winner, and you should also return true. You may assume that both players are playing optimally.\n\u00a0\nExample 1:\nInput: nums = [1,5,2]\nOutput: false\nExplanation: Initially, player 1 can choose between 1 and 2. \nIf he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). \nSo, final score of player 1 is 1 + 2 = 3, and player 2 is 5. \nHence, player 1 will never be the winner and you need to return false.\n\nExample 2:\nInput: nums = [1,5,233,7]\nOutput: true\nExplanation: Player 1 first chooses 1. Then player 2 has to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.\nFinally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 20\n0 <= nums[i] <= 107\n\n"], "488. Zuma Game": ["https://leetcode.com/problems/zuma-game", "You are playing a variation of the game Zuma.\nIn this variation of Zuma, there is a single row of colored balls on a board, where each ball can be colored red 'R', yellow 'Y', blue 'B', green 'G', or white 'W'. You also have several colored balls in your hand.\nYour goal is to clear all of the balls from the board. On each turn:\n\nPick any ball from your hand and insert it in between two balls in the row or on either end of the row.\nIf there is a group of three or more consecutive balls of the same color, remove the group of balls from the board.\n\t\nIf this removal causes more groups of three or more of the same color to form, then continue removing each group until there are none left.\n\n\nIf there are no more balls on the board, then you win the game.\nRepeat this process until you either win or do not have any more balls in your hand.\n\nGiven a string board, representing the row of balls on the board, and a string hand, representing the balls in your hand, return the minimum number of balls you have to insert to clear all the balls from the board. If you cannot clear all the balls from the board using the balls in your hand, return -1.\n\u00a0\nExample 1:\nInput: board = \"WRRBBW\", hand = \"RB\"\nOutput: -1\nExplanation: It is impossible to clear all the balls. The best you can do is:\n- Insert 'R' so the board becomes WRRRBBW. WRRRBBW -> WBBW.\n- Insert 'B' so the board becomes WBBBW. WBBBW -> WW.\nThere are still balls remaining on the board, and you are out of balls to insert.\nExample 2:\nInput: board = \"WWRRBBWW\", hand = \"WRBRW\"\nOutput: 2\nExplanation: To make the board empty:\n- Insert 'R' so the board becomes WWRRRBBWW. WWRRRBBWW -> WWBBWW.\n- Insert 'B' so the board becomes WWBBBWW. WWBBBWW -> WWWW -> empty.\n2 balls from your hand were needed to clear the board.\n\nExample 3:\nInput: board = \"G\", hand = \"GGGGG\"\nOutput: 2\nExplanation: To make the board empty:\n- Insert 'G' so the board becomes GG.\n- Insert 'G' so the board becomes GGG. GGG -> empty.\n2 balls from your hand were needed to clear the board.\n\n\u00a0\nConstraints:\n\n1 <= board.length <= 16\n1 <= hand.length <= 5\nboard and hand consist of the characters 'R', 'Y', 'B', 'G', and 'W'.\nThe initial row of balls on the board will not have any groups of three or more consecutive balls of the same color.\n\n"], "491. Increasing Subsequences": ["https://leetcode.com/problems/increasing-subsequences", "Given an integer array nums, return all the different possible increasing subsequences of the given array with at least two elements. You may return the answer in any order.\nThe given array may contain duplicates, and two equal integers should also be considered a special case of increasing sequence.\n\u00a0\nExample 1:\nInput: nums = [4,6,7,7]\nOutput: [[4,6],[4,6,7],[4,6,7,7],[4,7],[4,7,7],[6,7],[6,7,7],[7,7]]\n\nExample 2:\nInput: nums = [4,4,3,2,1]\nOutput: [[4,4]]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 15\n-100 <= nums[i] <= 100\n\n"], "492. Construct the Rectangle": ["https://leetcode.com/problems/construct-the-rectangle", "A web developer needs to know how to design a web page's size. So, given a specific rectangular web page\u2019s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:\n\nThe area of the rectangular web page you designed must equal to the given target area.\nThe width W should not be larger than the length L, which means L >= W.\nThe difference between length L and width W should be as small as possible.\n\nReturn an array [L, W] where L and W are the length and width of the\u00a0web page you designed in sequence.\n\u00a0\nExample 1:\nInput: area = 4\nOutput: [2,2]\nExplanation: The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. \nBut according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.\n\nExample 2:\nInput: area = 37\nOutput: [37,1]\n\nExample 3:\nInput: area = 122122\nOutput: [427,286]\n\n\u00a0\nConstraints:\n\n1 <= area <= 107\n\n"], "493. Reverse Pairs": ["https://leetcode.com/problems/reverse-pairs", "Given an integer array nums, return the number of reverse pairs in the array.\nA reverse pair is a pair (i, j) where 0 <= i < j < nums.length and nums[i] > 2 * nums[j].\n\u00a0\nExample 1:\nInput: nums = [1,3,2,3,1]\nOutput: 2\nExample 2:\nInput: nums = [2,4,3,5,1]\nOutput: 3\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5 * 104\n-231 <= nums[i] <= 231 - 1\n\n"], "494. Target Sum": ["https://leetcode.com/problems/target-sum", "You are given an integer array nums and an integer target.\nYou want to build an expression out of nums by adding one of the symbols '+' and '-' before each integer in nums and then concatenate all the integers.\n\nFor example, if nums = [2, 1], you can add a '+' before 2 and a '-' before 1 and concatenate them to build the expression \"+2-1\".\n\nReturn the number of different expressions that you can build, which evaluates to target.\n\u00a0\nExample 1:\nInput: nums = [1,1,1,1,1], target = 3\nOutput: 5\nExplanation: There are 5 ways to assign symbols to make the sum of nums be target 3.\n-1 + 1 + 1 + 1 + 1 = 3\n+1 - 1 + 1 + 1 + 1 = 3\n+1 + 1 - 1 + 1 + 1 = 3\n+1 + 1 + 1 - 1 + 1 = 3\n+1 + 1 + 1 + 1 - 1 = 3\n\nExample 2:\nInput: nums = [1], target = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 20\n0 <= nums[i] <= 1000\n0 <= sum(nums[i]) <= 1000\n-1000 <= target <= 1000\n\n"], "495. Teemo Attacking": ["https://leetcode.com/problems/teemo-attacking", "Our hero Teemo is attacking an enemy Ashe with poison attacks! When Teemo attacks Ashe, Ashe gets poisoned for a exactly duration seconds. More formally, an attack at second t will mean Ashe is poisoned during the inclusive time interval [t, t + duration - 1]. If Teemo attacks again before the poison effect ends, the timer for it is reset, and the poison effect will end duration seconds after the new attack.\nYou are given a non-decreasing integer array timeSeries, where timeSeries[i] denotes that Teemo attacks Ashe at second timeSeries[i], and an integer duration.\nReturn the total number of seconds that Ashe is poisoned.\n\u00a0\nExample 1:\nInput: timeSeries = [1,4], duration = 2\nOutput: 4\nExplanation: Teemo's attacks on Ashe go as follows:\n- At second 1, Teemo attacks, and Ashe is poisoned for seconds 1 and 2.\n- At second 4, Teemo attacks, and Ashe is poisoned for seconds 4 and 5.\nAshe is poisoned for seconds 1, 2, 4, and 5, which is 4 seconds in total.\n\nExample 2:\nInput: timeSeries = [1,2], duration = 2\nOutput: 3\nExplanation: Teemo's attacks on Ashe go as follows:\n- At second 1, Teemo attacks, and Ashe is poisoned for seconds 1 and 2.\n- At second 2 however, Teemo attacks again and resets the poison timer. Ashe is poisoned for seconds 2 and 3.\nAshe is poisoned for seconds 1, 2, and 3, which is 3 seconds in total.\n\u00a0\nConstraints:\n\n1 <= timeSeries.length <= 104\n0 <= timeSeries[i], duration <= 107\ntimeSeries is sorted in non-decreasing order.\n\n"], "496. Next Greater Element I": ["https://leetcode.com/problems/next-greater-element-i", "The next greater element of some element x in an array is the first greater element that is to the right of x in the same array.\nYou are given two distinct 0-indexed integer arrays nums1 and nums2, where nums1 is a subset of nums2.\nFor each 0 <= i < nums1.length, find the index j such that nums1[i] == nums2[j] and determine the next greater element of nums2[j] in nums2. If there is no next greater element, then the answer for this query is -1.\nReturn an array ans of length nums1.length such that ans[i] is the next greater element as described above.\n\u00a0\nExample 1:\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2]\nOutput: [-1,3,-1]\nExplanation: The next greater element for each value of nums1 is as follows:\n- 4 is underlined in nums2 = [1,3,4,2]. There is no next greater element, so the answer is -1.\n- 1 is underlined in nums2 = [1,3,4,2]. The next greater element is 3.\n- 2 is underlined in nums2 = [1,3,4,2]. There is no next greater element, so the answer is -1.\n\nExample 2:\nInput: nums1 = [2,4], nums2 = [1,2,3,4]\nOutput: [3,-1]\nExplanation: The next greater element for each value of nums1 is as follows:\n- 2 is underlined in nums2 = [1,2,3,4]. The next greater element is 3.\n- 4 is underlined in nums2 = [1,2,3,4]. There is no next greater element, so the answer is -1.\n\n\u00a0\nConstraints:\n\n1 <= nums1.length <= nums2.length <= 1000\n0 <= nums1[i], nums2[i] <= 104\nAll integers in nums1 and nums2 are unique.\nAll the integers of nums1 also appear in nums2.\n\n\u00a0\nFollow up: Could you find an O(nums1.length + nums2.length) solution?"], "497. Random Point in Non-overlapping Rectangles": ["https://leetcode.com/problems/random-point-in-non-overlapping-rectangles", "You are given an array of non-overlapping axis-aligned rectangles rects where rects[i] = [ai, bi, xi, yi] indicates that (ai, bi) is the bottom-left corner point of the ith rectangle and (xi, yi) is the top-right corner point of the ith rectangle. Design an algorithm to pick a random integer point inside the space covered by one of the given rectangles. A point on the perimeter of a rectangle is included in the space covered by the rectangle.\nAny integer point inside the space covered by one of the given rectangles should be equally likely to be returned.\nNote that an integer point is a point that has integer coordinates.\nImplement the Solution class:\n\nSolution(int[][] rects) Initializes the object with the given rectangles rects.\nint[] pick() Returns a random integer point [u, v] inside the space covered by one of the given rectangles.\n\n\u00a0\nExample 1:\n\nInput\n[\"Solution\", \"pick\", \"pick\", \"pick\", \"pick\", \"pick\"]\n[[[[-2, -2, 1, 1], [2, 2, 4, 6]]], [], [], [], [], []]\nOutput\n[null, [1, -2], [1, -1], [-1, -2], [-2, -2], [0, 0]]\n\nExplanation\nSolution solution = new Solution([[-2, -2, 1, 1], [2, 2, 4, 6]]);\nsolution.pick(); // return [1, -2]\nsolution.pick(); // return [1, -1]\nsolution.pick(); // return [-1, -2]\nsolution.pick(); // return [-2, -2]\nsolution.pick(); // return [0, 0]\n\n\u00a0\nConstraints:\n\n1 <= rects.length <= 100\nrects[i].length == 4\n-109 <= ai < xi <= 109\n-109 <= bi < yi <= 109\nxi - ai <= 2000\nyi - bi <= 2000\nAll the rectangles do not overlap.\nAt most 104 calls will be made to pick.\n\n"], "498. Diagonal Traverse": ["https://leetcode.com/problems/diagonal-traverse", "Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.\n\u00a0\nExample 1:\n\nInput: mat = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [1,2,4,7,5,3,6,8,9]\n\nExample 2:\nInput: mat = [[1,2],[3,4]]\nOutput: [1,2,3,4]\n\n\u00a0\nConstraints:\n\nm == mat.length\nn == mat[i].length\n1 <= m, n <= 104\n1 <= m * n <= 104\n-105 <= mat[i][j] <= 105\n\n"], "500. Keyboard Row": ["https://leetcode.com/problems/keyboard-row", "Given an array of strings words, return the words that can be typed using letters of the alphabet on only one row of American keyboard like the image below.\nIn the American keyboard:\n\nthe first row consists of the characters \"qwertyuiop\",\nthe second row consists of the characters \"asdfghjkl\", and\nthe third row consists of the characters \"zxcvbnm\".\n\n\n\u00a0\nExample 1:\nInput: words = [\"Hello\",\"Alaska\",\"Dad\",\"Peace\"]\nOutput: [\"Alaska\",\"Dad\"]\n\nExample 2:\nInput: words = [\"omk\"]\nOutput: []\n\nExample 3:\nInput: words = [\"adsdf\",\"sfd\"]\nOutput: [\"adsdf\",\"sfd\"]\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 20\n1 <= words[i].length <= 100\nwords[i] consists of English letters (both lowercase and uppercase).\u00a0\n\n"], "501. Find Mode in Binary Search Tree": ["https://leetcode.com/problems/find-mode-in-binary-search-tree", "Given the root of a binary search tree (BST) with duplicates, return all the mode(s) (i.e., the most frequently occurred element) in it.\nIf the tree has more than one mode, return them in any order.\nAssume a BST is defined as follows:\n\nThe left subtree of a node contains only nodes with keys less than or equal to the node's key.\nThe right subtree of a node contains only nodes with keys greater than or equal to the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\n\u00a0\nExample 1:\n\nInput: root = [1,null,2,2]\nOutput: [2]\n\nExample 2:\nInput: root = [0]\nOutput: [0]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-105 <= Node.val <= 105\n\n\u00a0\nFollow up: Could you do that without using any extra space? (Assume that the implicit stack space incurred due to recursion does not count)."], "502. IPO": ["https://leetcode.com/problems/ipo", "Suppose LeetCode will start its IPO soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the IPO. Since it has limited resources, it can only finish at most k distinct projects before the IPO. Help LeetCode design the best way to maximize its total capital after finishing at most k distinct projects.\nYou are given n projects where the ith project has a pure profit profits[i] and a minimum capital of capital[i] is needed to start it.\nInitially, you have w capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.\nPick a list of at most k distinct projects from given projects to maximize your final capital, and return the final maximized capital.\nThe answer is guaranteed to fit in a 32-bit signed integer.\n\u00a0\nExample 1:\nInput: k = 2, w = 0, profits = [1,2,3], capital = [0,1,1]\nOutput: 4\nExplanation: Since your initial capital is 0, you can only start the project indexed 0.\nAfter finishing it you will obtain profit 1 and your capital becomes 1.\nWith capital 1, you can either start the project indexed 1 or the project indexed 2.\nSince you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.\nTherefore, output the final maximized capital, which is 0 + 1 + 3 = 4.\n\nExample 2:\nInput: k = 3, w = 0, profits = [1,2,3], capital = [0,1,2]\nOutput: 6\n\n\u00a0\nConstraints:\n\n1 <= k <= 105\n0 <= w <= 109\nn == profits.length\nn == capital.length\n1 <= n <= 105\n0 <= profits[i] <= 104\n0 <= capital[i] <= 109\n\n"], "503. Next Greater Element II": ["https://leetcode.com/problems/next-greater-element-ii", "Given a circular integer array nums (i.e., the next element of nums[nums.length - 1] is nums[0]), return the next greater number for every element in nums.\nThe next greater number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, return -1 for this number.\n\u00a0\nExample 1:\nInput: nums = [1,2,1]\nOutput: [2,-1,2]\nExplanation: The first 1's next greater number is 2; \nThe number 2 can't find next greater number. \nThe second 1's next greater number needs to search circularly, which is also 2.\n\nExample 2:\nInput: nums = [1,2,3,4,3]\nOutput: [2,3,4,-1,4]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-109 <= nums[i] <= 109\n\n"], "504. Base 7": ["https://leetcode.com/problems/base-7", "Given an integer num, return a string of its base 7 representation.\n\u00a0\nExample 1:\nInput: num = 100\nOutput: \"202\"\nExample 2:\nInput: num = -7\nOutput: \"-10\"\n\n\u00a0\nConstraints:\n\n-107 <= num <= 107\n\n"], "506. Relative Ranks": ["https://leetcode.com/problems/relative-ranks", "You are given an integer array score of size n, where score[i] is the score of the ith athlete in a competition. All the scores are guaranteed to be unique.\nThe athletes are placed based on their scores, where the 1st place athlete has the highest score, the 2nd place athlete has the 2nd highest score, and so on. The placement of each athlete determines their rank:\n\nThe 1st place athlete's rank is \"Gold Medal\".\nThe 2nd place athlete's rank is \"Silver Medal\".\nThe 3rd place athlete's rank is \"Bronze Medal\".\nFor the 4th place to the nth place athlete, their rank is their placement number (i.e., the xth place athlete's rank is \"x\").\n\nReturn an array answer of size n where answer[i] is the rank of the ith athlete.\n\u00a0\nExample 1:\nInput: score = [5,4,3,2,1]\nOutput: [\"Gold Medal\",\"Silver Medal\",\"Bronze Medal\",\"4\",\"5\"]\nExplanation: The placements are [1st, 2nd, 3rd, 4th, 5th].\nExample 2:\nInput: score = [10,3,8,9,4]\nOutput: [\"Gold Medal\",\"5\",\"Bronze Medal\",\"Silver Medal\",\"4\"]\nExplanation: The placements are [1st, 5th, 3rd, 2nd, 4th].\n\n\n\u00a0\nConstraints:\n\nn == score.length\n1 <= n <= 104\n0 <= score[i] <= 106\nAll the values in score are unique.\n\n"], "507. Perfect Number": ["https://leetcode.com/problems/perfect-number", "A perfect number is a positive integer that is equal to the sum of its positive divisors, excluding the number itself. A divisor of an integer x is an integer that can divide x evenly.\nGiven an integer n, return true if n is a perfect number, otherwise return false.\n\u00a0\nExample 1:\nInput: num = 28\nOutput: true\nExplanation: 28 = 1 + 2 + 4 + 7 + 14\n1, 2, 4, 7, and 14 are all divisors of 28.\n\nExample 2:\nInput: num = 7\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= num <= 108\n\n"], "508. Most Frequent Subtree Sum": ["https://leetcode.com/problems/most-frequent-subtree-sum", "Given the root of a binary tree, return the most frequent subtree sum. If there is a tie, return all the values with the highest frequency in any order.\nThe subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself).\n\u00a0\nExample 1:\n\nInput: root = [5,2,-3]\nOutput: [2,-3,4]\n\nExample 2:\n\nInput: root = [5,2,-5]\nOutput: [2]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-105 <= Node.val <= 105\n\n"], "509. Fibonacci Number": ["https://leetcode.com/problems/fibonacci-number", "The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,\nF(0) = 0, F(1) = 1\nF(n) = F(n - 1) + F(n - 2), for n > 1.\n\nGiven n, calculate F(n).\n\u00a0\nExample 1:\nInput: n = 2\nOutput: 1\nExplanation: F(2) = F(1) + F(0) = 1 + 0 = 1.\n\nExample 2:\nInput: n = 3\nOutput: 2\nExplanation: F(3) = F(2) + F(1) = 1 + 1 = 2.\n\nExample 3:\nInput: n = 4\nOutput: 3\nExplanation: F(4) = F(3) + F(2) = 2 + 1 = 3.\n\n\u00a0\nConstraints:\n\n0 <= n <= 30\n\n"], "511. Game Play Analysis I": ["https://leetcode.com/problems/game-play-analysis-i", "SQL SchemaTable: Activity\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| player_id    | int     |\n| device_id    | int     |\n| event_date   | date    |\n| games_played | int     |\n+--------------+---------+\n(player_id, event_date) is the primary key of this table.\nThis table shows the activity of players of some games.\nEach row is a record of a player who logged in and played a number of games (possibly 0) before logging out on someday using some device.\n\n\u00a0\nWrite an SQL query to report the first login date for each player.\nReturn the result table in any order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nActivity table:\n+-----------+-----------+------------+--------------+\n| player_id | device_id | event_date | games_played |\n+-----------+-----------+------------+--------------+\n| 1         | 2         | 2016-03-01 | 5            |\n| 1         | 2         | 2016-05-02 | 6            |\n| 2         | 3         | 2017-06-25 | 1            |\n| 3         | 1         | 2016-03-02 | 0            |\n| 3         | 4         | 2018-07-03 | 5            |\n+-----------+-----------+------------+--------------+\nOutput: \n+-----------+-------------+\n| player_id | first_login |\n+-----------+-------------+\n| 1         | 2016-03-01  |\n| 2         | 2017-06-25  |\n| 3         | 2016-03-02  |\n+-----------+-------------+\n\n"], "513. Find Bottom Left Tree Value": ["https://leetcode.com/problems/find-bottom-left-tree-value", "Given the root of a binary tree, return the leftmost value in the last row of the tree.\n\u00a0\nExample 1:\n\nInput: root = [2,1,3]\nOutput: 1\n\nExample 2:\n\nInput: root = [1,2,3,4,null,5,6,null,null,7]\nOutput: 7\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-231 <= Node.val <= 231 - 1\n\n"], "514. Freedom Trail": ["https://leetcode.com/problems/freedom-trail", "In the video game Fallout 4, the quest \"Road to Freedom\" requires players to reach a metal dial called the \"Freedom Trail Ring\" and use the dial to spell a specific keyword to open the door.\nGiven a string ring that represents the code engraved on the outer ring and another string key that represents the keyword that needs to be spelled, return the minimum number of steps to spell all the characters in the keyword.\nInitially, the first character of the ring is aligned at the \"12:00\" direction. You should spell all the characters in key one by one by rotating ring clockwise or anticlockwise to make each character of the string key aligned at the \"12:00\" direction and then by pressing the center button.\nAt the stage of rotating the ring to spell the key character key[i]:\n\nYou can rotate the ring clockwise or anticlockwise by one place, which counts as one step. The final purpose of the rotation is to align one of ring's characters at the \"12:00\" direction, where this character must equal key[i].\nIf the character key[i] has been aligned at the \"12:00\" direction, press the center button to spell, which also counts as one step. After the pressing, you could begin to spell the next character in the key (next stage). Otherwise, you have finished all the spelling.\n\n\u00a0\nExample 1:\n\nInput: ring = \"godding\", key = \"gd\"\nOutput: 4\nExplanation:\nFor the first key character 'g', since it is already in place, we just need 1 step to spell this character. \nFor the second key character 'd', we need to rotate the ring \"godding\" anticlockwise by two steps to make it become \"ddinggo\".\nAlso, we need 1 more step for spelling.\nSo the final output is 4.\n\nExample 2:\nInput: ring = \"godding\", key = \"godding\"\nOutput: 13\n\n\u00a0\nConstraints:\n\n1 <= ring.length, key.length <= 100\nring and key consist of only lower case English letters.\nIt is guaranteed that key could always be spelled by rotating ring.\n\n"], "515. Find Largest Value in Each Tree Row": ["https://leetcode.com/problems/find-largest-value-in-each-tree-row", "Given the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).\n\u00a0\nExample 1:\n\nInput: root = [1,3,2,5,3,null,9]\nOutput: [1,3,9]\n\nExample 2:\nInput: root = [1,2,3]\nOutput: [1,3]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree will be in the range [0, 104].\n-231 <= Node.val <= 231 - 1\n\n"], "516. Longest Palindromic Subsequence": ["https://leetcode.com/problems/longest-palindromic-subsequence", "Given a string s, find the longest palindromic subsequence's length in s.\nA subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n\u00a0\nExample 1:\nInput: s = \"bbbab\"\nOutput: 4\nExplanation: One possible longest palindromic subsequence is \"bbbb\".\n\nExample 2:\nInput: s = \"cbbd\"\nOutput: 2\nExplanation: One possible longest palindromic subsequence is \"bb\".\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\ns consists only of lowercase English letters.\n\n"], "517. Super Washing Machines": ["https://leetcode.com/problems/super-washing-machines", "You have n super washing machines on a line. Initially, each washing machine has some dresses or is empty.\nFor each move, you could choose any m (1 <= m <= n) washing machines, and pass one dress of each washing machine to one of its adjacent washing machines at the same time.\nGiven an integer array machines representing the number of dresses in each washing machine from left to right on the line, return the minimum number of moves to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.\n\u00a0\nExample 1:\nInput: machines = [1,0,5]\nOutput: 3\nExplanation:\n1st move:    1     0 <-- 5    =>    1     1     4\n2nd move:    1 <-- 1 <-- 4    =>    2     1     3\n3rd move:    2     1 <-- 3    =>    2     2     2\n\nExample 2:\nInput: machines = [0,3,0]\nOutput: 2\nExplanation:\n1st move:    0 <-- 3     0    =>    1     2     0\n2nd move:    1     2 --> 0    =>    1     1     1\n\nExample 3:\nInput: machines = [0,2,0]\nOutput: -1\nExplanation:\nIt's impossible to make all three washing machines have the same number of dresses.\n\n\u00a0\nConstraints:\n\nn == machines.length\n1 <= n <= 104\n0 <= machines[i] <= 105\n\n"], "518. Coin Change 2": ["https://leetcode.com/problems/coin-change-2", "You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money.\nReturn the number of combinations that make up that amount. If that amount of money cannot be made up by any combination of the coins, return 0.\nYou may assume that you have an infinite number of each kind of coin.\nThe answer is guaranteed to fit into a signed 32-bit integer.\n\u00a0\nExample 1:\nInput: amount = 5, coins = [1,2,5]\nOutput: 4\nExplanation: there are four ways to make up the amount:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1\n\nExample 2:\nInput: amount = 3, coins = [2]\nOutput: 0\nExplanation: the amount of 3 cannot be made up just with coins of 2.\n\nExample 3:\nInput: amount = 10, coins = [10]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= coins.length <= 300\n1 <= coins[i] <= 5000\nAll the values of coins are unique.\n0 <= amount <= 5000\n\n"], "519. Random Flip Matrix": ["https://leetcode.com/problems/random-flip-matrix", "There is an m x n binary grid matrix with all the values set 0 initially. Design an algorithm to randomly pick an index (i, j) where matrix[i][j] == 0 and flips it to 1. All the indices (i, j) where matrix[i][j] == 0 should be equally likely to be returned.\nOptimize your algorithm to minimize the number of calls made to the built-in random function of your language and optimize the time and space complexity.\nImplement the Solution class:\n\nSolution(int m, int n) Initializes the object with the size of the binary matrix m and n.\nint[] flip() Returns a random index [i, j] of the matrix where matrix[i][j] == 0 and flips it to 1.\nvoid reset() Resets all the values of the matrix to be 0.\n\n\u00a0\nExample 1:\nInput\n[\"Solution\", \"flip\", \"flip\", \"flip\", \"reset\", \"flip\"]\n[[3, 1], [], [], [], [], []]\nOutput\n[null, [1, 0], [2, 0], [0, 0], null, [2, 0]]\n\nExplanation\nSolution solution = new Solution(3, 1);\nsolution.flip();  // return [1, 0], [0,0], [1,0], and [2,0] should be equally likely to be returned.\nsolution.flip();  // return [2, 0], Since [1,0] was returned, [2,0] and [0,0]\nsolution.flip();  // return [0, 0], Based on the previously returned indices, only [0,0] can be returned.\nsolution.reset(); // All the values are reset to 0 and can be returned.\nsolution.flip();  // return [2, 0], [0,0], [1,0], and [2,0] should be equally likely to be returned.\n\n\u00a0\nConstraints:\n\n1 <= m, n <= 104\nThere will be at least one free cell for each call to flip.\nAt most 1000 calls will be made to flip and reset.\n\n"], "520. Detect Capital": ["https://leetcode.com/problems/detect-capital", "We define the usage of capitals in a word to be right when one of the following cases holds:\n\nAll letters in this word are capitals, like \"USA\".\nAll letters in this word are not capitals, like \"leetcode\".\nOnly the first letter in this word is capital, like \"Google\".\n\nGiven a string word, return true if the usage of capitals in it is right.\n\u00a0\nExample 1:\nInput: word = \"USA\"\nOutput: true\nExample 2:\nInput: word = \"FlaG\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= word.length <= 100\nword consists of lowercase and uppercase English letters.\n\n"], "521. Longest Uncommon Subsequence I": ["https://leetcode.com/problems/longest-uncommon-subsequence-i", "Given two strings a and b, return the length of the longest uncommon subsequence between a and b. If the longest uncommon subsequence does not exist, return -1.\nAn uncommon subsequence between two strings is a string that is a subsequence of one but not the other.\nA subsequence of a string s is a string that can be obtained after deleting any number of characters from s.\n\nFor example, \"abc\" is a subsequence of \"aebdc\" because you can delete the underlined characters in \"aebdc\" to get \"abc\". Other subsequences of \"aebdc\" include \"aebdc\", \"aeb\", and \"\" (empty string).\n\n\u00a0\nExample 1:\nInput: a = \"aba\", b = \"cdc\"\nOutput: 3\nExplanation: One longest uncommon subsequence is \"aba\" because \"aba\" is a subsequence of \"aba\" but not \"cdc\".\nNote that \"cdc\" is also a longest uncommon subsequence.\n\nExample 2:\nInput: a = \"aaa\", b = \"bbb\"\nOutput: 3\nExplanation:\u00a0The longest uncommon subsequences are \"aaa\" and \"bbb\".\n\nExample 3:\nInput: a = \"aaa\", b = \"aaa\"\nOutput: -1\nExplanation:\u00a0Every subsequence of string a is also a subsequence of string b. Similarly, every subsequence of string b is also a subsequence of string a.\n\n\u00a0\nConstraints:\n\n1 <= a.length, b.length <= 100\na and b consist of lower-case English letters.\n\n"], "522. Longest Uncommon Subsequence II": ["https://leetcode.com/problems/longest-uncommon-subsequence-ii", ""], "523. Continuous Subarray Sum": ["https://leetcode.com/problems/continuous-subarray-sum", "Given an integer array nums and an integer k, return true if nums has a continuous subarray of size at least two whose elements sum up to a multiple of k, or false otherwise.\nAn integer x is a multiple of k if there exists an integer n such that x = n * k. 0 is always a multiple of k.\n\u00a0\nExample 1:\nInput: nums = [23,2,4,6,7], k = 6\nOutput: true\nExplanation: [2, 4] is a continuous subarray of size 2 whose elements sum up to 6.\n\nExample 2:\nInput: nums = [23,2,6,4,7], k = 6\nOutput: true\nExplanation: [23, 2, 6, 4, 7] is an continuous subarray of size 5 whose elements sum up to 42.\n42 is a multiple of 6 because 42 = 7 * 6 and 7 is an integer.\n\nExample 3:\nInput: nums = [23,2,6,4,7], k = 13\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n0 <= nums[i] <= 109\n0 <= sum(nums[i]) <= 231 - 1\n1 <= k <= 231 - 1\n\n"], "524. Longest Word in Dictionary through Deleting": ["https://leetcode.com/problems/longest-word-in-dictionary-through-deleting", "Given a string s and a string array dictionary, return the longest string in the dictionary that can be formed by deleting some of the given string characters. If there is more than one possible result, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\n\u00a0\nExample 1:\nInput: s = \"abpcplea\", dictionary = [\"ale\",\"apple\",\"monkey\",\"plea\"]\nOutput: \"apple\"\n\nExample 2:\nInput: s = \"abpcplea\", dictionary = [\"a\",\"b\",\"c\"]\nOutput: \"a\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\n1 <= dictionary.length <= 1000\n1 <= dictionary[i].length <= 1000\ns and dictionary[i] consist of lowercase English letters.\n\n"], "525. Contiguous Array": ["https://leetcode.com/problems/contiguous-array", "Given a binary array nums, return the maximum length of a contiguous subarray with an equal number of 0 and 1.\n\u00a0\nExample 1:\nInput: nums = [0,1]\nOutput: 2\nExplanation: [0, 1] is the longest contiguous subarray with an equal number of 0 and 1.\n\nExample 2:\nInput: nums = [0,1,0]\nOutput: 2\nExplanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\nnums[i] is either 0 or 1.\n\n"], "526. Beautiful Arrangement": ["https://leetcode.com/problems/beautiful-arrangement", "Suppose you have n integers labeled 1 through n. A permutation of those n integers perm (1-indexed) is considered a beautiful arrangement if for every i (1 <= i <= n), either of the following is true:\n\nperm[i] is divisible by i.\ni is divisible by perm[i].\n\nGiven an integer n, return the number of the beautiful arrangements that you can construct.\n\u00a0\nExample 1:\nInput: n = 2\nOutput: 2\nExplanation: \nThe first beautiful arrangement is [1,2]:\n    - perm[1] = 1 is divisible by i = 1\n    - perm[2] = 2 is divisible by i = 2\nThe second beautiful arrangement is [2,1]:\n    - perm[1] = 2 is divisible by i = 1\n    - i = 2 is divisible by perm[2] = 1\n\nExample 2:\nInput: n = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= n <= 15\n\n"], "528. Random Pick with Weight": ["https://leetcode.com/problems/random-pick-with-weight", "You are given a 0-indexed array of positive integers w where w[i] describes the weight of the ith index.\nYou need to implement the function pickIndex(), which randomly picks an index in the range [0, w.length - 1] (inclusive) and returns it. The probability of picking an index i is w[i] / sum(w).\n\nFor example, if w = [1, 3], the probability of picking index 0 is 1 / (1 + 3) = 0.25 (i.e., 25%), and the probability of picking index 1 is 3 / (1 + 3) = 0.75 (i.e., 75%).\n\n\u00a0\nExample 1:\nInput\n[\"Solution\",\"pickIndex\"]\n[[[1]],[]]\nOutput\n[null,0]\n\nExplanation\nSolution solution = new Solution([1]);\nsolution.pickIndex(); // return 0. The only option is to return 0 since there is only one element in w.\n\nExample 2:\nInput\n[\"Solution\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\"]\n[[[1,3]],[],[],[],[],[]]\nOutput\n[null,1,1,1,1,0]\n\nExplanation\nSolution solution = new Solution([1, 3]);\nsolution.pickIndex(); // return 1. It is returning the second element (index = 1) that has a probability of 3/4.\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 0. It is returning the first element (index = 0) that has a probability of 1/4.\n\nSince this is a randomization problem, multiple answers are allowed.\nAll of the following outputs can be considered correct:\n[null,1,1,1,1,0]\n[null,1,1,1,1,1]\n[null,1,1,1,0,0]\n[null,1,1,1,0,1]\n[null,1,0,1,0,0]\n......\nand so on.\n\n\u00a0\nConstraints:\n\n1 <= w.length <= 104\n1 <= w[i] <= 105\npickIndex will be called at most 104 times.\n\n"], "529. Minesweeper": ["https://leetcode.com/problems/minesweeper", "Let's play the minesweeper game (Wikipedia, online game)!\nYou are given an m x n char matrix board representing the game board where:\n\n'M' represents an unrevealed mine,\n'E' represents an unrevealed empty square,\n'B' represents a revealed blank square that has no adjacent mines (i.e., above, below, left, right, and all 4 diagonals),\ndigit ('1' to '8') represents how many mines are adjacent to this revealed square, and\n'X' represents a revealed mine.\n\nYou are also given an integer array click where click = [clickr, clickc] represents the next click position among all the unrevealed squares ('M' or 'E').\nReturn the board after revealing this position according to the following rules:\n\nIf a mine 'M' is revealed, then the game is over. You should change it to 'X'.\nIf an empty square 'E' with no adjacent mines is revealed, then change it to a revealed blank 'B' and all of its adjacent unrevealed squares should be revealed recursively.\nIf an empty square 'E' with at least one adjacent mine is revealed, then change it to a digit ('1' to '8') representing the number of adjacent mines.\nReturn the board when no more squares will be revealed.\n\n\u00a0\nExample 1:\n\nInput: board = [[\"E\",\"E\",\"E\",\"E\",\"E\"],[\"E\",\"E\",\"M\",\"E\",\"E\"],[\"E\",\"E\",\"E\",\"E\",\"E\"],[\"E\",\"E\",\"E\",\"E\",\"E\"]], click = [3,0]\nOutput: [[\"B\",\"1\",\"E\",\"1\",\"B\"],[\"B\",\"1\",\"M\",\"1\",\"B\"],[\"B\",\"1\",\"1\",\"1\",\"B\"],[\"B\",\"B\",\"B\",\"B\",\"B\"]]\n\nExample 2:\n\nInput: board = [[\"B\",\"1\",\"E\",\"1\",\"B\"],[\"B\",\"1\",\"M\",\"1\",\"B\"],[\"B\",\"1\",\"1\",\"1\",\"B\"],[\"B\",\"B\",\"B\",\"B\",\"B\"]], click = [1,2]\nOutput: [[\"B\",\"1\",\"E\",\"1\",\"B\"],[\"B\",\"1\",\"X\",\"1\",\"B\"],[\"B\",\"1\",\"1\",\"1\",\"B\"],[\"B\",\"B\",\"B\",\"B\",\"B\"]]\n\n\u00a0\nConstraints:\n\nm == board.length\nn == board[i].length\n1 <= m, n <= 50\nboard[i][j] is either 'M', 'E', 'B', or a digit from '1' to '8'.\nclick.length == 2\n0 <= clickr < m\n0 <= clickc < n\nboard[clickr][clickc] is either 'M' or 'E'.\n\n"], "530. Minimum Absolute Difference in BST": ["https://leetcode.com/problems/minimum-absolute-difference-in-bst", "Given the root of a Binary Search Tree (BST), return the minimum absolute difference between the values of any two different nodes in the tree.\n\u00a0\nExample 1:\n\nInput: root = [4,2,6,1,3]\nOutput: 1\n\nExample 2:\n\nInput: root = [1,0,48,null,null,12,49]\nOutput: 1\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [2, 104].\n0 <= Node.val <= 105\n\n\u00a0\nNote: This question is the same as 783: https://leetcode.com/problems/minimum-distance-between-bst-nodes/\n"], "532. K-diff Pairs in an Array": ["https://leetcode.com/problems/k-diff-pairs-in-an-array", "Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.\nA k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:\n\n0 <= i, j < nums.length\ni != j\nnums[i] - nums[j] == k\n\nNotice that |val| denotes the absolute value of val.\n\u00a0\nExample 1:\nInput: nums = [3,1,4,1,5], k = 2\nOutput: 2\nExplanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).\nAlthough we have two 1s in the input, we should only return the number of unique pairs.\n\nExample 2:\nInput: nums = [1,2,3,4,5], k = 1\nOutput: 4\nExplanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\n\nExample 3:\nInput: nums = [1,3,1,5,4], k = 0\nOutput: 1\nExplanation: There is one 0-diff pair in the array, (1, 1).\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-107 <= nums[i] <= 107\n0 <= k <= 107\n\n"], "535. Encode and Decode TinyURL": ["https://leetcode.com/problems/encode-and-decode-tinyurl", "Note: This is a companion problem to the System Design problem: Design TinyURL.\nTinyURL is a URL shortening service where you enter a URL such as https://leetcode.com/problems/design-tinyurl and it returns a short URL such as http://tinyurl.com/4e9iAk. Design a class to encode a URL and decode a tiny URL.\nThere is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.\nImplement the Solution class:\n\nSolution() Initializes the object of the system.\nString encode(String longUrl) Returns a tiny URL for the given longUrl.\nString decode(String shortUrl) Returns the original long URL for the given shortUrl. It is guaranteed that the given shortUrl was encoded by the same object.\n\n\u00a0\nExample 1:\nInput: url = \"https://leetcode.com/problems/design-tinyurl\"\nOutput: \"https://leetcode.com/problems/design-tinyurl\"\n\nExplanation:\nSolution obj = new Solution();\nstring tiny = obj.encode(url); // returns the encoded tiny url.\nstring ans = obj.decode(tiny); // returns the original url after deconding it.\n\n\u00a0\nConstraints:\n\n1 <= url.length <= 104\nurl is guranteed to be a valid URL.\n\n"], "537. Complex Number Multiplication": ["https://leetcode.com/problems/complex-number-multiplication", "A complex number can be represented as a string on the form \"real+imaginaryi\" where:\n\nreal is the real part and is an integer in the range [-100, 100].\nimaginary is the imaginary part and is an integer in the range [-100, 100].\ni2 == -1.\n\nGiven two complex numbers num1 and num2 as strings, return a string of the complex number that represents their multiplications.\n\u00a0\nExample 1:\nInput: num1 = \"1+1i\", num2 = \"1+1i\"\nOutput: \"0+2i\"\nExplanation: (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form of 0+2i.\n\nExample 2:\nInput: num1 = \"1+-1i\", num2 = \"1+-1i\"\nOutput: \"0+-2i\"\nExplanation: (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form of 0+-2i.\n\n\u00a0\nConstraints:\n\nnum1 and num2 are valid complex numbers.\n\n"], "538. Convert BST to Greater Tree": ["https://leetcode.com/problems/convert-bst-to-greater-tree", "Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.\nAs a reminder, a binary search tree is a tree that satisfies these constraints:\n\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\n\u00a0\nExample 1:\n\nInput: root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\nOutput: [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n\nExample 2:\nInput: root = [0,null,1]\nOutput: [1,null,1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-104 <= Node.val <= 104\nAll the values in the tree are unique.\nroot is guaranteed to be a valid binary search tree.\n\n\u00a0\nNote: This question is the same as 1038: https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/\n"], "539. Minimum Time Difference": ["https://leetcode.com/problems/minimum-time-difference", "Given a list of 24-hour clock time points in \"HH:MM\" format, return the minimum minutes difference between any two time-points in the list.\n\u00a0\nExample 1:\nInput: timePoints = [\"23:59\",\"00:00\"]\nOutput: 1\nExample 2:\nInput: timePoints = [\"00:00\",\"23:59\",\"00:00\"]\nOutput: 0\n\n\u00a0\nConstraints:\n\n2 <= timePoints.length <= 2 * 104\ntimePoints[i] is in the format \"HH:MM\".\n\n"], "540. Single Element in a Sorted Array": ["https://leetcode.com/problems/single-element-in-a-sorted-array", "You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once.\nReturn the single element that appears only once.\nYour solution must run in O(log n) time and O(1) space.\n\u00a0\nExample 1:\nInput: nums = [1,1,2,3,3,4,4,8,8]\nOutput: 2\nExample 2:\nInput: nums = [3,3,7,7,10,11,11]\nOutput: 10\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n0 <= nums[i] <= 105\n\n"], "541. Reverse String II": ["https://leetcode.com/problems/reverse-string-ii", "Given a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string.\nIf there are fewer than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and leave the other as original.\n\u00a0\nExample 1:\nInput: s = \"abcdefg\", k = 2\nOutput: \"bacdfeg\"\nExample 2:\nInput: s = \"abcd\", k = 2\nOutput: \"bacd\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 104\ns consists of only lowercase English letters.\n1 <= k <= 104\n\n"], "542. 01 Matrix": ["https://leetcode.com/problems/01-matrix", "Given an m x n binary matrix mat, return the distance of the nearest 0 for each cell.\nThe distance between two adjacent cells is 1.\n\u00a0\nExample 1:\n\nInput: mat = [[0,0,0],[0,1,0],[0,0,0]]\nOutput: [[0,0,0],[0,1,0],[0,0,0]]\n\nExample 2:\n\nInput: mat = [[0,0,0],[0,1,0],[1,1,1]]\nOutput: [[0,0,0],[0,1,0],[1,2,1]]\n\n\u00a0\nConstraints:\n\nm == mat.length\nn == mat[i].length\n1 <= m, n <= 104\n1 <= m * n <= 104\nmat[i][j] is either 0 or 1.\nThere is at least one 0 in mat.\n\n"], "543. Diameter of Binary Tree": ["https://leetcode.com/problems/diameter-of-binary-tree", "Given the root of a binary tree, return the length of the diameter of the tree.\nThe diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.\nThe length of a path between two nodes is represented by the number of edges between them.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4,5]\nOutput: 3\nExplanation: 3 is the length of the path [4,2,1,3] or [5,2,1,3].\n\nExample 2:\nInput: root = [1,2]\nOutput: 1\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-100 <= Node.val <= 100\n\n"], "546. Remove Boxes": ["https://leetcode.com/problems/remove-boxes", "You are given several boxes with different colors represented by different positive numbers.\nYou may experience several rounds to remove boxes until there is no box left. Each time you can choose some continuous boxes with the same color (i.e., composed of k boxes, k >= 1), remove them and get k * k points.\nReturn the maximum points you can get.\n\u00a0\nExample 1:\nInput: boxes = [1,3,2,2,2,3,4,3,1]\nOutput: 23\nExplanation:\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----> [1, 3, 3, 4, 3, 1] (3*3=9 points) \n----> [1, 3, 3, 3, 1] (1*1=1 points) \n----> [1, 1] (3*3=9 points) \n----> [] (2*2=4 points)\n\nExample 2:\nInput: boxes = [1,1,1]\nOutput: 9\n\nExample 3:\nInput: boxes = [1]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= boxes.length <= 100\n1 <= boxes[i]\u00a0<= 100\n\n"], "547. Number of Provinces": ["https://leetcode.com/problems/number-of-provinces", "There are n cities. Some of them are connected, while some are not. If city a is connected directly with city b, and city b is connected directly with city c, then city a is connected indirectly with city c.\nA province is a group of directly or indirectly connected cities and no other cities outside of the group.\nYou are given an n x n matrix isConnected where isConnected[i][j] = 1 if the ith city and the jth city are directly connected, and isConnected[i][j] = 0 otherwise.\nReturn the total number of provinces.\n\u00a0\nExample 1:\n\nInput: isConnected = [[1,1,0],[1,1,0],[0,0,1]]\nOutput: 2\n\nExample 2:\n\nInput: isConnected = [[1,0,0],[0,1,0],[0,0,1]]\nOutput: 3\n\n\u00a0\nConstraints:\n\n1 <= n <= 200\nn == isConnected.length\nn == isConnected[i].length\nisConnected[i][j] is 1 or 0.\nisConnected[i][i] == 1\nisConnected[i][j] == isConnected[j][i]\n\n"], "551. Student Attendance Record I": ["https://leetcode.com/problems/student-attendance-record-i", "You are given a string s representing an attendance record for a student where each character signifies whether the student was absent, late, or present on that day. The record only contains the following three characters:\n\n'A': Absent.\n'L': Late.\n'P': Present.\n\nThe student is eligible for an attendance award if they meet both of the following criteria:\n\nThe student was absent ('A') for strictly fewer than 2 days total.\nThe student was never late ('L') for 3 or more consecutive days.\n\nReturn true if the student is eligible for an attendance award, or false otherwise.\n\u00a0\nExample 1:\nInput: s = \"PPALLP\"\nOutput: true\nExplanation: The student has fewer than 2 absences and was never late 3 or more consecutive days.\n\nExample 2:\nInput: s = \"PPALLL\"\nOutput: false\nExplanation: The student was late 3 consecutive days in the last 3 days, so is not eligible for the award.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\ns[i] is either 'A', 'L', or 'P'.\n\n"], "552. Student Attendance Record II": ["https://leetcode.com/problems/student-attendance-record-ii", "An attendance record for a student can be represented as a string where each character signifies whether the student was absent, late, or present on that day. The record only contains the following three characters:\n\n'A': Absent.\n'L': Late.\n'P': Present.\n\nAny student is eligible for an attendance award if they meet both of the following criteria:\n\nThe student was absent ('A') for strictly fewer than 2 days total.\nThe student was never late ('L') for 3 or more consecutive days.\n\nGiven an integer n, return the number of possible attendance records of length n that make a student eligible for an attendance award. The answer may be very large, so return it modulo 109 + 7.\n\u00a0\nExample 1:\nInput: n = 2\nOutput: 8\nExplanation: There are 8 records with length 2 that are eligible for an award:\n\"PP\", \"AP\", \"PA\", \"LP\", \"PL\", \"AL\", \"LA\", \"LL\"\nOnly \"AA\" is not eligible because there are 2 absences (there need to be fewer than 2).\n\nExample 2:\nInput: n = 1\nOutput: 3\n\nExample 3:\nInput: n = 10101\nOutput: 183236316\n\n\u00a0\nConstraints:\n\n1 <= n <= 105\n\n"], "553. Optimal Division": ["https://leetcode.com/problems/optimal-division", "You are given an integer array nums. The adjacent integers in nums will perform the float division.\n\nFor example, for nums = [2,3,4], we will evaluate the expression \"2/3/4\".\n\nHowever, you can add any number of parenthesis at any position to change the priority of operations. You want to add these parentheses such the value of the expression after the evaluation is maximum.\nReturn the corresponding expression that has the maximum value in string format.\nNote: your expression should not contain redundant parenthesis.\n\u00a0\nExample 1:\nInput: nums = [1000,100,10,2]\nOutput: \"1000/(100/10/2)\"\nExplanation:\n1000/(100/10/2) = 1000/((100/10)/2) = 200\nHowever, the bold parenthesis in \"1000/((100/10)/2)\" are redundant, since they don't influence the operation priority. So you should return \"1000/(100/10/2)\".\nOther cases:\n1000/(100/10)/2 = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2\n\nExample 2:\nInput: nums = [2,3,4]\nOutput: \"2/(3/4)\"\n\nExample 3:\nInput: nums = [2]\nOutput: \"2\"\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 10\n2 <= nums[i] <= 1000\nThere is only one optimal division for the given iput.\n\n"], "554. Brick Wall": ["https://leetcode.com/problems/brick-wall", "There is a rectangular brick wall in front of you with n rows of bricks. The ith row has some number of bricks each of the same height (i.e., one unit) but they can be of different widths. The total width of each row is the same.\nDraw a vertical line from the top to the bottom and cross the least bricks. If your line goes through the edge of a brick, then the brick is not considered as crossed. You cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks.\nGiven the 2D array wall that contains the information about the wall, return the minimum number of crossed bricks after drawing such a vertical line.\n\u00a0\nExample 1:\n\nInput: wall = [[1,2,2,1],[3,1,2],[1,3,2],[2,4],[3,1,2],[1,3,1,1]]\nOutput: 2\n\nExample 2:\nInput: wall = [[1],[1],[1]]\nOutput: 3\n\n\u00a0\nConstraints:\n\nn == wall.length\n1 <= n <= 104\n1 <= wall[i].length <= 104\n1 <= sum(wall[i].length) <= 2 * 104\nsum(wall[i]) is the same for each row i.\n1 <= wall[i][j] <= 231 - 1\n\n"], "556. Next Greater Element III": ["https://leetcode.com/problems/next-greater-element-iii", "Given a positive integer n, find the smallest integer which has exactly the same digits existing in the integer n and is greater in value than n. If no such positive integer exists, return -1.\nNote that the returned integer should fit in 32-bit integer, if there is a valid answer but it does not fit in 32-bit integer, return -1.\n\u00a0\nExample 1:\nInput: n = 12\nOutput: 21\nExample 2:\nInput: n = 21\nOutput: -1\n\n\u00a0\nConstraints:\n\n1 <= n <= 231 - 1\n\n"], "557. Reverse Words in a String III": ["https://leetcode.com/problems/reverse-words-in-a-string-iii", "Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.\n\u00a0\nExample 1:\nInput: s = \"Let's take LeetCode contest\"\nOutput: \"s'teL ekat edoCteeL tsetnoc\"\nExample 2:\nInput: s = \"God Ding\"\nOutput: \"doG gniD\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 5 * 104\ns contains printable ASCII characters.\ns does not contain any leading or trailing spaces.\nThere is at least one word in s.\nAll the words in s are separated by a single space.\n\n"], "558. Logical OR of Two Binary Grids Represented as Quad-Trees": ["https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees", "A Binary Matrix is a matrix in which all the elements are either 0 or 1.\nGiven quadTree1 and quadTree2. quadTree1 represents a n * n binary matrix and quadTree2 represents another n * n binary matrix.\nReturn a Quad-Tree representing the n * n binary matrix which is the result of logical bitwise OR of the two binary matrixes represented by quadTree1 and quadTree2.\nNotice that you can assign the value of a node to True or False when isLeaf is False, and both are accepted in the answer.\nA Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:\n\nval: True if the node represents a grid of 1's or False if the node represents a grid of 0's.\nisLeaf: True if the node is leaf node on the tree or False if the node has the four children.\n\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n}\nWe can construct a Quad-Tree from a two-dimensional area using the following steps:\n\nIf the current grid has the same value (i.e all 1's or all 0's) set isLeaf True and set val to the value of the grid and set the four children to Null and stop.\nIf the current grid has different values, set isLeaf to False and set val to any value and divide the current grid into four sub-grids as shown in the photo.\nRecurse for each of the children with the proper sub-grid.\n\n\nIf you want to know more about the Quad-Tree, you can refer to the wiki.\nQuad-Tree format:\nThe input/output represents the serialized format of a Quad-Tree using level order traversal, where null signifies a path terminator where no node exists below.\nIt is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list [isLeaf, val].\nIf the value of isLeaf or val is True we represent it as 1 in the list [isLeaf, val] and if the value of isLeaf or val is False we represent it as 0.\n\u00a0\nExample 1:\n \nInput: quadTree1 = [[0,1],[1,1],[1,1],[1,0],[1,0]]\n, quadTree2 = [[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\nOutput: [[0,0],[1,1],[1,1],[1,1],[1,0]]\nExplanation: quadTree1 and quadTree2 are shown above. You can see the binary matrix which is represented by each Quad-Tree.\nIf we apply logical bitwise OR on the two binary matrices we get the binary matrix below which is represented by the result Quad-Tree.\nNotice that the binary matrices shown are only for illustration, you don't have to construct the binary matrix to get the result tree.\n\n\nExample 2:\nInput: quadTree1 = [[1,0]], quadTree2 = [[1,0]]\nOutput: [[1,0]]\nExplanation: Each tree represents a binary matrix of size 1*1. Each matrix contains only zero.\nThe resulting matrix is of size 1*1 with also zero.\n\n\u00a0\nConstraints:\n\nquadTree1 and quadTree2 are both valid Quad-Trees each representing a n * n grid.\nn == 2x where 0 <= x <= 9.\n\n"], "559. Maximum Depth of N-ary Tree": ["https://leetcode.com/problems/maximum-depth-of-n-ary-tree", "Given a n-ary tree, find its maximum depth.\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n\u00a0\nExample 1:\n\nInput: root = [1,null,3,2,4,null,5,6]\nOutput: 3\n\nExample 2:\n\nInput: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\nOutput: 5\n\n\u00a0\nConstraints:\n\nThe total number of nodes is in the range [0, 104].\nThe depth of the n-ary tree is less than or equal to 1000.\n\n"], "560. Subarray Sum Equals K": ["https://leetcode.com/problems/subarray-sum-equals-k", "Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.\n\u00a0\nExample 1:\nInput: nums = [1,1,1], k = 2\nOutput: 2\nExample 2:\nInput: nums = [1,2,3], k = 3\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2 * 104\n-1000 <= nums[i] <= 1000\n-107 <= k <= 107\n\n"], "561. Array Partition I": ["https://leetcode.com/problems/array-partition-i", "Given an integer array nums of 2n integers, group these integers into n pairs (a1, b1), (a2, b2), ..., (an, bn) such that the sum of min(ai, bi) for all i is maximized. Return the maximized sum.\n\u00a0\nExample 1:\nInput: nums = [1,4,3,2]\nOutput: 4\nExplanation: All possible pairings (ignoring the ordering of elements) are:\n1. (1, 4), (2, 3) -> min(1, 4) + min(2, 3) = 1 + 2 = 3\n2. (1, 3), (2, 4) -> min(1, 3) + min(2, 4) = 1 + 2 = 3\n3. (1, 2), (3, 4) -> min(1, 2) + min(3, 4) = 1 + 3 = 4\nSo the maximum possible sum is 4.\nExample 2:\nInput: nums = [6,2,6,5,1,2]\nOutput: 9\nExplanation: The optimal pairing is (2, 1), (2, 5), (6, 6). min(2, 1) + min(2, 5) + min(6, 6) = 1 + 2 + 6 = 9.\n\n\u00a0\nConstraints:\n\n1 <= n <= 104\nnums.length == 2 * n\n-104 <= nums[i] <= 104\n\n"], "563. Binary Tree Tilt": ["https://leetcode.com/problems/binary-tree-tilt", "Given the root of a binary tree, return the sum of every tree node's tilt.\nThe tilt of a tree node is the absolute difference between the sum of all left subtree node values and all right subtree node values. If a node does not have a left child, then the sum of the left subtree node values is treated as 0. The rule is similar if the node does not have a right child.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3]\nOutput: 1\nExplanation: \nTilt of node 2 : |0-0| = 0 (no children)\nTilt of node 3 : |0-0| = 0 (no children)\nTilt of node 1 : |2-3| = 1 (left subtree is just left child, so sum is 2; right subtree is just right child, so sum is 3)\nSum of every tilt : 0 + 0 + 1 = 1\n\nExample 2:\n\nInput: root = [4,2,9,3,5,null,7]\nOutput: 15\nExplanation: \nTilt of node 3 : |0-0| = 0 (no children)\nTilt of node 5 : |0-0| = 0 (no children)\nTilt of node 7 : |0-0| = 0 (no children)\nTilt of node 2 : |3-5| = 2 (left subtree is just left child, so sum is 3; right subtree is just right child, so sum is 5)\nTilt of node 9 : |0-7| = 7 (no left child, so sum is 0; right subtree is just right child, so sum is 7)\nTilt of node 4 : |(3+5+2)-(9+7)| = |10-16| = 6 (left subtree values are 3, 5, and 2, which sums to 10; right subtree values are 9 and 7, which sums to 16)\nSum of every tilt : 0 + 0 + 0 + 2 + 7 + 6 = 15\n\nExample 3:\n\nInput: root = [21,7,14,1,1,2,2,3,3]\nOutput: 9\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-1000 <= Node.val <= 1000\n\n"], "564. Find the Closest Palindrome": ["https://leetcode.com/problems/find-the-closest-palindrome", "Given a string n representing an integer, return the closest integer (not including itself), which is a palindrome. If there is a tie, return the smaller one.\nThe closest is defined as the absolute difference minimized between two integers.\n\u00a0\nExample 1:\nInput: n = \"123\"\nOutput: \"121\"\n\nExample 2:\nInput: n = \"1\"\nOutput: \"0\"\nExplanation: 0 and 2 are the closest palindromes but we return the smallest which is 0.\n\n\u00a0\nConstraints:\n\n1 <= n.length <= 18\nn consists of only digits.\nn does not have leading zeros.\nn is representing an integer in the range [1, 1018 - 1].\n\n"], "565. Array Nesting": ["https://leetcode.com/problems/array-nesting", ""], "566. Reshape the Matrix": ["https://leetcode.com/problems/reshape-the-matrix", "In MATLAB, there is a handy function called reshape which can reshape an m x n matrix into a new one with a different size r x c keeping its original data.\nYou are given an m x n matrix mat and two integers r and c representing the number of rows and the number of columns of the wanted reshaped matrix.\nThe reshaped matrix should be filled with all the elements of the original matrix in the same row-traversing order as they were.\nIf the reshape operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.\n\u00a0\nExample 1:\n\nInput: mat = [[1,2],[3,4]], r = 1, c = 4\nOutput: [[1,2,3,4]]\n\nExample 2:\n\nInput: mat = [[1,2],[3,4]], r = 2, c = 4\nOutput: [[1,2],[3,4]]\n\n\u00a0\nConstraints:\n\nm == mat.length\nn == mat[i].length\n1 <= m, n <= 100\n-1000 <= mat[i][j] <= 1000\n1 <= r, c <= 300\n\n"], "567. Permutation in String": ["https://leetcode.com/problems/permutation-in-string", "Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.\nIn other words, return true if one of s1's permutations is the substring of s2.\n\u00a0\nExample 1:\nInput: s1 = \"ab\", s2 = \"eidbaooo\"\nOutput: true\nExplanation: s2 contains one permutation of s1 (\"ba\").\n\nExample 2:\nInput: s1 = \"ab\", s2 = \"eidboaoo\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= s1.length, s2.length <= 104\ns1 and s2 consist of lowercase English letters.\n\n"], "572. Subtree of Another Tree": ["https://leetcode.com/problems/subtree-of-another-tree", "Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.\nA subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.\n\u00a0\nExample 1:\n\nInput: root = [3,4,5,1,2], subRoot = [4,1,2]\nOutput: true\n\nExample 2:\n\nInput: root = [3,4,5,1,2,null,null,null,null,0], subRoot = [4,1,2]\nOutput: false\n\n\u00a0\nConstraints:\n\nThe number of nodes in the root tree is in the range [1, 2000].\nThe number of nodes in the subRoot tree is in the range [1, 1000].\n-104 <= root.val <= 104\n-104 <= subRoot.val <= 104\n\n"], "575. Distribute Candies": ["https://leetcode.com/problems/distribute-candies", "Alice has n candies, where the ith candy is of type candyType[i]. Alice noticed that she started to gain weight, so she visited a doctor.\nThe doctor advised Alice to only eat n / 2 of the candies she has (n is always even). Alice likes her candies very much, and she wants to eat the maximum number of different types of candies while still following the doctor's advice.\nGiven the integer array candyType of length n, return the maximum number of different types of candies she can eat if she only eats n / 2 of them.\n\u00a0\nExample 1:\nInput: candyType = [1,1,2,2,3,3]\nOutput: 3\nExplanation: Alice can only eat 6 / 2 = 3 candies. Since there are only 3 types, she can eat one of each type.\n\nExample 2:\nInput: candyType = [1,1,2,3]\nOutput: 2\nExplanation: Alice can only eat 4 / 2 = 2 candies. Whether she eats types [1,2], [1,3], or [2,3], she still can only eat 2 different types.\n\nExample 3:\nInput: candyType = [6,6,6,6]\nOutput: 1\nExplanation: Alice can only eat 4 / 2 = 2 candies. Even though she can eat 2 candies, she only has 1 type.\n\n\u00a0\nConstraints:\n\nn == candyType.length\n2 <= n <= 104\nn\u00a0is even.\n-105 <= candyType[i] <= 105\n\n"], "576. Out of Boundary Paths": ["https://leetcode.com/problems/out-of-boundary-paths", "There is an m x n grid with a ball. The ball is initially at the position [startRow, startColumn]. You are allowed to move the ball to one of the four adjacent cells in the grid (possibly out of the grid crossing the grid boundary). You can apply at most maxMove moves to the ball.\nGiven the five integers m, n, maxMove, startRow, startColumn, return the number of paths to move the ball out of the grid boundary. Since the answer can be very large, return it modulo 109 + 7.\n\u00a0\nExample 1:\n\nInput: m = 2, n = 2, maxMove = 2, startRow = 0, startColumn = 0\nOutput: 6\n\nExample 2:\n\nInput: m = 1, n = 3, maxMove = 3, startRow = 0, startColumn = 1\nOutput: 12\n\n\u00a0\nConstraints:\n\n1 <= m, n <= 50\n0 <= maxMove <= 50\n0 <= startRow < m\n0 <= startColumn < n\n\n"], "581. Shortest Unsorted Continuous Subarray": ["https://leetcode.com/problems/shortest-unsorted-continuous-subarray", "Given an integer array nums, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order.\nReturn the shortest such subarray and output its length.\n\u00a0\nExample 1:\nInput: nums = [2,6,4,8,10,9,15]\nOutput: 5\nExplanation: You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\n\nExample 2:\nInput: nums = [1,2,3,4]\nOutput: 0\n\nExample 3:\nInput: nums = [1]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-105 <= nums[i] <= 105\n\n\u00a0\nFollow up: Can you solve it in O(n) time complexity?"], "583. Delete Operation for Two Strings": ["https://leetcode.com/problems/delete-operation-for-two-strings", "Given two strings word1 and word2, return the minimum number of steps required to make word1 and word2 the same.\nIn one step, you can delete exactly one character in either string.\n\u00a0\nExample 1:\nInput: word1 = \"sea\", word2 = \"eat\"\nOutput: 2\nExplanation: You need one step to make \"sea\" to \"ea\" and another step to make \"eat\" to \"ea\".\n\nExample 2:\nInput: word1 = \"leetcode\", word2 = \"etco\"\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= word1.length, word2.length <= 500\nword1 and word2 consist of only lowercase English letters.\n\n"], "584. Find Customer Referee": ["https://leetcode.com/problems/find-customer-referee", "SQL SchemaTable: Customer\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n| referee_id  | int     |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the id of a customer, their name, and the id of the customer who referred them.\n\n\u00a0\nWrite an SQL query to report the IDs of the customer that are not referred by the customer with id = 2.\nReturn the result table in any order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nCustomer table:\n+----+------+------------+\n| id | name | referee_id |\n+----+------+------------+\n| 1  | Will | null       |\n| 2  | Jane | null       |\n| 3  | Alex | 2          |\n| 4  | Bill | null       |\n| 5  | Zack | 1          |\n| 6  | Mark | 2          |\n+----+------+------------+\nOutput: \n+------+\n| name |\n+------+\n| Will |\n| Jane |\n| Bill |\n| Zack |\n+------+\n\n"], "586. Customer Placing the Largest Number of Orders": ["https://leetcode.com/problems/customer-placing-the-largest-number-of-orders", "SQL SchemaTable: Orders\n+-----------------+----------+\n| Column Name     | Type     |\n+-----------------+----------+\n| order_number    | int      |\n| customer_number | int      |\n+-----------------+----------+\norder_number is the primary key for this table.\nThis table contains information about the order ID and the customer ID.\n\n\u00a0\nWrite an SQL query to find the customer_number for the customer who has placed the largest number of orders.\nThe test cases are generated so that exactly one customer will have placed more orders than any other customer.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nOrders table:\n+--------------+-----------------+\n| order_number | customer_number |\n+--------------+-----------------+\n| 1            | 1               |\n| 2            | 2               |\n| 3            | 3               |\n| 4            | 3               |\n+--------------+-----------------+\nOutput: \n+-----------------+\n| customer_number |\n+-----------------+\n| 3               |\n+-----------------+\nExplanation: \nThe customer with number 3 has two orders, which is greater than either customer 1 or 2 because each of them only has one order. \nSo the result is customer_number 3.\n\n\u00a0\nFollow up: What if more than one customer has the largest number of orders, can you find all the customer_number in this case?\n"], "587. Erect the Fence": ["https://leetcode.com/problems/erect-the-fence", "You are given an array trees where trees[i] = [xi, yi] represents the location of a tree in the garden.\nYou are asked to fence the entire garden using the minimum length of rope as it is expensive. The garden is well fenced only if all the trees are enclosed.\nReturn the coordinates of trees that are exactly located on the fence perimeter.\n\u00a0\nExample 1:\n\nInput: points = [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]\nOutput: [[1,1],[2,0],[3,3],[2,4],[4,2]]\n\nExample 2:\n\nInput: points = [[1,2],[2,2],[4,2]]\nOutput: [[4,2],[2,2],[1,2]]\n\n\u00a0\nConstraints:\n\n1 <= points.length <= 3000\npoints[i].length == 2\n0 <= xi, yi <= 100\nAll the given points are unique.\n\n"], "589. N-ary Tree Preorder Traversal": ["https://leetcode.com/problems/n-ary-tree-preorder-traversal", "Given the root of an n-ary tree, return the preorder traversal of its nodes' values.\nNary-Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)\n\u00a0\nExample 1:\n\nInput: root = [1,null,3,2,4,null,5,6]\nOutput: [1,3,5,6,2,4]\n\nExample 2:\n\nInput: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\nOutput: [1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n0 <= Node.val <= 104\nThe height of the n-ary tree is less than or equal to 1000.\n\n\u00a0\nFollow up: Recursive solution is trivial, could you do it iteratively?\n"], "590. N-ary Tree Postorder Traversal": ["https://leetcode.com/problems/n-ary-tree-postorder-traversal", "Given the root of an n-ary tree, return the postorder traversal of its nodes' values.\nNary-Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)\n\u00a0\nExample 1:\n\nInput: root = [1,null,3,2,4,null,5,6]\nOutput: [5,6,3,2,4,1]\n\nExample 2:\n\nInput: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\nOutput: [2,6,14,11,7,3,12,8,4,13,9,10,5,1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n0 <= Node.val <= 104\nThe height of the n-ary tree is less than or equal to 1000.\n\n\u00a0\nFollow up: Recursive solution is trivial, could you do it iteratively?\n"], "591. Tag Validator": ["https://leetcode.com/problems/tag-validator", "Given a string representing a code snippet, implement a tag validator to parse the code and return whether it is valid.\nA code snippet is valid if all the following rules hold:\n\nThe code must be wrapped in a valid closed tag. Otherwise, the code is invalid.\nA closed tag (not necessarily valid) has exactly the following format : <TAG_NAME>TAG_CONTENT</TAG_NAME>. Among them, <TAG_NAME> is the start tag, and </TAG_NAME> is the end tag. The TAG_NAME in start and end tags should be the same. A closed tag is valid if and only if the TAG_NAME and TAG_CONTENT are valid.\nA valid TAG_NAME only contain upper-case letters, and has length in range [1,9]. Otherwise, the TAG_NAME is invalid.\nA valid TAG_CONTENT may contain other valid closed tags, cdata and any characters (see note1) EXCEPT unmatched <, unmatched start and end tag, and unmatched or closed tags with invalid TAG_NAME. Otherwise, the TAG_CONTENT is invalid.\nA start tag is unmatched if no end tag exists with the same TAG_NAME, and vice versa. However, you also need to consider the issue of unbalanced when tags are nested.\nA < is unmatched if you cannot find a subsequent >. And when you find a < or </, all the subsequent characters until the next > should be parsed as TAG_NAME (not necessarily valid).\nThe cdata has the following format : <![CDATA[CDATA_CONTENT]]>. The range of CDATA_CONTENT is defined as the characters between <![CDATA[ and the first subsequent ]]>.\nCDATA_CONTENT may contain any characters. The function of cdata is to forbid the validator to parse CDATA_CONTENT, so even it has some characters that can be parsed as tag (no matter valid or invalid), you should treat it as regular characters.\n\n\u00a0\nExample 1:\nInput: code = \"<DIV>This is the first line <![CDATA[<div>]]></DIV>\"\nOutput: true\nExplanation: \nThe code is wrapped in a closed tag : <DIV> and </DIV>. \nThe TAG_NAME is valid, the TAG_CONTENT consists of some characters and cdata. \nAlthough CDATA_CONTENT has an unmatched start tag with invalid TAG_NAME, it should be considered as plain text, not parsed as a tag.\nSo TAG_CONTENT is valid, and then the code is valid. Thus return true.\n\nExample 2:\nInput: code = \"<DIV>>>  ![cdata[]] <![CDATA[<div>]>]]>]]>>]</DIV>\"\nOutput: true\nExplanation:\nWe first separate the code into : start_tag|tag_content|end_tag.\nstart_tag -> \"<DIV>\"\nend_tag -> \"</DIV>\"\ntag_content could also be separated into : text1|cdata|text2.\ntext1 -> \">>  ![cdata[]] \"\ncdata -> \"<![CDATA[<div>]>]]>\", where the CDATA_CONTENT is \"<div>]>\"\ntext2 -> \"]]>>]\"\nThe reason why start_tag is NOT \"<DIV>>>\" is because of the rule 6.\nThe reason why cdata is NOT \"<![CDATA[<div>]>]]>]]>\" is because of the rule 7.\n\nExample 3:\nInput: code = \"<A>  <B> </A>   </B>\"\nOutput: false\nExplanation: Unbalanced. If \"<A>\" is closed, then \"<B>\" must be unmatched, and vice versa.\n\n\u00a0\nConstraints:\n\n1 <= code.length <= 500\ncode consists of English letters, digits, '<', '>', '/', '!', '[', ']', '.', and ' '.\n\n"], "592. Fraction Addition and Subtraction": ["https://leetcode.com/problems/fraction-addition-and-subtraction", "Given a string expression representing an expression of fraction addition and subtraction, return the calculation result in string format.\nThe final result should be an irreducible fraction. If your final result is an integer, change it to the format of a fraction that has a denominator 1. So in this case, 2 should be converted to 2/1.\n\u00a0\nExample 1:\nInput: expression = \"-1/2+1/2\"\nOutput: \"0/1\"\n\nExample 2:\nInput: expression = \"-1/2+1/2+1/3\"\nOutput: \"1/3\"\n\nExample 3:\nInput: expression = \"1/3-1/2\"\nOutput: \"-1/6\"\n\n\u00a0\nConstraints:\n\nThe input string only contains '0' to '9', '/', '+' and '-'. So does the output.\nEach fraction (input and output) has the format \u00b1numerator/denominator. If the first input fraction or the output is positive, then '+' will be omitted.\nThe input only contains valid irreducible fractions, where the numerator and denominator of each fraction will always be in the range [1, 10]. If the denominator is 1, it means this fraction is actually an integer in a fraction format defined above.\nThe number of given fractions will be in the range [1, 10].\nThe numerator and denominator of the final result are guaranteed to be valid and in the range of 32-bit int.\n\n"], "593. Valid Square": ["https://leetcode.com/problems/valid-square", "Given the coordinates of four points in 2D space p1, p2, p3 and p4, return true if the four points construct a square.\nThe coordinate of a point pi is represented as [xi, yi]. The input is not given in any order.\nA valid square has four equal sides with positive length and four equal angles (90-degree angles).\n\u00a0\nExample 1:\nInput: p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\nOutput: true\n\nExample 2:\nInput: p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,12]\nOutput: false\n\nExample 3:\nInput: p1 = [1,0], p2 = [-1,0], p3 = [0,1], p4 = [0,-1]\nOutput: true\n\n\u00a0\nConstraints:\n\np1.length == p2.length == p3.length == p4.length == 2\n-104 <= xi, yi <= 104\n\n"], "594. Longest Harmonious Subsequence": ["https://leetcode.com/problems/longest-harmonious-subsequence", "We define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1.\nGiven an integer array nums, return the length of its longest harmonious subsequence among all its possible subsequences.\nA subsequence of array is a sequence that can be derived from the array by deleting some or no elements without changing the order of the remaining elements.\n\u00a0\nExample 1:\nInput: nums = [1,3,2,2,5,2,3,7]\nOutput: 5\nExplanation: The longest harmonious subsequence is [3,2,2,2,3].\n\nExample 2:\nInput: nums = [1,2,3,4]\nOutput: 2\n\nExample 3:\nInput: nums = [1,1,1,1]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2 * 104\n-109 <= nums[i] <= 109\n"], "595. Big Countries": ["https://leetcode.com/problems/big-countries", "SQL SchemaTable: World\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| name        | varchar |\n| continent   | varchar |\n| area        | int     |\n| population  | int     |\n| gdp         | int     |\n+-------------+---------+\nname is the primary key column for this table.\nEach row of this table gives information about the name of a country, the continent to which it belongs, its area, the population, and its GDP value.\n\n\u00a0\nA country is big if:\n\nit has an area of at least\u00a0three million (i.e., 3000000 km2), or\nit has a population of at least\u00a0twenty-five million (i.e., 25000000).\n\nWrite an SQL query to report the name, population, and area of the big countries.\nReturn the result table in any order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nWorld table:\n+-------------+-----------+---------+------------+--------------+\n| name        | continent | area    | population | gdp          |\n+-------------+-----------+---------+------------+--------------+\n| Afghanistan | Asia      | 652230  | 25500100   | 20343000000  |\n| Albania     | Europe    | 28748   | 2831741    | 12960000000  |\n| Algeria     | Africa    | 2381741 | 37100000   | 188681000000 |\n| Andorra     | Europe    | 468     | 78115      | 3712000000   |\n| Angola      | Africa    | 1246700 | 20609294   | 100990000000 |\n+-------------+-----------+---------+------------+--------------+\nOutput: \n+-------------+------------+---------+\n| name        | population | area    |\n+-------------+------------+---------+\n| Afghanistan | 25500100   | 652230  |\n| Algeria     | 37100000   | 2381741 |\n+-------------+------------+---------+\n\n"], "596. Classes More Than 5 Students": ["https://leetcode.com/problems/classes-more-than-5-students", "SQL SchemaTable: Courses\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| student     | varchar |\n| class       | varchar |\n+-------------+---------+\n(student, class) is the primary key column for this table.\nEach row of this table indicates the name of a student and the class in which they are enrolled.\n\n\u00a0\nWrite an SQL query to report all the classes that have at least five students.\nReturn the result table in any order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nCourses table:\n+---------+----------+\n| student | class    |\n+---------+----------+\n| A       | Math     |\n| B       | English  |\n| C       | Math     |\n| D       | Biology  |\n| E       | Math     |\n| F       | Computer |\n| G       | Math     |\n| H       | Math     |\n| I       | Math     |\n+---------+----------+\nOutput: \n+---------+\n| class   |\n+---------+\n| Math    |\n+---------+\nExplanation: \n- Math has 6 students, so we include it.\n- English has 1 student, so we do not include it.\n- Biology has 1 student, so we do not include it.\n- Computer has 1 student, so we do not include it.\n\n"], "598. Range Addition II": ["https://leetcode.com/problems/range-addition-ii", "You are given an m x n matrix M initialized with all 0's and an array of operations ops, where ops[i] = [ai, bi] means M[x][y] should be incremented by one for all 0 <= x < ai and 0 <= y < bi.\nCount and return the number of maximum integers in the matrix after performing all the operations.\n\u00a0\nExample 1:\n\nInput: m = 3, n = 3, ops = [[2,2],[3,3]]\nOutput: 4\nExplanation: The maximum integer in M is 2, and there are four of it in M. So return 4.\n\nExample 2:\nInput: m = 3, n = 3, ops = [[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3]]\nOutput: 4\n\nExample 3:\nInput: m = 3, n = 3, ops = []\nOutput: 9\n\n\u00a0\nConstraints:\n\n1 <= m, n <= 4 * 104\n0 <= ops.length <= 104\nops[i].length == 2\n1 <= ai <= m\n1 <= bi <= n\n\n"], "599. Minimum Index Sum of Two Lists": ["https://leetcode.com/problems/minimum-index-sum-of-two-lists", "Suppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings.\nYou need to help them find out their common interest with the least list index sum. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.\n\u00a0\nExample 1:\nInput: list1 = [\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"], list2 = [\"Piatti\",\"The Grill at Torrey Pines\",\"Hungry Hunter Steakhouse\",\"Shogun\"]\nOutput: [\"Shogun\"]\nExplanation: The only restaurant they both like is \"Shogun\".\n\nExample 2:\nInput: list1 = [\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"], list2 = [\"KFC\",\"Shogun\",\"Burger King\"]\nOutput: [\"Shogun\"]\nExplanation: The restaurant they both like and have the least index sum is \"Shogun\" with index sum 1 (0+1).\n\n\u00a0\nConstraints:\n\n1 <= list1.length, list2.length <= 1000\n1 <= list1[i].length, list2[i].length <= 30\nlist1[i] and list2[i] consist of spaces ' ' and English letters.\nAll the stings of list1 are unique.\nAll the stings of list2\u00a0are unique.\n\n"], "600. Non-negative Integers without Consecutive Ones": ["https://leetcode.com/problems/non-negative-integers-without-consecutive-ones", "Given a positive integer n, return the number of the integers in the range [0, n] whose binary representations do not contain consecutive ones.\n\u00a0\nExample 1:\nInput: n = 5\nOutput: 5\nExplanation:\nHere are the non-negative integers <= 5 with their corresponding binary representations:\n0 : 0\n1 : 1\n2 : 10\n3 : 11\n4 : 100\n5 : 101\nAmong them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. \n\nExample 2:\nInput: n = 1\nOutput: 2\n\nExample 3:\nInput: n = 2\nOutput: 3\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\n\n"], "601. Human Traffic of Stadium": ["https://leetcode.com/problems/human-traffic-of-stadium", "SQL SchemaTable: Stadium\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| visit_date    | date    |\n| people        | int     |\n+---------------+---------+\nvisit_date is the primary key for this table.\nEach row of this table contains the visit date and visit id to the stadium with the number of people during the visit.\nNo two rows will have the same visit_date, and as the id increases, the dates increase as well.\n\n\u00a0\nWrite an SQL query to display the records with three or more rows with consecutive id's, and the number of people is greater than or equal to 100 for each.\nReturn the result table ordered by visit_date in ascending order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nStadium table:\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 1    | 2017-01-01 | 10        |\n| 2    | 2017-01-02 | 109       |\n| 3    | 2017-01-03 | 150       |\n| 4    | 2017-01-04 | 99        |\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-09 | 188       |\n+------+------------+-----------+\nOutput: \n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-09 | 188       |\n+------+------------+-----------+\nExplanation: \nThe four rows with ids 5, 6, 7, and 8 have consecutive ids and each of them has >= 100 people attended. Note that row 8 was included even though the visit_date was not the next day after row 7.\nThe rows with ids 2 and 3 are not included because we need at least three consecutive ids.\n\n"], "605. Can Place Flowers": ["https://leetcode.com/problems/can-place-flowers", "You have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in adjacent plots.\nGiven an integer array flowerbed containing 0's and 1's, where 0 means empty and 1 means not empty, and an integer n, return if n new flowers can be planted in the flowerbed without violating the no-adjacent-flowers rule.\n\u00a0\nExample 1:\nInput: flowerbed = [1,0,0,0,1], n = 1\nOutput: true\nExample 2:\nInput: flowerbed = [1,0,0,0,1], n = 2\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= flowerbed.length <= 2 * 104\nflowerbed[i] is 0 or 1.\nThere are no two adjacent flowers in flowerbed.\n0 <= n <= flowerbed.length\n\n"], "606. Construct String from Binary Tree": ["https://leetcode.com/problems/construct-string-from-binary-tree", "Given the root of a binary tree, construct a string consisting of parenthesis and integers from a binary tree with the preorder traversal way, and return it.\nOmit all the empty parenthesis pairs that do not affect the one-to-one mapping relationship between the string and the original binary tree.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4]\nOutput: \"1(2(4))(3)\"\nExplanation: Originally, it needs to be \"1(2(4)())(3()())\", but you need to omit all the unnecessary empty parenthesis pairs. And it will be \"1(2(4))(3)\"\n\nExample 2:\n\nInput: root = [1,2,3,null,4]\nOutput: \"1(2()(4))(3)\"\nExplanation: Almost the same as the first example, except we cannot omit the first parenthesis pair to break the one-to-one mapping relationship between the input and the output.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-1000 <= Node.val <= 1000\n\n"], "607. Sales Person": ["https://leetcode.com/problems/sales-person", "SQL SchemaTable: SalesPerson\n+-----------------+---------+\n| Column Name     | Type    |\n+-----------------+---------+\n| sales_id        | int     |\n| name            | varchar |\n| salary          | int     |\n| commission_rate | int     |\n| hire_date       | date    |\n+-----------------+---------+\nsales_id is the primary key column for this table.\nEach row of this table indicates the name and the ID of a salesperson alongside their salary, commission rate, and hire date.\n\n\u00a0\nTable: Company\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| com_id      | int     |\n| name        | varchar |\n| city        | varchar |\n+-------------+---------+\ncom_id is the primary key column for this table.\nEach row of this table indicates the name and the ID of a company and the city in which the company is located.\n\n\u00a0\nTable: Orders\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| order_id    | int  |\n| order_date  | date |\n| com_id      | int  |\n| sales_id    | int  |\n| amount      | int  |\n+-------------+------+\norder_id is the primary key column for this table.\ncom_id is a foreign key to com_id from the Company table.\nsales_id is a foreign key to com_id from the SalesPerson table.\nEach row of this table contains information about one order. This includes the ID of the company, the ID of the salesperson, the date of the order, and the amount paid.\n\n\u00a0\nWrite an SQL query to report the names of all the salespersons who did not have any orders related to the company with the name \"RED\".\nReturn the result table in any order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nSalesPerson table:\n+----------+------+--------+-----------------+------------+\n| sales_id | name | salary | commission_rate | hire_date  |\n+----------+------+--------+-----------------+------------+\n| 1        | John | 100000 | 6               | 4/1/2006   |\n| 2        | Amy  | 12000  | 5               | 5/1/2010   |\n| 3        | Mark | 65000  | 12              | 12/25/2008 |\n| 4        | Pam  | 25000  | 25              | 1/1/2005   |\n| 5        | Alex | 5000   | 10              | 2/3/2007   |\n+----------+------+--------+-----------------+------------+\nCompany table:\n+--------+--------+----------+\n| com_id | name   | city     |\n+--------+--------+----------+\n| 1      | RED    | Boston   |\n| 2      | ORANGE | New York |\n| 3      | YELLOW | Boston   |\n| 4      | GREEN  | Austin   |\n+--------+--------+----------+\nOrders table:\n+----------+------------+--------+----------+--------+\n| order_id | order_date | com_id | sales_id | amount |\n+----------+------------+--------+----------+--------+\n| 1        | 1/1/2014   | 3      | 4        | 10000  |\n| 2        | 2/1/2014   | 4      | 5        | 5000   |\n| 3        | 3/1/2014   | 1      | 1        | 50000  |\n| 4        | 4/1/2014   | 1      | 4        | 25000  |\n+----------+------------+--------+----------+--------+\nOutput: \n+------+\n| name |\n+------+\n| Amy  |\n| Mark |\n| Alex |\n+------+\nExplanation: \nAccording to orders 3 and 4 in the Orders table, it is easy to tell that only salesperson John and Pam have sales to company RED, so we report all the other names in the table salesperson.\n\n"], "608. Tree Node": ["https://leetcode.com/problems/tree-node", "SQL SchemaTable: Tree\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| id          | int  |\n| p_id        | int  |\n+-------------+------+\nid is the primary key column for this table.\nEach row of this table contains information about the id of a node and the id of its parent node in a tree.\nThe given structure is always a valid tree.\n\n\u00a0\nEach node in the tree can be one of three types:\n\n\"Leaf\": if the node is a leaf node.\n\"Root\": if the node is the root of the tree.\n\"Inner\": If the node is neither a leaf node nor a root node.\n\nWrite an SQL query to report the type of each node in the tree.\nReturn the result table ordered by id in ascending order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\n\nInput: \nTree table:\n+----+------+\n| id | p_id |\n+----+------+\n| 1  | null |\n| 2  | 1    |\n| 3  | 1    |\n| 4  | 2    |\n| 5  | 2    |\n+----+------+\nOutput: \n+----+-------+\n| id | type  |\n+----+-------+\n| 1  | Root  |\n| 2  | Inner |\n| 3  | Leaf  |\n| 4  | Leaf  |\n| 5  | Leaf  |\n+----+-------+\nExplanation: \nNode 1 is the root node because its parent node is null and it has child nodes 2 and 3.\nNode 2 is an inner node because it has parent node 1 and child node 4 and 5.\nNodes 3, 4, and 5 are leaf nodes because they have parent nodes and they do not have child nodes.\n\nExample 2:\n\nInput: \nTree table:\n+----+------+\n| id | p_id |\n+----+------+\n| 1  | null |\n+----+------+\nOutput: \n+----+-------+\n| id | type  |\n+----+-------+\n| 1  | Root  |\n+----+-------+\nExplanation: If there is only one node on the tree, you only need to output its root attributes.\n\n"], "609. Find Duplicate File in System": ["https://leetcode.com/problems/find-duplicate-file-in-system", "Given a list paths of directory info, including the directory path, and all the files with contents in this directory, return all the duplicate files in the file system in terms of their paths. You may return the answer in any order.\nA group of duplicate files consists of at least two files that have the same content.\nA single directory info string in the input list has the following format:\n\n\"root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)\"\n\nIt means there are n files (f1.txt, f2.txt ... fn.txt) with content (f1_content, f2_content ... fn_content) respectively in the directory \"root/d1/d2/.../dm\". Note that n >= 1 and m >= 0. If m = 0, it means the directory is just the root directory.\nThe output is a list of groups of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format:\n\n\"directory_path/file_name.txt\"\n\n\u00a0\nExample 1:\nInput: paths = [\"root/a 1.txt(abcd) 2.txt(efgh)\",\"root/c 3.txt(abcd)\",\"root/c/d 4.txt(efgh)\",\"root 4.txt(efgh)\"]\nOutput: [[\"root/a/2.txt\",\"root/c/d/4.txt\",\"root/4.txt\"],[\"root/a/1.txt\",\"root/c/3.txt\"]]\nExample 2:\nInput: paths = [\"root/a 1.txt(abcd) 2.txt(efgh)\",\"root/c 3.txt(abcd)\",\"root/c/d 4.txt(efgh)\"]\nOutput: [[\"root/a/2.txt\",\"root/c/d/4.txt\"],[\"root/a/1.txt\",\"root/c/3.txt\"]]\n\n\u00a0\nConstraints:\n\n1 <= paths.length <= 2 * 104\n1 <= paths[i].length <= 3000\n1 <= sum(paths[i].length) <= 5 * 105\npaths[i] consist of English letters, digits, '/', '.', '(', ')', and ' '.\nYou may assume no files or directories share the same name in the same directory.\nYou may assume each given directory info represents a unique directory. A single blank space separates the directory path and file info.\n\n\u00a0\nFollow up:\n\nImagine you are given a real file system, how will you search files? DFS or BFS?\nIf the file content is very large (GB level), how will you modify your solution?\nIf you can only read the file by 1kb each time, how will you modify your solution?\nWhat is the time complexity of your modified solution? What is the most time-consuming part and memory-consuming part of it? How to optimize?\nHow to make sure the duplicated files you find are not false positive?\n\n"], "611. Valid Triangle Number": ["https://leetcode.com/problems/valid-triangle-number", "Given an integer array nums, return the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.\n\u00a0\nExample 1:\nInput: nums = [2,2,3,4]\nOutput: 3\nExplanation: Valid combinations are: \n2,3,4 (using the first 2)\n2,3,4 (using the second 2)\n2,2,3\n\nExample 2:\nInput: nums = [4,2,3,4]\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 1000\n0 <= nums[i] <= 1000\n\n"], "617. Merge Two Binary Trees": ["https://leetcode.com/problems/merge-two-binary-trees", "You are given two binary trees root1 and root2.\nImagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not. You need to merge the two trees into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of the new tree.\nReturn the merged tree.\nNote: The merging process must start from the root nodes of both trees.\n\u00a0\nExample 1:\n\nInput: root1 = [1,3,2,5], root2 = [2,1,3,null,4,null,7]\nOutput: [3,4,5,5,4,null,7]\n\nExample 2:\nInput: root1 = [1], root2 = [1,2]\nOutput: [2,2]\n\n\u00a0\nConstraints:\n\nThe number of nodes in both trees is in the range [0, 2000].\n-104 <= Node.val <= 104\n\n"], "620. Not Boring Movies": ["https://leetcode.com/problems/not-boring-movies", "SQL SchemaTable: Cinema\n+----------------+----------+\n| Column Name    | Type     |\n+----------------+----------+\n| id             | int      |\n| movie          | varchar  |\n| description    | varchar  |\n| rating         | float    |\n+----------------+----------+\nid is the primary key for this table.\nEach row contains information about the name of a movie, its genre, and its rating.\nrating is a 2 decimal places float in the range [0, 10]\n\n\u00a0\nWrite an SQL query to report the movies with an odd-numbered ID and a description that is not \"boring\".\nReturn the result table ordered by rating in descending order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nCinema table:\n+----+------------+-------------+--------+\n| id | movie      | description | rating |\n+----+------------+-------------+--------+\n| 1  | War        | great 3D    | 8.9    |\n| 2  | Science    | fiction     | 8.5    |\n| 3  | irish      | boring      | 6.2    |\n| 4  | Ice song   | Fantacy     | 8.6    |\n| 5  | House card | Interesting | 9.1    |\n+----+------------+-------------+--------+\nOutput: \n+----+------------+-------------+--------+\n| id | movie      | description | rating |\n+----+------------+-------------+--------+\n| 5  | House card | Interesting | 9.1    |\n| 1  | War        | great 3D    | 8.9    |\n+----+------------+-------------+--------+\nExplanation: \nWe have three movies with odd-numbered IDs: 1, 3, and 5. The movie with ID = 3 is boring so we do not include it in the answer.\n\n"], "621. Task Scheduler": ["https://leetcode.com/problems/task-scheduler", "Given a characters array tasks, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle.\nHowever, there is a non-negative integer\u00a0n that represents the cooldown period between\u00a0two same tasks\u00a0(the same letter in the array), that is that there must be at least n units of time between any two same tasks.\nReturn the least number of units of times that the CPU will take to finish all the given tasks.\n\u00a0\nExample 1:\nInput: tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 2\nOutput: 8\nExplanation: \nA -> B -> idle -> A -> B -> idle -> A -> B\nThere is at least 2 units of time between any two same tasks.\n\nExample 2:\nInput: tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 0\nOutput: 6\nExplanation: On this case any permutation of size 6 would work since n = 0.\n[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"]\n[\"A\",\"B\",\"A\",\"B\",\"A\",\"B\"]\n[\"B\",\"B\",\"B\",\"A\",\"A\",\"A\"]\n...\nAnd so on.\n\nExample 3:\nInput: tasks = [\"A\",\"A\",\"A\",\"A\",\"A\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\"], n = 2\nOutput: 16\nExplanation: \nOne possible solution is\nA -> B -> C -> A -> D -> E -> A -> F -> G -> A -> idle -> idle -> A -> idle -> idle -> A\n\n\u00a0\nConstraints:\n\n1 <= task.length <= 104\ntasks[i] is upper-case English letter.\nThe integer n is in the range [0, 100].\n\n"], "622. Design Circular Queue": ["https://leetcode.com/problems/design-circular-queue", "Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle and the last position is connected back to the first position to make a circle. It is also called \"Ring Buffer\".\nOne of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.\nImplementation the MyCircularQueue class:\n\nMyCircularQueue(k) Initializes the object with the size of the queue to be k.\nint Front() Gets the front item from the queue. If the queue is empty, return -1.\nint Rear() Gets the last item from the queue. If the queue is empty, return -1.\nboolean enQueue(int value) Inserts an element into the circular queue. Return true if the operation is successful.\nboolean deQueue() Deletes an element from the circular queue. Return true if the operation is successful.\nboolean isEmpty() Checks whether the circular queue is empty or not.\nboolean isFull() Checks whether the circular queue is full or not.\n\nYou must solve the problem without using the built-in queue data structure in your programming language.\u00a0\n\u00a0\nExample 1:\nInput\n[\"MyCircularQueue\", \"enQueue\", \"enQueue\", \"enQueue\", \"enQueue\", \"Rear\", \"isFull\", \"deQueue\", \"enQueue\", \"Rear\"]\n[[3], [1], [2], [3], [4], [], [], [], [4], []]\nOutput\n[null, true, true, true, false, 3, true, true, true, 4]\n\nExplanation\nMyCircularQueue myCircularQueue = new MyCircularQueue(3);\nmyCircularQueue.enQueue(1); // return True\nmyCircularQueue.enQueue(2); // return True\nmyCircularQueue.enQueue(3); // return True\nmyCircularQueue.enQueue(4); // return False\nmyCircularQueue.Rear();     // return 3\nmyCircularQueue.isFull();   // return True\nmyCircularQueue.deQueue();  // return True\nmyCircularQueue.enQueue(4); // return True\nmyCircularQueue.Rear();     // return 4\n\n\u00a0\nConstraints:\n\n1 <= k <= 1000\n0 <= value <= 1000\nAt most 3000 calls will be made to\u00a0enQueue, deQueue,\u00a0Front,\u00a0Rear,\u00a0isEmpty, and\u00a0isFull.\n\n"], "623. Add One Row to Tree": ["https://leetcode.com/problems/add-one-row-to-tree", "Given the root of a binary tree and two integers val and depth, add a row of nodes with value val at the given depth depth.\nNote that the root node is at depth 1.\nThe adding rule is:\n\nGiven the integer depth, for each not null tree node cur at the depth depth - 1, create two tree nodes with value val as cur's left subtree root and right subtree root.\ncur's original left subtree should be the left subtree of the new left subtree root.\ncur's original right subtree should be the right subtree of the new right subtree root.\nIf depth == 1 that means there is no depth depth - 1 at all, then create a tree node with value val as the new root of the whole original tree, and the original tree is the new root's left subtree.\n\n\u00a0\nExample 1:\n\nInput: root = [4,2,6,3,1,5], val = 1, depth = 2\nOutput: [4,1,1,2,null,null,6,3,1,5]\n\nExample 2:\n\nInput: root = [4,2,null,3,1], val = 1, depth = 3\nOutput: [4,2,null,1,1,3,null,null,1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\nThe depth of the tree is in the range [1, 104].\n-100 <= Node.val <= 100\n-105 <= val <= 105\n1 <= depth <= the depth of tree + 1\n\n"], "626. Exchange Seats": ["https://leetcode.com/problems/exchange-seats", "SQL SchemaTable: Seat\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the name and the ID of a student.\nid is a continuous increment.\n\n\u00a0\nWrite an SQL query to swap the seat id of every two consecutive students. If the number of students is odd, the id of the last student is not swapped.\nReturn the result table ordered by id in ascending order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nSeat table:\n+----+---------+\n| id | student |\n+----+---------+\n| 1  | Abbot   |\n| 2  | Doris   |\n| 3  | Emerson |\n| 4  | Green   |\n| 5  | Jeames  |\n+----+---------+\nOutput: \n+----+---------+\n| id | student |\n+----+---------+\n| 1  | Doris   |\n| 2  | Abbot   |\n| 3  | Green   |\n| 4  | Emerson |\n| 5  | Jeames  |\n+----+---------+\nExplanation: \nNote that if the number of students is odd, there is no need to change the last one's seat.\n\n"], "627. Swap Salary": ["https://leetcode.com/problems/swap-salary", "SQL SchemaTable: Salary\n+-------------+----------+\n| Column Name | Type     |\n+-------------+----------+\n| id          | int      |\n| name        | varchar  |\n| sex         | ENUM     |\n| salary      | int      |\n+-------------+----------+\nid is the primary key for this table.\nThe sex column is ENUM value of type ('m', 'f').\nThe table contains information about an employee.\n\n\u00a0\nWrite an SQL query to swap all 'f' and 'm' values (i.e., change all 'f' values to 'm' and vice versa) with a single update statement and no intermediate temporary tables.\nNote that you must write a single update statement, do not write any select statement for this problem.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nSalary table:\n+----+------+-----+--------+\n| id | name | sex | salary |\n+----+------+-----+--------+\n| 1  | A    | m   | 2500   |\n| 2  | B    | f   | 1500   |\n| 3  | C    | m   | 5500   |\n| 4  | D    | f   | 500    |\n+----+------+-----+--------+\nOutput: \n+----+------+-----+--------+\n| id | name | sex | salary |\n+----+------+-----+--------+\n| 1  | A    | f   | 2500   |\n| 2  | B    | m   | 1500   |\n| 3  | C    | f   | 5500   |\n| 4  | D    | m   | 500    |\n+----+------+-----+--------+\nExplanation: \n(1, A) and (3, C) were changed from 'm' to 'f'.\n(2, B) and (4, D) were changed from 'f' to 'm'.\n\n"], "628. Maximum Product of Three Numbers": ["https://leetcode.com/problems/maximum-product-of-three-numbers", "Given an integer array nums, find three numbers whose product is maximum and return the maximum product.\n\u00a0\nExample 1:\nInput: nums = [1,2,3]\nOutput: 6\nExample 2:\nInput: nums = [1,2,3,4]\nOutput: 24\nExample 3:\nInput: nums = [-1,-2,-3]\nOutput: -6\n\n\u00a0\nConstraints:\n\n3 <= nums.length <=\u00a0104\n-1000 <= nums[i] <= 1000\n\n"], "629. K Inverse Pairs Array": ["https://leetcode.com/problems/k-inverse-pairs-array", "For an integer array nums, an inverse pair is a pair of integers [i, j] where 0 <= i < j < nums.length and nums[i] > nums[j].\nGiven two integers n and k, return the number of different arrays consist of numbers from 1 to n such that there are exactly k inverse pairs. Since the answer can be huge, return it modulo 109 + 7.\n\u00a0\nExample 1:\nInput: n = 3, k = 0\nOutput: 1\nExplanation: Only the array [1,2,3] which consists of numbers from 1 to 3 has exactly 0 inverse pairs.\n\nExample 2:\nInput: n = 3, k = 1\nOutput: 2\nExplanation: The array [1,3,2] and [2,1,3] have exactly 1 inverse pair.\n\n\u00a0\nConstraints:\n\n1 <= n <= 1000\n0 <= k <= 1000\n\n"], "630. Course Schedule III": ["https://leetcode.com/problems/course-schedule-iii", "There are n different online courses numbered from 1 to n. You are given an array courses where courses[i] = [durationi, lastDayi] indicate that the ith course should be taken continuously for durationi days and must be finished before or on lastDayi.\nYou will start on the 1st day and you cannot take two or more courses simultaneously.\nReturn the maximum number of courses that you can take.\n\u00a0\nExample 1:\nInput: courses = [[100,200],[200,1300],[1000,1250],[2000,3200]]\nOutput: 3\nExplanation: \nThere are totally 4 courses, but you can take 3 courses at most:\nFirst, take the 1st course, it costs 100 days so you will finish it on the 100th day, and ready to take the next course on the 101st day.\nSecond, take the 3rd course, it costs 1000 days so you will finish it on the 1100th day, and ready to take the next course on the 1101st day. \nThird, take the 2nd course, it costs 200 days so you will finish it on the 1300th day. \nThe 4th course cannot be taken now, since you will finish it on the 3300th day, which exceeds the closed date.\n\nExample 2:\nInput: courses = [[1,2]]\nOutput: 1\n\nExample 3:\nInput: courses = [[3,2],[4,3]]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= courses.length <= 104\n1 <= durationi, lastDayi <= 104\n\n"], "632. Smallest Range Covering Elements from K Lists": ["https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists", "You have k lists of sorted integers in non-decreasing\u00a0order. Find the smallest range that includes at least one number from each of the k lists.\nWe define the range [a, b] is smaller than range [c, d] if b - a < d - c or a < c if b - a == d - c.\n\u00a0\nExample 1:\nInput: nums = [[4,10,15,24,26],[0,9,12,20],[5,18,22,30]]\nOutput: [20,24]\nExplanation: \nList 1: [4, 10, 15, 24,26], 24 is in range [20,24].\nList 2: [0, 9, 12, 20], 20 is in range [20,24].\nList 3: [5, 18, 22, 30], 22 is in range [20,24].\n\nExample 2:\nInput: nums = [[1,2,3],[1,2,3],[1,2,3]]\nOutput: [1,1]\n\n\u00a0\nConstraints:\n\nnums.length == k\n1 <= k <= 3500\n1 <= nums[i].length <= 50\n-105 <= nums[i][j] <= 105\nnums[i]\u00a0is sorted in non-decreasing order.\n\n"], "633. Sum of Square Numbers": ["https://leetcode.com/problems/sum-of-square-numbers", "Given a non-negative integer c, decide whether there're two integers a and b such that a2 + b2 = c.\n\u00a0\nExample 1:\nInput: c = 5\nOutput: true\nExplanation: 1 * 1 + 2 * 2 = 5\n\nExample 2:\nInput: c = 3\nOutput: false\n\n\u00a0\nConstraints:\n\n0 <= c <= 231 - 1\n\n"], "636. Exclusive Time of Functions": ["https://leetcode.com/problems/exclusive-time-of-functions", "On a single-threaded CPU, we execute a program containing n functions. Each function has a unique ID between 0 and n-1.\nFunction calls are stored in a call stack: when a function call starts, its ID is pushed onto the stack, and when a function call ends, its ID is popped off the stack. The function whose ID is at the top of the stack is the current function being executed. Each time a function starts or ends, we write a log with the ID, whether it started or ended, and the timestamp.\nYou are given a list logs, where logs[i] represents the ith log message formatted as a string \"{function_id}:{\"start\" | \"end\"}:{timestamp}\". For example, \"0:start:3\" means a function call with function ID 0 started at the beginning of timestamp 3, and \"1:end:2\" means a function call with function ID 1 ended at the end of timestamp 2. Note that a function can be called multiple times, possibly recursively.\nA function's exclusive time is the sum of execution times for all function calls in the program. For example, if a function is called twice, one call executing for 2 time units and another call executing for 1 time unit, the exclusive time is 2 + 1 = 3.\nReturn the exclusive time of each function in an array, where the value at the ith index represents the exclusive time for the function with ID i.\n\u00a0\nExample 1:\n\nInput: n = 2, logs = [\"0:start:0\",\"1:start:2\",\"1:end:5\",\"0:end:6\"]\nOutput: [3,4]\nExplanation:\nFunction 0 starts at the beginning of time 0, then it executes 2 for units of time and reaches the end of time 1.\nFunction 1 starts at the beginning of time 2, executes for 4 units of time, and ends at the end of time 5.\nFunction 0 resumes execution at the beginning of time 6 and executes for 1 unit of time.\nSo function 0 spends 2 + 1 = 3 units of total time executing, and function 1 spends 4 units of total time executing.\n\nExample 2:\nInput: n = 1, logs = [\"0:start:0\",\"0:start:2\",\"0:end:5\",\"0:start:6\",\"0:end:6\",\"0:end:7\"]\nOutput: [8]\nExplanation:\nFunction 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls itself again.\nFunction 0 (2nd recursive call) starts at the beginning of time 6 and executes for 1 unit of time.\nFunction 0 (initial call) resumes execution at the beginning of time 7 and executes for 1 unit of time.\nSo function 0 spends 2 + 4 + 1 + 1 = 8 units of total time executing.\n\nExample 3:\nInput: n = 2, logs = [\"0:start:0\",\"0:start:2\",\"0:end:5\",\"1:start:6\",\"1:end:6\",\"0:end:7\"]\nOutput: [7,1]\nExplanation:\nFunction 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls function 1.\nFunction 1 starts at the beginning of time 6, executes 1 unit of time, and ends at the end of time 6.\nFunction 0 resumes execution at the beginning of time 6 and executes for 2 units of time.\nSo function 0 spends 2 + 4 + 1 = 7 units of total time executing, and function 1 spends 1 unit of total time executing.\n\n\u00a0\nConstraints:\n\n1 <= n <= 100\n1 <= logs.length <= 500\n0 <= function_id < n\n0 <= timestamp <= 109\nNo two start events will happen at the same timestamp.\nNo two end events will happen at the same timestamp.\nEach function has an \"end\" log for each \"start\" log.\n\n"], "637. Average of Levels in Binary Tree": ["https://leetcode.com/problems/average-of-levels-in-binary-tree", "Given the root of a binary tree, return the average value of the nodes on each level in the form of an array. Answers within 10-5 of the actual answer will be accepted.\n\u00a0\nExample 1:\n\nInput: root = [3,9,20,null,null,15,7]\nOutput: [3.00000,14.50000,11.00000]\nExplanation: The average value of nodes on level 0 is 3, on level 1 is 14.5, and on level 2 is 11.\nHence return [3, 14.5, 11].\n\nExample 2:\n\nInput: root = [3,9,20,15,7]\nOutput: [3.00000,14.50000,11.00000]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-231 <= Node.val <= 231 - 1\n\n"], "638. Shopping Offers": ["https://leetcode.com/problems/shopping-offers", "In LeetCode Store, there are n items to sell. Each item has a price. However, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\nYou are given an integer array price where price[i] is the price of the ith item, and an integer array needs where needs[i] is the number of pieces of the ith item you want to buy.\nYou are also given an array special where special[i] is of size n + 1 where special[i][j] is the number of pieces of the jth item in the ith offer and special[i][n] (i.e., the last integer in the array) is the price of the ith offer.\nReturn the lowest price you have to pay for exactly certain items as given, where you could make optimal use of the special offers. You are not allowed to buy more items than you want, even if that would lower the overall price. You could use any of the special offers as many times as you want.\n\u00a0\nExample 1:\nInput: price = [2,5], special = [[3,0,5],[1,2,10]], needs = [3,2]\nOutput: 14\nExplanation: There are two kinds of items, A and B. Their prices are $2 and $5 respectively. \nIn special offer 1, you can pay $5 for 3A and 0B\nIn special offer 2, you can pay $10 for 1A and 2B. \nYou need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.\n\nExample 2:\nInput: price = [2,3,4], special = [[1,1,0,4],[2,2,1,9]], needs = [1,2,1]\nOutput: 11\nExplanation: The price of A is $2, and $3 for B, $4 for C. \nYou may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \nYou need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \nYou cannot add more items, though only $9 for 2A ,2B and 1C.\n\n\u00a0\nConstraints:\n\nn == price.length\nn == needs.length\n1 <= n <= 6\n0 <= price[i] <= 10\n0 <= needs[i] <= 10\n1 <= special.length <= 100\nspecial[i].length == n + 1\n0 <= special[i][j] <= 50\n\n"], "639. Decode Ways II": ["https://leetcode.com/problems/decode-ways-ii", "A message containing letters from A-Z can be encoded into numbers using the following mapping:\n'A' -> \"1\"\n'B' -> \"2\"\n...\n'Z' -> \"26\"\n\nTo decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, \"11106\" can be mapped into:\n\n\"AAJF\" with the grouping (1 1 10 6)\n\"KJF\" with the grouping (11 10 6)\n\nNote that the grouping (1 11 06) is invalid because \"06\" cannot be mapped into 'F' since \"6\" is different from \"06\".\nIn addition to the mapping above, an encoded message may contain the '*' character, which can represent any digit from '1' to '9' ('0' is excluded). For example, the encoded message \"1*\" may represent any of the encoded messages \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", or \"19\". Decoding \"1*\" is equivalent to decoding any of the encoded messages it can represent.\nGiven a string s consisting of digits and '*' characters, return the number of ways to decode it.\nSince the answer may be very large, return it modulo 109 + 7.\n\u00a0\nExample 1:\nInput: s = \"*\"\nOutput: 9\nExplanation: The encoded message can represent any of the encoded messages \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", or \"9\".\nEach of these can be decoded to the strings \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", and \"I\" respectively.\nHence, there are a total of 9 ways to decode \"*\".\n\nExample 2:\nInput: s = \"1*\"\nOutput: 18\nExplanation: The encoded message can represent any of the encoded messages \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", or \"19\".\nEach of these encoded messages have 2 ways to be decoded (e.g. \"11\" can be decoded to \"AA\" or \"K\").\nHence, there are a total of 9 * 2 = 18 ways to decode \"1*\".\n\nExample 3:\nInput: s = \"2*\"\nOutput: 15\nExplanation: The encoded message can represent any of the encoded messages \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", or \"29\".\n\"21\", \"22\", \"23\", \"24\", \"25\", and \"26\" have 2 ways of being decoded, but \"27\", \"28\", and \"29\" only have 1 way.\nHence, there are a total of (6 * 2) + (3 * 1) = 12 + 3 = 15 ways to decode \"2*\".\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns[i] is a digit or '*'.\n\n"], "640. Solve the Equation": ["https://leetcode.com/problems/solve-the-equation", "Solve a given equation and return the value of 'x' in the form of a string \"x=#value\". The equation contains only '+', '-' operation, the variable 'x' and its coefficient. You should return \"No solution\" if there is no solution for the equation, or \"Infinite solutions\" if there are infinite solutions for the equation.\nIf there is exactly one solution for the equation, we ensure that the value of 'x' is an integer.\n\u00a0\nExample 1:\nInput: equation = \"x+5-3+x=6+x-2\"\nOutput: \"x=2\"\n\nExample 2:\nInput: equation = \"x=x\"\nOutput: \"Infinite solutions\"\n\nExample 3:\nInput: equation = \"2x=x\"\nOutput: \"x=0\"\n\n\u00a0\nConstraints:\n\n3 <= equation.length <= 1000\nequation has exactly one '='.\nequation consists of integers with an absolute value in the range [0, 100] without any leading zeros, and the variable 'x'.\n\n"], "641. Design Circular Deque": ["https://leetcode.com/problems/design-circular-deque", "Design your implementation of the circular double-ended queue (deque).\nImplement the MyCircularDeque class:\n\nMyCircularDeque(int k) Initializes the deque with a maximum size of k.\nboolean insertFront() Adds an item at the front of Deque. Returns true if the operation is successful, or false otherwise.\nboolean insertLast() Adds an item at the rear of Deque. Returns true if the operation is successful, or false otherwise.\nboolean deleteFront() Deletes an item from the front of Deque. Returns true if the operation is successful, or false otherwise.\nboolean deleteLast() Deletes an item from the rear of Deque. Returns true if the operation is successful, or false otherwise.\nint getFront() Returns the front item from the Deque. Returns -1 if the deque is empty.\nint getRear() Returns the last item from Deque. Returns -1 if the deque is empty.\nboolean isEmpty() Returns true if the deque is empty, or false otherwise.\nboolean isFull() Returns true if the deque is full, or false otherwise.\n\n\u00a0\nExample 1:\nInput\n[\"MyCircularDeque\", \"insertLast\", \"insertLast\", \"insertFront\", \"insertFront\", \"getRear\", \"isFull\", \"deleteLast\", \"insertFront\", \"getFront\"]\n[[3], [1], [2], [3], [4], [], [], [], [4], []]\nOutput\n[null, true, true, true, false, 2, true, true, true, 4]\n\nExplanation\nMyCircularDeque myCircularDeque = new MyCircularDeque(3);\nmyCircularDeque.insertLast(1);  // return True\nmyCircularDeque.insertLast(2);  // return True\nmyCircularDeque.insertFront(3); // return True\nmyCircularDeque.insertFront(4); // return False, the queue is full.\nmyCircularDeque.getRear();      // return 2\nmyCircularDeque.isFull();       // return True\nmyCircularDeque.deleteLast();   // return True\nmyCircularDeque.insertFront(4); // return True\nmyCircularDeque.getFront();     // return 4\n\n\u00a0\nConstraints:\n\n1 <= k <= 1000\n0 <= value <= 1000\nAt most 2000 calls will be made to insertFront, insertLast, deleteFront, deleteLast, getFront, getRear, isEmpty, isFull.\n\n"], "643. Maximum Average Subarray I": ["https://leetcode.com/problems/maximum-average-subarray-i", "You are given an integer array nums consisting of n elements, and an integer k.\nFind a contiguous subarray whose length is equal to k that has the maximum average value and return this value. Any answer with a calculation error less than 10-5 will be accepted.\n\u00a0\nExample 1:\nInput: nums = [1,12,-5,-6,50,3], k = 4\nOutput: 12.75000\nExplanation: Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75\n\nExample 2:\nInput: nums = [5], k = 1\nOutput: 5.00000\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= k <= n <= 105\n-104 <= nums[i] <= 104\n\n"], "645. Set Mismatch": ["https://leetcode.com/problems/set-mismatch", ""], "646. Maximum Length of Pair Chain": ["https://leetcode.com/problems/maximum-length-of-pair-chain", "You are given an array of n pairs pairs where pairs[i] = [lefti, righti] and lefti < righti.\nA pair p2 = [c, d] follows a pair p1 = [a, b] if b < c. A chain of pairs can be formed in this fashion.\nReturn the length longest chain which can be formed.\nYou do not need to use up all the given intervals. You can select pairs in any order.\n\u00a0\nExample 1:\nInput: pairs = [[1,2],[2,3],[3,4]]\nOutput: 2\nExplanation: The longest chain is [1,2] -> [3,4].\n\nExample 2:\nInput: pairs = [[1,2],[7,8],[4,5]]\nOutput: 3\nExplanation: The longest chain is [1,2] -> [4,5] -> [7,8].\n\n\u00a0\nConstraints:\n\nn == pairs.length\n1 <= n <= 1000\n-1000 <= lefti < righti <= 1000\n\n"], "647. Palindromic Substrings": ["https://leetcode.com/problems/palindromic-substrings", "Given a string s, return the number of palindromic substrings in it.\nA string is a palindrome when it reads the same backward as forward.\nA substring is a contiguous sequence of characters within the string.\n\u00a0\nExample 1:\nInput: s = \"abc\"\nOutput: 3\nExplanation: Three palindromic strings: \"a\", \"b\", \"c\".\n\nExample 2:\nInput: s = \"aaa\"\nOutput: 6\nExplanation: Six palindromic strings: \"a\", \"a\", \"a\", \"aa\", \"aa\", \"aaa\".\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\ns consists of lowercase English letters.\n\n"], "648. Replace Words": ["https://leetcode.com/problems/replace-words", "In English, we have a concept called root, which can be followed by some other word to form another longer word - let's call this word successor. For example, when the root \"an\" is followed by the successor word \"other\", we can form a new word \"another\".\nGiven a dictionary consisting of many roots and a sentence consisting of words separated by spaces, replace all the successors in the sentence with the root forming it. If a successor can be replaced by more than one root, replace it with the root that has the shortest length.\nReturn the sentence after the replacement.\n\u00a0\nExample 1:\nInput: dictionary = [\"cat\",\"bat\",\"rat\"], sentence = \"the cattle was rattled by the battery\"\nOutput: \"the cat was rat by the bat\"\n\nExample 2:\nInput: dictionary = [\"a\",\"b\",\"c\"], sentence = \"aadsfasf absbs bbab cadsfafs\"\nOutput: \"a a b c\"\n\n\u00a0\nConstraints:\n\n1 <= dictionary.length <= 1000\n1 <= dictionary[i].length <= 100\ndictionary[i] consists of only lower-case letters.\n1 <= sentence.length <= 106\nsentence consists of only lower-case letters and spaces.\nThe number of words in sentence is in the range [1, 1000]\nThe length of each word in sentence is in the range [1, 1000]\nEvery two consecutive words in sentence will be separated by exactly one space.\nsentence does not have leading or trailing spaces.\n\n"], "649. Dota2 Senate": ["https://leetcode.com/problems/dota2-senate", "In the world of Dota2, there are two parties: the Radiant and the Dire.\nThe Dota2 senate consists of senators coming from two parties. Now the Senate wants to decide on a change in the Dota2 game. The voting for this change is a round-based procedure. In each round, each senator can exercise one of the two rights:\n\nBan one senator's right: A senator can make another senator lose all his rights in this and all the following rounds.\nAnnounce the victory: If this senator found the senators who still have rights to vote are all from the same party, he can announce the victory and decide on the change in the game.\n\nGiven a string senate representing each senator's party belonging. The character 'R' and 'D' represent the Radiant party and the Dire party. Then if there are n senators, the size of the given string will be n.\nThe round-based procedure starts from the first senator to the last senator in the given order. This procedure will last until the end of voting. All the senators who have lost their rights will be skipped during the procedure.\nSuppose every senator is smart enough and will play the best strategy for his own party. Predict which party will finally announce the victory and change the Dota2 game. The output should be \"Radiant\" or \"Dire\".\n\u00a0\nExample 1:\nInput: senate = \"RD\"\nOutput: \"Radiant\"\nExplanation: \nThe first senator comes from Radiant and he can just ban the next senator's right in round 1. \nAnd the second senator can't exercise any rights anymore since his right has been banned. \nAnd in round 2, the first senator can just announce the victory since he is the only guy in the senate who can vote.\n\nExample 2:\nInput: senate = \"RDD\"\nOutput: \"Dire\"\nExplanation: \nThe first senator comes from Radiant and he can just ban the next senator's right in round 1. \nAnd the second senator can't exercise any rights anymore since his right has been banned. \nAnd the third senator comes from Dire and he can ban the first senator's right in round 1. \nAnd in round 2, the third senator can just announce the victory since he is the only guy in the senate who can vote.\n\n\u00a0\nConstraints:\n\nn == senate.length\n1 <= n <= 104\nsenate[i] is either 'R' or 'D'.\n\n"], "650. 2 Keys Keyboard": ["https://leetcode.com/problems/2-keys-keyboard", "There is only one character 'A' on the screen of a notepad. You can perform one of two operations on this notepad for each step:\n\nCopy All: You can copy all the characters present on the screen (a partial copy is not allowed).\nPaste: You can paste the characters which are copied last time.\n\nGiven an integer n, return the minimum number of operations to get the character 'A' exactly n times on the screen.\n\u00a0\nExample 1:\nInput: n = 3\nOutput: 3\nExplanation: Initially, we have one character 'A'.\nIn step 1, we use Copy All operation.\nIn step 2, we use Paste operation to get 'AA'.\nIn step 3, we use Paste operation to get 'AAA'.\n\nExample 2:\nInput: n = 1\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= n <= 1000\n\n"], "652. Find Duplicate Subtrees": ["https://leetcode.com/problems/find-duplicate-subtrees", "Given the root\u00a0of a binary tree, return all duplicate subtrees.\nFor each kind of duplicate subtrees, you only need to return the root node of any one of them.\nTwo trees are duplicate if they have the same structure with the same node values.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4,null,2,4,null,null,4]\nOutput: [[2,4],[4]]\n\nExample 2:\n\nInput: root = [2,1,1]\nOutput: [[1]]\n\nExample 3:\n\nInput: root = [2,2,2,3,null,3,null]\nOutput: [[2,3],[3]]\n\n\u00a0\nConstraints:\n\nThe number of the nodes in the tree will be in the range [1, 10^4]\n-200 <= Node.val <= 200\n\n"], "653. Two Sum IV - Input is a BST": ["https://leetcode.com/problems/two-sum-iv-input-is-a-bst", "Given the root of a Binary Search Tree and a target number k, return true if there exist two elements in the BST such that their sum is equal to the given target.\n\u00a0\nExample 1:\n\nInput: root = [5,3,6,2,4,null,7], k = 9\nOutput: true\n\nExample 2:\n\nInput: root = [5,3,6,2,4,null,7], k = 28\nOutput: false\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-104\u00a0<= Node.val <= 104\nroot is guaranteed to be a valid binary search tree.\n-105\u00a0<= k <= 105\n\n"], "654. Maximum Binary Tree": ["https://leetcode.com/problems/maximum-binary-tree", "You are given an integer array nums with no duplicates. A maximum binary tree can be built recursively from nums using the following algorithm:\n\nCreate a root node whose value is the maximum value in nums.\nRecursively build the left subtree on the subarray prefix to the left of the maximum value.\nRecursively build the right subtree on the subarray suffix to the right of the maximum value.\n\nReturn the maximum binary tree built from nums.\n\u00a0\nExample 1:\n\nInput: nums = [3,2,1,6,0,5]\nOutput: [6,3,5,null,2,0,null,null,1]\nExplanation: The recursive calls are as follow:\n- The largest value in [3,2,1,6,0,5] is 6. Left prefix is [3,2,1] and right suffix is [0,5].\n    - The largest value in [3,2,1] is 3. Left prefix is [] and right suffix is [2,1].\n        - Empty array, so no child.\n        - The largest value in [2,1] is 2. Left prefix is [] and right suffix is [1].\n            - Empty array, so no child.\n            - Only one element, so child is a node with value 1.\n    - The largest value in [0,5] is 5. Left prefix is [0] and right suffix is [].\n        - Only one element, so child is a node with value 0.\n        - Empty array, so no child.\n\nExample 2:\n\nInput: nums = [3,2,1]\nOutput: [3,null,2,null,1]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 1000\n0 <= nums[i] <= 1000\nAll integers in nums are unique.\n\n"], "655. Print Binary Tree": ["https://leetcode.com/problems/print-binary-tree", "Given the root of a binary tree, construct a 0-indexed m x n string matrix res that represents a formatted layout of the tree. The formatted layout matrix should be constructed using the following rules:\n\nThe height of the tree is height\u00a0and the number of rows m should be equal to height + 1.\nThe number of columns n should be equal to 2height+1 - 1.\nPlace the root node in the middle of the top row (more formally, at location res[0][(n-1)/2]).\nFor each node that has been placed in the matrix at position res[r][c], place its left child at res[r+1][c-2height-r-1] and its right child at res[r+1][c+2height-r-1].\nContinue this process until all the nodes in the tree have been placed.\nAny empty cells should contain the empty string \"\".\n\nReturn the constructed matrix res.\n\u00a0\nExample 1:\n\nInput: root = [1,2]\nOutput: \n[[\"\",\"1\",\"\"],\n\u00a0[\"2\",\"\",\"\"]]\n\nExample 2:\n\nInput: root = [1,2,3,null,4]\nOutput: \n[[\"\",\"\",\"\",\"1\",\"\",\"\",\"\"],\n\u00a0[\"\",\"2\",\"\",\"\",\"\",\"3\",\"\"],\n\u00a0[\"\",\"\",\"4\",\"\",\"\",\"\",\"\"]]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 210].\n-99 <= Node.val <= 99\nThe depth of the tree will be in the range [1, 10].\n\n"], "657. Robot Return to Origin": ["https://leetcode.com/problems/robot-return-to-origin", "There is a robot starting at the position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves.\nYou are given a string moves that represents the move sequence of the robot where moves[i] represents its ith move. Valid moves are 'R' (right), 'L' (left), 'U' (up), and 'D' (down).\nReturn true if the robot returns to the origin after it finishes all of its moves, or false otherwise.\nNote: The way that the robot is \"facing\" is irrelevant. 'R' will always make the robot move to the right once, 'L' will always make it move left, etc. Also, assume that the magnitude of the robot's movement is the same for each move.\n\u00a0\nExample 1:\nInput: moves = \"UD\"\nOutput: true\nExplanation: The robot moves up once, and then down once. All moves have the same magnitude, so it ended up at the origin where it started. Therefore, we return true.\n\nExample 2:\nInput: moves = \"LL\"\nOutput: false\nExplanation: The robot moves left twice. It ends up two \"moves\" to the left of the origin. We return false because it is not at the origin at the end of its moves.\n\n\u00a0\nConstraints:\n\n1 <= moves.length <= 2 * 104\nmoves only contains the characters 'U', 'D', 'L' and 'R'.\n\n"], "658. Find K Closest Elements": ["https://leetcode.com/problems/find-k-closest-elements", "Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.\nAn integer a is closer to x than an integer b if:\n\n|a - x| < |b - x|, or\n|a - x| == |b - x| and a < b\n\n\u00a0\nExample 1:\nInput: arr = [1,2,3,4,5], k = 4, x = 3\nOutput: [1,2,3,4]\nExample 2:\nInput: arr = [1,2,3,4,5], k = 4, x = -1\nOutput: [1,2,3,4]\n\n\u00a0\nConstraints:\n\n1 <= k <= arr.length\n1 <= arr.length <= 104\narr is sorted in ascending order.\n-104 <= arr[i], x <= 104\n\n"], "659. Split Array into Consecutive Subsequences": ["https://leetcode.com/problems/split-array-into-consecutive-subsequences", "You are given an integer array nums that is sorted in non-decreasing order.\nDetermine if it is possible to split nums into one or more subsequences such that both of the following conditions are true:\n\nEach subsequence is a consecutive increasing sequence (i.e. each integer is exactly one more than the previous integer).\nAll subsequences have a length of 3 or more.\n\nReturn true if you can split nums according to the above conditions, or false otherwise.\nA subsequence of an array is a new array that is formed from the original array by deleting some (can be none) of the elements without disturbing the relative positions of the remaining elements. (i.e., [1,3,5] is a subsequence of [1,2,3,4,5] while [1,3,2] is not).\n\u00a0\nExample 1:\nInput: nums = [1,2,3,3,4,5]\nOutput: true\nExplanation: nums can be split into the following subsequences:\n[1,2,3,3,4,5] --> 1, 2, 3\n[1,2,3,3,4,5] --> 3, 4, 5\n\nExample 2:\nInput: nums = [1,2,3,3,4,4,5,5]\nOutput: true\nExplanation: nums can be split into the following subsequences:\n[1,2,3,3,4,4,5,5] --> 1, 2, 3, 4, 5\n[1,2,3,3,4,4,5,5] --> 3, 4, 5\n\nExample 3:\nInput: nums = [1,2,3,4,4,5]\nOutput: false\nExplanation: It is impossible to split nums into consecutive increasing subsequences of length 3 or more.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-1000 <= nums[i] <= 1000\nnums is sorted in non-decreasing order.\n\n"], "661. Image Smoother": ["https://leetcode.com/problems/image-smoother", "An image smoother is a filter of the size 3 x 3 that can be applied to each cell of an image by rounding down the average of the cell and the eight surrounding cells (i.e., the average of the nine cells in the blue smoother). If one or more of the surrounding cells of a cell is not present, we do not consider it in the average (i.e., the average of the four cells in the red smoother).\n\nGiven an m x n integer matrix img representing the grayscale of an image, return the image after applying the smoother on each cell of it.\n\u00a0\nExample 1:\n\nInput: img = [[1,1,1],[1,0,1],[1,1,1]]\nOutput: [[0,0,0],[0,0,0],[0,0,0]]\nExplanation:\nFor the points (0,0), (0,2), (2,0), (2,2): floor(3/4) = floor(0.75) = 0\nFor the points (0,1), (1,0), (1,2), (2,1): floor(5/6) = floor(0.83333333) = 0\nFor the point (1,1): floor(8/9) = floor(0.88888889) = 0\n\nExample 2:\n\nInput: img = [[100,200,100],[200,50,200],[100,200,100]]\nOutput: [[137,141,137],[141,138,141],[137,141,137]]\nExplanation:\nFor the points (0,0), (0,2), (2,0), (2,2): floor((100+200+200+50)/4) = floor(137.5) = 137\nFor the points (0,1), (1,0), (1,2), (2,1): floor((200+200+50+200+100+100)/6) = floor(141.666667) = 141\nFor the point (1,1): floor((50+200+200+200+200+100+100+100+100)/9) = floor(138.888889) = 138\n\n\u00a0\nConstraints:\n\nm == img.length\nn == img[i].length\n1 <= m, n <= 200\n0 <= img[i][j] <= 255\n\n"], "662. Maximum Width of Binary Tree": ["https://leetcode.com/problems/maximum-width-of-binary-tree", "Given the root of a binary tree, return the maximum width of the given tree.\nThe maximum width of a tree is the maximum width among all levels.\nThe width of one level is defined as the length between the end-nodes (the leftmost and rightmost non-null nodes), where the null nodes between the end-nodes that would be present in a complete binary tree extending down to that level are also counted into the length calculation.\nIt is guaranteed that the answer will in the range of a 32-bit signed integer.\n\u00a0\nExample 1:\n\nInput: root = [1,3,2,5,3,null,9]\nOutput: 4\nExplanation: The maximum width exists in the third level with length 4 (5,3,null,9).\n\nExample 2:\n\nInput: root = [1,3,2,5,null,null,9,6,null,7]\nOutput: 7\nExplanation: The maximum width exists in the fourth level with length 7 (6,null,null,null,null,null,7).\n\nExample 3:\n\nInput: root = [1,3,2,5]\nOutput: 2\nExplanation: The maximum width exists in the second level with length 2 (3,2).\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 3000].\n-100 <= Node.val <= 100\n\n"], "664. Strange Printer": ["https://leetcode.com/problems/strange-printer", "There is a strange printer with the following two special properties:\n\nThe printer can only print a sequence of the same character each time.\nAt each turn, the printer can print new characters starting from and ending at any place and will cover the original existing characters.\n\nGiven a string s, return the minimum number of turns the printer needed to print it.\n\u00a0\nExample 1:\nInput: s = \"aaabbb\"\nOutput: 2\nExplanation: Print \"aaa\" first and then print \"bbb\".\n\nExample 2:\nInput: s = \"aba\"\nOutput: 2\nExplanation: Print \"aaa\" first and then print \"b\" from the second place of the string, which will cover the existing character 'a'.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 100\ns consists of lowercase English letters.\n\n"], "665. Non-decreasing Array": ["https://leetcode.com/problems/non-decreasing-array", "Given an array nums with n integers, your task is to check if it could become non-decreasing by modifying at most one element.\nWe define an array is non-decreasing if nums[i] <= nums[i + 1] holds for every i (0-based) such that (0 <= i <= n - 2).\n\u00a0\nExample 1:\nInput: nums = [4,2,3]\nOutput: true\nExplanation: You could modify the first 4 to 1 to get a non-decreasing array.\n\nExample 2:\nInput: nums = [4,2,1]\nOutput: false\nExplanation: You can't get a non-decreasing array by modify at most one element.\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= n <= 104\n-105 <= nums[i] <= 105\n\n"], "667. Beautiful Arrangement II": ["https://leetcode.com/problems/beautiful-arrangement-ii", "Given two integers n and k, construct a list answer that contains n different positive integers ranging from 1 to n and obeys the following requirement:\n\nSuppose this list is answer =\u00a0[a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct integers.\n\nReturn the list answer. If there multiple valid answers, return any of them.\n\u00a0\nExample 1:\nInput: n = 3, k = 1\nOutput: [1,2,3]\nExplanation: The [1,2,3] has three different positive integers ranging from 1 to 3, and the [1,1] has exactly 1 distinct integer: 1\n\nExample 2:\nInput: n = 3, k = 2\nOutput: [1,3,2]\nExplanation: The [1,3,2] has three different positive integers ranging from 1 to 3, and the [2,1] has exactly 2 distinct integers: 1 and 2.\n\n\u00a0\nConstraints:\n\n1 <= k < n <= 104\n\n"], "668. Kth Smallest Number in Multiplication Table": ["https://leetcode.com/problems/kth-smallest-number-in-multiplication-table", "Nearly everyone has used the Multiplication Table. The multiplication table of size m x n is an integer matrix mat where mat[i][j] == i * j (1-indexed).\nGiven three integers m, n, and k, return the kth smallest element in the m x n multiplication table.\n\u00a0\nExample 1:\n\nInput: m = 3, n = 3, k = 5\nOutput: 3\nExplanation: The 5th smallest number is 3.\n\nExample 2:\n\nInput: m = 2, n = 3, k = 6\nOutput: 6\nExplanation: The 6th smallest number is 6.\n\n\u00a0\nConstraints:\n\n1 <= m, n <= 3 * 104\n1 <= k <= m * n\n\n"], "669. Trim a Binary Search Tree": ["https://leetcode.com/problems/trim-a-binary-search-tree", "Given the root of a binary search tree and the lowest and highest boundaries as low and high, trim the tree so that all its elements lies in [low, high]. Trimming the tree should not change the relative structure of the elements that will remain in the tree (i.e., any node's descendant should remain a descendant). It can be proven that there is a unique answer.\nReturn the root of the trimmed binary search tree. Note that the root may change depending on the given bounds.\n\u00a0\nExample 1:\n\nInput: root = [1,0,2], low = 1, high = 2\nOutput: [1,null,2]\n\nExample 2:\n\nInput: root = [3,0,4,null,2,null,null,1], low = 1, high = 3\nOutput: [3,2,null,1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n0 <= Node.val <= 104\nThe value of each node in the tree is unique.\nroot is guaranteed to be a valid binary search tree.\n0 <= low <= high <= 104\n\n"], "670. Maximum Swap": ["https://leetcode.com/problems/maximum-swap", "You are given an integer num. You can swap two digits at most once to get the maximum valued number.\nReturn the maximum valued number you can get.\n\u00a0\nExample 1:\nInput: num = 2736\nOutput: 7236\nExplanation: Swap the number 2 and the number 7.\n\nExample 2:\nInput: num = 9973\nOutput: 9973\nExplanation: No swap.\n\n\u00a0\nConstraints:\n\n0 <= num <= 108\n\n"], "671. Second Minimum Node In a Binary Tree": ["https://leetcode.com/problems/second-minimum-node-in-a-binary-tree", "Given a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly two or zero sub-node. If the node has two sub-nodes, then this node's value is the smaller value among its two sub-nodes. More formally, the property\u00a0root.val = min(root.left.val, root.right.val)\u00a0always holds.\nGiven such a binary tree, you need to output the second minimum value in the set made of all the nodes' value in the whole tree.\nIf no such second minimum value exists, output -1 instead.\n\u00a0\n\u00a0\nExample 1:\n\nInput: root = [2,2,5,null,null,5,7]\nOutput: 5\nExplanation: The smallest value is 2, the second smallest value is 5.\n\nExample 2:\n\nInput: root = [2,2,2]\nOutput: -1\nExplanation: The smallest value is 2, but there isn't any second smallest value.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 25].\n1 <= Node.val <= 231 - 1\nroot.val == min(root.left.val, root.right.val)\u00a0for each internal node of the tree.\n\n"], "672. Bulb Switcher II": ["https://leetcode.com/problems/bulb-switcher-ii", "There is a room with n bulbs labeled from 1 to n that all are turned on initially, and four buttons on the wall. Each of the four buttons has a different functionality where:\n\nButton 1: Flips the status of all the bulbs.\nButton 2: Flips the status of all the bulbs with even labels (i.e., 2, 4, ...).\nButton 3: Flips the status of all the bulbs with odd labels (i.e., 1, 3, ...).\nButton 4: Flips the status of all the bulbs with a label j = 3k + 1 where k = 0, 1, 2, ... (i.e., 1, 4, 7, 10, ...).\n\nYou must make exactly presses button presses in total. For each press, you may pick any of the four buttons to press.\nGiven the two integers n and presses, return the number of different possible statuses after performing all presses button presses.\n\u00a0\nExample 1:\nInput: n = 1, presses = 1\nOutput: 2\nExplanation: Status can be:\n- [off] by pressing button 1\n- [on] by pressing button 2\n\nExample 2:\nInput: n = 2, presses = 1\nOutput: 3\nExplanation: Status can be:\n- [off, off] by pressing button 1\n- [on, off] by pressing button 2\n- [off, on] by pressing button 3\n\nExample 3:\nInput: n = 3, presses = 1\nOutput: 4\nExplanation: Status can be:\n- [off, off, off] by pressing button 1\n- [off, on, off] by pressing button 2\n- [on, off, on] by pressing button 3\n- [off, on, on] by pressing button 4\n\n\u00a0\nConstraints:\n\n1 <= n <= 1000\n0 <= presses <= 1000\n\n"], "673. Number of Longest Increasing Subsequence": ["https://leetcode.com/problems/number-of-longest-increasing-subsequence", "Given an integer array\u00a0nums, return the number of longest increasing subsequences.\nNotice that the sequence has to be strictly increasing.\n\u00a0\nExample 1:\nInput: nums = [1,3,5,4,7]\nOutput: 2\nExplanation: The two longest increasing subsequences are [1, 3, 4, 7] and [1, 3, 5, 7].\n\nExample 2:\nInput: nums = [2,2,2,2,2]\nOutput: 5\nExplanation: The length of longest continuous increasing subsequence is 1, and there are 5 subsequences' length is 1, so output 5.\n\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2000\n-106 <= nums[i] <= 106\n\n"], "674. Longest Continuous Increasing Subsequence": ["https://leetcode.com/problems/longest-continuous-increasing-subsequence", "Given an unsorted array of integers nums, return the length of the longest continuous increasing subsequence (i.e. subarray). The subsequence must be strictly increasing.\nA continuous increasing subsequence is defined by two indices l and r (l < r) such that it is [nums[l], nums[l + 1], ..., nums[r - 1], nums[r]] and for each l <= i < r, nums[i] < nums[i + 1].\n\u00a0\nExample 1:\nInput: nums = [1,3,5,4,7]\nOutput: 3\nExplanation: The longest continuous increasing subsequence is [1,3,5] with length 3.\nEven though [1,3,5,7] is an increasing subsequence, it is not continuous as elements 5 and 7 are separated by element\n4.\n\nExample 2:\nInput: nums = [2,2,2,2,2]\nOutput: 1\nExplanation: The longest continuous increasing subsequence is [2] with length 1. Note that it must be strictly\nincreasing.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-109 <= nums[i] <= 109\n\n"], "675. Cut Off Trees for Golf Event": ["https://leetcode.com/problems/cut-off-trees-for-golf-event", "You are asked to cut off all the trees in a forest for a golf event. The forest is represented as an m x n matrix. In this matrix:\n\n0 means the cell cannot be walked through.\n1 represents an empty cell that can be walked through.\nA number greater than 1 represents a tree in a cell that can be walked through, and this number is the tree's height.\n\nIn one step, you can walk in any of the four directions: north, east, south, and west. If you are standing in a cell with a tree, you can choose whether to cut it off.\nYou must cut off the trees in order from shortest to tallest. When you cut off a tree, the value at its cell becomes 1 (an empty cell).\nStarting from the point (0, 0), return the minimum steps you need to walk to cut off all the trees. If you cannot cut off all the trees, return -1.\nYou are guaranteed that no two trees have the same height, and there is at least one tree needs to be cut off.\n\u00a0\nExample 1:\n\nInput: forest = [[1,2,3],[0,0,4],[7,6,5]]\nOutput: 6\nExplanation: Following the path above allows you to cut off the trees from shortest to tallest in 6 steps.\n\nExample 2:\n\nInput: forest = [[1,2,3],[0,0,0],[7,6,5]]\nOutput: -1\nExplanation: The trees in the bottom row cannot be accessed as the middle row is blocked.\n\nExample 3:\nInput: forest = [[2,3,4],[0,0,5],[8,7,6]]\nOutput: 6\nExplanation: You can follow the same path as Example 1 to cut off all the trees.\nNote that you can cut off the first tree at (0, 0) before making any steps.\n\n\u00a0\nConstraints:\n\nm == forest.length\nn == forest[i].length\n1 <= m, n <= 50\n0 <= forest[i][j] <= 109\n\n"], "676. Implement Magic Dictionary": ["https://leetcode.com/problems/implement-magic-dictionary", "Design a data structure that is initialized with a list of different words. Provided a string, you should determine if you can change exactly one character in this string to match any word in the data structure.\nImplement the\u00a0MagicDictionary\u00a0class:\n\nMagicDictionary()\u00a0Initializes the object.\nvoid buildDict(String[]\u00a0dictionary)\u00a0Sets the data structure\u00a0with an array of distinct strings dictionary.\nbool search(String searchWord) Returns true if you can change exactly one character in searchWord to match any string in the data structure, otherwise returns false.\n\n\u00a0\nExample 1:\nInput\n[\"MagicDictionary\", \"buildDict\", \"search\", \"search\", \"search\", \"search\"]\n[[], [[\"hello\", \"leetcode\"]], [\"hello\"], [\"hhllo\"], [\"hell\"], [\"leetcoded\"]]\nOutput\n[null, null, false, true, false, false]\n\nExplanation\nMagicDictionary magicDictionary = new MagicDictionary();\nmagicDictionary.buildDict([\"hello\", \"leetcode\"]);\nmagicDictionary.search(\"hello\"); // return False\nmagicDictionary.search(\"hhllo\"); // We can change the second 'h' to 'e' to match \"hello\" so we return True\nmagicDictionary.search(\"hell\"); // return False\nmagicDictionary.search(\"leetcoded\"); // return False\n\n\u00a0\nConstraints:\n\n1 <=\u00a0dictionary.length <= 100\n1 <=\u00a0dictionary[i].length <= 100\ndictionary[i] consists of only lower-case English letters.\nAll the strings in\u00a0dictionary\u00a0are distinct.\n1 <=\u00a0searchWord.length <= 100\nsearchWord\u00a0consists of only lower-case English letters.\nbuildDict\u00a0will be called only once before search.\nAt most 100 calls will be made to search.\n\n"], "677. Map Sum Pairs": ["https://leetcode.com/problems/map-sum-pairs", "Design a map that allows you to do the following:\n\nMaps a string key to a given value.\nReturns the sum of the values that have a key with a prefix equal to a given string.\n\nImplement the MapSum class:\n\nMapSum() Initializes the MapSum object.\nvoid insert(String key, int val) Inserts the key-val pair into the map. If the key already existed, the original key-value pair will be overridden to the new one.\nint sum(string prefix) Returns the sum of all the pairs' value whose key starts with the prefix.\n\n\u00a0\nExample 1:\nInput\n[\"MapSum\", \"insert\", \"sum\", \"insert\", \"sum\"]\n[[], [\"apple\", 3], [\"ap\"], [\"app\", 2], [\"ap\"]]\nOutput\n[null, null, 3, null, 5]\n\nExplanation\nMapSum mapSum = new MapSum();\nmapSum.insert(\"apple\", 3);  \nmapSum.sum(\"ap\");           // return 3 (apple = 3)\nmapSum.insert(\"app\", 2);    \nmapSum.sum(\"ap\");           // return 5 (apple + app = 3 + 2 = 5)\n\n\u00a0\nConstraints:\n\n1 <= key.length, prefix.length <= 50\nkey and prefix consist of only lowercase English letters.\n1 <= val <= 1000\nAt most 50 calls will be made to insert and sum.\n\n"], "678. Valid Parenthesis String": ["https://leetcode.com/problems/valid-parenthesis-string", "Given a string s containing only three types of characters: '(', ')' and '*', return true if s is valid.\nThe following rules define a valid string:\n\nAny left parenthesis '(' must have a corresponding right parenthesis ')'.\nAny right parenthesis ')' must have a corresponding left parenthesis '('.\nLeft parenthesis '(' must go before the corresponding right parenthesis ')'.\n'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string \"\".\n\n\u00a0\nExample 1:\nInput: s = \"()\"\nOutput: true\nExample 2:\nInput: s = \"(*)\"\nOutput: true\nExample 3:\nInput: s = \"(*))\"\nOutput: true\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 100\ns[i] is '(', ')' or '*'.\n\n"], "679. 24 Game": ["https://leetcode.com/problems/24-game", "You are given an integer array cards of length 4. You have four cards, each containing a number in the range [1, 9]. You should arrange the numbers on these cards in a mathematical expression using the operators ['+', '-', '*', '/'] and the parentheses '(' and ')' to get the value 24.\nYou are restricted with the following rules:\n\nThe division operator '/' represents real division, not integer division.\n\n\t\nFor example, 4 / (1 - 2 / 3) = 4 / (1 / 3) = 12.\n\n\nEvery operation done is between two numbers. In particular, we cannot use '-' as a unary operator.\n\t\nFor example, if cards = [1, 1, 1, 1], the expression \"-1 - 1 - 1 - 1\" is not allowed.\n\n\nYou cannot concatenate numbers together\n\t\nFor example, if cards = [1, 2, 1, 2], the expression \"12 + 12\" is not valid.\n\n\n\nReturn true if you can get such expression that evaluates to 24, and false otherwise.\n\u00a0\nExample 1:\nInput: cards = [4,1,8,7]\nOutput: true\nExplanation: (8-4) * (7-1) = 24\n\nExample 2:\nInput: cards = [1,2,1,2]\nOutput: false\n\n\u00a0\nConstraints:\n\ncards.length == 4\n1 <= cards[i] <= 9\n\n"], "680. Valid Palindrome II": ["https://leetcode.com/problems/valid-palindrome-ii", "Given a string s, return true if the s can be palindrome after deleting at most one character from it.\n\u00a0\nExample 1:\nInput: s = \"aba\"\nOutput: true\n\nExample 2:\nInput: s = \"abca\"\nOutput: true\nExplanation: You could delete the character 'c'.\n\nExample 3:\nInput: s = \"abc\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns consists of lowercase English letters.\n\n"], "682. Baseball Game": ["https://leetcode.com/problems/baseball-game", "You are keeping score for a baseball game with strange rules. The game consists of several rounds, where the scores of past rounds may affect future rounds' scores.\nAt the beginning of the game, you start with an empty record. You are given a list of strings ops, where ops[i] is the ith operation you must apply to the record and is one of the following:\n\nAn integer x - Record a new score of x.\n\"+\" - Record a new score that is the sum of the previous two scores. It is guaranteed there will always be two previous scores.\n\"D\" - Record a new score that is double the previous score. It is guaranteed there will always be a previous score.\n\"C\" - Invalidate the previous score, removing it from the record. It is guaranteed there will always be a previous score.\n\nReturn the sum of all the scores on the record. The test cases are generated so that the answer fits in a 32-bit integer.\n\u00a0\nExample 1:\nInput: ops = [\"5\",\"2\",\"C\",\"D\",\"+\"]\nOutput: 30\nExplanation:\n\"5\" - Add 5 to the record, record is now [5].\n\"2\" - Add 2 to the record, record is now [5, 2].\n\"C\" - Invalidate and remove the previous score, record is now [5].\n\"D\" - Add 2 * 5 = 10 to the record, record is now [5, 10].\n\"+\" - Add 5 + 10 = 15 to the record, record is now [5, 10, 15].\nThe total sum is 5 + 10 + 15 = 30.\n\nExample 2:\nInput: ops = [\"5\",\"-2\",\"4\",\"C\",\"D\",\"9\",\"+\",\"+\"]\nOutput: 27\nExplanation:\n\"5\" - Add 5 to the record, record is now [5].\n\"-2\" - Add -2 to the record, record is now [5, -2].\n\"4\" - Add 4 to the record, record is now [5, -2, 4].\n\"C\" - Invalidate and remove the previous score, record is now [5, -2].\n\"D\" - Add 2 * -2 = -4 to the record, record is now [5, -2, -4].\n\"9\" - Add 9 to the record, record is now [5, -2, -4, 9].\n\"+\" - Add -4 + 9 = 5 to the record, record is now [5, -2, -4, 9, 5].\n\"+\" - Add 9 + 5 = 14 to the record, record is now [5, -2, -4, 9, 5, 14].\nThe total sum is 5 + -2 + -4 + 9 + 5 + 14 = 27.\n\nExample 3:\nInput: ops = [\"1\",\"C\"]\nOutput: 0\nExplanation:\n\"1\" - Add 1 to the record, record is now [1].\n\"C\" - Invalidate and remove the previous score, record is now [].\nSince the record is empty, the total sum is 0.\n\n\u00a0\nConstraints:\n\n1 <= ops.length <= 1000\nops[i] is \"C\", \"D\", \"+\", or a string representing an integer in the range [-3 * 104, 3 * 104].\nFor operation \"+\", there will always be at least two previous scores on the record.\nFor operations \"C\" and \"D\", there will always be at least one previous score on the record.\n\n"], "684. Redundant Connection": ["https://leetcode.com/problems/redundant-connection", "In this problem, a tree is an undirected graph that is connected and has no cycles.\nYou are given a graph that started as a tree with n nodes labeled from 1 to n, with one additional edge added. The added edge has two different vertices chosen from 1 to n, and was not an edge that already existed. The graph is represented as an array edges of length n where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the graph.\nReturn an edge that can be removed so that the resulting graph is a tree of n nodes. If there are multiple answers, return the answer that occurs last in the input.\n\u00a0\nExample 1:\n\nInput: edges = [[1,2],[1,3],[2,3]]\nOutput: [2,3]\n\nExample 2:\n\nInput: edges = [[1,2],[2,3],[3,4],[1,4],[1,5]]\nOutput: [1,4]\n\n\u00a0\nConstraints:\n\nn == edges.length\n3 <= n <= 1000\nedges[i].length == 2\n1 <= ai < bi <= edges.length\nai != bi\nThere are no repeated edges.\nThe given graph is connected.\n\n"], "685. Redundant Connection II": ["https://leetcode.com/problems/redundant-connection-ii", "In this problem, a rooted tree is a directed graph such that, there is exactly one node (the root) for which all other nodes are descendants of this node, plus every node has exactly one parent, except for the root node which has no parents.\nThe given input is a directed graph that started as a rooted tree with n nodes (with distinct values from 1 to n), with one additional directed edge added. The added edge has two different vertices chosen from 1 to n, and was not an edge that already existed.\nThe resulting graph is given as a 2D-array of edges. Each element of edges is a pair [ui, vi] that represents a directed edge connecting nodes ui and vi, where ui is a parent of child vi.\nReturn an edge that can be removed so that the resulting graph is a rooted tree of n nodes. If there are multiple answers, return the answer that occurs last in the given 2D-array.\n\u00a0\nExample 1:\n\nInput: edges = [[1,2],[1,3],[2,3]]\nOutput: [2,3]\n\nExample 2:\n\nInput: edges = [[1,2],[2,3],[3,4],[4,1],[1,5]]\nOutput: [4,1]\n\n\u00a0\nConstraints:\n\nn == edges.length\n3 <= n <= 1000\nedges[i].length == 2\n1 <= ui, vi <= n\nui != vi\n\n"], "686. Repeated String Match": ["https://leetcode.com/problems/repeated-string-match", "Given two strings a and b, return the minimum number of times you should repeat string a so that string b is a substring of it. If it is impossible for b\u200b\u200b\u200b\u200b\u200b\u200b to be a substring of a after repeating it, return -1.\nNotice: string \"abc\" repeated 0 times is \"\", repeated 1 time is \"abc\" and repeated 2 times is \"abcabc\".\n\u00a0\nExample 1:\nInput: a = \"abcd\", b = \"cdabcdab\"\nOutput: 3\nExplanation: We return 3 because by repeating a three times \"abcdabcdabcd\", b is a substring of it.\n\nExample 2:\nInput: a = \"a\", b = \"aa\"\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= a.length, b.length <= 104\na and b consist of lowercase English letters.\n\n"], "687. Longest Univalue Path": ["https://leetcode.com/problems/longest-univalue-path", "Given the root of a binary tree, return the length of the longest path, where each node in the path has the same value. This path may or may not pass through the root.\nThe length of the path between two nodes is represented by the number of edges between them.\n\u00a0\nExample 1:\n\nInput: root = [5,4,5,1,1,5]\nOutput: 2\n\nExample 2:\n\nInput: root = [1,4,5,4,4,5]\nOutput: 2\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-1000 <= Node.val <= 1000\nThe depth of the tree will not exceed 1000.\n\n"], "688. Knight Probability in Chessboard": ["https://leetcode.com/problems/knight-probability-in-chessboard", "On an n x n chessboard, a knight starts at the cell (row, column) and attempts to make exactly k moves. The rows and columns are 0-indexed, so the top-left cell is (0, 0), and the bottom-right cell is (n - 1, n - 1).\nA chess knight has eight possible moves it can make, as illustrated below. Each move is two cells in a cardinal direction, then one cell in an orthogonal direction.\n\nEach time the knight is to move, it chooses one of eight possible moves uniformly at random (even if the piece would go off the chessboard) and moves there.\nThe knight continues moving until it has made exactly k moves or has moved off the chessboard.\nReturn the probability that the knight remains on the board after it has stopped moving.\n\u00a0\nExample 1:\nInput: n = 3, k = 2, row = 0, column = 0\nOutput: 0.06250\nExplanation: There are two moves (to (1,2), (2,1)) that will keep the knight on the board.\nFrom each of those positions, there are also two moves that will keep the knight on the board.\nThe total probability the knight stays on the board is 0.0625.\n\nExample 2:\nInput: n = 1, k = 0, row = 0, column = 0\nOutput: 1.00000\n\n\u00a0\nConstraints:\n\n1 <= n <= 25\n0 <= k <= 100\n0 <= row, column <= n\n\n"], "689. Maximum Sum of 3 Non-Overlapping Subarrays": ["https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays", "Given an integer array nums and an integer k, find three non-overlapping subarrays of length k with maximum sum and return them.\nReturn the result as a list of indices representing the starting position of each interval (0-indexed). If there are multiple answers, return the lexicographically smallest one.\n\u00a0\nExample 1:\nInput: nums = [1,2,1,2,6,7,5,1], k = 2\nOutput: [0,3,5]\nExplanation: Subarrays [1, 2], [2, 6], [7, 5] correspond to the starting indices [0, 3, 5].\nWe could have also taken [2, 1], but an answer of [1, 3, 5] would be lexicographically larger.\n\nExample 2:\nInput: nums = [1,2,1,2,1,2,1,2,1], k = 2\nOutput: [0,2,4]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2 * 104\n1 <= nums[i] <\u00a0216\n1 <= k <= floor(nums.length / 3)\n\n"], "690. Employee Importance": ["https://leetcode.com/problems/employee-importance", ""], "691. Stickers to Spell Word": ["https://leetcode.com/problems/stickers-to-spell-word", "We are given n different types of stickers. Each sticker has a lowercase English word on it.\nYou would like to spell out the given string target by cutting individual letters from your collection of stickers and rearranging them. You can use each sticker more than once if you want, and you have infinite quantities of each sticker.\nReturn the minimum number of stickers that you need to spell out target. If the task is impossible, return -1.\nNote: In all test cases, all words were chosen randomly from the 1000 most common US English words, and target was chosen as a concatenation of two random words.\n\u00a0\nExample 1:\nInput: stickers = [\"with\",\"example\",\"science\"], target = \"thehat\"\nOutput: 3\nExplanation:\nWe can use 2 \"with\" stickers, and 1 \"example\" sticker.\nAfter cutting and rearrange the letters of those stickers, we can form the target \"thehat\".\nAlso, this is the minimum number of stickers necessary to form the target string.\n\nExample 2:\nInput: stickers = [\"notice\",\"possible\"], target = \"basicbasic\"\nOutput: -1\nExplanation:\nWe cannot form the target \"basicbasic\" from cutting letters from the given stickers.\n\n\u00a0\nConstraints:\n\nn == stickers.length\n1 <= n <= 50\n1 <= stickers[i].length <= 10\n1 <= target.length <= 15\nstickers[i] and target consist of lowercase English letters.\n\n"], "692. Top K Frequent Words": ["https://leetcode.com/problems/top-k-frequent-words", "Given an array of strings words and an integer k, return the k most frequent strings.\nReturn the answer sorted by the frequency from highest to lowest. Sort the words with the same frequency by their lexicographical order.\n\u00a0\nExample 1:\nInput: words = [\"i\",\"love\",\"leetcode\",\"i\",\"love\",\"coding\"], k = 2\nOutput: [\"i\",\"love\"]\nExplanation: \"i\" and \"love\" are the two most frequent words.\nNote that \"i\" comes before \"love\" due to a lower alphabetical order.\n\nExample 2:\nInput: words = [\"the\",\"day\",\"is\",\"sunny\",\"the\",\"the\",\"the\",\"sunny\",\"is\",\"is\"], k = 4\nOutput: [\"the\",\"is\",\"sunny\",\"day\"]\nExplanation: \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively.\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 500\n1 <= words[i] <= 10\nwords[i] consists of lowercase English letters.\nk is in the range [1, The number of unique words[i]]\n\n\u00a0\nFollow-up: Could you solve it in O(n log(k)) time and O(n) extra space?\n"], "693. Binary Number with Alternating Bits": ["https://leetcode.com/problems/binary-number-with-alternating-bits", "Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.\n\u00a0\nExample 1:\nInput: n = 5\nOutput: true\nExplanation: The binary representation of 5 is: 101\n\nExample 2:\nInput: n = 7\nOutput: false\nExplanation: The binary representation of 7 is: 111.\nExample 3:\nInput: n = 11\nOutput: false\nExplanation: The binary representation of 11 is: 1011.\n\u00a0\nConstraints:\n\n1 <= n <= 231 - 1\n\n"], "695. Max Area of Island": ["https://leetcode.com/problems/max-area-of-island", "You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.\nThe area of an island is the number of cells with a value 1 in the island.\nReturn the maximum area of an island in grid. If there is no island, return 0.\n\u00a0\nExample 1:\n\nInput: grid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]\nOutput: 6\nExplanation: The answer is not 11, because the island must be connected 4-directionally.\n\nExample 2:\nInput: grid = [[0,0,0,0,0,0,0,0]]\nOutput: 0\n\n\u00a0\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 50\ngrid[i][j] is either 0 or 1.\n\n"], "696. Count Binary Substrings": ["https://leetcode.com/problems/count-binary-substrings", "Give a binary string s, return the number of non-empty substrings that have the same number of 0's and 1's, and all the 0's and all the 1's in these substrings are grouped consecutively.\nSubstrings that occur multiple times are counted the number of times they occur.\n\u00a0\nExample 1:\nInput: s = \"00110011\"\nOutput: 6\nExplanation: There are 6 substrings that have equal number of consecutive 1's and 0's: \"0011\", \"01\", \"1100\", \"10\", \"0011\", and \"01\".\nNotice that some of these substrings repeat and are counted the number of times they occur.\nAlso, \"00110011\" is not a valid substring because all the 0's (and 1's) are not grouped together.\n\nExample 2:\nInput: s = \"10101\"\nOutput: 4\nExplanation: There are 4 substrings: \"10\", \"01\", \"10\", \"01\" that have equal number of consecutive 1's and 0's.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns[i] is either '0' or '1'.\n\n"], "697. Degree of an Array": ["https://leetcode.com/problems/degree-of-an-array", "Given a non-empty array of non-negative integers nums, the degree of this array is defined as the maximum frequency of any one of its elements.\nYour task is to find the smallest possible length of a (contiguous) subarray of nums, that has the same degree as nums.\n\u00a0\nExample 1:\nInput: nums = [1,2,2,3,1]\nOutput: 2\nExplanation: \nThe input array has a degree of 2 because both elements 1 and 2 appear twice.\nOf the subarrays that have the same degree:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\nThe shortest length is 2. So return 2.\n\nExample 2:\nInput: nums = [1,2,2,3,1,4,2]\nOutput: 6\nExplanation: \nThe degree is 3 because the element 2 is repeated 3 times.\nSo [2,2,3,1,4,2] is the shortest subarray, therefore returning 6.\n\n\u00a0\nConstraints:\n\nnums.length will be between 1 and 50,000.\nnums[i] will be an integer between 0 and 49,999.\n\n"], "698. Partition to K Equal Sum Subsets": ["https://leetcode.com/problems/partition-to-k-equal-sum-subsets", "Given an integer array nums and an integer k, return true if it is possible to divide this array into k non-empty subsets whose sums are all equal.\n\u00a0\nExample 1:\nInput: nums = [4,3,2,3,5,2,1], k = 4\nOutput: true\nExplanation: It is possible to divide it into 4 subsets (5), (1, 4), (2,3), (2,3) with equal sums.\n\nExample 2:\nInput: nums = [1,2,3,4], k = 3\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= k <= nums.length <= 16\n1 <= nums[i] <= 104\nThe frequency of each element is in the range [1, 4].\n\n"], "699. Falling Squares": ["https://leetcode.com/problems/falling-squares", "There are several squares being dropped onto the X-axis of a 2D plane.\nYou are given a 2D integer array positions where positions[i] = [lefti, sideLengthi] represents the ith square with a side length of sideLengthi that is dropped with its left edge aligned with X-coordinate lefti.\nEach square is dropped one at a time from a height above any landed squares. It then falls downward (negative Y direction) until it either lands on the top side of another square or on the X-axis. A square brushing the left/right side of another square does not count as landing on it. Once it lands, it freezes in place and cannot be moved.\nAfter each square is dropped, you must record the height of the current tallest stack of squares.\nReturn an integer array ans where ans[i] represents the height described above after dropping the ith square.\n\u00a0\nExample 1:\n\nInput: positions = [[1,2],[2,3],[6,1]]\nOutput: [2,5,5]\nExplanation:\nAfter the first drop, the tallest stack is square 1 with a height of 2.\nAfter the second drop, the tallest stack is squares 1 and 2 with a height of 5.\nAfter the third drop, the tallest stack is still squares 1 and 2 with a height of 5.\nThus, we return an answer of [2, 5, 5].\n\nExample 2:\nInput: positions = [[100,100],[200,100]]\nOutput: [100,100]\nExplanation:\nAfter the first drop, the tallest stack is square 1 with a height of 100.\nAfter the second drop, the tallest stack is either square 1 or square 2, both with heights of 100.\nThus, we return an answer of [100, 100].\nNote that square 2 only brushes the right side of square 1, which does not count as landing on it.\n\n\u00a0\nConstraints:\n\n1 <= positions.length <= 1000\n1 <= lefti <= 108\n1 <= sideLengthi <= 106\n\n"], "700. Search in a Binary Search Tree": ["https://leetcode.com/problems/search-in-a-binary-search-tree", "You are given the root of a binary search tree (BST) and an integer val.\nFind the node in the BST that the node's value equals val and return the subtree rooted with that node. If such a node does not exist, return null.\n\u00a0\nExample 1:\n\nInput: root = [4,2,7,1,3], val = 2\nOutput: [2,1,3]\n\nExample 2:\n\nInput: root = [4,2,7,1,3], val = 5\nOutput: []\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 5000].\n1 <= Node.val <= 107\nroot is a binary search tree.\n1 <= val <= 107\n\n"], "701. Insert into a Binary Search Tree": ["https://leetcode.com/problems/insert-into-a-binary-search-tree", "You are given the root node of a binary search tree (BST) and a value to insert into the tree. Return the root node of the BST after the insertion. It is guaranteed that the new value does not exist in the original BST.\nNotice\u00a0that there may exist\u00a0multiple valid ways for the\u00a0insertion, as long as the tree remains a BST after insertion. You can return any of them.\n\u00a0\nExample 1:\n\nInput: root = [4,2,7,1,3], val = 5\nOutput: [4,2,7,1,3,5]\nExplanation: Another accepted tree is:\n\n\nExample 2:\nInput: root = [40,20,60,10,30,50,70], val = 25\nOutput: [40,20,60,10,30,50,70,null,null,25]\n\nExample 3:\nInput: root = [4,2,7,1,3,null,null,null,null,null,null], val = 5\nOutput: [4,2,7,1,3,5]\n\n\u00a0\nConstraints:\n\nThe number of nodes in\u00a0the tree will be in the range [0,\u00a0104].\n-108 <= Node.val <= 108\nAll the values Node.val are unique.\n-108 <= val <= 108\nIt's guaranteed that val does not exist in the original BST.\n\n"], "703. Kth Largest Element in a Stream": ["https://leetcode.com/problems/kth-largest-element-in-a-stream", "Design a class to find the kth largest element in a stream. Note that it is the kth largest element in the sorted order, not the kth distinct element.\nImplement KthLargest class:\n\nKthLargest(int k, int[] nums) Initializes the object with the integer k and the stream of integers nums.\nint add(int val) Appends the integer val to the stream and returns the element representing the kth largest element in the stream.\n\n\u00a0\nExample 1:\nInput\n[\"KthLargest\", \"add\", \"add\", \"add\", \"add\", \"add\"]\n[[3, [4, 5, 8, 2]], [3], [5], [10], [9], [4]]\nOutput\n[null, 4, 5, 5, 8, 8]\n\nExplanation\nKthLargest kthLargest = new KthLargest(3, [4, 5, 8, 2]);\nkthLargest.add(3);   // return 4\nkthLargest.add(5);   // return 5\nkthLargest.add(10);  // return 5\nkthLargest.add(9);   // return 8\nkthLargest.add(4);   // return 8\n\n\u00a0\nConstraints:\n\n1 <= k <= 104\n0 <= nums.length <= 104\n-104 <= nums[i] <= 104\n-104 <= val <= 104\nAt most 104 calls will be made to add.\nIt is guaranteed that there will be at least k elements in the array when you search for the kth element.\n\n"], "704. Binary Search": ["https://leetcode.com/problems/binary-search", "Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.\nYou must write an algorithm with O(log n) runtime complexity.\n\u00a0\nExample 1:\nInput: nums = [-1,0,3,5,9,12], target = 9\nOutput: 4\nExplanation: 9 exists in nums and its index is 4\n\nExample 2:\nInput: nums = [-1,0,3,5,9,12], target = 2\nOutput: -1\nExplanation: 2 does not exist in nums so return -1\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-104 < nums[i], target < 104\nAll the integers in nums are unique.\nnums is sorted in ascending order.\n\n"], "705. Design HashSet": ["https://leetcode.com/problems/design-hashset", "Design a HashSet without using any built-in hash table libraries.\nImplement MyHashSet class:\n\nvoid add(key) Inserts the value key into the HashSet.\nbool contains(key) Returns whether the value key exists in the HashSet or not.\nvoid remove(key) Removes the value key in the HashSet. If key does not exist in the HashSet, do nothing.\n\n\u00a0\nExample 1:\nInput\n[\"MyHashSet\", \"add\", \"add\", \"contains\", \"contains\", \"add\", \"contains\", \"remove\", \"contains\"]\n[[], [1], [2], [1], [3], [2], [2], [2], [2]]\nOutput\n[null, null, null, true, false, null, true, null, false]\n\nExplanation\nMyHashSet myHashSet = new MyHashSet();\nmyHashSet.add(1);      // set = [1]\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(1); // return True\nmyHashSet.contains(3); // return False, (not found)\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(2); // return True\nmyHashSet.remove(2);   // set = [1]\nmyHashSet.contains(2); // return False, (already removed)\n\u00a0\nConstraints:\n\n0 <= key <= 106\nAt most 104 calls will be made to add, remove, and contains.\n\n"], "706. Design HashMap": ["https://leetcode.com/problems/design-hashmap", "Design a HashMap without using any built-in hash table libraries.\nImplement the MyHashMap class:\n\nMyHashMap() initializes the object with an empty map.\nvoid put(int key, int value) inserts a (key, value) pair into the HashMap. If the key already exists in the map, update the corresponding value.\nint get(int key) returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.\nvoid remove(key) removes the key and its corresponding value if the map contains the mapping for the key.\n\n\u00a0\nExample 1:\nInput\n[\"MyHashMap\", \"put\", \"put\", \"get\", \"get\", \"put\", \"get\", \"remove\", \"get\"]\n[[], [1, 1], [2, 2], [1], [3], [2, 1], [2], [2], [2]]\nOutput\n[null, null, null, 1, -1, null, 1, null, -1]\n\nExplanation\nMyHashMap myHashMap = new MyHashMap();\nmyHashMap.put(1, 1); // The map is now [[1,1]]\nmyHashMap.put(2, 2); // The map is now [[1,1], [2,2]]\nmyHashMap.get(1);    // return 1, The map is now [[1,1], [2,2]]\nmyHashMap.get(3);    // return -1 (i.e., not found), The map is now [[1,1], [2,2]]\nmyHashMap.put(2, 1); // The map is now [[1,1], [2,1]] (i.e., update the existing value)\nmyHashMap.get(2);    // return 1, The map is now [[1,1], [2,1]]\nmyHashMap.remove(2); // remove the mapping for 2, The map is now [[1,1]]\nmyHashMap.get(2);    // return -1 (i.e., not found), The map is now [[1,1]]\n\n\u00a0\nConstraints:\n\n0 <= key, value <= 106\nAt most 104 calls will be made to put, get, and remove.\n\n"], "707. Design Linked List": ["https://leetcode.com/problems/design-linked-list", "Design your implementation of the linked list. You can choose to use a singly or doubly linked list.\nA node in a singly linked list should have two attributes: val and next. val is the value of the current node, and next is a pointer/reference to the next node.\nIf you want to use the doubly linked list, you will need one more attribute prev to indicate the previous node in the linked list. Assume all nodes in the linked list are 0-indexed.\nImplement the MyLinkedList class:\n\nMyLinkedList() Initializes the MyLinkedList object.\nint get(int index) Get the value of the indexth node in the linked list. If the index is invalid, return -1.\nvoid addAtHead(int val) Add a node of value val before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.\nvoid addAtTail(int val) Append a node of value val as the last element of the linked list.\nvoid addAtIndex(int index, int val) Add a node of value val before the indexth node in the linked list. If index equals the length of the linked list, the node will be appended to the end of the linked list. If index is greater than the length, the node will not be inserted.\nvoid deleteAtIndex(int index) Delete the indexth node in the linked list, if the index is valid.\n\n\u00a0\nExample 1:\nInput\n[\"MyLinkedList\", \"addAtHead\", \"addAtTail\", \"addAtIndex\", \"get\", \"deleteAtIndex\", \"get\"]\n[[], [1], [3], [1, 2], [1], [1], [1]]\nOutput\n[null, null, null, null, 2, null, 3]\n\nExplanation\nMyLinkedList myLinkedList = new MyLinkedList();\nmyLinkedList.addAtHead(1);\nmyLinkedList.addAtTail(3);\nmyLinkedList.addAtIndex(1, 2);    // linked list becomes 1->2->3\nmyLinkedList.get(1);              // return 2\nmyLinkedList.deleteAtIndex(1);    // now the linked list is 1->3\nmyLinkedList.get(1);              // return 3\n\n\u00a0\nConstraints:\n\n0 <= index, val <= 1000\nPlease do not use the built-in LinkedList library.\nAt most 2000 calls will be made to get, addAtHead, addAtTail, addAtIndex and deleteAtIndex.\n\n"], "709. To Lower Case": ["https://leetcode.com/problems/to-lower-case", "Given a string s, return the string after replacing every uppercase letter with the same lowercase letter.\n\u00a0\nExample 1:\nInput: s = \"Hello\"\nOutput: \"hello\"\n\nExample 2:\nInput: s = \"here\"\nOutput: \"here\"\n\nExample 3:\nInput: s = \"LOVELY\"\nOutput: \"lovely\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 100\ns consists of printable ASCII characters.\n\n"], "710. Random Pick with Blacklist": ["https://leetcode.com/problems/random-pick-with-blacklist", "You are given an integer n and an array of unique integers blacklist. Design an algorithm to pick a random integer in the range [0, n - 1] that is not in blacklist. Any integer that is in the mentioned range and not in blacklist should be equally likely to be returned.\nOptimize your algorithm such that it minimizes the number of calls to the built-in random function of your language.\nImplement the Solution class:\n\nSolution(int n, int[] blacklist) Initializes the object with the integer n and the blacklisted integers blacklist.\nint pick() Returns a random integer in the range [0, n - 1] and not in blacklist.\n\n\u00a0\nExample 1:\nInput\n[\"Solution\", \"pick\", \"pick\", \"pick\", \"pick\", \"pick\", \"pick\", \"pick\"]\n[[7, [2, 3, 5]], [], [], [], [], [], [], []]\nOutput\n[null, 0, 4, 1, 6, 1, 0, 4]\n\nExplanation\nSolution solution = new Solution(7, [2, 3, 5]);\nsolution.pick(); // return 0, any integer from [0,1,4,6] should be ok. Note that for every call of pick,\n                 // 0, 1, 4, and 6 must be equally likely to be returned (i.e., with probability 1/4).\nsolution.pick(); // return 4\nsolution.pick(); // return 1\nsolution.pick(); // return 6\nsolution.pick(); // return 1\nsolution.pick(); // return 0\nsolution.pick(); // return 4\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\n0 <= blacklist.length <- min(105, n - 1)\n0 <= blacklist[i] < n\nAll the values of blacklist are unique.\nAt most 2 * 104 calls will be made to pick.\n\n"], "712. Minimum ASCII Delete Sum for Two Strings": ["https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings", "Given two strings s1 and\u00a0s2, return the lowest ASCII sum of deleted characters to make two strings equal.\n\u00a0\nExample 1:\nInput: s1 = \"sea\", s2 = \"eat\"\nOutput: 231\nExplanation: Deleting \"s\" from \"sea\" adds the ASCII value of \"s\" (115) to the sum.\nDeleting \"t\" from \"eat\" adds 116 to the sum.\nAt the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.\n\nExample 2:\nInput: s1 = \"delete\", s2 = \"leet\"\nOutput: 403\nExplanation: Deleting \"dee\" from \"delete\" to turn the string into \"let\",\nadds 100[d] + 101[e] + 101[e] to the sum.\nDeleting \"e\" from \"leet\" adds 101[e] to the sum.\nAt the end, both strings are equal to \"let\", and the answer is 100+101+101+101 = 403.\nIf instead we turned both strings into \"lee\" or \"eet\", we would get answers of 433 or 417, which are higher.\n\n\u00a0\nConstraints:\n\n1 <= s1.length, s2.length <= 1000\ns1 and s2 consist of lowercase English letters.\n\n"], "713. Subarray Product Less Than K": ["https://leetcode.com/problems/subarray-product-less-than-k", "Given an array of integers nums and an integer k, return the number of contiguous subarrays where the product of all the elements in the subarray is strictly less than k.\n\u00a0\nExample 1:\nInput: nums = [10,5,2,6], k = 100\nOutput: 8\nExplanation: The 8 subarrays that have product less than 100 are:\n[10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6]\nNote that [10, 5, 2] is not included as the product of 100 is not strictly less than k.\n\nExample 2:\nInput: nums = [1,2,3], k = 0\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 3 * 104\n1 <= nums[i] <= 1000\n0 <= k <= 106\n\n"], "714. Best Time to Buy and Sell Stock with Transaction Fee": ["https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee", ""], "715. Range Module": ["https://leetcode.com/problems/range-module", "A Range Module is a module that tracks ranges of numbers. Design a data structure to track the ranges represented as half-open intervals and query about them.\nA half-open interval [left, right) denotes all the real numbers x where left <= x < right.\nImplement the RangeModule class:\n\nRangeModule() Initializes the object of the data structure.\nvoid addRange(int left, int right) Adds the half-open interval [left, right), tracking every real number in that interval. Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval [left, right) that are not already tracked.\nboolean queryRange(int left, int right) Returns true if every real number in the interval [left, right) is currently being tracked, and false otherwise.\nvoid removeRange(int left, int right) Stops tracking every real number currently being tracked in the half-open interval [left, right).\n\n\u00a0\nExample 1:\nInput\n[\"RangeModule\", \"addRange\", \"removeRange\", \"queryRange\", \"queryRange\", \"queryRange\"]\n[[], [10, 20], [14, 16], [10, 14], [13, 15], [16, 17]]\nOutput\n[null, null, null, true, false, true]\n\nExplanation\nRangeModule rangeModule = new RangeModule();\nrangeModule.addRange(10, 20);\nrangeModule.removeRange(14, 16);\nrangeModule.queryRange(10, 14); // return True,(Every number in [10, 14) is being tracked)\nrangeModule.queryRange(13, 15); // return False,(Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\nrangeModule.queryRange(16, 17); // return True, (The number 16 in [16, 17) is still being tracked, despite the remove operation)\n\n\u00a0\nConstraints:\n\n1 <= left < right <= 109\nAt most 104 calls will be made to addRange, queryRange, and removeRange.\n\n"], "717. 1-bit and 2-bit Characters": ["https://leetcode.com/problems/1-bit-and-2-bit-characters", "We have two special characters:\n\nThe first character can be represented by one bit 0.\nThe second character can be represented by two bits (10 or 11).\n\nGiven a binary array bits that ends with 0, return true if the last character must be a one-bit character.\n\u00a0\nExample 1:\nInput: bits = [1,0,0]\nOutput: true\nExplanation: The only way to decode it is two-bit character and one-bit character.\nSo the last character is one-bit character.\n\nExample 2:\nInput: bits = [1,1,1,0]\nOutput: false\nExplanation: The only way to decode it is two-bit character and two-bit character.\nSo the last character is not one-bit character.\n\n\u00a0\nConstraints:\n\n1 <= bits.length <= 1000\nbits[i] is either 0 or 1.\n\n"], "718. Maximum Length of Repeated Subarray": ["https://leetcode.com/problems/maximum-length-of-repeated-subarray", "Given two integer arrays nums1 and nums2, return the maximum length of a subarray that appears in both arrays.\n\u00a0\nExample 1:\nInput: nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]\nOutput: 3\nExplanation: The repeated subarray with maximum length is [3,2,1].\n\nExample 2:\nInput: nums1 = [0,0,0,0,0], nums2 = [0,0,0,0,0]\nOutput: 5\n\n\u00a0\nConstraints:\n\n1 <= nums1.length, nums2.length <= 1000\n0 <= nums1[i], nums2[i] <= 100\n\n"], "719. Find K-th Smallest Pair Distance": ["https://leetcode.com/problems/find-k-th-smallest-pair-distance", "The distance of a pair of integers a and b is defined as the absolute difference between a and b.\nGiven an integer array nums and an integer k, return the kth smallest distance among all the pairs nums[i] and nums[j] where 0 <= i < j < nums.length.\n\u00a0\nExample 1:\nInput: nums = [1,3,1], k = 1\nOutput: 0\nExplanation: Here are all the pairs:\n(1,3) -> 2\n(1,1) -> 0\n(3,1) -> 2\nThen the 1st smallest distance pair is (1,1), and its distance is 0.\n\nExample 2:\nInput: nums = [1,1,1], k = 2\nOutput: 0\n\nExample 3:\nInput: nums = [1,6,1], k = 3\nOutput: 5\n\n\u00a0\nConstraints:\n\nn == nums.length\n2 <= n <= 104\n0 <= nums[i] <= 106\n1 <= k <= n * (n - 1) / 2\n\n"], "720. Longest Word in Dictionary": ["https://leetcode.com/problems/longest-word-in-dictionary", "Given an array of strings words representing an English Dictionary, return the longest word in words that can be built one character at a time by other words in words.\nIf there is more than one possible answer, return the longest word with the smallest lexicographical order. If there is no answer, return the empty string.\n\u00a0\nExample 1:\nInput: words = [\"w\",\"wo\",\"wor\",\"worl\",\"world\"]\nOutput: \"world\"\nExplanation: The word \"world\" can be built one character at a time by \"w\", \"wo\", \"wor\", and \"worl\".\n\nExample 2:\nInput: words = [\"a\",\"banana\",\"app\",\"appl\",\"ap\",\"apply\",\"apple\"]\nOutput: \"apple\"\nExplanation: Both \"apply\" and \"apple\" can be built from other words in the dictionary. However, \"apple\" is lexicographically smaller than \"apply\".\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 1000\n1 <= words[i].length <= 30\nwords[i] consists of lowercase English letters.\n\n"], "721. Accounts Merge": ["https://leetcode.com/problems/accounts-merge", "Given a list of accounts where each element accounts[i] is a list of strings, where the first element accounts[i][0] is a name, and the rest of the elements are emails representing emails of the account.\nNow, we would like to merge these accounts. Two accounts definitely belong to the same person if there is some common email to both accounts. Note that even if two accounts have the same name, they may belong to different people as people could have the same name. A person can have any number of accounts initially, but all of their accounts definitely have the same name.\nAfter merging the accounts, return the accounts in the following format: the first element of each account is the name, and the rest of the elements are emails in sorted order. The accounts themselves can be returned in any order.\n\u00a0\nExample 1:\nInput: accounts = [[\"John\",\"johnsmith@mail.com\",\"john_newyork@mail.com\"],[\"John\",\"johnsmith@mail.com\",\"john00@mail.com\"],[\"Mary\",\"mary@mail.com\"],[\"John\",\"johnnybravo@mail.com\"]]\nOutput: [[\"John\",\"john00@mail.com\",\"john_newyork@mail.com\",\"johnsmith@mail.com\"],[\"Mary\",\"mary@mail.com\"],[\"John\",\"johnnybravo@mail.com\"]]\nExplanation:\nThe first and second John's are the same person as they have the common email \"johnsmith@mail.com\".\nThe third John and Mary are different people as none of their email addresses are used by other accounts.\nWe could return these lists in any order, for example the answer [['Mary', 'mary@mail.com'], ['John', 'johnnybravo@mail.com'], \n['John', 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com']] would still be accepted.\n\nExample 2:\nInput: accounts = [[\"Gabe\",\"Gabe0@m.co\",\"Gabe3@m.co\",\"Gabe1@m.co\"],[\"Kevin\",\"Kevin3@m.co\",\"Kevin5@m.co\",\"Kevin0@m.co\"],[\"Ethan\",\"Ethan5@m.co\",\"Ethan4@m.co\",\"Ethan0@m.co\"],[\"Hanzo\",\"Hanzo3@m.co\",\"Hanzo1@m.co\",\"Hanzo0@m.co\"],[\"Fern\",\"Fern5@m.co\",\"Fern1@m.co\",\"Fern0@m.co\"]]\nOutput: [[\"Ethan\",\"Ethan0@m.co\",\"Ethan4@m.co\",\"Ethan5@m.co\"],[\"Gabe\",\"Gabe0@m.co\",\"Gabe1@m.co\",\"Gabe3@m.co\"],[\"Hanzo\",\"Hanzo0@m.co\",\"Hanzo1@m.co\",\"Hanzo3@m.co\"],[\"Kevin\",\"Kevin0@m.co\",\"Kevin3@m.co\",\"Kevin5@m.co\"],[\"Fern\",\"Fern0@m.co\",\"Fern1@m.co\",\"Fern5@m.co\"]]\n\n\u00a0\nConstraints:\n\n1 <= accounts.length <= 1000\n2 <= accounts[i].length <= 10\n1 <= accounts[i][j] <= 30\naccounts[i][0] consists of English letters.\naccounts[i][j] (for j > 0) is a valid email.\n\n"], "722. Remove Comments": ["https://leetcode.com/problems/remove-comments", "Given a C++ program, remove comments from it. The program source is an array of strings source where source[i] is the ith line of the source code. This represents the result of splitting the original source code string by the newline character '\\n'.\nIn C++, there are two types of comments, line comments, and block comments.\n\nThe string \"//\" denotes a line comment, which represents that it and the rest of the characters to the right of it in the same line should be ignored.\nThe string \"/*\" denotes a block comment, which represents that all characters until the next (non-overlapping) occurrence of \"*/\" should be ignored. (Here, occurrences happen in reading order: line by line from left to right.) To be clear, the string \"/*/\" does not yet end the block comment, as the ending would be overlapping the beginning.\n\nThe first effective comment takes precedence over others.\n\nFor example, if the string \"//\" occurs in a block comment, it is ignored.\nSimilarly, if the string \"/*\" occurs in a line or block comment, it is also ignored.\n\nIf a certain line of code is empty after removing comments, you must not output that line: each string in the answer list will be non-empty.\nThere will be no control characters, single quote, or double quote characters.\n\nFor example, source = \"string s = \"/* Not a comment. */\";\" will not be a test case.\n\nAlso, nothing else such as defines or macros will interfere with the comments.\nIt is guaranteed that every open block comment will eventually be closed, so \"/*\" outside of a line or block comment always starts a new comment.\nFinally, implicit newline characters can be deleted by block comments. Please see the examples below for details.\nAfter removing the comments from the source code, return the source code in the same format.\n\u00a0\nExample 1:\nInput: source = [\"/*Test program */\", \"int main()\", \"{ \", \"  // variable declaration \", \"int a, b, c;\", \"/* This is a test\", \"   multiline  \", \"   comment for \", \"   testing */\", \"a = b + c;\", \"}\"]\nOutput: [\"int main()\",\"{ \",\"  \",\"int a, b, c;\",\"a = b + c;\",\"}\"]\nExplanation: The line by line code is visualized as below:\n/*Test program */\nint main()\n{ \n  // variable declaration \nint a, b, c;\n/* This is a test\n   multiline  \n   comment for \n   testing */\na = b + c;\n}\nThe string /* denotes a block comment, including line 1 and lines 6-9. The string // denotes line 4 as comments.\nThe line by line output code is visualized as below:\nint main()\n{ \n  \nint a, b, c;\na = b + c;\n}\n\nExample 2:\nInput: source = [\"a/*comment\", \"line\", \"more_comment*/b\"]\nOutput: [\"ab\"]\nExplanation: The original source string is \"a/*comment\\nline\\nmore_comment*/b\", where we have bolded the newline characters.  After deletion, the implicit newline characters are deleted, leaving the string \"ab\", which when delimited by newline characters becomes [\"ab\"].\n\n\u00a0\nConstraints:\n\n1 <= source.length <= 100\n0 <= source[i].length <= 80\nsource[i] consists of printable ASCII characters.\nEvery open block comment is eventually closed.\nThere are no single-quote or\u00a0double-quote in the input.\n\n"], "724. Find Pivot Index": ["https://leetcode.com/problems/find-pivot-index", "Given an array of integers nums, calculate the pivot index of this array.\nThe pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right.\nIf the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array.\nReturn the leftmost pivot index. If no such index exists, return -1.\n\u00a0\nExample 1:\nInput: nums = [1,7,3,6,5,6]\nOutput: 3\nExplanation:\nThe pivot index is 3.\nLeft sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11\nRight sum = nums[4] + nums[5] = 5 + 6 = 11\n\nExample 2:\nInput: nums = [1,2,3]\nOutput: -1\nExplanation:\nThere is no index that satisfies the conditions in the problem statement.\nExample 3:\nInput: nums = [2,1,-1]\nOutput: 0\nExplanation:\nThe pivot index is 0.\nLeft sum = 0 (no elements to the left of index 0)\nRight sum = nums[1] + nums[2] = 1 + -1 = 0\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-1000 <= nums[i] <= 1000\n\n\u00a0\nNote: This question is the same as\u00a01991:\u00a0https://leetcode.com/problems/find-the-middle-index-in-array/\n"], "725. Split Linked List in Parts": ["https://leetcode.com/problems/split-linked-list-in-parts", "Given the head of a singly linked list and an integer k, split the linked list into k consecutive linked list parts.\nThe length of each part should be as equal as possible: no two parts should have a size differing by more than one. This may lead to some parts being null.\nThe parts should be in the order of occurrence in the input list, and parts occurring earlier should always have a size greater than or equal to parts occurring later.\nReturn an array of the k parts.\n\u00a0\nExample 1:\n\nInput: head = [1,2,3], k = 5\nOutput: [[1],[2],[3],[],[]]\nExplanation:\nThe first element output[0] has output[0].val = 1, output[0].next = null.\nThe last element output[4] is null, but its string representation as a ListNode is [].\n\nExample 2:\n\nInput: head = [1,2,3,4,5,6,7,8,9,10], k = 3\nOutput: [[1,2,3,4],[5,6,7],[8,9,10]]\nExplanation:\nThe input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is in the range [0, 1000].\n0 <= Node.val <= 1000\n1 <= k <= 50\n\n"], "726. Number of Atoms": ["https://leetcode.com/problems/number-of-atoms", "Given a string formula representing a chemical formula, return the count of each atom.\nThe atomic element always starts with an uppercase character, then zero or more lowercase letters, representing the name.\nOne or more digits representing that element's count may follow if the count is greater than 1. If the count is 1, no digits will follow.\n\nFor example, \"H2O\" and \"H2O2\" are possible, but \"H1O2\" is impossible.\n\nTwo formulas are concatenated together to produce another formula.\n\nFor example, \"H2O2He3Mg4\" is also a formula.\n\nA formula placed in parentheses, and a count (optionally added) is also a formula.\n\nFor example, \"(H2O2)\" and \"(H2O2)3\" are formulas.\n\nReturn the count of all elements as a string in the following form: the first name (in sorted order), followed by its count (if that count is more than 1), followed by the second name (in sorted order), followed by its count (if that count is more than 1), and so on.\nThe test cases are generated so that all the values in the output fit in a 32-bit integer.\n\u00a0\nExample 1:\nInput: formula = \"H2O\"\nOutput: \"H2O\"\nExplanation: The count of elements are {'H': 2, 'O': 1}.\n\nExample 2:\nInput: formula = \"Mg(OH)2\"\nOutput: \"H2MgO2\"\nExplanation: The count of elements are {'H': 2, 'Mg': 1, 'O': 2}.\n\nExample 3:\nInput: formula = \"K4(ON(SO3)2)2\"\nOutput: \"K4N2O14S4\"\nExplanation: The count of elements are {'K': 4, 'N': 2, 'O': 14, 'S': 4}.\n\n\u00a0\nConstraints:\n\n1 <= formula.length <= 1000\nformula consists of English letters, digits, '(', and ')'.\nformula is always valid.\n\n"], "728. Self Dividing Numbers": ["https://leetcode.com/problems/self-dividing-numbers", "A self-dividing number is a number that is divisible by every digit it contains.\n\nFor example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.\n\nA self-dividing number is not allowed to contain the digit zero.\nGiven two integers left and right, return a list of all the self-dividing numbers in the range [left, right].\n\u00a0\nExample 1:\nInput: left = 1, right = 22\nOutput: [1,2,3,4,5,6,7,8,9,11,12,15,22]\nExample 2:\nInput: left = 47, right = 85\nOutput: [48,55,66,77]\n\n\u00a0\nConstraints:\n\n1 <= left <= right <= 104\n\n"], "729. My Calendar I": ["https://leetcode.com/problems/my-calendar-i", "You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a double booking.\nA double booking happens when two events have some non-empty intersection (i.e., some moment is common to both events.).\nThe event can be represented as a pair of integers start and end that represents a booking on the half-open interval [start, end), the range of real numbers x such that start <= x < end.\nImplement the MyCalendar class:\n\nMyCalendar() Initializes the calendar object.\nboolean book(int start, int end) Returns true if the event can be added to the calendar successfully without causing a double booking. Otherwise, return false and do not add the event to the calendar.\n\n\u00a0\nExample 1:\nInput\n[\"MyCalendar\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [15, 25], [20, 30]]\nOutput\n[null, true, false, true]\n\nExplanation\nMyCalendar myCalendar = new MyCalendar();\nmyCalendar.book(10, 20); // return True\nmyCalendar.book(15, 25); // return False, It can not be booked because time 15 is already booked by another event.\nmyCalendar.book(20, 30); // return True, The event can be booked, as the first event takes every time less than 20, but not including 20.\n\u00a0\nConstraints:\n\n0 <= start < end <= 109\nAt most 1000 calls will be made to book.\n\n"], "730. Count Different Palindromic Subsequences": ["https://leetcode.com/problems/count-different-palindromic-subsequences", "Given a string s, return the number of different non-empty palindromic subsequences in s. Since the answer may be very large, return it modulo 109 + 7.\nA subsequence of a string is obtained by deleting zero or more characters from the string.\nA sequence is palindromic if it is equal to the sequence reversed.\nTwo sequences a1, a2, ... and b1, b2, ... are different if there is some i for which ai != bi.\n\u00a0\nExample 1:\nInput: s = \"bccb\"\nOutput: 6\nExplanation: The 6 different non-empty palindromic subsequences are 'b', 'c', 'bb', 'cc', 'bcb', 'bccb'.\nNote that 'bcb' is counted only once, even though it occurs twice.\n\nExample 2:\nInput: s = \"abcdabcdabcdabcdabcdabcdabcdabcddcbadcbadcbadcbadcbadcbadcbadcba\"\nOutput: 104860361\nExplanation: There are 3104860382 different non-empty palindromic subsequences, which is 104860361 modulo 109 + 7.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\ns[i] is either 'a', 'b', 'c', or 'd'.\n\n"], "731. My Calendar II": ["https://leetcode.com/problems/my-calendar-ii", "You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a triple booking.\nA triple booking happens when three events have some non-empty intersection (i.e., some moment is common to all the three events.).\nThe event can be represented as a pair of integers start and end that represents a booking on the half-open interval [start, end), the range of real numbers x such that start <= x < end.\nImplement the MyCalendarTwo class:\n\nMyCalendarTwo() Initializes the calendar object.\nboolean book(int start, int end) Returns true if the event can be added to the calendar successfully without causing a triple booking. Otherwise, return false and do not add the event to the calendar.\n\n\u00a0\nExample 1:\nInput\n[\"MyCalendarTwo\", \"book\", \"book\", \"book\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [50, 60], [10, 40], [5, 15], [5, 10], [25, 55]]\nOutput\n[null, true, true, true, false, true, true]\n\nExplanation\nMyCalendarTwo myCalendarTwo = new MyCalendarTwo();\nmyCalendarTwo.book(10, 20); // return True, The event can be booked. \nmyCalendarTwo.book(50, 60); // return True, The event can be booked. \nmyCalendarTwo.book(10, 40); // return True, The event can be double booked. \nmyCalendarTwo.book(5, 15);  // return False, The event cannot be booked, because it would result in a triple booking.\nmyCalendarTwo.book(5, 10); // return True, The event can be booked, as it does not use time 10 which is already double booked.\nmyCalendarTwo.book(25, 55); // return True, The event can be booked, as the time in [25, 40) will be double booked with the third event, the time [40, 50) will be single booked, and the time [50, 55) will be double booked with the second event.\n\n\u00a0\nConstraints:\n\n0 <= start < end <= 109\nAt most 1000 calls will be made to book.\n\n"], "732. My Calendar III": ["https://leetcode.com/problems/my-calendar-iii", "A k-booking happens when k events have some non-empty intersection (i.e., there is some time that is common to all k events.)\nYou are given some events [start, end), after each given event, return an integer k representing the maximum k-booking between all the previous events.\nImplement the MyCalendarThree class:\n\nMyCalendarThree() Initializes the object.\nint book(int start, int end) Returns an integer k representing the largest integer such that there exists a k-booking in the calendar.\n\n\u00a0\nExample 1:\nInput\n[\"MyCalendarThree\", \"book\", \"book\", \"book\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [50, 60], [10, 40], [5, 15], [5, 10], [25, 55]]\nOutput\n[null, 1, 1, 2, 3, 3, 3]\n\nExplanation\nMyCalendarThree myCalendarThree = new MyCalendarThree();\nmyCalendarThree.book(10, 20); // return 1, The first event can be booked and is disjoint, so the maximum k-booking is a 1-booking.\nmyCalendarThree.book(50, 60); // return 1, The second event can be booked and is disjoint, so the maximum k-booking is a 1-booking.\nmyCalendarThree.book(10, 40); // return 2, The third event [10, 40) intersects the first event, and the maximum k-booking is a 2-booking.\nmyCalendarThree.book(5, 15); // return 3, The remaining events cause the maximum K-booking to be only a 3-booking.\nmyCalendarThree.book(5, 10); // return 3\nmyCalendarThree.book(25, 55); // return 3\n\n\u00a0\nConstraints:\n\n0 <= start < end <= 109\nAt most 400 calls will be made to book.\n\n"], "733. Flood Fill": ["https://leetcode.com/problems/flood-fill", "An image is represented by an m x n integer grid image where image[i][j] represents the pixel value of the image.\nYou are also given three integers sr, sc, and newColor. You should perform a flood fill on the image starting from the pixel image[sr][sc].\nTo perform a flood fill, consider the starting pixel, plus any pixels connected 4-directionally to the starting pixel of the same color as the starting pixel, plus any pixels connected 4-directionally to those pixels (also with the same color), and so on. Replace the color of all of the aforementioned pixels with newColor.\nReturn the modified image after performing the flood fill.\n\u00a0\nExample 1:\n\nInput: image = [[1,1,1],[1,1,0],[1,0,1]], sr = 1, sc = 1, newColor = 2\nOutput: [[2,2,2],[2,2,0],[2,0,1]]\nExplanation: From the center of the image with position (sr, sc) = (1, 1) (i.e., the red pixel), all pixels connected by a path of the same color as the starting pixel (i.e., the blue pixels) are colored with the new color.\nNote the bottom corner is not colored 2, because it is not 4-directionally connected to the starting pixel.\n\nExample 2:\nInput: image = [[0,0,0],[0,0,0]], sr = 0, sc = 0, newColor = 2\nOutput: [[2,2,2],[2,2,2]]\n\n\u00a0\nConstraints:\n\nm == image.length\nn == image[i].length\n1 <= m, n <= 50\n0 <= image[i][j], newColor < 216\n0 <= sr <\u00a0m\n0 <= sc <\u00a0n\n\n"], "735. Asteroid Collision": ["https://leetcode.com/problems/asteroid-collision", "We are given an array asteroids of integers representing asteroids in a row.\nFor each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed.\nFind out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.\n\u00a0\nExample 1:\nInput: asteroids = [5,10,-5]\nOutput: [5,10]\nExplanation: The 10 and -5 collide resulting in 10. The 5 and 10 never collide.\n\nExample 2:\nInput: asteroids = [8,-8]\nOutput: []\nExplanation: The 8 and -8 collide exploding each other.\n\nExample 3:\nInput: asteroids = [10,2,-5]\nOutput: [10]\nExplanation: The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.\n\n\u00a0\nConstraints:\n\n2 <= asteroids.length <= 104\n-1000 <= asteroids[i] <= 1000\nasteroids[i] != 0\n\n"], "736. Parse Lisp Expression": ["https://leetcode.com/problems/parse-lisp-expression", "You are given a string expression representing a Lisp-like expression to return the integer value of.\nThe syntax for these expressions is given as follows.\n\nAn expression is either an integer, let expression, add expression, mult expression, or an assigned variable. Expressions always evaluate to a single integer.\n(An integer could be positive or negative.)\nA let expression takes the form \"(let v1 e1 v2 e2 ... vn en expr)\", where let is always the string \"let\", then there are one or more pairs of alternating variables and expressions, meaning that the first variable v1 is assigned the value of the expression e1, the second variable v2 is assigned the value of the expression e2, and so on sequentially; and then the value of this let expression is the value of the expression expr.\nAn add expression takes the form \"(add e1 e2)\" where add is always the string \"add\", there are always two expressions e1, e2 and the result is the addition of the evaluation of e1 and the evaluation of e2.\nA mult expression takes the form \"(mult e1 e2)\" where mult is always the string \"mult\", there are always two expressions e1, e2 and the result is the multiplication of the evaluation of e1 and the evaluation of e2.\nFor this question, we will use a smaller subset of variable names. A variable starts with a lowercase letter, then zero or more lowercase letters or digits. Additionally, for your convenience, the names \"add\", \"let\", and \"mult\" are protected and will never be used as variable names.\nFinally, there is the concept of scope. When an expression of a variable name is evaluated, within the context of that evaluation, the innermost scope (in terms of parentheses) is checked first for the value of that variable, and then outer scopes are checked sequentially. It is guaranteed that every expression is legal. Please see the examples for more details on the scope.\n\n\u00a0\nExample 1:\nInput: expression = \"(let x 2 (mult x (let x 3 y 4 (add x y))))\"\nOutput: 14\nExplanation: In the expression (add x y), when checking for the value of the variable x,\nwe check from the innermost scope to the outermost in the context of the variable we are trying to evaluate.\nSince x = 3 is found first, the value of x is 3.\n\nExample 2:\nInput: expression = \"(let x 3 x 2 x)\"\nOutput: 2\nExplanation: Assignment in let statements is processed sequentially.\n\nExample 3:\nInput: expression = \"(let x 1 y 2 x (add x y) (add x y))\"\nOutput: 5\nExplanation: The first (add x y) evaluates as 3, and is assigned to x.\nThe second (add x y) evaluates as 3+2 = 5.\n\n\u00a0\nConstraints:\n\n1 <= expression.length <= 2000\nThere are no leading or trailing spaces in expression.\nAll tokens are separated by a single space in expression.\nThe answer and all intermediate calculations of that answer are guaranteed to fit in a 32-bit integer.\nThe expression is guaranteed to be legal and evaluate to an integer.\n\n"], "738. Monotone Increasing Digits": ["https://leetcode.com/problems/monotone-increasing-digits", "An integer has monotone increasing digits if and only if each pair of adjacent digits x and y satisfy x <= y.\nGiven an integer n, return the largest number that is less than or equal to n with monotone increasing digits.\n\u00a0\nExample 1:\nInput: n = 10\nOutput: 9\n\nExample 2:\nInput: n = 1234\nOutput: 1234\n\nExample 3:\nInput: n = 332\nOutput: 299\n\n\u00a0\nConstraints:\n\n0 <= n <= 109\n\n"], "739. Daily Temperatures": ["https://leetcode.com/problems/daily-temperatures", "Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.\n\u00a0\nExample 1:\nInput: temperatures = [73,74,75,71,69,72,76,73]\nOutput: [1,1,4,2,1,1,0,0]\nExample 2:\nInput: temperatures = [30,40,50,60]\nOutput: [1,1,1,0]\nExample 3:\nInput: temperatures = [30,60,90]\nOutput: [1,1,0]\n\n\u00a0\nConstraints:\n\n1 <=\u00a0temperatures.length <= 105\n30 <=\u00a0temperatures[i] <= 100\n\n"], "740. Delete and Earn": ["https://leetcode.com/problems/delete-and-earn", "You are given an integer array nums. You want to maximize the number of points you get by performing the following operation any number of times:\n\nPick any nums[i] and delete it to earn nums[i] points. Afterwards, you must delete every element equal to nums[i] - 1 and every element equal to nums[i] + 1.\n\nReturn the maximum number of points you can earn by applying the above operation some number of times.\n\u00a0\nExample 1:\nInput: nums = [3,4,2]\nOutput: 6\nExplanation: You can perform the following operations:\n- Delete 4 to earn 4 points. Consequently, 3 is also deleted. nums = [2].\n- Delete 2 to earn 2 points. nums = [].\nYou earn a total of 6 points.\n\nExample 2:\nInput: nums = [2,2,3,3,3,4]\nOutput: 9\nExplanation: You can perform the following operations:\n- Delete a 3 to earn 3 points. All 2's and 4's are also deleted. nums = [3,3].\n- Delete a 3 again to earn 3 points. nums = [3].\n- Delete a 3 once more to earn 3 points. nums = [].\nYou earn a total of 9 points.\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2 * 104\n1 <= nums[i] <= 104\n\n"], "741. Cherry Pickup": ["https://leetcode.com/problems/cherry-pickup", "You are given an n x n grid representing a field of cherries, each cell is one of three possible integers.\n\n0 means the cell is empty, so you can pass through,\n1 means the cell contains a cherry that you can pick up and pass through, or\n-1 means the cell contains a thorn that blocks your way.\n\nReturn the maximum number of cherries you can collect by following the rules below:\n\nStarting at the position (0, 0) and reaching (n - 1, n - 1) by moving right or down through valid path cells (cells with value 0 or 1).\nAfter reaching (n - 1, n - 1), returning to (0, 0) by moving left or up through valid path cells.\nWhen passing through a path cell containing a cherry, you pick it up, and the cell becomes an empty cell 0.\nIf there is no valid path between (0, 0) and (n - 1, n - 1), then no cherries can be collected.\n\n\u00a0\nExample 1:\n\nInput: grid = [[0,1,-1],[1,0,-1],[1,1,1]]\nOutput: 5\nExplanation: The player started at (0, 0) and went down, down, right right to reach (2, 2).\n4 cherries were picked up during this single trip, and the matrix becomes [[0,1,-1],[0,0,-1],[0,0,0]].\nThen, the player went left, up, up, left to return home, picking up one more cherry.\nThe total number of cherries picked up is 5, and this is the maximum possible.\n\nExample 2:\nInput: grid = [[1,1,-1],[1,-1,1],[-1,1,1]]\nOutput: 0\n\n\u00a0\nConstraints:\n\nn == grid.length\nn == grid[i].length\n1 <= n <= 50\ngrid[i][j] is -1, 0, or 1.\ngrid[0][0] != -1\ngrid[n - 1][n - 1] != -1\n\n"], "743. Network Delay Time": ["https://leetcode.com/problems/network-delay-time", "You are given a network of n nodes, labeled from 1 to n. You are also given times, a list of travel times as directed edges times[i] = (ui, vi, wi), where ui is the source node, vi is the target node, and wi is the time it takes for a signal to travel from source to target.\nWe will send a signal from a given node k. Return the time it takes for all the n nodes to receive the signal. If it is impossible for all the n nodes to receive the signal, return -1.\n\u00a0\nExample 1:\n\nInput: times = [[2,1,1],[2,3,1],[3,4,1]], n = 4, k = 2\nOutput: 2\n\nExample 2:\nInput: times = [[1,2,1]], n = 2, k = 1\nOutput: 1\n\nExample 3:\nInput: times = [[1,2,1]], n = 2, k = 2\nOutput: -1\n\n\u00a0\nConstraints:\n\n1 <= k <= n <= 100\n1 <= times.length <= 6000\ntimes[i].length == 3\n1 <= ui, vi <= n\nui != vi\n0 <= wi <= 100\nAll the pairs (ui, vi) are unique. (i.e., no multiple edges.)\n\n"], "744. Find Smallest Letter Greater Than Target": ["https://leetcode.com/problems/find-smallest-letter-greater-than-target", "Given a characters array letters that is sorted in non-decreasing order and a character target, return the smallest character in the array that is larger than target.\nNote that the letters wrap around.\n\nFor example, if target == 'z' and letters == ['a', 'b'], the answer is 'a'.\n\n\u00a0\nExample 1:\nInput: letters = [\"c\",\"f\",\"j\"], target = \"a\"\nOutput: \"c\"\n\nExample 2:\nInput: letters = [\"c\",\"f\",\"j\"], target = \"c\"\nOutput: \"f\"\n\nExample 3:\nInput: letters = [\"c\",\"f\",\"j\"], target = \"d\"\nOutput: \"f\"\n\n\u00a0\nConstraints:\n\n2 <= letters.length <= 104\nletters[i] is a lowercase English letter.\nletters is sorted in non-decreasing order.\nletters contains at least two different characters.\ntarget is a lowercase English letter.\n\n"], "745. Prefix and Suffix Search": ["https://leetcode.com/problems/prefix-and-suffix-search", "Design a special dictionary with some words that searchs the words in it by a prefix and a suffix.\nImplement the WordFilter class:\n\nWordFilter(string[] words) Initializes the object with the words in the dictionary.\nf(string prefix, string suffix) Returns the index of the word in the dictionary, which has the prefix prefix and the suffix suffix. If there is more than one valid index, return the largest of them. If there is no such word in the dictionary, return -1.\n\n\u00a0\nExample 1:\nInput\n[\"WordFilter\", \"f\"]\n[[[\"apple\"]], [\"a\", \"e\"]]\nOutput\n[null, 0]\n\nExplanation\nWordFilter wordFilter = new WordFilter([\"apple\"]);\nwordFilter.f(\"a\", \"e\"); // return 0, because the word at index 0 has prefix = \"a\" and suffix = 'e\".\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 15000\n1 <= words[i].length <= 10\n1 <= prefix.length, suffix.length <= 10\nwords[i], prefix and suffix consist of lower-case English letters only.\nAt most 15000 calls will be made to the function f.\n\n"], "746. Min Cost Climbing Stairs": ["https://leetcode.com/problems/min-cost-climbing-stairs", "You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps.\nYou can either start from the step with index 0, or the step with index 1.\nReturn the minimum cost to reach the top of the floor.\n\u00a0\nExample 1:\nInput: cost = [10,15,20]\nOutput: 15\nExplanation: You will start at index 1.\n- Pay 15 and climb two steps to reach the top.\nThe total cost is 15.\n\nExample 2:\nInput: cost = [1,100,1,1,1,100,1,1,100,1]\nOutput: 6\nExplanation: You will start at index 0.\n- Pay 1 and climb two steps to reach index 2.\n- Pay 1 and climb two steps to reach index 4.\n- Pay 1 and climb two steps to reach index 6.\n- Pay 1 and climb one step to reach index 7.\n- Pay 1 and climb two steps to reach index 9.\n- Pay 1 and climb one step to reach the top.\nThe total cost is 6.\n\n\u00a0\nConstraints:\n\n2 <= cost.length <= 1000\n0 <= cost[i] <= 999\n\n"], "747. Largest Number At Least Twice of Others": ["https://leetcode.com/problems/largest-number-at-least-twice-of-others", "You are given an integer array nums where the largest integer is unique.\nDetermine whether the largest element in the array is at least twice as much as every other number in the array. If it is, return the index of the largest element, or return -1 otherwise.\n\u00a0\nExample 1:\nInput: nums = [3,6,1,0]\nOutput: 1\nExplanation: 6 is the largest integer.\nFor every other number in the array x, 6 is at least twice as big as x.\nThe index of value 6 is 1, so we return 1.\n\nExample 2:\nInput: nums = [1,2,3,4]\nOutput: -1\nExplanation: 4 is less than twice the value of 3, so we return -1.\nExample 3:\nInput: nums = [1]\nOutput: 0\nExplanation: 1 is trivially at least twice the value as any other number because there are no other numbers.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 50\n0 <= nums[i] <= 100\nThe largest element in nums is unique.\n\n"], "748. Shortest Completing Word": ["https://leetcode.com/problems/shortest-completing-word", "Given a string licensePlate and an array of strings words, find the shortest completing word in words.\nA completing word is a word that contains all the letters in licensePlate. Ignore numbers and spaces in licensePlate, and treat letters as case insensitive. If a letter appears more than once in licensePlate, then it must appear in the word the same number of times or more.\nFor example, if licensePlate = \"aBc 12c\", then it contains letters 'a', 'b' (ignoring case), and 'c' twice. Possible completing words are \"abccdef\", \"caaacab\", and \"cbca\".\nReturn the shortest completing word in words. It is guaranteed an answer exists. If there are multiple shortest completing words, return the first one that occurs in words.\n\u00a0\nExample 1:\nInput: licensePlate = \"1s3 PSt\", words = [\"step\",\"steps\",\"stripe\",\"stepple\"]\nOutput: \"steps\"\nExplanation: licensePlate contains letters 's', 'p', 's' (ignoring case), and 't'.\n\"step\" contains 't' and 'p', but only contains 1 's'.\n\"steps\" contains 't', 'p', and both 's' characters.\n\"stripe\" is missing an 's'.\n\"stepple\" is missing an 's'.\nSince \"steps\" is the only word containing all the letters, that is the answer.\n\nExample 2:\nInput: licensePlate = \"1s3 456\", words = [\"looks\",\"pest\",\"stew\",\"show\"]\nOutput: \"pest\"\nExplanation: licensePlate only contains the letter 's'. All the words contain 's', but among these \"pest\", \"stew\", and \"show\" are shortest. The answer is \"pest\" because it is the word that appears earliest of the 3.\n\n\u00a0\nConstraints:\n\n1 <= licensePlate.length <= 7\nlicensePlate contains digits, letters (uppercase or lowercase), or space ' '.\n1 <= words.length <= 1000\n1 <= words[i].length <= 15\nwords[i] consists of lower case English letters.\n\n"], "749. Contain Virus": ["https://leetcode.com/problems/contain-virus", "A virus is spreading rapidly, and your task is to quarantine the infected area by installing walls.\nThe world is modeled as an m x n binary grid isInfected, where isInfected[i][j] == 0 represents uninfected cells, and isInfected[i][j] == 1 represents cells contaminated with the virus. A wall (and only one wall) can be installed between any two 4-directionally adjacent cells, on the shared boundary.\nEvery night, the virus spreads to all neighboring cells in all four directions unless blocked by a wall. Resources are limited. Each day, you can install walls around only one region (i.e., the affected area (continuous block of infected cells) that threatens the most uninfected cells the following night). There will never be a tie.\nReturn the number of walls used to quarantine all the infected regions. If the world will become fully infected, return the number of walls used.\n\u00a0\nExample 1:\n\nInput: isInfected = [[0,1,0,0,0,0,0,1],[0,1,0,0,0,0,0,1],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0]]\nOutput: 10\nExplanation: There are 2 contaminated regions.\nOn the first day, add 5 walls to quarantine the viral region on the left. The board after the virus spreads is:\n\nOn the second day, add 5 walls to quarantine the viral region on the right. The virus is fully contained.\n\n\nExample 2:\n\nInput: isInfected = [[1,1,1],[1,0,1],[1,1,1]]\nOutput: 4\nExplanation: Even though there is only one cell saved, there are 4 walls built.\nNotice that walls are only built on the shared boundary of two different cells.\n\nExample 3:\nInput: isInfected = [[1,1,1,0,0,0,0,0,0],[1,0,1,0,1,1,1,1,1],[1,1,1,0,0,0,0,0,0]]\nOutput: 13\nExplanation: The region on the left only builds two new walls.\n\n\u00a0\nConstraints:\n\nm ==\u00a0isInfected.length\nn ==\u00a0isInfected[i].length\n1 <= m, n <= 50\nisInfected[i][j] is either 0 or 1.\nThere is always a contiguous viral region throughout the described process that will infect strictly more uncontaminated squares in the next round.\n\n"], "752. Open the Lock": ["https://leetcode.com/problems/open-the-lock", "You have a lock in front of you with 4 circular wheels. Each wheel has 10 slots: '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'. The wheels can rotate freely and wrap around: for example we can turn '9' to be '0', or '0' to be '9'. Each move consists of turning one wheel one slot.\nThe lock initially starts at '0000', a string representing the state of the 4 wheels.\nYou are given a list of deadends dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.\nGiven a target representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.\n\u00a0\nExample 1:\nInput: deadends = [\"0201\",\"0101\",\"0102\",\"1212\",\"2002\"], target = \"0202\"\nOutput: 6\nExplanation: \nA sequence of valid moves would be \"0000\" -> \"1000\" -> \"1100\" -> \"1200\" -> \"1201\" -> \"1202\" -> \"0202\".\nNote that a sequence like \"0000\" -> \"0001\" -> \"0002\" -> \"0102\" -> \"0202\" would be invalid,\nbecause the wheels of the lock become stuck after the display becomes the dead end \"0102\".\n\nExample 2:\nInput: deadends = [\"8888\"], target = \"0009\"\nOutput: 1\nExplanation: We can turn the last wheel in reverse to move from \"0000\" -> \"0009\".\n\nExample 3:\nInput: deadends = [\"8887\",\"8889\",\"8878\",\"8898\",\"8788\",\"8988\",\"7888\",\"9888\"], target = \"8888\"\nOutput: -1\nExplanation: We cannot reach the target without getting stuck.\n\n\u00a0\nConstraints:\n\n1 <= deadends.length <= 500\ndeadends[i].length == 4\ntarget.length == 4\ntarget will not be in the list deadends.\ntarget and deadends[i] consist of digits only.\n\n"], "753. Cracking the Safe": ["https://leetcode.com/problems/cracking-the-safe", "There is a safe protected by a password. The password is a sequence of n digits where each digit can be in the range [0, k - 1].\nThe safe has a peculiar way of checking the password. When you enter in a sequence, it checks the most recent n digits that were entered each time you type a digit.\n\nFor example, the correct password is \"345\" and you enter in \"012345\":\n\n\t\nAfter typing 0, the most recent 3 digits is \"0\", which is incorrect.\nAfter typing 1, the most recent 3 digits is \"01\", which is incorrect.\nAfter typing 2, the most recent 3 digits is \"012\", which is incorrect.\nAfter typing 3, the most recent 3 digits is \"123\", which is incorrect.\nAfter typing 4, the most recent 3 digits is \"234\", which is incorrect.\nAfter typing 5, the most recent 3 digits is \"345\", which is correct and the safe unlocks.\n\n\n\nReturn any string of minimum length that will unlock the safe at some point of entering it.\n\u00a0\nExample 1:\nInput: n = 1, k = 2\nOutput: \"10\"\nExplanation: The password is a single digit, so enter each digit. \"01\" would also unlock the safe.\n\nExample 2:\nInput: n = 2, k = 2\nOutput: \"01100\"\nExplanation: For each possible password:\n- \"00\" is typed in starting from the 4th digit.\n- \"01\" is typed in starting from the 1st digit.\n- \"10\" is typed in starting from the 3rd digit.\n- \"11\" is typed in starting from the 2nd digit.\nThus \"01100\" will unlock the safe. \"01100\", \"10011\", and \"11001\" would also unlock the safe.\n\n\u00a0\nConstraints:\n\n1 <= n <= 4\n1 <= k <= 10\n1 <= kn <= 4096\n\n"], "754. Reach a Number": ["https://leetcode.com/problems/reach-a-number", "You are standing at position 0 on an infinite number line. There is a destination at position target.\nYou can make some number of moves numMoves so that:\n\nOn each move, you can either go left or right.\nDuring the ith move (starting from i == 1 to i == numMoves), you take i steps in the chosen direction.\n\nGiven the integer target, return the minimum number of moves required (i.e., the minimum numMoves) to reach the destination.\n\u00a0\nExample 1:\nInput: target = 2\nOutput: 3\nExplanation:\nOn the 1st move, we step from 0 to 1 (1 step).\nOn the 2nd move, we step from 1 to -1 (2 steps).\nOn the 3rd move, we step from -1 to 2 (3 steps).\n\nExample 2:\nInput: target = 3\nOutput: 2\nExplanation:\nOn the 1st move, we step from 0 to 1 (1 step).\nOn the 2nd move, we step from 1 to 3 (2 steps).\n\n\u00a0\nConstraints:\n\n-109 <= target <= 109\ntarget != 0\n\n"], "756. Pyramid Transition Matrix": ["https://leetcode.com/problems/pyramid-transition-matrix", "You are stacking blocks to form a pyramid. Each block has a color, which is represented by a single letter. Each row of blocks contains one less block than the row beneath it and is centered on top.\nTo make the pyramid aesthetically pleasing, there are only specific triangular patterns that are allowed. A triangular pattern consists of a single block stacked on top of two blocks. The patterns are given\u00a0as a list of\u00a0three-letter strings allowed, where the first two characters of a pattern represent the left and right bottom blocks respectively, and the third character is the top block.\n\nFor example, \"ABC\" represents a triangular pattern with a 'C' block stacked on top of an 'A' (left) and 'B' (right) block. Note that this is different from \"BAC\" where 'B' is on the left bottom and 'A' is on the right bottom.\n\nYou start with a bottom row of blocks bottom, given as a single string, that you must use as the base of the pyramid.\nGiven bottom and allowed, return true if you can build the pyramid all the way to the top such that every triangular pattern in the pyramid is in allowed, or false otherwise.\n\u00a0\nExample 1:\n\nInput: bottom = \"BCD\", allowed = [\"BCC\",\"CDE\",\"CEA\",\"FFF\"]\nOutput: true\nExplanation: The allowed triangular patterns are shown on the right.\nStarting from the bottom (level 3), we can build \"CE\" on level 2 and then build \"E\" on level 1.\nThere are three triangular patterns in the pyramid, which are \"BCC\", \"CDE\", and \"CEA\". All are allowed.\n\nExample 2:\n\nInput: bottom = \"AAAA\", allowed = [\"AAB\",\"AAC\",\"BCD\",\"BBE\",\"DEF\"]\nOutput: false\nExplanation: The allowed triangular patterns are shown on the right.\nStarting from the bottom (level 4), there are multiple ways to build level 3, but trying all the possibilites, you will get always stuck before building level 1.\n\n\u00a0\nConstraints:\n\n2 <= bottom.length <= 6\n0 <= allowed.length <= 216\nallowed[i].length == 3\nThe letters in all input strings are from the set {'A', 'B', 'C', 'D', 'E', 'F'}.\nAll the values of allowed are unique.\n\n"], "757. Set Intersection Size At Least Two": ["https://leetcode.com/problems/set-intersection-size-at-least-two", "An integer interval [a, b] (for integers a < b) is a set of all consecutive integers from a to b, including a and b.\nFind the minimum size of a set S such that for every integer interval A in intervals, the intersection of S with A has a size of at least two.\n\u00a0\nExample 1:\nInput: intervals = [[1,3],[1,4],[2,5],[3,5]]\nOutput: 3\nExplanation: Consider the set S = {2, 3, 4}.  For each interval, there are at least 2 elements from S in the interval.\nAlso, there isn't a smaller size set that fulfills the above condition.\nThus, we output the size of this set, which is 3.\n\nExample 2:\nInput: intervals = [[1,2],[2,3],[2,4],[4,5]]\nOutput: 5\nExplanation: An example of a minimum sized set is {1, 2, 3, 4, 5}.\n\n\u00a0\nConstraints:\n\n1 <= intervals.length <= 3000\nintervals[i].length == 2\n0 <= ai <\u00a0bi <= 108\n\n"], "761. Special Binary String": ["https://leetcode.com/problems/special-binary-string", "Special binary strings are binary strings with the following two properties:\n\nThe number of 0's is equal to the number of 1's.\nEvery prefix of the binary string has at least as many 1's as 0's.\n\nYou are given a special binary string s.\nA move consists of choosing two consecutive, non-empty, special substrings of s, and swapping them. Two strings are consecutive if the last character of the first string is exactly one index before the first character of the second string.\nReturn the lexicographically largest resulting string possible after applying the mentioned operations on the string.\n\u00a0\nExample 1:\nInput: s = \"11011000\"\nOutput: \"11100100\"\nExplanation: The strings \"10\" [occuring at s[1]] and \"1100\" [at s[3]] are swapped.\nThis is the lexicographically largest string possible after some number of swaps.\n\nExample 2:\nInput: s = \"10\"\nOutput: \"10\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 50\ns[i] is either '0' or '1'.\ns is a special binary string.\n\n"], "762. Prime Number of Set Bits in Binary Representation": ["https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation", "Given two integers left and right, return the count of numbers in the inclusive range [left, right] having a prime number of set bits in their binary representation.\nRecall that the number of set bits an integer has is the number of 1's present when written in binary.\n\nFor example, 21 written in binary is 10101, which has 3 set bits.\n\n\u00a0\nExample 1:\nInput: left = 6, right = 10\nOutput: 4\nExplanation:\n6  -> 110 (2 set bits, 2 is prime)\n7  -> 111 (3 set bits, 3 is prime)\n8  -> 1000 (1 set bit, 1 is not prime)\n9  -> 1001 (2 set bits, 2 is prime)\n10 -> 1010 (2 set bits, 2 is prime)\n4 numbers have a prime number of set bits.\n\nExample 2:\nInput: left = 10, right = 15\nOutput: 5\nExplanation:\n10 -> 1010 (2 set bits, 2 is prime)\n11 -> 1011 (3 set bits, 3 is prime)\n12 -> 1100 (2 set bits, 2 is prime)\n13 -> 1101 (3 set bits, 3 is prime)\n14 -> 1110 (3 set bits, 3 is prime)\n15 -> 1111 (4 set bits, 4 is not prime)\n5 numbers have a prime number of set bits.\n\n\u00a0\nConstraints:\n\n1 <= left <= right <= 106\n0 <= right - left <= 104\n\n"], "763. Partition Labels": ["https://leetcode.com/problems/partition-labels", "You are given a string s. We want to partition the string into as many parts as possible so that each letter appears in at most one part.\nNote that the partition is done so that after concatenating all the parts in order, the resultant string should be s.\nReturn a list of integers representing the size of these parts.\n\u00a0\nExample 1:\nInput: s = \"ababcbacadefegdehijhklij\"\nOutput: [9,7,8]\nExplanation:\nThe partition is \"ababcbaca\", \"defegde\", \"hijhklij\".\nThis is a partition so that each letter appears in at most one part.\nA partition like \"ababcbacadefegde\", \"hijhklij\" is incorrect, because it splits s into less parts.\n\nExample 2:\nInput: s = \"eccbbbbdec\"\nOutput: [10]\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 500\ns consists of lowercase English letters.\n\n"], "764. Largest Plus Sign": ["https://leetcode.com/problems/largest-plus-sign", "You are given an integer n. You have an n x n binary grid grid with all values initially 1's except for some indices given in the array mines. The ith element of the array mines is defined as mines[i] = [xi, yi] where grid[xi][yi] == 0.\nReturn the order of the largest axis-aligned plus sign of 1's contained in grid. If there is none, return 0.\nAn axis-aligned plus sign of 1's of order k has some center grid[r][c] == 1 along with four arms of length k - 1 going up, down, left, and right, and made of 1's. Note that there could be 0's or 1's beyond the arms of the plus sign, only the relevant area of the plus sign is checked for 1's.\n\u00a0\nExample 1:\n\nInput: n = 5, mines = [[4,2]]\nOutput: 2\nExplanation: In the above grid, the largest plus sign can only be of order 2. One of them is shown.\n\nExample 2:\n\nInput: n = 1, mines = [[0,0]]\nOutput: 0\nExplanation: There is no plus sign, so return 0.\n\n\u00a0\nConstraints:\n\n1 <= n <= 500\n1 <= mines.length <= 5000\n0 <= xi, yi < n\nAll the pairs (xi, yi) are unique.\n\n"], "765. Couples Holding Hands": ["https://leetcode.com/problems/couples-holding-hands", "There are n couples sitting in 2n seats arranged in a row and want to hold hands.\nThe people and seats are represented by an integer array row where row[i] is the ID of the person sitting in the ith seat. The couples are numbered in order, the first couple being (0, 1), the second couple being (2, 3), and so on with the last couple being (2n - 2, 2n - 1).\nReturn the minimum number of swaps so that every couple is sitting side by side. A swap consists of choosing any two people, then they stand up and switch seats.\n\u00a0\nExample 1:\nInput: row = [0,2,1,3]\nOutput: 1\nExplanation: We only need to swap the second (row[1]) and third (row[2]) person.\n\nExample 2:\nInput: row = [3,2,0,1]\nOutput: 0\nExplanation: All couples are already seated side by side.\n\n\u00a0\nConstraints:\n\n2n == row.length\n2 <= n <= 30\nn is even.\n0 <= row[i] < 2n\nAll the elements of row are unique.\n\n"], "766. Toeplitz Matrix": ["https://leetcode.com/problems/toeplitz-matrix", "Given an m x n matrix, return\u00a0true\u00a0if the matrix is Toeplitz. Otherwise, return false.\nA matrix is Toeplitz if every diagonal from top-left to bottom-right has the same elements.\n\u00a0\nExample 1:\n\nInput: matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]\nOutput: true\nExplanation:\nIn the above grid, the\u00a0diagonals are:\n\"[9]\", \"[5, 5]\", \"[1, 1, 1]\", \"[2, 2, 2]\", \"[3, 3]\", \"[4]\".\nIn each diagonal all elements are the same, so the answer is True.\n\nExample 2:\n\nInput: matrix = [[1,2],[2,2]]\nOutput: false\nExplanation:\nThe diagonal \"[1, 2]\" has different elements.\n\n\u00a0\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 20\n0 <= matrix[i][j] <= 99\n\n\u00a0\nFollow up:\n\nWhat if the matrix is stored on disk, and the memory is limited such that you can only load at most one row of the matrix into the memory at once?\nWhat if the matrix is so large that you can only load up a partial row into the memory at once?\n\n"], "767. Reorganize String": ["https://leetcode.com/problems/reorganize-string", "Given a string s, rearrange the characters of s so that any two adjacent characters are not the same.\nReturn any possible rearrangement of s or return \"\" if not possible.\n\u00a0\nExample 1:\nInput: s = \"aab\"\nOutput: \"aba\"\nExample 2:\nInput: s = \"aaab\"\nOutput: \"\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 500\ns consists of lowercase English letters.\n\n"], "768. Max Chunks To Make Sorted II": ["https://leetcode.com/problems/max-chunks-to-make-sorted-ii", "You are given an integer array arr.\nWe split arr into some number of chunks (i.e., partitions), and individually sort each chunk. After concatenating them, the result should equal the sorted array.\nReturn the largest number of chunks we can make to sort the array.\n\u00a0\nExample 1:\nInput: arr = [5,4,3,2,1]\nOutput: 1\nExplanation:\nSplitting into two or more chunks will not return the required result.\nFor example, splitting into [5, 4], [3, 2, 1] will result in [4, 5, 1, 2, 3], which isn't sorted.\n\nExample 2:\nInput: arr = [2,1,3,4,4]\nOutput: 4\nExplanation:\nWe can split into two chunks, such as [2, 1], [3, 4, 4].\nHowever, splitting into [2, 1], [3], [4], [4] is the highest number of chunks possible.\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 2000\n0 <= arr[i] <= 108\n\n"], "769. Max Chunks To Make Sorted": ["https://leetcode.com/problems/max-chunks-to-make-sorted", "You are given an integer array arr of length n that represents a permutation of the integers in the range [0, n - 1].\nWe split arr into some number of chunks (i.e., partitions), and individually sort each chunk. After concatenating them, the result should equal the sorted array.\nReturn the largest number of chunks we can make to sort the array.\n\u00a0\nExample 1:\nInput: arr = [4,3,2,1,0]\nOutput: 1\nExplanation:\nSplitting into two or more chunks will not return the required result.\nFor example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn't sorted.\n\nExample 2:\nInput: arr = [1,0,2,3,4]\nOutput: 4\nExplanation:\nWe can split into two chunks, such as [1, 0], [2, 3, 4].\nHowever, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.\n\n\u00a0\nConstraints:\n\nn == arr.length\n1 <= n <= 10\n0 <= arr[i] < n\nAll the elements of arr are unique.\n\n"], "770. Basic Calculator IV": ["https://leetcode.com/problems/basic-calculator-iv", "Given an expression such as expression = \"e + 8 - a + 5\" and an evaluation map such as {\"e\": 1} (given in terms of evalvars = [\"e\"] and evalints = [1]), return a list of tokens representing the simplified expression, such as [\"-1*a\",\"14\"]\n\nAn expression alternates chunks and symbols, with a space separating each chunk and symbol.\nA chunk is either an expression in parentheses, a variable, or a non-negative integer.\nA variable is a string of lowercase letters (not including digits.) Note that variables can be multiple letters, and note that variables never have a leading coefficient or unary operator like \"2x\" or \"-x\".\n\nExpressions are evaluated in the usual order: brackets first, then multiplication, then addition and subtraction.\n\nFor example, expression = \"1 + 2 * 3\" has an answer of [\"7\"].\n\nThe format of the output is as follows:\n\nFor each term of free variables with a non-zero coefficient, we write the free variables within a term in sorted order lexicographically.\n\t\nFor example, we would never write a term like \"b*a*c\", only \"a*b*c\".\n\n\nTerms have degrees equal to the number of free variables being multiplied, counting multiplicity. We write the largest degree terms of our answer first, breaking ties by lexicographic order ignoring the leading coefficient of the term.\n\t\nFor example, \"a*a*b*c\" has degree 4.\n\n\nThe leading coefficient of the term is placed directly to the left with an asterisk separating it from the variables (if they exist.) A leading coefficient of 1 is still printed.\nAn example of a well-formatted answer is [\"-2*a*a*a\", \"3*a*a*b\", \"3*b*b\", \"4*a\", \"5*c\", \"-6\"].\nTerms (including constant terms) with coefficient 0 are not included.\n\t\nFor example, an expression of \"0\" has an output of [].\n\n\n\n\u00a0\nExample 1:\nInput: expression = \"e + 8 - a + 5\", evalvars = [\"e\"], evalints = [1]\nOutput: [\"-1*a\",\"14\"]\n\nExample 2:\nInput: expression = \"e - 8 + temperature - pressure\", evalvars = [\"e\", \"temperature\"], evalints = [1, 12]\nOutput: [\"-1*pressure\",\"5\"]\n\nExample 3:\nInput: expression = \"(e + 8) * (e - 8)\", evalvars = [], evalints = []\nOutput: [\"1*e*e\",\"-64\"]\n\n\u00a0\nConstraints:\n\n1 <= expression.length <= 250\nexpression consists of lowercase English letters, digits, '+', '-', '*', '(', ')', ' '.\nexpression does not contain any leading or trailing spaces.\nAll the tokens in expression are separated by a single space.\n0 <= evalvars.length <= 100\n1 <= evalvars[i].length <= 20\nevalvars[i] consists of lowercase English letters.\nevalints.length == evalvars.length\n-100 <= evalints[i] <= 100\n\n"], "771. Jewels and Stones": ["https://leetcode.com/problems/jewels-and-stones", "You're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. Each character in stones is a type of stone you have. You want to know how many of the stones you have are also jewels.\nLetters are case sensitive, so \"a\" is considered a different type of stone from \"A\".\n\u00a0\nExample 1:\nInput: jewels = \"aA\", stones = \"aAAbbbb\"\nOutput: 3\nExample 2:\nInput: jewels = \"z\", stones = \"ZZ\"\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <=\u00a0jewels.length, stones.length <= 50\njewels and stones consist of only English letters.\nAll the characters of\u00a0jewels are unique.\n\n"], "773. Sliding Puzzle": ["https://leetcode.com/problems/sliding-puzzle", "On an 2 x 3 board, there are five tiles labeled from 1 to 5, and an empty square represented by 0. A move consists of choosing 0 and a 4-directionally adjacent number and swapping it.\nThe state of the board is solved if and only if the board is [[1,2,3],[4,5,0]].\nGiven the puzzle board board, return the least number of moves required so that the state of the board is solved. If it is impossible for the state of the board to be solved, return -1.\n\u00a0\nExample 1:\n\nInput: board = [[1,2,3],[4,0,5]]\nOutput: 1\nExplanation: Swap the 0 and the 5 in one move.\n\nExample 2:\n\nInput: board = [[1,2,3],[5,4,0]]\nOutput: -1\nExplanation: No number of moves will make the board solved.\n\nExample 3:\n\nInput: board = [[4,1,2],[5,0,3]]\nOutput: 5\nExplanation: 5 is the smallest number of moves that solves the board.\nAn example path:\nAfter move 0: [[4,1,2],[5,0,3]]\nAfter move 1: [[4,1,2],[0,5,3]]\nAfter move 2: [[0,1,2],[4,5,3]]\nAfter move 3: [[1,0,2],[4,5,3]]\nAfter move 4: [[1,2,0],[4,5,3]]\nAfter move 5: [[1,2,3],[4,5,0]]\n\n\u00a0\nConstraints:\n\nboard.length == 2\nboard[i].length == 3\n0 <= board[i][j] <= 5\nEach value board[i][j] is unique.\n\n"], "775. Global and Local Inversions": ["https://leetcode.com/problems/global-and-local-inversions", "You are given an integer array nums of length n which represents a permutation of all the integers in the range [0, n - 1].\nThe number of global inversions is the number of the different pairs (i, j) where:\n\n0 <= i < j < n\nnums[i] > nums[j]\n\nThe number of local inversions is the number of indices i where:\n\n0 <= i < n - 1\nnums[i] > nums[i + 1]\n\nReturn true if the number of global inversions is equal to the number of local inversions.\n\u00a0\nExample 1:\nInput: nums = [1,0,2]\nOutput: true\nExplanation: There is 1 global inversion and 1 local inversion.\n\nExample 2:\nInput: nums = [1,2,0]\nOutput: false\nExplanation: There are 2 global inversions and 1 local inversion.\n\n\u00a0\nConstraints:\n\nn == nums.length\n1 <= n <= 105\n0 <= nums[i] < n\nAll the integers of nums are unique.\nnums is a permutation of all the numbers in the range [0, n - 1].\n\n"], "777. Swap Adjacent in LR String": ["https://leetcode.com/problems/swap-adjacent-in-lr-string", "In a string composed of 'L', 'R', and 'X' characters, like \"RXXLRXRXL\", a move consists of either replacing one occurrence of \"XL\" with \"LX\", or replacing one occurrence of \"RX\" with \"XR\". Given the starting string start and the ending string end, return True if and only if there exists a sequence of moves to transform one string to the other.\n\u00a0\nExample 1:\nInput: start = \"RXXLRXRXL\", end = \"XRLXXRRLX\"\nOutput: true\nExplanation: We can transform start to end following these steps:\nRXXLRXRXL ->\nXRXLRXRXL ->\nXRLXRXRXL ->\nXRLXXRRXL ->\nXRLXXRRLX\n\nExample 2:\nInput: start = \"X\", end = \"L\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= start.length\u00a0<= 104\nstart.length == end.length\nBoth start and end will only consist of characters in 'L', 'R', and\u00a0'X'.\n\n"], "778. Swim in Rising Water": ["https://leetcode.com/problems/swim-in-rising-water", "You are given an n x n integer matrix grid where each value grid[i][j] represents the elevation at that point (i, j).\nThe rain starts to fall. At time t, the depth of the water everywhere is t. You can swim from a square to another 4-directionally adjacent square if and only if the elevation of both squares individually are at most t. You can swim infinite distances in zero time. Of course, you must stay within the boundaries of the grid during your swim.\nReturn the least time until you can reach the bottom right square (n - 1, n - 1) if you start at the top left square (0, 0).\n\u00a0\nExample 1:\n\nInput: grid = [[0,2],[1,3]]\nOutput: 3\nExplanation:\nAt time 0, you are in grid location (0, 0).\nYou cannot go anywhere else because 4-directionally adjacent neighbors have a higher elevation than t = 0.\nYou cannot reach point (1, 1) until time 3.\nWhen the depth of water is 3, we can swim anywhere inside the grid.\n\nExample 2:\n\nInput: grid = [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]\nOutput: 16\nExplanation: The final route is shown.\nWe need to wait until time 16 so that (0, 0) and (4, 4) are connected.\n\n\u00a0\nConstraints:\n\nn == grid.length\nn == grid[i].length\n1 <= n <= 50\n0 <= grid[i][j] <\u00a0n2\nEach value grid[i][j] is unique.\n\n"], "779. K-th Symbol in Grammar": ["https://leetcode.com/problems/k-th-symbol-in-grammar", "We build a table of n rows (1-indexed). We start by writing 0 in the 1st row. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10.\n\nFor example, for n = 3, the 1st row is 0, the 2nd row is 01, and the 3rd row is 0110.\n\nGiven two integer n and k, return the kth (1-indexed) symbol in the nth row of a table of n rows.\n\u00a0\nExample 1:\nInput: n = 1, k = 1\nOutput: 0\nExplanation: row 1: 0\n\nExample 2:\nInput: n = 2, k = 1\nOutput: 0\nExplanation: \nrow 1: 0\nrow 2: 01\n\nExample 3:\nInput: n = 2, k = 2\nOutput: 1\nExplanation: \nrow 1: 0\nrow 2: 01\n\n\u00a0\nConstraints:\n\n1 <= n <= 30\n1 <= k <= 2n - 1\n\n"], "780. Reaching Points": ["https://leetcode.com/problems/reaching-points", "Given four integers sx, sy, tx, and ty, return true if it is possible to convert the point (sx, sy) to the point (tx, ty) through some operations, or false otherwise.\nThe allowed operation on some point (x, y) is to convert it to either (x, x + y) or (x + y, y).\n\u00a0\nExample 1:\nInput: sx = 1, sy = 1, tx = 3, ty = 5\nOutput: true\nExplanation:\nOne series of moves that transforms the starting point to the target is:\n(1, 1) -> (1, 2)\n(1, 2) -> (3, 2)\n(3, 2) -> (3, 5)\n\nExample 2:\nInput: sx = 1, sy = 1, tx = 2, ty = 2\nOutput: false\n\nExample 3:\nInput: sx = 1, sy = 1, tx = 1, ty = 1\nOutput: true\n\n\u00a0\nConstraints:\n\n1 <= sx, sy, tx, ty <= 109\n\n"], "781. Rabbits in Forest": ["https://leetcode.com/problems/rabbits-in-forest", "There is a forest with an unknown number of rabbits. We asked n rabbits \"How many rabbits have the same color as you?\" and collected the answers in an integer array answers where answers[i] is the answer of the ith rabbit.\nGiven the array answers, return the minimum number of rabbits that could be in the forest.\n\u00a0\nExample 1:\nInput: answers = [1,1,2]\nOutput: 5\nExplanation:\nThe two rabbits that answered \"1\" could both be the same color, say red.\nThe rabbit that answered \"2\" can't be red or the answers would be inconsistent.\nSay the rabbit that answered \"2\" was blue.\nThen there should be 2 other blue rabbits in the forest that didn't answer into the array.\nThe smallest possible number of rabbits in the forest is therefore 5: 3 that answered plus 2 that didn't.\n\nExample 2:\nInput: answers = [10,10,10]\nOutput: 11\n\n\u00a0\nConstraints:\n\n1 <= answers.length <= 1000\n0 <= answers[i] < 1000\n\n"], "782. Transform to Chessboard": ["https://leetcode.com/problems/transform-to-chessboard", "You are given an n x n binary grid board. In each move, you can swap any two rows with each other, or any two columns with each other.\nReturn the minimum number of moves to transform the board into a chessboard board. If the task is impossible, return -1.\nA chessboard board is a board where no 0's and no 1's are 4-directionally adjacent.\n\u00a0\nExample 1:\n\nInput: board = [[0,1,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,1]]\nOutput: 2\nExplanation: One potential sequence of moves is shown.\nThe first move swaps the first and second column.\nThe second move swaps the second and third row.\n\nExample 2:\n\nInput: board = [[0,1],[1,0]]\nOutput: 0\nExplanation: Also note that the board with 0 in the top left corner, is also a valid chessboard.\n\nExample 3:\n\nInput: board = [[1,0],[1,0]]\nOutput: -1\nExplanation: No matter what sequence of moves you make, you cannot end with a valid chessboard.\n\n\u00a0\nConstraints:\n\nn == board.length\nn == board[i].length\n2 <= n <= 30\nboard[i][j] is either\u00a00 or 1.\n\n"], "783. Minimum Distance Between BST Nodes": ["https://leetcode.com/problems/minimum-distance-between-bst-nodes", "Given the root of a Binary Search Tree (BST), return the minimum difference between the values of any two different nodes in the tree.\n\u00a0\nExample 1:\n\nInput: root = [4,2,6,1,3]\nOutput: 1\n\nExample 2:\n\nInput: root = [1,0,48,null,null,12,49]\nOutput: 1\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [2, 100].\n0 <= Node.val <= 105\n\n\u00a0\nNote: This question is the same as 530: https://leetcode.com/problems/minimum-absolute-difference-in-bst/\n"], "784. Letter Case Permutation": ["https://leetcode.com/problems/letter-case-permutation", "Given a string s, you\u00a0can transform every letter individually to be lowercase or uppercase to create another string.\nReturn a list of all possible strings we could create. Return the output in any order.\n\u00a0\nExample 1:\nInput: s = \"a1b2\"\nOutput: [\"a1b2\",\"a1B2\",\"A1b2\",\"A1B2\"]\n\nExample 2:\nInput: s = \"3z4\"\nOutput: [\"3z4\",\"3Z4\"]\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 12\ns consists of lowercase English letters, uppercase English letters, and digits.\n\n"], "785. Is Graph Bipartite?": ["https://leetcode.com/problems/is-graph-bipartite", "There is an undirected graph with n nodes, where each node is numbered between 0 and n - 1. You are given a 2D array graph, where graph[u] is an array of nodes that node u is adjacent to. More formally, for each v in graph[u], there is an undirected edge between node u and node v. The graph has the following properties:\n\nThere are no self-edges (graph[u] does not contain u).\nThere are no parallel edges (graph[u] does not contain duplicate values).\nIf v is in graph[u], then u is in graph[v] (the graph is undirected).\nThe graph may not be connected, meaning there may be two nodes u and v such that there is no path between them.\n\nA graph is bipartite if the nodes can be partitioned into two independent sets A and B such that every edge in the graph connects a node in set A and a node in set B.\nReturn true if and only if it is bipartite.\n\u00a0\nExample 1:\n\nInput: graph = [[1,2,3],[0,2],[0,1,3],[0,2]]\nOutput: false\nExplanation: There is no way to partition the nodes into two independent sets such that every edge connects a node in one and a node in the other.\nExample 2:\n\nInput: graph = [[1,3],[0,2],[1,3],[0,2]]\nOutput: true\nExplanation: We can partition the nodes into two sets: {0, 2} and {1, 3}.\n\u00a0\nConstraints:\n\ngraph.length == n\n1 <= n <= 100\n0 <= graph[u].length < n\n0 <= graph[u][i] <= n - 1\ngraph[u]\u00a0does not contain\u00a0u.\nAll the values of graph[u] are unique.\nIf graph[u] contains v, then graph[v] contains u.\n\n"], "786. K-th Smallest Prime Fraction": ["https://leetcode.com/problems/k-th-smallest-prime-fraction", "You are given a sorted integer array arr containing 1 and prime numbers, where all the integers of arr are unique. You are also given an integer k.\nFor every i and j where 0 <= i < j < arr.length, we consider the fraction arr[i] / arr[j].\nReturn the kth smallest fraction considered. Return your answer as an array of integers of size 2, where answer[0] == arr[i] and answer[1] == arr[j].\n\u00a0\nExample 1:\nInput: arr = [1,2,3,5], k = 3\nOutput: [2,5]\nExplanation: The fractions to be considered in sorted order are:\n1/5, 1/3, 2/5, 1/2, 3/5, and 2/3.\nThe third fraction is 2/5.\n\nExample 2:\nInput: arr = [1,7], k = 1\nOutput: [1,7]\n\n\u00a0\nConstraints:\n\n2 <= arr.length <= 1000\n1 <= arr[i] <= 3 * 104\narr[0] == 1\narr[i] is a prime number for i > 0.\nAll the numbers of arr are unique and sorted in strictly increasing order.\n1 <= k <= arr.length * (arr.length - 1) / 2\n\n"], "787. Cheapest Flights Within K Stops": ["https://leetcode.com/problems/cheapest-flights-within-k-stops", "There are n cities connected by some number of flights. You are given an array flights where flights[i] = [fromi, toi, pricei] indicates that there is a flight from city fromi to city toi with cost pricei.\nYou are also given three integers src, dst, and k, return the cheapest price from src to dst with at most k stops. If there is no such route, return -1.\n\u00a0\nExample 1:\n\nInput: n = 4, flights = [[0,1,100],[1,2,100],[2,0,100],[1,3,600],[2,3,200]], src = 0, dst = 3, k = 1\nOutput: 700\nExplanation:\nThe graph is shown above.\nThe optimal path with at most 1 stop from city 0 to 3 is marked in red and has cost 100 + 600 = 700.\nNote that the path through cities [0,1,2,3] is cheaper but is invalid because it uses 2 stops.\n\nExample 2:\n\nInput: n = 3, flights = [[0,1,100],[1,2,100],[0,2,500]], src = 0, dst = 2, k = 1\nOutput: 200\nExplanation:\nThe graph is shown above.\nThe optimal path with at most 1 stop from city 0 to 2 is marked in red and has cost 100 + 100 = 200.\n\nExample 3:\n\nInput: n = 3, flights = [[0,1,100],[1,2,100],[0,2,500]], src = 0, dst = 2, k = 0\nOutput: 500\nExplanation:\nThe graph is shown above.\nThe optimal path with no stops from city 0 to 2 is marked in red and has cost 500.\n\n\u00a0\nConstraints:\n\n1 <= n <= 100\n0 <= flights.length <= (n * (n - 1) / 2)\nflights[i].length == 3\n0 <= fromi, toi < n\nfromi != toi\n1 <= pricei <= 104\nThere will not be any multiple flights between two cities.\n0 <= src, dst, k < n\nsrc != dst\n\n"], "788. Rotated Digits": ["https://leetcode.com/problems/rotated-digits", "An integer x is a good if after rotating each digit individually by 180 degrees, we get a valid number that is different from x. Each digit must be rotated - we cannot choose to leave it alone.\nA number is valid if each digit remains a digit after rotation. For example:\n\n0, 1, and 8 rotate to themselves,\n2 and 5 rotate to each other (in this case they are rotated in a different direction, in other words, 2 or 5 gets mirrored),\n6 and 9 rotate to each other, and\nthe rest of the numbers do not rotate to any other number and become invalid.\n\nGiven an integer n, return the number of good integers in the range [1, n].\n\u00a0\nExample 1:\nInput: n = 10\nOutput: 4\nExplanation: There are four good numbers in the range [1, 10] : 2, 5, 6, 9.\nNote that 1 and 10 are not good numbers, since they remain unchanged after rotating.\n\nExample 2:\nInput: n = 1\nOutput: 0\n\nExample 3:\nInput: n = 2\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= n <= 104\n\n"], "789. Escape The Ghosts": ["https://leetcode.com/problems/escape-the-ghosts", "You are playing a simplified PAC-MAN game on an infinite 2-D grid. You start at the point [0, 0], and you are given a destination point target = [xtarget, ytarget] that you are trying to get to. There are several ghosts on the map with their starting positions given as a 2D array ghosts, where ghosts[i] = [xi, yi] represents the starting position of the ith ghost. All inputs are integral coordinates.\nEach turn, you and all the ghosts may independently choose to either move 1 unit in any of the four cardinal directions: north, east, south, or west, or stay still. All actions happen simultaneously.\nYou escape if and only if you can reach the target before any ghost reaches you. If you reach any square (including the target) at the same time as a ghost, it does not count as an escape.\nReturn true if it is possible to escape regardless of how the ghosts move, otherwise return false.\n\u00a0\nExample 1:\nInput: ghosts = [[1,0],[0,3]], target = [0,1]\nOutput: true\nExplanation: You can reach the destination (0, 1) after 1 turn, while the ghosts located at (1, 0) and (0, 3) cannot catch up with you.\n\nExample 2:\nInput: ghosts = [[1,0]], target = [2,0]\nOutput: false\nExplanation: You need to reach the destination (2, 0), but the ghost at (1, 0) lies between you and the destination.\n\nExample 3:\nInput: ghosts = [[2,0]], target = [1,0]\nOutput: false\nExplanation: The ghost can reach the target at the same time as you.\n\n\u00a0\nConstraints:\n\n1 <= ghosts.length <= 100\nghosts[i].length == 2\n-104 <= xi, yi <= 104\nThere can be multiple ghosts in the same location.\ntarget.length == 2\n-104 <= xtarget, ytarget <= 104\n\n"], "790. Domino and Tromino Tiling": ["https://leetcode.com/problems/domino-and-tromino-tiling", "You have two types of tiles: a 2 x 1 domino shape and a tromino shape. You may rotate these shapes.\n\nGiven an integer n, return the number of ways to tile an 2 x n board. Since the answer may be very large, return it modulo 109 + 7.\nIn a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.\n\u00a0\nExample 1:\n\nInput: n = 3\nOutput: 5\nExplanation: The five different ways are show above.\n\nExample 2:\nInput: n = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= n <= 1000\n\n"], "791. Custom Sort String": ["https://leetcode.com/problems/custom-sort-string", "You are given two strings order and s. All the words of order are unique and were sorted in some custom order previously.\nPermute the characters of s so that they match the order that order was sorted. More specifically, if a character x occurs before a character y in order, then x should occur before y in the permuted string.\nReturn any permutation of s that satisfies this property.\n\u00a0\nExample 1:\nInput: order = \"cba\", s = \"abcd\"\nOutput: \"cbad\"\nExplanation: \n\"a\", \"b\", \"c\" appear in order, so the order of \"a\", \"b\", \"c\" should be \"c\", \"b\", and \"a\". \nSince \"d\" does not appear in order, it can be at any position in the returned string. \"dcba\", \"cdba\", \"cbda\" are also valid outputs.\n\nExample 2:\nInput: order = \"cbafg\", s = \"abcd\"\nOutput: \"cbad\"\n\n\u00a0\nConstraints:\n\n1 <= order.length <= 26\n1 <= s.length <= 200\norder and s consist of lowercase English letters.\nAll the characters of order are unique.\n\n"], "792. Number of Matching Subsequences": ["https://leetcode.com/problems/number-of-matching-subsequences", "Given a string s and an array of strings words, return the number of words[i] that is a subsequence of s.\nA subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\n\nFor example, \"ace\" is a subsequence of \"abcde\".\n\n\u00a0\nExample 1:\nInput: s = \"abcde\", words = [\"a\",\"bb\",\"acd\",\"ace\"]\nOutput: 3\nExplanation: There are three strings in words that are a subsequence of s: \"a\", \"acd\", \"ace\".\n\nExample 2:\nInput: s = \"dsahjpjauf\", words = [\"ahjpjau\",\"ja\",\"ahbwzgqnuk\",\"tnmlanowax\"]\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 5 * 104\n1 <= words.length <= 5000\n1 <= words[i].length <= 50\ns and words[i] consist of only lowercase English letters.\n\n"], "793. Preimage Size of Factorial Zeroes Function": ["https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function", "Let f(x) be the number of zeroes at the end of x!. Recall that x! = 1 * 2 * 3 * ... * x and by convention, 0! = 1.\n\nFor example, f(3) = 0 because 3! = 6 has no zeroes at the end, while f(11) = 2 because 11! = 39916800 has two zeroes at the end.\n\nGiven an integer k, return the number of non-negative integers x have the property that f(x) = k.\n\u00a0\nExample 1:\nInput: k = 0\nOutput: 5\nExplanation: 0!, 1!, 2!, 3!, and 4! end with k = 0 zeroes.\n\nExample 2:\nInput: k = 5\nOutput: 0\nExplanation: There is no x such that x! ends in k = 5 zeroes.\n\nExample 3:\nInput: k = 3\nOutput: 5\n\n\u00a0\nConstraints:\n\n0 <= k <= 109\n\n"], "794. Valid Tic-Tac-Toe State": ["https://leetcode.com/problems/valid-tic-tac-toe-state", "Given a Tic-Tac-Toe board as a string array board, return true if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game.\nThe board is a 3 x 3 array that consists of characters ' ', 'X', and 'O'. The ' ' character represents an empty square.\nHere are the rules of Tic-Tac-Toe:\n\nPlayers take turns placing characters into empty squares ' '.\nThe first player always places 'X' characters, while the second player always places 'O' characters.\n'X' and 'O' characters are always placed into empty squares, never filled ones.\nThe game ends when there are three of the same (non-empty) character filling any row, column, or diagonal.\nThe game also ends if all squares are non-empty.\nNo more moves can be played if the game is over.\n\n\u00a0\nExample 1:\n\nInput: board = [\"O  \",\"   \",\"   \"]\nOutput: false\nExplanation: The first player always plays \"X\".\n\nExample 2:\n\nInput: board = [\"XOX\",\" X \",\"   \"]\nOutput: false\nExplanation: Players take turns making moves.\n\nExample 3:\n\nInput: board = [\"XOX\",\"O O\",\"XOX\"]\nOutput: true\n\n\u00a0\nConstraints:\n\nboard.length == 3\nboard[i].length == 3\nboard[i][j] is either 'X', 'O', or ' '.\n\n"], "795. Number of Subarrays with Bounded Maximum": ["https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum", "Given an integer array nums and two integers left and right, return the number of contiguous non-empty subarrays such that the value of the maximum array element in that subarray is in the range [left, right].\nThe test cases are generated so that the answer will fit in a 32-bit integer.\n\u00a0\nExample 1:\nInput: nums = [2,1,4,3], left = 2, right = 3\nOutput: 3\nExplanation: There are three subarrays that meet the requirements: [2], [2, 1], [3].\n\nExample 2:\nInput: nums = [2,9,2,5,6], left = 2, right = 8\nOutput: 7\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n0 <= nums[i] <= 109\n0 <= left <= right <= 109\n\n"], "796. Rotate String": ["https://leetcode.com/problems/rotate-string", "Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.\nA shift on s consists of moving the leftmost character of s to the rightmost position.\n\nFor example, if s = \"abcde\", then it will be \"bcdea\" after one shift.\n\n\u00a0\nExample 1:\nInput: s = \"abcde\", goal = \"cdeab\"\nOutput: true\nExample 2:\nInput: s = \"abcde\", goal = \"abced\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= s.length, goal.length <= 100\ns and goal consist of lowercase English letters.\n\n"], "797. All Paths From Source to Target": ["https://leetcode.com/problems/all-paths-from-source-to-target", "Given a directed acyclic graph (DAG) of n nodes labeled from 0 to n - 1, find all possible paths from node 0 to node n - 1 and return them in any order.\nThe graph is given as follows: graph[i] is a list of all nodes you can visit from node i (i.e., there is a directed edge from node i to node graph[i][j]).\n\u00a0\nExample 1:\n\nInput: graph = [[1,2],[3],[3],[]]\nOutput: [[0,1,3],[0,2,3]]\nExplanation: There are two paths: 0 -> 1 -> 3 and 0 -> 2 -> 3.\n\nExample 2:\n\nInput: graph = [[4,3,1],[3,2,4],[3],[4],[]]\nOutput: [[0,4],[0,3,4],[0,1,3,4],[0,1,2,3,4],[0,1,4]]\n\n\u00a0\nConstraints:\n\nn == graph.length\n2 <= n <= 15\n0 <= graph[i][j] < n\ngraph[i][j] != i (i.e., there will be no self-loops).\nAll the elements of graph[i] are unique.\nThe input graph is guaranteed to be a DAG.\n\n"], "798. Smallest Rotation with Highest Score": ["https://leetcode.com/problems/smallest-rotation-with-highest-score", "You are given an array nums. You can rotate it by a non-negative integer k so that the array becomes [nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]. Afterward, any entries that are less than or equal to their index are worth one point.\n\nFor example, if we have nums = [2,4,1,3,0], and we rotate by k = 2, it becomes [1,3,0,2,4]. This is worth 3 points because 1 > 0 [no points], 3 > 1 [no points], 0 <= 2 [one point], 2 <= 3 [one point], 4 <= 4 [one point].\n\nReturn the rotation index k that corresponds to the highest score we can achieve if we rotated nums by it. If there are multiple answers, return the smallest such index k.\n\u00a0\nExample 1:\nInput: nums = [2,3,1,4,0]\nOutput: 3\nExplanation: Scores for each k are listed below: \nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\nSo we should choose k = 3, which has the highest score.\n\nExample 2:\nInput: nums = [1,3,0,2,4]\nOutput: 0\nExplanation: nums will always have 3 points no matter how it shifts.\nSo we will choose the smallest k, which is 0.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n0 <= nums[i] < nums.length\n\n"], "799. Champagne Tower": ["https://leetcode.com/problems/champagne-tower", "We stack glasses in a pyramid, where the first row has 1 glass, the second row has 2 glasses, and so on until the 100th row.\u00a0 Each glass holds one cup\u00a0of champagne.\nThen, some champagne is poured into the first glass at the top.\u00a0 When the topmost glass is full, any excess liquid poured will fall equally to the glass immediately to the left and right of it.\u00a0 When those glasses become full, any excess champagne will fall equally to the left and right of those glasses, and so on.\u00a0 (A glass at the bottom row has its excess champagne fall on the floor.)\nFor example, after one cup of champagne is poured, the top most glass is full.\u00a0 After two cups of champagne are poured, the two glasses on the second row are half full.\u00a0 After three cups of champagne are poured, those two cups become full - there are 3 full glasses total now.\u00a0 After four cups of champagne are poured, the third row has the middle glass half full, and the two outside glasses are a quarter full, as pictured below.\n\nNow after pouring some non-negative integer cups of champagne, return how full the jth glass in the ith row is (both i and j are 0-indexed.)\n\u00a0\nExample 1:\nInput: poured = 1, query_row = 1, query_glass = 1\nOutput: 0.00000\nExplanation: We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). There will be no excess liquid so all the glasses under the top glass will remain empty.\n\nExample 2:\nInput: poured = 2, query_row = 1, query_glass = 1\nOutput: 0.50000\nExplanation: We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. The glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange.\n\nExample 3:\nInput: poured = 100000009, query_row = 33, query_glass = 17\nOutput: 1.00000\n\n\u00a0\nConstraints:\n\n0 <=\u00a0poured <= 109\n0 <= query_glass <= query_row\u00a0< 100\n"], "801. Minimum Swaps To Make Sequences Increasing": ["https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing", "You are given two integer arrays of the same length nums1 and nums2. In one operation, you are allowed to swap nums1[i] with nums2[i].\n\nFor example, if nums1 = [1,2,3,8], and nums2 = [5,6,7,4], you can swap the element at i = 3 to obtain nums1 = [1,2,3,4] and nums2 = [5,6,7,8].\n\nReturn the minimum number of needed operations to make nums1 and nums2 strictly increasing. The test cases are generated so that the given input always makes it possible.\nAn array arr is strictly increasing if and only if arr[0] < arr[1] < arr[2] < ... < arr[arr.length - 1].\n\u00a0\nExample 1:\nInput: nums1 = [1,3,5,4], nums2 = [1,2,3,7]\nOutput: 1\nExplanation: \nSwap nums1[3] and nums2[3]. Then the sequences are:\nnums1 = [1, 3, 5, 7] and nums2 = [1, 2, 3, 4]\nwhich are both strictly increasing.\n\nExample 2:\nInput: nums1 = [0,3,5,8,9], nums2 = [2,1,4,6,9]\nOutput: 1\n\n\u00a0\nConstraints:\n\n2 <= nums1.length <= 105\nnums2.length == nums1.length\n0 <= nums1[i], nums2[i] <= 2 * 105\n\n"], "802. Find Eventual Safe States": ["https://leetcode.com/problems/find-eventual-safe-states", "There is a directed graph of n nodes with each node labeled from 0 to n - 1. The graph is represented by a 0-indexed 2D integer array graph where graph[i] is an integer array of nodes adjacent to node i, meaning there is an edge from node i to each node in graph[i].\nA node is a terminal node if there are no outgoing edges. A node is a safe node if every possible path starting from that node leads to a terminal node.\nReturn an array containing all the safe nodes of the graph. The answer should be sorted in ascending order.\n\u00a0\nExample 1:\n\nInput: graph = [[1,2],[2,3],[5],[0],[5],[],[]]\nOutput: [2,4,5,6]\nExplanation: The given graph is shown above.\nNodes 5 and 6 are terminal nodes as there are no outgoing edges from either of them.\nEvery path starting at nodes 2, 4, 5, and 6 all lead to either node 5 or 6.\nExample 2:\nInput: graph = [[1,2,3,4],[1,2],[3,4],[0,4],[]]\nOutput: [4]\nExplanation:\nOnly node 4 is a terminal node, and every path starting at node 4 leads to node 4.\n\n\u00a0\nConstraints:\n\nn == graph.length\n1 <= n <= 104\n0 <= graph[i].length <= n\n0 <= graph[i][j] <= n - 1\ngraph[i] is sorted in a strictly increasing order.\nThe graph may contain self-loops.\nThe number of edges in the graph will be in the range [1, 4 * 104].\n\n"], "803. Bricks Falling When Hit": ["https://leetcode.com/problems/bricks-falling-when-hit", "You are given an m x n binary grid, where each 1 represents a brick and 0 represents an empty space. A brick is stable if:\n\nIt is directly connected to the top of the grid, or\nAt least one other brick in its four adjacent cells is stable.\n\nYou are also given an array hits, which is a sequence of erasures we want to apply. Each time we want to erase the brick at the location hits[i] = (rowi, coli). The brick on that location\u00a0(if it exists) will disappear. Some other bricks may no longer be stable because of that erasure and will fall. Once a brick falls, it is immediately erased from the grid (i.e., it does not land on other stable bricks).\nReturn an array result, where each result[i] is the number of bricks that will fall after the ith erasure is applied.\nNote that an erasure may refer to a location with no brick, and if it does, no bricks drop.\n\u00a0\nExample 1:\nInput: grid = [[1,0,0,0],[1,1,1,0]], hits = [[1,0]]\nOutput: [2]\nExplanation: Starting with the grid:\n[[1,0,0,0],\n [1,1,1,0]]\nWe erase the underlined brick at (1,0), resulting in the grid:\n[[1,0,0,0],\n [0,1,1,0]]\nThe two underlined bricks are no longer stable as they are no longer connected to the top nor adjacent to another stable brick, so they will fall. The resulting grid is:\n[[1,0,0,0],\n [0,0,0,0]]\nHence the result is [2].\n\nExample 2:\nInput: grid = [[1,0,0,0],[1,1,0,0]], hits = [[1,1],[1,0]]\nOutput: [0,0]\nExplanation: Starting with the grid:\n[[1,0,0,0],\n [1,1,0,0]]\nWe erase the underlined brick at (1,1), resulting in the grid:\n[[1,0,0,0],\n [1,0,0,0]]\nAll remaining bricks are still stable, so no bricks fall. The grid remains the same:\n[[1,0,0,0],\n [1,0,0,0]]\nNext, we erase the underlined brick at (1,0), resulting in the grid:\n[[1,0,0,0],\n [0,0,0,0]]\nOnce again, all remaining bricks are still stable, so no bricks fall.\nHence the result is [0,0].\n\n\u00a0\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 200\ngrid[i][j] is 0 or 1.\n1 <= hits.length <= 4 * 104\nhits[i].length == 2\n0 <= xi\u00a0<= m - 1\n0 <=\u00a0yi <= n - 1\nAll (xi, yi) are unique.\n\n"], "804. Unique Morse Code Words": ["https://leetcode.com/problems/unique-morse-code-words", "International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows:\n\n'a' maps to \".-\",\n'b' maps to \"-...\",\n'c' maps to \"-.-.\", and so on.\n\nFor convenience, the full table for the 26 letters of the English alphabet is given below:\n[\".-\",\"-...\",\"-.-.\",\"-..\",\".\",\"..-.\",\"--.\",\"....\",\"..\",\".---\",\"-.-\",\".-..\",\"--\",\"-.\",\"---\",\".--.\",\"--.-\",\".-.\",\"...\",\"-\",\"..-\",\"...-\",\".--\",\"-..-\",\"-.--\",\"--..\"]\nGiven an array of strings words where each word can be written as a concatenation of the Morse code of each letter.\n\nFor example, \"cab\" can be written as \"-.-..--...\", which is the concatenation of \"-.-.\", \".-\", and \"-...\". We will call such a concatenation the transformation of a word.\n\nReturn the number of different transformations among all words we have.\n\u00a0\nExample 1:\nInput: words = [\"gin\",\"zen\",\"gig\",\"msg\"]\nOutput: 2\nExplanation: The transformation of each word is:\n\"gin\" -> \"--...-.\"\n\"zen\" -> \"--...-.\"\n\"gig\" -> \"--...--.\"\n\"msg\" -> \"--...--.\"\nThere are 2 different transformations: \"--...-.\" and \"--...--.\".\n\nExample 2:\nInput: words = [\"a\"]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 100\n1 <= words[i].length <= 12\nwords[i] consists of lowercase English letters.\n\n"], "805. Split Array With Same Average": ["https://leetcode.com/problems/split-array-with-same-average", "You are given an integer array nums.\nYou should move each element of nums into one of the two arrays A and B such that A and B are non-empty, and average(A) == average(B).\nReturn true if it is possible to achieve that and false otherwise.\nNote that for an array arr, average(arr) is the sum of all the elements of arr over the length of arr.\n\u00a0\nExample 1:\nInput: nums = [1,2,3,4,5,6,7,8]\nOutput: true\nExplanation: We can split the array into [1,4,5,8] and [2,3,6,7], and both of them have an average of 4.5.\n\nExample 2:\nInput: nums = [3,1]\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 30\n0 <= nums[i] <= 104\n\n"], "806. Number of Lines To Write String": ["https://leetcode.com/problems/number-of-lines-to-write-string", "You are given a string s of lowercase English letters and an array widths denoting how many pixels wide each lowercase English letter is. Specifically, widths[0] is the width of 'a', widths[1] is the width of 'b', and so on.\nYou are trying to write s across several lines, where each line is no longer than 100 pixels. Starting at the beginning of s, write as many letters on the first line such that the total width does not exceed 100 pixels. Then, from where you stopped in s, continue writing as many letters as you can on the second line. Continue this process until you have written all of s.\nReturn an array result of length 2 where:\n\nresult[0] is the total number of lines.\nresult[1] is the width of the last line in pixels.\n\n\u00a0\nExample 1:\nInput: widths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10], s = \"abcdefghijklmnopqrstuvwxyz\"\nOutput: [3,60]\nExplanation: You can write s as follows:\nabcdefghij  // 100 pixels wide\nklmnopqrst  // 100 pixels wide\nuvwxyz      // 60 pixels wide\nThere are a total of 3 lines, and the last line is 60 pixels wide.\nExample 2:\nInput: widths = [4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10], s = \"bbbcccdddaaa\"\nOutput: [2,4]\nExplanation: You can write s as follows:\nbbbcccdddaa  // 98 pixels wide\na            // 4 pixels wide\nThere are a total of 2 lines, and the last line is 4 pixels wide.\n\u00a0\nConstraints:\n\nwidths.length == 26\n2 <= widths[i] <= 10\n1 <= s.length <= 1000\ns contains only lowercase English letters.\n\n"], "807. Max Increase to Keep City Skyline": ["https://leetcode.com/problems/max-increase-to-keep-city-skyline", "There is a city composed of n x n blocks, where each block contains a single building shaped like a vertical square prism. You are given a 0-indexed n x n integer matrix grid where grid[r][c] represents the height of the building located in the block at row r and column c.\nA city's skyline is the the outer contour formed by all the building when viewing the side of the city from a distance. The skyline from each cardinal direction north, east, south, and west may be different.\nWe are allowed to increase the height of any number of buildings by any amount (the amount can be different per building). The height of a 0-height building can also be increased. However, increasing the height of a building should not affect the city's skyline from any cardinal direction.\nReturn the maximum total sum that the height of the buildings can be increased by without changing the city's skyline from any cardinal direction.\n\u00a0\nExample 1:\n\nInput: grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]\nOutput: 35\nExplanation: The building heights are shown in the center of the above image.\nThe skylines when viewed from each cardinal direction are drawn in red.\nThe grid after increasing the height of buildings without affecting skylines is:\ngridNew = [ [8, 4, 8, 7],\n            [7, 4, 7, 7],\n            [9, 4, 8, 7],\n            [3, 3, 3, 3] ]\n\nExample 2:\nInput: grid = [[0,0,0],[0,0,0],[0,0,0]]\nOutput: 0\nExplanation: Increasing the height of any building will result in the skyline changing.\n\n\u00a0\nConstraints:\n\nn == grid.length\nn == grid[r].length\n2 <= n <= 50\n0 <= grid[r][c] <= 100\n\n"], "808. Soup Servings": ["https://leetcode.com/problems/soup-servings", "There are two types of soup: type A and type B. Initially, we have n ml of each type of soup. There are four kinds of operations:\n\nServe 100 ml of soup A and 0 ml of soup B,\nServe 75 ml of soup A and 25 ml of soup B,\nServe 50 ml of soup A and 50 ml of soup B, and\nServe 25 ml of soup A and 75 ml of soup B.\n\nWhen we serve some soup, we give it to someone, and we no longer have it. Each turn, we will choose from the four operations with an equal probability 0.25. If the remaining volume of soup is not enough to complete the operation, we will serve as much as possible. We stop once we no longer have some quantity of both types of soup.\nNote that we do not have an operation where all 100 ml's of soup B are used first.\nReturn the probability that soup A will be empty first, plus half the probability that A and B become empty at the same time. Answers within 10-5 of the actual answer will be accepted.\n\u00a0\nExample 1:\nInput: n = 50\nOutput: 0.62500\nExplanation: If we choose the first two operations, A will become empty first.\nFor the third operation, A and B will become empty at the same time.\nFor the fourth operation, B will become empty first.\nSo the total probability of A becoming empty first plus half the probability that A and B become empty at the same time, is 0.25 * (1 + 1 + 0.5 + 0) = 0.625.\n\nExample 2:\nInput: n = 100\nOutput: 0.71875\n\n\u00a0\nConstraints:\n\n0 <= n <= 109\n\n"], "809. Expressive Words": ["https://leetcode.com/problems/expressive-words", "Sometimes people repeat letters to represent extra feeling. For example:\n\n\"hello\" -> \"heeellooo\"\n\"hi\" -> \"hiiii\"\n\nIn these strings like \"heeellooo\", we have groups of adjacent letters that are all the same: \"h\", \"eee\", \"ll\", \"ooo\".\nYou are given a string s and an array of query strings words. A query word is stretchy if it can be made to be equal to s by any number of applications of the following extension operation: choose a group consisting of characters c, and add some number of characters c to the group so that the size of the group is three or more.\n\nFor example, starting with \"hello\", we could do an extension on the group \"o\" to get \"hellooo\", but we cannot get \"helloo\" since the group \"oo\" has a size less than three. Also, we could do another extension like \"ll\" -> \"lllll\" to get \"helllllooo\". If s = \"helllllooo\", then the query word \"hello\" would be stretchy because of these two extension operations: query = \"hello\" -> \"hellooo\" -> \"helllllooo\" = s.\n\nReturn the number of query strings that are stretchy.\n\u00a0\nExample 1:\nInput: s = \"heeellooo\", words = [\"hello\", \"hi\", \"helo\"]\nOutput: 1\nExplanation: \nWe can extend \"e\" and \"o\" in the word \"hello\" to get \"heeellooo\".\nWe can't extend \"helo\" to get \"heeellooo\" because the group \"ll\" is not size 3 or more.\n\nExample 2:\nInput: s = \"zzzzzyyyyy\", words = [\"zzyy\",\"zy\",\"zyy\"]\nOutput: 3\n\n\u00a0\nConstraints:\n\n1 <= s.length, words.length <= 100\n1 <= words[i].length <= 100\ns and words[i] consist of lowercase letters.\n\n"], "810. Chalkboard XOR Game": ["https://leetcode.com/problems/chalkboard-xor-game", "You are given an array of integers nums represents the numbers written on a chalkboard.\nAlice and Bob take turns erasing exactly one number from the chalkboard, with Alice starting first. If erasing a number causes the bitwise XOR of all the elements of the chalkboard to become 0, then that player loses. The bitwise XOR of one element is that element itself, and the bitwise XOR of no elements is 0.\nAlso, if any player starts their turn with the bitwise XOR of all the elements of the chalkboard equal to 0, then that player wins.\nReturn true if and only if Alice wins the game, assuming both players play optimally.\n\u00a0\nExample 1:\nInput: nums = [1,1,2]\nOutput: false\nExplanation: \nAlice has two choices: erase 1 or erase 2. \nIf she erases 1, the nums array becomes [1, 2]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 2 = 3. Now Bob can remove any element he wants, because Alice will be the one to erase the last element and she will lose. \nIf Alice erases 2 first, now nums become [1, 1]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 1 = 0. Alice will lose.\n\nExample 2:\nInput: nums = [0,1]\nOutput: true\n\nExample 3:\nInput: nums = [1,2,3]\nOutput: true\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 1000\n0 <= nums[i] < 216\n\n"], "811. Subdomain Visit Count": ["https://leetcode.com/problems/subdomain-visit-count", "A website domain \"discuss.leetcode.com\" consists of various subdomains. At the top level, we have \"com\", at the next level, we have \"leetcode.com\"\u00a0and at the lowest level, \"discuss.leetcode.com\". When we visit a domain like \"discuss.leetcode.com\", we will also visit the parent domains \"leetcode.com\" and \"com\" implicitly.\nA count-paired domain is a domain that has one of the two formats \"rep d1.d2.d3\" or \"rep d1.d2\" where rep is the number of visits to the domain and d1.d2.d3 is the domain itself.\n\nFor example, \"9001 discuss.leetcode.com\" is a count-paired domain that indicates that discuss.leetcode.com was visited 9001 times.\n\nGiven an array of count-paired domains cpdomains, return an array of the count-paired domains of each subdomain in the input. You may return the answer in any order.\n\u00a0\nExample 1:\nInput: cpdomains = [\"9001 discuss.leetcode.com\"]\nOutput: [\"9001 leetcode.com\",\"9001 discuss.leetcode.com\",\"9001 com\"]\nExplanation: We only have one website domain: \"discuss.leetcode.com\".\nAs discussed above, the subdomain \"leetcode.com\" and \"com\" will also be visited. So they will all be visited 9001 times.\n\nExample 2:\nInput: cpdomains = [\"900 google.mail.com\", \"50 yahoo.com\", \"1 intel.mail.com\", \"5 wiki.org\"]\nOutput: [\"901 mail.com\",\"50 yahoo.com\",\"900 google.mail.com\",\"5 wiki.org\",\"5 org\",\"1 intel.mail.com\",\"951 com\"]\nExplanation: We will visit \"google.mail.com\" 900 times, \"yahoo.com\" 50 times, \"intel.mail.com\" once and \"wiki.org\" 5 times.\nFor the subdomains, we will visit \"mail.com\" 900 + 1 = 901 times, \"com\" 900 + 50 + 1 = 951 times, and \"org\" 5 times.\n\n\u00a0\nConstraints:\n\n1 <= cpdomain.length <= 100\n1 <= cpdomain[i].length <= 100\ncpdomain[i] follows either the \"repi d1i.d2i.d3i\" format or the \"repi d1i.d2i\" format.\nrepi is an integer in the range [1, 104].\nd1i, d2i, and d3i consist of lowercase English letters.\n\n"], "812. Largest Triangle Area": ["https://leetcode.com/problems/largest-triangle-area", "Given an array of points on the X-Y plane points where points[i] = [xi, yi], return the area of the largest triangle that can be formed by any three different points. Answers within 10-5 of the actual answer will be accepted.\n\u00a0\nExample 1:\n\nInput: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]\nOutput: 2.00000\nExplanation: The five points are shown in the above figure. The red triangle is the largest.\n\nExample 2:\nInput: points = [[1,0],[0,0],[0,1]]\nOutput: 0.50000\n\n\u00a0\nConstraints:\n\n3 <= points.length <= 50\n-50 <= xi, yi <= 50\nAll the given points are unique.\n\n"], "813. Largest Sum of Averages": ["https://leetcode.com/problems/largest-sum-of-averages", "You are given an integer array nums and an integer k. You can partition the array into at most k non-empty adjacent subarrays. The score of a partition is the sum of the averages of each subarray.\nNote that the partition must use every integer in nums, and that the score is not necessarily an integer.\nReturn the maximum score you can achieve of all the possible partitions. Answers within 10-6 of the actual answer will be accepted.\n\u00a0\nExample 1:\nInput: nums = [9,1,2,3,9], k = 3\nOutput: 20.00000\nExplanation: \nThe best choice is to partition nums into [9], [1, 2, 3], [9]. The answer is 9 + (1 + 2 + 3) / 3 + 9 = 20.\nWe could have also partitioned nums into [9, 1], [2], [3, 9], for example.\nThat partition would lead to a score of 5 + 2 + 6 = 13, which is worse.\n\nExample 2:\nInput: nums = [1,2,3,4,5,6,7], k = 4\nOutput: 20.50000\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 100\n1 <= nums[i] <= 104\n1 <= k <= nums.length\n\n"], "814. Binary Tree Pruning": ["https://leetcode.com/problems/binary-tree-pruning", "Given the root of a binary tree, return the same tree where every subtree (of the given tree) not containing a 1 has been removed.\nA subtree of a node node is node plus every node that is a descendant of node.\n\u00a0\nExample 1:\n\nInput: root = [1,null,0,0,1]\nOutput: [1,null,0,null,1]\nExplanation: \nOnly the red nodes satisfy the property \"every subtree not containing a 1\".\nThe diagram on the right represents the answer.\n\nExample 2:\n\nInput: root = [1,0,1,0,0,0,1]\nOutput: [1,null,1,null,1]\n\nExample 3:\n\nInput: root = [1,1,0,1,1,0,1,0]\nOutput: [1,1,0,1,1,null,1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 200].\nNode.val is either 0 or 1.\n\n"], "815. Bus Routes": ["https://leetcode.com/problems/bus-routes", "You are given an array routes representing bus routes where routes[i] is a bus route that the ith bus repeats forever.\n\nFor example, if routes[0] = [1, 5, 7], this means that the 0th bus travels in the sequence 1 -> 5 -> 7 -> 1 -> 5 -> 7 -> 1 -> ... forever.\n\nYou will start at the bus stop source (You are not on any bus initially), and you want to go to the bus stop target. You can travel between bus stops by buses only.\nReturn the least number of buses you must take to travel from source to target. Return -1 if it is not possible.\n\u00a0\nExample 1:\nInput: routes = [[1,2,7],[3,6,7]], source = 1, target = 6\nOutput: 2\nExplanation: The best strategy is take the first bus to the bus stop 7, then take the second bus to the bus stop 6.\n\nExample 2:\nInput: routes = [[7,12],[4,5,15],[6],[15,19],[9,12,13]], source = 15, target = 12\nOutput: -1\n\n\u00a0\nConstraints:\n\n1 <= routes.length <= 500.\n1 <= routes[i].length <= 105\nAll the values of routes[i] are unique.\nsum(routes[i].length) <= 105\n0 <= routes[i][j] < 106\n0 <= source, target < 106\n\n"], "816. Ambiguous Coordinates": ["https://leetcode.com/problems/ambiguous-coordinates", "We had some 2-dimensional coordinates, like \"(1, 3)\" or \"(2, 0.5)\". Then, we removed all commas, decimal points, and spaces and ended up with the string s.\n\nFor example, \"(1, 3)\" becomes s = \"(13)\" and \"(2, 0.5)\" becomes s = \"(205)\".\n\nReturn a list of strings representing all possibilities for what our original coordinates could have been.\nOur original representation never had extraneous zeroes, so we never started with numbers like \"00\", \"0.0\", \"0.00\", \"1.0\", \"001\", \"00.01\", or any other number that can be represented with fewer digits. Also, a decimal point within a number never occurs without at least one digit occurring before it, so we never started with numbers like \".1\".\nThe final answer list can be returned in any order. All coordinates in the final answer have exactly one space between them (occurring after the comma.)\n\u00a0\nExample 1:\nInput: s = \"(123)\"\nOutput: [\"(1, 2.3)\",\"(1, 23)\",\"(1.2, 3)\",\"(12, 3)\"]\n\nExample 2:\nInput: s = \"(0123)\"\nOutput: [\"(0, 1.23)\",\"(0, 12.3)\",\"(0, 123)\",\"(0.1, 2.3)\",\"(0.1, 23)\",\"(0.12, 3)\"]\nExplanation: 0.0, 00, 0001 or 00.01 are not allowed.\n\nExample 3:\nInput: s = \"(00011)\"\nOutput: [\"(0, 0.011)\",\"(0.001, 1)\"]\n\n\u00a0\nConstraints:\n\n4 <= s.length <= 12\ns[0] == '(' and s[s.length - 1] == ')'.\nThe rest of s are digits.\n\n"], "817. Linked List Components": ["https://leetcode.com/problems/linked-list-components", "You are given the head of a linked list containing unique integer values and an integer array nums that is a subset of the linked list values.\nReturn the number of connected components in nums where two values are connected if they appear consecutively in the linked list.\n\u00a0\nExample 1:\n\nInput: head = [0,1,2,3], nums = [0,1,3]\nOutput: 2\nExplanation: 0 and 1 are connected, so [0, 1] and [3] are the two connected components.\n\nExample 2:\n\nInput: head = [0,1,2,3,4], nums = [0,3,1,4]\nOutput: 2\nExplanation: 0 and 1 are connected, 3 and 4 are connected, so [0, 1] and [3, 4] are the two connected components.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the linked list is n.\n1 <= n <= 104\n0 <= Node.val < n\nAll the values Node.val are unique.\n1 <= nums.length <= n\n0 <= nums[i] < n\nAll the values of nums are unique.\n\n"], "818. Race Car": ["https://leetcode.com/problems/race-car", ""], "819. Most Common Word": ["https://leetcode.com/problems/most-common-word", "Given a string paragraph and a string array of the banned words banned, return the most frequent word that is not banned. It is guaranteed there is at least one word that is not banned, and that the answer is unique.\nThe words in paragraph are case-insensitive and the answer should be returned in lowercase.\n\u00a0\nExample 1:\nInput: paragraph = \"Bob hit a ball, the hit BALL flew far after it was hit.\", banned = [\"hit\"]\nOutput: \"ball\"\nExplanation: \n\"hit\" occurs 3 times, but it is a banned word.\n\"ball\" occurs twice (and no other word does), so it is the most frequent non-banned word in the paragraph. \nNote that words in the paragraph are not case sensitive,\nthat punctuation is ignored (even if adjacent to words, such as \"ball,\"), \nand that \"hit\" isn't the answer even though it occurs more because it is banned.\n\nExample 2:\nInput: paragraph = \"a.\", banned = []\nOutput: \"a\"\n\n\u00a0\nConstraints:\n\n1 <= paragraph.length <= 1000\nparagraph consists of English letters, space ' ', or one of the symbols: \"!?',;.\".\n0 <= banned.length <= 100\n1 <= banned[i].length <= 10\nbanned[i] consists of only lowercase English letters.\n\n"], "820. Short Encoding of Words": ["https://leetcode.com/problems/short-encoding-of-words", "A valid encoding of an array of words is any reference string s and array of indices indices such that:\n\nwords.length == indices.length\nThe reference string s ends with the '#' character.\nFor each index indices[i], the substring of s starting from indices[i] and up to (but not including) the next '#' character is equal to words[i].\n\nGiven an array of words, return the length of the shortest reference string s possible of any valid encoding of words.\n\u00a0\nExample 1:\nInput: words = [\"time\", \"me\", \"bell\"]\nOutput: 10\nExplanation: A valid encoding would be s = \"time#bell#\" and indices = [0, 2, 5].\nwords[0] = \"time\", the substring of s starting from indices[0] = 0 to the next '#' is underlined in \"time#bell#\"\nwords[1] = \"me\", the substring of s starting from indices[1] = 2 to the next '#' is underlined in \"time#bell#\"\nwords[2] = \"bell\", the substring of s starting from indices[2] = 5 to the next '#' is underlined in \"time#bell#\"\n\nExample 2:\nInput: words = [\"t\"]\nOutput: 2\nExplanation: A valid encoding would be s = \"t#\" and indices = [0].\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 2000\n1 <= words[i].length <= 7\nwords[i] consists of only lowercase letters.\n\n"], "821. Shortest Distance to a Character": ["https://leetcode.com/problems/shortest-distance-to-a-character", ""], "822. Card Flipping Game": ["https://leetcode.com/problems/card-flipping-game", "You are given two 0-indexed integer arrays fronts and backs of length n, where the ith card has the positive integer fronts[i] printed on the front and backs[i] printed on the back. Initially, each card is placed on a table such that the front number is facing up and the other is facing down. You may flip over any number of cards (possibly zero).\nAfter flipping the cards, an integer is considered good if it is facing down on some card and not facing up on any card.\nReturn the minimum possible good integer after flipping the cards. If there are no good integers, return 0.\n\u00a0\nExample 1:\nInput: fronts = [1,2,4,4,7], backs = [1,3,4,1,3]\nOutput: 2\nExplanation:\nIf we flip the second card, the face up numbers are [1,3,4,4,7] and the face down are [1,2,4,1,3].\n2 is the minimum good integer as it appears facing down but not facing up.\nIt can be shown that 2 is the minimum possible good integer obtainable after flipping some cards.\n\nExample 2:\nInput: fronts = [1], backs = [1]\nOutput: 0\nExplanation:\nThere are no good integers no matter how we flip the cards, so we return 0.\n\n\u00a0\nConstraints:\n\nn == fronts.length == backs.length\n1 <= n <= 1000\n1 <= fronts[i], backs[i] <= 2000\n\n"], "823. Binary Trees With Factors": ["https://leetcode.com/problems/binary-trees-with-factors", "Given an array of unique integers, arr, where each integer arr[i] is strictly greater than 1.\nWe make a binary tree using these integers, and each number may be used for any number of times. Each non-leaf node's value should be equal to the product of the values of its children.\nReturn the number of binary trees we can make. The answer may be too large so return the answer modulo 109 + 7.\n\u00a0\nExample 1:\nInput: arr = [2,4]\nOutput: 3\nExplanation: We can make these trees: [2], [4], [4, 2, 2]\nExample 2:\nInput: arr = [2,4,5,10]\nOutput: 7\nExplanation: We can make these trees: [2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2].\n\u00a0\nConstraints:\n\n1 <= arr.length <= 1000\n2 <= arr[i] <= 109\nAll the values of arr are unique.\n\n"], "824. Goat Latin": ["https://leetcode.com/problems/goat-latin", "You are given a string sentence that consist of words separated by spaces. Each word consists of lowercase and uppercase letters only.\nWe would like to convert the sentence to \"Goat Latin\" (a made-up language similar to Pig Latin.) The rules of Goat Latin are as follows:\n\nIf a word begins with a vowel ('a', 'e', 'i', 'o', or 'u'), append \"ma\" to the end of the word.\n\n\t\nFor example, the word \"apple\" becomes \"applema\".\n\n\nIf a word begins with a consonant (i.e., not a vowel), remove the first letter and append it to the end, then add \"ma\".\n\t\nFor example, the word \"goat\" becomes \"oatgma\".\n\n\nAdd one letter 'a' to the end of each word per its word index in the sentence, starting with 1.\n\t\nFor example, the first word gets \"a\" added to the end, the second word gets \"aa\" added to the end, and so on.\n\n\n\nReturn the final sentence representing the conversion from sentence to Goat Latin.\n\u00a0\nExample 1:\nInput: sentence = \"I speak Goat Latin\"\nOutput: \"Imaa peaksmaaa oatGmaaaa atinLmaaaaa\"\nExample 2:\nInput: sentence = \"The quick brown fox jumped over the lazy dog\"\nOutput: \"heTmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa\"\n\n\u00a0\nConstraints:\n\n1 <= sentence.length <= 150\nsentence consists of English letters and spaces.\nsentence has no leading or trailing spaces.\nAll the words in sentence are separated by a single space.\n\n"], "825. Friends Of Appropriate Ages": ["https://leetcode.com/problems/friends-of-appropriate-ages", "There are n persons on a social media website. You are given an integer array ages where ages[i] is the age of the ith person.\nA Person x will not send a friend request to a person y (x != y) if any of the following conditions is true:\n\nage[y] <= 0.5 * age[x] + 7\nage[y] > age[x]\nage[y] > 100 && age[x] < 100\n\nOtherwise, x will send a friend request to y.\nNote that if x sends a request to y, y will not necessarily send a request to x. Also, a person will not send a friend request to themself.\nReturn the total number of friend requests made.\n\u00a0\nExample 1:\nInput: ages = [16,16]\nOutput: 2\nExplanation: 2 people friend request each other.\n\nExample 2:\nInput: ages = [16,17,18]\nOutput: 2\nExplanation: Friend requests are made 17 -> 16, 18 -> 17.\n\nExample 3:\nInput: ages = [20,30,100,110,120]\nOutput: 3\nExplanation: Friend requests are made 110 -> 100, 120 -> 110, 120 -> 100.\n\n\u00a0\nConstraints:\n\nn == ages.length\n1 <= n <= 2 * 104\n1 <= ages[i] <= 120\n\n"], "826. Most Profit Assigning Work": ["https://leetcode.com/problems/most-profit-assigning-work", "You have n jobs and m workers. You are given three arrays: difficulty, profit, and worker where:\n\ndifficulty[i] and profit[i] are the difficulty and the profit of the ith job, and\nworker[j] is the ability of jth worker (i.e., the jth worker can only complete a job with difficulty at most worker[j]).\n\nEvery worker can be assigned at most one job, but one job can be completed multiple times.\n\nFor example, if three workers attempt the same job that pays $1, then the total profit will be $3. If a worker cannot complete any job, their profit is $0.\n\nReturn the maximum profit we can achieve after assigning the workers to the jobs.\n\u00a0\nExample 1:\nInput: difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7]\nOutput: 100\nExplanation: Workers are assigned jobs of difficulty [4,4,6,6] and they get a profit of [20,20,30,30] separately.\n\nExample 2:\nInput: difficulty = [85,47,57], profit = [24,66,99], worker = [40,25,25]\nOutput: 0\n\n\u00a0\nConstraints:\n\nn == difficulty.length\nn == profit.length\nm == worker.length\n1 <= n, m <= 104\n1 <= difficulty[i], profit[i], worker[i] <= 105\n\n"], "827. Making A Large Island": ["https://leetcode.com/problems/making-a-large-island", "You are given an n x n binary matrix grid. You are allowed to change at most one 0 to be 1.\nReturn the size of the largest island in grid after applying this operation.\nAn island is a 4-directionally connected group of 1s.\n\u00a0\nExample 1:\nInput: grid = [[1,0],[0,1]]\nOutput: 3\nExplanation: Change one 0 to 1 and connect two 1s, then we get an island with area = 3.\n\nExample 2:\nInput: grid = [[1,1],[1,0]]\nOutput: 4\nExplanation: Change the 0 to 1 and make the island bigger, only one island with area = 4.\nExample 3:\nInput: grid = [[1,1],[1,1]]\nOutput: 4\nExplanation: Can't change any 0 to 1, only one island with area = 4.\n\n\u00a0\nConstraints:\n\nn == grid.length\nn == grid[i].length\n1 <= n <= 500\ngrid[i][j] is either 0 or 1.\n"], "828. Count Unique Characters of All Substrings of a Given String": ["https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string", "Let's define a function countUniqueChars(s) that returns the number of unique characters on s.\n\nFor example, calling countUniqueChars(s) if s = \"LEETCODE\" then \"L\", \"T\", \"C\", \"O\", \"D\" are the unique characters since they appear only once in s, therefore countUniqueChars(s) = 5.\n\nGiven a string s, return the sum of countUniqueChars(t) where t is a substring of s.\nNotice that some substrings can be repeated so in this case you have to count the repeated ones too.\n\u00a0\nExample 1:\nInput: s = \"ABC\"\nOutput: 10\nExplanation: All possible substrings are: \"A\",\"B\",\"C\",\"AB\",\"BC\" and \"ABC\".\nEvery substring is composed with only unique letters.\nSum of lengths of all substring is 1 + 1 + 1 + 2 + 2 + 3 = 10\n\nExample 2:\nInput: s = \"ABA\"\nOutput: 8\nExplanation: The same as example 1, except countUniqueChars(\"ABA\") = 1.\n\nExample 3:\nInput: s = \"LEETCODE\"\nOutput: 92\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns consists of uppercase English letters only.\n\n"], "829. Consecutive Numbers Sum": ["https://leetcode.com/problems/consecutive-numbers-sum", "Given an integer n, return the number of ways you can write n as the sum of consecutive positive integers.\n\u00a0\nExample 1:\nInput: n = 5\nOutput: 2\nExplanation: 5 = 2 + 3\n\nExample 2:\nInput: n = 9\nOutput: 3\nExplanation: 9 = 4 + 5 = 2 + 3 + 4\n\nExample 3:\nInput: n = 15\nOutput: 4\nExplanation: 15 = 8 + 7 = 4 + 5 + 6 = 1 + 2 + 3 + 4 + 5\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\n\n"], "830. Positions of Large Groups": ["https://leetcode.com/problems/positions-of-large-groups", "In a string s\u00a0of lowercase letters, these letters form consecutive groups of the same character.\nFor example, a string like s = \"abbxxxxzyy\" has the groups \"a\", \"bb\", \"xxxx\", \"z\", and\u00a0\"yy\".\nA group is identified by an interval\u00a0[start, end], where\u00a0start\u00a0and\u00a0end\u00a0denote the start and end\u00a0indices (inclusive) of the group. In the above example,\u00a0\"xxxx\"\u00a0has the interval\u00a0[3,6].\nA group is considered\u00a0large\u00a0if it has 3 or more characters.\nReturn\u00a0the intervals of every large group sorted in\u00a0increasing order by start index.\n\u00a0\nExample 1:\nInput: s = \"abbxxxxzzy\"\nOutput: [[3,6]]\nExplanation: \"xxxx\" is the only large group with start index 3 and end index 6.\n\nExample 2:\nInput: s = \"abc\"\nOutput: []\nExplanation: We have groups \"a\", \"b\", and \"c\", none of which are large groups.\n\nExample 3:\nInput: s = \"abcdddeeeeaabbbcd\"\nOutput: [[3,5],[6,9],[12,14]]\nExplanation: The large groups are \"ddd\", \"eeee\", and \"bbb\".\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\ns contains lowercase English letters only.\n\n"], "831. Masking Personal Information": ["https://leetcode.com/problems/masking-personal-information", "You are given a personal information string s, representing either an email address or a phone number. Return the masked personal information using the below rules.\nEmail address:\nAn email address is:\n\nA name consisting of uppercase and lowercase English letters, followed by\nThe '@' symbol, followed by\nThe domain consisting of uppercase and lowercase English letters with a dot '.' somewhere in the middle (not the first or last character).\n\nTo mask an email:\n\nThe uppercase letters in the name and domain must be converted to lowercase letters.\nThe middle letters of the name (i.e., all but the first and last letters) must be replaced by 5 asterisks \"*****\".\n\nPhone number:\nA phone number is formatted as follows:\n\nThe phone number contains 10-13 digits.\nThe last 10 digits make up the local number.\nThe remaining 0-3 digits, in the beginning, make up the country code.\nSeparation characters from the set {'+', '-', '(', ')', ' '} separate the above digits in some way.\n\nTo mask a phone number:\n\nRemove all separation characters.\nThe masked phone number should have the form:\n\t\n\"***-***-XXXX\" if the country code has 0 digits.\n\"+*-***-***-XXXX\" if the country code has 1 digit.\n\"+**-***-***-XXXX\" if the country code has 2 digits.\n\"+***-***-***-XXXX\" if the country code has 3 digits.\n\n\n\"XXXX\" is the last 4 digits of the local number.\n\n\u00a0\nExample 1:\nInput: s = \"LeetCode@LeetCode.com\"\nOutput: \"l*****e@leetcode.com\"\nExplanation: s is an email address.\nThe name and domain are converted to lowercase, and the middle of the name is replaced by 5 asterisks.\n\nExample 2:\nInput: s = \"AB@qq.com\"\nOutput: \"a*****b@qq.com\"\nExplanation: s is an email address.\nThe name and domain are converted to lowercase, and the middle of the name is replaced by 5 asterisks.\nNote that even though \"ab\" is 2 characters, it still must have 5 asterisks in the middle.\n\nExample 3:\nInput: s = \"1(234)567-890\"\nOutput: \"***-***-7890\"\nExplanation: s is a phone number.\nThere are 10 digits, so the local number is 10 digits and the country code is 0 digits.\nThus, the resulting masked number is \"***-***-7890\".\n\n\u00a0\nConstraints:\n\ns is either a valid email or a phone number.\nIf s is an email:\n\t\n8 <= s.length <= 40\ns consists of uppercase and lowercase English letters and exactly one '@' symbol and '.' symbol.\n\n\nIf s is a phone number:\n\t\n10 <= s.length <= 20\ns consists of digits, spaces, and the symbols '(', ')', '-', and '+'.\n\n\n\n"], "832. Flipping an Image": ["https://leetcode.com/problems/flipping-an-image", "Given an n x n binary matrix image, flip the image horizontally, then invert it, and return the resulting image.\nTo flip an image horizontally means that each row of the image is reversed.\n\nFor example, flipping [1,1,0] horizontally results in [0,1,1].\n\nTo invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0.\n\nFor example, inverting [0,1,1] results in [1,0,0].\n\n\u00a0\nExample 1:\nInput: image = [[1,1,0],[1,0,1],[0,0,0]]\nOutput: [[1,0,0],[0,1,0],[1,1,1]]\nExplanation: First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].\nThen, invert the image: [[1,0,0],[0,1,0],[1,1,1]]\n\nExample 2:\nInput: image = [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]\nOutput: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\nExplanation: First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].\nThen invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\n\n\u00a0\nConstraints:\n\nn == image.length\nn == image[i].length\n1 <= n <= 20\nimages[i][j] is either 0 or 1.\n\n"], "833. Find And Replace in String": ["https://leetcode.com/problems/find-and-replace-in-string", "You are given a 0-indexed string s that you must perform k replacement operations on. The replacement operations are given as three 0-indexed parallel arrays, indices, sources, and targets, all of length k.\nTo complete the ith replacement operation:\n\nCheck if the substring sources[i] occurs at index indices[i] in the original string s.\nIf it does not occur, do nothing.\nOtherwise if it does occur, replace that substring with targets[i].\n\nFor example, if s = \"abcd\", indices[i] = 0, sources[i] = \"ab\", and targets[i] = \"eee\", then the result of this replacement will be \"eeecd\".\nAll replacement operations must occur simultaneously, meaning the replacement operations should not affect the indexing of each other. The testcases will be generated such that the replacements will not overlap.\n\nFor example, a testcase with s = \"abc\", indices = [0, 1], and sources = [\"ab\",\"bc\"] will not be generated because the \"ab\" and \"bc\" replacements overlap.\n\nReturn the resulting string after performing all replacement operations on s.\nA substring is a contiguous sequence of characters in a string.\n\u00a0\nExample 1:\n\nInput: s = \"abcd\", indices = [0, 2], sources = [\"a\", \"cd\"], targets = [\"eee\", \"ffff\"]\nOutput: \"eeebffff\"\nExplanation:\n\"a\" occurs at index 0 in s, so we replace it with \"eee\".\n\"cd\" occurs at index 2 in s, so we replace it with \"ffff\".\n\nExample 2:\n\nInput: s = \"abcd\", indices = [0, 2], sources = [\"ab\",\"ec\"], targets = [\"eee\",\"ffff\"]\nOutput: \"eeecd\"\nExplanation:\n\"ab\" occurs at index 0 in s, so we replace it with \"eee\".\n\"ec\" does not occur at index 2 in s, so we do nothing.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\nk == indices.length == sources.length == targets.length\n1 <= k <= 100\n0 <= indexes[i] < s.length\n1 <= sources[i].length, targets[i].length <= 50\ns consists of only lowercase English letters.\nsources[i] and targets[i] consist of only lowercase English letters.\n\n"], "834. Sum of Distances in Tree": ["https://leetcode.com/problems/sum-of-distances-in-tree", "There is an undirected connected tree with n nodes labeled from 0 to n - 1 and n - 1 edges.\nYou are given the integer n and the array edges where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nReturn an array answer of length n where answer[i] is the sum of the distances between the ith node in the tree and all other nodes.\n\u00a0\nExample 1:\n\nInput: n = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]\nOutput: [8,12,6,10,10,10]\nExplanation: The tree is shown above.\nWe can see that dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5)\nequals 1 + 1 + 2 + 2 + 2 = 8.\nHence, answer[0] = 8, and so on.\n\nExample 2:\n\nInput: n = 1, edges = []\nOutput: [0]\n\nExample 3:\n\nInput: n = 2, edges = [[1,0]]\nOutput: [1,1]\n\n\u00a0\nConstraints:\n\n1 <= n <= 3 * 104\nedges.length == n - 1\nedges[i].length == 2\n0 <= ai, bi < n\nai != bi\nThe given input represents a valid tree.\n\n"], "835. Image Overlap": ["https://leetcode.com/problems/image-overlap", "You are given two images, img1 and img2, represented as binary, square matrices of size n x n. A binary matrix has only 0s and 1s as values.\nWe translate one image however we choose by sliding all the 1 bits left, right, up, and/or down any number of units. We then place it on top of the other image. We can then calculate the overlap by counting the number of positions that have a 1 in both images.\nNote also that a translation does not include any kind of rotation. Any 1 bits that are translated outside of the matrix borders are erased.\nReturn the largest possible overlap.\n\u00a0\nExample 1:\n\nInput: img1 = [[1,1,0],[0,1,0],[0,1,0]], img2 = [[0,0,0],[0,1,1],[0,0,1]]\nOutput: 3\nExplanation: We translate img1 to right by 1 unit and down by 1 unit.\n\nThe number of positions that have a 1 in both images is 3 (shown in red).\n\n\nExample 2:\nInput: img1 = [[1]], img2 = [[1]]\nOutput: 1\n\nExample 3:\nInput: img1 = [[0]], img2 = [[0]]\nOutput: 0\n\n\u00a0\nConstraints:\n\nn == img1.length == img1[i].length\nn == img2.length == img2[i].length\n1 <= n <= 30\nimg1[i][j] is either 0 or 1.\nimg2[i][j] is either 0 or 1.\n\n"], "836. Rectangle Overlap": ["https://leetcode.com/problems/rectangle-overlap", "An axis-aligned rectangle is represented as a list [x1, y1, x2, y2], where (x1, y1) is the coordinate of its bottom-left corner, and (x2, y2) is the coordinate of its top-right corner. Its top and bottom edges are parallel to the X-axis, and its left and right edges are parallel to the Y-axis.\nTwo rectangles overlap if the area of their intersection is positive. To be clear, two rectangles that only touch at the corner or edges do not overlap.\nGiven two axis-aligned rectangles rec1 and rec2, return true if they overlap, otherwise return false.\n\u00a0\nExample 1:\nInput: rec1 = [0,0,2,2], rec2 = [1,1,3,3]\nOutput: true\nExample 2:\nInput: rec1 = [0,0,1,1], rec2 = [1,0,2,1]\nOutput: false\nExample 3:\nInput: rec1 = [0,0,1,1], rec2 = [2,2,3,3]\nOutput: false\n\n\u00a0\nConstraints:\n\nrect1.length == 4\nrect2.length == 4\n-109 <= rec1[i], rec2[i] <= 109\nrec1 and rec2 represent a valid rectangle with a non-zero area.\n\n"], "837. New 21 Game": ["https://leetcode.com/problems/new-21-game", "Alice plays the following game, loosely based on the card game \"21\".\nAlice starts with 0 points and draws numbers while she has less than k points. During each draw, she gains an integer number of points randomly from the range [1, maxPts], where maxPts is an integer. Each draw is independent and the outcomes have equal probabilities.\nAlice stops drawing numbers when she gets k or more points.\nReturn the probability that Alice has n or fewer points.\nAnswers within 10-5 of the actual answer are considered accepted.\n\u00a0\nExample 1:\nInput: n = 10, k = 1, maxPts = 10\nOutput: 1.00000\nExplanation: Alice gets a single card, then stops.\n\nExample 2:\nInput: n = 6, k = 1, maxPts = 10\nOutput: 0.60000\nExplanation: Alice gets a single card, then stops.\nIn 6 out of 10 possibilities, she is at or below 6 points.\n\nExample 3:\nInput: n = 21, k = 17, maxPts = 10\nOutput: 0.73278\n\n\u00a0\nConstraints:\n\n0 <= k <= n <= 104\n1 <= maxPts <= 104\n\n"], "838. Push Dominoes": ["https://leetcode.com/problems/push-dominoes", "There are n dominoes in a line, and we place each domino vertically upright. In the beginning, we simultaneously push some of the dominoes either to the left or to the right.\nAfter each second, each domino that is falling to the left pushes the adjacent domino on the left. Similarly, the dominoes falling to the right push their adjacent dominoes standing on the right.\nWhen a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces.\nFor the purposes of this question, we will consider that a falling domino expends no additional force to a falling or already fallen domino.\nYou are given a string dominoes representing the initial state where:\n\ndominoes[i] = 'L', if the ith domino has been pushed to the left,\ndominoes[i] = 'R', if the ith domino has been pushed to the right, and\ndominoes[i] = '.', if the ith domino has not been pushed.\n\nReturn a string representing the final state.\n\u00a0\nExample 1:\nInput: dominoes = \"RR.L\"\nOutput: \"RR.L\"\nExplanation: The first domino expends no additional force on the second domino.\n\nExample 2:\n\nInput: dominoes = \".L.R...LR..L..\"\nOutput: \"LL.RR.LLRRLL..\"\n\n\u00a0\nConstraints:\n\nn == dominoes.length\n1 <= n <= 105\ndominoes[i] is either 'L', 'R', or '.'.\n\n"], "839. Similar String Groups": ["https://leetcode.com/problems/similar-string-groups", "Two strings X\u00a0and Y\u00a0are similar if we can swap two letters (in different positions) of X, so that\u00a0it equals Y. Also two strings X and Y are similar if they are equal.\nFor example, \"tars\"\u00a0and \"rats\"\u00a0are similar (swapping at positions 0 and 2), and \"rats\" and \"arts\" are similar, but \"star\" is not similar to \"tars\", \"rats\", or \"arts\".\nTogether, these form two connected groups by similarity: {\"tars\", \"rats\", \"arts\"} and {\"star\"}.\u00a0 Notice that \"tars\" and \"arts\" are in the same group even though they are not similar.\u00a0 Formally, each group is such that a word is in the group if and only if it is similar to at least one other word in the group.\nWe are given a list strs of strings where every string in strs is an anagram of every other string in strs. How many groups are there?\n\u00a0\nExample 1:\nInput: strs = [\"tars\",\"rats\",\"arts\",\"star\"]\nOutput: 2\n\nExample 2:\nInput: strs = [\"omv\",\"ovm\"]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= strs.length <= 300\n1 <= strs[i].length <= 300\nstrs[i] consists of lowercase letters only.\nAll words in strs have the same length and are anagrams of each other.\n\n"], "840. Magic Squares In Grid": ["https://leetcode.com/problems/magic-squares-in-grid", "A 3 x 3 magic square is a 3 x 3 grid filled with distinct numbers from 1 to 9 such that each row, column, and both diagonals all have the same sum.\nGiven a row x col\u00a0grid\u00a0of integers, how many 3 x 3 \"magic square\" subgrids are there?\u00a0 (Each subgrid is contiguous).\n\u00a0\nExample 1:\n\nInput: grid = [[4,3,8,4],[9,5,1,9],[2,7,6,2]]\nOutput: 1\nExplanation: \nThe following subgrid is a 3 x 3 magic square:\n\nwhile this one is not:\n\nIn total, there is only one magic square inside the given grid.\n\nExample 2:\nInput: grid = [[8]]\nOutput: 0\n\n\u00a0\nConstraints:\n\nrow == grid.length\ncol == grid[i].length\n1 <= row, col <= 10\n0 <= grid[i][j] <= 15\n\n"], "841. Keys and Rooms": ["https://leetcode.com/problems/keys-and-rooms", "There are n rooms labeled from 0 to n - 1\u00a0and all the rooms are locked except for room 0. Your goal is to visit all the rooms. However, you cannot enter a locked room without having its key.\nWhen you visit a room, you may find a set of distinct keys in it. Each key has a number on it, denoting which room it unlocks, and you can take all of them with you to unlock the other rooms.\nGiven an array rooms where rooms[i] is the set of keys that you can obtain if you visited room i, return true if you can visit all the rooms, or false otherwise.\n\u00a0\nExample 1:\nInput: rooms = [[1],[2],[3],[]]\nOutput: true\nExplanation: \nWe visit room 0 and pick up key 1.\nWe then visit room 1 and pick up key 2.\nWe then visit room 2 and pick up key 3.\nWe then visit room 3.\nSince we were able to visit every room, we return true.\n\nExample 2:\nInput: rooms = [[1,3],[3,0,1],[2],[0]]\nOutput: false\nExplanation: We can not enter room number 2 since the only key that unlocks it is in that room.\n\n\u00a0\nConstraints:\n\nn == rooms.length\n2 <= n <= 1000\n0 <= rooms[i].length <= 1000\n1 <= sum(rooms[i].length) <= 3000\n0 <= rooms[i][j] < n\nAll the values of rooms[i] are unique.\n\n"], "842. Split Array into Fibonacci Sequence": ["https://leetcode.com/problems/split-array-into-fibonacci-sequence", "You are given a string of digits num, such as \"123456579\". We can split it into a Fibonacci-like sequence [123, 456, 579].\nFormally, a Fibonacci-like sequence is a list f of non-negative integers such that:\n\n0 <= f[i] < 231, (that is, each integer fits in a 32-bit signed integer type),\nf.length >= 3, and\nf[i] + f[i + 1] == f[i + 2] for all 0 <= i < f.length - 2.\n\nNote that when splitting the string into pieces, each piece must not have extra leading zeroes, except if the piece is the number 0 itself.\nReturn any Fibonacci-like sequence split from num, or return [] if it cannot be done.\n\u00a0\nExample 1:\nInput: num = \"1101111\"\nOutput: [11,0,11,11]\nExplanation: The output [110, 1, 111] would also be accepted.\n\nExample 2:\nInput: num = \"112358130\"\nOutput: []\nExplanation: The task is impossible.\n\nExample 3:\nInput: num = \"0123\"\nOutput: []\nExplanation: Leading zeroes are not allowed, so \"01\", \"2\", \"3\" is not valid.\n\n\u00a0\nConstraints:\n\n1 <= num.length <= 200\nnum contains only digits.\n\n"], "843. Guess the Word": ["https://leetcode.com/problems/guess-the-word", "This is an interactive problem.\nYou are given an array of unique strings wordlist where wordlist[i] is 6 letters long, and one word in this list is chosen as secret.\nYou may call Master.guess(word) to guess a word. The guessed word should have type string and must be from the original list with 6 lowercase letters.\nThis function returns an integer type, representing the number of exact matches (value and position) of your guess to the secret word. Also, if your guess is not in the given wordlist, it will return -1 instead.\nFor each test case, you have exactly 10 guesses to guess the word. At the end of any number of calls, if you have made 10 or fewer calls to Master.guess and at least one of these guesses was secret, then you pass the test case.\n\u00a0\nExample 1:\nInput: secret = \"acckzz\", wordlist = [\"acckzz\",\"ccbazz\",\"eiowzz\",\"abcczz\"], numguesses = 10\nOutput: You guessed the secret word correctly.\nExplanation:\nmaster.guess(\"aaaaaa\") returns -1, because \"aaaaaa\" is not in wordlist.\nmaster.guess(\"acckzz\") returns 6, because \"acckzz\" is secret and has all 6 matches.\nmaster.guess(\"ccbazz\") returns 3, because \"ccbazz\" has 3 matches.\nmaster.guess(\"eiowzz\") returns 2, because \"eiowzz\" has 2 matches.\nmaster.guess(\"abcczz\") returns 4, because \"abcczz\" has 4 matches.\nWe made 5 calls to master.guess and one of them was the secret, so we pass the test case.\n\nExample 2:\nInput: secret = \"hamada\", wordlist = [\"hamada\",\"khaled\"], numguesses = 10\nOutput: You guessed the secret word correctly.\n\n\u00a0\nConstraints:\n\n1 <= wordlist.length <= 100\nwordlist[i].length == 6\nwordlist[i] consist of lowercase English letters.\nAll the strings of wordlist are unique.\nsecret exists in wordlist.\nnumguesses == 10\n\n"], "844. Backspace String Compare": ["https://leetcode.com/problems/backspace-string-compare", "Given two strings s and t, return true if they are equal when both are typed into empty text editors. '#' means a backspace character.\nNote that after backspacing an empty text, the text will continue empty.\n\u00a0\nExample 1:\nInput: s = \"ab#c\", t = \"ad#c\"\nOutput: true\nExplanation: Both s and t become \"ac\".\n\nExample 2:\nInput: s = \"ab##\", t = \"c#d#\"\nOutput: true\nExplanation: Both s and t become \"\".\n\nExample 3:\nInput: s = \"a#c\", t = \"b\"\nOutput: false\nExplanation: s becomes \"c\" while t becomes \"b\".\n\n\u00a0\nConstraints:\n\n1 <= s.length, t.length <= 200\ns and t only contain lowercase letters and '#' characters.\n\n\u00a0\nFollow up: Can you solve it in O(n) time and O(1) space?\n"], "845. Longest Mountain in Array": ["https://leetcode.com/problems/longest-mountain-in-array", "You may recall that an array arr is a mountain array if and only if:\n\narr.length >= 3\nThere exists some index i (0-indexed) with 0 < i < arr.length - 1 such that:\n\t\narr[0] < arr[1] < ... < arr[i - 1] < arr[i]\narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\n\n\n\nGiven an integer array arr, return the length of the longest subarray, which is a mountain. Return 0 if there is no mountain subarray.\n\u00a0\nExample 1:\nInput: arr = [2,1,4,7,3,2,5]\nOutput: 5\nExplanation: The largest mountain is [1,4,7,3,2] which has length 5.\n\nExample 2:\nInput: arr = [2,2,2]\nOutput: 0\nExplanation: There is no mountain.\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 104\n0 <= arr[i] <= 104\n\n\u00a0\nFollow up:\n\nCan you solve it using only one pass?\nCan you solve it in O(1) space?\n\n"], "846. Hand of Straights": ["https://leetcode.com/problems/hand-of-straights", "Alice has some number of cards and she wants to rearrange the cards into groups so that each group is of size groupSize, and consists of groupSize consecutive cards.\nGiven an integer array hand where hand[i] is the value written on the ith card and an integer groupSize, return true if she can rearrange the cards, or false otherwise.\n\u00a0\nExample 1:\nInput: hand = [1,2,3,6,2,3,4,7,8], groupSize = 3\nOutput: true\nExplanation: Alice's hand can be rearranged as [1,2,3],[2,3,4],[6,7,8]\n\nExample 2:\nInput: hand = [1,2,3,4,5], groupSize = 4\nOutput: false\nExplanation: Alice's hand can not be rearranged into groups of 4.\n\n\n\u00a0\nConstraints:\n\n1 <= hand.length <= 104\n0 <= hand[i] <= 109\n1 <= groupSize <= hand.length\n\n\u00a0\nNote: This question is the same as 1296: https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/\n"], "847. Shortest Path Visiting All Nodes": ["https://leetcode.com/problems/shortest-path-visiting-all-nodes", "You have an undirected, connected graph of n nodes labeled from 0 to n - 1. You are given an array graph where graph[i] is a list of all the nodes connected with node i by an edge.\nReturn the length of the shortest path that visits every node. You may start and stop at any node, you may revisit nodes multiple times, and you may reuse edges.\n\u00a0\nExample 1:\n\nInput: graph = [[1,2,3],[0],[0],[0]]\nOutput: 4\nExplanation: One possible path is [1,0,2,0,3]\n\nExample 2:\n\nInput: graph = [[1],[0,2,4],[1,3,4],[2],[1,2]]\nOutput: 4\nExplanation: One possible path is [0,1,4,2,3]\n\n\u00a0\nConstraints:\n\nn == graph.length\n1 <= n <= 12\n0 <= graph[i].length <\u00a0n\ngraph[i] does not contain i.\nIf graph[a] contains b, then graph[b] contains a.\nThe input graph is always connected.\n\n"], "848. Shifting Letters": ["https://leetcode.com/problems/shifting-letters", "You are given a string s of lowercase English letters and an integer array shifts of the same length.\nCall the shift() of a letter, the next letter in the alphabet, (wrapping around so that 'z' becomes 'a').\n\nFor example, shift('a') = 'b', shift('t') = 'u', and shift('z') = 'a'.\n\nNow for each shifts[i] = x, we want to shift the first i + 1 letters of s, x times.\nReturn the final string after all such shifts to s are applied.\n\u00a0\nExample 1:\nInput: s = \"abc\", shifts = [3,5,9]\nOutput: \"rpl\"\nExplanation: We start with \"abc\".\nAfter shifting the first 1 letters of s by 3, we have \"dbc\".\nAfter shifting the first 2 letters of s by 5, we have \"igc\".\nAfter shifting the first 3 letters of s by 9, we have \"rpl\", the answer.\n\nExample 2:\nInput: s = \"aaa\", shifts = [1,2,3]\nOutput: \"gfd\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns consists of lowercase English letters.\nshifts.length == s.length\n0 <= shifts[i] <= 109\n\n"], "849. Maximize Distance to Closest Person": ["https://leetcode.com/problems/maximize-distance-to-closest-person", "You are given an array representing a row of seats where seats[i] = 1 represents a person sitting in the ith seat, and seats[i] = 0 represents that the ith seat is empty (0-indexed).\nThere is at least one empty seat, and at least one person sitting.\nAlex wants to sit in the seat such that the distance between him and the closest person to him is maximized.\u00a0\nReturn that maximum distance to the closest person.\n\u00a0\nExample 1:\n\nInput: seats = [1,0,0,0,1,0,1]\nOutput: 2\nExplanation: \nIf Alex sits in the second open seat (i.e. seats[2]), then the closest person has distance 2.\nIf Alex sits in any other open seat, the closest person has distance 1.\nThus, the maximum distance to the closest person is 2.\n\nExample 2:\nInput: seats = [1,0,0,0]\nOutput: 3\nExplanation: \nIf Alex sits in the last seat (i.e. seats[3]), the closest person is 3 seats away.\nThis is the maximum distance possible, so the answer is 3.\n\nExample 3:\nInput: seats = [0,1]\nOutput: 1\n\n\u00a0\nConstraints:\n\n2 <= seats.length <= 2 * 104\nseats[i]\u00a0is 0 or\u00a01.\nAt least one seat is empty.\nAt least one seat is occupied.\n\n"], "850. Rectangle Area II": ["https://leetcode.com/problems/rectangle-area-ii", "You are given a 2D array of axis-aligned rectangles. Each rectangle[i] = [xi1, yi1, xi2, yi2] denotes the ith rectangle where (xi1, yi1) are the coordinates of the bottom-left corner, and (xi2, yi2) are the coordinates of the top-right corner.\nCalculate the total area covered by all rectangles in the plane. Any area covered by two or more rectangles should only be counted once.\nReturn the total area. Since the answer may be too large, return it modulo 109 + 7.\n\u00a0\nExample 1:\n\nInput: rectangles = [[0,0,2,2],[1,0,2,3],[1,0,3,1]]\nOutput: 6\nExplanation: A total area of 6 is covered by all three rectangales, as illustrated in the picture.\nFrom (1,1) to (2,2), the green and red rectangles overlap.\nFrom (1,0) to (2,3), all three rectangles overlap.\n\nExample 2:\nInput: rectangles = [[0,0,1000000000,1000000000]]\nOutput: 49\nExplanation: The answer is 1018 modulo (109 + 7), which is 49.\n\n\u00a0\nConstraints:\n\n1 <= rectangles.length <= 200\nrectanges[i].length == 4\n0 <= xi1, yi1, xi2, yi2 <= 109\n\n"], "851. Loud and Rich": ["https://leetcode.com/problems/loud-and-rich", "There is a group of n people labeled from 0 to n - 1 where each person has a different amount of money and a different level of quietness.\nYou are given an array richer where richer[i] = [ai, bi] indicates that ai has more money than bi and an integer array quiet where quiet[i] is the quietness of the ith person. All the given data in richer are logically correct (i.e., the data will not lead you to a situation where x is richer than y and y is richer than x at the same time).\nReturn an integer array answer where answer[x] = y if y is the least quiet person (that is, the person y with the smallest value of quiet[y]) among all people who definitely have equal to or more money than the person x.\n\u00a0\nExample 1:\nInput: richer = [[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]], quiet = [3,2,5,4,6,1,7,0]\nOutput: [5,5,2,5,4,5,6,7]\nExplanation: \nanswer[0] = 5.\nPerson 5 has more money than 3, which has more money than 1, which has more money than 0.\nThe only person who is quieter (has lower quiet[x]) is person 7, but it is not clear if they have more money than person 0.\nanswer[7] = 7.\nAmong all people that definitely have equal to or more money than person 7 (which could be persons 3, 4, 5, 6, or 7), the person who is the quietest (has lower quiet[x]) is person 7.\nThe other answers can be filled out with similar reasoning.\n\nExample 2:\nInput: richer = [], quiet = [0]\nOutput: [0]\n\n\u00a0\nConstraints:\n\nn == quiet.length\n1 <= n <= 500\n0 <= quiet[i] < n\nAll the values of quiet are unique.\n0 <= richer.length <= n * (n - 1) / 2\n0 <= ai, bi < n\nai != bi\nAll the pairs of richer are unique.\nThe observations in richer are all logically consistent.\n\n"], "852. Peak Index in a Mountain Array": ["https://leetcode.com/problems/peak-index-in-a-mountain-array", "Let's call an array arr a mountain\u00a0if the following properties hold:\n\narr.length >= 3\nThere exists some i with\u00a00 < i\u00a0< arr.length - 1\u00a0such that:\n\t\narr[0] < arr[1] < ... arr[i-1] < arr[i] \narr[i] > arr[i+1] > ... > arr[arr.length - 1]\n\n\n\nGiven an integer array arr that is guaranteed to be\u00a0a mountain, return any\u00a0i\u00a0such that\u00a0arr[0] < arr[1] < ... arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1].\n\u00a0\nExample 1:\nInput: arr = [0,1,0]\nOutput: 1\n\nExample 2:\nInput: arr = [0,2,1,0]\nOutput: 1\n\nExample 3:\nInput: arr = [0,10,5,2]\nOutput: 1\n\n\u00a0\nConstraints:\n\n3 <= arr.length <= 104\n0 <= arr[i] <= 106\narr is guaranteed to be a mountain array.\n\n\u00a0\nFollow up: Finding the O(n) is straightforward, could you find an O(log(n)) solution?"], "853. Car Fleet": ["https://leetcode.com/problems/car-fleet", "There are n cars going to the same destination along a one-lane road. The destination is target miles away.\nYou are given two integer array position and speed, both of length n, where position[i] is the position of the ith car and speed[i] is the speed of the ith car (in miles per hour).\nA car can never pass another car ahead of it, but it can catch up to it\u00a0and drive bumper to bumper at the same speed. The faster car will slow down to match the slower car's speed. The distance between these two cars is ignored (i.e., they are assumed to have the same position).\nA car fleet is some non-empty set of cars driving at the same position and same speed. Note that a single car is also a car fleet.\nIf a car catches up to a car fleet right at the destination point, it will still be considered as one car fleet.\nReturn the number of car fleets that will arrive at the destination.\n\u00a0\nExample 1:\nInput: target = 12, position = [10,8,0,5,3], speed = [2,4,1,1,3]\nOutput: 3\nExplanation:\nThe cars starting at 10 (speed 2) and 8 (speed 4) become a fleet, meeting each other at 12.\nThe car starting at 0 does not catch up to any other car, so it is a fleet by itself.\nThe cars starting at 5 (speed 1) and 3 (speed 3) become a fleet, meeting each other at 6. The fleet moves at speed 1 until it reaches target.\nNote that no other cars meet these fleets before the destination, so the answer is 3.\n\nExample 2:\nInput: target = 10, position = [3], speed = [3]\nOutput: 1\nExplanation: There is only one car, hence there is only one fleet.\n\nExample 3:\nInput: target = 100, position = [0,2,4], speed = [4,2,1]\nOutput: 1\nExplanation:\nThe cars starting at 0 (speed 4) and 2 (speed 2) become a fleet, meeting each other at 4. The fleet moves at speed 2.\nThen, the fleet (speed 2) and the car starting at 4 (speed 1) become one fleet, meeting each other at 6. The fleet moves at speed 1 until it reaches target.\n\n\u00a0\nConstraints:\n\nn == position.length == speed.length\n1 <= n <= 105\n0 < target <= 106\n0 <= position[i] < target\nAll the values of position are unique.\n0 < speed[i] <= 106\n\n"], "854. K-Similar Strings": ["https://leetcode.com/problems/k-similar-strings", "Strings s1 and s2 are k-similar (for some non-negative integer k) if we can swap the positions of two letters in s1 exactly k times so that the resulting string equals s2.\nGiven two anagrams s1 and s2, return the smallest k for which s1 and s2 are k-similar.\n\u00a0\nExample 1:\nInput: s1 = \"ab\", s2 = \"ba\"\nOutput: 1\n\nExample 2:\nInput: s1 = \"abc\", s2 = \"bca\"\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= s1.length <= 20\ns2.length == s1.length\ns1 and s2 contain only lowercase letters from the set {'a', 'b', 'c', 'd', 'e', 'f'}.\ns2 is an anagram of s1.\n\n"], "855. Exam Room": ["https://leetcode.com/problems/exam-room", "There is an exam room with n seats in a single row labeled from 0 to n - 1.\nWhen a student enters the room, they must sit in the seat that maximizes the distance to the closest person. If there are multiple such seats, they sit in the seat with the lowest number. If no one is in the room, then the student sits at seat number 0.\nDesign a class that simulates the mentioned exam room.\nImplement the ExamRoom class:\n\nExamRoom(int n) Initializes the object of the exam room with the number of the seats n.\nint seat() Returns the label of the seat at which the next student will set.\nvoid leave(int p) Indicates that the student sitting at seat p will leave the room. It is guaranteed that there will be a student sitting at seat p.\n\n\u00a0\nExample 1:\nInput\n[\"ExamRoom\", \"seat\", \"seat\", \"seat\", \"seat\", \"leave\", \"seat\"]\n[[10], [], [], [], [], [4], []]\nOutput\n[null, 0, 9, 4, 2, null, 5]\n\nExplanation\nExamRoom examRoom = new ExamRoom(10);\nexamRoom.seat(); // return 0, no one is in the room, then the student sits at seat number 0.\nexamRoom.seat(); // return 9, the student sits at the last seat number 9.\nexamRoom.seat(); // return 4, the student sits at the last seat number 4.\nexamRoom.seat(); // return 2, the student sits at the last seat number 2.\nexamRoom.leave(4);\nexamRoom.seat(); // return 5, the student sits at the last seat number 5.\n\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\nIt is guaranteed that there is a student sitting at seat p.\nAt most 104 calls will be made to seat and leave.\n\n"], "856. Score of Parentheses": ["https://leetcode.com/problems/score-of-parentheses", "Given a balanced parentheses string s, return the score of the string.\nThe score of a balanced parentheses string is based on the following rule:\n\n\"()\" has score 1.\nAB has score A + B, where A and B are balanced parentheses strings.\n(A) has score 2 * A, where A is a balanced parentheses string.\n\n\u00a0\nExample 1:\nInput: s = \"()\"\nOutput: 1\n\nExample 2:\nInput: s = \"(())\"\nOutput: 2\n\nExample 3:\nInput: s = \"()()\"\nOutput: 2\n\n\u00a0\nConstraints:\n\n2 <= s.length <= 50\ns consists of only '(' and ')'.\ns is a balanced parentheses string.\n\n"], "857. Minimum Cost to Hire K Workers": ["https://leetcode.com/problems/minimum-cost-to-hire-k-workers", "There are n workers. You are given two integer arrays quality and wage where quality[i] is the quality of the ith worker and wage[i] is the minimum wage expectation for the ith worker.\nWe want to hire exactly k workers to form a paid group. To hire a group of k workers, we must pay them according to the following rules:\n\nEvery worker in the paid group should be paid in the ratio of their quality compared to other workers in the paid group.\nEvery worker in the paid group must be paid at least their minimum wage expectation.\n\nGiven the integer k, return the least amount of money needed to form a paid group satisfying the above conditions. Answers within 10-5 of the actual answer will be accepted.\n\u00a0\nExample 1:\nInput: quality = [10,20,5], wage = [70,50,30], k = 2\nOutput: 105.00000\nExplanation: We pay 70 to 0th worker and 35 to 2nd worker.\n\nExample 2:\nInput: quality = [3,1,10,10,1], wage = [4,8,2,2,7], k = 3\nOutput: 30.66667\nExplanation: We pay 4 to 0th worker, 13.33333 to 2nd and 3rd workers separately.\n\n\u00a0\nConstraints:\n\nn == quality.length == wage.length\n1 <= k <= n <= 104\n1 <= quality[i], wage[i] <= 104\n\n"], "858. Mirror Reflection": ["https://leetcode.com/problems/mirror-reflection", "There is a special square room with mirrors on each of the four walls. Except for the southwest corner, there are receptors on each of the remaining corners, numbered 0, 1, and 2.\nThe square room has walls of length p\u00a0and a laser ray from the southwest corner first meets the east wall at a distance q from the 0th receptor.\nGiven the two integers p and q, return the number of the receptor that the ray meets first.\nThe test cases are guaranteed so that the ray will meet a receptor eventually.\n\u00a0\nExample 1:\n\nInput: p = 2, q = 1\nOutput: 2\nExplanation: The ray meets receptor 2 the first time it gets reflected back to the left wall.\n\nExample 2:\nInput: p = 3, q = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= q <= p <= 1000\n\n"], "859. Buddy Strings": ["https://leetcode.com/problems/buddy-strings", "Given two strings s and goal, return true if you can swap two letters in s so the result is equal to goal, otherwise, return false.\nSwapping letters is defined as taking two indices i and j (0-indexed) such that i != j and swapping the characters at s[i] and s[j].\n\nFor example, swapping at indices 0 and 2 in \"abcd\" results in \"cbad\".\n\n\u00a0\nExample 1:\nInput: s = \"ab\", goal = \"ba\"\nOutput: true\nExplanation: You can swap s[0] = 'a' and s[1] = 'b' to get \"ba\", which is equal to goal.\n\nExample 2:\nInput: s = \"ab\", goal = \"ab\"\nOutput: false\nExplanation: The only letters you can swap are s[0] = 'a' and s[1] = 'b', which results in \"ba\" != goal.\n\nExample 3:\nInput: s = \"aa\", goal = \"aa\"\nOutput: true\nExplanation: You can swap s[0] = 'a' and s[1] = 'a' to get \"aa\", which is equal to goal.\n\n\u00a0\nConstraints:\n\n1 <= s.length, goal.length <= 2 * 104\ns and goal consist of lowercase letters.\n\n"], "860. Lemonade Change": ["https://leetcode.com/problems/lemonade-change", "At a lemonade stand, each lemonade costs $5. Customers are standing in a queue to buy from you and order one at a time (in the order specified by bills). Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill. You must provide the correct change to each customer so that the net transaction is that the customer pays $5.\nNote that you do not have any change in hand at first.\nGiven an integer array bills where bills[i] is the bill the ith customer pays, return true if you can provide every customer with the correct change, or false otherwise.\n\u00a0\nExample 1:\nInput: bills = [5,5,5,10,20]\nOutput: true\nExplanation: \nFrom the first 3 customers, we collect three $5 bills in order.\nFrom the fourth customer, we collect a $10 bill and give back a $5.\nFrom the fifth customer, we give a $10 bill and a $5 bill.\nSince all customers got correct change, we output true.\n\nExample 2:\nInput: bills = [5,5,10,10,20]\nOutput: false\nExplanation: \nFrom the first two customers in order, we collect two $5 bills.\nFor the next two customers in order, we collect a $10 bill and give back a $5 bill.\nFor the last customer, we can not give the change of $15 back because we only have two $10 bills.\nSince not every customer received the correct change, the answer is false.\n\n\u00a0\nConstraints:\n\n1 <= bills.length <= 105\nbills[i] is either 5, 10, or 20.\n\n"], "861. Score After Flipping Matrix": ["https://leetcode.com/problems/score-after-flipping-matrix", "You are given an m x n binary matrix grid.\nA move consists of choosing any row or column and toggling each value in that row or column (i.e., changing all 0's to 1's, and all 1's to 0's).\nEvery row of the matrix is interpreted as a binary number, and the score of the matrix is the sum of these numbers.\nReturn the highest possible score after making any number of moves (including zero moves).\n\u00a0\nExample 1:\n\nInput: grid = [[0,0,1,1],[1,0,1,0],[1,1,0,0]]\nOutput: 39\nExplanation: 0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39\n\nExample 2:\nInput: grid = [[0]]\nOutput: 1\n\n\u00a0\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 20\ngrid[i][j] is either 0 or 1.\n\n"], "862. Shortest Subarray with Sum at Least K": ["https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k", "Given an integer array nums and an integer k, return the length of the shortest non-empty subarray of nums with a sum of at least k. If there is no such subarray, return -1.\nA subarray is a contiguous part of an array.\n\u00a0\nExample 1:\nInput: nums = [1], k = 1\nOutput: 1\nExample 2:\nInput: nums = [1,2], k = 4\nOutput: -1\nExample 3:\nInput: nums = [2,-1,2], k = 3\nOutput: 3\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n-105 <= nums[i] <= 105\n1 <= k <= 109\n\n"], "863. All Nodes Distance K in Binary Tree": ["https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree", "Given the root of a binary tree, the value of a target node target, and an integer k, return an array of the values of all nodes that have a distance k from the target node.\nYou can return the answer in any order.\n\u00a0\nExample 1:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4], target = 5, k = 2\nOutput: [7,4,1]\nExplanation: The nodes that are a distance 2 from the target node (with value 5) have values 7, 4, and 1.\n\nExample 2:\nInput: root = [1], target = 1, k = 3\nOutput: []\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 500].\n0 <= Node.val <= 500\nAll the values Node.val are unique.\ntarget is the value of one of the nodes in the tree.\n0 <= k <= 1000\n\n"], "864. Shortest Path to Get All Keys": ["https://leetcode.com/problems/shortest-path-to-get-all-keys", "You are given an m x n grid grid where:\n\n'.' is an empty cell.\n'#' is a wall.\n'@' is the starting point.\nLowercase letters represent keys.\nUppercase letters represent locks.\n\nYou start at the starting point and one move consists of walking one space in one of the four cardinal directions. You cannot walk outside the grid, or walk into a wall.\nIf you walk over a key, you can pick it up and you cannot walk over a lock unless you have its corresponding key.\nFor some 1 <= k <= 6, there is exactly one lowercase and one uppercase letter of the first k letters of the English alphabet in the grid. This means that there is exactly one key for each lock, and one lock for each key; and also that the letters used to represent the keys and locks were chosen in the same order as the English alphabet.\nReturn the lowest number of moves to acquire all keys. If it is impossible, return -1.\n\u00a0\nExample 1:\n\nInput: grid = [\"@.a.#\",\"###.#\",\"b.A.B\"]\nOutput: 8\nExplanation: Note that the goal is to obtain all the keys not to open all the locks.\n\nExample 2:\n\nInput: grid = [\"@..aA\",\"..B#.\",\"....b\"]\nOutput: 6\n\nExample 3:\n\nInput: grid = [\"@Aa\"]\nOutput: -1\n\n\u00a0\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 30\ngrid[i][j] is either an English letter, '.', '#', or '@'.\nThe number of keys in the grid is in the range [1, 6].\nEach key in the grid is unique.\nEach key in the grid has a matching lock.\n\n"], "865. Smallest Subtree with all the Deepest Nodes": ["https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes", "Given the root of a binary tree, the depth of each node is the shortest distance to the root.\nReturn the smallest subtree such that it contains all the deepest nodes in the original tree.\nA node is called the deepest if it has the largest depth possible among any node in the entire tree.\nThe subtree of a node is a tree consisting of that node, plus the set of all descendants of that node.\n\u00a0\nExample 1:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4]\nOutput: [2,7,4]\nExplanation: We return the node with value 2, colored in yellow in the diagram.\nThe nodes coloured in blue are the deepest nodes of the tree.\nNotice that nodes 5, 3 and 2 contain the deepest nodes in the tree but node 2 is the smallest subtree among them, so we return it.\n\nExample 2:\nInput: root = [1]\nOutput: [1]\nExplanation: The root is the deepest node in the tree.\n\nExample 3:\nInput: root = [0,1,3,null,2]\nOutput: [2]\nExplanation: The deepest node in the tree is 2, the valid subtrees are the subtrees of nodes 2, 1 and 0 but the subtree of node 2 is the smallest.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree will be in the range [1, 500].\n0 <= Node.val <= 500\nThe values of the nodes in the tree are unique.\n\n\u00a0\nNote: This question is the same as 1123: https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/\n"], "866. Prime Palindrome": ["https://leetcode.com/problems/prime-palindrome", "Given an integer n, return the smallest prime palindrome greater than or equal to n.\nAn integer is prime if it has exactly two divisors: 1 and itself. Note that 1 is not a prime number.\n\nFor example, 2, 3, 5, 7, 11, and 13 are all primes.\n\nAn integer is a palindrome if it reads the same from left to right as it does from right to left.\n\nFor example, 101 and 12321 are palindromes.\n\nThe test cases are generated so that the answer always exists and is in the range [2, 2 * 108].\n\u00a0\nExample 1:\nInput: n = 6\nOutput: 7\nExample 2:\nInput: n = 8\nOutput: 11\nExample 3:\nInput: n = 13\nOutput: 101\n\n\u00a0\nConstraints:\n\n1 <= n <= 108\n\n"], "867. Transpose Matrix": ["https://leetcode.com/problems/transpose-matrix", "Given a 2D integer array matrix, return the transpose of matrix.\nThe transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix's row and column indices.\n\n\u00a0\nExample 1:\nInput: matrix = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [[1,4,7],[2,5,8],[3,6,9]]\n\nExample 2:\nInput: matrix = [[1,2,3],[4,5,6]]\nOutput: [[1,4],[2,5],[3,6]]\n\n\u00a0\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 1000\n1 <= m * n <= 105\n-109 <= matrix[i][j] <= 109\n\n"], "868. Binary Gap": ["https://leetcode.com/problems/binary-gap", "Given a positive integer n, find and return the longest distance between any two adjacent 1's in the binary representation of n. If there are no two adjacent 1's, return 0.\nTwo 1's are adjacent if there are only 0's separating them (possibly no 0's). The distance between two 1's is the absolute difference between their bit positions. For example, the two 1's in \"1001\" have a distance of 3.\n\u00a0\nExample 1:\nInput: n = 22\nOutput: 2\nExplanation: 22 in binary is \"10110\".\nThe first adjacent pair of 1's is \"10110\" with a distance of 2.\nThe second adjacent pair of 1's is \"10110\" with a distance of 1.\nThe answer is the largest of these two distances, which is 2.\nNote that \"10110\" is not a valid pair since there is a 1 separating the two 1's underlined.\n\nExample 2:\nInput: n = 8\nOutput: 0\nExplanation: 8 in binary is \"1000\".\nThere are not any adjacent pairs of 1's in the binary representation of 8, so we return 0.\n\nExample 3:\nInput: n = 5\nOutput: 2\nExplanation: 5 in binary is \"101\".\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\n\n"], "869. Reordered Power of 2": ["https://leetcode.com/problems/reordered-power-of-2", "You are given an integer n. We reorder the digits in any order (including the original order) such that the leading digit is not zero.\nReturn true if and only if we can do this so that the resulting number is a power of two.\n\u00a0\nExample 1:\nInput: n = 1\nOutput: true\n\nExample 2:\nInput: n = 10\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\n\n"], "870. Advantage Shuffle": ["https://leetcode.com/problems/advantage-shuffle", "You are given two integer arrays nums1 and nums2 both of the same length. The advantage of nums1 with respect to nums2 is the number of indices i for which nums1[i] > nums2[i].\nReturn any permutation of nums1 that maximizes its advantage with respect to nums2.\n\u00a0\nExample 1:\nInput: nums1 = [2,7,11,15], nums2 = [1,10,4,11]\nOutput: [2,11,7,15]\nExample 2:\nInput: nums1 = [12,24,8,32], nums2 = [13,25,32,11]\nOutput: [24,32,8,12]\n\n\u00a0\nConstraints:\n\n1 <= nums1.length <= 105\nnums2.length == nums1.length\n0 <= nums1[i], nums2[i] <= 109\n\n"], "871. Minimum Number of Refueling Stops": ["https://leetcode.com/problems/minimum-number-of-refueling-stops", "A car travels from a starting position to a destination which is target miles east of the starting position.\nThere are gas stations along the way. The gas stations are represented as an array stations where stations[i] = [positioni, fueli] indicates that the ith gas station is positioni miles east of the starting position and has fueli liters of gas.\nThe car starts with an infinite tank of gas, which initially has startFuel liters of fuel in it. It uses one liter of gas per one mile that it drives. When the car reaches a gas station, it may stop and refuel, transferring all the gas from the station into the car.\nReturn the minimum number of refueling stops the car must make in order to reach its destination. If it cannot reach the destination, return -1.\nNote that if the car reaches a gas station with 0 fuel left, the car can still refuel there. If the car reaches the destination with 0 fuel left, it is still considered to have arrived.\n\u00a0\nExample 1:\nInput: target = 1, startFuel = 1, stations = []\nOutput: 0\nExplanation: We can reach the target without refueling.\n\nExample 2:\nInput: target = 100, startFuel = 1, stations = [[10,100]]\nOutput: -1\nExplanation: We can not reach the target (or even the first gas station).\n\nExample 3:\nInput: target = 100, startFuel = 10, stations = [[10,60],[20,30],[30,30],[60,40]]\nOutput: 2\nExplanation: We start with 10 liters of fuel.\nWe drive to position 10, expending 10 liters of fuel.  We refuel from 0 liters to 60 liters of gas.\nThen, we drive from position 10 to position 60 (expending 50 liters of fuel),\nand refuel from 10 liters to 50 liters of gas.  We then drive to and reach the target.\nWe made 2 refueling stops along the way, so we return 2.\n\n\u00a0\nConstraints:\n\n1 <= target, startFuel <= 109\n0 <= stations.length <= 500\n0 <= positioni <= positioni+1 < target\n1 <= fueli < 109\n\n"], "872. Leaf-Similar Trees": ["https://leetcode.com/problems/leaf-similar-trees", "Consider all the leaves of a binary tree, from\u00a0left to right order, the values of those\u00a0leaves form a leaf value sequence.\n\nFor example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).\nTwo binary trees are considered leaf-similar\u00a0if their leaf value sequence is the same.\nReturn true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.\n\u00a0\nExample 1:\n\nInput: root1 = [3,5,1,6,2,9,8,null,null,7,4], root2 = [3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]\nOutput: true\n\nExample 2:\n\nInput: root1 = [1,2,3], root2 = [1,3,2]\nOutput: false\n\n\u00a0\nConstraints:\n\nThe number of nodes in each tree will be in the range [1, 200].\nBoth of the given trees will have values in the range [0, 200].\n\n"], "873. Length of Longest Fibonacci Subsequence": ["https://leetcode.com/problems/length-of-longest-fibonacci-subsequence", "A sequence x1, x2, ..., xn is Fibonacci-like if:\n\nn >= 3\nxi + xi+1 == xi+2 for all i + 2 <= n\n\nGiven a strictly increasing array arr of positive integers forming a sequence, return the length of the longest Fibonacci-like subsequence of arr. If one does not exist, return 0.\nA subsequence is derived from another sequence arr by deleting any number of elements (including none) from arr, without changing the order of the remaining elements. For example, [3, 5, 8] is a subsequence of [3, 4, 5, 6, 7, 8].\n\u00a0\nExample 1:\nInput: arr = [1,2,3,4,5,6,7,8]\nOutput: 5\nExplanation: The longest subsequence that is fibonacci-like: [1,2,3,5,8].\nExample 2:\nInput: arr = [1,3,7,11,12,14,18]\nOutput: 3\nExplanation: The longest subsequence that is fibonacci-like: [1,11,12], [3,11,14] or [7,11,18].\n\u00a0\nConstraints:\n\n3 <= arr.length <= 1000\n1 <= arr[i] < arr[i + 1] <= 109\n\n"], "874. Walking Robot Simulation": ["https://leetcode.com/problems/walking-robot-simulation", "A robot on an infinite XY-plane starts at point (0, 0) facing north. The robot can receive a sequence of these three possible types of commands:\n\n-2: Turn left 90 degrees.\n-1: Turn right 90 degrees.\n1 <= k <= 9: Move forward k units, one unit at a time.\n\nSome of the grid squares are obstacles. The ith obstacle is at grid point obstacles[i] = (xi, yi). If the robot runs into an obstacle, then it will instead stay in its current location and move on to the next command.\nReturn the maximum Euclidean distance that the robot ever gets from the origin squared (i.e. if the distance is 5, return 25).\nNote:\n\nNorth means +Y direction.\nEast means +X direction.\nSouth means -Y direction.\nWest means -X direction.\n\n\u00a0\nExample 1:\nInput: commands = [4,-1,3], obstacles = []\nOutput: 25\nExplanation: The robot starts at (0, 0):\n1. Move north 4 units to (0, 4).\n2. Turn right.\n3. Move east 3 units to (3, 4).\nThe furthest point the robot ever gets from the origin is (3, 4), which squared is 32 + 42 = 25 units away.\n\nExample 2:\nInput: commands = [4,-1,4,-2,4], obstacles = [[2,4]]\nOutput: 65\nExplanation: The robot starts at (0, 0):\n1. Move north 4 units to (0, 4).\n2. Turn right.\n3. Move east 1 unit and get blocked by the obstacle at (2, 4), robot is at (1, 4).\n4. Turn left.\n5. Move north 4 units to (1, 8).\nThe furthest point the robot ever gets from the origin is (1, 8), which squared is 12 + 82 = 65 units away.\n\nExample 3:\nInput: commands = [6,-1,-1,6], obstacles = []\nOutput: 36\nExplanation: The robot starts at (0, 0):\n1. Move north 6 units to (0, 6).\n2. Turn right.\n3. Turn right.\n4. Move south 6 units to (0, 0).\nThe furthest point the robot ever gets from the origin is (0, 6), which squared is 62 = 36 units away.\n\n\u00a0\nConstraints:\n\n1 <= commands.length <= 104\ncommands[i] is either -2, -1, or an integer in the range [1, 9].\n0 <= obstacles.length <= 104\n-3 * 104 <= xi, yi <= 3 * 104\nThe answer is guaranteed to be less than 231.\n\n"], "875. Koko Eating Bananas": ["https://leetcode.com/problems/koko-eating-bananas", "Koko loves to eat bananas. There are n piles of bananas, the ith pile has piles[i] bananas. The guards have gone and will come back in h hours.\nKoko can decide her bananas-per-hour eating speed of k. Each hour, she chooses some pile of bananas and eats k bananas from that pile. If the pile has less than k bananas, she eats all of them instead and will not eat any more bananas during this hour.\nKoko likes to eat slowly but still wants to finish eating all the bananas before the guards return.\nReturn the minimum integer k such that she can eat all the bananas within h hours.\n\u00a0\nExample 1:\nInput: piles = [3,6,7,11], h = 8\nOutput: 4\n\nExample 2:\nInput: piles = [30,11,23,4,20], h = 5\nOutput: 30\n\nExample 3:\nInput: piles = [30,11,23,4,20], h = 6\nOutput: 23\n\n\u00a0\nConstraints:\n\n1 <= piles.length <= 104\npiles.length <= h <= 109\n1 <= piles[i] <= 109\n\n"], "876. Middle of the Linked List": ["https://leetcode.com/problems/middle-of-the-linked-list", "Given the head of a singly linked list, return the middle node of the linked list.\nIf there are two middle nodes, return the second middle node.\n\u00a0\nExample 1:\n\nInput: head = [1,2,3,4,5]\nOutput: [3,4,5]\nExplanation: The middle node of the list is node 3.\n\nExample 2:\n\nInput: head = [1,2,3,4,5,6]\nOutput: [4,5,6]\nExplanation: Since the list has two middle nodes with values 3 and 4, we return the second one.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is in the range [1, 100].\n1 <= Node.val <= 100\n\n"], "877. Stone Game": ["https://leetcode.com/problems/stone-game", ""], "878. Nth Magical Number": ["https://leetcode.com/problems/nth-magical-number", "A positive integer is magical if it is divisible by either a or b.\nGiven the three integers n, a, and b, return the nth magical number. Since the answer may be very large, return it modulo 109 + 7.\n\u00a0\nExample 1:\nInput: n = 1, a = 2, b = 3\nOutput: 2\n\nExample 2:\nInput: n = 4, a = 2, b = 3\nOutput: 6\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\n2 <= a, b <= 4 * 104\n\n"], "879. Profitable Schemes": ["https://leetcode.com/problems/profitable-schemes", "There is a group of n members, and a list of various crimes they could commit. The ith crime generates a profit[i] and requires group[i] members to participate in it. If a member participates in one crime, that member can't participate in another crime.\nLet's call a profitable scheme any subset of these crimes that generates at least minProfit profit, and the total number of members participating in that subset of crimes is at most n.\nReturn the number of schemes that can be chosen. Since the answer may be very large, return it modulo 109 + 7.\n\u00a0\nExample 1:\nInput: n = 5, minProfit = 3, group = [2,2], profit = [2,3]\nOutput: 2\nExplanation: To make a profit of at least 3, the group could either commit crimes 0 and 1, or just crime 1.\nIn total, there are 2 schemes.\nExample 2:\nInput: n = 10, minProfit = 5, group = [2,3,5], profit = [6,7,8]\nOutput: 7\nExplanation: To make a profit of at least 5, the group could commit any crimes, as long as they commit one.\nThere are 7 possible schemes: (0), (1), (2), (0,1), (0,2), (1,2), and (0,1,2).\n\u00a0\nConstraints:\n\n1 <= n <= 100\n0 <= minProfit <= 100\n1 <= group.length <= 100\n1 <= group[i] <= 100\nprofit.length == group.length\n0 <= profit[i] <= 100\n\n"], "880. Decoded String at Index": ["https://leetcode.com/problems/decoded-string-at-index", "You are given an encoded string s. To decode the string to a tape, the encoded string is read one character at a time and the following steps are taken:\n\nIf the character read is a letter, that letter is written onto the tape.\nIf the character read is a digit d, the entire current tape is repeatedly written d - 1 more times in total.\n\nGiven an integer k, return the kth letter (1-indexed) in the decoded string.\n\u00a0\nExample 1:\nInput: s = \"leet2code3\", k = 10\nOutput: \"o\"\nExplanation: The decoded string is \"leetleetcodeleetleetcodeleetleetcode\".\nThe 10th letter in the string is \"o\".\n\nExample 2:\nInput: s = \"ha22\", k = 5\nOutput: \"h\"\nExplanation: The decoded string is \"hahahaha\".\nThe 5th letter is \"h\".\n\nExample 3:\nInput: s = \"a2345678999999999999999\", k = 1\nOutput: \"a\"\nExplanation: The decoded string is \"a\" repeated 8301530446056247680 times.\nThe 1st letter is \"a\".\n\n\u00a0\nConstraints:\n\n2 <= s.length <= 100\ns consists of lowercase English letters and digits 2 through 9.\ns starts with a letter.\n1 <= k <= 109\nIt is guaranteed that k is less than or equal to the length of the decoded string.\nThe decoded string is guaranteed to have less than 263 letters.\n\n"], "881. Boats to Save People": ["https://leetcode.com/problems/boats-to-save-people", "You are given an array people where people[i] is the weight of the ith person, and an infinite number of boats where each boat can carry a maximum weight of limit. Each boat carries at most two people at the same time, provided the sum of the weight of those people is at most limit.\nReturn the minimum number of boats to carry every given person.\n\u00a0\nExample 1:\nInput: people = [1,2], limit = 3\nOutput: 1\nExplanation: 1 boat (1, 2)\n\nExample 2:\nInput: people = [3,2,2,1], limit = 3\nOutput: 3\nExplanation: 3 boats (1, 2), (2) and (3)\n\nExample 3:\nInput: people = [3,5,3,4], limit = 5\nOutput: 4\nExplanation: 4 boats (3), (3), (4), (5)\n\n\u00a0\nConstraints:\n\n1 <= people.length <= 5 * 104\n1 <= people[i] <= limit <= 3 * 104\n\n"], "882. Reachable Nodes In Subdivided Graph": ["https://leetcode.com/problems/reachable-nodes-in-subdivided-graph", "You are given an undirected graph (the \"original graph\") with n nodes labeled from 0 to n - 1. You decide to subdivide each edge in the graph into a chain of nodes, with the number of new nodes varying between each edge.\nThe graph is given as a 2D array of edges where edges[i] = [ui, vi, cnti] indicates that there is an edge between nodes ui and vi in the original graph, and cnti is the total number of new nodes that you will subdivide the edge into. Note that cnti == 0 means you will not subdivide the edge.\nTo subdivide the edge [ui, vi], replace it with (cnti + 1) new edges and cnti new nodes. The new nodes are x1, x2, ..., xcnti, and the new edges are [ui, x1], [x1, x2], [x2, x3], ..., [xcnti-1, xcnti], [xcnti, vi].\nIn this new graph, you want to know how many nodes are reachable from the node 0, where a node is reachable if the distance is maxMoves or less.\nGiven the original graph and maxMoves, return the number of nodes that are reachable from node 0 in the new graph.\n\u00a0\nExample 1:\n\nInput: edges = [[0,1,10],[0,2,1],[1,2,2]], maxMoves = 6, n = 3\nOutput: 13\nExplanation: The edge subdivisions are shown in the image above.\nThe nodes that are reachable are highlighted in yellow.\n\nExample 2:\nInput: edges = [[0,1,4],[1,2,6],[0,2,8],[1,3,1]], maxMoves = 10, n = 4\nOutput: 23\n\nExample 3:\nInput: edges = [[1,2,4],[1,4,5],[1,3,1],[2,3,4],[3,4,5]], maxMoves = 17, n = 5\nOutput: 1\nExplanation: Node 0 is disconnected from the rest of the graph, so only node 0 is reachable.\n\n\u00a0\nConstraints:\n\n0 <= edges.length <= min(n * (n - 1) / 2, 104)\nedges[i].length == 3\n0 <= ui < vi < n\nThere are no multiple edges in the graph.\n0 <= cnti <= 104\n0 <= maxMoves <= 109\n1 <= n <= 3000\n\n"], "883. Projection Area of 3D Shapes": ["https://leetcode.com/problems/projection-area-of-3d-shapes", "You are given an n x n grid where we place some 1 x 1 x 1 cubes that are axis-aligned with the x, y, and z axes.\nEach value v = grid[i][j] represents a tower of v cubes placed on top of the cell (i, j).\nWe view the projection of these cubes onto the xy, yz, and zx planes.\nA projection is like a shadow, that maps our 3-dimensional figure to a 2-dimensional plane. We are viewing the \"shadow\" when looking at the cubes from the top, the front, and the side.\nReturn the total area of all three projections.\n\u00a0\nExample 1:\n\nInput: grid = [[1,2],[3,4]]\nOutput: 17\nExplanation: Here are the three projections (\"shadows\") of the shape made with each axis-aligned plane.\n\nExample 2:\nInput: grid = [[2]]\nOutput: 5\n\nExample 3:\nInput: grid = [[1,0],[0,2]]\nOutput: 8\n\n\u00a0\nConstraints:\n\nn == grid.length == grid[i].length\n1 <= n <= 50\n0 <= grid[i][j] <= 50\n\n"], "884. Uncommon Words from Two Sentences": ["https://leetcode.com/problems/uncommon-words-from-two-sentences", "A sentence is a string of single-space separated words where each word consists only of lowercase letters.\nA word is uncommon if it appears exactly once in one of the sentences, and does not appear in the other sentence.\nGiven two sentences s1 and s2, return a list of all the uncommon words. You may return the answer in any order.\n\u00a0\nExample 1:\nInput: s1 = \"this apple is sweet\", s2 = \"this apple is sour\"\nOutput: [\"sweet\",\"sour\"]\nExample 2:\nInput: s1 = \"apple apple\", s2 = \"banana\"\nOutput: [\"banana\"]\n\n\u00a0\nConstraints:\n\n1 <= s1.length, s2.length <= 200\ns1 and s2 consist of lowercase English letters and spaces.\ns1 and s2 do not have leading or trailing spaces.\nAll the words in s1 and s2 are separated by a single space.\n\n"], "885. Spiral Matrix III": ["https://leetcode.com/problems/spiral-matrix-iii", "You start at the cell (rStart, cStart) of an rows x cols grid facing east. The northwest corner is at the first row and column in the grid, and the southeast corner is at the last row and column.\nYou will walk in a clockwise spiral shape to visit every position in this grid. Whenever you move outside the grid's boundary, we continue our walk outside the grid (but may return to the grid boundary later.). Eventually, we reach all rows * cols spaces of the grid.\nReturn an array of coordinates representing the positions of the grid in the order you visited them.\n\u00a0\nExample 1:\n\nInput: rows = 1, cols = 4, rStart = 0, cStart = 0\nOutput: [[0,0],[0,1],[0,2],[0,3]]\n\nExample 2:\n\nInput: rows = 5, cols = 6, rStart = 1, cStart = 4\nOutput: [[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]\n\n\u00a0\nConstraints:\n\n1 <= rows, cols <= 100\n0 <= rStart < rows\n0 <= cStart < cols\n\n"], "886. Possible Bipartition": ["https://leetcode.com/problems/possible-bipartition", "We want to split a group of n people (labeled from 1 to n) into two groups of any size. Each person may dislike some other people, and they should not go into the same group.\nGiven the integer n and the array dislikes where dislikes[i] = [ai, bi] indicates that the person labeled ai does not like the person labeled bi, return true if it is possible to split everyone into two groups in this way.\n\u00a0\nExample 1:\nInput: n = 4, dislikes = [[1,2],[1,3],[2,4]]\nOutput: true\nExplanation: group1 [1,4] and group2 [2,3].\n\nExample 2:\nInput: n = 3, dislikes = [[1,2],[1,3],[2,3]]\nOutput: false\n\nExample 3:\nInput: n = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= n <= 2000\n0 <= dislikes.length <= 104\ndislikes[i].length == 2\n1 <= dislikes[i][j] <= n\nai < bi\nAll the pairs of dislikes are unique.\n\n"], "887. Super Egg Drop": ["https://leetcode.com/problems/super-egg-drop", "You are given k identical eggs and you have access to a building with n floors labeled from 1 to n.\nYou know that there exists a floor f where 0 <= f <= n such that any egg dropped at a floor higher than f will break, and any egg dropped at or below floor f will not break.\nEach move, you may take an unbroken egg and drop it from any floor x (where 1 <= x <= n). If the egg breaks, you can no longer use it. However, if the egg does not break, you may reuse it in future moves.\nReturn the minimum number of moves that you need to determine with certainty what the value of f is.\n\u00a0\nExample 1:\nInput: k = 1, n = 2\nOutput: 2\nExplanation: \nDrop the egg from floor 1. If it breaks, we know that f = 0.\nOtherwise, drop the egg from floor 2. If it breaks, we know that f = 1.\nIf it does not break, then we know f = 2.\nHence, we need at minimum 2 moves to determine with certainty what the value of f is.\n\nExample 2:\nInput: k = 2, n = 6\nOutput: 3\n\nExample 3:\nInput: k = 3, n = 14\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= k <= 100\n1 <= n <= 104\n\n"], "888. Fair Candy Swap": ["https://leetcode.com/problems/fair-candy-swap", "Alice and Bob have a different total number of candies. You are given two integer arrays aliceSizes and bobSizes where aliceSizes[i] is the number of candies of the ith box of candy that Alice has and bobSizes[j] is the number of candies of the jth box of candy that Bob has.\nSince they are friends, they would like to exchange one candy box each so that after the exchange, they both have the same total amount of candy. The total amount of candy a person has is the sum of the number of candies in each box they have.\nReturn an integer array answer where answer[0] is the number of candies in the box that Alice must exchange, and answer[1] is the number of candies in the box that Bob must exchange. If there are multiple answers, you may return any one of them. It is guaranteed that at least one answer exists.\n\u00a0\nExample 1:\nInput: aliceSizes = [1,1], bobSizes = [2,2]\nOutput: [1,2]\n\nExample 2:\nInput: aliceSizes = [1,2], bobSizes = [2,3]\nOutput: [1,2]\n\nExample 3:\nInput: aliceSizes = [2], bobSizes = [1,3]\nOutput: [2,3]\n\n\u00a0\nConstraints:\n\n1 <= aliceSizes.length, bobSizes.length <= 104\n1 <= aliceSizes[i], bobSizes[j] <= 105\nAlice and Bob have a different total number of candies.\nThere will be at least one valid answer for the given input.\n\n"], "889. Construct Binary Tree from Preorder and Postorder Traversal": ["https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal", "Given two integer arrays, preorder and postorder where preorder is the preorder traversal of a binary tree of distinct values and postorder is the postorder traversal of the same tree, reconstruct and return the binary tree.\nIf there exist multiple answers, you can return any of them.\n\u00a0\nExample 1:\n\nInput: preorder = [1,2,4,5,3,6,7], postorder = [4,5,2,6,7,3,1]\nOutput: [1,2,3,4,5,6,7]\n\nExample 2:\nInput: preorder = [1], postorder = [1]\nOutput: [1]\n\n\u00a0\nConstraints:\n\n1 <= preorder.length <= 30\n1 <= preorder[i] <= preorder.length\nAll the values of preorder are unique.\npostorder.length == preorder.length\n1 <= postorder[i] <= postorder.length\nAll the values of postorder are unique.\nIt is guaranteed that preorder and postorder are the preorder traversal and postorder traversal of the same binary tree.\n\n"], "890. Find and Replace Pattern": ["https://leetcode.com/problems/find-and-replace-pattern", "Given a list of strings words and a string pattern, return a list of words[i] that match pattern. You may return the answer in any order.\nA word matches the pattern if there exists a permutation of letters p so that after replacing every letter x in the pattern with p(x), we get the desired word.\nRecall that a permutation of letters is a bijection from letters to letters: every letter maps to another letter, and no two letters map to the same letter.\n\u00a0\nExample 1:\nInput: words = [\"abc\",\"deq\",\"mee\",\"aqq\",\"dkd\",\"ccc\"], pattern = \"abb\"\nOutput: [\"mee\",\"aqq\"]\nExplanation: \"mee\" matches the pattern because there is a permutation {a -> m, b -> e, ...}. \n\"ccc\" does not match the pattern because {a -> c, b -> c, ...} is not a permutation, since a and b map to the same letter.\n\nExample 2:\nInput: words = [\"a\",\"b\",\"c\"], pattern = \"a\"\nOutput: [\"a\",\"b\",\"c\"]\n\n\u00a0\nConstraints:\n\n1 <= pattern.length <= 20\n1 <= words.length <= 50\nwords[i].length == pattern.length\npattern and words[i] are lowercase English letters.\n\n"], "891. Sum of Subsequence Widths": ["https://leetcode.com/problems/sum-of-subsequence-widths", "The width of a sequence is the difference between the maximum and minimum elements in the sequence.\nGiven an array of integers nums, return the sum of the widths of all the non-empty subsequences of nums. Since the answer may be very large, return it modulo 109 + 7.\nA subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].\n\u00a0\nExample 1:\nInput: nums = [2,1,3]\nOutput: 6\nExplanation: The subsequences are [1], [2], [3], [2,1], [2,3], [1,3], [2,1,3].\nThe corresponding widths are 0, 0, 0, 1, 1, 2, 2.\nThe sum of these widths is 6.\n\nExample 2:\nInput: nums = [2]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n1 <= nums[i] <= 105\n\n"], "892. Surface Area of 3D Shapes": ["https://leetcode.com/problems/surface-area-of-3d-shapes", "You are given an n x n grid where you have placed some 1 x 1 x 1 cubes. Each value v = grid[i][j] represents a tower of v cubes placed on top of cell (i, j).\nAfter placing these cubes, you have decided to glue any directly adjacent cubes to each other, forming several irregular 3D shapes.\nReturn the total surface area of the resulting shapes.\nNote: The bottom face of each shape counts toward its surface area.\n\u00a0\nExample 1:\n\nInput: grid = [[1,2],[3,4]]\nOutput: 34\n\nExample 2:\n\nInput: grid = [[1,1,1],[1,0,1],[1,1,1]]\nOutput: 32\n\nExample 3:\n\nInput: grid = [[2,2,2],[2,1,2],[2,2,2]]\nOutput: 46\n\n\u00a0\nConstraints:\n\nn == grid.length == grid[i].length\n1 <= n <= 50\n0 <= grid[i][j] <= 50\n\n"], "893. Groups of Special-Equivalent Strings": ["https://leetcode.com/problems/groups-of-special-equivalent-strings", "You are given an array of strings of the same length words.\nIn one move, you can swap any two even indexed characters or any two odd indexed characters of a string words[i].\nTwo strings words[i] and words[j] are special-equivalent if after any number of moves, words[i] == words[j].\n\nFor example, words[i] = \"zzxy\" and words[j] = \"xyzz\" are special-equivalent because we may make the moves \"zzxy\" -> \"xzzy\" -> \"xyzz\".\n\nA group of special-equivalent strings from words is a non-empty subset of words such that:\n\nEvery pair of strings in the group are special equivalent, and\nThe group is the largest size possible (i.e., there is not a string words[i] not in the group such that words[i] is special-equivalent to every string in the group).\n\nReturn the number of groups of special-equivalent strings from words.\n\u00a0\nExample 1:\nInput: words = [\"abcd\",\"cdab\",\"cbad\",\"xyzz\",\"zzxy\",\"zzyx\"]\nOutput: 3\nExplanation: \nOne group is [\"abcd\", \"cdab\", \"cbad\"], since they are all pairwise special equivalent, and none of the other strings is all pairwise special equivalent to these.\nThe other two groups are [\"xyzz\", \"zzxy\"] and [\"zzyx\"].\nNote that in particular, \"zzxy\" is not special equivalent to \"zzyx\".\n\nExample 2:\nInput: words = [\"abc\",\"acb\",\"bac\",\"bca\",\"cab\",\"cba\"]\nOutput: 3\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 1000\n1 <= words[i].length <= 20\nwords[i] consist of lowercase English letters.\nAll the strings are of the same length.\n\n"], "894. All Possible Full Binary Trees": ["https://leetcode.com/problems/all-possible-full-binary-trees", "Given an integer n, return a list of all possible full binary trees with n nodes. Each node of each tree in the answer must have Node.val == 0.\nEach element of the answer is the root node of one possible tree. You may return the final list of trees in any order.\nA full binary tree is a binary tree where each node has exactly 0 or 2 children.\n\u00a0\nExample 1:\n\nInput: n = 7\nOutput: [[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]\n\nExample 2:\nInput: n = 3\nOutput: [[0,0,0]]\n\n\u00a0\nConstraints:\n\n1 <= n <= 20\n\n"], "895. Maximum Frequency Stack": ["https://leetcode.com/problems/maximum-frequency-stack", "Design a stack-like data structure to push elements to the stack and pop the most frequent element from the stack.\nImplement the FreqStack class:\n\nFreqStack() constructs an empty frequency stack.\nvoid push(int val) pushes an integer val onto the top of the stack.\nint pop() removes and returns the most frequent element in the stack.\n\t\nIf there is a tie for the most frequent element, the element closest to the stack's top is removed and returned.\n\n\n\n\u00a0\nExample 1:\nInput\n[\"FreqStack\", \"push\", \"push\", \"push\", \"push\", \"push\", \"push\", \"pop\", \"pop\", \"pop\", \"pop\"]\n[[], [5], [7], [5], [7], [4], [5], [], [], [], []]\nOutput\n[null, null, null, null, null, null, null, 5, 7, 5, 4]\n\nExplanation\nFreqStack freqStack = new FreqStack();\nfreqStack.push(5); // The stack is [5]\nfreqStack.push(7); // The stack is [5,7]\nfreqStack.push(5); // The stack is [5,7,5]\nfreqStack.push(7); // The stack is [5,7,5,7]\nfreqStack.push(4); // The stack is [5,7,5,7,4]\nfreqStack.push(5); // The stack is [5,7,5,7,4,5]\nfreqStack.pop();   // return 5, as 5 is the most frequent. The stack becomes [5,7,5,7,4].\nfreqStack.pop();   // return 7, as 5 and 7 is the most frequent, but 7 is closest to the top. The stack becomes [5,7,5,4].\nfreqStack.pop();   // return 5, as 5 is the most frequent. The stack becomes [5,7,4].\nfreqStack.pop();   // return 4, as 4, 5 and 7 is the most frequent, but 4 is closest to the top. The stack becomes [5,7].\n\n\u00a0\nConstraints:\n\n0 <= val <= 109\nAt most 2 * 104 calls will be made to push and pop.\nIt is guaranteed that there will be at least one element in the stack before calling pop.\n\n"], "896. Monotonic Array": ["https://leetcode.com/problems/monotonic-array", "An array is monotonic if it is either monotone increasing or monotone decreasing.\nAn array nums is monotone increasing if for all i <= j, nums[i] <= nums[j]. An array nums is monotone decreasing if for all i <= j, nums[i] >= nums[j].\nGiven an integer array nums, return true if the given array is monotonic, or false otherwise.\n\u00a0\nExample 1:\nInput: nums = [1,2,2,3]\nOutput: true\n\nExample 2:\nInput: nums = [6,5,4,4]\nOutput: true\n\nExample 3:\nInput: nums = [1,3,2]\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n-105 <= nums[i] <= 105\n\n"], "897. Increasing Order Search Tree": ["https://leetcode.com/problems/increasing-order-search-tree", "Given the root of a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only one right child.\n\u00a0\nExample 1:\n\nInput: root = [5,3,6,2,4,null,8,1,null,null,null,7,9]\nOutput: [1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]\n\nExample 2:\n\nInput: root = [5,1,7]\nOutput: [1,null,5,null,7]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the given tree will be in the range [1, 100].\n0 <= Node.val <= 1000\n\n"], "898. Bitwise ORs of Subarrays": ["https://leetcode.com/problems/bitwise-ors-of-subarrays", "We have an array arr of non-negative integers.\nFor every (contiguous) subarray sub = [arr[i], arr[i + 1], ..., arr[j]] (with i <= j), we take the bitwise OR of all the elements in sub, obtaining a result arr[i] | arr[i + 1] | ... | arr[j].\nReturn the number of possible results. Results that occur more than once are only counted once in the final answer\n\u00a0\nExample 1:\nInput: arr = [0]\nOutput: 1\nExplanation: There is only one possible result: 0.\n\nExample 2:\nInput: arr = [1,1,2]\nOutput: 3\nExplanation: The possible subarrays are [1], [1], [2], [1, 1], [1, 2], [1, 1, 2].\nThese yield the results 1, 1, 2, 1, 3, 3.\nThere are 3 unique values, so the answer is 3.\n\nExample 3:\nInput: arr = [1,2,4]\nOutput: 6\nExplanation: The possible results are 1, 2, 3, 4, 6, and 7.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5 * 104\n0 <= nums[i]\u00a0<= 109\n\n"], "899. Orderly Queue": ["https://leetcode.com/problems/orderly-queue", "You are given a string s and an integer k. You can choose one of the first k letters of s and append it at the end of the string..\nReturn the lexicographically smallest string you could have after applying the mentioned step any number of moves.\n\u00a0\nExample 1:\nInput: s = \"cba\", k = 1\nOutput: \"acb\"\nExplanation: \nIn the first move, we move the 1st character 'c' to the end, obtaining the string \"bac\".\nIn the second move, we move the 1st character 'b' to the end, obtaining the final result \"acb\".\n\nExample 2:\nInput: s = \"baaca\", k = 3\nOutput: \"aaabc\"\nExplanation: \nIn the first move, we move the 1st character 'b' to the end, obtaining the string \"aacab\".\nIn the second move, we move the 3rd character 'c' to the end, obtaining the final result \"aaabc\".\n\n\u00a0\nConstraints:\n\n1 <= k <= s.length <= 1000\ns consist of lowercase English letters.\n\n"], "900. RLE Iterator": ["https://leetcode.com/problems/rle-iterator", "We can use run-length encoding (i.e., RLE) to encode a sequence of integers. In a run-length encoded array of even length encoding (0-indexed), for all even i, encoding[i] tells us the number of times that the non-negative integer value encoding[i + 1] is repeated in the sequence.\n\nFor example, the sequence arr = [8,8,8,5,5] can be encoded to be encoding = [3,8,2,5]. encoding = [3,8,0,9,2,5] and encoding = [2,8,1,8,2,5] are also valid RLE of arr.\n\nGiven a run-length encoded array, design an iterator that iterates through it.\nImplement the RLEIterator class:\n\nRLEIterator(int[] encoded) Initializes the object with the encoded array encoded.\nint next(int n) Exhausts the next n elements and returns the last element exhausted in this way. If there is no element left to exhaust, return -1 instead.\n\n\u00a0\nExample 1:\nInput\n[\"RLEIterator\", \"next\", \"next\", \"next\", \"next\"]\n[[[3, 8, 0, 9, 2, 5]], [2], [1], [1], [2]]\nOutput\n[null, 8, 8, 5, -1]\n\nExplanation\nRLEIterator rLEIterator = new RLEIterator([3, 8, 0, 9, 2, 5]); // This maps to the sequence [8,8,8,5,5].\nrLEIterator.next(2); // exhausts 2 terms of the sequence, returning 8. The remaining sequence is now [8, 5, 5].\nrLEIterator.next(1); // exhausts 1 term of the sequence, returning 8. The remaining sequence is now [5, 5].\nrLEIterator.next(1); // exhausts 1 term of the sequence, returning 5. The remaining sequence is now [5].\nrLEIterator.next(2); // exhausts 2 terms, returning -1. This is because the first term exhausted was 5,\nbut the second term did not exist. Since the last term exhausted does not exist, we return -1.\n\n\u00a0\nConstraints:\n\n2 <= encoding.length <= 1000\nencoding.length is even.\n0 <= encoding[i] <= 109\n1 <= n <= 109\nAt most 1000 calls will be made to next.\n\n"], "901. Online Stock Span": ["https://leetcode.com/problems/online-stock-span", "Design an algorithm that collects daily price quotes for some stock and returns the span of that stock's price for the current day.\nThe span of the stock's price today is defined as the maximum number of consecutive days (starting from today and going backward) for which the stock price was less than or equal to today's price.\n\nFor example, if the price of a stock over the next 7 days were [100,80,60,70,60,75,85], then the stock spans would be [1,1,1,2,1,4,6].\n\nImplement the StockSpanner class:\n\nStockSpanner() Initializes the object of the class.\nint next(int price) Returns the span of the stock's price given that today's price is price.\n\n\u00a0\nExample 1:\nInput\n[\"StockSpanner\", \"next\", \"next\", \"next\", \"next\", \"next\", \"next\", \"next\"]\n[[], [100], [80], [60], [70], [60], [75], [85]]\nOutput\n[null, 1, 1, 1, 2, 1, 4, 6]\n\nExplanation\nStockSpanner stockSpanner = new StockSpanner();\nstockSpanner.next(100); // return 1\nstockSpanner.next(80);  // return 1\nstockSpanner.next(60);  // return 1\nstockSpanner.next(70);  // return 2\nstockSpanner.next(60);  // return 1\nstockSpanner.next(75);  // return 4, because the last 4 prices (including today's price of 75) were less than or equal to today's price.\nstockSpanner.next(85);  // return 6\n\n\u00a0\nConstraints:\n\n1 <= price <= 105\nAt most 104 calls will be made to next.\n\n"], "902. Numbers At Most N Given Digit Set": ["https://leetcode.com/problems/numbers-at-most-n-given-digit-set", "Given an array of digits which is sorted in non-decreasing order. You can write numbers using each digits[i] as many times as we want. For example, if digits = ['1','3','5'], we may write numbers such as '13', '551', and '1351315'.\nReturn the number of positive integers that can be generated that are less than or equal to a given integer n.\n\u00a0\nExample 1:\nInput: digits = [\"1\",\"3\",\"5\",\"7\"], n = 100\nOutput: 20\nExplanation: \nThe 20 numbers that can be written are:\n1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.\n\nExample 2:\nInput: digits = [\"1\",\"4\",\"9\"], n = 1000000000\nOutput: 29523\nExplanation: \nWe can write 3 one digit numbers, 9 two digit numbers, 27 three digit numbers,\n81 four digit numbers, 243 five digit numbers, 729 six digit numbers,\n2187 seven digit numbers, 6561 eight digit numbers, and 19683 nine digit numbers.\nIn total, this is 29523 integers that can be written using the digits array.\n\nExample 3:\nInput: digits = [\"7\"], n = 8\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= digits.length <= 9\ndigits[i].length == 1\ndigits[i] is a digit from\u00a0'1'\u00a0to '9'.\nAll the values in\u00a0digits are unique.\ndigits is sorted in\u00a0non-decreasing order.\n1 <= n <= 109\n\n"], "903. Valid Permutations for DI Sequence": ["https://leetcode.com/problems/valid-permutations-for-di-sequence", "You are given a string s of length n where s[i] is either:\n\n'D' means decreasing, or\n'I' means increasing.\n\nA permutation perm of n + 1 integers of all the integers in the range [0, n] is called a valid permutation if for all valid i:\n\nIf s[i] == 'D', then perm[i] > perm[i + 1], and\nIf s[i] == 'I', then perm[i] < perm[i + 1].\n\nReturn the number of valid permutations perm. Since the answer may be large, return it modulo 109 + 7.\n\u00a0\nExample 1:\nInput: s = \"DID\"\nOutput: 5\nExplanation: The 5 valid permutations of (0, 1, 2, 3) are:\n(1, 0, 3, 2)\n(2, 0, 3, 1)\n(2, 1, 3, 0)\n(3, 0, 2, 1)\n(3, 1, 2, 0)\n\nExample 2:\nInput: s = \"D\"\nOutput: 1\n\n\u00a0\nConstraints:\n\nn == s.length\n1 <= n <= 200\ns[i] is either 'I' or 'D'.\n\n"], "904. Fruit Into Baskets": ["https://leetcode.com/problems/fruit-into-baskets", "You are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array fruits where fruits[i] is the type of fruit the ith tree produces.\nYou want to collect as much fruit as possible. However, the owner has some strict rules that you must follow:\n\nYou only have two baskets, and each basket can only hold a single type of fruit. There is no limit on the amount of fruit each basket can hold.\nStarting from any tree of your choice, you must pick exactly one fruit from every tree (including the start tree) while moving to the right. The picked fruits must fit in one of your baskets.\nOnce you reach a tree with fruit that cannot fit in your baskets, you must stop.\n\nGiven the integer array fruits, return the maximum number of fruits you can pick.\n\u00a0\nExample 1:\nInput: fruits = [1,2,1]\nOutput: 3\nExplanation: We can pick from all 3 trees.\n\nExample 2:\nInput: fruits = [0,1,2,2]\nOutput: 3\nExplanation: We can pick from trees [1,2,2].\nIf we had started at the first tree, we would only pick from trees [0,1].\n\nExample 3:\nInput: fruits = [1,2,3,2,2]\nOutput: 4\nExplanation: We can pick from trees [2,3,2,2].\nIf we had started at the first tree, we would only pick from trees [1,2].\n\n\u00a0\nConstraints:\n\n1 <= fruits.length <= 105\n0 <= fruits[i] < fruits.length\n\n"], "905. Sort Array By Parity": ["https://leetcode.com/problems/sort-array-by-parity", "Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.\nReturn any array that satisfies this condition.\n\u00a0\nExample 1:\nInput: nums = [3,1,2,4]\nOutput: [2,4,3,1]\nExplanation: The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.\n\nExample 2:\nInput: nums = [0]\nOutput: [0]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 5000\n0 <= nums[i] <= 5000\n\n"], "906. Super Palindromes": ["https://leetcode.com/problems/super-palindromes", "Let's say a positive integer is a super-palindrome if it is a palindrome, and it is also the square of a palindrome.\nGiven two positive integers left and right represented as strings, return the number of super-palindromes integers in the inclusive range [left, right].\n\u00a0\nExample 1:\nInput: left = \"4\", right = \"1000\"\nOutput: 4\nExplanation: 4, 9, 121, and 484 are superpalindromes.\nNote that 676 is not a superpalindrome: 26 * 26 = 676, but 26 is not a palindrome.\n\nExample 2:\nInput: left = \"1\", right = \"2\"\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= left.length, right.length <= 18\nleft and right consist of only digits.\nleft and right cannot have leading zeros.\nleft and right represent integers in the range [1, 1018 - 1].\nleft is less than or equal to right.\n\n"], "907. Sum of Subarray Minimums": ["https://leetcode.com/problems/sum-of-subarray-minimums", "Given an array of integers arr, find the sum of min(b), where b ranges over every (contiguous) subarray of arr. Since the answer may be large, return the answer modulo 109 + 7.\n\u00a0\nExample 1:\nInput: arr = [3,1,2,4]\nOutput: 17\nExplanation: \nSubarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \nMinimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.\nSum is 17.\n\nExample 2:\nInput: arr = [11,81,94,43,3]\nOutput: 444\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 3 * 104\n1 <= arr[i] <= 3 * 104\n\n"], "908. Smallest Range I": ["https://leetcode.com/problems/smallest-range-i", "You are given an integer array nums and an integer k.\nIn one operation, you can choose any index i where 0 <= i < nums.length and change nums[i] to nums[i] + x where x is an integer from the range [-k, k]. You can apply this operation at most once for each index i.\nThe score of nums is the difference between the maximum and minimum elements in nums.\nReturn the minimum score of nums after applying the mentioned operation at most once for each index in it.\n\u00a0\nExample 1:\nInput: nums = [1], k = 0\nOutput: 0\nExplanation: The score is max(nums) - min(nums) = 1 - 1 = 0.\n\nExample 2:\nInput: nums = [0,10], k = 2\nOutput: 6\nExplanation: Change nums to be [2, 8]. The score is max(nums) - min(nums) = 8 - 2 = 6.\n\nExample 3:\nInput: nums = [1,3,6], k = 3\nOutput: 0\nExplanation: Change nums to be [4, 4, 4]. The score is max(nums) - min(nums) = 4 - 4 = 0.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n0 <= nums[i] <= 104\n0 <= k <= 104\n\n"], "951. Flip Equivalent Binary Trees": ["https://leetcode.com/problems/flip-equivalent-binary-trees", "For a binary tree T, we can define a flip operation as follows: choose any node, and swap the left and right child subtrees.\nA binary tree X\u00a0is flip equivalent to a binary tree Y if and only if we can make X equal to Y after some number of flip operations.\nGiven the roots of two binary trees root1 and root2, return true if the two trees are flip equivalent or false otherwise.\n\u00a0\nExample 1:\n\nInput: root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]\nOutput: true\nExplanation: We flipped at nodes with values 1, 3, and 5.\n\nExample 2:\nInput: root1 = [], root2 = []\nOutput: true\n\nExample 3:\nInput: root1 = [], root2 = [1]\nOutput: false\n\n\u00a0\nConstraints:\n\nThe number of nodes in each tree is in the range [0, 100].\nEach tree will have unique node values in the range [0, 99].\n\n"], "952. Largest Component Size by Common Factor": ["https://leetcode.com/problems/largest-component-size-by-common-factor", "You are given an integer array of unique positive integers nums. Consider the following graph:\n\nThere are nums.length nodes, labeled nums[0] to nums[nums.length - 1],\nThere is an undirected edge between nums[i] and nums[j] if nums[i] and nums[j] share a common factor greater than 1.\n\nReturn the size of the largest connected component in the graph.\n\u00a0\nExample 1:\n\nInput: nums = [4,6,15,35]\nOutput: 4\n\nExample 2:\n\nInput: nums = [20,50,9,63]\nOutput: 2\n\nExample 3:\n\nInput: nums = [2,3,6,7,4,12,21,39]\nOutput: 8\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2 * 104\n1 <= nums[i] <= 105\nAll the values of nums are unique.\n\n"], "953. Verifying an Alien Dictionary": ["https://leetcode.com/problems/verifying-an-alien-dictionary", "In an alien language, surprisingly, they also use English lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters.\nGiven a sequence of words written in the alien language, and the order of the alphabet, return true if and only if the given words are sorted lexicographically in this alien language.\n\u00a0\nExample 1:\nInput: words = [\"hello\",\"leetcode\"], order = \"hlabcdefgijkmnopqrstuvwxyz\"\nOutput: true\nExplanation: As 'h' comes before 'l' in this language, then the sequence is sorted.\n\nExample 2:\nInput: words = [\"word\",\"world\",\"row\"], order = \"worldabcefghijkmnpqstuvxyz\"\nOutput: false\nExplanation: As 'd' comes after 'l' in this language, then words[0] > words[1], hence the sequence is unsorted.\n\nExample 3:\nInput: words = [\"apple\",\"app\"], order = \"abcdefghijklmnopqrstuvwxyz\"\nOutput: false\nExplanation: The first three characters \"app\" match, and the second string is shorter (in size.) According to lexicographical rules \"apple\" > \"app\", because 'l' > '\u2205', where '\u2205' is defined as the blank character which is less than any other character (More info).\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 100\n1 <= words[i].length <= 20\norder.length == 26\nAll characters in words[i] and order are English lowercase letters.\n\n"], "954. Array of Doubled Pairs": ["https://leetcode.com/problems/array-of-doubled-pairs", "Given an integer array of even length arr, return true if it is possible to reorder arr such that arr[2 * i + 1] = 2 * arr[2 * i] for every 0 <= i < len(arr) / 2, or false otherwise.\n\u00a0\nExample 1:\nInput: arr = [3,1,3,6]\nOutput: false\n\nExample 2:\nInput: arr = [2,1,2,6]\nOutput: false\n\nExample 3:\nInput: arr = [4,-2,2,-4]\nOutput: true\nExplanation: We can take two groups, [-2,-4] and [2,4] to form [-2,-4,2,4] or [2,4,-2,-4].\n\n\u00a0\nConstraints:\n\n2 <= arr.length <= 3 * 104\narr.length is even.\n-105 <= arr[i] <= 105\n\n"], "955. Delete Columns to Make Sorted II": ["https://leetcode.com/problems/delete-columns-to-make-sorted-ii", "You are given an array of n strings strs, all of the same length.\nWe may choose any deletion indices, and we delete all the characters in those indices for each string.\nFor example, if we have strs = [\"abcdef\",\"uvwxyz\"] and deletion indices {0, 2, 3}, then the final array after deletions is [\"bef\", \"vyz\"].\nSuppose we chose a set of deletion indices answer such that after deletions, the final array has its elements in lexicographic order (i.e., strs[0] <= strs[1] <= strs[2] <= ... <= strs[n - 1]). Return the minimum possible value of answer.length.\n\u00a0\nExample 1:\nInput: strs = [\"ca\",\"bb\",\"ac\"]\nOutput: 1\nExplanation: \nAfter deleting the first column, strs = [\"a\", \"b\", \"c\"].\nNow strs is in lexicographic order (ie. strs[0] <= strs[1] <= strs[2]).\nWe require at least 1 deletion since initially strs was not in lexicographic order, so the answer is 1.\n\nExample 2:\nInput: strs = [\"xc\",\"yb\",\"za\"]\nOutput: 0\nExplanation: \nstrs is already in lexicographic order, so we do not need to delete anything.\nNote that the rows of strs are not necessarily in lexicographic order:\ni.e., it is NOT necessarily true that (strs[0][0] <= strs[0][1] <= ...)\n\nExample 3:\nInput: strs = [\"zyx\",\"wvu\",\"tsr\"]\nOutput: 3\nExplanation: We have to delete every column.\n\n\u00a0\nConstraints:\n\nn == strs.length\n1 <= n <= 100\n1 <= strs[i].length <= 100\nstrs[i] consists of lowercase English letters.\n\n"], "956. Tallest Billboard": ["https://leetcode.com/problems/tallest-billboard", "You are installing a billboard and want it to have the largest height. The billboard will have two steel supports, one on each side. Each steel support must be an equal height.\nYou are given a collection of rods that can be welded together. For example, if you have rods of lengths 1, 2, and 3, you can weld them together to make a support of length 6.\nReturn the largest possible height of your billboard installation. If you cannot support the billboard, return 0.\n\u00a0\nExample 1:\nInput: rods = [1,2,3,6]\nOutput: 6\nExplanation: We have two disjoint subsets {1,2,3} and {6}, which have the same sum = 6.\n\nExample 2:\nInput: rods = [1,2,3,4,5,6]\nOutput: 10\nExplanation: We have two disjoint subsets {2,3,5} and {4,6}, which have the same sum = 10.\n\nExample 3:\nInput: rods = [1,2]\nOutput: 0\nExplanation: The billboard cannot be supported, so we return 0.\n\n\u00a0\nConstraints:\n\n1 <= rods.length <= 20\n1 <= rods[i] <= 1000\nsum(rods[i]) <= 5000\n\n"], "957. Prison Cells After N Days": ["https://leetcode.com/problems/prison-cells-after-n-days", "There are 8 prison cells in a row and each cell is either occupied or vacant.\nEach day, whether the cell is occupied or vacant changes according to the following rules:\n\nIf a cell has two adjacent neighbors that are both occupied or both vacant, then the cell becomes occupied.\nOtherwise, it becomes vacant.\n\nNote that because the prison is a row, the first and the last cells in the row can't have two adjacent neighbors.\nYou are given an integer array cells where cells[i] == 1 if the ith cell is occupied and cells[i] == 0 if the ith cell is vacant, and you are given an integer n.\nReturn the state of the prison after n days (i.e., n such changes described above).\n\u00a0\nExample 1:\nInput: cells = [0,1,0,1,1,0,0,1], n = 7\nOutput: [0,0,1,1,0,0,0,0]\nExplanation: The following table summarizes the state of the prison on each day:\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]\n\nExample 2:\nInput: cells = [1,0,0,1,0,0,1,0], n = 1000000000\nOutput: [0,0,1,1,1,1,1,0]\n\n\u00a0\nConstraints:\n\ncells.length == 8\ncells[i]\u00a0is either 0 or 1.\n1 <= n <= 109\n\n"], "958. Check Completeness of a Binary Tree": ["https://leetcode.com/problems/check-completeness-of-a-binary-tree", "Given the root of a binary tree, determine if it is a complete binary tree.\nIn a complete binary tree, every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4,5,6]\nOutput: true\nExplanation: Every level before the last is full (ie. levels with node-values {1} and {2, 3}), and all nodes in the last level ({4, 5, 6}) are as far left as possible.\n\nExample 2:\n\nInput: root = [1,2,3,4,5,null,7]\nOutput: false\nExplanation: The node with value 7 isn't as far left as possible.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 100].\n1 <= Node.val <= 1000\n\n"], "959. Regions Cut By Slashes": ["https://leetcode.com/problems/regions-cut-by-slashes", "An n x n grid is composed of 1 x 1 squares where each 1 x 1 square consists of a '/', '\\', or blank space ' '. These characters divide the square into contiguous regions.\nGiven the grid grid represented as a string array, return the number of regions.\nNote that backslash characters are escaped, so a '\\' is represented as '\\\\'.\n\u00a0\nExample 1:\n\nInput: grid = [\" /\",\"/ \"]\nOutput: 2\n\nExample 2:\n\nInput: grid = [\" /\",\"  \"]\nOutput: 1\n\nExample 3:\n\nInput: grid = [\"/\\\\\",\"\\\\/\"]\nOutput: 5\nExplanation: Recall that because \\ characters are escaped, \"\\\\/\" refers to \\/, and \"/\\\\\" refers to /\\.\n\n\u00a0\nConstraints:\n\nn == grid.length == grid[i].length\n1 <= n <= 30\ngrid[i][j] is either '/', '\\', or ' '.\n\n"], "960. Delete Columns to Make Sorted III": ["https://leetcode.com/problems/delete-columns-to-make-sorted-iii", "You are given an array of n strings strs, all of the same length.\nWe may choose any deletion indices, and we delete all the characters in those indices for each string.\nFor example, if we have strs = [\"abcdef\",\"uvwxyz\"] and deletion indices {0, 2, 3}, then the final array after deletions is [\"bef\", \"vyz\"].\nSuppose we chose a set of deletion indices answer such that after deletions, the final array has every string (row) in lexicographic order. (i.e., (strs[0][0] <= strs[0][1] <= ... <= strs[0][strs[0].length - 1]), and (strs[1][0] <= strs[1][1] <= ... <= strs[1][strs[1].length - 1]), and so on). Return the minimum possible value of answer.length.\n\u00a0\nExample 1:\nInput: strs = [\"babca\",\"bbazb\"]\nOutput: 3\nExplanation: After deleting columns 0, 1, and 4, the final array is strs = [\"bc\", \"az\"].\nBoth these rows are individually in lexicographic order (ie. strs[0][0] <= strs[0][1] and strs[1][0] <= strs[1][1]).\nNote that strs[0] > strs[1] - the array strs is not necessarily in lexicographic order.\nExample 2:\nInput: strs = [\"edcba\"]\nOutput: 4\nExplanation: If we delete less than 4 columns, the only row will not be lexicographically sorted.\n\nExample 3:\nInput: strs = [\"ghi\",\"def\",\"abc\"]\nOutput: 0\nExplanation: All rows are already lexicographically sorted.\n\n\u00a0\nConstraints:\n\nn == strs.length\n1 <= n <= 100\n1 <= strs[i].length <= 100\nstrs[i] consists of lowercase English letters.\n\n\n\u00a0\n\n"], "961. N-Repeated Element in Size 2N Array": ["https://leetcode.com/problems/n-repeated-element-in-size-2n-array", "You are given an integer array nums with the following properties:\n\nnums.length == 2 * n.\nnums contains n + 1 unique elements.\nExactly one element of nums is repeated n times.\n\nReturn the element that is repeated n times.\n\u00a0\nExample 1:\nInput: nums = [1,2,3,3]\nOutput: 3\nExample 2:\nInput: nums = [2,1,2,5,3,2]\nOutput: 2\nExample 3:\nInput: nums = [5,1,5,2,5,3,5,4]\nOutput: 5\n\n\u00a0\nConstraints:\n\n2 <= n <= 5000\nnums.length == 2 * n\n0 <= nums[i] <= 104\nnums contains n + 1 unique elements and one of them is repeated exactly n times.\n\n"], "962. Maximum Width Ramp": ["https://leetcode.com/problems/maximum-width-ramp", "A ramp in an integer array nums is a pair (i, j) for which i < j and nums[i] <= nums[j]. The width of such a ramp is j - i.\nGiven an integer array nums, return the maximum width of a ramp in nums. If there is no ramp in nums, return 0.\n\u00a0\nExample 1:\nInput: nums = [6,0,8,2,1,5]\nOutput: 4\nExplanation: The maximum width ramp is achieved at (i, j) = (1, 5): nums[1] = 0 and nums[5] = 5.\n\nExample 2:\nInput: nums = [9,8,1,0,1,9,4,0,4,1]\nOutput: 7\nExplanation: The maximum width ramp is achieved at (i, j) = (2, 9): nums[2] = 1 and nums[9] = 1.\n\n\u00a0\nConstraints:\n\n2 <= nums.length <= 5 * 104\n0 <= nums[i] <= 5 * 104\n\n"], "963. Minimum Area Rectangle II": ["https://leetcode.com/problems/minimum-area-rectangle-ii", "You are given an array of points in the X-Y plane points where points[i] = [xi, yi].\nReturn the minimum area of any rectangle formed from these points, with sides not necessarily parallel to the X and Y axes. If there is not any such rectangle, return 0.\nAnswers within 10-5 of the actual answer will be accepted.\n\u00a0\nExample 1:\n\nInput: points = [[1,2],[2,1],[1,0],[0,1]]\nOutput: 2.00000\nExplanation: The minimum area rectangle occurs at [1,2],[2,1],[1,0],[0,1], with an area of 2.\n\nExample 2:\n\nInput: points = [[0,1],[2,1],[1,1],[1,0],[2,0]]\nOutput: 1.00000\nExplanation: The minimum area rectangle occurs at [1,0],[1,1],[2,1],[2,0], with an area of 1.\n\nExample 3:\n\nInput: points = [[0,3],[1,2],[3,1],[1,3],[2,1]]\nOutput: 0\nExplanation: There is no possible rectangle to form from these points.\n\n\u00a0\nConstraints:\n\n1 <= points.length <= 50\npoints[i].length == 2\n0 <= xi, yi <= 4 * 104\nAll the given points are unique.\n\n"], "964. Least Operators to Express Number": ["https://leetcode.com/problems/least-operators-to-express-number", "Given a single positive integer x, we will write an expression of the form x (op1) x (op2) x (op3) x ... where each operator op1, op2, etc. is either addition, subtraction, multiplication, or division (+, -, *, or /). For example, with x = 3, we might write 3 * 3 / 3 + 3 - 3 which is a value of 3.\nWhen writing such an expression, we adhere to the following conventions:\n\nThe division operator (/) returns rational numbers.\nThere are no parentheses placed anywhere.\nWe use the usual order of operations: multiplication and division happen before addition and subtraction.\nIt is not allowed to use the unary negation operator (-). For example, \"x - x\" is a valid expression as it only uses subtraction, but \"-x + x\" is not because it uses negation.\n\nWe would like to write an expression with the least number of operators such that the expression equals the given target. Return the least number of operators used.\n\u00a0\nExample 1:\nInput: x = 3, target = 19\nOutput: 5\nExplanation: 3 * 3 + 3 * 3 + 3 / 3.\nThe expression contains 5 operations.\n\nExample 2:\nInput: x = 5, target = 501\nOutput: 8\nExplanation: 5 * 5 * 5 * 5 - 5 * 5 * 5 + 5 / 5.\nThe expression contains 8 operations.\n\nExample 3:\nInput: x = 100, target = 100000000\nOutput: 3\nExplanation: 100 * 100 * 100 * 100.\nThe expression contains 3 operations.\n\n\u00a0\nConstraints:\n\n2 <= x <= 100\n1 <= target <= 2 * 108\n\n"], "965. Univalued Binary Tree": ["https://leetcode.com/problems/univalued-binary-tree", "A binary tree is uni-valued if every node in the tree has the same value.\nGiven the root of a binary tree, return true if the given tree is uni-valued, or false otherwise.\n\u00a0\nExample 1:\n\nInput: root = [1,1,1,1,1,null,1]\nOutput: true\n\nExample 2:\n\nInput: root = [2,2,2,5,2]\nOutput: false\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 100].\n0 <= Node.val < 100\n\n"], "966. Vowel Spellchecker": ["https://leetcode.com/problems/vowel-spellchecker", "Given a wordlist, we want to implement a spellchecker that converts a query word into a correct word.\nFor a given query word, the spell checker handles two categories of spelling mistakes:\n\nCapitalization: If the query matches a word in the wordlist (case-insensitive), then the query word is returned with the same case as the case in the wordlist.\n\n\t\nExample: wordlist = [\"yellow\"], query = \"YellOw\": correct = \"yellow\"\nExample: wordlist = [\"Yellow\"], query = \"yellow\": correct = \"Yellow\"\nExample: wordlist = [\"yellow\"], query = \"yellow\": correct = \"yellow\"\n\n\nVowel Errors: If after replacing the vowels ('a', 'e', 'i', 'o', 'u') of the query word with any vowel individually, it matches a word in the wordlist (case-insensitive), then the query word is returned with the same case as the match in the wordlist.\n\t\nExample: wordlist = [\"YellOw\"], query = \"yollow\": correct = \"YellOw\"\nExample: wordlist = [\"YellOw\"], query = \"yeellow\": correct = \"\" (no match)\nExample: wordlist = [\"YellOw\"], query = \"yllw\": correct = \"\" (no match)\n\n\n\nIn addition, the spell checker operates under the following precedence rules:\n\nWhen the query exactly matches a word in the wordlist (case-sensitive), you should return the same word back.\nWhen the query matches a word up to capitlization, you should return the first such match in the wordlist.\nWhen the query matches a word up to vowel errors, you should return the first such match in the wordlist.\nIf the query has no matches in the wordlist, you should return the empty string.\n\nGiven some queries, return a list of words answer, where answer[i] is the correct word for query = queries[i].\n\u00a0\nExample 1:\nInput: wordlist = [\"KiTe\",\"kite\",\"hare\",\"Hare\"], queries = [\"kite\",\"Kite\",\"KiTe\",\"Hare\",\"HARE\",\"Hear\",\"hear\",\"keti\",\"keet\",\"keto\"]\nOutput: [\"kite\",\"KiTe\",\"KiTe\",\"Hare\",\"hare\",\"\",\"\",\"KiTe\",\"\",\"KiTe\"]\nExample 2:\nInput: wordlist = [\"yellow\"], queries = [\"YellOw\"]\nOutput: [\"yellow\"]\n\n\u00a0\nConstraints:\n\n1 <= wordlist.length, queries.length <= 5000\n1 <= wordlist[i].length, queries[i].length <= 7\nwordlist[i] and queries[i] consist only of only English letters.\n\n"], "967. Numbers With Same Consecutive Differences": ["https://leetcode.com/problems/numbers-with-same-consecutive-differences", "Return all non-negative integers of length n such that the absolute difference between every two consecutive digits is k.\nNote that every number in the answer must not have leading zeros. For example, 01 has one leading zero and is invalid.\nYou may return the answer in any order.\n\u00a0\nExample 1:\nInput: n = 3, k = 7\nOutput: [181,292,707,818,929]\nExplanation: Note that 070 is not a valid number, because it has leading zeroes.\n\nExample 2:\nInput: n = 2, k = 1\nOutput: [10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]\n\n\u00a0\nConstraints:\n\n2 <= n <= 9\n0 <= k <= 9\n\n"], "968. Binary Tree Cameras": ["https://leetcode.com/problems/binary-tree-cameras", "You are given the root of a binary tree. We install cameras on the tree nodes where each camera at a node can monitor its parent, itself, and its immediate children.\nReturn the minimum number of cameras needed to monitor all nodes of the tree.\n\u00a0\nExample 1:\n\nInput: root = [0,0,null,0,0]\nOutput: 1\nExplanation: One camera is enough to monitor all nodes if placed as shown.\n\nExample 2:\n\nInput: root = [0,0,null,0,null,0,null,null,0]\nOutput: 2\nExplanation: At least two cameras are needed to monitor all nodes of the tree. The above image shows one of the valid configurations of camera placement.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 1000].\nNode.val == 0\n\n"], "969. Pancake Sorting": ["https://leetcode.com/problems/pancake-sorting", "Given an array of integers arr, sort the array by performing a series of pancake flips.\nIn one pancake flip we do the following steps:\n\nChoose an integer k where 1 <= k <= arr.length.\nReverse the sub-array arr[0...k-1] (0-indexed).\n\nFor example, if arr = [3,2,1,4] and we performed a pancake flip choosing k = 3, we reverse the sub-array [3,2,1], so arr = [1,2,3,4] after the pancake flip at k = 3.\nReturn an array of the k-values corresponding to a sequence of pancake flips that sort arr. Any valid answer that sorts the array within 10 * arr.length flips will be judged as correct.\n\u00a0\nExample 1:\nInput: arr = [3,2,4,1]\nOutput: [4,2,4,3]\nExplanation: \nWe perform 4 pancake flips, with k values 4, 2, 4, and 3.\nStarting state: arr = [3, 2, 4, 1]\nAfter 1st flip (k = 4): arr = [1, 4, 2, 3]\nAfter 2nd flip (k = 2): arr = [4, 1, 2, 3]\nAfter 3rd flip (k = 4): arr = [3, 2, 1, 4]\nAfter 4th flip (k = 3): arr = [1, 2, 3, 4], which is sorted.\n\nExample 2:\nInput: arr = [1,2,3]\nOutput: []\nExplanation: The input is already sorted, so there is no need to flip anything.\nNote that other answers, such as [3, 3], would also be accepted.\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 100\n1 <= arr[i] <= arr.length\nAll integers in arr are unique (i.e. arr is a permutation of the integers from 1 to arr.length).\n\n"], "970. Powerful Integers": ["https://leetcode.com/problems/powerful-integers", "Given three integers x, y, and bound, return a list of all the powerful integers that have a value less than or equal to bound.\nAn integer is powerful if it can be represented as xi + yj for some integers i >= 0 and j >= 0.\nYou may return the answer in any order. In your answer, each value should occur at most once.\n\u00a0\nExample 1:\nInput: x = 2, y = 3, bound = 10\nOutput: [2,3,4,5,7,9,10]\nExplanation:\n2 = 20 + 30\n3 = 21 + 30\n4 = 20 + 31\n5 = 21 + 31\n7 = 22 + 31\n9 = 23 + 30\n10 = 20 + 32\n\nExample 2:\nInput: x = 3, y = 5, bound = 15\nOutput: [2,4,6,8,10,14]\n\n\u00a0\nConstraints:\n\n1 <= x, y <= 100\n0 <= bound <= 106\n\n"], "971. Flip Binary Tree To Match Preorder Traversal": ["https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal", "You are given the root of a binary tree with n nodes, where each node is uniquely assigned a value from 1 to n. You are also given a sequence of n values voyage, which is the desired pre-order traversal of the binary tree.\nAny node in the binary tree can be flipped by swapping its left and right subtrees. For example, flipping node 1 will have the following effect:\n\nFlip the smallest number of nodes so that the pre-order traversal of the tree matches voyage.\nReturn a list of the values of all flipped nodes. You may return the answer in any order. If it is impossible to flip the nodes in the tree to make the pre-order traversal match voyage, return the list [-1].\n\u00a0\nExample 1:\n\nInput: root = [1,2], voyage = [2,1]\nOutput: [-1]\nExplanation: It is impossible to flip the nodes such that the pre-order traversal matches voyage.\n\nExample 2:\n\nInput: root = [1,2,3], voyage = [1,3,2]\nOutput: [1]\nExplanation: Flipping node 1 swaps nodes 2 and 3, so the pre-order traversal matches voyage.\nExample 3:\n\nInput: root = [1,2,3], voyage = [1,2,3]\nOutput: []\nExplanation: The tree's pre-order traversal already matches voyage, so no nodes need to be flipped.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is n.\nn == voyage.length\n1 <= n <= 100\n1 <= Node.val, voyage[i] <= n\nAll the values in the tree are unique.\nAll the values in voyage are unique.\n\n"], "972. Equal Rational Numbers": ["https://leetcode.com/problems/equal-rational-numbers", "Given two strings s and t, each of which represents a non-negative rational number, return true if and only if they represent the same number. The strings may use parentheses to denote the repeating part of the rational number.\nA rational number can be represented using up to three parts: <IntegerPart>, <NonRepeatingPart>, and a <RepeatingPart>. The number will be represented in one of the following three ways:\n\n<IntegerPart>\n\nFor example, 12, 0, and 123.\n\n\n<IntegerPart><.><NonRepeatingPart>\n\nFor example, 0.5, 1., 2.12, and 123.0001.\n\n\n<IntegerPart><.><NonRepeatingPart><(><RepeatingPart><)>\n\nFor example, 0.1(6), 1.(9), 123.00(1212).\n\n\n\nThe repeating portion of a decimal expansion is conventionally denoted within a pair of round brackets. For example:\n\n1/6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66).\n\n\u00a0\nExample 1:\nInput: s = \"0.(52)\", t = \"0.5(25)\"\nOutput: true\nExplanation: Because \"0.(52)\" represents 0.52525252..., and \"0.5(25)\" represents 0.52525252525..... , the strings represent the same number.\n\nExample 2:\nInput: s = \"0.1666(6)\", t = \"0.166(66)\"\nOutput: true\n\nExample 3:\nInput: s = \"0.9(9)\", t = \"1.\"\nOutput: true\nExplanation: \"0.9(9)\" represents 0.999999999... repeated forever, which equals 1.  [See this link for an explanation.]\n\"1.\" represents the number 1, which is formed correctly: (IntegerPart) = \"1\" and (NonRepeatingPart) = \"\".\n\n\u00a0\nConstraints:\n\nEach part consists only of digits.\nThe <IntegerPart> does not have leading zeros (except for the zero itself).\n1 <= <IntegerPart>.length <= 4\n0 <= <NonRepeatingPart>.length <= 4\n1 <= <RepeatingPart>.length <= 4\n\n"], "973. K Closest Points to Origin": ["https://leetcode.com/problems/k-closest-points-to-origin", "Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane and an integer k, return the k closest points to the origin (0, 0).\nThe distance between two points on the X-Y plane is the Euclidean distance (i.e., \u221a(x1 - x2)2 + (y1 - y2)2).\nYou may return the answer in any order. The answer is guaranteed to be unique (except for the order that it is in).\n\u00a0\nExample 1:\n\nInput: points = [[1,3],[-2,2]], k = 1\nOutput: [[-2,2]]\nExplanation:\nThe distance between (1, 3) and the origin is sqrt(10).\nThe distance between (-2, 2) and the origin is sqrt(8).\nSince sqrt(8) < sqrt(10), (-2, 2) is closer to the origin.\nWe only want the closest k = 1 points from the origin, so the answer is just [[-2,2]].\n\nExample 2:\nInput: points = [[3,3],[5,-1],[-2,4]], k = 2\nOutput: [[3,3],[-2,4]]\nExplanation: The answer [[-2,4],[3,3]] would also be accepted.\n\n\u00a0\nConstraints:\n\n1 <= k <= points.length <= 104\n-104 < xi, yi < 104\n\n"], "974. Subarray Sums Divisible by K": ["https://leetcode.com/problems/subarray-sums-divisible-by-k", "Given an integer array nums and an integer k, return the number of non-empty subarrays that have a sum divisible by k.\nA subarray is a contiguous part of an array.\n\u00a0\nExample 1:\nInput: nums = [4,5,0,-2,-3,1], k = 5\nOutput: 7\nExplanation: There are 7 subarrays with a sum divisible by k = 5:\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\n\nExample 2:\nInput: nums = [5], k = 9\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 3 * 104\n-104 <= nums[i] <= 104\n2 <= k <= 104\n\n"], "975. Odd Even Jump": ["https://leetcode.com/problems/odd-even-jump", "You are given an integer array arr. From some starting index, you can make a series of jumps. The (1st, 3rd, 5th, ...) jumps in the series are called odd-numbered jumps, and the (2nd, 4th, 6th, ...) jumps in the series are called even-numbered jumps. Note that the jumps are numbered, not the indices.\nYou may jump forward from index i to index j (with i < j) in the following way:\n\nDuring odd-numbered jumps (i.e., jumps 1, 3, 5, ...), you jump to the index j such that arr[i] <= arr[j] and arr[j] is the smallest possible value. If there are multiple such indices j, you can only jump to the smallest such index j.\nDuring even-numbered jumps (i.e., jumps 2, 4, 6, ...), you jump to the index j such that arr[i] >= arr[j] and arr[j] is the largest possible value. If there are multiple such indices j, you can only jump to the smallest such index j.\nIt may be the case that for some index i, there are no legal jumps.\n\nA starting index is good if, starting from that index, you can reach the end of the array (index arr.length - 1) by jumping some number of times (possibly 0 or more than once).\nReturn the number of good starting indices.\n\u00a0\nExample 1:\nInput: arr = [10,13,12,14,15]\nOutput: 2\nExplanation: \nFrom starting index i = 0, we can make our 1st jump to i = 2 (since arr[2] is the smallest among arr[1], arr[2], arr[3], arr[4] that is greater or equal to arr[0]), then we cannot jump any more.\nFrom starting index i = 1 and i = 2, we can make our 1st jump to i = 3, then we cannot jump any more.\nFrom starting index i = 3, we can make our 1st jump to i = 4, so we have reached the end.\nFrom starting index i = 4, we have reached the end already.\nIn total, there are 2 different starting indices i = 3 and i = 4, where we can reach the end with some number of\njumps.\n\nExample 2:\nInput: arr = [2,3,1,1,4]\nOutput: 3\nExplanation: \nFrom starting index i = 0, we make jumps to i = 1, i = 2, i = 3:\nDuring our 1st jump (odd-numbered), we first jump to i = 1 because arr[1] is the smallest value in [arr[1], arr[2], arr[3], arr[4]] that is greater than or equal to arr[0].\nDuring our 2nd jump (even-numbered), we jump from i = 1 to i = 2 because arr[2] is the largest value in [arr[2], arr[3], arr[4]] that is less than or equal to arr[1]. arr[3] is also the largest value, but 2 is a smaller index, so we can only jump to i = 2 and not i = 3\nDuring our 3rd jump (odd-numbered), we jump from i = 2 to i = 3 because arr[3] is the smallest value in [arr[3], arr[4]] that is greater than or equal to arr[2].\nWe can't jump from i = 3 to i = 4, so the starting index i = 0 is not good.\nIn a similar manner, we can deduce that:\nFrom starting index i = 1, we jump to i = 4, so we reach the end.\nFrom starting index i = 2, we jump to i = 3, and then we can't jump anymore.\nFrom starting index i = 3, we jump to i = 4, so we reach the end.\nFrom starting index i = 4, we are already at the end.\nIn total, there are 3 different starting indices i = 1, i = 3, and i = 4, where we can reach the end with some\nnumber of jumps.\n\nExample 3:\nInput: arr = [5,1,3,4,2]\nOutput: 3\nExplanation: We can reach the end from starting indices 1, 2, and 4.\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 2 * 104\n0 <= arr[i] < 105\n\n"], "976. Largest Perimeter Triangle": ["https://leetcode.com/problems/largest-perimeter-triangle", "Given an integer array nums, return the largest perimeter of a triangle with a non-zero area, formed from three of these lengths. If it is impossible to form any triangle of a non-zero area, return 0.\n\u00a0\nExample 1:\nInput: nums = [2,1,2]\nOutput: 5\n\nExample 2:\nInput: nums = [1,2,1]\nOutput: 0\n\n\u00a0\nConstraints:\n\n3 <= nums.length <= 104\n1 <= nums[i] <= 106\n\n"], "977. Squares of a Sorted Array": ["https://leetcode.com/problems/squares-of-a-sorted-array", "Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.\n\u00a0\nExample 1:\nInput: nums = [-4,-1,0,3,10]\nOutput: [0,1,9,16,100]\nExplanation: After squaring, the array becomes [16,1,0,9,100].\nAfter sorting, it becomes [0,1,9,16,100].\n\nExample 2:\nInput: nums = [-7,-3,2,3,11]\nOutput: [4,9,9,49,121]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-104 <= nums[i] <= 104\nnums is sorted in non-decreasing order.\n\n\u00a0\nFollow up: Squaring each element and sorting the new array is very trivial, could you find an O(n) solution using a different approach?"], "978. Longest Turbulent Subarray": ["https://leetcode.com/problems/longest-turbulent-subarray", "Given an integer array arr, return the length of a maximum size turbulent subarray of arr.\nA subarray is turbulent if the comparison sign flips between each adjacent pair of elements in the subarray.\nMore formally, a subarray [arr[i], arr[i + 1], ..., arr[j]] of arr is said to be turbulent if and only if:\n\nFor i <= k < j:\n\n\t\narr[k] > arr[k + 1] when k is odd, and\narr[k] < arr[k + 1] when k is even.\n\n\nOr, for i <= k < j:\n\t\narr[k] > arr[k + 1] when k is even, and\narr[k] < arr[k + 1] when k is odd.\n\n\n\n\u00a0\nExample 1:\nInput: arr = [9,4,2,10,7,8,8,1,9]\nOutput: 5\nExplanation: arr[1] > arr[2] < arr[3] > arr[4] < arr[5]\n\nExample 2:\nInput: arr = [4,8,12,16]\nOutput: 2\n\nExample 3:\nInput: arr = [100]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 4 * 104\n0 <= arr[i] <= 109\n\n"], "979. Distribute Coins in Binary Tree": ["https://leetcode.com/problems/distribute-coins-in-binary-tree", "You are given the root of a binary tree with n nodes where each node in the tree has node.val coins. There are n coins in total throughout the whole tree.\nIn one move, we may choose two adjacent nodes and move one coin from one node to another. A move may be from parent to child, or from child to parent.\nReturn the minimum number of moves required to make every node have exactly one coin.\n\u00a0\nExample 1:\n\nInput: root = [3,0,0]\nOutput: 2\nExplanation: From the root of the tree, we move one coin to its left child, and one coin to its right child.\n\nExample 2:\n\nInput: root = [0,3,0]\nOutput: 3\nExplanation: From the left child of the root, we move two coins to the root [taking two moves]. Then, we move one coin from the root of the tree to the right child.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is n.\n1 <= n <= 100\n0 <= Node.val <= n\nThe sum of all Node.val is n.\n\n"], "980. Unique Paths III": ["https://leetcode.com/problems/unique-paths-iii", "You are given an m x n integer array grid where grid[i][j] could be:\n\n1 representing the starting square. There is exactly one starting square.\n2 representing the ending square. There is exactly one ending square.\n0 representing empty squares we can walk over.\n-1 representing obstacles that we cannot walk over.\n\nReturn the number of 4-directional walks from the starting square to the ending square, that walk over every non-obstacle square exactly once.\n\u00a0\nExample 1:\n\nInput: grid = [[1,0,0,0],[0,0,0,0],[0,0,2,-1]]\nOutput: 2\nExplanation: We have the following two paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)\n2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)\n\nExample 2:\n\nInput: grid = [[1,0,0,0],[0,0,0,0],[0,0,0,2]]\nOutput: 4\nExplanation: We have the following four paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)\n2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)\n3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)\n4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)\n\nExample 3:\n\nInput: grid = [[0,1],[2,0]]\nOutput: 0\nExplanation: There is no path that walks over every empty square exactly once.\nNote that the starting and ending square can be anywhere in the grid.\n\n\u00a0\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 20\n1 <= m * n <= 20\n-1 <= grid[i][j] <= 2\nThere is exactly one starting cell and one ending cell.\n\n"], "981. Time Based Key-Value Store": ["https://leetcode.com/problems/time-based-key-value-store", "Design a time-based key-value data structure that can store multiple values for the same key at different time stamps and retrieve the key's value at a certain timestamp.\nImplement the TimeMap class:\n\nTimeMap() Initializes the object of the data structure.\nvoid set(String key, String value, int timestamp) Stores the key key with the value value at the given time timestamp.\nString get(String key, int timestamp) Returns a value such that set was called previously, with timestamp_prev <= timestamp. If there are multiple such values, it returns the value associated with the largest timestamp_prev. If there are no values, it returns \"\".\n\n\u00a0\nExample 1:\nInput\n[\"TimeMap\", \"set\", \"get\", \"get\", \"set\", \"get\", \"get\"]\n[[], [\"foo\", \"bar\", 1], [\"foo\", 1], [\"foo\", 3], [\"foo\", \"bar2\", 4], [\"foo\", 4], [\"foo\", 5]]\nOutput\n[null, null, \"bar\", \"bar\", null, \"bar2\", \"bar2\"]\n\nExplanation\nTimeMap timeMap = new TimeMap();\ntimeMap.set(\"foo\", \"bar\", 1);  // store the key \"foo\" and value \"bar\" along with timestamp = 1.\ntimeMap.get(\"foo\", 1);         // return \"bar\"\ntimeMap.get(\"foo\", 3);         // return \"bar\", since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 is \"bar\".\ntimeMap.set(\"foo\", \"bar2\", 4); // store the key \"foo\" and value \"bar2\" along with timestamp = 4.\ntimeMap.get(\"foo\", 4);         // return \"bar2\"\ntimeMap.get(\"foo\", 5);         // return \"bar2\"\n\n\u00a0\nConstraints:\n\n1 <= key.length, value.length <= 100\nkey and value consist of lowercase English letters and digits.\n1 <= timestamp <= 107\nAll the timestamps timestamp of set are strictly increasing.\nAt most 2 * 105 calls will be made to set and get.\n\n"], "982. Triples with Bitwise AND Equal To Zero": ["https://leetcode.com/problems/triples-with-bitwise-and-equal-to-zero", ""], "983. Minimum Cost For Tickets": ["https://leetcode.com/problems/minimum-cost-for-tickets", "You have planned some train traveling one year in advance. The days of the year in which you will travel are given as an integer array days. Each day is an integer from 1 to 365.\nTrain tickets are sold in three different ways:\n\na 1-day pass is sold for costs[0] dollars,\na 7-day pass is sold for costs[1] dollars, and\na 30-day pass is sold for costs[2] dollars.\n\nThe passes allow that many days of consecutive travel.\n\nFor example, if we get a 7-day pass on day 2, then we can travel for 7 days: 2, 3, 4, 5, 6, 7, and 8.\n\nReturn the minimum number of dollars you need to travel every day in the given list of days.\n\u00a0\nExample 1:\nInput: days = [1,4,6,7,8,20], costs = [2,7,15]\nOutput: 11\nExplanation: For example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.\nOn day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.\nOn day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.\nIn total, you spent $11 and covered all the days of your travel.\n\nExample 2:\nInput: days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]\nOutput: 17\nExplanation: For example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.\nOn day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.\nIn total, you spent $17 and covered all the days of your travel.\n\n\u00a0\nConstraints:\n\n1 <= days.length <= 365\n1 <= days[i] <= 365\ndays is in strictly increasing order.\ncosts.length == 3\n1 <= costs[i] <= 1000\n\n"], "984. String Without AAA or BBB": ["https://leetcode.com/problems/string-without-aaa-or-bbb", "Given two integers a and b, return any string s such that:\n\ns has length a + b and contains exactly a 'a' letters, and exactly b 'b' letters,\nThe substring 'aaa' does not occur in s, and\nThe substring 'bbb' does not occur in s.\n\n\u00a0\nExample 1:\nInput: a = 1, b = 2\nOutput: \"abb\"\nExplanation: \"abb\", \"bab\" and \"bba\" are all correct answers.\n\nExample 2:\nInput: a = 4, b = 1\nOutput: \"aabaa\"\n\n\u00a0\nConstraints:\n\n0 <= a, b <= 100\nIt is guaranteed such an s exists for the given a and b.\n\n"], "985. Sum of Even Numbers After Queries": ["https://leetcode.com/problems/sum-of-even-numbers-after-queries", "You are given an integer array nums and an array queries where queries[i] = [vali, indexi].\nFor each query i, first, apply nums[indexi] = nums[indexi] + vali, then print the sum of the even values of nums.\nReturn an integer array answer where answer[i] is the answer to the ith query.\n\u00a0\nExample 1:\nInput: nums = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]\nOutput: [8,6,2,4]\nExplanation: At the beginning, the array is [1,2,3,4].\nAfter adding 1 to nums[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.\nAfter adding -3 to nums[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.\nAfter adding -4 to nums[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.\nAfter adding 2 to nums[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.\n\nExample 2:\nInput: nums = [1], queries = [[4,0]]\nOutput: [0]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-104 <= nums[i] <= 104\n1 <= queries.length <= 104\n-104 <= vali <= 104\n0 <= indexi < nums.length\n\n"], "986. Interval List Intersections": ["https://leetcode.com/problems/interval-list-intersections", "You are given two lists of closed intervals, firstList and secondList, where firstList[i] = [starti, endi] and secondList[j] = [startj, endj]. Each list of intervals is pairwise disjoint and in sorted order.\nReturn the intersection of these two interval lists.\nA closed interval [a, b] (with a <= b) denotes the set of real numbers x with a <= x <= b.\nThe intersection of two closed intervals is a set of real numbers that are either empty or represented as a closed interval. For example, the intersection of [1, 3] and [2, 4] is [2, 3].\n\u00a0\nExample 1:\n\nInput: firstList = [[0,2],[5,10],[13,23],[24,25]], secondList = [[1,5],[8,12],[15,24],[25,26]]\nOutput: [[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]\n\nExample 2:\nInput: firstList = [[1,3],[5,9]], secondList = []\nOutput: []\n\n\u00a0\nConstraints:\n\n0 <= firstList.length, secondList.length <= 1000\nfirstList.length + secondList.length >= 1\n0 <= starti < endi <= 109\nendi < starti+1\n0 <= startj < endj <= 109 \nendj < startj+1\n\n"], "987. Vertical Order Traversal of a Binary Tree": ["https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree", "Given the root of a binary tree, calculate the vertical order traversal of the binary tree.\nFor each node at position (row, col), its left and right children will be at positions (row + 1, col - 1) and (row + 1, col + 1) respectively. The root of the tree is at (0, 0).\nThe vertical order traversal of a binary tree is a list of top-to-bottom orderings for each column index starting from the leftmost column and ending on the rightmost column. There may be multiple nodes in the same row and same column. In such a case, sort these nodes by their values.\nReturn the vertical order traversal of the binary tree.\n\u00a0\nExample 1:\n\nInput: root = [3,9,20,null,null,15,7]\nOutput: [[9],[3,15],[20],[7]]\nExplanation:\nColumn -1: Only node 9 is in this column.\nColumn 0: Nodes 3 and 15 are in this column in that order from top to bottom.\nColumn 1: Only node 20 is in this column.\nColumn 2: Only node 7 is in this column.\nExample 2:\n\nInput: root = [1,2,3,4,5,6,7]\nOutput: [[4],[2],[1,5,6],[3],[7]]\nExplanation:\nColumn -2: Only node 4 is in this column.\nColumn -1: Only node 2 is in this column.\nColumn 0: Nodes 1, 5, and 6 are in this column.\n          1 is at the top, so it comes first.\n          5 and 6 are at the same position (2, 0), so we order them by their value, 5 before 6.\nColumn 1: Only node 3 is in this column.\nColumn 2: Only node 7 is in this column.\n\nExample 3:\n\nInput: root = [1,2,3,4,6,5,7]\nOutput: [[4],[2],[1,5,6],[3],[7]]\nExplanation:\nThis case is the exact same as example 2, but with nodes 5 and 6 swapped.\nNote that the solution remains the same since 5 and 6 are in the same location and should be ordered by their values.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 1000].\n0 <= Node.val <= 1000\n\n"], "988. Smallest String Starting From Leaf": ["https://leetcode.com/problems/smallest-string-starting-from-leaf", "You are given the root of a binary tree where each node has a value in the range [0, 25] representing the letters 'a' to 'z'.\nReturn the lexicographically smallest string that starts at a leaf of this tree and ends at the root.\nAs a reminder, any shorter prefix of a string is lexicographically smaller.\n\nFor example, \"ab\" is lexicographically smaller than \"aba\".\n\nA leaf of a node is a node that has no children.\n\u00a0\nExample 1:\n\nInput: root = [0,1,2,3,4,3,4]\nOutput: \"dba\"\n\nExample 2:\n\nInput: root = [25,1,3,1,3,0,2]\nOutput: \"adz\"\n\nExample 3:\n\nInput: root = [2,2,1,null,1,0,null,0]\nOutput: \"abc\"\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 8500].\n0 <= Node.val <= 25\n\n"], "989. Add to Array-Form of Integer": ["https://leetcode.com/problems/add-to-array-form-of-integer", "The array-form of an integer num is an array representing its digits in left to right order.\n\nFor example, for num = 1321, the array form is [1,3,2,1].\n\nGiven num, the array-form of an integer, and an integer k, return the array-form of the integer num + k.\n\u00a0\nExample 1:\nInput: num = [1,2,0,0], k = 34\nOutput: [1,2,3,4]\nExplanation: 1200 + 34 = 1234\n\nExample 2:\nInput: num = [2,7,4], k = 181\nOutput: [4,5,5]\nExplanation: 274 + 181 = 455\n\nExample 3:\nInput: num = [2,1,5], k = 806\nOutput: [1,0,2,1]\nExplanation: 215 + 806 = 1021\n\n\u00a0\nConstraints:\n\n1 <= num.length <= 104\n0 <= num[i] <= 9\nnum does not contain any leading zeros except for the zero itself.\n1 <= k <= 104\n\n"], "990. Satisfiability of Equality Equations": ["https://leetcode.com/problems/satisfiability-of-equality-equations", "You are given an array of strings equations that represent relationships between variables where each string equations[i] is of length 4 and takes one of two different forms: \"xi==yi\" or \"xi!=yi\".Here, xi and yi are lowercase letters (not necessarily different) that represent one-letter variable names.\nReturn true if it is possible to assign integers to variable names so as to satisfy all the given equations, or false otherwise.\n\u00a0\nExample 1:\nInput: equations = [\"a==b\",\"b!=a\"]\nOutput: false\nExplanation: If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not the second.\nThere is no way to assign the variables to satisfy both equations.\n\nExample 2:\nInput: equations = [\"b==a\",\"a==b\"]\nOutput: true\nExplanation: We could assign a = 1 and b = 1 to satisfy both equations.\n\n\u00a0\nConstraints:\n\n1 <= equations.length <= 500\nequations[i].length == 4\nequations[i][0] is a lowercase letter.\nequations[i][1] is either '=' or '!'.\nequations[i][2] is '='.\nequations[i][3] is a lowercase letter.\n\n"], "991. Broken Calculator": ["https://leetcode.com/problems/broken-calculator", "There is a broken calculator that has the integer startValue on its display initially. In one operation, you can:\n\nmultiply the number on display by 2, or\nsubtract 1 from the number on display.\n\nGiven two integers startValue and target, return the minimum number of operations needed to display target on the calculator.\n\u00a0\nExample 1:\nInput: startValue = 2, target = 3\nOutput: 2\nExplanation: Use double operation and then decrement operation {2 -> 4 -> 3}.\n\nExample 2:\nInput: startValue = 5, target = 8\nOutput: 2\nExplanation: Use decrement and then double {5 -> 4 -> 8}.\n\nExample 3:\nInput: startValue = 3, target = 10\nOutput: 3\nExplanation: Use double, decrement and double {3 -> 6 -> 5 -> 10}.\n\n\u00a0\nConstraints:\n\n1 <= startValue, target <= 109\n\n"], "992. Subarrays with K Different Integers": ["https://leetcode.com/problems/subarrays-with-k-different-integers", "Given an integer array nums and an integer k, return the number of good subarrays of nums.\nA good array is an array where the number of different integers in that array is exactly k.\n\nFor example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.\n\nA subarray is a contiguous part of an array.\n\u00a0\nExample 1:\nInput: nums = [1,2,1,2,3], k = 2\nOutput: 7\nExplanation: Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2]\n\nExample 2:\nInput: nums = [1,2,1,3,4], k = 3\nOutput: 3\nExplanation: Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 2 * 104\n1 <= nums[i], k <= nums.length\n\n"], "993. Cousins in Binary Tree": ["https://leetcode.com/problems/cousins-in-binary-tree", "Given the root of a binary tree with unique values and the values of two different nodes of the tree x and y, return true if the nodes corresponding to the values x and y in the tree are cousins, or false otherwise.\nTwo nodes of a binary tree are cousins if they have the same depth with different parents.\nNote that in a binary tree, the root node is at the depth 0, and children of each depth k node are at the depth k + 1.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4], x = 4, y = 3\nOutput: false\n\nExample 2:\n\nInput: root = [1,2,3,null,4,null,5], x = 5, y = 4\nOutput: true\n\nExample 3:\n\nInput: root = [1,2,3,null,4], x = 2, y = 3\nOutput: false\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [2, 100].\n1 <= Node.val <= 100\nEach node has a unique value.\nx != y\nx and y are exist in the tree.\n\n"], "994. Rotting Oranges": ["https://leetcode.com/problems/rotting-oranges", "You are given an m x n grid where each cell can have one of three values:\n\n0 representing an empty cell,\n1 representing a fresh orange, or\n2 representing a rotten orange.\n\nEvery minute, any fresh orange that is 4-directionally adjacent to a rotten orange becomes rotten.\nReturn the minimum number of minutes that must elapse until no cell has a fresh orange. If this is impossible, return -1.\n\u00a0\nExample 1:\n\nInput: grid = [[2,1,1],[1,1,0],[0,1,1]]\nOutput: 4\n\nExample 2:\nInput: grid = [[2,1,1],[0,1,1],[1,0,1]]\nOutput: -1\nExplanation: The orange in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.\n\nExample 3:\nInput: grid = [[0,2]]\nOutput: 0\nExplanation: Since there are already no fresh oranges at minute 0, the answer is just 0.\n\n\u00a0\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 10\ngrid[i][j] is 0, 1, or 2.\n\n"], "995. Minimum Number of K Consecutive Bit Flips": ["https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips", "You are given a binary array nums and an integer k.\nA k-bit flip is choosing a subarray of length k from nums and simultaneously changing every 0 in the subarray to 1, and every 1 in the subarray to 0.\nReturn the minimum number of k-bit flips required so that there is no 0 in the array. If it is not possible, return -1.\nA subarray is a contiguous part of an array.\n\u00a0\nExample 1:\nInput: nums = [0,1,0], k = 1\nOutput: 2\nExplanation: Flip nums[0], then flip nums[2].\n\nExample 2:\nInput: nums = [1,1,0], k = 2\nOutput: -1\nExplanation: No matter how we flip subarrays of size 2, we cannot make the array become [1,1,1].\n\nExample 3:\nInput: nums = [0,0,0,1,0,1,1,0], k = 3\nOutput: 3\nExplanation: \nFlip nums[0],nums[1],nums[2]: nums becomes [1,1,1,1,0,1,1,0]\nFlip nums[4],nums[5],nums[6]: nums becomes [1,1,1,1,1,0,0,0]\nFlip nums[5],nums[6],nums[7]: nums becomes [1,1,1,1,1,1,1,1]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\n1 <= k <= nums.length\n\n"], "996. Number of Squareful Arrays": ["https://leetcode.com/problems/number-of-squareful-arrays", "An array is squareful if the sum of every pair of adjacent elements is a perfect square.\nGiven an integer array nums, return the number of permutations of nums that are squareful.\nTwo permutations perm1 and perm2 are different if there is some index i such that perm1[i] != perm2[i].\n\u00a0\nExample 1:\nInput: nums = [1,17,8]\nOutput: 2\nExplanation: [1,8,17] and [17,8,1] are the valid permutations.\n\nExample 2:\nInput: nums = [2,2,2]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 12\n0 <= nums[i] <= 109\n\n"], "997. Find the Town Judge": ["https://leetcode.com/problems/find-the-town-judge", "In a town, there are n people labeled from 1 to n. There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\n\nThe town judge trusts nobody.\nEverybody (except for the town judge) trusts the town judge.\nThere is exactly one person that satisfies properties 1 and 2.\n\nYou are given an array trust where trust[i] = [ai, bi] representing that the person labeled ai trusts the person labeled bi.\nReturn the label of the town judge if the town judge exists and can be identified, or return -1 otherwise.\n\u00a0\nExample 1:\nInput: n = 2, trust = [[1,2]]\nOutput: 2\n\nExample 2:\nInput: n = 3, trust = [[1,3],[2,3]]\nOutput: 3\n\nExample 3:\nInput: n = 3, trust = [[1,3],[2,3],[3,1]]\nOutput: -1\n\n\u00a0\nConstraints:\n\n1 <= n <= 1000\n0 <= trust.length <= 104\ntrust[i].length == 2\nAll the pairs of trust are unique.\nai != bi\n1 <= ai, bi <= n\n\n"], "998. Maximum Binary Tree II": ["https://leetcode.com/problems/maximum-binary-tree-ii", "A maximum tree is a tree where every node has a value greater than any other value in its subtree.\nYou are given the root of a maximum binary tree and an integer val.\nJust as in the previous problem, the given tree was constructed from a list a (root = Construct(a)) recursively with the following Construct(a) routine:\n\nIf a is empty, return null.\nOtherwise, let a[i] be the largest element of a. Create a root node with the value a[i].\nThe left child of root will be Construct([a[0], a[1], ..., a[i - 1]]).\nThe right child of root will be Construct([a[i + 1], a[i + 2], ..., a[a.length - 1]]).\nReturn root.\n\nNote that we were not given a directly, only a root node root = Construct(a).\nSuppose b is a copy of a with the value val appended to it. It is guaranteed that b has unique values.\nReturn Construct(b).\n\u00a0\nExample 1:\n\nInput: root = [4,1,3,null,null,2], val = 5\nOutput: [5,4,null,1,3,null,null,2]\nExplanation: a = [1,4,2,3], b = [1,4,2,3,5]\n\nExample 2:\n\nInput: root = [5,2,4,null,1], val = 3\nOutput: [5,2,4,null,1,null,3]\nExplanation: a = [2,1,5,4], b = [2,1,5,4,3]\n\nExample 3:\n\nInput: root = [5,2,3,null,1], val = 4\nOutput: [5,2,4,null,1,3]\nExplanation: a = [2,1,5,3], b = [2,1,5,3,4]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 100].\n1 <= Node.val <= 100\nAll the values of the tree are unique.\n1 <= val <= 100\n\n"], "999. Available Captures for Rook": ["https://leetcode.com/problems/available-captures-for-rook", "On an 8 x 8 chessboard, there is exactly one white rook 'R' and some number of white bishops 'B', black pawns 'p', and empty squares '.'.\nWhen the rook moves, it chooses one of four cardinal directions (north, east, south, or west), then moves in that direction until it chooses to stop, reaches the edge of the board, captures a black pawn, or is blocked by a white bishop. A rook is considered attacking a pawn if the rook can capture the pawn on the rook's turn. The number of available captures for the white rook is the number of pawns that the rook is attacking.\nReturn the number of available captures for the white rook.\n\u00a0\nExample 1:\n\nInput: board = [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"R\",\".\",\".\",\".\",\"p\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\nOutput: 3\nExplanation: In this example, the rook is attacking all the pawns.\n\nExample 2:\n\nInput: board = [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"B\",\"R\",\"B\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"p\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\nOutput: 0\nExplanation: The bishops are blocking the rook from attacking any of the pawns.\n\nExample 3:\n\nInput: board = [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\"p\",\"p\",\".\",\"R\",\".\",\"p\",\"B\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\nOutput: 3\nExplanation: The rook is attacking the pawns at positions b5, d6, and f5.\n\n\u00a0\nConstraints:\n\nboard.length == 8\nboard[i].length == 8\nboard[i][j] is either 'R', '.', 'B', or 'p'\nThere is exactly one cell with board[i][j] == 'R'\n\n"], "1000. Minimum Cost to Merge Stones": ["https://leetcode.com/problems/minimum-cost-to-merge-stones", "There are n piles of stones arranged in a row. The ith pile has stones[i] stones.\nA move consists of merging exactly k consecutive piles into one pile, and the cost of this move is equal to the total number of stones in these k piles.\nReturn the minimum cost to merge all piles of stones into one pile. If it is impossible, return -1.\n\u00a0\nExample 1:\nInput: stones = [3,2,4,1], k = 2\nOutput: 20\nExplanation: We start with [3, 2, 4, 1].\nWe merge [3, 2] for a cost of 5, and we are left with [5, 4, 1].\nWe merge [4, 1] for a cost of 5, and we are left with [5, 5].\nWe merge [5, 5] for a cost of 10, and we are left with [10].\nThe total cost was 20, and this is the minimum possible.\n\nExample 2:\nInput: stones = [3,2,4,1], k = 3\nOutput: -1\nExplanation: After any merge operation, there are 2 piles left, and we can't merge anymore.  So the task is impossible.\n\nExample 3:\nInput: stones = [3,5,1,2,6], k = 3\nOutput: 25\nExplanation: We start with [3, 5, 1, 2, 6].\nWe merge [5, 1, 2] for a cost of 8, and we are left with [3, 8, 6].\nWe merge [3, 8, 6] for a cost of 17, and we are left with [17].\nThe total cost was 25, and this is the minimum possible.\n\n\u00a0\nConstraints:\n\nn == stones.length\n1 <= n <= 30\n1 <= stones[i] <= 100\n2 <= k <= 30\n\n"], "1001. Grid Illumination": ["https://leetcode.com/problems/grid-illumination", "There is a 2D grid of size n x n where each cell of this grid has a lamp that is initially turned off.\nYou are given a 2D array of lamp positions lamps, where lamps[i] = [rowi, coli] indicates that the lamp at grid[rowi][coli] is turned on. Even if the same lamp is listed more than once, it is turned on.\nWhen a lamp is turned on, it illuminates its cell and all other cells in the same row, column, or diagonal.\nYou are also given another 2D array queries, where queries[j] = [rowj, colj]. For the jth query, determine whether grid[rowj][colj] is illuminated or not. After answering the jth query, turn off the lamp at grid[rowj][colj] and its 8 adjacent lamps if they exist. A lamp is adjacent if its cell shares either a side or corner with grid[rowj][colj].\nReturn an array of integers ans, where ans[j] should be 1 if the cell in the jth query was illuminated, or 0 if the lamp was not.\n\u00a0\nExample 1:\n\nInput: n = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,0]]\nOutput: [1,0]\nExplanation: We have the initial grid with all lamps turned off. In the above picture we see the grid after turning on the lamp at grid[0][0] then turning on the lamp at grid[4][4].\nThe 0th\u00a0query asks if the lamp at grid[1][1] is illuminated or not (the blue square). It is illuminated, so set ans[0] = 1. Then, we turn off all lamps in the red square.\n\nThe 1st\u00a0query asks if the lamp at grid[1][0] is illuminated or not (the blue square). It is not illuminated, so set ans[1] = 0. Then, we turn off all lamps in the red rectangle.\n\n\nExample 2:\nInput: n = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,1]]\nOutput: [1,1]\n\nExample 3:\nInput: n = 5, lamps = [[0,0],[0,4]], queries = [[0,4],[0,1],[1,4]]\nOutput: [1,1,0]\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\n0 <= lamps.length <= 20000\n0 <= queries.length <= 20000\nlamps[i].length == 2\n0 <= rowi, coli < n\nqueries[j].length == 2\n0 <= rowj, colj < n\n\n"], "1002. Find Common Characters": ["https://leetcode.com/problems/find-common-characters", "Given a string array words, return an array of all characters that show up in all strings within the words (including duplicates). You may return the answer in any order.\n\u00a0\nExample 1:\nInput: words = [\"bella\",\"label\",\"roller\"]\nOutput: [\"e\",\"l\",\"l\"]\nExample 2:\nInput: words = [\"cool\",\"lock\",\"cook\"]\nOutput: [\"c\",\"o\"]\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 100\n1 <= words[i].length <= 100\nwords[i] consists of lowercase English letters.\n\n"], "1003. Check If Word Is Valid After Substitutions": ["https://leetcode.com/problems/check-if-word-is-valid-after-substitutions", "Given a string s, determine if it is valid.\nA string s is valid if, starting with an empty string t = \"\", you can transform t into s after performing the following operation any number of times:\n\nInsert string \"abc\" into any position in t. More formally, t becomes tleft + \"abc\" + tright, where t == tleft + tright. Note that tleft and tright may be empty.\n\nReturn true if s is a valid string, otherwise, return false.\n\u00a0\nExample 1:\nInput: s = \"aabcbc\"\nOutput: true\nExplanation:\n\"\" -> \"abc\" -> \"aabcbc\"\nThus, \"aabcbc\" is valid.\nExample 2:\nInput: s = \"abcabcababcc\"\nOutput: true\nExplanation:\n\"\" -> \"abc\" -> \"abcabc\" -> \"abcabcabc\" -> \"abcabcababcc\"\nThus, \"abcabcababcc\" is valid.\n\nExample 3:\nInput: s = \"abccba\"\nOutput: false\nExplanation: It is impossible to get \"abccba\" using the operation.\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 2 * 104\ns consists of letters 'a', 'b', and 'c'\n\n"], "1004. Max Consecutive Ones III": ["https://leetcode.com/problems/max-consecutive-ones-iii", "Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.\n\u00a0\nExample 1:\nInput: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2\nOutput: 6\nExplanation: [1,1,1,0,0,1,1,1,1,1,1]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.\nExample 2:\nInput: nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3\nOutput: 10\nExplanation: [0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\nnums[i] is either 0 or 1.\n0 <= k <= nums.length\n\n"], "1005. Maximize Sum Of Array After K Negations": ["https://leetcode.com/problems/maximize-sum-of-array-after-k-negations", "Given an integer array nums and an integer k, modify the array in the following way:\n\nchoose an index i and replace nums[i] with -nums[i].\n\nYou should apply this process exactly k times. You may choose the same index i multiple times.\nReturn the largest possible sum of the array after modifying it in this way.\n\u00a0\nExample 1:\nInput: nums = [4,2,3], k = 1\nOutput: 5\nExplanation: Choose index 1 and nums becomes [4,-2,3].\n\nExample 2:\nInput: nums = [3,-1,0,2], k = 3\nOutput: 6\nExplanation: Choose indices (1, 2, 2) and nums becomes [3,1,0,2].\n\nExample 3:\nInput: nums = [2,-3,-1,5,-4], k = 2\nOutput: 13\nExplanation: Choose indices (1, 4) and nums becomes [2,3,-1,5,4].\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 104\n-100 <= nums[i] <= 100\n1 <= k <= 104\n\n"], "1006. Clumsy Factorial": ["https://leetcode.com/problems/clumsy-factorial", ""], "1007. Minimum Domino Rotations For Equal Row": ["https://leetcode.com/problems/minimum-domino-rotations-for-equal-row", "In a row of dominoes, tops[i] and bottoms[i] represent the top and bottom halves of the ith domino. (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile.)\nWe may rotate the ith domino, so that tops[i] and bottoms[i] swap values.\nReturn the minimum number of rotations so that all the values in tops are the same, or all the values in bottoms are the same.\nIf it cannot be done, return -1.\n\u00a0\nExample 1:\n\nInput: tops = [2,1,2,4,2,2], bottoms = [5,2,6,2,3,2]\nOutput: 2\nExplanation: \nThe first figure represents the dominoes as given by tops and bottoms: before we do any rotations.\nIf we rotate the second and fourth dominoes, we can make every value in the top row equal to 2, as indicated by the second figure.\n\nExample 2:\nInput: tops = [3,5,1,2,3], bottoms = [3,6,3,3,4]\nOutput: -1\nExplanation: \nIn this case, it is not possible to rotate the dominoes to make one row of values equal.\n\n\u00a0\nConstraints:\n\n2 <= tops.length <= 2 * 104\nbottoms.length == tops.length\n1 <= tops[i], bottoms[i] <= 6\n\n"], "1008. Construct Binary Search Tree from Preorder Traversal": ["https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal", "Given an array of integers preorder, which represents the preorder traversal of a BST (i.e., binary search tree), construct the tree and return its root.\nIt is guaranteed that there is always possible to find a binary search tree with the given requirements for the given test cases.\nA binary search tree is a binary tree where for every node, any descendant of Node.left has a value strictly less than Node.val, and any descendant of Node.right has a value strictly greater than Node.val.\nA preorder traversal of a binary tree displays the value of the node first, then traverses Node.left, then traverses Node.right.\n\u00a0\nExample 1:\n\nInput: preorder = [8,5,1,7,10,12]\nOutput: [8,5,10,1,7,null,12]\n\nExample 2:\nInput: preorder = [1,3]\nOutput: [1,null,3]\n\n\u00a0\nConstraints:\n\n1 <= preorder.length <= 100\n1 <= preorder[i] <= 1000\nAll the values of preorder are unique.\n\n"], "1009. Complement of Base 10 Integer": ["https://leetcode.com/problems/complement-of-base-10-integer", "The complement of an integer is the integer you get when you flip all the 0's to 1's and all the 1's to 0's in its binary representation.\n\nFor example, The integer 5 is \"101\" in binary and its complement is \"010\" which is the integer 2.\n\nGiven an integer n, return its complement.\n\u00a0\nExample 1:\nInput: n = 5\nOutput: 2\nExplanation: 5 is \"101\" in binary, with complement \"010\" in binary, which is 2 in base-10.\n\nExample 2:\nInput: n = 7\nOutput: 0\nExplanation: 7 is \"111\" in binary, with complement \"000\" in binary, which is 0 in base-10.\n\nExample 3:\nInput: n = 10\nOutput: 5\nExplanation: 10 is \"1010\" in binary, with complement \"0101\" in binary, which is 5 in base-10.\n\n\u00a0\nConstraints:\n\n0 <= n < 109\n\n\u00a0\nNote: This question is the same as 476: https://leetcode.com/problems/number-complement/\n"], "1010. Pairs of Songs With Total Durations Divisible by 60": ["https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60", "You are given a list of songs where the ith song has a duration of time[i] seconds.\nReturn the number of pairs of songs for which their total duration in seconds is divisible by 60. Formally, we want the number of indices i, j such that i < j with (time[i] + time[j]) % 60 == 0.\n\u00a0\nExample 1:\nInput: time = [30,20,150,100,40]\nOutput: 3\nExplanation: Three pairs have a total duration divisible by 60:\n(time[0] = 30, time[2] = 150): total duration 180\n(time[1] = 20, time[3] = 100): total duration 120\n(time[1] = 20, time[4] = 40): total duration 60\n\nExample 2:\nInput: time = [60,60,60]\nOutput: 3\nExplanation: All three pairs have a total duration of 120, which is divisible by 60.\n\n\u00a0\nConstraints:\n\n1 <= time.length <= 6 * 104\n1 <= time[i] <= 500\n\n"], "1011. Capacity To Ship Packages Within D Days": ["https://leetcode.com/problems/capacity-to-ship-packages-within-d-days", "A conveyor belt has packages that must be shipped from one port to another within days days.\nThe ith package on the conveyor belt has a weight of weights[i]. Each day, we load the ship with packages on the conveyor belt (in the order given by weights). We may not load more weight than the maximum weight capacity of the ship.\nReturn the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within days days.\n\u00a0\nExample 1:\nInput: weights = [1,2,3,4,5,6,7,8,9,10], days = 5\nOutput: 15\nExplanation: A ship capacity of 15 is the minimum to ship all the packages in 5 days like this:\n1st day: 1, 2, 3, 4, 5\n2nd day: 6, 7\n3rd day: 8\n4th day: 9\n5th day: 10\n\nNote that the cargo must be shipped in the order given, so using a ship of capacity 14 and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed.\n\nExample 2:\nInput: weights = [3,2,2,4,1,4], days = 3\nOutput: 6\nExplanation: A ship capacity of 6 is the minimum to ship all the packages in 3 days like this:\n1st day: 3, 2\n2nd day: 2, 4\n3rd day: 1, 4\n\nExample 3:\nInput: weights = [1,2,3,1,1], days = 4\nOutput: 3\nExplanation:\n1st day: 1\n2nd day: 2\n3rd day: 3\n4th day: 1, 1\n\n\u00a0\nConstraints:\n\n1 <= days <= weights.length <= 5 * 104\n1 <= weights[i] <= 500\n"], "1012. Numbers With Repeated Digits": ["https://leetcode.com/problems/numbers-with-repeated-digits", "Given an integer n, return the number of positive integers in the range [1, n] that have at least one repeated digit.\n\u00a0\nExample 1:\nInput: n = 20\nOutput: 1\nExplanation: The only positive number (<= 20) with at least 1 repeated digit is 11.\n\nExample 2:\nInput: n = 100\nOutput: 10\nExplanation: The positive numbers (<= 100) with atleast 1 repeated digit are 11, 22, 33, 44, 55, 66, 77, 88, 99, and 100.\n\nExample 3:\nInput: n = 1000\nOutput: 262\n\n\u00a0\nConstraints:\n\n1 <= n <= 109\n\n"], "1013. Partition Array Into Three Parts With Equal Sum": ["https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum", "Given an array of integers arr, return true if we can partition the array into three non-empty parts with equal sums.\nFormally, we can partition the array if we can find indexes i + 1 < j with (arr[0] + arr[1] + ... + arr[i] == arr[i + 1] + arr[i + 2] + ... + arr[j - 1] == arr[j] + arr[j + 1] + ... + arr[arr.length - 1])\n\u00a0\nExample 1:\nInput: arr = [0,2,1,-6,6,-7,9,1,2,0,1]\nOutput: true\nExplanation: 0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1\n\nExample 2:\nInput: arr = [0,2,1,-6,6,7,9,-1,2,0,1]\nOutput: false\n\nExample 3:\nInput: arr = [3,3,6,5,-2,2,5,1,-9,4]\nOutput: true\nExplanation: 3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4\n\n\u00a0\nConstraints:\n\n3 <= arr.length <= 5 * 104\n-104 <= arr[i] <= 104\n\n"], "1014. Best Sightseeing Pair": ["https://leetcode.com/problems/best-sightseeing-pair", "You are given an integer array values where values[i] represents the value of the ith sightseeing spot. Two sightseeing spots i and j have a distance j - i between them.\nThe score of a pair (i < j) of sightseeing spots is values[i] + values[j] + i - j: the sum of the values of the sightseeing spots, minus the distance between them.\nReturn the maximum score of a pair of sightseeing spots.\n\u00a0\nExample 1:\nInput: values = [8,1,5,2,6]\nOutput: 11\nExplanation: i = 0, j = 2, values[i] + values[j] + i - j = 8 + 5 + 0 - 2 = 11\n\nExample 2:\nInput: values = [1,2]\nOutput: 2\n\n\u00a0\nConstraints:\n\n2 <= values.length <= 5 * 104\n1 <= values[i] <= 1000\n\n"], "1015. Smallest Integer Divisible by K": ["https://leetcode.com/problems/smallest-integer-divisible-by-k", "Given a positive integer k, you need to find the length of the smallest positive integer n such that n is divisible by k, and n only contains the digit 1.\nReturn the length of n. If there is no such n, return -1.\nNote: n may not fit in a 64-bit signed integer.\n\u00a0\nExample 1:\nInput: k = 1\nOutput: 1\nExplanation: The smallest answer is n = 1, which has length 1.\n\nExample 2:\nInput: k = 2\nOutput: -1\nExplanation: There is no such positive integer n divisible by 2.\n\nExample 3:\nInput: k = 3\nOutput: 3\nExplanation: The smallest answer is n = 111, which has length 3.\n\n\u00a0\nConstraints:\n\n1 <= k <= 105\n\n"], "1016. Binary String With Substrings Representing 1 To N": ["https://leetcode.com/problems/binary-string-with-substrings-representing-1-to-n", "Given a binary string s and a positive integer n, return true if the binary representation of all the integers in the range [1, n] are substrings of s, or false otherwise.\nA substring is a contiguous sequence of characters within a string.\n\u00a0\nExample 1:\nInput: s = \"0110\", n = 3\nOutput: true\nExample 2:\nInput: s = \"0110\", n = 4\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\ns[i] is either '0' or '1'.\n1 <= n <= 109\n\n"], "1017. Convert to Base -2": ["https://leetcode.com/problems/convert-to-base-2", "Given an integer n, return a binary string representing its representation in base -2.\nNote that the returned string should not have leading zeros unless the string is \"0\".\n\u00a0\nExample 1:\nInput: n = 2\nOutput: \"110\"\nExplantion: (-2)2 + (-2)1 = 2\n\nExample 2:\nInput: n = 3\nOutput: \"111\"\nExplantion: (-2)2 + (-2)1 + (-2)0 = 3\n\nExample 3:\nInput: n = 4\nOutput: \"100\"\nExplantion: (-2)2 = 4\n\n\u00a0\nConstraints:\n\n0 <= n <= 109\n\n"], "1018. Binary Prefix Divisible By 5": ["https://leetcode.com/problems/binary-prefix-divisible-by-5", "You are given a binary array nums (0-indexed).\nWe define xi as the number whose binary representation is the subarray nums[0..i] (from most-significant-bit to least-significant-bit).\n\nFor example, if nums = [1,0,1], then x0 = 1, x1 = 2, and x2 = 5.\n\nReturn an array of booleans answer where answer[i] is true if xi is divisible by 5.\n\u00a0\nExample 1:\nInput: nums = [0,1,1]\nOutput: [true,false,false]\nExplanation: The input numbers in binary are 0, 01, 011; which are 0, 1, and 3 in base-10.\nOnly the first number is divisible by 5, so answer[0] is true.\n\nExample 2:\nInput: nums = [1,1,1]\nOutput: [false,false,false]\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 105\nnums[i] is either 0 or 1.\n\n"], "1019. Next Greater Node In Linked List": ["https://leetcode.com/problems/next-greater-node-in-linked-list", "You are given the head of a linked list with n nodes.\nFor each node in the list, find the value of the next greater node. That is, for each node, find the value of the first node that is next to it and has a strictly larger value than it.\nReturn an integer array answer where answer[i] is the value of the next greater node of the ith node (1-indexed). If the ith node does not have a next greater node, set answer[i] = 0.\n\u00a0\nExample 1:\n\nInput: head = [2,1,5]\nOutput: [5,5,0]\n\nExample 2:\n\nInput: head = [2,7,4,3,5]\nOutput: [7,0,5,5,0]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the list is n.\n1 <= n <= 104\n1 <= Node.val <= 109\n\n"], "1020. Number of Enclaves": ["https://leetcode.com/problems/number-of-enclaves", "You are given an m x n binary matrix grid, where 0 represents a sea cell and 1 represents a land cell.\nA move consists of walking from one land cell to another adjacent (4-directionally) land cell or walking off the boundary of the grid.\nReturn the number of land cells in grid for which we cannot walk off the boundary of the grid in any number of moves.\n\u00a0\nExample 1:\n\nInput: grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\nOutput: 3\nExplanation: There are three 1s that are enclosed by 0s, and one 1 that is not enclosed because its on the boundary.\n\nExample 2:\n\nInput: grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\nOutput: 0\nExplanation: All 1s are either on the boundary or can reach the boundary.\n\n\u00a0\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 500\ngrid[i][j] is either 0 or 1.\n\n"], "1021. Remove Outermost Parentheses": ["https://leetcode.com/problems/remove-outermost-parentheses", "A valid parentheses string is either empty \"\", \"(\" + A + \")\", or A + B, where A and B are valid parentheses strings, and + represents string concatenation.\n\nFor example, \"\", \"()\", \"(())()\", and \"(()(()))\" are all valid parentheses strings.\n\nA valid parentheses string s is primitive if it is nonempty, and there does not exist a way to split it into s = A + B, with A and B nonempty valid parentheses strings.\nGiven a valid parentheses string s, consider its primitive decomposition: s = P1 + P2 + ... + Pk, where Pi are primitive valid parentheses strings.\nReturn s after removing the outermost parentheses of every primitive string in the primitive decomposition of s.\n\u00a0\nExample 1:\nInput: s = \"(()())(())\"\nOutput: \"()()()\"\nExplanation: \nThe input string is \"(()())(())\", with primitive decomposition \"(()())\" + \"(())\".\nAfter removing outer parentheses of each part, this is \"()()\" + \"()\" = \"()()()\".\n\nExample 2:\nInput: s = \"(()())(())(()(()))\"\nOutput: \"()()()()(())\"\nExplanation: \nThe input string is \"(()())(())(()(()))\", with primitive decomposition \"(()())\" + \"(())\" + \"(()(()))\".\nAfter removing outer parentheses of each part, this is \"()()\" + \"()\" + \"()(())\" = \"()()()()(())\".\n\nExample 3:\nInput: s = \"()()\"\nOutput: \"\"\nExplanation: \nThe input string is \"()()\", with primitive decomposition \"()\" + \"()\".\nAfter removing outer parentheses of each part, this is \"\" + \"\" = \"\".\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns[i] is either '(' or ')'.\ns is a valid parentheses string.\n\n"], "1022. Sum of Root To Leaf Binary Numbers": ["https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers", "You are given the root of a binary tree where each node has a value 0 or 1. Each root-to-leaf path represents a binary number starting with the most significant bit.\n\nFor example, if the path is 0 -> 1 -> 1 -> 0 -> 1, then this could represent 01101 in binary, which is 13.\n\nFor all leaves in the tree, consider the numbers represented by the path from the root to that leaf. Return the sum of these numbers.\nThe test cases are generated so that the answer fits in a 32-bits integer.\n\u00a0\nExample 1:\n\nInput: root = [1,0,1,0,1,0,1]\nOutput: 22\nExplanation: (100) + (101) + (110) + (111) = 4 + 5 + 6 + 7 = 22\n\nExample 2:\nInput: root = [0]\nOutput: 0\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 1000].\nNode.val is 0 or 1.\n\n"], "1023. Camelcase Matching": ["https://leetcode.com/problems/camelcase-matching", "Given an array of strings queries and a string pattern, return a boolean array answer where answer[i] is true if queries[i] matches pattern, and false otherwise.\nA query word queries[i] matches pattern if you can insert lowercase English letters pattern so that it equals the query. You may insert each character at any position and you may not insert any characters.\n\u00a0\nExample 1:\nInput: queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FB\"\nOutput: [true,false,true,true,false]\nExplanation: \"FooBar\" can be generated like this \"F\" + \"oo\" + \"B\" + \"ar\".\n\"FootBall\" can be generated like this \"F\" + \"oot\" + \"B\" + \"all\".\n\"FrameBuffer\" can be generated like this \"F\" + \"rame\" + \"B\" + \"uffer\".\n\nExample 2:\nInput: queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBa\"\nOutput: [true,false,true,false,false]\nExplanation: \"FooBar\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\".\n\"FootBall\" can be generated like this \"Fo\" + \"ot\" + \"Ba\" + \"ll\".\n\nExample 3:\nInput: queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBaT\"\nOutput: [false,true,false,false,false]\nExplanation: \"FooBarTest\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\" + \"T\" + \"est\".\n\n\u00a0\nConstraints:\n\n1 <= pattern.length, queries.length <= 100\n1 <= queries[i].length <= 100\nqueries[i] and pattern consist of English letters.\n\n"], "1024. Video Stitching": ["https://leetcode.com/problems/video-stitching", "You are given a series of video clips from a sporting event that lasted time seconds. These video clips can be overlapping with each other and have varying lengths.\nEach video clip is described by an array clips where clips[i] = [starti, endi] indicates that the ith clip started at starti and ended at endi.\nWe can cut these clips into segments freely.\n\nFor example, a clip [0, 7] can be cut into segments [0, 1] + [1, 3] + [3, 7].\n\nReturn the minimum number of clips needed so that we can cut the clips into segments that cover the entire sporting event [0, time]. If the task is impossible, return -1.\n\u00a0\nExample 1:\nInput: clips = [[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]], time = 10\nOutput: 3\nExplanation: We take the clips [0,2], [8,10], [1,9]; a total of 3 clips.\nThen, we can reconstruct the sporting event as follows:\nWe cut [1,9] into segments [1,2] + [2,8] + [8,9].\nNow we have segments [0,2] + [2,8] + [8,10] which cover the sporting event [0, 10].\n\nExample 2:\nInput: clips = [[0,1],[1,2]], time = 5\nOutput: -1\nExplanation: We cannot cover [0,5] with only [0,1] and [1,2].\n\nExample 3:\nInput: clips = [[0,1],[6,8],[0,2],[5,6],[0,4],[0,3],[6,7],[1,3],[4,7],[1,4],[2,5],[2,6],[3,4],[4,5],[5,7],[6,9]], time = 9\nOutput: 3\nExplanation: We can take clips [0,4], [4,7], and [6,9].\n\n\u00a0\nConstraints:\n\n1 <= clips.length <= 100\n0 <= starti <= endi <= 100\n1 <= time <= 100\n\n"], "1025. Divisor Game": ["https://leetcode.com/problems/divisor-game", "Alice and Bob take turns playing a game, with Alice starting first.\nInitially, there is a number n on the chalkboard. On each player's turn, that player makes a move consisting of:\n\nChoosing any x with 0 < x < n and n % x == 0.\nReplacing the number n on the chalkboard with n - x.\n\nAlso, if a player cannot make a move, they lose the game.\nReturn true if and only if Alice wins the game, assuming both players play optimally.\n\u00a0\nExample 1:\nInput: n = 2\nOutput: true\nExplanation: Alice chooses 1, and Bob has no more moves.\n\nExample 2:\nInput: n = 3\nOutput: false\nExplanation: Alice chooses 1, Bob chooses 1, and Alice has no more moves.\n\n\u00a0\nConstraints:\n\n1 <= n <= 1000\n\n"], "1026. Maximum Difference Between Node and Ancestor": ["https://leetcode.com/problems/maximum-difference-between-node-and-ancestor", "Given the root of a binary tree, find the maximum value v for which there exist different nodes a and b where v = |a.val - b.val| and a is an ancestor of b.\nA node a is an ancestor of b if either: any child of a is equal to b\u00a0or any child of a is an ancestor of b.\n\u00a0\nExample 1:\n\nInput: root = [8,3,10,1,6,null,14,null,null,4,7,13]\nOutput: 7\nExplanation: We have various ancestor-node differences, some of which are given below :\n|8 - 3| = 5\n|3 - 7| = 4\n|8 - 1| = 7\n|10 - 13| = 3\nAmong all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.\nExample 2:\n\nInput: root = [1,null,2,null,0,3]\nOutput: 3\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [2, 5000].\n0 <= Node.val <= 105\n\n"], "1027. Longest Arithmetic Subsequence": ["https://leetcode.com/problems/longest-arithmetic-subsequence", "Given an array nums of integers, return the length of the longest arithmetic subsequence in nums.\nRecall that a subsequence of an array nums is a list nums[i1], nums[i2], ..., nums[ik] with 0 <= i1 < i2 < ... < ik <= nums.length - 1, and that a sequence seq is arithmetic if seq[i+1] - seq[i] are all the same value (for 0 <= i < seq.length - 1).\n\u00a0\nExample 1:\nInput: nums = [3,6,9,12]\nOutput: 4\nExplanation: \nThe whole array is an arithmetic sequence with steps of length = 3.\n\nExample 2:\nInput: nums = [9,4,7,2,10]\nOutput: 3\nExplanation: \nThe longest arithmetic subsequence is [4,7,10].\n\nExample 3:\nInput: nums = [20,1,15,3,10,5,8]\nOutput: 4\nExplanation: \nThe longest arithmetic subsequence is [20,15,10,5].\n\n\u00a0\nConstraints:\n\n2 <= nums.length <= 1000\n0 <= nums[i] <= 500\n\n"], "1028. Recover a Tree From Preorder Traversal": ["https://leetcode.com/problems/recover-a-tree-from-preorder-traversal", "We run a\u00a0preorder\u00a0depth-first search (DFS) on the root of a binary tree.\nAt each node in this traversal, we output D dashes (where D is the depth of this node), then we output the value of this node.\u00a0 If the depth of a node is D, the depth of its immediate child is D + 1.\u00a0 The depth of the root node is 0.\nIf a node has only one child, that child is guaranteed to be the left child.\nGiven the output traversal of this traversal, recover the tree and return its root.\n\u00a0\nExample 1:\n\nInput: traversal = \"1-2--3--4-5--6--7\"\nOutput: [1,2,5,3,4,6,7]\n\nExample 2:\n\nInput: traversal = \"1-2--3---4-5--6---7\"\nOutput: [1,2,5,3,null,6,null,4,null,7]\n\nExample 3:\n\nInput: traversal = \"1-401--349---90--88\"\nOutput: [1,401,null,349,88,90]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the original tree is in the range [1, 1000].\n1 <= Node.val <= 109\n\n"], "1029. Two City Scheduling": ["https://leetcode.com/problems/two-city-scheduling", "A company is planning to interview 2n people. Given the array costs where costs[i] = [aCosti, bCosti],\u00a0the cost of flying the ith person to city a is aCosti, and the cost of flying the ith person to city b is bCosti.\nReturn the minimum cost to fly every person to a city such that exactly n people arrive in each city.\n\u00a0\nExample 1:\nInput: costs = [[10,20],[30,200],[400,50],[30,20]]\nOutput: 110\nExplanation: \nThe first person goes to city A for a cost of 10.\nThe second person goes to city A for a cost of 30.\nThe third person goes to city B for a cost of 50.\nThe fourth person goes to city B for a cost of 20.\n\nThe total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.\n\nExample 2:\nInput: costs = [[259,770],[448,54],[926,667],[184,139],[840,118],[577,469]]\nOutput: 1859\n\nExample 3:\nInput: costs = [[515,563],[451,713],[537,709],[343,819],[855,779],[457,60],[650,359],[631,42]]\nOutput: 3086\n\n\u00a0\nConstraints:\n\n2 * n == costs.length\n2 <= costs.length <= 100\ncosts.length is even.\n1 <= aCosti, bCosti <= 1000\n\n"], "1030. Matrix Cells in Distance Order": ["https://leetcode.com/problems/matrix-cells-in-distance-order", "You are given four integers row, cols, rCenter, and cCenter. There is a rows x cols matrix and you are on the cell with the coordinates (rCenter, cCenter).\nReturn the coordinates of all cells in the matrix, sorted by their distance from (rCenter, cCenter) from the smallest distance to the largest distance. You may return the answer in any order that satisfies this condition.\nThe distance between two cells (r1, c1) and (r2, c2) is |r1 - r2| + |c1 - c2|.\n\u00a0\nExample 1:\nInput: rows = 1, cols = 2, rCenter = 0, cCenter = 0\nOutput: [[0,0],[0,1]]\nExplanation: The distances from (0, 0) to other cells are: [0,1]\n\nExample 2:\nInput: rows = 2, cols = 2, rCenter = 0, cCenter = 1\nOutput: [[0,1],[0,0],[1,1],[1,0]]\nExplanation: The distances from (0, 1) to other cells are: [0,1,1,2]\nThe answer [[0,1],[1,1],[0,0],[1,0]] would also be accepted as correct.\n\nExample 3:\nInput: rows = 2, cols = 3, rCenter = 1, cCenter = 2\nOutput: [[1,2],[0,2],[1,1],[0,1],[1,0],[0,0]]\nExplanation: The distances from (1, 2) to other cells are: [0,1,1,2,2,3]\nThere are other answers that would also be accepted as correct, such as [[1,2],[1,1],[0,2],[1,0],[0,1],[0,0]].\n\n\u00a0\nConstraints:\n\n1 <= rows, cols <= 100\n0 <= rCenter < rows\n0 <= cCenter < cols\n\n"], "1031. Maximum Sum of Two Non-Overlapping Subarrays": ["https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays", "Given an integer array nums and two integers firstLen and secondLen, return the maximum sum of elements in two non-overlapping subarrays with lengths firstLen and secondLen.\nThe array with length firstLen could occur before or after the array with length secondLen, but they have to be non-overlapping.\nA subarray is a contiguous part of an array.\n\u00a0\nExample 1:\nInput: nums = [0,6,5,2,2,5,1,9,4], firstLen = 1, secondLen = 2\nOutput: 20\nExplanation: One choice of subarrays is [9] with length 1, and [6,5] with length 2.\n\nExample 2:\nInput: nums = [3,8,1,3,2,1,8,9,0], firstLen = 3, secondLen = 2\nOutput: 29\nExplanation: One choice of subarrays is [3,8,1] with length 3, and [8,9] with length 2.\n\nExample 3:\nInput: nums = [2,1,5,6,0,9,5,0,3,8], firstLen = 4, secondLen = 3\nOutput: 31\nExplanation: One choice of subarrays is [5,6,0,9] with length 4, and [0,3,8] with length 3.\n\n\u00a0\nConstraints:\n\n1 <= firstLen, secondLen <= 1000\n2 <= firstLen + secondLen <= 1000\nfirstLen + secondLen <= nums.length <= 1000\n0 <= nums[i] <= 1000\n\n"], "1032. Stream of Characters": ["https://leetcode.com/problems/stream-of-characters", "Design an algorithm that accepts a stream of characters and checks if a suffix of these characters is a string of a given array of strings words.\nFor example, if words = [\"abc\", \"xyz\"]\u00a0and the stream added the four characters (one by one) 'a', 'x', 'y', and 'z', your algorithm should detect that the suffix \"xyz\" of the characters \"axyz\" matches \"xyz\" from words.\nImplement the StreamChecker class:\n\nStreamChecker(String[] words) Initializes the object with the strings array words.\nboolean query(char letter) Accepts a new character from the stream and returns true if any non-empty suffix from the stream forms a word that is in words.\n\n\u00a0\nExample 1:\nInput\n[\"StreamChecker\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\"]\n[[[\"cd\", \"f\", \"kl\"]], [\"a\"], [\"b\"], [\"c\"], [\"d\"], [\"e\"], [\"f\"], [\"g\"], [\"h\"], [\"i\"], [\"j\"], [\"k\"], [\"l\"]]\nOutput\n[null, false, false, false, true, false, true, false, false, false, false, false, true]\n\nExplanation\nStreamChecker streamChecker = new StreamChecker([\"cd\", \"f\", \"kl\"]);\nstreamChecker.query(\"a\"); // return False\nstreamChecker.query(\"b\"); // return False\nstreamChecker.query(\"c\"); // return False\nstreamChecker.query(\"d\"); // return True, because 'cd' is in the wordlist\nstreamChecker.query(\"e\"); // return False\nstreamChecker.query(\"f\"); // return True, because 'f' is in the wordlist\nstreamChecker.query(\"g\"); // return False\nstreamChecker.query(\"h\"); // return False\nstreamChecker.query(\"i\"); // return False\nstreamChecker.query(\"j\"); // return False\nstreamChecker.query(\"k\"); // return False\nstreamChecker.query(\"l\"); // return True, because 'kl' is in the wordlist\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 2000\n1 <= words[i].length <= 2000\nwords[i] consists of lowercase English letters.\nletter is a lowercase English letter.\nAt most 4 * 104 calls will be made to query.\n\n"], "1033. Moving Stones Until Consecutive": ["https://leetcode.com/problems/moving-stones-until-consecutive", "There are three stones in different positions on the X-axis. You are given three integers a, b, and c, the positions of the stones.\nIn one move, you pick up a stone at an endpoint (i.e., either the lowest or highest position stone), and move it to an unoccupied position between those endpoints. Formally, let's say the stones are currently at positions x, y, and z with x < y < z. You pick up the stone at either position x or position z, and move that stone to an integer position k, with x < k < z and k != y.\nThe game ends when you cannot make any more moves (i.e., the stones are in three consecutive positions).\nReturn an integer array answer of length 2 where:\n\nanswer[0] is the minimum number of moves you can play, and\nanswer[1] is the maximum number of moves you can play.\n\n\u00a0\nExample 1:\nInput: a = 1, b = 2, c = 5\nOutput: [1,2]\nExplanation: Move the stone from 5 to 3, or move the stone from 5 to 4 to 3.\n\nExample 2:\nInput: a = 4, b = 3, c = 2\nOutput: [0,0]\nExplanation: We cannot make any moves.\n\nExample 3:\nInput: a = 3, b = 5, c = 1\nOutput: [1,2]\nExplanation: Move the stone from 1 to 4; or move the stone from 1 to 2 to 4.\n\n\u00a0\nConstraints:\n\n1 <= a, b, c <= 100\na, b, and c have different values.\n\n"], "1034. Coloring A Border": ["https://leetcode.com/problems/coloring-a-border", "You are given an m x n integer matrix grid, and three integers row, col, and color. Each value in the grid represents the color of the grid square at that location.\nTwo squares belong to the same connected component if they have the same color and are next to each other in any of the 4 directions.\nThe border of a connected component is all the squares in the connected component that are either 4-directionally adjacent to a square not in the component, or on the boundary of the grid (the first or last row or column).\nYou should color the border of the connected component that contains the square grid[row][col] with color.\nReturn the final grid.\n\u00a0\nExample 1:\nInput: grid = [[1,1],[1,2]], row = 0, col = 0, color = 3\nOutput: [[3,3],[3,2]]\nExample 2:\nInput: grid = [[1,2,2],[2,3,2]], row = 0, col = 1, color = 3\nOutput: [[1,3,3],[2,3,3]]\nExample 3:\nInput: grid = [[1,1,1],[1,1,1],[1,1,1]], row = 1, col = 1, color = 2\nOutput: [[2,2,2],[2,1,2],[2,2,2]]\n\n\u00a0\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 50\n1 <= grid[i][j], color <= 1000\n0 <= row < m\n0 <= col < n\n\n"], "1035. Uncrossed Lines": ["https://leetcode.com/problems/uncrossed-lines", "You are given two integer arrays nums1 and nums2. We write the integers of nums1 and nums2 (in the order they are given) on two separate horizontal lines.\nWe may draw connecting lines: a straight line connecting two numbers nums1[i] and nums2[j] such that:\n\nnums1[i] == nums2[j], and\nthe line we draw does not intersect any other connecting (non-horizontal) line.\n\nNote that a connecting line cannot intersect even at the endpoints (i.e., each number can only belong to one connecting line).\nReturn the maximum number of connecting lines we can draw in this way.\n\u00a0\nExample 1:\n\nInput: nums1 = [1,4,2], nums2 = [1,2,4]\nOutput: 2\nExplanation: We can draw 2 uncrossed lines as in the diagram.\nWe cannot draw 3 uncrossed lines, because the line from nums1[1] = 4 to nums2[2] = 4 will intersect the line from nums1[2]=2 to nums2[1]=2.\n\nExample 2:\nInput: nums1 = [2,5,1,2,5], nums2 = [10,5,2,1,5,2]\nOutput: 3\n\nExample 3:\nInput: nums1 = [1,3,7,1,7,5], nums2 = [1,9,2,5,1]\nOutput: 2\n\n\u00a0\nConstraints:\n\n1 <= nums1.length, nums2.length <= 500\n1 <= nums1[i], nums2[j] <= 2000\n\n"], "1036. Escape a Large Maze": ["https://leetcode.com/problems/escape-a-large-maze", "There is a 1 million by 1 million grid on an XY-plane, and the coordinates of each grid square are (x, y).\nWe start at the source = [sx, sy] square and want to reach the target = [tx, ty] square. There is also an array of blocked squares, where each blocked[i] = [xi, yi] represents a blocked square with coordinates (xi, yi).\nEach move, we can walk one square north, east, south, or west if the square is not in the array of blocked squares. We are also not allowed to walk outside of the grid.\nReturn true if and only if it is possible to reach the target square from the source square through a sequence of valid moves.\n\u00a0\nExample 1:\nInput: blocked = [[0,1],[1,0]], source = [0,0], target = [0,2]\nOutput: false\nExplanation: The target square is inaccessible starting from the source square because we cannot move.\nWe cannot move north or east because those squares are blocked.\nWe cannot move south or west because we cannot go outside of the grid.\n\nExample 2:\nInput: blocked = [], source = [0,0], target = [999999,999999]\nOutput: true\nExplanation: Because there are no blocked cells, it is possible to reach the target square.\n\n\u00a0\nConstraints:\n\n0 <= blocked.length <= 200\nblocked[i].length == 2\n0 <= xi, yi < 106\nsource.length == target.length == 2\n0 <= sx, sy, tx, ty < 106\nsource != target\nIt is guaranteed that source and target are not blocked.\n\n"], "1037. Valid Boomerang": ["https://leetcode.com/problems/valid-boomerang", "Given an array points where points[i] = [xi, yi] represents a point on the X-Y plane, return true if these points are a boomerang.\nA boomerang is a set of three points that are all distinct and not in a straight line.\n\u00a0\nExample 1:\nInput: points = [[1,1],[2,3],[3,2]]\nOutput: true\nExample 2:\nInput: points = [[1,1],[2,2],[3,3]]\nOutput: false\n\n\u00a0\nConstraints:\n\npoints.length == 3\npoints[i].length == 2\n0 <= xi, yi <= 100\n\n"], "1038. Binary Search Tree to Greater Sum Tree": ["https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree", "Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.\nAs a reminder, a binary search tree is a tree that satisfies these constraints:\n\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\n\u00a0\nExample 1:\n\nInput: root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\nOutput: [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n\nExample 2:\nInput: root = [0,null,1]\nOutput: [1,null,1]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 100].\n0 <= Node.val <= 100\nAll the values in the tree are unique.\n\n\u00a0\nNote: This question is the same as 538: https://leetcode.com/problems/convert-bst-to-greater-tree/\n"], "1039. Minimum Score Triangulation of Polygon": ["https://leetcode.com/problems/minimum-score-triangulation-of-polygon", "You have a convex n-sided polygon where each vertex has an integer value. You are given an integer array values where values[i] is the value of the ith vertex (i.e., clockwise order).\nYou will triangulate the polygon into n - 2 triangles. For each triangle, the value of that triangle is the product of the values of its vertices, and the total score of the triangulation is the sum of these values over all n - 2 triangles in the triangulation.\nReturn the smallest possible total score that you can achieve with some triangulation of the polygon.\n\u00a0\nExample 1:\n\nInput: values = [1,2,3]\nOutput: 6\nExplanation: The polygon is already triangulated, and the score of the only triangle is 6.\n\nExample 2:\n\nInput: values = [3,7,4,5]\nOutput: 144\nExplanation: There are two triangulations, with possible scores: 3*7*5 + 4*5*7 = 245, or 3*4*5 + 3*4*7 = 144.\nThe minimum score is 144.\n\nExample 3:\n\nInput: values = [1,3,1,4,1,5]\nOutput: 13\nExplanation: The minimum score triangulation has score 1*1*3 + 1*1*4 + 1*1*5 + 1*1*1 = 13.\n\n\u00a0\nConstraints:\n\nn == values.length\n3 <= n <= 50\n1 <= values[i] <= 100\n\n"], "1040. Moving Stones Until Consecutive II": ["https://leetcode.com/problems/moving-stones-until-consecutive-ii", "There are some stones in different positions on the X-axis. You are given an integer array stones, the positions of the stones.\nCall a stone an endpoint stone if it has the smallest or largest position. In one move, you pick up an endpoint stone and move it to an unoccupied position so that it is no longer an endpoint stone.\n\nIn particular, if the stones are at say, stones = [1,2,5], you cannot move the endpoint stone at position 5, since moving it to any position (such as 0, or 3) will still keep that stone as an endpoint stone.\n\nThe game ends when you cannot make any more moves (i.e., the stones are in three consecutive positions).\nReturn an integer array answer of length 2 where:\n\nanswer[0] is the minimum number of moves you can play, and\nanswer[1] is the maximum number of moves you can play.\n\n\u00a0\nExample 1:\nInput: stones = [7,4,9]\nOutput: [1,2]\nExplanation: We can move 4 -> 8 for one move to finish the game.\nOr, we can move 9 -> 5, 4 -> 6 for two moves to finish the game.\n\nExample 2:\nInput: stones = [6,5,4,3,10]\nOutput: [2,3]\nExplanation: We can move 3 -> 8 then 10 -> 7 to finish the game.\nOr, we can move 3 -> 7, 4 -> 8, 5 -> 9 to finish the game.\nNotice we cannot move 10 -> 2 to finish the game, because that would be an illegal move.\n\n\u00a0\nConstraints:\n\n3 <= stones.length <= 104\n1 <= stones[i] <= 109\nAll the values of stones are unique.\n\n"], "1041. Robot Bounded In Circle": ["https://leetcode.com/problems/robot-bounded-in-circle", "On an infinite plane, a robot initially stands at (0, 0) and faces north. Note that:\n\nThe north direction is the positive direction of the y-axis.\nThe south direction is the negative direction of the y-axis.\nThe east direction is the positive direction of the x-axis.\nThe west direction is the negative direction of the x-axis.\n\nThe robot can receive one of three instructions:\n\n\"G\": go straight 1 unit.\n\"L\": turn 90 degrees to the left (i.e., anti-clockwise direction).\n\"R\": turn 90 degrees to the right (i.e., clockwise direction).\n\nThe robot performs the instructions given in order, and repeats them forever.\nReturn true if and only if there exists a circle in the plane such that the robot never leaves the circle.\n\u00a0\nExample 1:\nInput: instructions = \"GGLLGG\"\nOutput: true\nExplanation: The robot is initially at (0, 0) facing the north direction.\n\"G\": move one step. Position: (0, 1). Direction: North.\n\"G\": move one step. Position: (0, 2). Direction: North.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 2). Direction: West.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 2). Direction: South.\n\"G\": move one step. Position: (0, 1). Direction: South.\n\"G\": move one step. Position: (0, 0). Direction: South.\nRepeating the instructions, the robot goes into the cycle: (0, 0) --> (0, 1) --> (0, 2) --> (0, 1) --> (0, 0).\nBased on that, we return true.\n\nExample 2:\nInput: instructions = \"GG\"\nOutput: false\nExplanation: The robot is initially at (0, 0) facing the north direction.\n\"G\": move one step. Position: (0, 1). Direction: North.\n\"G\": move one step. Position: (0, 2). Direction: North.\nRepeating the instructions, keeps advancing in the north direction and does not go into cycles.\nBased on that, we return false.\n\nExample 3:\nInput: instructions = \"GL\"\nOutput: true\nExplanation: The robot is initially at (0, 0) facing the north direction.\n\"G\": move one step. Position: (0, 1). Direction: North.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 1). Direction: West.\n\"G\": move one step. Position: (-1, 1). Direction: West.\n\"L\": turn 90 degrees anti-clockwise. Position: (-1, 1). Direction: South.\n\"G\": move one step. Position: (-1, 0). Direction: South.\n\"L\": turn 90 degrees anti-clockwise. Position: (-1, 0). Direction: East.\n\"G\": move one step. Position: (0, 0). Direction: East.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 0). Direction: North.\nRepeating the instructions, the robot goes into the cycle: (0, 0) --> (0, 1) --> (-1, 1) --> (-1, 0) --> (0, 0).\nBased on that, we return true.\n\n\u00a0\nConstraints:\n\n1 <= instructions.length <= 100\ninstructions[i] is 'G', 'L' or, 'R'.\n\n"], "1042. Flower Planting With No Adjacent": ["https://leetcode.com/problems/flower-planting-with-no-adjacent", "You have n gardens, labeled from 1 to n, and an array paths where paths[i] = [xi, yi] describes a bidirectional path between garden xi to garden yi. In each garden, you want to plant one of 4 types of flowers.\nAll gardens have at most 3 paths coming into or leaving it.\nYour task is to choose a flower type for each garden such that, for any two gardens connected by a path, they have different types of flowers.\nReturn any such a choice as an array answer, where answer[i] is the type of flower planted in the (i+1)th garden. The flower types are denoted 1, 2, 3, or 4. It is guaranteed an answer exists.\n\u00a0\nExample 1:\nInput: n = 3, paths = [[1,2],[2,3],[3,1]]\nOutput: [1,2,3]\nExplanation:\nGardens 1 and 2 have different types.\nGardens 2 and 3 have different types.\nGardens 3 and 1 have different types.\nHence, [1,2,3] is a valid answer. Other valid answers include [1,2,4], [1,4,2], and [3,2,1].\n\nExample 2:\nInput: n = 4, paths = [[1,2],[3,4]]\nOutput: [1,2,1,2]\n\nExample 3:\nInput: n = 4, paths = [[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]\nOutput: [1,2,3,4]\n\n\u00a0\nConstraints:\n\n1 <= n <= 104\n0 <= paths.length <= 2 * 104\npaths[i].length == 2\n1 <= xi, yi <= n\nxi != yi\nEvery garden has at most 3 paths coming into or leaving it.\n\n"], "1043. Partition Array for Maximum Sum": ["https://leetcode.com/problems/partition-array-for-maximum-sum", "Given an integer array arr, partition the array into (contiguous) subarrays of length at most k. After partitioning, each subarray has their values changed to become the maximum value of that subarray.\nReturn the largest sum of the given array after partitioning. Test cases are generated so that the answer fits in a 32-bit integer.\n\u00a0\nExample 1:\nInput: arr = [1,15,7,9,2,5,10], k = 3\nOutput: 84\nExplanation: arr becomes [15,15,15,9,10,10,10]\n\nExample 2:\nInput: arr = [1,4,1,5,7,3,6,1,9,9,3], k = 4\nOutput: 83\n\nExample 3:\nInput: arr = [1], k = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 500\n0 <= arr[i] <= 109\n1 <= k <= arr.length\n\n"], "1044. Longest Duplicate Substring": ["https://leetcode.com/problems/longest-duplicate-substring", ""], "1046. Last Stone Weight": ["https://leetcode.com/problems/last-stone-weight", "You are given an array of integers stones where stones[i] is the weight of the ith stone.\nWe are playing a game with the stones. On each turn, we choose the heaviest two stones and smash them together. Suppose the heaviest two stones have weights x and y with x <= y. The result of this smash is:\n\nIf x == y, both stones are destroyed, and\nIf x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.\n\nAt the end of the game, there is at most one stone left.\nReturn the smallest possible weight of the left stone. If there are no stones left, return 0.\n\u00a0\nExample 1:\nInput: stones = [2,7,4,1,8,1]\nOutput: 1\nExplanation: \nWe combine 7 and 8 to get 1 so the array converts to [2,4,1,1,1] then,\nwe combine 2 and 4 to get 2 so the array converts to [2,1,1,1] then,\nwe combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\nwe combine 1 and 1 to get 0 so the array converts to [1] then that's the value of the last stone.\n\nExample 2:\nInput: stones = [1]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= stones.length <= 30\n1 <= stones[i] <= 1000\n\n"], "1047. Remove All Adjacent Duplicates In String": ["https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string", "You are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them.\nWe repeatedly make duplicate removals on s until we no longer can.\nReturn the final string after all such duplicate removals have been made. It can be proven that the answer is unique.\n\u00a0\nExample 1:\nInput: s = \"abbaca\"\nOutput: \"ca\"\nExplanation: \nFor example, in \"abbaca\" we could remove \"bb\" since the letters are adjacent and equal, and this is the only possible move.  The result of this move is that the string is \"aaca\", of which only \"aa\" is possible, so the final string is \"ca\".\n\nExample 2:\nInput: s = \"azxxzy\"\nOutput: \"ay\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 105\ns consists of lowercase English letters.\n\n"], "1048. Longest String Chain": ["https://leetcode.com/problems/longest-string-chain", "You are given an array of words where each word consists of lowercase English letters.\nwordA is a predecessor of wordB if and only if we can insert exactly one letter anywhere in wordA without changing the order of the other characters to make it equal to wordB.\n\nFor example, \"abc\" is a predecessor of \"abac\", while \"cba\" is not a predecessor of \"bcad\".\n\nA word chain is a sequence of words [word1, word2, ..., wordk] with k >= 1, where word1 is a predecessor of word2, word2 is a predecessor of word3, and so on. A single word is trivially a word chain with k == 1.\nReturn the length of the longest possible word chain with words chosen from the given list of words.\n\u00a0\nExample 1:\nInput: words = [\"a\",\"b\",\"ba\",\"bca\",\"bda\",\"bdca\"]\nOutput: 4\nExplanation: One of the longest word chains is [\"a\",\"ba\",\"bda\",\"bdca\"].\n\nExample 2:\nInput: words = [\"xbc\",\"pcxbcf\",\"xb\",\"cxbc\",\"pcxbc\"]\nOutput: 5\nExplanation: All the words can be put in a word chain [\"xb\", \"xbc\", \"cxbc\", \"pcxbc\", \"pcxbcf\"].\n\nExample 3:\nInput: words = [\"abcd\",\"dbqca\"]\nOutput: 1\nExplanation: The trivial word chain [\"abcd\"] is one of the longest word chains.\n[\"abcd\",\"dbqca\"] is not a valid word chain because the ordering of the letters is changed.\n\n\u00a0\nConstraints:\n\n1 <= words.length <= 1000\n1 <= words[i].length <= 16\nwords[i] only consists of lowercase English letters.\n\n"], "1049. Last Stone Weight II": ["https://leetcode.com/problems/last-stone-weight-ii", "You are given an array of integers stones where stones[i] is the weight of the ith stone.\nWe are playing a game with the stones. On each turn, we choose any two stones and smash them together. Suppose the stones have weights x and y with x <= y. The result of this smash is:\n\nIf x == y, both stones are destroyed, and\nIf x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.\n\nAt the end of the game, there is at most one stone left.\nReturn the smallest possible weight of the left stone. If there are no stones left, return 0.\n\u00a0\nExample 1:\nInput: stones = [2,7,4,1,8,1]\nOutput: 1\nExplanation:\nWe can combine 2 and 4 to get 2, so the array converts to [2,7,1,8,1] then,\nwe can combine 7 and 8 to get 1, so the array converts to [2,1,1,1] then,\nwe can combine 2 and 1 to get 1, so the array converts to [1,1,1] then,\nwe can combine 1 and 1 to get 0, so the array converts to [1], then that's the optimal value.\n\nExample 2:\nInput: stones = [31,26,33,21,40]\nOutput: 5\n\n\u00a0\nConstraints:\n\n1 <= stones.length <= 30\n1 <= stones[i] <= 100\n\n"], "1050. Actors and Directors Who Cooperated At Least Three Times": ["https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times", "SQL SchemaTable: ActorDirector\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| actor_id    | int     |\n| director_id | int     |\n| timestamp   | int     |\n+-------------+---------+\ntimestamp is the primary key column for this table.\n\n\u00a0\nWrite a SQL query for a report that provides the pairs (actor_id, director_id) where the actor has cooperated with the director at least three times.\nReturn the result table in any order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nActorDirector table:\n+-------------+-------------+-------------+\n| actor_id    | director_id | timestamp   |\n+-------------+-------------+-------------+\n| 1           | 1           | 0           |\n| 1           | 1           | 1           |\n| 1           | 1           | 2           |\n| 1           | 2           | 3           |\n| 1           | 2           | 4           |\n| 2           | 1           | 5           |\n| 2           | 1           | 6           |\n+-------------+-------------+-------------+\nOutput: \n+-------------+-------------+\n| actor_id    | director_id |\n+-------------+-------------+\n| 1           | 1           |\n+-------------+-------------+\nExplanation: The only pair is (1, 1) where they cooperated exactly 3 times.\n\n"], "1051. Height Checker": ["https://leetcode.com/problems/height-checker", "A school is trying to take an annual photo of all the students. The students are asked to stand in a single file line in non-decreasing order by height. Let this ordering be represented by the integer array expected where expected[i] is the expected height of the ith student in line.\nYou are given an integer array heights representing the current order that the students are standing in. Each heights[i] is the height of the ith student in line (0-indexed).\nReturn the number of indices where heights[i] != expected[i].\n\u00a0\nExample 1:\nInput: heights = [1,1,4,2,1,3]\nOutput: 3\nExplanation: \nheights:  [1,1,4,2,1,3]\nexpected: [1,1,1,2,3,4]\nIndices 2, 4, and 5 do not match.\n\nExample 2:\nInput: heights = [5,1,2,3,4]\nOutput: 5\nExplanation:\nheights:  [5,1,2,3,4]\nexpected: [1,2,3,4,5]\nAll indices do not match.\n\nExample 3:\nInput: heights = [1,2,3,4,5]\nOutput: 0\nExplanation:\nheights:  [1,2,3,4,5]\nexpected: [1,2,3,4,5]\nAll indices match.\n\n\u00a0\nConstraints:\n\n1 <= heights.length <= 100\n1 <= heights[i] <= 100\n\n"], "1052. Grumpy Bookstore Owner": ["https://leetcode.com/problems/grumpy-bookstore-owner", "There is a bookstore owner that has a store open for n minutes. Every minute, some number of customers enter the store. You are given an integer array customers of length n where customers[i] is the number of the customer that enters the store at the start of the ith minute and all those customers leave after the end of that minute.\nOn some minutes, the bookstore owner is grumpy. You are given a binary array grumpy where grumpy[i] is 1 if the bookstore owner is grumpy during the ith minute, and is 0 otherwise.\nWhen the bookstore owner is grumpy, the customers of that minute are not satisfied, otherwise, they are satisfied.\nThe bookstore owner knows a secret technique to keep themselves not grumpy for minutes consecutive minutes, but can only use it once.\nReturn the maximum number of customers that can be satisfied throughout the day.\n\u00a0\nExample 1:\nInput: customers = [1,0,1,2,1,1,7,5], grumpy = [0,1,0,1,0,1,0,1], minutes = 3\nOutput: 16\nExplanation: The bookstore owner keeps themselves not grumpy for the last 3 minutes. \nThe maximum number of customers that can be satisfied = 1 + 1 + 1 + 1 + 7 + 5 = 16.\n\nExample 2:\nInput: customers = [1], grumpy = [0], minutes = 1\nOutput: 1\n\n\u00a0\nConstraints:\n\nn == customers.length == grumpy.length\n1 <= minutes <= n <= 2 * 104\n0 <= customers[i] <= 1000\ngrumpy[i] is either 0 or 1.\n\n"], "1053. Previous Permutation With One Swap": ["https://leetcode.com/problems/previous-permutation-with-one-swap", "Given an array of positive integers arr (not necessarily distinct), return the lexicographically largest permutation that is smaller than arr, that can be made with exactly one swap (A swap exchanges the positions of two numbers arr[i] and arr[j]). If it cannot be done, then return the same array.\n\u00a0\nExample 1:\nInput: arr = [3,2,1]\nOutput: [3,1,2]\nExplanation: Swapping 2 and 1.\n\nExample 2:\nInput: arr = [1,1,5]\nOutput: [1,1,5]\nExplanation: This is already the smallest permutation.\n\nExample 3:\nInput: arr = [1,9,4,6,7]\nOutput: [1,7,4,6,9]\nExplanation: Swapping 9 and 7.\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 104\n1 <= arr[i] <= 104\n\n"], "1054. Distant Barcodes": ["https://leetcode.com/problems/distant-barcodes", "In a warehouse, there is a row of barcodes, where the ith barcode is barcodes[i].\nRearrange the barcodes so that no two adjacent barcodes are equal. You may return any answer, and it is guaranteed an answer exists.\n\u00a0\nExample 1:\nInput: barcodes = [1,1,1,2,2,2]\nOutput: [2,1,2,1,2,1]\nExample 2:\nInput: barcodes = [1,1,1,1,2,2,3,3]\nOutput: [1,3,1,3,1,2,1,2]\n\n\u00a0\nConstraints:\n\n1 <= barcodes.length <= 10000\n1 <= barcodes[i] <= 10000\n\n"], "1071. Greatest Common Divisor of Strings": ["https://leetcode.com/problems/greatest-common-divisor-of-strings", ""], "1072. Flip Columns For Maximum Number of Equal Rows": ["https://leetcode.com/problems/flip-columns-for-maximum-number-of-equal-rows", "You are given an m x n binary matrix matrix.\nYou can choose any number of columns in the matrix and flip every cell in that column (i.e., Change the value of the cell from 0 to 1 or vice versa).\nReturn the maximum number of rows that have all values equal after some number of flips.\n\u00a0\nExample 1:\nInput: matrix = [[0,1],[1,1]]\nOutput: 1\nExplanation: After flipping no values, 1 row has all values equal.\n\nExample 2:\nInput: matrix = [[0,1],[1,0]]\nOutput: 2\nExplanation: After flipping values in the first column, both rows have equal values.\n\nExample 3:\nInput: matrix = [[0,0,0],[0,0,1],[1,1,0]]\nOutput: 2\nExplanation: After flipping values in the first two columns, the last two rows have equal values.\n\n\u00a0\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 300\nmatrix[i][j] is either\u00a00 or 1.\n\n"], "1073. Adding Two Negabinary Numbers": ["https://leetcode.com/problems/adding-two-negabinary-numbers", "Given two numbers arr1 and arr2 in base -2, return the result of adding them together.\nEach number is given in array format:\u00a0 as an array of 0s and 1s, from most significant bit to least significant bit.\u00a0 For example, arr = [1,1,0,1] represents the number (-2)^3\u00a0+ (-2)^2 + (-2)^0 = -3.\u00a0 A number arr in array, format is also guaranteed to have no leading zeros: either\u00a0arr == [0] or arr[0] == 1.\nReturn the result of adding arr1 and arr2 in the same format: as an array of 0s and 1s with no leading zeros.\n\u00a0\nExample 1:\nInput: arr1 = [1,1,1,1,1], arr2 = [1,0,1]\nOutput: [1,0,0,0,0]\nExplanation: arr1 represents 11, arr2 represents 5, the output represents 16.\n\nExample 2:\nInput: arr1 = [0], arr2 = [0]\nOutput: [0]\n\nExample 3:\nInput: arr1 = [0], arr2 = [1]\nOutput: [1]\n\n\u00a0\nConstraints:\n\n1 <= arr1.length,\u00a0arr2.length <= 1000\narr1[i]\u00a0and arr2[i] are\u00a00 or 1\narr1 and arr2 have no leading zeros\n\n"], "1074. Number of Submatrices That Sum to Target": ["https://leetcode.com/problems/number-of-submatrices-that-sum-to-target", "Given a matrix\u00a0and a target, return the number of non-empty submatrices that sum to target.\nA submatrix x1, y1, x2, y2 is the set of all cells matrix[x][y] with x1 <= x <= x2 and y1 <= y <= y2.\nTwo submatrices (x1, y1, x2, y2) and (x1', y1', x2', y2') are different if they have some coordinate\u00a0that is different: for example, if x1 != x1'.\n\u00a0\nExample 1:\n\nInput: matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0\nOutput: 4\nExplanation: The four 1x1 submatrices that only contain 0.\n\nExample 2:\nInput: matrix = [[1,-1],[-1,1]], target = 0\nOutput: 5\nExplanation: The two 1x2 submatrices, plus the two 2x1 submatrices, plus the 2x2 submatrix.\n\nExample 3:\nInput: matrix = [[904]], target = 0\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= matrix.length <= 100\n1 <= matrix[0].length <= 100\n-1000 <= matrix[i] <= 1000\n-10^8 <= target <= 10^8\n\n"], "1078. Occurrences After Bigram": ["https://leetcode.com/problems/occurrences-after-bigram", "Given two strings first and second, consider occurrences in some text of the form \"first second third\", where second comes immediately after first, and third comes immediately after second.\nReturn an array of all the words third for each occurrence of \"first second third\".\n\u00a0\nExample 1:\nInput: text = \"alice is a good girl she is a good student\", first = \"a\", second = \"good\"\nOutput: [\"girl\",\"student\"]\nExample 2:\nInput: text = \"we will we will rock you\", first = \"we\", second = \"will\"\nOutput: [\"we\",\"rock\"]\n\n\u00a0\nConstraints:\n\n1 <= text.length <= 1000\ntext consists of lowercase English letters and spaces.\nAll the words in text a separated by a single space.\n1 <= first.length, second.length <= 10\nfirst and second consist of lowercase English letters.\n\n"], "1079. Letter Tile Possibilities": ["https://leetcode.com/problems/letter-tile-possibilities", "You have n\u00a0\u00a0tiles, where each tile has one letter tiles[i] printed on it.\nReturn the number of possible non-empty sequences of letters you can make using the letters printed on those tiles.\n\u00a0\nExample 1:\nInput: tiles = \"AAB\"\nOutput: 8\nExplanation: The possible sequences are \"A\", \"B\", \"AA\", \"AB\", \"BA\", \"AAB\", \"ABA\", \"BAA\".\n\nExample 2:\nInput: tiles = \"AAABBC\"\nOutput: 188\n\nExample 3:\nInput: tiles = \"V\"\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= tiles.length <= 7\ntiles consists of uppercase English letters.\n\n"], "1080. Insufficient Nodes in Root to Leaf Paths": ["https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths", "Given the root of a binary tree and an integer limit, delete all insufficient nodes in the tree simultaneously, and return the root of the resulting binary tree.\nA node is insufficient if every root to leaf path intersecting this node has a sum strictly less than limit.\nA leaf is a node with no children.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14], limit = 1\nOutput: [1,2,3,4,null,null,7,8,9,null,14]\n\nExample 2:\n\nInput: root = [5,4,8,11,null,17,4,7,1,null,null,5,3], limit = 22\nOutput: [5,4,8,11,null,17,4,7,null,null,null,5]\n\nExample 3:\n\nInput: root = [1,2,-3,-5,null,4,null], limit = -1\nOutput: [1,null,-3,4]\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 5000].\n-105 <= Node.val <= 105\n-109 <= limit <= 109\n\n"], "1081. Smallest Subsequence of Distinct Characters": ["https://leetcode.com/problems/smallest-subsequence-of-distinct-characters", "Given a string s, return the lexicographically smallest subsequence of s that contains all the distinct characters of s exactly once.\n\u00a0\nExample 1:\nInput: s = \"bcabc\"\nOutput: \"abc\"\n\nExample 2:\nInput: s = \"cbacdcbc\"\nOutput: \"acdb\"\n\n\u00a0\nConstraints:\n\n1 <= s.length <= 1000\ns consists of lowercase English letters.\n\n\u00a0\nNote: This question is the same as 316: https://leetcode.com/problems/remove-duplicate-letters/"], "1084. Sales Analysis III": ["https://leetcode.com/problems/sales-analysis-iii", "SQL SchemaTable: Product\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| product_id   | int     |\n| product_name | varchar |\n| unit_price   | int     |\n+--------------+---------+\nproduct_id is the primary key of this table.\nEach row of this table indicates the name and the price of each product.\n\nTable: Sales\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| seller_id   | int     |\n| product_id  | int     |\n| buyer_id    | int     |\n| sale_date   | date    |\n| quantity    | int     |\n| price       | int     |\n+-------------+---------+\nThis table has no primary key, it can have repeated rows.\nproduct_id is a foreign key to the Product table.\nEach row of this table contains some information about one sale.\n\n\u00a0\nWrite an SQL query that reports the products that were only sold in the spring of 2019. That is, between 2019-01-01 and 2019-03-31 inclusive.\nReturn the result table in any order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nProduct table:\n+------------+--------------+------------+\n| product_id | product_name | unit_price |\n+------------+--------------+------------+\n| 1          | S8           | 1000       |\n| 2          | G4           | 800        |\n| 3          | iPhone       | 1400       |\n+------------+--------------+------------+\nSales table:\n+-----------+------------+----------+------------+----------+-------+\n| seller_id | product_id | buyer_id | sale_date  | quantity | price |\n+-----------+------------+----------+------------+----------+-------+\n| 1         | 1          | 1        | 2019-01-21 | 2        | 2000  |\n| 1         | 2          | 2        | 2019-02-17 | 1        | 800   |\n| 2         | 2          | 3        | 2019-06-02 | 1        | 800   |\n| 3         | 3          | 4        | 2019-05-13 | 2        | 2800  |\n+-----------+------------+----------+------------+----------+-------+\nOutput: \n+-------------+--------------+\n| product_id  | product_name |\n+-------------+--------------+\n| 1           | S8           |\n+-------------+--------------+\nExplanation: \nThe product with id 1 was only sold in the spring of 2019.\nThe product with id 2 was sold in the spring of 2019 but was also sold after the spring of 2019.\nThe product with id 3 was sold after spring 2019.\nWe return only product 1 as it is the product that was only sold in the spring of 2019.\n\n"], "1089. Duplicate Zeros": ["https://leetcode.com/problems/duplicate-zeros", "Given a fixed-length integer array arr, duplicate each occurrence of zero, shifting the remaining elements to the right.\nNote that elements beyond the length of the original array are not written. Do the above modifications to the input array in place and do not return anything.\n\u00a0\nExample 1:\nInput: arr = [1,0,2,3,0,4,5,0]\nOutput: [1,0,0,2,3,0,0,4]\nExplanation: After calling your function, the input array is modified to: [1,0,0,2,3,0,0,4]\n\nExample 2:\nInput: arr = [1,2,3]\nOutput: [1,2,3]\nExplanation: After calling your function, the input array is modified to: [1,2,3]\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 104\n0 <= arr[i] <= 9\n\n"], "1090. Largest Values From Labels": ["https://leetcode.com/problems/largest-values-from-labels", ""], "1091. Shortest Path in Binary Matrix": ["https://leetcode.com/problems/shortest-path-in-binary-matrix", "Given an n x n binary matrix grid, return the length of the shortest clear path in the matrix. If there is no clear path, return -1.\nA clear path in a binary matrix is a path from the top-left cell (i.e., (0, 0)) to the bottom-right cell (i.e., (n - 1, n - 1)) such that:\n\nAll the visited cells of the path are 0.\nAll the adjacent cells of the path are 8-directionally connected (i.e., they are different and they share an edge or a corner).\n\nThe length of a clear path is the number of visited cells of this path.\n\u00a0\nExample 1:\n\nInput: grid = [[0,1],[1,0]]\nOutput: 2\n\nExample 2:\n\nInput: grid = [[0,0,0],[1,1,0],[1,1,0]]\nOutput: 4\n\nExample 3:\nInput: grid = [[1,0,0],[1,1,0],[1,1,0]]\nOutput: -1\n\n\u00a0\nConstraints:\n\nn == grid.length\nn == grid[i].length\n1 <= n <= 100\ngrid[i][j] is 0 or 1\n\n"], "1092. Shortest Common Supersequence ": ["https://leetcode.com/problems/shortest-common-supersequence", "Given two strings str1 and str2, return the shortest string that has both str1 and str2 as subsequences. If there are multiple valid strings, return any of them.\nA string s is a subsequence of string t if deleting some number of characters from t (possibly 0) results in the string s.\n\u00a0\nExample 1:\nInput: str1 = \"abac\", str2 = \"cab\"\nOutput: \"cabac\"\nExplanation: \nstr1 = \"abac\" is a subsequence of \"cabac\" because we can delete the first \"c\".\nstr2 = \"cab\" is a subsequence of \"cabac\" because we can delete the last \"ac\".\nThe answer provided is the shortest such string that satisfies these properties.\n\nExample 2:\nInput: str1 = \"aaaaaaaa\", str2 = \"aaaaaaaa\"\nOutput: \"aaaaaaaa\"\n\n\u00a0\nConstraints:\n\n1 <= str1.length, str2.length <= 1000\nstr1 and str2 consist of lowercase English letters.\n\n"], "1093. Statistics from a Large Sample": ["https://leetcode.com/problems/statistics-from-a-large-sample", "You are given a large sample of integers in the range [0, 255]. Since the sample is so large, it is represented by an array count\u00a0where count[k] is the number of times that k appears in the sample.\nCalculate the following statistics:\n\nminimum: The minimum element in the sample.\nmaximum: The maximum element in the sample.\nmean: The average of the sample, calculated as the total sum of all elements divided by the total number of elements.\nmedian:\n\t\nIf the sample has an odd number of elements, then the median is the middle element once the sample is sorted.\nIf the sample has an even number of elements, then the median is the average of the two middle elements once the sample is sorted.\n\n\nmode: The number that appears the most in the sample. It is guaranteed to be unique.\n\nReturn the statistics of the sample as an array of floating-point numbers [minimum, maximum, mean, median, mode]. Answers within 10-5 of the actual answer will be accepted.\n\u00a0\nExample 1:\nInput: count = [0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nOutput: [1.00000,3.00000,2.37500,2.50000,3.00000]\nExplanation: The sample represented by count is [1,2,2,2,3,3,3,3].\nThe minimum and maximum are 1 and 3 respectively.\nThe mean is (1+2+2+2+3+3+3+3) / 8 = 19 / 8 = 2.375.\nSince the size of the sample is even, the median is the average of the two middle elements 2 and 3, which is 2.5.\nThe mode is 3 as it appears the most in the sample.\n\nExample 2:\nInput: count = [0,4,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nOutput: [1.00000,4.00000,2.18182,2.00000,1.00000]\nExplanation: The sample represented by count is [1,1,1,1,2,2,2,3,3,4,4].\nThe minimum and maximum are 1 and 4 respectively.\nThe mean is (1+1+1+1+2+2+2+3+3+4+4) / 11 = 24 / 11 = 2.18181818... (for display purposes, the output shows the rounded number 2.18182).\nSince the size of the sample is odd, the median is the middle element 2.\nThe mode is 1 as it appears the most in the sample.\n\n\u00a0\nConstraints:\n\ncount.length == 256\n0 <= count[i] <= 109\n1 <= sum(count) <= 109\nThe mode of the sample that count represents is unique.\n\n"], "1094. Car Pooling": ["https://leetcode.com/problems/car-pooling", "There is a car with capacity empty seats. The vehicle only drives east (i.e., it cannot turn around and drive west).\nYou are given the integer capacity and an array trips where trips[i] = [numPassengersi, fromi, toi] indicates that the ith trip has numPassengersi passengers and the locations to pick them up and drop them off are fromi and toi respectively. The locations are given as the number of kilometers due east from the car's initial location.\nReturn true if it is possible to pick up and drop off all passengers for all the given trips, or false otherwise.\n\u00a0\nExample 1:\nInput: trips = [[2,1,5],[3,3,7]], capacity = 4\nOutput: false\n\nExample 2:\nInput: trips = [[2,1,5],[3,3,7]], capacity = 5\nOutput: true\n\n\u00a0\nConstraints:\n\n1 <= trips.length <= 1000\ntrips[i].length == 3\n1 <= numPassengersi <= 100\n0 <= fromi < toi <= 1000\n1 <= capacity <= 105\n\n"], "1095. Find in Mountain Array": ["https://leetcode.com/problems/find-in-mountain-array", "(This problem is an interactive problem.)\nYou may recall that an array arr is a mountain array if and only if:\n\narr.length >= 3\nThere exists some i with 0 < i < arr.length - 1 such that:\n\t\narr[0] < arr[1] < ... < arr[i - 1] < arr[i]\narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\n\n\n\nGiven a mountain array mountainArr, return the minimum index such that mountainArr.get(index) == target. If such an index does not exist, return -1.\nYou cannot access the mountain array directly. You may only access the array using a MountainArray interface:\n\nMountainArray.get(k) returns the element of the array at index k (0-indexed).\nMountainArray.length() returns the length of the array.\n\nSubmissions making more than 100 calls to MountainArray.get will be judged Wrong Answer. Also, any solutions that attempt to circumvent the judge will result in disqualification.\n\u00a0\nExample 1:\nInput: array = [1,2,3,4,5,3,1], target = 3\nOutput: 2\nExplanation: 3 exists in the array, at index=2 and index=5. Return the minimum index, which is 2.\nExample 2:\nInput: array = [0,1,2,4,2,1], target = 3\nOutput: -1\nExplanation: 3 does not exist in the array, so we return -1.\n\n\u00a0\nConstraints:\n\n3 <= mountain_arr.length() <= 104\n0 <= target <= 109\n0 <= mountain_arr.get(index) <= 109\n\n"], "1096. Brace Expansion II": ["https://leetcode.com/problems/brace-expansion-ii", ""], "1103. Distribute Candies to People": ["https://leetcode.com/problems/distribute-candies-to-people", "We distribute some\u00a0number of candies, to a row of n =\u00a0num_people\u00a0people in the following way:\nWe then give 1 candy to the first person, 2 candies to the second person, and so on until we give n\u00a0candies to the last person.\nThen, we go back to the start of the row, giving n\u00a0+ 1 candies to the first person, n\u00a0+ 2 candies to the second person, and so on until we give 2 * n\u00a0candies to the last person.\nThis process repeats (with us giving one more candy each time, and moving to the start of the row after we reach the end) until we run out of candies.\u00a0 The last person will receive all of our remaining candies (not necessarily one more than the previous gift).\nReturn an array (of length num_people\u00a0and sum candies) that represents the final distribution of candies.\n\u00a0\nExample 1:\nInput: candies = 7, num_people = 4\nOutput: [1,2,3,1]\nExplanation:\nOn the first turn, ans[0] += 1, and the array is [1,0,0,0].\nOn the second turn, ans[1] += 2, and the array is [1,2,0,0].\nOn the third turn, ans[2] += 3, and the array is [1,2,3,0].\nOn the fourth turn, ans[3] += 1 (because there is only one candy left), and the final array is [1,2,3,1].\n\nExample 2:\nInput: candies = 10, num_people = 3\nOutput: [5,2,3]\nExplanation: \nOn the first turn, ans[0] += 1, and the array is [1,0,0].\nOn the second turn, ans[1] += 2, and the array is [1,2,0].\nOn the third turn, ans[2] += 3, and the array is [1,2,3].\nOn the fourth turn, ans[0] += 4, and the final array is [5,2,3].\n\n\u00a0\nConstraints:\n\n1 <= candies <= 10^9\n1 <= num_people <= 1000\n\n"], "1104. Path In Zigzag Labelled Binary Tree": ["https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree", "In an infinite binary tree where every node has two children, the nodes are labelled in row order.\nIn the odd numbered rows (ie., the first, third, fifth,...), the labelling is left to right, while in the even numbered rows (second, fourth, sixth,...), the labelling is right to left.\n\nGiven the label of a node in this tree, return the labels in the path from the root of the tree to the\u00a0node with that label.\n\u00a0\nExample 1:\nInput: label = 14\nOutput: [1,3,4,14]\n\nExample 2:\nInput: label = 26\nOutput: [1,2,6,10,26]\n\n\u00a0\nConstraints:\n\n1 <= label <= 10^6\n\n"], "1105. Filling Bookcase Shelves": ["https://leetcode.com/problems/filling-bookcase-shelves", "You are given an array books where books[i] = [thicknessi, heighti] indicates the thickness and height of the ith book. You are also given an integer shelfWidth.\nWe want to place these books in order onto bookcase shelves that have a total width shelfWidth.\nWe choose some of the books to place on this shelf such that the sum of their thickness is less than or equal to shelfWidth, then build another level of the shelf of the bookcase so that the total height of the bookcase has increased by the maximum height of the books we just put down. We repeat this process until there are no more books to place.\nNote that at each step of the above process, the order of the books we place is the same order as the given sequence of books.\n\nFor example, if we have an ordered list of 5 books, we might place the first and second book onto the first shelf, the third book on the second shelf, and the fourth and fifth book on the last shelf.\n\nReturn the minimum possible height that the total bookshelf can be after placing shelves in this manner.\n\u00a0\nExample 1:\n\nInput: books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelf_width = 4\nOutput: 6\nExplanation:\nThe sum of the heights of the 3 shelves is 1 + 3 + 2 = 6.\nNotice that book number 2 does not have to be on the first shelf.\n\nExample 2:\nInput: books = [[1,3],[2,4],[3,2]], shelfWidth = 6\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= books.length <= 1000\n1 <= thicknessi <= shelfWidth <= 1000\n1 <= heighti <= 1000\n\n"], "1106. Parsing A Boolean Expression": ["https://leetcode.com/problems/parsing-a-boolean-expression", "Return the result of evaluating a given boolean expression, represented as a string.\nAn expression can either be:\n\n\"t\", evaluating to True;\n\"f\", evaluating to False;\n\"!(expr)\", evaluating to the logical NOT of the inner expression expr;\n\"&(expr1,expr2,...)\", evaluating to the logical AND of 2 or more inner expressions expr1, expr2, ...;\n\"|(expr1,expr2,...)\", evaluating to the logical OR of 2 or more inner expressions expr1, expr2, ...\n\n\u00a0\nExample 1:\nInput: expression = \"!(f)\"\nOutput: true\n\nExample 2:\nInput: expression = \"|(f,t)\"\nOutput: true\n\nExample 3:\nInput: expression = \"&(t,f)\"\nOutput: false\n\n\u00a0\nConstraints:\n\n1 <= expression.length <= 2 * 104\nexpression[i] consists of characters in {'(', ')', '&', '|', '!', 't', 'f', ','}.\nexpression is a valid expression representing a boolean, as given in the description.\n\n"], "1108. Defanging an IP Address": ["https://leetcode.com/problems/defanging-an-ip-address", "Given a valid (IPv4) IP address, return a defanged version of that IP address.\nA defanged\u00a0IP address\u00a0replaces every period \".\" with \"[.]\".\n\u00a0\nExample 1:\nInput: address = \"1.1.1.1\"\nOutput: \"1[.]1[.]1[.]1\"\nExample 2:\nInput: address = \"255.100.50.0\"\nOutput: \"255[.]100[.]50[.]0\"\n\n\u00a0\nConstraints:\n\nThe given address is a valid IPv4 address.\n"], "1109. Corporate Flight Bookings": ["https://leetcode.com/problems/corporate-flight-bookings", "There are n flights that are labeled from 1 to n.\nYou are given an array of flight bookings bookings, where bookings[i] = [firsti, lasti, seatsi] represents a booking for flights firsti through lasti (inclusive) with seatsi seats reserved for each flight in the range.\nReturn an array answer of length n, where answer[i] is the total number of seats reserved for flight i.\n\u00a0\nExample 1:\nInput: bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5\nOutput: [10,55,45,25,25]\nExplanation:\nFlight labels:        1   2   3   4   5\nBooking 1 reserved:  10  10\nBooking 2 reserved:      20  20\nBooking 3 reserved:      25  25  25  25\nTotal seats:         10  55  45  25  25\nHence, answer = [10,55,45,25,25]\n\nExample 2:\nInput: bookings = [[1,2,10],[2,2,15]], n = 2\nOutput: [10,25]\nExplanation:\nFlight labels:        1   2\nBooking 1 reserved:  10  10\nBooking 2 reserved:      15\nTotal seats:         10  25\nHence, answer = [10,25]\n\n\n\u00a0\nConstraints:\n\n1 <= n <= 2 * 104\n1 <= bookings.length <= 2 * 104\nbookings[i].length == 3\n1 <= firsti <= lasti <= n\n1 <= seatsi <= 104\n\n"], "1110. Delete Nodes And Return Forest": ["https://leetcode.com/problems/delete-nodes-and-return-forest", ""], "1111. Maximum Nesting Depth of Two Valid Parentheses Strings": ["https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings", "A string is a valid parentheses string\u00a0(denoted VPS) if and only if it consists of \"(\" and \")\" characters only, and:\n\nIt is the empty string, or\nIt can be written as\u00a0AB\u00a0(A\u00a0concatenated with\u00a0B), where\u00a0A\u00a0and\u00a0B\u00a0are VPS's, or\nIt can be written as\u00a0(A), where\u00a0A\u00a0is a VPS.\n\nWe can\u00a0similarly define the nesting depth depth(S) of any VPS S as follows:\n\ndepth(\"\") = 0\ndepth(A + B) = max(depth(A), depth(B)), where A and B are VPS's\ndepth(\"(\" + A + \")\") = 1 + depth(A), where A is a VPS.\n\nFor example,\u00a0 \"\",\u00a0\"()()\", and\u00a0\"()(()())\"\u00a0are VPS's (with nesting depths 0, 1, and 2), and \")(\" and \"(()\" are not VPS's.\n\u00a0\nGiven a VPS seq, split it into two disjoint subsequences A and B, such that\u00a0A and B are VPS's (and\u00a0A.length + B.length = seq.length).\nNow choose any such A and B such that\u00a0max(depth(A), depth(B)) is the minimum possible value.\nReturn an answer array (of length seq.length) that encodes such a\u00a0choice of A and B:\u00a0 answer[i] = 0 if seq[i] is part of A, else answer[i] = 1.\u00a0 Note that even though multiple answers may exist, you may return any of them.\n\u00a0\nExample 1:\nInput: seq = \"(()())\"\nOutput: [0,1,1,1,1,0]\n\nExample 2:\nInput: seq = \"()(())()\"\nOutput: [0,0,0,1,1,0,1,1]\n\n\u00a0\nConstraints:\n\n1 <= seq.size <= 10000\n\n"], "1114. Print in Order": ["https://leetcode.com/problems/print-in-order", "Suppose we have a class:\npublic class Foo {\n  public void first() { print(\"first\"); }\n  public void second() { print(\"second\"); }\n  public void third() { print(\"third\"); }\n}\n\nThe same instance of Foo will be passed to three different threads. Thread A will call first(), thread B will call second(), and thread C will call third(). Design a mechanism and modify the program to ensure that second() is executed after first(), and third() is executed after second().\nNote:\nWe do not know how the threads will be scheduled in the operating system, even though the numbers in the input seem to imply the ordering. The input format you see is mainly to ensure our tests' comprehensiveness.\n\u00a0\nExample 1:\nInput: nums = [1,2,3]\nOutput: \"firstsecondthird\"\nExplanation: There are three threads being fired asynchronously. The input [1,2,3] means thread A calls first(), thread B calls second(), and thread C calls third(). \"firstsecondthird\" is the correct output.\n\nExample 2:\nInput: nums = [1,3,2]\nOutput: \"firstsecondthird\"\nExplanation: The input [1,3,2] means thread A calls first(), thread B calls third(), and thread C calls second(). \"firstsecondthird\" is the correct output.\n\n\u00a0\nConstraints:\n\nnums is a permutation of [1, 2, 3].\n\n"], "1115. Print FooBar Alternately": ["https://leetcode.com/problems/print-foobar-alternately", "Suppose you are given the following code:\nclass FooBar {\n  public void foo() {\n    for (int i = 0; i < n; i++) {\n      print(\"foo\");\n    }\n  }\n\n  public void bar() {\n    for (int i = 0; i < n; i++) {\n      print(\"bar\");\n    }\n  }\n}\n\nThe same instance of FooBar will be passed to two different threads:\n\nthread A will call foo(), while\nthread B will call bar().\n\nModify the given program to output \"foobar\" n times.\n\u00a0\nExample 1:\nInput: n = 1\nOutput: \"foobar\"\nExplanation: There are two threads being fired asynchronously. One of them calls foo(), while the other calls bar().\n\"foobar\" is being output 1 time.\n\nExample 2:\nInput: n = 2\nOutput: \"foobarfoobar\"\nExplanation: \"foobar\" is being output 2 times.\n\n\u00a0\nConstraints:\n\n1 <= n <= 1000\n\n"], "1116. Print Zero Even Odd": ["https://leetcode.com/problems/print-zero-even-odd", "You have a function printNumber that can be called with an integer parameter and prints it to the console.\n\nFor example, calling printNumber(7) prints 7 to the console.\n\nYou are given an instance of the class ZeroEvenOdd that has three functions: zero, even, and odd. The same instance of ZeroEvenOdd will be passed to three different threads:\n\nThread A: calls zero() that should only output 0's.\nThread B: calls even() that should only output even numbers.\nThread C: calls odd() that should only output odd numbers.\n\nModify the given class to output the series \"010203040506...\" where the length of the series must be 2n.\nImplement the ZeroEvenOdd class:\n\nZeroEvenOdd(int n) Initializes the object with the number n that represents the numbers that should be printed.\nvoid zero(printNumber) Calls printNumber to output one zero.\nvoid even(printNumber) Calls printNumber to output one even number.\nvoid odd(printNumber) Calls printNumber to output one odd number.\n\n\u00a0\nExample 1:\nInput: n = 2\nOutput: \"0102\"\nExplanation: There are three threads being fired asynchronously.\nOne of them calls zero(), the other calls even(), and the last one calls odd().\n\"0102\" is the correct output.\n\nExample 2:\nInput: n = 5\nOutput: \"0102030405\"\n\n\u00a0\nConstraints:\n\n1 <= n <= 1000\n\n"], "1117. Building H2O": ["https://leetcode.com/problems/building-h2o", "There are two kinds of threads: oxygen and hydrogen. Your goal is to group these threads to form water molecules.\nThere is a barrier where each thread has to wait until a complete molecule can be formed. Hydrogen and oxygen threads will be given releaseHydrogen and releaseOxygen methods respectively, which will allow them to pass the barrier. These threads should pass the barrier in groups of three, and they must immediately bond with each other to form a water molecule. You must guarantee that all the threads from one molecule bond before any other threads from the next molecule do.\nIn other words:\n\nIf an oxygen thread arrives at the barrier when no hydrogen threads are present, it must wait for two hydrogen threads.\nIf a hydrogen thread arrives at the barrier when no other threads are present, it must wait for an oxygen thread and another hydrogen thread.\n\nWe do not have to worry about matching the threads up explicitly; the threads do not necessarily know which other threads they are paired up with. The key is that threads pass the barriers in complete sets; thus, if we examine the sequence of threads that bind and divide them into groups of three, each group should contain one oxygen and two hydrogen threads.\nWrite synchronization code for oxygen and hydrogen molecules that enforces these constraints.\n\u00a0\nExample 1:\nInput: water = \"HOH\"\nOutput: \"HHO\"\nExplanation: \"HOH\" and \"OHH\" are also valid answers.\n\nExample 2:\nInput: water = \"OOHHHH\"\nOutput: \"HHOHHO\"\nExplanation: \"HOHHHO\", \"OHHHHO\", \"HHOHOH\", \"HOHHOH\", \"OHHHOH\", \"HHOOHH\", \"HOHOHH\" and \"OHHOHH\" are also valid answers.\n\n\u00a0\nConstraints:\n\n3 * n == water.length\n1 <= n <= 20\nwater[i] is either 'H' or 'O'.\nThere will be exactly 2 * n 'H' in water.\nThere will be exactly n 'O' in water.\n\n"], "1122. Relative Sort Array": ["https://leetcode.com/problems/relative-sort-array", "Given two arrays arr1 and arr2, the elements of arr2 are distinct, and all elements in arr2 are also in arr1.\nSort the elements of arr1 such that the relative ordering of items in arr1 are the same as in arr2. Elements that do not appear in arr2 should be placed at the end of arr1 in ascending order.\n\u00a0\nExample 1:\nInput: arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]\nOutput: [2,2,2,1,4,3,3,9,6,7,19]\n\nExample 2:\nInput: arr1 = [28,6,22,8,44,17], arr2 = [22,28,8,6]\nOutput: [22,28,8,6,17,44]\n\n\u00a0\nConstraints:\n\n1 <= arr1.length, arr2.length <= 1000\n0 <= arr1[i], arr2[i] <= 1000\nAll the elements of arr2 are distinct.\nEach\u00a0arr2[i] is in arr1.\n\n"], "1123. Lowest Common Ancestor of Deepest Leaves": ["https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves", "Given the root of a binary tree, return the lowest common ancestor of its deepest leaves.\nRecall that:\n\nThe node of a binary tree is a leaf if and only if it has no children\nThe depth of the root of the tree is 0. if the depth of a node is d, the depth of each of its children is d + 1.\nThe lowest common ancestor of a set S of nodes, is the node A with the largest depth such that every node in S is in the subtree with root A.\n\n\u00a0\nExample 1:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4]\nOutput: [2,7,4]\nExplanation: We return the node with value 2, colored in yellow in the diagram.\nThe nodes coloured in blue are the deepest leaf-nodes of the tree.\nNote that nodes 6, 0, and 8 are also leaf nodes, but the depth of them is 2, but the depth of nodes 7 and 4 is 3.\nExample 2:\nInput: root = [1]\nOutput: [1]\nExplanation: The root is the deepest node in the tree, and it's the lca of itself.\n\nExample 3:\nInput: root = [0,1,3,null,2]\nOutput: [2]\nExplanation: The deepest leaf node in the tree is 2, the lca of one node is itself.\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree will be in the range [1, 1000].\n0 <= Node.val <= 1000\nThe values of the nodes in the tree are unique.\n\n\u00a0\nNote: This question is the same as 865: https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/\n"], "1124. Longest Well-Performing Interval": ["https://leetcode.com/problems/longest-well-performing-interval", "We are given hours, a list of the number of hours worked per day for a given employee.\nA day is considered to be a tiring day if and only if the number of hours worked is (strictly) greater than 8.\nA well-performing interval is an interval of days for which the number of tiring days is strictly larger than the number of non-tiring days.\nReturn the length of the longest well-performing interval.\n\u00a0\nExample 1:\nInput: hours = [9,9,6,0,6,6,9]\nOutput: 3\nExplanation: The longest well-performing interval is [9,9,6].\n\nExample 2:\nInput: hours = [6,6,6]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= hours.length <= 104\n0 <= hours[i] <= 16\n\n"], "1125. Smallest Sufficient Team": ["https://leetcode.com/problems/smallest-sufficient-team", "In a project, you have a list of required skills req_skills, and a list of people. The ith person people[i] contains a list of skills that the person has.\nConsider a sufficient team: a set of people such that for every required skill in req_skills, there is at least one person in the team who has that skill. We can represent these teams by the index of each person.\n\nFor example, team = [0, 1, 3] represents the people with skills people[0], people[1], and people[3].\n\nReturn any sufficient team of the smallest possible size, represented by the index of each person. You may return the answer in any order.\nIt is guaranteed an answer exists.\n\u00a0\nExample 1:\nInput: req_skills = [\"java\",\"nodejs\",\"reactjs\"], people = [[\"java\"],[\"nodejs\"],[\"nodejs\",\"reactjs\"]]\nOutput: [0,2]\nExample 2:\nInput: req_skills = [\"algorithms\",\"math\",\"java\",\"reactjs\",\"csharp\",\"aws\"], people = [[\"algorithms\",\"math\",\"java\"],[\"algorithms\",\"math\",\"reactjs\"],[\"java\",\"csharp\",\"aws\"],[\"reactjs\",\"csharp\"],[\"csharp\",\"math\"],[\"aws\",\"java\"]]\nOutput: [1,2]\n\n\u00a0\nConstraints:\n\n1 <= req_skills.length <= 16\n1 <= req_skills[i].length <= 16\nreq_skills[i] consists of lowercase English letters.\nAll the strings of req_skills are unique.\n1 <= people.length <= 60\n0 <= people[i].length <= 16\n1 <= people[i][j].length <= 16\npeople[i][j] consists of lowercase English letters.\nAll the strings of people[i] are unique.\nEvery skill in people[i] is a skill in req_skills.\nIt is guaranteed a sufficient team exists.\n\n"], "1128. Number of Equivalent Domino Pairs": ["https://leetcode.com/problems/number-of-equivalent-domino-pairs", "Given a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a == c and b == d), or (a == d and b == c) - that is, one domino can be rotated to be equal to another domino.\nReturn the number of pairs (i, j) for which 0 <= i < j < dominoes.length, and dominoes[i] is equivalent to dominoes[j].\n\u00a0\nExample 1:\nInput: dominoes = [[1,2],[2,1],[3,4],[5,6]]\nOutput: 1\n\nExample 2:\nInput: dominoes = [[1,2],[1,2],[1,1],[1,2],[2,2]]\nOutput: 3\n\n\u00a0\nConstraints:\n\n1 <= dominoes.length <= 4 * 104\ndominoes[i].length == 2\n1 <= dominoes[i][j] <= 9\n\n"], "1129. Shortest Path with Alternating Colors": ["https://leetcode.com/problems/shortest-path-with-alternating-colors", "You are given an integer n, the number of nodes in a directed graph where the nodes are labeled from 0 to n - 1. Each edge is red or blue in this graph, and there could be self-edges and parallel edges.\nYou are given two arrays redEdges and blueEdges where:\n\nredEdges[i] = [ai, bi] indicates that there is a directed red edge from node ai to node bi in the graph, and\nblueEdges[j] = [uj, vj] indicates that there is a directed blue edge from node uj to node vj in the graph.\n\nReturn an array answer of length n, where each answer[x] is the length of the shortest path from node 0 to node x such that the edge colors alternate along the path, or -1 if such a path does not exist.\n\u00a0\nExample 1:\nInput: n = 3, redEdges = [[0,1],[1,2]], blueEdges = []\nOutput: [0,1,-1]\n\nExample 2:\nInput: n = 3, redEdges = [[0,1]], blueEdges = [[2,1]]\nOutput: [0,1,-1]\n\n\u00a0\nConstraints:\n\n1 <= n <= 100\n0 <= redEdges.length,\u00a0blueEdges.length <= 400\nredEdges[i].length == blueEdges[j].length == 2\n0 <= ai, bi, uj, vj < n\n\n"], "1130. Minimum Cost Tree From Leaf Values": ["https://leetcode.com/problems/minimum-cost-tree-from-leaf-values", "Given an array arr of positive integers, consider all binary trees such that:\n\nEach node has either 0 or 2 children;\nThe values of arr correspond to the values of each leaf in an in-order traversal of the tree.\nThe value of each non-leaf node is equal to the product of the largest leaf value in its left and right subtree, respectively.\n\nAmong all possible binary trees considered, return the smallest possible sum of the values of each non-leaf node. It is guaranteed this sum fits into a 32-bit integer.\nA node is a leaf if and only if it has zero children.\n\u00a0\nExample 1:\n\nInput: arr = [6,2,4]\nOutput: 32\nExplanation: There are two possible trees shown.\nThe first has a non-leaf node sum 36, and the second has non-leaf node sum 32.\n\nExample 2:\n\nInput: arr = [4,11]\nOutput: 44\n\n\u00a0\nConstraints:\n\n2 <= arr.length <= 40\n1 <= arr[i] <= 15\nIt is guaranteed that the answer fits into a 32-bit signed integer (i.e., it is less than 231).\n\n"], "1131. Maximum of Absolute Value Expression": ["https://leetcode.com/problems/maximum-of-absolute-value-expression", "Given two arrays of integers with equal lengths, return the maximum value of:\n|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|\nwhere the maximum is taken over all 0 <= i, j < arr1.length.\n\u00a0\nExample 1:\nInput: arr1 = [1,2,3,4], arr2 = [-1,4,5,6]\nOutput: 13\n\nExample 2:\nInput: arr1 = [1,-2,-5,0,10], arr2 = [0,-2,-1,-7,-4]\nOutput: 20\n\n\u00a0\nConstraints:\n\n2 <= arr1.length == arr2.length <= 40000\n-10^6 <= arr1[i], arr2[i] <= 10^6\n\n"], "1137. N-th Tribonacci Number": ["https://leetcode.com/problems/n-th-tribonacci-number", "The Tribonacci sequence Tn is defined as follows:\u00a0\nT0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n >= 0.\nGiven n, return the value of Tn.\n\u00a0\nExample 1:\nInput: n = 4\nOutput: 4\nExplanation:\nT_3 = 0 + 1 + 1 = 2\nT_4 = 1 + 1 + 2 = 4\n\nExample 2:\nInput: n = 25\nOutput: 1389537\n\n\u00a0\nConstraints:\n\n0 <= n <= 37\nThe answer is guaranteed to fit within a 32-bit integer, ie. answer <= 2^31 - 1.\n"], "1138. Alphabet Board Path": ["https://leetcode.com/problems/alphabet-board-path", "On an alphabet board, we start at position (0, 0), corresponding to character\u00a0board[0][0].\nHere, board = [\"abcde\", \"fghij\", \"klmno\", \"pqrst\", \"uvwxy\", \"z\"], as shown in the diagram below.\n\nWe may make the following moves:\n\n'U' moves our position up one row, if the position exists on the board;\n'D' moves our position down one row, if the position exists on the board;\n'L' moves our position left one column, if the position exists on the board;\n'R' moves our position right one column, if the position exists on the board;\n'!'\u00a0adds the character board[r][c] at our current position (r, c)\u00a0to the\u00a0answer.\n\n(Here, the only positions that exist on the board are positions with letters on them.)\nReturn a sequence of moves that makes our answer equal to target\u00a0in the minimum number of moves.\u00a0 You may return any path that does so.\n\u00a0\nExample 1:\nInput: target = \"leet\"\nOutput: \"DDR!UURRR!!DDD!\"\nExample 2:\nInput: target = \"code\"\nOutput: \"RR!DDRR!UUL!R!\"\n\n\u00a0\nConstraints:\n\n1 <= target.length <= 100\ntarget consists only of English lowercase letters.\n"], "1139. Largest 1-Bordered Square": ["https://leetcode.com/problems/largest-1-bordered-square", "Given a 2D grid of 0s and 1s, return the number of elements in\u00a0the largest square\u00a0subgrid that has all 1s on its border, or 0 if such a subgrid\u00a0doesn't exist in the grid.\n\u00a0\nExample 1:\nInput: grid = [[1,1,1],[1,0,1],[1,1,1]]\nOutput: 9\n\nExample 2:\nInput: grid = [[1,1,0,0]]\nOutput: 1\n\n\u00a0\nConstraints:\n\n1 <= grid.length <= 100\n1 <= grid[0].length <= 100\ngrid[i][j] is 0 or 1\n"], "1140. Stone Game II": ["https://leetcode.com/problems/stone-game-ii", "Alice and Bob continue their\u00a0games with piles of stones.\u00a0 There are a number of\u00a0piles\u00a0arranged in a row, and each pile has a positive integer number of stones\u00a0piles[i].\u00a0 The objective of the game is to end with the most\u00a0stones.\u00a0\nAlice\u00a0and Bob take turns, with Alice starting first.\u00a0 Initially, M = 1.\nOn each player's turn, that player\u00a0can take all the stones in the first X remaining piles, where 1 <= X <= 2M.\u00a0 Then, we set\u00a0M = max(M, X).\nThe game continues until all the stones have been taken.\nAssuming Alice and Bob play optimally, return the maximum number of stones Alice\u00a0can get.\n\u00a0\nExample 1:\nInput: piles = [2,7,9,4,4]\nOutput: 10\nExplanation:  If Alice takes one pile at the beginning, Bob takes two piles, then Alice takes 2 piles again. Alice can get 2 + 4 + 4 = 10 piles in total. If Alice takes two piles at the beginning, then Bob can take all three piles left. In this case, Alice get 2 + 7 = 9 piles in total. So we return 10 since it's larger. \n\nExample 2:\nInput: piles = [1,2,3,4,5,100]\nOutput: 104\n\n\u00a0\nConstraints:\n\n1 <= piles.length <= 100\n1 <= piles[i]\u00a0<= 104\n\n"], "1141. User Activity for the Past 30 Days I": ["https://leetcode.com/problems/user-activity-for-the-past-30-days-i", "SQL SchemaTable: Activity\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| user_id       | int     |\n| session_id    | int     |\n| activity_date | date    |\n| activity_type | enum    |\n+---------------+---------+\nThere is no primary key for this table, it may have duplicate rows.\nThe activity_type column is an ENUM of type ('open_session', 'end_session', 'scroll_down', 'send_message').\nThe table shows the user activities for a social media website. \nNote that each session belongs to exactly one user.\n\n\u00a0\nWrite an SQL query to find the daily active user count for a period of 30 days ending 2019-07-27 inclusively. A user was active on someday if they made at least one activity on that day.\nReturn the result table in any order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nActivity table:\n+---------+------------+---------------+---------------+\n| user_id | session_id | activity_date | activity_type |\n+---------+------------+---------------+---------------+\n| 1       | 1          | 2019-07-20    | open_session  |\n| 1       | 1          | 2019-07-20    | scroll_down   |\n| 1       | 1          | 2019-07-20    | end_session   |\n| 2       | 4          | 2019-07-20    | open_session  |\n| 2       | 4          | 2019-07-21    | send_message  |\n| 2       | 4          | 2019-07-21    | end_session   |\n| 3       | 2          | 2019-07-21    | open_session  |\n| 3       | 2          | 2019-07-21    | send_message  |\n| 3       | 2          | 2019-07-21    | end_session   |\n| 4       | 3          | 2019-06-25    | open_session  |\n| 4       | 3          | 2019-06-25    | end_session   |\n+---------+------------+---------------+---------------+\nOutput: \n+------------+--------------+ \n| day        | active_users |\n+------------+--------------+ \n| 2019-07-20 | 2            |\n| 2019-07-21 | 2            |\n+------------+--------------+ \nExplanation: Note that we do not care about days with zero active users.\n\n"], "1143. Longest Common Subsequence": ["https://leetcode.com/problems/longest-common-subsequence", "Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0.\nA subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\n\nFor example, \"ace\" is a subsequence of \"abcde\".\n\nA common subsequence of two strings is a subsequence that is common to both strings.\n\u00a0\nExample 1:\nInput: text1 = \"abcde\", text2 = \"ace\" \nOutput: 3  \nExplanation: The longest common subsequence is \"ace\" and its length is 3.\n\nExample 2:\nInput: text1 = \"abc\", text2 = \"abc\"\nOutput: 3\nExplanation: The longest common subsequence is \"abc\" and its length is 3.\n\nExample 3:\nInput: text1 = \"abc\", text2 = \"def\"\nOutput: 0\nExplanation: There is no such common subsequence, so the result is 0.\n\n\u00a0\nConstraints:\n\n1 <= text1.length, text2.length <= 1000\ntext1 and text2 consist of only lowercase English characters.\n\n"], "1144. Decrease Elements To Make Array Zigzag": ["https://leetcode.com/problems/decrease-elements-to-make-array-zigzag", "Given an array nums of integers, a move\u00a0consists of choosing any element and decreasing it by 1.\nAn array A is a\u00a0zigzag array\u00a0if either:\n\nEvery even-indexed element is greater than adjacent elements, ie.\u00a0A[0] > A[1] < A[2] > A[3] < A[4] > ...\nOR, every odd-indexed element is greater than adjacent elements, ie.\u00a0A[0] < A[1] > A[2] < A[3] > A[4] < ...\n\nReturn the minimum number of moves to transform the given array nums into a zigzag array.\n\u00a0\nExample 1:\nInput: nums = [1,2,3]\nOutput: 2\nExplanation: We can decrease 2 to 0 or 3 to 1.\n\nExample 2:\nInput: nums = [9,6,1,6,2]\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= nums.length <= 1000\n1 <= nums[i] <= 1000\n\n"], "1145. Binary Tree Coloring Game": ["https://leetcode.com/problems/binary-tree-coloring-game", "Two players play a turn based game on a binary tree. We are given the root of this binary tree, and the number of nodes n in the tree. n is odd, and each node has a distinct value from 1 to n.\nInitially, the first player names a value x with 1 <= x <= n, and the second player names a value y with 1 <= y <= n and y != x. The first player colors the node with value x red, and the second player colors the node with value y blue.\nThen, the players take turns starting with the first player. In each turn, that player chooses a node of their color (red if player 1, blue if player 2) and colors an uncolored neighbor of the chosen node (either the left child, right child, or parent of the chosen node.)\nIf (and only if) a player cannot choose such a node in this way, they must pass their turn. If both players pass their turn, the game ends, and the winner is the player that colored more nodes.\nYou are the second player. If it is possible to choose such a y to ensure you win the game, return true. If it is not possible, return false.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4,5,6,7,8,9,10,11], n = 11, x = 3\nOutput: true\nExplanation: The second player can choose the node with value 2.\n\nExample 2:\nInput: root = [1,2,3], n = 3, x = 1\nOutput: false\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is n.\n1 <= x <= n <= 100\nn is odd.\n1 <= Node.val <= n\nAll the values of the tree are unique.\n\n"], "1146. Snapshot Array": ["https://leetcode.com/problems/snapshot-array", "Implement a SnapshotArray that supports the following interface:\n\nSnapshotArray(int length) initializes an array-like data structure with the given length.\u00a0 Initially, each element equals 0.\nvoid set(index, val) sets the element at the given index to be equal to val.\nint snap()\u00a0takes a snapshot of the array and returns the snap_id: the total number of times we called snap() minus 1.\nint get(index, snap_id)\u00a0returns the value at the given index, at the time we took the snapshot with the given snap_id\n\n\u00a0\nExample 1:\nInput: [\"SnapshotArray\",\"set\",\"snap\",\"set\",\"get\"]\n[[3],[0,5],[],[0,6],[0,0]]\nOutput: [null,null,0,null,5]\nExplanation: \nSnapshotArray snapshotArr = new SnapshotArray(3); // set the length to be 3\nsnapshotArr.set(0,5);  // Set array[0] = 5\nsnapshotArr.snap();  // Take a snapshot, return snap_id = 0\nsnapshotArr.set(0,6);\nsnapshotArr.get(0,0);  // Get the value of array[0] with snap_id = 0, return 5\n\u00a0\nConstraints:\n\n1 <= length\u00a0<= 50000\nAt most 50000\u00a0calls will be made to set, snap, and get.\n0 <= index\u00a0<\u00a0length\n0 <=\u00a0snap_id <\u00a0(the total number of times we call snap())\n0 <=\u00a0val <= 10^9\n\n"], "1147. Longest Chunked Palindrome Decomposition": ["https://leetcode.com/problems/longest-chunked-palindrome-decomposition", "You are given a string text. You should split it to k substrings (subtext1, subtext2, ..., subtextk) such that:\n\nsubtexti is a non-empty string.\nThe concatenation of all the substrings is equal to text (i.e., subtext1 + subtext2 + ... + subtextk == text).\nsubtexti == subtextk - i + 1 for all valid values of i (i.e., 1 <= i <= k).\n\nReturn the largest possible value of k.\n\u00a0\nExample 1:\nInput: text = \"ghiabcdefhelloadamhelloabcdefghi\"\nOutput: 7\nExplanation: We can split the string on \"(ghi)(abcdef)(hello)(adam)(hello)(abcdef)(ghi)\".\n\nExample 2:\nInput: text = \"merchant\"\nOutput: 1\nExplanation: We can split the string on \"(merchant)\".\n\nExample 3:\nInput: text = \"antaprezatepzapreanta\"\nOutput: 11\nExplanation: We can split the string on \"(a)(nt)(a)(pre)(za)(tpe)(za)(pre)(a)(nt)(a)\".\n\n\u00a0\nConstraints:\n\n1 <= text.length <= 1000\ntext consists only of lowercase English characters.\n\n"], "1148. Article Views I": ["https://leetcode.com/problems/article-views-i", "SQL SchemaTable: Views\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| article_id    | int     |\n| author_id     | int     |\n| viewer_id     | int     |\n| view_date     | date    |\n+---------------+---------+\nThere is no primary key for this table, it may have duplicate rows.\nEach row of this table indicates that some viewer viewed an article (written by some author) on some date. \nNote that equal author_id and viewer_id indicate the same person.\n\n\u00a0\nWrite an SQL query to find all the authors that viewed at least one of their own articles.\nReturn the result table sorted by id in ascending order.\nThe query result format is in the following example.\n\u00a0\nExample 1:\nInput: \nViews table:\n+------------+-----------+-----------+------------+\n| article_id | author_id | viewer_id | view_date  |\n+------------+-----------+-----------+------------+\n| 1          | 3         | 5         | 2019-08-01 |\n| 1          | 3         | 6         | 2019-08-02 |\n| 2          | 7         | 7         | 2019-08-01 |\n| 2          | 7         | 6         | 2019-08-02 |\n| 4          | 7         | 1         | 2019-07-22 |\n| 3          | 4         | 4         | 2019-07-21 |\n| 3          | 4         | 4         | 2019-07-21 |\n+------------+-----------+-----------+------------+\nOutput: \n+------+\n| id   |\n+------+\n| 4    |\n| 7    |\n+------+\n\n"], "Effective Approach": ["https://codeforces.com/problemset/problem/227/B", "B. Effective Approachtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce at a team training Vasya, Petya and Sasha got a problem on implementing linear search in an array.According to the boys, linear search works as follows. The array elements in a pre-selected order are in turn compared with the number that you need to find. Once you find the array element that is equal to the required one, the search ends. The efficiency of the algorithm is the number of performed comparisons. The fewer comparisons the linear search has made, the more effective it is.Vasya believes that a linear search would work better if it sequentially iterates through the elements, starting with the 1-st one (in this problem we consider the elements of the array indexed from 1 to n) and ending with the n-th one. And Petya says that Vasya is wrong: the search will need less comparisons if it sequentially iterates the elements starting from the n-th and ending with the 1-st one. Sasha argues that the two approaches are equivalent.To finally begin the task, the teammates decided to settle the debate and compare the two approaches on an example. For this, they took an array that is a permutation of integers from 1 to n, and generated m queries of the form: find element with value bi in the array. They want to calculate for both approaches how many comparisons in total the linear search will need to respond to all queries. If the first search needs fewer comparisons, then the winner of the dispute is Vasya. If the second one does, then the winner is Petya. If both approaches make the same number of comparisons, then Sasha's got the upper hand.But the problem is, linear search is too slow. That's why the boys aren't going to find out who is right before the end of the training, unless you come in here. Help them to determine who will win the dispute.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of elements in the array. The second line contains n distinct space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009n) \u2014 the elements of array. The third line contains integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009105) \u2014 the number of queries. The last line contains m space-separated integers b1,\u2009b2,\u2009...,\u2009bm (1\u2009\u2264\u2009bi\u2009\u2264\u2009n) \u2014 the search queries. Note that the queries can repeat.OutputPrint two integers, showing how many comparisons Vasya's approach needs and how many comparisons Petya's approach needs. Separate the numbers by spaces.Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.ExamplesInputCopy21 211OutputCopy1 2InputCopy22 111OutputCopy2 1InputCopy33 1 231 2 3OutputCopy6 6NoteIn the first sample Vasya's approach will make one comparison (it starts with the 1-st element and immediately finds the required number), and Petya's approach makes two comparisons (first he compares with the 2-nd array element, doesn't find the search item and compares with the 1-st element).In the second sample, on the contrary, Vasya's approach will need two comparisons (first with 1-st element, and then with the 2-nd), and Petya's approach will find the required value in one comparison (the first comparison with the 2-nd element)."], "GCD Length": ["https://codeforces.com/problemset/problem/1511/B", "B. GCD Lengthtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given three integers aa, bb and cc.Find two positive integers xx and yy (x>0x>0, y>0y>0) such that:   the decimal representation of xx without leading zeroes consists of aa digits;  the decimal representation of yy without leading zeroes consists of bb digits;  the decimal representation of gcd(x,y)gcd(x,y) without leading zeroes consists of cc digits. gcd(x,y)gcd(x,y) denotes the greatest common divisor (GCD) of integers xx and yy.Output xx and yy. If there are multiple answers, output any of them.InputThe first line contains a single integer tt (1\u2264t\u22642851\u2264t\u2264285)\u00a0\u2014 the number of testcases.Each of the next tt lines contains three integers aa, bb and cc (1\u2264a,b\u226491\u2264a,b\u22649, 1\u2264c\u2264min(a,b)1\u2264c\u2264min(a,b))\u00a0\u2014 the required lengths of the numbers.It can be shown that the answer exists for all testcases under the given constraints.Additional constraint on the input: all testcases are different.OutputFor each testcase print two positive integers\u00a0\u2014 xx and yy (x>0x>0, y>0y>0) such that   the decimal representation of xx without leading zeroes consists of aa digits;  the decimal representation of yy without leading zeroes consists of bb digits;  the decimal representation of gcd(x,y)gcd(x,y) without leading zeroes consists of cc digits. ExampleInputCopy4\n2 3 1\n2 2 2\n6 6 2\n1 1 1\nOutputCopy11 492\n13 26\n140133 160776\n1 1\nNoteIn the example:   gcd(11,492)=1gcd(11,492)=1  gcd(13,26)=13gcd(13,26)=13  gcd(140133,160776)=21gcd(140133,160776)=21  gcd(1,1)=1gcd(1,1)=1 "], "Minor Reduction": ["https://codeforces.com/problemset/problem/1626/B", "B. Minor Reductiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a decimal representation of an integer xx without leading zeros.You have to perform the following reduction on it exactly once: take two neighboring digits in xx and replace them with their sum without leading zeros (if the sum is 00, it's represented as a single 00).For example, if x=10057x=10057, the possible reductions are:   choose the first and the second digits 11 and 00, replace them with 1+0=11+0=1; the result is 10571057;  choose the second and the third digits 00 and 00, replace them with 0+0=00+0=0; the result is also 10571057;  choose the third and the fourth digits 00 and 55, replace them with 0+5=50+5=5; the result is still 10571057;  choose the fourth and the fifth digits 55 and 77, replace them with 5+7=125+7=12; the result is 1001210012. What's the largest number that can be obtained?InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of testcases.Each testcase consists of a single integer xx (10\u2264x<1020000010\u2264x<10200000). xx doesn't contain leading zeros.The total length of the decimal representations of xx over all testcases doesn't exceed 2\u22c51052\u22c5105.OutputFor each testcase, print a single integer\u00a0\u2014 the largest number that can be obtained after the reduction is applied exactly once. The number should not contain leading zeros.ExampleInputCopy2\n10057\n90\nOutputCopy10012\n9\nNoteThe first testcase of the example is already explained in the statement.In the second testcase, there is only one possible reduction: the first and the second digits."], "Partial Replacement": ["https://codeforces.com/problemset/problem/1506/B", "B. Partial Replacementtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a number kk and a string ss of length nn, consisting of the characters '.' and '*'. You want to replace some of the '*' characters with 'x' characters so that the following conditions are met:   The first character '*' in the original string should be replaced with 'x';  The last character '*' in the original string should be replaced with 'x';  The distance between two neighboring replaced characters 'x' must not exceed kk (more formally, if you replaced characters at positions ii and jj (i<ji<j) and at positions [i+1,j\u22121][i+1,j\u22121] there is no \"x\" symbol, then j\u2212ij\u2212i must be no more than kk). For example, if n=7n=7, s=s=.**.*** and k=3k=3, then the following strings will satisfy the conditions above:   .xx.*xx;  .x*.x*x;  .xx.xxx.  But, for example, the following strings will not meet the conditions:   .**.*xx (the first character '*' should be replaced with 'x');  .x*.xx* (the last character '*' should be replaced with 'x');  .x*.*xx (the distance between characters at positions 22 and 66 is greater than k=3k=3). Given nn, kk, and ss, find the minimum number of '*' characters that must be replaced with 'x' in order to meet the above conditions.InputThe first line contains one integer tt (1\u2264t\u22645001\u2264t\u2264500). Then tt test cases follow.The first line of each test case contains two integers nn and kk (1\u2264k\u2264n\u2264501\u2264k\u2264n\u226450).The second line of each test case contains a string ss of length nn, consisting of the characters '.' and '*'.It is guaranteed that there is at least one '*' in the string ss.It is guaranteed that the distance between any two neighboring '*' characters does not exceed kk.OutputFor each test case output the minimum number of '*' characters that must be replaced with 'x' characters in order to satisfy the conditions above.ExampleInputCopy5\n7 3\n.**.***\n5 1\n..*..\n5 2\n*.*.*\n3 2\n*.*\n1 1\n*\nOutputCopy3\n1\n3\n2\n1\n"], "Yet Another Card Deck": ["https://codeforces.com/problemset/problem/1511/C", "C. Yet Another Card Decktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a card deck of nn cards, numbered from top to bottom, i.\u00a0e. the top card has index 11 and bottom card\u00a0\u2014 index nn. Each card has its color: the ii-th card has color aiai.You should process qq queries. The jj-th query is described by integer tjtj. For each query you should:   find the highest card in the deck with color tjtj, i.\u00a0e. the card with minimum index;  print the position of the card you found;  take the card and place it on top of the deck. InputThe first line contains two integers nn and qq (2\u2264n\u22643\u22c51052\u2264n\u22643\u22c5105; 1\u2264q\u22643\u22c51051\u2264q\u22643\u22c5105)\u00a0\u2014 the number of cards in the deck and the number of queries.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264501\u2264ai\u226450)\u00a0\u2014 the colors of cards.The third line contains qq integers t1,t2,\u2026,tqt1,t2,\u2026,tq (1\u2264tj\u2264501\u2264tj\u226450)\u00a0\u2014 the query colors. It's guaranteed that queries ask only colors that are present in the deck.OutputPrint qq integers\u00a0\u2014 the answers for each query.ExampleInputCopy7 5\n2 1 1 4 3 3 1\n3 2 1 1 4\nOutputCopy5 2 3 1 5 NoteDescription of the sample:   the deck is [2,1,1,4,3\u2013,3,1][2,1,1,4,3_,3,1] and the first card with color t1=3t1=3 has position 55;  the deck is [3,2\u2013,1,1,4,3,1][3,2_,1,1,4,3,1] and the first card with color t2=2t2=2 has position 22;  the deck is [2,3,1\u2013,1,4,3,1][2,3,1_,1,4,3,1] and the first card with color t3=1t3=1 has position 33;  the deck is [1\u2013,2,3,1,4,3,1][1_,2,3,1,4,3,1] and the first card with color t4=1t4=1 has position 11;  the deck is [1,2,3,1,4\u2013,3,1][1,2,3,1,4_,3,1] and the first card with color t5=4t5=4 has position 55. "], "New Colony": ["https://codeforces.com/problemset/problem/1481/B", "B. New Colonytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter reaching your destination, you want to build a new colony on the new planet. Since this planet has many mountains and the colony must be built on a flat surface you decided to flatten the mountains using boulders (you are still dreaming so this makes sense to you).  You are given an array h1,h2,\u2026,hnh1,h2,\u2026,hn, where hihi is the height of the ii-th mountain, and kk\u00a0\u2014 the number of boulders you have.You will start throwing boulders from the top of the first mountain one by one and they will roll as follows (let's assume that the height of the current mountain is hihi):   if hi\u2265hi+1hi\u2265hi+1, the boulder will roll to the next mountain;  if hi<hi+1hi<hi+1, the boulder will stop rolling and increase the mountain height by 11 (hi=hi+1hi=hi+1);  if the boulder reaches the last mountain it will fall to the waste collection system and disappear. You want to find the position of the kk-th boulder or determine that it will fall into the waste collection system.InputThe first line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases.Each test case consists of two lines. The first line in each test case contains two integers nn and kk (1\u2264n\u22641001\u2264n\u2264100; 1\u2264k\u22641091\u2264k\u2264109)\u00a0\u2014 the number of mountains and the number of boulders.The second line contains nn integers h1,h2,\u2026,hnh1,h2,\u2026,hn (1\u2264hi\u22641001\u2264hi\u2264100)\u00a0\u2014 the height of the mountains.It is guaranteed that the sum of nn over all test cases does not exceed 100100.OutputFor each test case, print \u22121\u22121 if the kk-th boulder will fall into the collection system. Otherwise, print the position of the kk-th boulder.ExampleInputCopy4\n4 3\n4 1 2 3\n2 7\n1 8\n4 5\n4 1 2 3\n3 1\n5 3 1\nOutputCopy2\n1\n-1\n-1\nNoteLet's simulate the first case:  The first boulder starts at i=1i=1; since h1\u2265h2h1\u2265h2 it rolls to i=2i=2 and stops there because h2<h3h2<h3.  The new heights are [4,2,2,3][4,2,2,3].  The second boulder starts at i=1i=1; since h1\u2265h2h1\u2265h2 the boulder rolls to i=2i=2; since h2\u2265h3h2\u2265h3 the boulder rolls to i=3i=3 and stops there because h3<h4h3<h4.  The new heights are [4,2,3,3][4,2,3,3].  The third boulder starts at i=1i=1; since h1\u2265h2h1\u2265h2 it rolls to i=2i=2 and stops there because h2<h3h2<h3.  The new heights are [4,3,3,3][4,3,3,3]. The positions where each boulder stopped are the following: [2,3,2][2,3,2].In the second case, all 77 boulders will stop right at the first mountain rising its height from 11 to 88.The third case is similar to the first one but now you'll throw 55 boulders. The first three will roll in the same way as in the first test case. After that, mountain heights will be equal to [4,3,3,3][4,3,3,3], that's why the other two boulders will fall into the collection system.In the fourth case, the first and only boulders will fall straight into the collection system."], "Tavas and SaDDas": ["https://codeforces.com/problemset/problem/535/B", "B. Tavas and SaDDastime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce again Tavas started eating coffee mix without water! Keione told him that it smells awful, but he didn't stop doing that. That's why Keione told his smart friend, SaDDas to punish him! SaDDas took Tavas' headphones and told him: \"If you solve the following problem, I'll return it to you.\"  The problem is: You are given a lucky number n. Lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.If we sort all lucky numbers in increasing order, what's the 1-based index of n? Tavas is not as smart as SaDDas, so he asked you to do him a favor and solve this problem so he can have his headphones back.InputThe first and only line of input contains a lucky number n (1\u2009\u2264\u2009n\u2009\u2264\u2009109).OutputPrint the index of n among all lucky numbers.ExamplesInputCopy4OutputCopy1InputCopy7OutputCopy2InputCopy77OutputCopy6"], "Ping-pong": ["https://codeforces.com/problemset/problem/1455/C", "C. Ping-pongtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice and Bob play ping-pong with simplified rules.During the game, the player serving the ball commences a play. The server strikes the ball then the receiver makes a return by hitting the ball back. Thereafter, the server and receiver must alternately make a return until one of them doesn't make a return.The one who doesn't make a return loses this play. The winner of the play commences the next play. Alice starts the first play.Alice has xx stamina and Bob has yy. To hit the ball (while serving or returning) each player spends 11 stamina, so if they don't have any stamina, they can't return the ball (and lose the play) or can't serve the ball (in this case, the other player serves the ball instead). If both players run out of stamina, the game is over.Sometimes, it's strategically optimal not to return the ball, lose the current play, but save the stamina. On the contrary, when the server commences a play, they have to hit the ball, if they have some stamina left.Both Alice and Bob play optimally and want to, firstly, maximize their number of wins and, secondly, minimize the number of wins of their opponent.Calculate the resulting number of Alice's and Bob's wins.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.The first and only line of each test case contains two integers xx and yy (1\u2264x,y\u22641061\u2264x,y\u2264106)\u00a0\u2014 Alice's and Bob's initial stamina.OutputFor each test case, print two integers\u00a0\u2014 the resulting number of Alice's and Bob's wins, if both of them play optimally.ExampleInputCopy3\n1 1\n2 1\n1 7\nOutputCopy0 1\n1 1\n0 7\nNoteIn the first test case, Alice serves the ball and spends 11 stamina. Then Bob returns the ball and also spends 11 stamina. Alice can't return the ball since she has no stamina left and loses the play. Both of them ran out of stamina, so the game is over with 00 Alice's wins and 11 Bob's wins.In the second test case, Alice serves the ball and spends 11 stamina. Bob decides not to return the ball\u00a0\u2014 he loses the play but saves stamina. Alice, as the winner of the last play, serves the ball in the next play and spends 11 more stamina. This time, Bob returns the ball and spends 11 stamina. Alice doesn't have any stamina left, so she can't return the ball and loses the play. Both of them ran out of stamina, so the game is over with 11 Alice's and 11 Bob's win.In the third test case, Alice serves the ball and spends 11 stamina. Bob returns the ball and spends 11 stamina. Alice ran out of stamina, so she can't return the ball and loses the play. Bob, as a winner, serves the ball in the next 66 plays. Each time Alice can't return the ball and loses each play. The game is over with 00 Alice's and 77 Bob's wins."], "Counterexample": ["https://codeforces.com/problemset/problem/483/A", "A. Counterexample time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYour friend has recently learned about coprime numbers. A pair of numbers {a,\u2009b} is called coprime if the maximum number that divides both a and b is equal to one. Your friend often comes up with different statements. He has recently supposed that if the pair (a,\u2009b) is coprime and the pair (b,\u2009c) is coprime, then the pair (a,\u2009c) is coprime. You want to find a counterexample for your friend's statement. Therefore, your task is to find three distinct numbers (a,\u2009b,\u2009c), for which the statement is false, and the numbers meet the condition l\u2009\u2264\u2009a\u2009<\u2009b\u2009<\u2009c\u2009\u2264\u2009r. More specifically, you need to find three numbers (a,\u2009b,\u2009c), such that l\u2009\u2264\u2009a\u2009<\u2009b\u2009<\u2009c\u2009\u2264\u2009r, pairs (a,\u2009b) and (b,\u2009c) are coprime, and pair (a,\u2009c) is not coprime.InputThe single line contains two positive space-separated integers l, r (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u20091018; r\u2009-\u2009l\u2009\u2264\u200950).OutputPrint three positive space-separated integers a, b, c\u00a0\u2014 three distinct numbers (a,\u2009b,\u2009c) that form the counterexample. If there are several solutions, you are allowed to print any of them. The numbers must be printed in ascending order. If the counterexample does not exist, print the single number -1.ExamplesInputCopy2 4OutputCopy2 3 4InputCopy10 11OutputCopy-1InputCopy900000000000000009 900000000000000029OutputCopy900000000000000009 900000000000000010 900000000000000021NoteIn the first sample pair (2,\u20094) is not coprime and pairs (2,\u20093) and (3,\u20094) are. In the second sample you cannot form a group of three distinct integers, so the answer is -1. In the third sample it is easy to see that numbers 900000000000000009 and 900000000000000021 are divisible by three. "], "Strange List": ["https://codeforces.com/problemset/problem/1471/B", "B. Strange Listtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have given an array aa of length nn and an integer xx to a brand new robot. What the robot does is the following: it iterates over the elements of the array, let the current element be qq. If qq is divisible by xx, the robot adds xx copies of the integer qxqx to the end of the array, and moves on to the next element. Note that the newly added elements could be processed by the robot later. Otherwise, if qq is not divisible by xx, the robot shuts down.Please determine the sum of all values of the array at the end of the process.InputThe first input line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases.The first line of each test case contains two integers nn and xx (1\u2264n\u22641051\u2264n\u2264105, 2\u2264x\u22641092\u2264x\u2264109)\u00a0\u2014 the length of the array and the value which is used by the robot.The next line contains integers a1a1, a2a2, ..., anan (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the initial values in the array.It is guaranteed that the sum of values nn over all test cases does not exceed 105105.OutputFor each test case output one integer\u00a0\u2014 the sum of all elements at the end of the process.ExampleInputCopy2\n1 2\n12\n4 2\n4 6 8 2\nOutputCopy36\n44\nNoteIn the first test case the array initially consists of a single element [12][12], and x=2x=2. After the robot processes the first element, the array becomes [12,6,6][12,6,6]. Then the robot processes the second element, and the array becomes [12,6,6,3,3][12,6,6,3,3]. After the robot processes the next element, the array becomes [12,6,6,3,3,3,3][12,6,6,3,3,3,3], and then the robot shuts down, since it encounters an element that is not divisible by x=2x=2. The sum of the elements in the resulting array is equal to 3636.In the second test case the array initially contains integers [4,6,8,2][4,6,8,2], and x=2x=2. The resulting array in this case looks like [4,6,8,2,2,2,3,3,4,4,1,1,1,1,1,1][4,6,8,2,2,2,3,3,4,4,1,1,1,1,1,1]."], "Sign Flipping": ["https://codeforces.com/problemset/problem/1375/A", "A. Sign Flippingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given nn integers a1,a2,\u2026,ana1,a2,\u2026,an, where nn is odd. You are allowed to flip the sign of some (possibly all or none) of them. You wish to perform these flips in such a way that the following conditions hold:  At least n\u221212n\u221212 of the adjacent differences ai+1\u2212aiai+1\u2212ai for i=1,2,\u2026,n\u22121i=1,2,\u2026,n\u22121 are greater than or equal to 00.  At least n\u221212n\u221212 of the adjacent differences ai+1\u2212aiai+1\u2212ai for i=1,2,\u2026,n\u22121i=1,2,\u2026,n\u22121 are less than or equal to 00. Find any valid way to flip the signs. It can be shown that under the given constraints, there always exists at least one choice of signs to flip that satisfies the required condition. If there are several solutions, you can find any of them.InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u22645001\u2264t\u2264500) \u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains an integer nn (3\u2264n\u2264993\u2264n\u226499, nn is odd) \u00a0\u2014 the number of integers given to you.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109) \u00a0\u2014 the numbers themselves.It is guaranteed that the sum of nn over all test cases does not exceed 1000010000.OutputFor each test case, print nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn, corresponding to the integers after flipping signs. bibi has to be equal to either aiai or \u2212ai\u2212ai, and of the adjacent differences bi+1\u2212bibi+1\u2212bi for i=1,\u2026,n\u22121i=1,\u2026,n\u22121, at least n\u221212n\u221212 should be non-negative and at least n\u221212n\u221212 should be non-positive.It can be shown that under the given constraints, there always exists at least one choice of signs to flip that satisfies the required condition. If there are several solutions, you can find any of them.ExampleInputCopy5\n3\n-2 4 3\n5\n1 1 1 1 1\n5\n-2 4 7 -6 4\n9\n9 7 -4 -2 1 -3 9 -4 -5\n9\n-4 1 9 4 8 9 5 1 -9\nOutputCopy-2 -4 3\n1 1 1 1 1\n-2 -4 7 -6 4\n-9 -7 -4 2 1 -3 -9 -4 -5\n4 -1 -9 -4 -8 -9 -5 -1 9\nNoteIn the first test case, the difference (\u22124)\u2212(\u22122)=\u22122(\u22124)\u2212(\u22122)=\u22122 is non-positive, while the difference 3\u2212(\u22124)=73\u2212(\u22124)=7 is non-negative.In the second test case, we don't have to flip any signs. All 44 differences are equal to 00, which is both non-positive and non-negative.In the third test case, 7\u2212(\u22124)7\u2212(\u22124) and 4\u2212(\u22126)4\u2212(\u22126) are non-negative, while (\u22124)\u2212(\u22122)(\u22124)\u2212(\u22122) and (\u22126)\u22127(\u22126)\u22127 are non-positive."], "Little Elephant and Bits": ["https://codeforces.com/problemset/problem/258/A", "A. Little Elephant and Bitstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Little Elephant has an integer a, written in the binary notation. He wants to write this number on a piece of paper.To make sure that the number a fits on the piece of paper, the Little Elephant ought to delete exactly one any digit from number a in the binary record. At that a new number appears. It consists of the remaining binary digits, written in the corresponding order (possible, with leading zeroes).The Little Elephant wants the number he is going to write on the paper to be as large as possible. Help him find the maximum number that he can obtain after deleting exactly one binary digit and print it in the binary notation.InputThe single line contains integer a, written in the binary notation without leading zeroes. This number contains more than 1 and at most 105 digits.OutputIn the single line print the number that is written without leading zeroes in the binary notation \u2014 the answer to the problem.ExamplesInputCopy101OutputCopy11InputCopy110010OutputCopy11010NoteIn the first sample the best strategy is to delete the second digit. That results in number 112\u2009=\u2009310.In the second sample the best strategy is to delete the third or fourth digits \u2014 that results in number 110102\u2009=\u20092610."], "Increase and Copy": ["https://codeforces.com/problemset/problem/1426/C", "C. Increase and Copytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputInitially, you have the array aa consisting of one element 11 (a=[1]a=[1]).In one move, you can do one of the following things:  Increase some (single) element of aa by 11 (choose some ii from 11 to the current length of aa and increase aiai by one);  Append the copy of some (single) element of aa to the end of the array (choose some ii from 11 to the current length of aa and append aiai to the end of the array). For example, consider the sequence of five moves:  You take the first element a1a1, append its copy to the end of the array and get a=[1,1]a=[1,1].  You take the first element a1a1, increase it by 11 and get a=[2,1]a=[2,1].  You take the second element a2a2, append its copy to the end of the array and get a=[2,1,1]a=[2,1,1].  You take the first element a1a1, append its copy to the end of the array and get a=[2,1,1,2]a=[2,1,1,2].  You take the fourth element a4a4, increase it by 11 and get a=[2,1,1,3]a=[2,1,1,3]. Your task is to find the minimum number of moves required to obtain the array with the sum at least nn.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases. Then tt test cases follow.The only line of the test case contains one integer nn (1\u2264n\u22641091\u2264n\u2264109) \u2014 the lower bound on the sum of the array.OutputFor each test case, print the answer: the minimum number of moves required to obtain the array with the sum at least nn.ExampleInputCopy5\n1\n5\n42\n1337\n1000000000\nOutputCopy0\n3\n11\n72\n63244\n"], "Nezzar and Lucky Number": ["https://codeforces.com/problemset/problem/1478/B", "B. Nezzar and Lucky Numbertime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputNezzar's favorite digit among 1,\u2026,91,\u2026,9 is dd. He calls a positive integer lucky if dd occurs at least once in its decimal representation. Given qq integers a1,a2,\u2026,aqa1,a2,\u2026,aq, for each 1\u2264i\u2264q1\u2264i\u2264q Nezzar would like to know if aiai can be equal to a sum of several (one or more) lucky numbers.InputThe first line contains a single integer tt (1\u2264t\u226491\u2264t\u22649) \u2014 the number of test cases.The first line of each test case contains two integers qq and dd (1\u2264q\u22641041\u2264q\u2264104, 1\u2264d\u226491\u2264d\u22649).The second line of each test case contains qq integers a1,a2,\u2026,aqa1,a2,\u2026,aq (1\u2264ai\u22641091\u2264ai\u2264109).OutputFor each integer in each test case, print \"YES\" in a single line if aiai can be equal to a sum of lucky numbers. Otherwise, print \"NO\".You can print letters in any case (upper or lower).ExampleInputCopy2\n3 7\n24 25 27\n10 7\n51 52 53 54 55 56 57 58 59 60\nOutputCopyYES\nNO\nYES\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nNO\nNoteIn the first test case, 24=17+724=17+7, 2727 itself is a lucky number, 2525 cannot be equal to a sum of lucky numbers."], "Odd Swap Sort": ["https://codeforces.com/problemset/problem/1638/B", "B. Odd Swap Sorttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array a1,a2,\u2026,ana1,a2,\u2026,an. You can perform operations on the array. In each operation you can choose an integer ii (1\u2264i<n1\u2264i<n), and swap elements aiai and ai+1ai+1 of the array, if ai+ai+1ai+ai+1 is odd.Determine whether it can be sorted in non-decreasing order using this operation any number of times.InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u22641051\u2264t\u2264105)\u00a0\u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the length of the array.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the elements of the array.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print \"Yes\" or \"No\" depending on whether you can or can not sort the given array.You may print each letter in any case (for example, \"YES\", \"Yes\", \"yes\", \"yEs\" will all be recognized as positive answer).ExampleInputCopy4\n4\n1 6 31 14\n2\n4 2\n5\n2 9 6 7 10\n3\n6 6 6\nOutputCopyYes\nNo\nNo\nYes\nNoteIn the first test case, we can simply swap 3131 and 1414 (31+14=4531+14=45 which is odd) and obtain the non-decreasing array [1,6,14,31][1,6,14,31].In the second test case, the only way we could sort the array is by swapping 44 and 22, but this is impossible, since their sum 4+2=64+2=6 is even.In the third test case, there is no way to make the array non-decreasing.In the fourth test case, the array is already non-decreasing."], "Array": ["https://codeforces.com/problemset/problem/300/A", "A. Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVitaly has an array of n distinct integers. Vitaly wants to divide this array into three non-empty sets so as the following conditions hold:   The product of all numbers in the first set is less than zero (\u2009<\u20090).  The product of all numbers in the second set is greater than zero (\u2009>\u20090).  The product of all numbers in the third set is equal to zero.  Each number from the initial array must occur in exactly one set. Help Vitaly. Divide the given array.InputThe first line of the input contains integer n (3\u2009\u2264\u2009n\u2009\u2264\u2009100). The second line contains n space-separated distinct integers a1,\u2009a2,\u2009...,\u2009an (|ai|\u2009\u2264\u2009103) \u2014 the array elements.OutputIn the first line print integer n1 (n1\u2009>\u20090) \u2014 the number of elements in the first set. Then print n1 numbers \u2014 the elements that got to the first set.In the next line print integer n2 (n2\u2009>\u20090) \u2014 the number of elements in the second set. Then print n2 numbers \u2014 the elements that got to the second set.In the next line print integer n3 (n3\u2009>\u20090) \u2014 the number of elements in the third set. Then print n3 numbers \u2014 the elements that got to the third set.The printed sets must meet the described conditions. It is guaranteed that the solution exists. If there are several solutions, you are allowed to print any of them.ExamplesInputCopy3-1 2 0OutputCopy1 -11 21 0InputCopy4-1 -2 -3 0OutputCopy1 -12 -3 -21 0"], "Fun with Even Subarrays": ["https://codeforces.com/problemset/problem/1631/B", "B. Fun with Even Subarraystime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of nn elements. You can apply the following operation to it any number of times:  Select some subarray from aa of even size 2k2k that begins at position ll (1\u2264l\u2264l+2\u22c5k\u22121\u2264n1\u2264l\u2264l+2\u22c5k\u22121\u2264n, k\u22651k\u22651) and for each ii between 00 and k\u22121k\u22121 (inclusive), assign the value al+k+ial+k+i to al+ial+i. For example, if a=[2,1,3,4,5,3]a=[2,1,3,4,5,3], then choose l=1l=1 and k=2k=2, applying this operation the array will become a=[3,4,3,4,5,3]a=[3,4,3,4,5,3].Find the minimum number of operations (possibly zero) needed to make all the elements of the array equal.InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains an integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the length of the array.The second line of each test case consists of nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n) \u2014 the elements of the array aa.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputPrint tt lines, each line containing the answer to the corresponding test case \u2014 the minimum number of operations needed to make equal all the elements of the array with the given operation.ExampleInputCopy5\n3\n1 1 1\n2\n2 1\n5\n4 4 4 2 4\n4\n4 2 1 3\n1\n1\nOutputCopy0\n1\n1\n2\n0\nNoteIn the first test, all elements are equal, therefore no operations are needed.In the second test, you can apply one operation with k=1k=1 and l=1l=1, set a1:=a2a1:=a2, and the array becomes [1,1][1,1] with 11 operation.In the third test, you can apply one operation with k=1k=1 and l=4l=4, set a4:=a5a4:=a5, and the array becomes [4,4,4,4,4][4,4,4,4,4].In the fourth test, you can apply one operation with k=1k=1 and l=3l=3, set a3:=a4a3:=a4, and the array becomes [4,2,3,3][4,2,3,3], then you can apply another operation with k=2k=2 and l=1l=1, set a1:=a3a1:=a3, a2:=a4a2:=a4, and the array becomes [3,3,3,3][3,3,3,3].In the fifth test, there is only one element, therefore no operations are needed."], "Paint the Array": ["https://codeforces.com/problemset/problem/1618/C", "C. Paint the Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn positive integers. You have to choose a positive integer dd and paint all elements into two colors. All elements which are divisible by dd will be painted red, and all other elements will be painted blue.The coloring is called beautiful if there are no pairs of adjacent elements with the same color in the array. Your task is to find any value of dd which yields a beautiful coloring, or report that it is impossible.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of testcases.The first line of each testcase contains one integer nn (2\u2264n\u22641002\u2264n\u2264100) \u2014 the number of elements of the array.The second line of each testcase contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u226410181\u2264ai\u22641018).OutputFor each testcase print a single integer. If there is no such value of dd that yields a beautiful coloring, print 00. Otherwise, print any suitable value of dd (1\u2264d\u226410181\u2264d\u22641018).ExampleInputCopy5\n5\n1 2 3 4 5\n3\n10 5 15\n3\n100 10 200\n10\n9 8 2 6 6 2 8 6 5 4\n2\n1 3\nOutputCopy2\n0\n100\n0\n3\n"], "Deadline": ["https://codeforces.com/problemset/problem/1288/A", "A. Deadlinetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAdilbek was assigned to a special project. For Adilbek it means that he has nn days to run a special program and provide its results. But there is a problem: the program needs to run for dd days to calculate the results.Fortunately, Adilbek can optimize the program. If he spends xx (xx is a non-negative integer) days optimizing the program, he will make the program run in \u2308dx+1\u2309\u2308dx+1\u2309 days (\u2308a\u2309\u2308a\u2309 is the ceiling function: \u23082.4\u2309=3\u23082.4\u2309=3, \u23082\u2309=2\u23082\u2309=2). The program cannot be run and optimized simultaneously, so the total number of days he will spend is equal to x+\u2308dx+1\u2309x+\u2308dx+1\u2309.Will Adilbek be able to provide the generated results in no more than nn days?InputThe first line contains a single integer TT (1\u2264T\u2264501\u2264T\u226450) \u2014 the number of test cases.The next TT lines contain test cases \u2013 one per line. Each line contains two integers nn and dd (1\u2264n\u22641091\u2264n\u2264109, 1\u2264d\u22641091\u2264d\u2264109) \u2014 the number of days before the deadline and the number of days the program runs.OutputPrint TT answers \u2014 one per test case. For each test case print YES (case insensitive) if Adilbek can fit in nn days or NO (case insensitive) otherwise.ExampleInputCopy3\n1 1\n4 5\n5 11\nOutputCopyYES\nYES\nNO\nNoteIn the first test case, Adilbek decides not to optimize the program at all, since d\u2264nd\u2264n.In the second test case, Adilbek can spend 11 day optimizing the program and it will run \u230852\u2309=3\u230852\u2309=3 days. In total, he will spend 44 days and will fit in the limit.In the third test case, it's impossible to fit in the limit. For example, if Adilbek will optimize the program 22 days, it'll still work \u2308112+1\u2309=4\u2308112+1\u2309=4 days."], "Kill the Monster": ["https://codeforces.com/problemset/problem/1633/C", "C. Kill the Monstertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMonocarp is playing a computer game. In this game, his character fights different monsters.A fight between a character and a monster goes as follows. Suppose the character initially has health hChC and attack dCdC; the monster initially has health hMhM and attack dMdM. The fight consists of several steps:  the character attacks the monster, decreasing the monster's health by dCdC;  the monster attacks the character, decreasing the character's health by dMdM;  the character attacks the monster, decreasing the monster's health by dCdC;  the monster attacks the character, decreasing the character's health by dMdM;  and so on, until the end of the fight. The fight ends when someone's health becomes non-positive (i.\u2009e. 00 or less). If the monster's health becomes non-positive, the character wins, otherwise the monster wins.Monocarp's character currently has health equal to hChC and attack equal to dCdC. He wants to slay a monster with health equal to hMhM and attack equal to dMdM. Before the fight, Monocarp can spend up to kk coins to upgrade his character's weapon and/or armor; each upgrade costs exactly one coin, each weapon upgrade increases the character's attack by ww, and each armor upgrade increases the character's health by aa.Can Monocarp's character slay the monster if Monocarp spends coins on upgrades optimally?InputThe first line contains one integer tt (1\u2264t\u22645\u22c51041\u2264t\u22645\u22c5104) \u2014 the number of test cases. Each test case consists of three lines:The first line contains two integers hChC and dCdC (1\u2264hC\u226410151\u2264hC\u22641015; 1\u2264dC\u22641091\u2264dC\u2264109) \u2014 the character's health and attack;The second line contains two integers hMhM and dMdM (1\u2264hM\u226410151\u2264hM\u22641015; 1\u2264dM\u22641091\u2264dM\u2264109) \u2014 the monster's health and attack;The third line contains three integers kk, ww and aa (0\u2264k\u22642\u22c51050\u2264k\u22642\u22c5105; 0\u2264w\u22641040\u2264w\u2264104; 0\u2264a\u226410100\u2264a\u22641010) \u2014 the maximum number of coins that Monocarp can spend, the amount added to the character's attack with each weapon upgrade, and the amount added to the character's health with each armor upgrade, respectively.The sum of kk over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print YES if it is possible to slay the monster by optimally choosing the upgrades. Otherwise, print NO.ExampleInputCopy4\n25 4\n9 20\n1 1 10\n25 4\n12 20\n1 1 10\n100 1\n45 2\n0 4 10\n9 2\n69 2\n4 2 7\nOutputCopyYES\nNO\nYES\nYES\nNoteIn the first example, Monocarp can spend one coin to upgrade weapon (damage will be equal to 55), then health during battle will change as follows: (hC,hM)=(25,9)\u2192(25,4)\u2192(5,4)\u2192(5,\u22121)(hC,hM)=(25,9)\u2192(25,4)\u2192(5,4)\u2192(5,\u22121). The battle ended with Monocarp's victory.In the second example, Monocarp has no way to defeat the monster.In the third example, Monocarp has no coins, so he can't buy upgrades. However, the initial characteristics are enough for Monocarp to win.In the fourth example, Monocarp has 44 coins. To defeat the monster, he has to spend 22 coins to upgrade weapon and 22 coins to upgrade armor."], "ABBB": ["https://codeforces.com/problemset/problem/1428/C", "C. ABBBtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputZookeeper is playing a game. In this game, Zookeeper must use bombs to bomb a string that consists of letters 'A' and 'B'. He can use bombs to bomb a substring which is either \"AB\" or \"BB\". When he bombs such a substring, the substring gets deleted from the string and the remaining parts of the string get concatenated.For example, Zookeeper can use two such operations: AABABBA \u2192\u2192 AABBA \u2192\u2192 AAA.Zookeeper wonders what the shortest string he can make is. Can you help him find the length of the shortest string?InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u226420000)(1\u2264t\u226420000) \u00a0\u2014 the number of test cases. The description of the test cases follows.Each of the next tt lines contains a single test case each, consisting of a non-empty string ss: the string that Zookeeper needs to bomb. It is guaranteed that all symbols of ss are either 'A' or 'B'.It is guaranteed that the sum of |s||s| (length of ss) among all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print a single integer: the length of the shortest string that Zookeeper can make.ExampleInputCopy3\nAAA\nBABA\nAABBBABBBB\nOutputCopy3\n2\n0\nNoteFor the first test case, you can't make any moves, so the answer is 33.For the second test case, one optimal sequence of moves is BABA \u2192\u2192 BA. So, the answer is 22.For the third test case, one optimal sequence of moves is AABBBABBBB \u2192\u2192 AABBBABB \u2192\u2192 AABBBB \u2192\u2192 ABBB \u2192\u2192 AB \u2192\u2192 (empty string). So, the answer is 00."], "Card Deck": ["https://codeforces.com/problemset/problem/1492/B", "B. Card Decktime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou have a deck of nn cards, and you'd like to reorder it to a new one.Each card has a value between 11 and nn equal to pipi. All pipi are pairwise distinct. Cards in a deck are numbered from bottom to top, i.\u00a0e. p1p1 stands for the bottom card, pnpn is the top card. In each step you pick some integer k>0k>0, take the top kk cards from the original deck and place them, in the order they are now, on top of the new deck. You perform this operation until the original deck is empty. (Refer to the notes section for the better understanding.)Let's define an order of a deck as \u2211i=1nnn\u2212i\u22c5pi\u2211i=1nnn\u2212i\u22c5pi.Given the original deck, output the deck with maximum possible order you can make using the operation above.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains the single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the size of deck you have.The second line contains nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n; pi\u2260pjpi\u2260pj if i\u2260ji\u2260j)\u00a0\u2014 values of card in the deck from bottom to top.It's guaranteed that the sum of nn over all test cases doesn't exceed 105105.OutputFor each test case print the deck with maximum possible order. Print values of cards in the deck from bottom to top.If there are multiple answers, print any of them.ExampleInputCopy4\n4\n1 2 3 4\n5\n1 5 2 4 3\n6\n4 2 5 3 6 1\n1\n1\nOutputCopy4 3 2 1\n5 2 4 3 1\n6 1 5 3 4 2\n1\nNoteIn the first test case, one of the optimal strategies is the next one:   take 11 card from the top of pp and move it to p\u2032p\u2032: pp becomes [1,2,3][1,2,3], p\u2032p\u2032 becomes [4][4];  take 11 card from the top of pp: pp becomes [1,2][1,2], p\u2032p\u2032 becomes [4,3][4,3];  take 11 card from the top of pp: pp becomes [1][1], p\u2032p\u2032 becomes [4,3,2][4,3,2];  take 11 card from the top of pp: pp becomes empty, p\u2032p\u2032 becomes [4,3,2,1][4,3,2,1].  In result, p\u2032p\u2032 has order equal to 43\u22c54+42\u22c53+41\u22c52+40\u22c5143\u22c54+42\u22c53+41\u22c52+40\u22c51 == 256+48+8+1=313256+48+8+1=313.In the second test case, one of the optimal strategies is:   take 44 cards from the top of pp and move it to p\u2032p\u2032: pp becomes [1][1], p\u2032p\u2032 becomes [5,2,4,3][5,2,4,3];  take 11 card from the top of pp and move it to p\u2032p\u2032: pp becomes empty, p\u2032p\u2032 becomes [5,2,4,3,1][5,2,4,3,1];  In result, p\u2032p\u2032 has order equal to 54\u22c55+53\u22c52+52\u22c54+51\u22c53+50\u22c5154\u22c55+53\u22c52+52\u22c54+51\u22c53+50\u22c51 == 3125+250+100+15+1=34913125+250+100+15+1=3491.In the third test case, one of the optimal strategies is:   take 22 cards from the top of pp and move it to p\u2032p\u2032: pp becomes [4,2,5,3][4,2,5,3], p\u2032p\u2032 becomes [6,1][6,1];  take 22 cards from the top of pp and move it to p\u2032p\u2032: pp becomes [4,2][4,2], p\u2032p\u2032 becomes [6,1,5,3][6,1,5,3];  take 22 cards from the top of pp and move it to p\u2032p\u2032: pp becomes empty, p\u2032p\u2032 becomes [6,1,5,3,4,2][6,1,5,3,4,2].  In result, p\u2032p\u2032 has order equal to 65\u22c56+64\u22c51+63\u22c55+62\u22c53+61\u22c54+60\u22c5265\u22c56+64\u22c51+63\u22c55+62\u22c53+61\u22c54+60\u22c52 == 46656+1296+1080+108+24+2=4916646656+1296+1080+108+24+2=49166."], "Yaroslav and Permutations": ["https://codeforces.com/problemset/problem/296/A", "A. Yaroslav and Permutationstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYaroslav has an array that consists of n integers. In one second Yaroslav can swap two neighboring array elements. Now Yaroslav is wondering if he can obtain an array where any two neighboring elements would be distinct in a finite time.Help Yaroslav.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of elements in the array. The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u20091000) \u2014 the array elements.OutputIn the single line print \"YES\" (without the quotes) if Yaroslav can obtain the array he needs, and \"NO\" (without the quotes) otherwise.ExamplesInputCopy11OutputCopyYESInputCopy31 1 2OutputCopyYESInputCopy47 7 7 7OutputCopyNONoteIn the first sample the initial array fits well.In the second sample Yaroslav can get array: 1, 2, 1. He can swap the last and the second last elements to obtain it.In the third sample Yarosav can't get the array he needs.      "], "Alyona and Numbers": ["https://codeforces.com/problemset/problem/682/A", "A. Alyona and Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter finishing eating her bun, Alyona came up with two integers n and m. She decided to write down two columns of integers\u00a0\u2014 the first column containing integers from 1 to n and the second containing integers from 1 to m. Now the girl wants to count how many pairs of integers she can choose, one from the first column and the other from the second column, such that their sum is divisible by 5.Formally, Alyona wants to count the number of pairs of integers (x,\u2009y) such that 1\u2009\u2264\u2009x\u2009\u2264\u2009n, 1\u2009\u2264\u2009y\u2009\u2264\u2009m and  equals 0.As usual, Alyona has some troubles and asks you to help.InputThe only line of the input contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091\u2009000\u2009000).OutputPrint the only integer\u00a0\u2014 the number of pairs of integers (x,\u2009y) such that 1\u2009\u2264\u2009x\u2009\u2264\u2009n, 1\u2009\u2264\u2009y\u2009\u2264\u2009m and (x\u2009+\u2009y) is divisible by 5.ExamplesInputCopy6 12OutputCopy14InputCopy11 14OutputCopy31InputCopy1 5OutputCopy1InputCopy3 8OutputCopy5InputCopy5 7OutputCopy7InputCopy21 21OutputCopy88NoteFollowing pairs are suitable in the first sample case:   for x\u2009=\u20091 fits y equal to 4 or 9;  for x\u2009=\u20092 fits y equal to 3 or 8;  for x\u2009=\u20093 fits y equal to 2, 7 or 12;  for x\u2009=\u20094 fits y equal to 1, 6 or 11;  for x\u2009=\u20095 fits y equal to 5 or 10;  for x\u2009=\u20096 fits y equal to 4 or 9. Only the pair (1,\u20094) is suitable in the third sample case."], "Mirror in the String": ["https://codeforces.com/problemset/problem/1616/B", "B. Mirror in the Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a string s1s2\u2026sns1s2\u2026sn and you stand on the left of the string looking right. You want to choose an index kk (1\u2264k\u2264n1\u2264k\u2264n) and place a mirror after the kk-th letter, so that what you see is s1s2\u2026sksksk\u22121\u2026s1s1s2\u2026sksksk\u22121\u2026s1. What is the lexicographically smallest string you can see?A string aa is lexicographically smaller than a string bb if and only if one of the following holds:   aa is a prefix of bb, but a\u2260ba\u2260b;  in the first position where aa and bb differ, the string aa has a letter that appears earlier in the alphabet than the corresponding letter in bb. InputThe first line of input contains one integer tt (1\u2264t\u2264100001\u2264t\u226410000): the number of test cases.The next tt lines contain the description of the test cases, two lines per a test case.In the first line you are given one integer nn (1\u2264n\u22641051\u2264n\u2264105): the length of the string.The second line contains the string ss consisting of nn lowercase English characters.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case print the lexicographically smallest string you can see.ExampleInputCopy4\n10\ncodeforces\n9\ncbacbacba\n3\naaa\n4\nbbaa\nOutputCopycc\ncbaabc\naa\nbb\nNoteIn the first test case choose k=1k=1 to obtain \"cc\".In the second test case choose k=3k=3 to obtain \"cbaabc\".In the third test case choose k=1k=1 to obtain \"aa\".In the fourth test case choose k=1k=1 to obtain \"bb\"."], "Shifting Sort": ["https://codeforces.com/problemset/problem/1579/B", "B. Shifting Sorttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe new generation external memory contains an array of integers a[1\u2026n]=[a1,a2,\u2026,an]a[1\u2026n]=[a1,a2,\u2026,an].This type of memory does not support changing the value of an arbitrary element. Instead, it allows you to cut out any segment of the given array, cyclically shift (rotate) it by any offset and insert it back into the same place.Technically, each cyclic shift consists of two consecutive actions:   You may select arbitrary indices ll and rr (1\u2264l<r\u2264n1\u2264l<r\u2264n) as the boundaries of the segment.  Then you replace the segment a[l\u2026r]a[l\u2026r] with it's cyclic shift to the left by an arbitrary offset dd. The concept of a cyclic shift can be also explained by following relations: the sequence [1,4,1,3][1,4,1,3] is a cyclic shift of the sequence [3,1,4,1][3,1,4,1] to the left by the offset 11 and the sequence [4,1,3,1][4,1,3,1] is a cyclic shift of the sequence [3,1,4,1][3,1,4,1] to the left by the offset 22. For example, if a=[1,3,2,8,5]a=[1,3,2,8,5], then choosing l=2l=2, r=4r=4 and d=2d=2 yields a segment a[2\u20264]=[3,2,8]a[2\u20264]=[3,2,8]. This segment is then shifted by the offset d=2d=2 to the left, and you get a segment [8,3,2][8,3,2] which then takes the place of of the original elements of the segment. In the end you get a=[1,8,3,2,5]a=[1,8,3,2,5].Sort the given array aa using no more than nn cyclic shifts of any of its segments. Note that you don't need to minimize the number of cyclic shifts. Any method that requires nn or less cyclic shifts will be accepted.InputThe first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The next 2t2t lines contain the descriptions of the test cases. The first line of each test case description contains an integer nn (2\u2264n\u2264502\u2264n\u226450)\u00a0\u2014 the length of the array. The second line consists of space-separated elements of the array aiai (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109). Elements of array aa may repeat and don't have to be unique.OutputPrint tt answers to all input test cases. The first line of the answer of each test case should contain an integer kk (0\u2264k\u2264n0\u2264k\u2264n)\u00a0\u2014 the number of actions to sort the array. The next kk lines should contain descriptions of the actions formatted as \"ll\u00a0rr\u00a0dd\" (without quotes) where ll and rr (1\u2264l<r\u2264n1\u2264l<r\u2264n) are the boundaries of the segment being shifted, while dd (1\u2264d\u2264r\u2212l1\u2264d\u2264r\u2212l) is the offset value. Please remember that only the cyclic shifts to the left are considered so the chosen segment will be shifted by the offset dd to the to the left.Note that you are not required to find the minimum number of cyclic shifts needed for sorting. Any sorting method where the number of shifts does not exceed nn will be accepted.If the given array aa is already sorted, one of the possible answers is k=0k=0 and an empty sequence of cyclic shifts.If there are several possible answers, you may print any of them.ExampleInputCopy4\n2\n2 1\n3\n1 2 1\n4\n2 4 1 3\n5\n2 5 1 4 3\nOutputCopy1\n1 2 1\n1\n1 3 2\n3\n2 4 1\n2 3 1\n1 3 2\n4\n2 4 2\n1 5 3\n1 2 1\n1 3 1\nNoteExplanation of the fourth data set in the example:   The segment a[2\u20264]a[2\u20264] is selected and is shifted to the left by 22: [2,5,1,4,3]\u27f6[2,4,5,1,3][2,5,1,4,3]\u27f6[2,4,5,1,3]  The segment a[1\u20265]a[1\u20265] is then selected and is shifted to the left by 33: [2,4,5,1,3]\u27f6[1,3,2,4,5][2,4,5,1,3]\u27f6[1,3,2,4,5]  After that the segment a[1\u20262]a[1\u20262] is selected and is shifted to the left by 11: [1,3,2,4,5]\u27f6[3,1,2,4,5][1,3,2,4,5]\u27f6[3,1,2,4,5]  And in the end the segment a[1\u20263]a[1\u20263] is selected and is shifted to the left by 11: [3,1,2,4,5]\u27f6[1,2,3,4,5][3,1,2,4,5]\u27f6[1,2,3,4,5] "], "Max and Mex": ["https://codeforces.com/problemset/problem/1496/B", "B. Max and Mextime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a multiset SS initially consisting of nn distinct non-negative integers. A multiset is a set, that can contain some elements multiple times.You will perform the following operation kk times:   Add the element \u2308a+b2\u2309\u2308a+b2\u2309 (rounded up) into SS, where a=mex(S)a=mex\u2061(S) and b=max(S)b=max(S). If this number is already in the set, it is added again. Here maxmax of a multiset denotes the maximum integer in the multiset, and mexmex of a multiset denotes the smallest non-negative integer that is not present in the multiset. For example:   mex({1,4,0,2})=3mex\u2061({1,4,0,2})=3;   mex({2,5,1})=0mex\u2061({2,5,1})=0. Your task is to calculate the number of distinct elements in SS after kk operations will be done.InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains two integers nn, kk (1\u2264n\u22641051\u2264n\u2264105, 0\u2264k\u22641090\u2264k\u2264109)\u00a0\u2014 the initial size of the multiset SS and how many operations you need to perform.The second line of each test case contains nn distinct integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109)\u00a0\u2014 the numbers in the initial multiset.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case, print the number of distinct elements in SS after kk operations will be done.ExampleInputCopy5\n4 1\n0 1 3 4\n3 1\n0 1 4\n3 0\n0 1 4\n3 2\n0 1 2\n3 2\n1 2 3\nOutputCopy4\n4\n3\n5\n3\nNoteIn the first test case, S={0,1,3,4}S={0,1,3,4}, a=mex(S)=2a=mex\u2061(S)=2, b=max(S)=4b=max(S)=4, \u2308a+b2\u2309=3\u2308a+b2\u2309=3. So 33 is added into SS, and SS becomes {0,1,3,3,4}{0,1,3,3,4}. The answer is 44.In the second test case, S={0,1,4}S={0,1,4}, a=mex(S)=2a=mex\u2061(S)=2, b=max(S)=4b=max(S)=4, \u2308a+b2\u2309=3\u2308a+b2\u2309=3. So 33 is added into SS, and SS becomes {0,1,3,4}{0,1,3,4}. The answer is 44."], "Yet Another Meme Problem": ["https://codeforces.com/problemset/problem/1288/B", "B. Yet Another Meme Problemtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTry guessing the statement from this picture http://tiny.cc/ogyoiz.You are given two integers AA and BB, calculate the number of pairs (a,b)(a,b) such that 1\u2264a\u2264A1\u2264a\u2264A, 1\u2264b\u2264B1\u2264b\u2264B, and the equation a\u22c5b+a+b=conc(a,b)a\u22c5b+a+b=conc(a,b) is true; conc(a,b)conc(a,b) is the concatenation of aa and bb (for example, conc(12,23)=1223conc(12,23)=1223, conc(100,11)=10011conc(100,11)=10011). aa and bb should not contain leading zeroes.InputThe first line contains tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.Each test case contains two integers AA and BB (1\u2264A,B\u2264109)(1\u2264A,B\u2264109).OutputPrint one integer \u2014 the number of pairs (a,b)(a,b) such that 1\u2264a\u2264A1\u2264a\u2264A, 1\u2264b\u2264B1\u2264b\u2264B, and the equation a\u22c5b+a+b=conc(a,b)a\u22c5b+a+b=conc(a,b) is true.ExampleInputCopy3\n1 11\n4 2\n191 31415926\nOutputCopy1\n0\n1337\nNoteThere is only one suitable pair in the first test case: a=1a=1, b=9b=9 (1+9+1\u22c59=191+9+1\u22c59=19)."], "Boboniu Plays Chess": ["https://codeforces.com/problemset/problem/1395/B", "B. Boboniu Plays Chesstime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputBoboniu likes playing chess with his employees. As we know, no employee can beat the boss in the chess game, so Boboniu has never lost in any round.You are a new applicant for his company. Boboniu will test you with the following chess question:Consider a n\u00d7mn\u00d7m grid (rows are numbered from 11 to nn, and columns are numbered from 11 to mm). You have a chess piece, and it stands at some cell (Sx,Sy)(Sx,Sy) which is not on the border (i.e. 2\u2264Sx\u2264n\u221212\u2264Sx\u2264n\u22121 and 2\u2264Sy\u2264m\u221212\u2264Sy\u2264m\u22121).From the cell (x,y)(x,y), you can move your chess piece to (x,y\u2032)(x,y\u2032) (1\u2264y\u2032\u2264m,y\u2032\u2260y1\u2264y\u2032\u2264m,y\u2032\u2260y) or (x\u2032,y)(x\u2032,y) (1\u2264x\u2032\u2264n,x\u2032\u2260x1\u2264x\u2032\u2264n,x\u2032\u2260x). In other words, the chess piece moves as a rook. From the cell, you can move to any cell on the same row or column.Your goal is to visit each cell exactly once. Can you find a solution?Note that cells on the path between two adjacent cells in your route are not counted as visited, and it is not required to return to the starting point.InputThe only line of the input contains four integers nn, mm, SxSx and SySy (3\u2264n,m\u22641003\u2264n,m\u2264100, 2\u2264Sx\u2264n\u221212\u2264Sx\u2264n\u22121, 2\u2264Sy\u2264m\u221212\u2264Sy\u2264m\u22121) \u2014 the number of rows, the number of columns, and the initial position of your chess piece, respectively.OutputYou should print n\u22c5mn\u22c5m lines.The ii-th line should contain two integers xixi and yiyi (1\u2264xi\u2264n1\u2264xi\u2264n, 1\u2264yi\u2264m1\u2264yi\u2264m), denoting the ii-th cell that you visited. You should print exactly nmnm pairs (xi,yi)(xi,yi), they should cover all possible pairs (xi,yi)(xi,yi), such that 1\u2264xi\u2264n1\u2264xi\u2264n, 1\u2264yi\u2264m1\u2264yi\u2264m.We can show that under these constraints there always exists a solution. If there are multiple answers, print any.ExamplesInputCopy3 3 2 2\nOutputCopy2 2\n1 2\n1 3\n2 3\n3 3\n3 2\n3 1\n2 1\n1 1\nInputCopy3 4 2 2\nOutputCopy2 2\n2 1\n2 3\n2 4\n1 4\n3 4\n3 3\n3 2\n3 1\n1 1\n1 2\n1 3\nNotePossible routes for two examples:  "], "All are Same": ["https://codeforces.com/problemset/problem/1593/D1", "D1. All are Sametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis problem is a simplified version of D2, but it has significant differences, so read the whole statement.Polycarp has an array of nn (nn is even) integers a1,a2,\u2026,ana1,a2,\u2026,an. Polycarp conceived of a positive integer kk. After that, Polycarp began performing the following operations on the array: take an index ii (1\u2264i\u2264n1\u2264i\u2264n) and reduce the number aiai by kk.After Polycarp performed some (possibly zero) number of such operations, it turned out that all numbers in the array became the same. Find the maximum kk at which such a situation is possible, or print \u22121\u22121 if such a number can be arbitrarily large.InputThe first line contains one integer tt (1\u2264t\u2264101\u2264t\u226410) \u2014 the number of test cases. Then tt test cases follow.Each test case consists of two lines. The first line contains an even integer nn (4\u2264n\u2264404\u2264n\u226440) (nn is even). The second line contains nn integers a1,a2,\u2026ana1,a2,\u2026an (\u2212106\u2264ai\u2264106\u2212106\u2264ai\u2264106).It is guaranteed that the sum of all nn specified in the given test cases does not exceed 100100.OutputFor each test case output on a separate line an integer kk (k\u22651k\u22651) \u2014 the maximum possible number that Polycarp used in operations on the array, or \u22121\u22121, if such a number can be arbitrarily large.ExampleInputCopy3\n6\n1 5 3 1 1 5\n8\n-1 0 1 -1 0 1 -1 0\n4\n100 -1000 -1000 -1000\nOutputCopy2\n1\n1100\n"], "Update Files": ["https://codeforces.com/problemset/problem/1606/B", "B. Update Filestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBerland State University has received a new update for the operating system. Initially it is installed only on the 11-st computer.Update files should be copied to all nn computers. The computers are not connected to the internet, so the only way to transfer update files from one computer to another is to copy them using a patch cable (a cable connecting two computers directly). Only one patch cable can be connected to a computer at a time. Thus, from any computer where the update files are installed, they can be copied to some other computer in exactly one hour.Your task is to find the minimum number of hours required to copy the update files to all nn computers if there are only kk patch cables in Berland State University.InputThe first line contains a single integer tt (1\u2264t\u22641051\u2264t\u2264105)\u00a0\u2014 the number of test cases.Each test case consists of a single line that contains two integers nn and kk (1\u2264k\u2264n\u226410181\u2264k\u2264n\u22641018) \u2014 the number of computers and the number of patch cables.OutputFor each test case print one integer\u00a0\u2014 the minimum number of hours required to copy the update files to all nn computers.ExampleInputCopy4\n8 3\n6 6\n7 1\n1 1\nOutputCopy4\n3\n6\n0\nNoteLet's consider the test cases of the example:  n=8n=8, k=3k=3:   during the first hour, we copy the update files from the computer 11 to the computer 22;  during the second hour, we copy the update files from the computer 11 to the computer 33, and from the computer 22 to the computer 44;  during the third hour, we copy the update files from the computer 11 to the computer 55, from the computer 22 to the computer 66, and from the computer 33 to the computer 77;  during the fourth hour, we copy the update files from the computer 22 to the computer 88.   n=6n=6, k=6k=6:   during the first hour, we copy the update files from the computer 11 to the computer 22;  during the second hour, we copy the update files from the computer 11 to the computer 33, and from the computer 22 to the computer 44;  during the third hour, we copy the update files from the computer 11 to the computer 55, and from the computer 22 to the computer 66.   n=7n=7, k=1k=1:   during the first hour, we copy the update files from the computer 11 to the computer 22;  during the second hour, we copy the update files from the computer 11 to the computer 33;  during the third hour, we copy the update files from the computer 11 to the computer 44;  during the fourth hour, we copy the update files from the computer 44 to the computer 55;  during the fifth hour, we copy the update files from the computer 44 to the computer 66;  during the sixth hour, we copy the update files from the computer 33 to the computer 77.  "], "Combinatorics Homework": ["https://codeforces.com/problemset/problem/1574/B", "B. Combinatorics Homeworktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given four integer values aa, bb, cc and mm.Check if there exists a string that contains:   aa letters 'A';  bb letters 'B';  cc letters 'C';  no other letters;  exactly mm pairs of adjacent equal letters (exactly mm such positions ii that the ii-th letter is equal to the (i+1)(i+1)-th one). InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of testcases.Each of the next tt lines contains the description of the testcase\u00a0\u2014 four integers aa, bb, cc and mm (1\u2264a,b,c\u22641081\u2264a,b,c\u2264108; 0\u2264m\u22641080\u2264m\u2264108).OutputFor each testcase print \"YES\" if there exists a string that satisfies all the requirements. Print \"NO\" if there are no such strings.You may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).ExampleInputCopy3\n2 2 1 0\n1 1 1 1\n1 2 3 2\nOutputCopyYES\nNO\nYES\nNoteIn the first testcase strings \"ABCAB\" or \"BCABA\" satisfy the requirements. There exist other possible strings.In the second testcase there's no way to put adjacent equal letters if there's no letter that appears at least twice.In the third testcase string \"CABBCC\" satisfies the requirements. There exist other possible strings."], "Substrings Sort": ["https://codeforces.com/problemset/problem/988/B", "B. Substrings Sorttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given nn strings. Each string consists of lowercase English letters. Rearrange (reorder) the given strings in such a way that for every string, all strings that are placed before it are its substrings.String aa is a substring of string bb if it is possible to choose several consecutive letters in bb in such a way that they form aa. For example, string \"for\" is contained as a substring in strings \"codeforces\", \"for\" and \"therefore\", but is not contained as a substring in strings \"four\", \"fofo\" and \"rof\".InputThe first line contains an integer nn (1\u2264n\u22641001\u2264n\u2264100) \u2014 the number of strings.The next nn lines contain the given strings. The number of letters in each string is from 11 to 100100, inclusive. Each string consists of lowercase English letters.Some strings might be equal.OutputIf it is impossible to reorder nn given strings in required order, print \"NO\" (without quotes).Otherwise print \"YES\" (without quotes) and nn given strings in required order.ExamplesInputCopy5aabaabacababaabaOutputCopyYESabaabaabaabacabaInputCopy5aabacababaabaababOutputCopyNOInputCopy3qwertyqwertyqwertyOutputCopyYESqwertyqwertyqwertyNoteIn the second example you cannot reorder the strings because the string \"abab\" is not a substring of the string \"abacaba\"."], "Lucky Numbers": ["https://codeforces.com/problemset/problem/630/C", "C. Lucky Numberstime limit per test0.5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputThe numbers of all offices in the new building of the Tax Office of IT City will have lucky numbers.Lucky number is a number that consists of digits 7 and 8 only. Find the maximum number of offices in the new building of the Tax Office given that a door-plate can hold a number not longer than n digits.InputThe only line of input contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u200955) \u2014 the maximum length of a number that a door-plate can hold.OutputOutput one integer \u2014 the maximum number of offices, than can have unique lucky numbers not longer than n digits.ExamplesInputCopy2OutputCopy6"], "Merge it!": ["https://codeforces.com/problemset/problem/1176/B", "B. Merge it!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn integers a1,a2,\u2026,ana1,a2,\u2026,an.In one operation you can choose two elements of the array and replace them with the element equal to their sum (it does not matter where you insert the new element). For example, from the array [2,1,4][2,1,4] you can obtain the following arrays: [3,4][3,4], [1,6][1,6] and [2,5][2,5].Your task is to find the maximum possible number of elements divisible by 33 that are in the array after performing this operation an arbitrary (possibly, zero) number of times.You have to answer tt independent queries.InputThe first line contains one integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of queries.The first line of each query contains one integer nn (1\u2264n\u22641001\u2264n\u2264100).The second line of each query contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109). OutputFor each query print one integer in a single line \u2014 the maximum possible number of elements divisible by 33 that are in the array after performing described operation an arbitrary (possibly, zero) number of times.ExampleInputCopy2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\nOutputCopy3\n3\nNoteIn the first query of the example you can apply the following sequence of operations to obtain 33 elements divisible by 33: [3,1,2,3,1]\u2192[3,3,3,1][3,1,2,3,1]\u2192[3,3,3,1].In the second query you can obtain 33 elements divisible by 33 with the following sequence of operations: [1,1,1,1,1,2,2]\u2192[1,1,1,1,2,3]\u2192[1,1,1,3,3]\u2192[2,1,3,3]\u2192[3,3,3][1,1,1,1,1,2,2]\u2192[1,1,1,1,2,3]\u2192[1,1,1,3,3]\u2192[2,1,3,3]\u2192[3,3,3]."], "Special Numbers": ["https://codeforces.com/problemset/problem/1594/B", "B. Special Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTheofanis really likes sequences of positive integers, thus his teacher (Yeltsa Kcir) gave him a problem about a sequence that consists of only special numbers.Let's call a positive number special if it can be written as a sum of different non-negative powers of nn. For example, for n=4n=4 number 1717 is special, because it can be written as 40+42=1+16=1740+42=1+16=17, but 99 is not.Theofanis asks you to help him find the kk-th special number if they are sorted in increasing order. Since this number may be too large, output it modulo 109+7109+7.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.The first and only line of each test case contains two integers nn and kk (2\u2264n\u22641092\u2264n\u2264109; 1\u2264k\u22641091\u2264k\u2264109).OutputFor each test case, print one integer\u00a0\u2014 the kk-th special number in increasing order modulo 109+7109+7.ExampleInputCopy3\n3 4\n2 12\n105 564\nOutputCopy9\n12\n3595374\nNoteFor n=3n=3 the sequence is [1,3,4,9...][1,3,4,9...]"], "Vitya in the Countryside": ["https://codeforces.com/problemset/problem/719/A", "A. Vitya in the Countrysidetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputEvery summer Vitya comes to visit his grandmother in the countryside. This summer, he got a huge wart. Every grandma knows that one should treat warts when the moon goes down. Thus, Vitya has to catch the moment when the moon is down.Moon cycle lasts 30 days. The size of the visible part of the moon (in Vitya's units) for each day is 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, and then cycle repeats, thus after the second 1 again goes 0.As there is no internet in the countryside, Vitya has been watching the moon for n consecutive days and for each of these days he wrote down the size of the visible part of the moon. Help him find out whether the moon will be up or down next day, or this cannot be determined by the data he has.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200992)\u00a0\u2014 the number of consecutive days Vitya was watching the size of the visible part of the moon. The second line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u200915)\u00a0\u2014 Vitya's records.It's guaranteed that the input data is consistent.OutputIf Vitya can be sure that the size of visible part of the moon on day n\u2009+\u20091 will be less than the size of the visible part on day n, then print \"DOWN\" at the only line of the output. If he might be sure that the size of the visible part will increase, then print \"UP\". If it's impossible to determine what exactly will happen with the moon, print -1.ExamplesInputCopy53 4 5 6 7OutputCopyUPInputCopy712 13 14 15 14 13 12OutputCopyDOWNInputCopy18OutputCopy-1NoteIn the first sample, the size of the moon on the next day will be equal to 8, thus the answer is \"UP\".In the second sample, the size of the moon on the next day will be 11, thus the answer is \"DOWN\".In the third sample, there is no way to determine whether the size of the moon on the next day will be 7 or 9, thus the answer is -1."], "Petya and Countryside": ["https://codeforces.com/problemset/problem/66/B", "B. Petya and Countrysidetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya often travels to his grandmother in the countryside. The grandmother has a large garden, which can be represented as a rectangle 1\u2009\u00d7\u2009n in size, when viewed from above. This rectangle is divided into n equal square sections. The garden is very unusual as each of the square sections possesses its own fixed height and due to the newest irrigation system we can create artificial rain above each section.Creating artificial rain is an expensive operation. That's why we limit ourselves to creating the artificial rain only above one section. At that, the water from each watered section will flow into its neighbouring sections if their height does not exceed the height of the section. That is, for example, the garden can be represented by a 1\u2009\u00d7\u20095 rectangle, where the section heights are equal to 4, 2, 3, 3, 2. Then if we create an artificial rain over any of the sections with the height of 3, the water will flow over all the sections, except the ones with the height of 4. See the illustration of this example at the picture:  As Petya is keen on programming, he decided to find such a section that if we create artificial rain above it, the number of watered sections will be maximal. Help him. InputThe first line contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000). The second line contains n positive integers which are the height of the sections. All the numbers are no less than 1 and not more than 1000.OutputPrint a single number, the maximal number of watered sections if we create artificial rain above exactly one section.ExamplesInputCopy12OutputCopy1InputCopy51 2 1 2 1OutputCopy3InputCopy81 2 1 1 1 3 3 4OutputCopy6"], "Sweet Problem": ["https://codeforces.com/problemset/problem/1263/A", "A. Sweet Problemtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have three piles of candies: red, green and blue candies:  the first pile contains only red candies and there are rr candies in it,  the second pile contains only green candies and there are gg candies in it,  the third pile contains only blue candies and there are bb candies in it. Each day Tanya eats exactly two candies of different colors. She is free to choose the colors of eaten candies: the only restriction that she can't eat two candies of the same color in a day.Find the maximal number of days Tanya can eat candies? Each day she needs to eat exactly two candies.InputThe first line contains integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases in the input. Then tt test cases follow.Each test case is given as a separate line of the input. It contains three integers rr, gg and bb (1\u2264r,g,b\u22641081\u2264r,g,b\u2264108) \u2014 the number of red, green and blue candies, respectively.OutputPrint tt integers: the ii-th printed integer is the answer on the ii-th test case in the input.ExampleInputCopy6\n1 1 1\n1 2 1\n4 1 1\n7 4 10\n8 1 4\n8 2 8\nOutputCopy1\n2\n2\n10\n5\n9\nNoteIn the first example, Tanya can eat candies for one day only. She can eat any pair of candies this day because all of them have different colors.In the second example, Tanya can eat candies for two days. For example, she can eat red and green candies on the first day, and green and blue candies on the second day.In the third example, Tanya can eat candies for two days. For example, she can eat red and green candies on the first day, and red and blue candies on the second day. Note, that two red candies will remain uneaten."], "Snacktower": ["https://codeforces.com/problemset/problem/767/A", "A. Snacktowertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAccording to an old legeng, a long time ago Ankh-Morpork residents did something wrong to miss Fortune, and she cursed them. She said that at some time n snacks of distinct sizes will fall on the city, and the residents should build a Snacktower of them by placing snacks one on another. Of course, big snacks should be at the bottom of the tower, while small snacks should be at the top.Years passed, and once different snacks started to fall onto the city, and the residents began to build the Snacktower.  However, they faced some troubles. Each day exactly one snack fell onto the city, but their order was strange. So, at some days the residents weren't able to put the new stack on the top of the Snacktower: they had to wait until all the bigger snacks fell. Of course, in order to not to anger miss Fortune again, the residents placed each snack on the top of the tower immediately as they could do it.Write a program that models the behavior of Ankh-Morpork residents.InputThe first line contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the total number of snacks.The second line contains n integers, the i-th of them equals the size of the snack which fell on the i-th day. Sizes are distinct integers from 1 to n. OutputPrint n lines. On the i-th of them print the sizes of the snacks which the residents placed on the top of the Snacktower on the i-th day in the order they will do that. If no snack is placed on some day, leave the corresponding line empty.ExamplesInputCopy33 1 2OutputCopy3\u00a02 1InputCopy54 5 1 2 3OutputCopy\u00a05 4\u00a0\u00a03 2 1NoteIn the example a snack of size 3 fell on the first day, and the residents immediately placed it. On the second day a snack of size 1 fell, and the residents weren't able to place it because they were missing the snack of size 2. On the third day a snack of size 2 fell, and the residents immediately placed it. Right after that they placed the snack of size 1 which had fallen before."], "Colorful Stamp": ["https://codeforces.com/problemset/problem/1669/D", "D. Colorful Stamptime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA row of nn cells is given, all initially white. Using a stamp, you can stamp any two neighboring cells such that one becomes red and the other becomes blue. A stamp can be rotated, i.e. it can be used in both ways: as BRBR and as RBRB.During use, the stamp must completely fit on the given nn cells (it cannot be partially outside the cells). The stamp can be applied multiple times to the same cell. Each usage of the stamp recolors both cells that are under the stamp.For example, one possible sequence of stamps to make the picture BRBBWBRBBW could be WWWWW\u2192WWRB\u2013\u2013\u2013W\u2192BR\u2013\u2013\u2013RBW\u2192BRB\u2013\u2013\u2013BWWWWWW\u2192WWRB_W\u2192BR_RBW\u2192BRB_BW. Here WW, RR, and BB represent a white, red, or blue cell, respectively, and the cells that the stamp is used on are marked with an underline.Given a final picture, is it possible to make it using the stamp zero or more times?InputThe first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.The first line of each test case contains an integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the length of the picture.The second line of each test case contains a string ss\u00a0\u2014 the picture you need to make. It is guaranteed that the length of ss is nn and that ss only consists of the characters WW, RR, and BB, representing a white, red, or blue cell, respectively.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputOutput tt lines, each of which contains the answer to the corresponding test case. As an answer, output \"YES\" if it possible to make the picture using the stamp zero or more times, and \"NO\" otherwise.You can output the answer in any case (for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will be recognized as a positive answer).ExampleInputCopy12\n5\nBRBBW\n1\nB\n2\nWB\n2\nRW\n3\nBRB\n3\nRBB\n7\nWWWWWWW\n9\nRBWBWRRBW\n10\nBRBRBRBRRB\n12\nBBBRWWRRRWBR\n10\nBRBRBRBRBW\n5\nRBWBW\nOutputCopyYES\nNO\nNO\nNO\nYES\nYES\nYES\nNO\nYES\nNO\nYES\nNO\nNoteThe first test case is explained in the statement.For the second, third, and fourth test cases, it is not possible to stamp a single cell, so the answer is \"NO\".For the fifth test case, you can use the stamp as follows: WWW\u2192WRB\u2013\u2013\u2013\u2192BR\u2013\u2013\u2013BWWW\u2192WRB_\u2192BR_B.For the sixth test case, you can use the stamp as follows: WWW\u2192WRB\u2013\u2013\u2013\u2192RB\u2013\u2013\u2013BWWW\u2192WRB_\u2192RB_B.For the seventh test case, you don't need to use the stamp at all."], "ConneR and the A.R.C. Markland-N": ["https://codeforces.com/problemset/problem/1293/A", "A. ConneR and the A.R.C. Markland-Ntime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSakuzyo - ImprintingA.R.C. Markland-N is a tall building with nn floors numbered from 11 to nn. Between each two adjacent floors in the building, there is a staircase connecting them.It's lunchtime for our sensei Colin \"ConneR\" Neumann Jr, and he's planning for a location to enjoy his meal.ConneR's office is at floor ss of the building. On each floor (including floor ss, of course), there is a restaurant offering meals. However, due to renovations being in progress, kk of the restaurants are currently closed, and as a result, ConneR can't enjoy his lunch there.CooneR wants to reach a restaurant as quickly as possible to save time. What is the minimum number of staircases he needs to walk to reach a closest currently open restaurant.Please answer him quickly, and you might earn his praise and even enjoy the lunch with him in the elegant Neumanns' way!InputThe first line contains one integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases in the test. Then the descriptions of tt test cases follow.The first line of a test case contains three integers nn, ss and kk (2\u2264n\u22641092\u2264n\u2264109, 1\u2264s\u2264n1\u2264s\u2264n, 1\u2264k\u2264min(n\u22121,1000)1\u2264k\u2264min(n\u22121,1000))\u00a0\u2014 respectively the number of floors of A.R.C. Markland-N, the floor where ConneR is in, and the number of closed restaurants.The second line of a test case contains kk distinct integers a1,a2,\u2026,aka1,a2,\u2026,ak (1\u2264ai\u2264n1\u2264ai\u2264n)\u00a0\u2014 the floor numbers of the currently closed restaurants.It is guaranteed that the sum of kk over all test cases does not exceed 10001000.OutputFor each test case print a single integer\u00a0\u2014 the minimum number of staircases required for ConneR to walk from the floor ss to a floor with an open restaurant.ExampleInputCopy5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\nOutputCopy2\n0\n4\n0\n2\nNoteIn the first example test case, the nearest floor with an open restaurant would be the floor 44.In the second example test case, the floor with ConneR's office still has an open restaurant, so Sensei won't have to go anywhere.In the third example test case, the closest open restaurant is on the 66-th floor."], "Songs Compression": ["https://codeforces.com/problemset/problem/1015/C", "C. Songs Compressiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIvan has nn songs on his phone. The size of the ii-th song is aiai bytes. Ivan also has a flash drive which can hold at most mm bytes in total. Initially, his flash drive is empty.Ivan wants to copy all nn songs to the flash drive. He can compress the songs. If he compresses the ii-th song, the size of the ii-th song reduces from aiai to bibi bytes (bi<aibi<ai).Ivan can compress any subset of the songs (possibly empty) and copy all the songs to his flash drive if the sum of their sizes is at most mm. He can compress any subset of the songs (not necessarily contiguous).Ivan wants to find the minimum number of songs he needs to compress in such a way that all his songs fit on the drive (i.e. the sum of their sizes is less than or equal to mm).If it is impossible to copy all the songs (even if Ivan compresses all the songs), print \"-1\". Otherwise print the minimum number of songs Ivan needs to compress.InputThe first line of the input contains two integers nn and mm (1\u2264n\u2264105,1\u2264m\u22641091\u2264n\u2264105,1\u2264m\u2264109) \u2014 the number of the songs on Ivan's phone and the capacity of Ivan's flash drive.The next nn lines contain two integers each: the ii-th line contains two integers aiai and bibi (1\u2264ai,bi\u22641091\u2264ai,bi\u2264109, ai>biai>bi) \u2014 the initial size of the ii-th song and the size of the ii-th song after compression.OutputIf it is impossible to compress a subset of the songs in such a way that all songs fit on the flash drive, print \"-1\". Otherwise print the minimum number of the songs to compress.ExamplesInputCopy4 2110 87 43 15 4OutputCopy2InputCopy4 1610 87 43 15 4OutputCopy-1NoteIn the first example Ivan can compress the first and the third songs so after these moves the sum of sizes will be equal to 8+7+1+5=21\u2264218+7+1+5=21\u226421. Also Ivan can compress the first and the second songs, then the sum of sizes will be equal 8+4+3+5=20\u2264218+4+3+5=20\u226421. Note that compressing any single song is not sufficient to copy all the songs on the flash drive (for example, after compressing the second song the sum of sizes will be equal to 10+4+3+5=22>2110+4+3+5=22>21).In the second example even if Ivan compresses all the songs the sum of sizes will be equal 8+4+1+4=17>168+4+1+4=17>16."], "Elementary Particles": ["https://codeforces.com/problemset/problem/1625/B", "B. Elementary Particlestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMartians are actively engaged in interplanetary trade. Olymp City, the Martian city known for its spaceport, has become a place where goods from all the corners of our Galaxy come. To deliver even more freight from faraway planets, Martians need fast spaceships.A group of scientists conducts experiments to build a fast engine for the new spaceship. In the current experiment, there are nn elementary particles, the ii-th of them has type aiai.Denote a subsegment of the particle sequence (a1,a2,\u2026,ana1,a2,\u2026,an) as a sequence (al,al+1,\u2026,aral,al+1,\u2026,ar) for some left bound ll and right bound rr (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n). For instance, the sequence (1\u00a04\u00a02\u00a08\u00a05\u00a07)(1\u00a04\u00a02\u00a08\u00a05\u00a07) for l=2l=2 and r=4r=4 has the sequence (4\u00a02\u00a08)(4\u00a02\u00a08) as a subsegment. Two subsegments are considered different if at least one bound of those subsegments differs.Note that the subsegments can be equal as sequences but still considered different. For example, consider the sequence (1\u00a01\u00a01\u00a01\u00a01)(1\u00a01\u00a01\u00a01\u00a01) and two of its subsegments: one with l=1l=1 and r=3r=3 and another with l=2l=2 and r=4r=4. Both subsegments are equal to (1\u00a01\u00a01)(1\u00a01\u00a01), but still considered different, as their left and right bounds differ.The scientists want to conduct a reaction to get two different subsegments of the same length. Denote this length kk. The resulting pair of subsegments must be harmonious, i.\u00a0e. for some ii (1\u2264i\u2264k1\u2264i\u2264k) it must be true that the types of particles on the ii-th position are the same for these two subsegments. For example, the pair (1\u00a07\u00a03)(1\u00a07\u00a03) and (4\u00a07\u00a08)(4\u00a07\u00a08) is harmonious, as both subsegments have 77 on the second position. The pair (1\u00a02\u00a03)(1\u00a02\u00a03) and (3\u00a01\u00a02)(3\u00a01\u00a02) is not harmonious.The longer are harmonious subsegments, the more chances for the scientists to design a fast engine. So, they asked you to calculate the maximal possible length of harmonious pair made of different subsegments.InputThe first line contains an integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases. The following are descriptions of the test cases.The first line contains an integer nn (2\u2264n\u22641500002\u2264n\u2264150000) \u2014 the amount of elementary particles in the sequence.The second line contains nn integers aiai (1\u2264ai\u22641500001\u2264ai\u2264150000) \u2014 types of elementary particles.It is guaranteed that the sum of nn over all test cases does not exceed 3\u22c51053\u22c5105.OutputFor each test, print a single integer, maximal possible length of harmonious pair made of different subsegments. If such pair does not exist, print \u22121\u22121 instead.ExampleInputCopy4\n7\n3 1 5 2 1 3 4\n6\n1 1 1 1 1 1\n6\n1 4 2 8 5 7\n2\n15 15\nOutputCopy4\n5\n-1\n1\nNoteThe first test case is shown on the picture below:  As you can see from it, you may choose the subsegments (2\u00a01\u00a03\u00a04)(2\u00a01\u00a03\u00a04) and (3\u00a01\u00a05\u00a02)(3\u00a01\u00a05\u00a02), which are a harmonious pair. Their length is equal to 44, so the answer is 44.In the second test case, you need to take two subsegments: one with l=1l=1 and r=5r=5, and one with l=2l=2 and r=6r=6. It's not hard to observe that these segments are a harmonious pair and considered different even though they are both equal to (1\u00a01\u00a01\u00a01\u00a01)(1\u00a01\u00a01\u00a01\u00a01).In the third test case, you cannot make a harmonious pair, so the answer is \u22121\u22121."], "IQ Test": ["https://codeforces.com/problemset/problem/287/A", "A. IQ Testtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn the city of Ultima Thule job applicants are often offered an IQ test. The test is as follows: the person gets a piece of squared paper with a 4\u2009\u00d7\u20094 square painted on it. Some of the square's cells are painted black and others are painted white. Your task is to repaint at most one cell the other color so that the picture has a 2\u2009\u00d7\u20092 square, completely consisting of cells of the same color. If the initial picture already has such a square, the person should just say so and the test will be completed. Your task is to write a program that determines whether it is possible to pass the test. You cannot pass the test if either repainting any cell or no action doesn't result in a 2\u2009\u00d7\u20092 square, consisting of cells of the same color.InputFour lines contain four characters each: the j-th character of the i-th line equals \".\" if the cell in the i-th row and the j-th column of the square is painted white, and \"#\", if the cell is black.OutputPrint \"YES\" (without the quotes), if the test can be passed and \"NO\" (without the quotes) otherwise.ExamplesInputCopy####.#..####....OutputCopyYESInputCopy####....####....OutputCopyNONoteIn the first test sample it is enough to repaint the first cell in the second row. After such repainting the required 2\u2009\u00d7\u20092 square is on the intersection of the 1-st and 2-nd row with the 1-st and 2-nd column."], "Reachable Numbers": ["https://codeforces.com/problemset/problem/1157/A", "A. Reachable Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's denote a function f(x)f(x) in such a way: we add 11 to xx, then, while there is at least one trailing zero in the resulting number, we remove that zero. For example,   f(599)=6f(599)=6: 599+1=600\u219260\u21926599+1=600\u219260\u21926;  f(7)=8f(7)=8: 7+1=87+1=8;  f(9)=1f(9)=1: 9+1=10\u219219+1=10\u21921;  f(10099)=101f(10099)=101: 10099+1=10100\u21921010\u219210110099+1=10100\u21921010\u2192101. We say that some number yy is reachable from xx if we can apply function ff to xx some (possibly zero) times so that we get yy as a result. For example, 102102 is reachable from 1009810098 because f(f(f(10098)))=f(f(10099))=f(101)=102f(f(f(10098)))=f(f(10099))=f(101)=102; and any number is reachable from itself.You are given a number nn; your task is to count how many different numbers are reachable from nn.InputThe first line contains one integer nn (1\u2264n\u22641091\u2264n\u2264109).OutputPrint one integer: the number of different numbers that are reachable from nn.ExamplesInputCopy1098\nOutputCopy20\nInputCopy10\nOutputCopy19\nNoteThe numbers that are reachable from 10981098 are:1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,1098,10991,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,1098,1099."], "Subtract Operation": ["https://codeforces.com/problemset/problem/1656/B", "B. Subtract Operationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a list of nn integers. You can perform the following operation: you choose an element xx from the list, erase xx from the list, and subtract the value of xx from all the remaining elements. Thus, in one operation, the length of the list is decreased by exactly 11.Given an integer kk (k>0k>0), find if there is some sequence of n\u22121n\u22121 operations such that, after applying the operations, the only remaining element of the list is equal to kk.InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains two integers nn and kk (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105, 1\u2264k\u22641091\u2264k\u2264109), the number of integers in the list, and the target value, respectively.The second line of each test case contains the nn integers of the list a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases is not greater that 2\u22c51052\u22c5105.OutputFor each test case, print YES if you can achieve kk with a sequence of n\u22121n\u22121 operations. Otherwise, print NO.You may print each letter in any case (for example, \"YES\", \"Yes\", \"yes\", \"yEs\" will all be recognized as a positive answer).ExampleInputCopy4\n4 5\n4 2 2 7\n5 4\n1 9 1 3 4\n2 17\n17 0\n2 17\n18 18\nOutputCopyYES\nNO\nYES\nNO\nNoteIn the first example we have the list {4,2,2,7}{4,2,2,7}, and we have the target k=5k=5. One way to achieve it is the following: first we choose the third element, obtaining the list {2,0,5}{2,0,5}. Next we choose the first element, obtaining the list {\u22122,3}{\u22122,3}. Finally, we choose the first element, obtaining the list {5}{5}. "], "XOR Specia-LIS-t": ["https://codeforces.com/problemset/problem/1604/B", "B. XOR Specia-LIS-ttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYouKn0wWho has an integer sequence a1,a2,\u2026ana1,a2,\u2026an. Now he will split the sequence aa into one or more consecutive subarrays so that each element of aa belongs to exactly one subarray. Let kk be the number of resulting subarrays, and h1,h2,\u2026,hkh1,h2,\u2026,hk be the lengths of the longest increasing subsequences of corresponding subarrays.For example, if we split [2,5,3,1,4,3,2,2,5,1][2,5,3,1,4,3,2,2,5,1] into [2,5,3,1,4][2,5,3,1,4], [3,2,2,5][3,2,2,5], [1][1], then h=[3,2,1]h=[3,2,1].YouKn0wWho wonders if it is possible to split the sequence aa in such a way that the bitwise XOR of h1,h2,\u2026,hkh1,h2,\u2026,hk is equal to 00. You have to tell whether it is possible.The longest increasing subsequence (LIS) of a sequence b1,b2,\u2026,bmb1,b2,\u2026,bm is the longest sequence of valid indices i1,i2,\u2026,iki1,i2,\u2026,ik such that i1<i2<\u2026<iki1<i2<\u2026<ik and bi1<bi2<\u2026<bikbi1<bi2<\u2026<bik. For example, the LIS of [2,5,3,3,5][2,5,3,3,5] is [2,3,5][2,3,5], which has length 33.An array cc is a subarray of an array bb if cc can be obtained from bb by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.InputThe first line contains a single integer tt (1\u2264t\u2264100001\u2264t\u226410000) \u00a0\u2014 the number of test cases.The first line of each test case contains a single integer nn (2\u2264n\u22641052\u2264n\u2264105).The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases doesn't exceed 3\u22c51053\u22c5105.OutputFor each test case, print \"YES\" (without quotes) if it is possible to split into subarrays in the desired way, print \"NO\" (without quotes) otherwise. You can print each letter in any register (upper or lower).ExampleInputCopy4\n7\n1 3 4 2 2 1 5\n3\n1 3 4\n5\n1 3 2 4 2\n4\n4 3 2 1\nOutputCopyYES\nNO\nYES\nYES\nNoteIn the first test case, YouKn0wWho can split the sequence in the following way: [1,3,4][1,3,4], [2,2][2,2], [1,5][1,5]. This way, the LIS lengths are h=[3,1,2]h=[3,1,2], and the bitwise XOR of the LIS lengths is 3\u22951\u22952=03\u22951\u22952=0.In the second test case, it can be shown that it is impossible to split the sequence into subarrays that will satisfy the condition."], "Two Arrays": ["https://codeforces.com/problemset/problem/1417/B", "B. Two Arraystime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRedDreamer has an array aa consisting of nn non-negative integers, and an unlucky integer TT.Let's denote the misfortune of array bb having length mm as f(b)f(b) \u2014 the number of pairs of integers (i,j)(i,j) such that 1\u2264i<j\u2264m1\u2264i<j\u2264m and bi+bj=Tbi+bj=T. RedDreamer has to paint each element of aa into one of two colors, white and black (for each element, the color is chosen independently), and then create two arrays cc and dd so that all white elements belong to cc, and all black elements belong to dd (it is possible that one of these two arrays becomes empty). RedDreamer wants to paint the elements in such a way that f(c)+f(d)f(c)+f(d) is minimum possible.For example:  if n=6n=6, T=7T=7 and a=[1,2,3,4,5,6]a=[1,2,3,4,5,6], it is possible to paint the 11-st, the 44-th and the 55-th elements white, and all other elements black. So c=[1,4,5]c=[1,4,5], d=[2,3,6]d=[2,3,6], and f(c)+f(d)=0+0=0f(c)+f(d)=0+0=0;  if n=3n=3, T=6T=6 and a=[3,3,3]a=[3,3,3], it is possible to paint the 11-st element white, and all other elements black. So c=[3]c=[3], d=[3,3]d=[3,3], and f(c)+f(d)=0+1=1f(c)+f(d)=0+1=1. Help RedDreamer to paint the array optimally!InputThe first line contains one integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains two integers nn and TT (1\u2264n\u22641051\u2264n\u2264105, 0\u2264T\u22641090\u2264T\u2264109) \u2014 the number of elements in the array and the unlucky integer, respectively. The second line contains nn integers a1a1, a2a2, ..., anan (0\u2264ai\u22641090\u2264ai\u2264109) \u2014 the elements of the array. The sum of nn over all test cases does not exceed 105105.OutputFor each test case print nn integers: p1p1, p2p2, ..., pnpn (each pipi is either 00 or 11) denoting the colors. If pipi is 00, then aiai is white and belongs to the array cc, otherwise it is black and belongs to the array dd.If there are multiple answers that minimize the value of f(c)+f(d)f(c)+f(d), print any of them.ExampleInputCopy2\n6 7\n1 2 3 4 5 6\n3 6\n3 3 3\nOutputCopy1 0 0 1 1 0 \n1 0 0"], "Infinite Sequence": ["https://codeforces.com/problemset/problem/675/A", "A. Infinite Sequencetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya likes everything infinite. Now he is studying the properties of a sequence s, such that its first element is equal to a (s1\u2009=\u2009a), and the difference between any two neighbouring elements is equal to c (si\u2009-\u2009si\u2009-\u20091\u2009=\u2009c). In particular, Vasya wonders if his favourite integer b appears in this sequence, that is, there exists a positive integer i, such that si\u2009=\u2009b. Of course, you are the person he asks for a help.InputThe first line of the input contain three integers a, b and c (\u2009-\u2009109\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u2009109)\u00a0\u2014 the first element of the sequence, Vasya's favorite number and the difference between any two neighbouring elements of the sequence, respectively.OutputIf b appears in the sequence s print \"YES\" (without quotes), otherwise print \"NO\" (without quotes).ExamplesInputCopy1 7 3OutputCopyYESInputCopy10 10 0OutputCopyYESInputCopy1 -4 5OutputCopyNOInputCopy0 60 50OutputCopyNONoteIn the first sample, the sequence starts from integers 1, 4, 7, so 7 is its element.In the second sample, the favorite integer of Vasya is equal to the first element of the sequence.In the third sample all elements of the sequence are greater than Vasya's favorite integer.In the fourth sample, the sequence starts from 0, 50, 100, and all the following elements are greater than Vasya's favorite integer."], "MEX and Array": ["https://codeforces.com/problemset/problem/1637/B", "B. MEX and Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet there be an array b1,b2,\u2026,bkb1,b2,\u2026,bk. Let there be a partition of this array into segments [l1;r1],[l2;r2],\u2026,[lc;rc][l1;r1],[l2;r2],\u2026,[lc;rc], where l1=1l1=1, rc=krc=k, and for any 2\u2264i\u2264c2\u2264i\u2264c holds that ri\u22121+1=liri\u22121+1=li. In other words, each element of the array belongs to exactly one segment.Let's define the cost of a partition as c+\u2211i=1cmex({bli,bli+1,\u2026,bri}),c+\u2211i=1cmex\u2061({bli,bli+1,\u2026,bri}), where mexmex of a set of numbers SS is the smallest non-negative integer that does not occur in the set SS. In other words, the cost of a partition is the number of segments plus the sum of MEX over all segments. Let's define the value of an array b1,b2,\u2026,bkb1,b2,\u2026,bk as the maximum possible cost over all partitions of this array.You are given an array aa of size nn. Find the sum of values of all its subsegments.An array xx is a subsegment of an array yy if xx can be obtained from yy by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.InputThe input contains several test cases. The first line contains one integer tt (1\u2264t\u2264301\u2264t\u226430)\u00a0\u2014 the number of test cases.The first line for each test case contains one integer nn (1\u2264n\u22641001\u2264n\u2264100)\u00a0\u2014 the length of the array.The second line contains a sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109)\u00a0\u2014 the array elements.It is guaranteed that the sum of the values nn over all test cases does not exceed 100100.OutputFor each test case print a single integer\u00a0\u2014 the answer to the problem.ExampleInputCopy4\n2\n1 2\n3\n2 0 1\n4\n2 0 5 1\n5\n0 1 1 0 1\nOutputCopy4\n14\n26\n48\nNoteIn the second test case:   The best partition for the subsegment [2,0,1][2,0,1]: [2],[0,1][2],[0,1]. The cost of this partition equals to 2+mex({2})+mex({0,1})=2+0+2=42+mex\u2061({2})+mex\u2061({0,1})=2+0+2=4.  The best partition for the subsegment [2,0][2,0]: [2],[0][2],[0]. The cost of this partition equals to 2+mex({2})+mex({0})=2+0+1=32+mex\u2061({2})+mex\u2061({0})=2+0+1=3  The best partition for the subsegment [2][2]: [2][2]. The cost of this partition equals to 1+mex({2})=1+0=11+mex\u2061({2})=1+0=1.  The best partition for the subsegment [0,1][0,1]: [0,1][0,1]. The cost of this partition equals to 1+mex({0,1})=1+2=31+mex\u2061({0,1})=1+2=3.  The best partition for the subsegment [0][0]: [0][0]. The cost of this partition equals to 1+mex({0})=1+1=21+mex\u2061({0})=1+1=2.  The best partition for the subsegment [1][1]: [1][1]. The cost of this partition equals to 1+mex({1})=1+0=11+mex\u2061({1})=1+0=1. The sum of values over all subsegments equals to 4+3+1+3+2+1=144+3+1+3+2+1=14."], "Comparing Strings": ["https://codeforces.com/problemset/problem/186/A", "A. Comparing Stringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSome dwarves that are finishing the StUDY (State University for Dwarven Youngsters) Bachelor courses, have been told \"no genome, no degree\". That means that all dwarves should write a thesis on genome. Dwarven genome is far from simple. It is represented by a string that consists of lowercase Latin letters.Dwarf Misha has already chosen the subject for his thesis: determining by two dwarven genomes, whether they belong to the same race. Two dwarves belong to the same race if we can swap two characters in the first dwarf's genome and get the second dwarf's genome as a result. Help Dwarf Misha and find out whether two gnomes belong to the same race or not.InputThe first line contains the first dwarf's genome: a non-empty string, consisting of lowercase Latin letters.The second line contains the second dwarf's genome: a non-empty string, consisting of lowercase Latin letters.The number of letters in each genome doesn't exceed 105. It is guaranteed that the strings that correspond to the genomes are different. The given genomes may have different length.OutputPrint \"YES\", if the dwarves belong to the same race. Otherwise, print \"NO\".ExamplesInputCopyabbaOutputCopyYESInputCopyaaabOutputCopyNONote  First example: you can simply swap two letters in string \"ab\". So we get \"ba\".  Second example: we can't change string \"aa\" into string \"ab\", because \"aa\" does not contain letter \"b\". "], "Carrot Cakes": ["https://codeforces.com/problemset/problem/799/A", "A. Carrot Cakestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn some game by Playrix it takes t minutes for an oven to bake k carrot cakes, all cakes are ready at the same moment t minutes after they started baking. Arkady needs at least n cakes to complete a task, but he currently don't have any. However, he has infinitely many ingredients and one oven. Moreover, Arkady can build one more similar oven to make the process faster, it would take d minutes to build the oven. While the new oven is being built, only old one can bake cakes, after the new oven is built, both ovens bake simultaneously. Arkady can't build more than one oven.Determine if it is reasonable to build the second oven, i.e. will it decrease the minimum time needed to get n cakes or not. If the time needed with the second oven is the same as with one oven, then it is unreasonable.InputThe only line contains four integers n, t, k, d (1\u2009\u2264\u2009n,\u2009t,\u2009k,\u2009d\u2009\u2264\u20091\u2009000)\u00a0\u2014 the number of cakes needed, the time needed for one oven to bake k cakes, the number of cakes baked at the same time, the time needed to build the second oven. OutputIf it is reasonable to build the second oven, print \"YES\". Otherwise print \"NO\".ExamplesInputCopy8 6 4 5OutputCopyYESInputCopy8 6 4 6OutputCopyNOInputCopy10 3 11 4OutputCopyNOInputCopy4 2 1 4OutputCopyYESNoteIn the first example it is possible to get 8 cakes in 12 minutes using one oven. The second oven can be built in 5 minutes, so after 6 minutes the first oven bakes 4 cakes, the second oven bakes 4 more ovens after 11 minutes. Thus, it is reasonable to build the second oven. In the second example it doesn't matter whether we build the second oven or not, thus it takes 12 minutes to bake 8 cakes in both cases. Thus, it is unreasonable to build the second oven.In the third example the first oven bakes 11 cakes in 3 minutes, that is more than needed 10. It is unreasonable to build the second oven, because its building takes more time that baking the needed number of cakes using the only oven."], "Vova and Train": ["https://codeforces.com/problemset/problem/1066/A", "A. Vova and Traintime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVova plans to go to the conference by train. Initially, the train is at the point 11 and the destination point of the path is the point LL. The speed of the train is 11 length unit per minute (i.e. at the first minute the train is at the point 11, at the second minute \u2014 at the point 22 and so on).There are lanterns on the path. They are placed at the points with coordinates divisible by vv (i.e. the first lantern is at the point vv, the second is at the point 2v2v and so on).There is also exactly one standing train which occupies all the points from ll to rr inclusive.Vova can see the lantern at the point pp if pp is divisible by vv and there is no standing train at this position (p\u2209[l;r]p\u2209[l;r]). Thus, if the point with the lantern is one of the points covered by the standing train, Vova can't see this lantern.Your problem is to say the number of lanterns Vova will see during the path. Vova plans to go to tt different conferences, so you should answer tt independent queries.InputThe first line of the input contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of queries.Then tt lines follow. The ii-th line contains four integers Li,vi,li,riLi,vi,li,ri (1\u2264L,v\u22641091\u2264L,v\u2264109, 1\u2264l\u2264r\u2264L1\u2264l\u2264r\u2264L) \u2014 destination point of the ii-th path, the period of the lantern appearance and the segment occupied by the standing train.OutputPrint tt lines. The ii-th line should contain one integer \u2014 the answer for the ii-th query.ExampleInputCopy410 2 3 7100 51 51 511234 1 100 1991000000000 1 1 1000000000OutputCopy3011340NoteFor the first example query, the answer is 33. There are lanterns at positions 22, 44, 66, 88 and 1010, but Vova didn't see the lanterns at positions 44 and 66 because of the standing train.For the second example query, the answer is 00 because the only lantern is at the point 5151 and there is also a standing train at this point.For the third example query, the answer is 11341134 because there are 12341234 lanterns, but Vova didn't see the lanterns from the position 100100 to the position 199199 inclusive.For the fourth example query, the answer is 00 because the standing train covers the whole path."], "Elections": ["https://codeforces.com/problemset/problem/570/A", "A. Electionstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe country of Byalechinsk is running elections involving n candidates. The country consists of m cities. We know how many people in each city voted for each candidate.The electoral system in the country is pretty unusual. At the first stage of elections the votes are counted for each city: it is assumed that in each city won the candidate who got the highest number of votes in this city, and if several candidates got the maximum number of votes, then the winner is the one with a smaller index.At the second stage of elections the winner is determined by the same principle over the cities: the winner of the elections is the candidate who won in the maximum number of cities, and among those who got the maximum number of cities the winner is the one with a smaller index.Determine who will win the elections.InputThe first line of the input contains two integers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the number of candidates and of cities, respectively.Each of the next m lines contains n non-negative integers, the j-th number in the i-th line aij (1\u2009\u2264\u2009j\u2009\u2264\u2009n, 1\u2009\u2264\u2009i\u2009\u2264\u2009m, 0\u2009\u2264\u2009aij\u2009\u2264\u2009109) denotes the number of votes for candidate j in city i.It is guaranteed that the total number of people in all the cities does not exceed 109.OutputPrint a single number \u2014 the index of the candidate who won the elections. The candidates are indexed starting from one.ExamplesInputCopy3 31 2 32 3 11 2 1OutputCopy2InputCopy3 410 10 35 1 62 2 21 5 7OutputCopy1NoteNote to the first sample test. At the first stage city 1 chosen candidate 3, city 2 chosen candidate 2, city 3 chosen candidate 2. The winner is candidate 2, he gained 2 votes.Note to the second sample test. At the first stage in city 1 candidates 1 and 2 got the same maximum number of votes, but candidate 1 has a smaller index, so the city chose candidate 1. City 2 chosen candidate 3. City 3 chosen candidate 1, due to the fact that everyone has the same number of votes, and 1 has the smallest index. City 4 chosen the candidate 3. On the second stage the same number of cities chose candidates 1 and 3. The winner is candidate 1, the one with the smaller index."], "Eating Candies": ["https://codeforces.com/problemset/problem/1669/F", "F. Eating Candiestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn candies put from left to right on a table. The candies are numbered from left to right. The ii-th candy has weight wiwi. Alice and Bob eat candies. Alice can eat any number of candies from the left (she can't skip candies, she eats them in a row). Bob can eat any number of candies from the right (he can't skip candies, he eats them in a row). Of course, if Alice ate a candy, Bob can't eat it (and vice versa).They want to be fair. Their goal is to eat the same total weight of candies. What is the most number of candies they can eat in total?InputThe first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.The first line of each test case contains an integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the number of candies on the table.The second line of each test case contains nn integers w1,w2,\u2026,wnw1,w2,\u2026,wn (1\u2264wi\u22641041\u2264wi\u2264104)\u00a0\u2014 the weights of candies from left to right.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print a single integer\u00a0\u2014 the maximum number of candies Alice and Bob can eat in total while satisfying the condition.ExampleInputCopy4\n3\n10 20 10\n6\n2 1 4 2 4 1\n5\n1 2 4 8 16\n9\n7 3 20 5 15 1 11 8 10\nOutputCopy2\n6\n0\n7\nNoteFor the first test case, Alice will eat one candy from the left and Bob will eat one candy from the right. There is no better way for them to eat the same total amount of weight. The answer is 22 because they eat two candies in total.For the second test case, Alice will eat the first three candies from the left (with total weight 77) and Bob will eat the first three candies from the right (with total weight 77). They cannot eat more candies since all the candies have been eaten, so the answer is 66 (because they eat six candies in total).For the third test case, there is no way Alice and Bob will eat the same non-zero weight so the answer is 00.For the fourth test case, Alice will eat candies with weights [7,3,20][7,3,20] and Bob will eat candies with weights [10,8,11,1][10,8,11,1], they each eat 3030 weight. There is no better partition so the answer is 77."], "Rank List": ["https://codeforces.com/problemset/problem/166/A", "A. Rank Listtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnother programming contest is over. You got hold of the contest's final results table. The table has the following data. For each team we are shown two numbers: the number of problems and the total penalty time. However, for no team we are shown its final place.You know the rules of comparing the results of two given teams very well. Let's say that team a solved pa problems with total penalty time ta and team b solved pb problems with total penalty time tb. Team a gets a higher place than team b in the end, if it either solved more problems on the contest, or solved the same number of problems but in less total time. In other words, team a gets a higher place than team b in the final results' table if either pa\u2009>\u2009pb, or pa\u2009=\u2009pb and ta\u2009<\u2009tb. It is considered that the teams that solve the same number of problems with the same penalty time share all corresponding places. More formally, let's say there is a group of x teams that solved the same number of problems with the same penalty time. Let's also say that y teams performed better than the teams from this group. In this case all teams from the group share places y\u2009+\u20091, y\u2009+\u20092, ..., y\u2009+\u2009x. The teams that performed worse than the teams from this group, get their places in the results table starting from the y\u2009+\u2009x\u2009+\u20091-th place.Your task is to count what number of teams from the given list shared the k-th place. InputThe first line contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u200950). Then n lines contain the description of the teams: the i-th line contains two integers pi and ti (1\u2009\u2264\u2009pi,\u2009ti\u2009\u2264\u200950) \u2014 the number of solved problems and the total penalty time of the i-th team, correspondingly. All numbers in the lines are separated by spaces. OutputIn the only line print the sought number of teams that got the k-th place in the final results' table.ExamplesInputCopy7 24 104 104 103 202 12 11 10OutputCopy3InputCopy5 43 13 15 33 13 1OutputCopy4NoteThe final results' table for the first sample is:   1-3 places \u2014 4 solved problems, the penalty time equals 10  4 place \u2014 3 solved problems, the penalty time equals 20  5-6 places \u2014 2 solved problems, the penalty time equals 1  7 place \u2014 1 solved problem, the penalty time equals 10 The table shows that the second place is shared by the teams that solved 4 problems with penalty time 10. There are 3 such teams.The final table for the second sample is:  1 place \u2014 5 solved problems, the penalty time equals 3  2-5 places \u2014 3 solved problems, the penalty time equals 1 The table shows that the fourth place is shared by the teams that solved 3 problems with penalty time 1. There are 4 such teams."], "Playing with Paper": ["https://codeforces.com/problemset/problem/527/A", "A. Playing with Papertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Vasya was sitting on a not so interesting Maths lesson and making an origami from a rectangular a mm \u2009\u00d7\u2009 b mm sheet of paper (a\u2009>\u2009b). Usually the first step in making an origami is making a square piece of paper from the rectangular sheet by folding the sheet along the bisector of the right angle, and cutting the excess part.  After making a paper ship from the square piece, Vasya looked on the remaining (a\u2009-\u2009b) mm \u2009\u00d7\u2009 b mm strip of paper. He got the idea to use this strip of paper in the same way to make an origami, and then use the remainder (if it exists) and so on. At the moment when he is left with a square piece of paper, he will make the last ship from it and stop.Can you determine how many ships Vasya will make during the lesson?InputThe first line of the input contains two integers a, b (1\u2009\u2264\u2009b\u2009<\u2009a\u2009\u2264\u20091012) \u2014 the sizes of the original sheet of paper.OutputPrint a single integer \u2014 the number of ships that Vasya will make.ExamplesInputCopy2 1OutputCopy2InputCopy10 7OutputCopy6InputCopy1000000000000 1OutputCopy1000000000000NotePictures to the first and second sample test.  "], "Misha and Changing Handles": ["https://codeforces.com/problemset/problem/501/B", "B. Misha and Changing Handlestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMisha hacked the Codeforces site. Then he decided to let all the users change their handles. A user can now change his handle any number of times. But each new handle must not be equal to any handle that is already used or that was used at some point.Misha has a list of handle change requests. After completing the requests he wants to understand the relation between the original and the new handles of the users. Help him to do that.InputThe first line contains integer q (1\u2009\u2264\u2009q\u2009\u2264\u20091000), the number of handle change requests.Next q lines contain the descriptions of the requests, one per line.Each query consists of two non-empty strings old and new, separated by a space. The strings consist of lowercase and uppercase Latin letters and digits. Strings old and new are distinct. The lengths of the strings do not exceed 20.The requests are given chronologically. In other words, by the moment of a query there is a single person with handle old, and handle new is not used and has not been used by anyone.OutputIn the first line output the integer n \u2014 the number of users that changed their handles at least once.In the next n lines print the mapping between the old and the new handles of the users. Each of them must contain two strings, old and new, separated by a space, meaning that before the user had handle old, and after all the requests are completed, his handle is new. You may output lines in any order.Each user who changes the handle must occur exactly once in this description.ExamplesInputCopy5Misha ILoveCodeforcesVasya PetrovPetrov VasyaPetrov123ILoveCodeforces MikeMirzayanovPetya IvanovOutputCopy3Petya IvanovMisha MikeMirzayanovVasya VasyaPetrov123"], "MUH and Sticks": ["https://codeforces.com/problemset/problem/471/A", "A. MUH and Stickstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTwo polar bears Menshykov and Uslada from the St.Petersburg zoo and elephant Horace from the Kiev zoo got six sticks to play with and assess the animals' creativity. Menshykov, Uslada and Horace decided to make either an elephant or a bear from those sticks. They can make an animal from sticks in the following way:   Four sticks represent the animal's legs, these sticks should have the same length.  Two remaining sticks represent the animal's head and body. The bear's head stick must be shorter than the body stick. The elephant, however, has a long trunk, so his head stick must be as long as the body stick. Note that there are no limits on the relations between the leg sticks and the head and body sticks. Your task is to find out which animal can be made from the given stick set. The zoo keeper wants the sticks back after the game, so they must never be broken, even bears understand it.InputThe single line contains six space-separated integers li (1\u2009\u2264\u2009li\u2009\u2264\u20099) \u2014 the lengths of the six sticks. It is guaranteed that the input is such that you cannot make both animals from the sticks.OutputIf you can make a bear from the given set, print string \"Bear\" (without the quotes). If you can make an elephant, print string \"Elephant\" (w\u0131thout the quotes). If you can make neither a bear nor an elephant, print string \"Alien\" (without the quotes).ExamplesInputCopy4 2 5 4 4 4OutputCopyBearInputCopy4 4 5 4 4 5OutputCopyElephantInputCopy1 2 3 4 5 6OutputCopyAlienNoteIf you're out of creative ideas, see instructions below which show how to make a bear and an elephant in the first two samples. The stick of length 2 is in red, the sticks of length 4 are in green, the sticks of length 5 are in blue.   "], "Big Segment": ["https://codeforces.com/problemset/problem/242/B", "B. Big Segmenttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA coordinate line has n segments, the i-th segment starts at the position li and ends at the position ri. We will denote such a segment as [li,\u2009ri].You have suggested that one of the defined segments covers all others. In other words, there is such segment in the given set, which contains all other ones. Now you want to test your assumption. Find in the given set the segment which covers all other segments, and print its number. If such a segment doesn't exist, print -1.Formally we will assume that segment [a,\u2009b] covers segment [c,\u2009d], if they meet this condition a\u2009\u2264\u2009c\u2009\u2264\u2009d\u2009\u2264\u2009b. InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of segments. Next n lines contain the descriptions of the segments. The i-th line contains two space-separated integers li,\u2009ri (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009109) \u2014 the borders of the i-th segment.It is guaranteed that no two segments coincide.OutputPrint a single integer \u2014 the number of the segment that covers all other segments in the set. If there's no solution, print -1.The segments are numbered starting from 1 in the order in which they appear in the input.ExamplesInputCopy31 12 23 3OutputCopy-1InputCopy61 52 31 107 107 710 10OutputCopy3"], "Remainder": ["https://codeforces.com/problemset/problem/1165/A", "A. Remaindertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a huge decimal number consisting of nn digits. It is guaranteed that this number has no leading zeros. Each digit of this number is either 0 or 1.You may perform several (possibly zero) operations with this number. During each operation you are allowed to change any digit of your number; you may change 0 to 1 or 1 to 0. It is possible that after some operation you can obtain a number with leading zeroes, but it does not matter for this problem.You are also given two integers 0\u2264y<x<n0\u2264y<x<n. Your task is to calculate the minimum number of operations you should perform to obtain the number that has remainder 10y10y modulo 10x10x. In other words, the obtained number should have remainder 10y10y when divided by 10x10x.InputThe first line of the input contains three integers n,x,yn,x,y (0\u2264y<x<n\u22642\u22c51050\u2264y<x<n\u22642\u22c5105) \u2014 the length of the number and the integers xx and yy, respectively.The second line of the input contains one decimal number consisting of nn digits, each digit of this number is either 0 or 1. It is guaranteed that the first digit of the number is 1.OutputPrint one integer \u2014 the minimum number of operations you should perform to obtain the number having remainder 10y10y modulo 10x10x. In other words, the obtained number should have remainder 10y10y when divided by 10x10x.ExamplesInputCopy11 5 2\n11010100101\nOutputCopy1\nInputCopy11 5 1\n11010100101\nOutputCopy3\nNoteIn the first example the number will be 1101010010011010100100 after performing one operation. It has remainder 100100 modulo 100000100000.In the second example the number will be 1101010001011010100010 after performing three operations. It has remainder 1010 modulo 100000100000."], "Putting Bricks in the Wall": ["https://codeforces.com/problemset/problem/1421/B", "B. Putting Bricks in the Walltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPink Floyd are pulling a prank on Roger Waters. They know he doesn't like walls, he wants to be able to walk freely, so they are blocking him from exiting his room which can be seen as a grid.Roger Waters has a square grid of size n\u00d7nn\u00d7n and he wants to traverse his grid from the upper left (1,11,1) corner to the lower right corner (n,nn,n). Waters can move from a square to any other square adjacent by a side, as long as he is still in the grid. Also except for the cells (1,11,1) and (n,nn,n) every cell has a value 00 or 11 in it.Before starting his traversal he will pick either a 00 or a 11 and will be able to only go to cells values in which are equal to the digit he chose. The starting and finishing cells (1,11,1) and (n,nn,n) are exempt from this rule, he may go through them regardless of picked digit. Because of this the cell (1,11,1) takes value the letter 'S' and the cell (n,nn,n) takes value the letter 'F'.For example, in the first example test case, he can go from (1,11,1) to (n,nn,n) by using the zeroes on this path: (1,11,1), (2,12,1), (2,22,2), (2,32,3), (3,33,3), (3,43,4), (4,44,4)The rest of the band (Pink Floyd) wants Waters to not be able to do his traversal, so while he is not looking they will invert at most two cells in the grid (from 00 to 11 or vice versa). They are afraid they will not be quick enough and asked for your help in choosing the cells.  Note that you cannot invert cells (1,1)(1,1) and (n,n)(n,n).We can show that there always exists a solution for the given constraints.Also note that Waters will pick his digit of the traversal after the band has changed his grid, so he must not be able to reach (n,nn,n) no matter what digit he picks.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u2264501\u2264t\u226450). Description of the test cases follows.The first line of each test case contains one integers nn (3\u2264n\u22642003\u2264n\u2264200).The following nn lines of each test case contain the binary grid, square (1,11,1) being colored in 'S' and square (n,nn,n) being colored in 'F'.The sum of values of nn doesn't exceed 200200.OutputFor each test case output on the first line an integer cc (0\u2264c\u226420\u2264c\u22642) \u00a0\u2014 the number of inverted cells.In ii-th of the following cc lines, print the coordinates of the ii-th cell you inverted. You may not invert the same cell twice.  Note that you cannot invert cells (1,1)(1,1) and (n,n)(n,n).ExampleInputCopy3\n4\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\nOutputCopy1\n3 4\n2\n1 2\n2 1\n0\nNoteFor the first test case, after inverting the cell, we get the following grid:S01000011001111F"], "Game on Ranges": ["https://codeforces.com/problemset/problem/1623/B", "B. Game on Rangestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice and Bob play the following game. Alice has a set SS of disjoint ranges of integers, initially containing only one range [1,n][1,n]. In one turn, Alice picks a range [l,r][l,r] from the set SS and asks Bob to pick a number in the range. Bob chooses a number dd (l\u2264d\u2264rl\u2264d\u2264r). Then Alice removes [l,r][l,r] from SS and puts into the set SS the range [l,d\u22121][l,d\u22121] (if l\u2264d\u22121l\u2264d\u22121) and the range [d+1,r][d+1,r] (if d+1\u2264rd+1\u2264r). The game ends when the set SS is empty. We can show that the number of turns in each game is exactly nn.After playing the game, Alice remembers all the ranges [l,r][l,r] she picked from the set SS, but Bob does not remember any of the numbers that he picked. But Bob is smart, and he knows he can find out his numbers dd from Alice's ranges, and so he asks you for help with your programming skill.Given the list of ranges that Alice has picked ([l,r][l,r]), for each range, help Bob find the number dd that Bob has picked.We can show that there is always a unique way for Bob to choose his number for a list of valid ranges picked by Alice.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u226410001\u2264t\u22641000). Description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u226410001\u2264n\u22641000).Each of the next nn lines contains two integers ll and rr (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n), denoting the range [l,r][l,r] that Alice picked at some point.Note that the ranges are given in no particular order.It is guaranteed that the sum of nn over all test cases does not exceed 10001000, and the ranges for each test case are from a valid game.OutputFor each test case print nn lines. Each line should contain three integers ll, rr, and dd, denoting that for Alice's range [l,r][l,r] Bob picked the number dd.You can print the lines in any order. We can show that the answer is unique.It is not required to print a new line after each test case. The new lines in the output of the example are for readability only. ExampleInputCopy4\n1\n1 1\n3\n1 3\n2 3\n2 2\n6\n1 1\n3 5\n4 4\n3 6\n4 5\n1 6\n5\n1 5\n1 2\n4 5\n2 2\n4 4\nOutputCopy1 1 1\n\n1 3 1\n2 2 2\n2 3 3\n\n1 1 1\n3 5 3\n4 4 4\n3 6 6\n4 5 5\n1 6 2\n\n1 5 3\n1 2 1\n4 5 5\n2 2 2\n4 4 4\nNoteIn the first test case, there is only 1 range [1,1][1,1]. There was only one range [1,1][1,1] for Alice to pick, and there was only one number 11 for Bob to pick.In the second test case, n=3n=3. Initially, the set contains only one range [1,3][1,3].   Alice picked the range [1,3][1,3]. Bob picked the number 11. Then Alice put the range [2,3][2,3] back to the set, which after this turn is the only range in the set.  Alice picked the range [2,3][2,3]. Bob picked the number 33. Then Alice put the range [2,2][2,2] back to the set.  Alice picked the range [2,2][2,2]. Bob picked the number 22. The game ended. In the fourth test case, the game was played with n=5n=5. Initially, the set contains only one range [1,5][1,5]. The game's turn is described in the following table.  Game turnAlice's picked rangeBob's picked numberThe range set afterBefore the game start{[1,5]}{[1,5]}1[1,5][1,5]33{[1,2],[4,5]}{[1,2],[4,5]}2[1,2][1,2]11{[2,2],[4,5]}{[2,2],[4,5]}3[4,5][4,5]55{[2,2],[4,4]}{[2,2],[4,4]}4[2,2][2,2]22{[4,4]}{[4,4]}5[4,4][4,4]44{}{} (empty set) "], "Seating Arrangements (easy version)": ["https://codeforces.com/problemset/problem/1566/D1", "D1. Seating Arrangements (easy version) time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt is the easy version of the problem. The only difference is that in this version n=1n=1.In the cinema seats can be represented as the table with nn rows and mm columns. The rows are numbered with integers from 11 to nn. The seats in each row are numbered with consecutive integers from left to right: in the kk-th row from m(k\u22121)+1m(k\u22121)+1 to mkmk for all rows 1\u2264k\u2264n1\u2264k\u2264n. 1122\u22ef\u22efm\u22121m\u22121mmm+1m+1m+2m+2\u22ef\u22ef2m\u221212m\u221212m2m2m+12m+12m+22m+2\u22ef\u22ef3m\u221213m\u221213m3m\u22ee\u22ee\u22ee\u22ee\u22f1\u22f1\u22ee\u22ee\u22ee\u22eem(n\u22121)+1m(n\u22121)+1m(n\u22121)+2m(n\u22121)+2\u22ef\u22efnm\u22121nm\u22121nmnm The table with seats indices There are nmnm people who want to go to the cinema to watch a new film. They are numbered with integers from 11 to nmnm. You should give exactly one seat to each person.It is known, that in this cinema as lower seat index you have as better you can see everything happening on the screen. ii-th person has the level of sight aiai. Let's define sisi as the seat index, that will be given to ii-th person. You want to give better places for people with lower sight levels, so for any two people ii, jj such that ai<ajai<aj it should be satisfied that si<sjsi<sj.After you will give seats to all people they will start coming to their seats. In the order from 11 to nmnm, each person will enter the hall and sit in their seat. To get to their place, the person will go to their seat's row and start moving from the first seat in this row to theirs from left to right. While moving some places will be free, some will be occupied with people already seated. The inconvenience of the person is equal to the number of occupied seats he or she will go through.Let's consider an example: m=5m=5, the person has the seat 44 in the first row, the seats 11, 33, 55 in the first row are already occupied, the seats 22 and 44 are free. The inconvenience of this person will be 22, because he will go through occupied seats 11 and 33.Find the minimal total inconvenience (the sum of inconveniences of all people), that is possible to have by giving places for all people (all conditions should be satisfied).InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains two integers nn and mm (n=1n=1, 1\u2264m\u22643001\u2264m\u2264300)\u00a0\u2014 the number of rows and places in each row respectively.The second line of each test case contains n\u22c5mn\u22c5m integers a1,a2,\u2026,an\u22c5ma1,a2,\u2026,an\u22c5m (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is the sight level of ii-th person.It's guaranteed that the sum of n\u22c5mn\u22c5m over all test cases does not exceed 105105.OutputFor each test case print a single integer\u00a0\u2014 the minimal total inconvenience that can be achieved.ExampleInputCopy4\n1 3\n1 2 3\n1 5\n2 1 5 3 3\n1 2\n2 1\n1 6\n2 3 2 1 1 1\nOutputCopy3\n6\n0\n1\nNoteIn the first test case, there is a single way to arrange people, because all sight levels are distinct. The first person will sit on the first seat, the second person will sit on the second place, the third person will sit on the third place. So inconvenience of the first person will be 00, inconvenience of the second person will be 11 and inconvenience of the third person will be 22. The total inconvenience is 0+1+2=30+1+2=3.In the second test case, people should sit as follows: s1=2s1=2, s2=1s2=1, s3=5s3=5, s4=4s4=4, s5=3s5=3. The total inconvenience will be 66."], "Kitahara Haruki's Gift": ["https://codeforces.com/problemset/problem/433/A", "A. Kitahara Haruki's Gifttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputKitahara Haruki has bought n apples for Touma Kazusa and Ogiso Setsuna. Now he wants to divide all the apples between the friends.Each apple weights 100 grams or 200 grams. Of course Kitahara Haruki doesn't want to offend any of his friend. Therefore the total weight of the apples given to Touma Kazusa must be equal to the total weight of the apples given to Ogiso Setsuna.But unfortunately Kitahara Haruki doesn't have a knife right now, so he cannot split any apple into some parts. Please, tell him: is it possible to divide all the apples in a fair way between his friends?InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of apples. The second line contains n integers w1,\u2009w2,\u2009...,\u2009wn (wi\u2009=\u2009100 or wi\u2009=\u2009200), where wi is the weight of the i-th apple.OutputIn a single line print \"YES\" (without the quotes) if it is possible to divide all the apples between his friends. Otherwise print \"NO\" (without the quotes).ExamplesInputCopy3100 200 100OutputCopyYESInputCopy4100 100 100 200OutputCopyNONoteIn the first test sample Kitahara Haruki can give the first and the last apple to Ogiso Setsuna and the middle apple to Touma Kazusa."], "Giga Tower": ["https://codeforces.com/problemset/problem/488/A", "A. Giga Towertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiga Tower is the tallest and deepest building in Cyberland. There are 17\u2009777\u2009777\u2009777 floors, numbered from \u2009-\u20098\u2009888\u2009888\u2009888 to 8\u2009888\u2009888\u2009888. In particular, there is floor 0 between floor \u2009-\u20091 and floor 1. Every day, thousands of tourists come to this place to enjoy the wonderful view. In Cyberland, it is believed that the number \"8\" is a lucky number (that's why Giga Tower has 8\u2009888\u2009888\u2009888 floors above the ground), and, an integer is lucky, if and only if its decimal notation contains at least one digit \"8\". For example, 8,\u2009\u2009-\u2009180,\u2009808 are all lucky while 42,\u2009\u2009-\u200910 are not. In the Giga Tower, if you write code at a floor with lucky floor number, good luck will always be with you (Well, this round is #278, also lucky, huh?).Tourist Henry goes to the tower to seek good luck. Now he is at the floor numbered a. He wants to find the minimum positive integer b, such that, if he walks b floors higher, he will arrive at a floor with a lucky number. InputThe only line of input contains an integer a (\u2009-\u2009109\u2009\u2264\u2009a\u2009\u2264\u2009109).OutputPrint the minimum b in a line.ExamplesInputCopy179OutputCopy1InputCopy-1OutputCopy9InputCopy18OutputCopy10NoteFor the first sample, he has to arrive at the floor numbered 180.For the second sample, he will arrive at 8.Note that b should be positive, so the answer for the third sample is 10, not 0."], "The Fibonacci Segment": ["https://codeforces.com/problemset/problem/365/B", "B. The Fibonacci Segmenttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have array a1,\u2009a2,\u2009...,\u2009an. Segment [l,\u2009r] (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009n) is good if ai\u2009=\u2009ai\u2009-\u20091\u2009+\u2009ai\u2009-\u20092, for all i (l\u2009+\u20092\u2009\u2264\u2009i\u2009\u2264\u2009r).Let's define len([l,\u2009r])\u2009=\u2009r\u2009-\u2009l\u2009+\u20091, len([l,\u2009r]) is the length of the segment [l,\u2009r]. Segment [l1,\u2009r1], is longer than segment [l2,\u2009r2], if len([l1,\u2009r1])\u2009>\u2009len([l2,\u2009r2]).Your task is to find a good segment of the maximum length in array a. Note that a segment of length 1 or 2 is always good.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of elements in the array. The second line contains integers: a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009109).OutputPrint the length of the longest good segment in array a.ExamplesInputCopy101 2 3 5 8 13 21 34 55 89OutputCopy10InputCopy51 1 1 1 1OutputCopy2"], "Eating Queries": ["https://codeforces.com/problemset/problem/1676/E", "E. Eating Queriestime limit per test3.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTimur has nn candies. The ii-th candy has a quantity of sugar equal to aiai. So, by eating the ii-th candy, Timur consumes a quantity of sugar equal to aiai.Timur will ask you qq queries regarding his candies. For the jj-th query you have to answer what is the minimum number of candies he needs to eat in order to reach a quantity of sugar greater than or equal to xjxj or print -1 if it's not possible to obtain such a quantity. In other words, you should print the minimum possible kk such that after eating kk candies, Timur consumes a quantity of sugar of at least xjxj or say that no possible kk exists.Note that he can't eat the same candy twice and queries are independent of each other (Timur can use the same candy in different queries).InputThe first line of input contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000) \u00a0\u2014 the number of test cases. The description of test cases follows.The first line contains 22 integers nn and qq (1\u2264n,q\u22641.5\u22c51051\u2264n,q\u22641.5\u22c5105)\u00a0\u2014 the number of candies Timur has and the number of queries you have to print an answer for respectively.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641041\u2264ai\u2264104)\u00a0\u2014 the quantity of sugar in each of the candies respectively.Then qq lines follow. Each of the next qq lines contains a single integer xjxj (1\u2264xj\u22642\u22c51091\u2264xj\u22642\u22c5109)\u00a0\u2013 the quantity Timur wants to reach for the given query.It is guaranteed that the sum of nn and the sum of qq over all test cases do not exceed 1.5\u22c51051.5\u22c5105.OutputFor each test case output qq lines. For the jj-th line output the number of candies Timur needs to eat in order to reach a quantity of sugar greater than or equal to xjxj or print -1 if it's not possible to obtain such a quantity.ExampleInputCopy3\n8 7\n4 3 3 1 1 4 5 9\n1\n10\n50\n14\n15\n22\n30\n4 1\n1 2 3 4\n3\n1 2\n5\n4\n6\nOutputCopy1\n2\n-1\n2\n3\n4\n8\n1\n1\n-1\nNoteFor the first test case:For the first query, Timur can eat any candy, and he will reach the desired quantity.For the second query, Timur can reach a quantity of at least 1010 by eating the 77-th and the 88-th candies, thus consuming a quantity of sugar equal to 1414.For the third query, there is no possible answer.For the fourth query, Timur can reach a quantity of at least 1414 by eating the 77-th and the 88-th candies, thus consuming a quantity of sugar equal to 1414.For the second test case:For the only query of the second test case, we can choose the third candy from which Timur receives exactly 33 sugar. It's also possible to obtain the same answer by choosing the fourth candy."], "Little Elephant and Magic Square": ["https://codeforces.com/problemset/problem/259/B", "B. Little Elephant and Magic Squaretime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Elephant loves magic squares very much.A magic square is a 3\u2009\u00d7\u20093 table, each cell contains some positive integer. At that the sums of integers in all rows, columns and diagonals of the table are equal. The figure below shows the magic square, the sum of integers in all its rows, columns and diagonals equals 15.  The Little Elephant remembered one magic square. He started writing this square on a piece of paper, but as he wrote, he forgot all three elements of the main diagonal of the magic square. Fortunately, the Little Elephant clearly remembered that all elements of the magic square did not exceed 105. Help the Little Elephant, restore the original magic square, given the Elephant's notes.InputThe first three lines of the input contain the Little Elephant's notes. The first line contains elements of the first row of the magic square. The second line contains the elements of the second row, the third line is for the third row. The main diagonal elements that have been forgotten by the Elephant are represented by zeroes.It is guaranteed that the notes contain exactly three zeroes and they are all located on the main diagonal. It is guaranteed that all positive numbers in the table do not exceed 105.OutputPrint three lines, in each line print three integers \u2014 the Little Elephant's magic square. If there are multiple magic squares, you are allowed to print any of them. Note that all numbers you print must be positive and not exceed 105.It is guaranteed that there exists at least one magic square that meets the conditions.ExamplesInputCopy0 1 11 0 11 1 0OutputCopy1 1 11 1 11 1 1InputCopy0 3 65 0 54 7 0OutputCopy6 3 65 5 54 7 4"], "Airport": ["https://codeforces.com/problemset/problem/218/B", "B. Airporttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLolek and Bolek are about to travel abroad by plane. The local airport has a special \"Choose Your Plane\" offer. The offer's conditions are as follows:  it is up to a passenger to choose a plane to fly on;  if the chosen plane has x (x\u2009>\u20090) empty seats at the given moment, then the ticket for such a plane costs x zlotys (units of Polish currency). The only ticket office of the airport already has a queue of n passengers in front of it. Lolek and Bolek have not stood in the queue yet, but they are already wondering what is the maximum and the minimum number of zlotys the airport administration can earn if all n passengers buy tickets according to the conditions of this offer?The passengers buy tickets in turn, the first person in the queue goes first, then goes the second one, and so on up to n-th person.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000) \u2014 the number of passengers in the queue and the number of planes in the airport, correspondingly. The next line contains m integers a1,\u2009a2,\u2009...,\u2009am (1\u2009\u2264\u2009ai\u2009\u2264\u20091000) \u2014 ai stands for the number of empty seats in the i-th plane before the ticket office starts selling tickets.The numbers in the lines are separated by a space. It is guaranteed that there are at least n empty seats in total.OutputPrint two integers \u2014 the maximum and the minimum number of zlotys that the airport administration can earn, correspondingly.ExamplesInputCopy4 32 1 1OutputCopy5 5InputCopy4 32 2 2OutputCopy7 6NoteIn the first test sample the number of passengers is equal to the number of empty seats, so regardless of the way the planes are chosen, the administration will earn the same sum.In the second sample the sum is maximized if the 1-st person in the queue buys a ticket to the 1-st plane, the 2-nd person \u2014 to the 2-nd plane, the 3-rd person \u2014 to the 3-rd plane, the 4-th person \u2014 to the 1-st plane. The sum is minimized if the 1-st person in the queue buys a ticket to the 1-st plane, the 2-nd person \u2014 to the 1-st plane, the 3-rd person \u2014 to the 2-nd plane, the 4-th person \u2014 to the 2-nd plane."], "Good Number": ["https://codeforces.com/problemset/problem/365/A", "A. Good Numbertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call a number k-good if it contains all digits not exceeding k (0,\u2009...,\u2009k). You've got a number k and an array a containing n numbers. Find out how many k-good numbers are in a (count each number every time it occurs in array a).InputThe first line contains integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100, 0\u2009\u2264\u2009k\u2009\u2264\u20099). The i-th of the following n lines contains integer ai without leading zeroes (1\u2009\u2264\u2009ai\u2009\u2264\u2009109).OutputPrint a single integer \u2014 the number of k-good numbers in a.ExamplesInputCopy10 61234560123456012345601234560123456012345601234560123456012345601234560OutputCopy10InputCopy2 1110OutputCopy1"], "Kalindrome Array": ["https://codeforces.com/problemset/problem/1610/B", "B. Kalindrome Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn array [b1,b2,\u2026,bm][b1,b2,\u2026,bm] is a palindrome, if bi=bm+1\u2212ibi=bm+1\u2212i for each ii from 11 to mm. Empty array is also a palindrome.An array is called kalindrome, if the following condition holds: It's possible to select some integer xx and delete some of the elements of the array equal to xx, so that the remaining array (after gluing together the remaining parts) is a palindrome. Note that you don't have to delete all elements equal to xx, and you don't have to delete at least one element equal to xx.For example :   [1,2,1][1,2,1] is kalindrome because you can simply not delete a single element.  [3,1,2,3,1][3,1,2,3,1] is kalindrome because you can choose x=3x=3 and delete both elements equal to 33, obtaining array [1,2,1][1,2,1], which is a palindrome.  [1,2,3][1,2,3] is not kalindrome. You are given an array [a1,a2,\u2026,an][a1,a2,\u2026,an]. Determine if aa is kalindrome or not.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the length of the array.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n)\u00a0\u2014 elements of the array.It's guaranteed that the sum of nn over all test cases won't exceed 2\u22c51052\u22c5105.OutputFor each test case, print YES if aa is kalindrome and NO otherwise. You can print each letter in any case.ExampleInputCopy4\n1\n1\n2\n1 2\n3\n1 2 3\n5\n1 4 4 1 4\nOutputCopyYES\nYES\nNO\nYES\nNoteIn the first test case, array [1][1] is already a palindrome, so it's a kalindrome as well.In the second test case, we can choose x=2x=2, delete the second element, and obtain array [1][1], which is a palindrome.In the third test case, it's impossible to obtain a palindrome.In the fourth test case, you can choose x=4x=4 and delete the fifth element, obtaining [1,4,4,1][1,4,4,1]. You also can choose x=1x=1, delete the first and the fourth elements, and obtain [4,4,4][4,4,4]."], "Prison Transfer": ["https://codeforces.com/problemset/problem/427/B", "B. Prison Transfertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe prison of your city has n prisoners. As the prison can't accommodate all of them, the city mayor has decided to transfer c of the prisoners to a prison located in another city.For this reason, he made the n prisoners to stand in a line, with a number written on their chests. The number is the severity of the crime he/she has committed. The greater the number, the more severe his/her crime was.Then, the mayor told you to choose the c prisoners, who will be transferred to the other prison. He also imposed two conditions. They are,  The chosen c prisoners has to form a contiguous segment of prisoners.  Any of the chosen prisoner's crime level should not be greater then t. Because, that will make the prisoner a severe criminal and the mayor doesn't want to take the risk of his running away during the transfer. Find the number of ways you can choose the c prisoners.InputThe first line of input will contain three space separated integers n\u00a0(1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105), t\u00a0(0\u2009\u2264\u2009t\u2009\u2264\u2009109) and c\u00a0(1\u2009\u2264\u2009c\u2009\u2264\u2009n). The next line will contain n space separated integers, the ith integer is the severity ith prisoner's crime. The value of crime severities will be non-negative and will not exceed 109. OutputPrint a single integer \u2014 the number of ways you can choose the c prisoners.ExamplesInputCopy4 3 32 3 1 1OutputCopy2InputCopy1 1 12OutputCopy0InputCopy11 4 22 2 0 7 3 2 2 4 9 1 4OutputCopy6"], "Number Circle": ["https://codeforces.com/problemset/problem/1189/B", "B. Number Circletime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given nn numbers a1,a2,\u2026,ana1,a2,\u2026,an. Is it possible to arrange them in a circle in such a way that every number is strictly less than the sum of its neighbors?For example, for the array [1,4,5,6,7,8][1,4,5,6,7,8], the arrangement on the left is valid, while arrangement on the right is not, as 5\u22654+15\u22654+1 and 8>1+68>1+6.  InputThe first line contains a single integer nn (3\u2264n\u22641053\u2264n\u2264105)\u00a0\u2014 the number of numbers.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the numbers. The given numbers are not necessarily distinct (i.e. duplicates are allowed).OutputIf there is no solution, output \"NO\" in the first line. If there is a solution, output \"YES\" in the first line. In the second line output nn numbers\u00a0\u2014 elements of the array in the order they will stay in the circle. The first and the last element you output are considered neighbors in the circle. If there are multiple solutions, output any of them. You can print the circle starting with any element.ExamplesInputCopy3\n2 4 3\nOutputCopyYES\n4 2 3 InputCopy5\n1 2 3 4 4\nOutputCopyYES\n4 4 2 1 3InputCopy3\n13 8 5\nOutputCopyNOInputCopy4\n1 10 100 1000\nOutputCopyNONoteOne of the possible arrangements is shown in the first example: 4<2+34<2+3;2<4+32<4+3;3<4+23<4+2.One of the possible arrangements is shown in the second example.No matter how we arrange 13,8,513,8,5 in a circle in the third example, 1313 will have 88 and 55 as neighbors, but 13\u22658+513\u22658+5. There is no solution in the fourth example."], "Little Pigs and Wolves": ["https://codeforces.com/problemset/problem/116/B", "B. Little Pigs and Wolvestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce upon a time there were several little pigs and several wolves on a two-dimensional grid of size n\u2009\u00d7\u2009m. Each cell in this grid was either empty, containing one little pig, or containing one wolf.A little pig and a wolf are adjacent if the cells that they are located at share a side. The little pigs are afraid of wolves, so there will be at most one wolf adjacent to each little pig. But each wolf may be adjacent to any number of little pigs.They have been living peacefully for several years. But today the wolves got hungry. One by one, each wolf will choose one of the little pigs adjacent to it (if any), and eats the poor little pig. This process is not repeated. That is, each wolf will get to eat at most one little pig. Once a little pig gets eaten, it disappears and cannot be eaten by any other wolf.What is the maximum number of little pigs that may be eaten by the wolves?InputThe first line contains integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200910) which denotes the number of rows and columns in our two-dimensional grid, respectively. Then follow n lines containing m characters each \u2014 that is the grid description. \".\" means that this cell is empty. \"P\" means that this cell contains a little pig. \"W\" means that this cell contains a wolf. It is guaranteed that there will be at most one wolf adjacent to any little pig.OutputPrint a single number \u2014 the maximal number of little pigs that may be eaten by the wolves.ExamplesInputCopy2 3PPWW.POutputCopy2InputCopy3 3P.W.P.W.POutputCopy0NoteIn the first example, one possible scenario in which two little pigs get eaten by the wolves is as follows.   "], "Divine Array": ["https://codeforces.com/problemset/problem/1602/B", "B. Divine Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBlack is gifted with a Divine array aa consisting of nn (1\u2264n\u226420001\u2264n\u22642000) integers. Each position in aa has an initial value. After shouting a curse over the array, it becomes angry and starts an unstoppable transformation.The transformation consists of infinite steps. Array aa changes at the ii-th step in the following way: for every position jj, ajaj becomes equal to the number of occurrences of ajaj in aa before starting this step.Here is an example to help you understand the process better:  Initial array:22 11 11 44 33 11 22After the 11-st step:22 33 33 11 11 33 22After the 22-nd step:22 33 33 22 22 33 22After the 33-rd step:44 33 33 44 44 33 44...... In the initial array, we had two 22-s, three 11-s, only one 44 and only one 33, so after the first step, each element became equal to the number of its occurrences in the initial array: all twos changed to 22, all ones changed to 33, four changed to 11 and three changed to 11.The transformation steps continue forever.You have to process qq queries: in each query, Black is curious to know the value of axax after the kk-th step of transformation.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u226410001\u2264t\u22641000). Description of the test cases follows.The first line of each test case contains an integer nn (1\u2264n\u226420001\u2264n\u22642000)\u00a0\u2014 the size of the array aa.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n)\u00a0\u2014 the initial values of array aa.The third line of each test case contains a single integer qq (1\u2264q\u22641000001\u2264q\u2264100000)\u00a0\u2014 the number of queries.Next qq lines contain the information about queries\u00a0\u2014 one query per line. The ii-th line contains two integers xixi and kiki (1\u2264xi\u2264n1\u2264xi\u2264n; 0\u2264ki\u22641090\u2264ki\u2264109), meaning that Black is asking for the value of axiaxi after the kiki-th step of transformation. ki=0ki=0 means that Black is interested in values of the initial array.It is guaranteed that the sum of nn over all test cases doesn't exceed 20002000 and the sum of qq over all test cases doesn't exceed 100000100000.OutputFor each test case, print qq answers. The ii-th of them should be the value of axiaxi after the kiki-th step of transformation. It can be shown that the answer to each query is unique.ExampleInputCopy2\n7\n2 1 1 4 3 1 2\n4\n3 0\n1 1\n2 2\n6 1\n2\n1 1\n2\n1 0\n2 1000000000\nOutputCopy1\n2\n3\n3\n1\n2\nNoteThe first test case was described ih the statement. It can be seen that:   k1=0k1=0 (initial array): a3=1a3=1;  k2=1k2=1 (after the 11-st step): a1=2a1=2;  k3=2k3=2 (after the 22-nd step): a2=3a2=3;  k4=1k4=1 (after the 11-st step): a6=3a6=3. For the second test case, Initial array:11 11After the 11-st step:22 22After the 22-nd step:22 22......It can be seen that:   k1=0k1=0 (initial array): a1=1a1=1;  k2=1000000000k2=1000000000: a2=2a2=2; "], "Luxurious Houses": ["https://codeforces.com/problemset/problem/581/B", "B. Luxurious Housestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe capital of Berland has n multifloor buildings. The architect who built up the capital was very creative, so all the houses were built in one row.Let's enumerate all the houses from left to right, starting with one. A house is considered to be luxurious if the number of floors in it is strictly greater than in all the houses with larger numbers. In other words, a house is luxurious if the number of floors in it is strictly greater than in all the houses, which are located to the right from it. In this task it is assumed that the heights of floors in the houses are the same.The new architect is interested in n questions, i-th of them is about the following: \"how many floors should be added to the i-th house to make it luxurious?\" (for all i from 1 to n, inclusive). You need to help him cope with this task.Note that all these questions are independent from each other \u2014 the answer to the question for house i does not affect other answers (i.e., the floors to the houses are not actually added).InputThe first line of the input contains a single number n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of houses in the capital of Berland.The second line contains n space-separated positive integers hi (1\u2009\u2264\u2009hi\u2009\u2264\u2009109), where hi equals the number of floors in the i-th house. OutputPrint n integers a1,\u2009a2,\u2009...,\u2009an, where number ai is the number of floors that need to be added to the house number i to make it luxurious. If the house is already luxurious and nothing needs to be added to it, then ai should be equal to zero.All houses are numbered from left to right, starting from one.ExamplesInputCopy51 2 3 1 2OutputCopy3 2 0 2 0 InputCopy43 2 1 4OutputCopy2 3 4 0 "], "Petya and Staircases": ["https://codeforces.com/problemset/problem/362/B", "B. Petya and Staircasestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle boy Petya loves stairs very much. But he is bored from simple going up and down them \u2014 he loves jumping over several stairs at a time. As he stands on some stair, he can either jump to the next one or jump over one or two stairs at a time. But some stairs are too dirty and Petya doesn't want to step on them.Now Petya is on the first stair of the staircase, consisting of n stairs. He also knows the numbers of the dirty stairs of this staircase. Help Petya find out if he can jump through the entire staircase and reach the last stair number n without touching a dirty stair once.One has to note that anyway Petya should step on the first and last stairs, so if the first or the last stair is dirty, then Petya cannot choose a path with clean steps only.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009109, 0\u2009\u2264\u2009m\u2009\u2264\u20093000) \u2014 the number of stairs in the staircase and the number of dirty stairs, correspondingly. The second line contains m different space-separated integers d1,\u2009d2,\u2009...,\u2009dm (1\u2009\u2264\u2009di\u2009\u2264\u2009n) \u2014 the numbers of the dirty stairs (in an arbitrary order).OutputPrint \"YES\" if Petya can reach stair number n, stepping only on the clean stairs. Otherwise print \"NO\".ExamplesInputCopy10 52 4 8 3 6OutputCopyNOInputCopy10 52 4 5 7 9OutputCopyYES"], "Histogram Ugliness": ["https://codeforces.com/problemset/problem/1534/B", "B. Histogram Uglinesstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Dormi received a histogram with nn bars of height a1,a2,\u2026,ana1,a2,\u2026,an for Christmas. However, the more he played with his new histogram, the more he realized its imperfections, so today he wanted to modify it to his liking.To modify the histogram, Little Dormi is able to perform the following operation an arbitrary number of times: Select an index ii (1\u2264i\u2264n1\u2264i\u2264n) where ai>0ai>0, and assign ai:=ai\u22121ai:=ai\u22121.Little Dormi defines the ugliness score of his histogram (after performing some number of operations) as the sum of the vertical length of its outline and the number of operations he performed on it. And to make the histogram as perfect as possible, he would like to minimize the ugliness score after modifying it with some number of operations.However, as his histogram is very large, Little Dormi is having trouble minimizing the ugliness score, so as Little Dormi's older brother, help him find the minimal ugliness.Consider the following example where the histogram has 44 columns of heights 4,8,9,64,8,9,6:  The blue region represents the histogram, and the red lines represent the vertical portion of the outline. Currently, the vertical length of the outline is 4+4+1+3+6=184+4+1+3+6=18, so if Little Dormi does not modify the histogram at all, the ugliness would be 1818.However, Little Dormi can apply the operation once on column 22 and twice on column 33, resulting in a histogram with heights 4,7,7,64,7,7,6:  Now, as the total vertical length of the outline (red lines) is 4+3+1+6=144+3+1+6=14, the ugliness is 14+3=1714+3=17 dollars. It can be proven that this is optimal.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104). Description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22644\u22c51051\u2264n\u22644\u22c5105).The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases does not exceed 4\u22c51054\u22c5105.OutputFor each test case output one integer, the minimal ugliness Little Dormi can achieve with the histogram in that test case.ExampleInputCopy2\n4\n4 8 9 6\n6\n2 1 7 4 0 0\nOutputCopy17\n12\nNoteExample 11 is the example described in the statement.The initial histogram for example 22 is given below:  The ugliness is currently 2+1+6+3+4=162+1+6+3+4=16.By applying the operation once on column 11, six times on column 33, and three times on column 44, we can end up with a histogram with heights 1,1,1,1,0,01,1,1,1,0,0:  The vertical length of the outline is now 1+1=21+1=2 and Little Dormi made 1+6+3=101+6+3=10 operations, so the final ugliness is 2+10=122+10=12, which can be proven to be optimal."], "Non-Coprime Partition": ["https://codeforces.com/problemset/problem/1038/B", "B. Non-Coprime Partitiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputFind out if it is possible to partition the first nn positive integers into two non-empty disjoint sets S1S1 and S2S2 such that:gcd(sum(S1),sum(S2))>1gcd(sum(S1),sum(S2))>1 Here sum(S)sum(S) denotes the sum of all elements present in set SS and gcdgcd means thegreatest common divisor.Every integer number from 11 to nn should be present in exactly one of S1S1 or S2S2.InputThe only line of the input contains a single integer nn (1\u2264n\u2264450001\u2264n\u226445000)OutputIf such partition doesn't exist, print \"No\" (quotes for clarity).Otherwise, print \"Yes\" (quotes for clarity), followed by two lines, describing S1S1 and S2S2 respectively.Each set description starts with the set size, followed by the elements of the set in any order. Each set must be non-empty.If there are multiple possible partitions\u00a0\u2014 print any of them.ExamplesInputCopy1OutputCopyNoInputCopy3OutputCopyYes1 22 1 3 NoteIn the first example, there is no way to partition a single number into two non-empty sets, hence the answer is \"No\".In the second example, the sums of the sets are 22 and 44 respectively. The gcd(2,4)=2>1gcd(2,4)=2>1, hence that is one of the possible answers."], "Slightly Decreasing Permutations": ["https://codeforces.com/problemset/problem/285/A", "A. Slightly Decreasing Permutationstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPermutation p is an ordered set of integers p1,\u2009\u2009p2,\u2009\u2009...,\u2009\u2009pn, consisting of n distinct positive integers, each of them doesn't exceed n. We'll denote the i-th element of permutation p as pi. We'll call number n the size or the length of permutation p1,\u2009\u2009p2,\u2009\u2009...,\u2009\u2009pn.The decreasing coefficient of permutation p1,\u2009p2,\u2009...,\u2009pn is the number of such i (1\u2009\u2264\u2009i\u2009<\u2009n), that pi\u2009>\u2009pi\u2009+\u20091.You have numbers n and k. Your task is to print the permutation of length n with decreasing coefficient k.InputThe single line contains two space-separated integers: n,\u2009k (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009k\u2009<\u2009n) \u2014 the permutation length and the decreasing coefficient.OutputIn a single line print n space-separated integers: p1,\u2009p2,\u2009...,\u2009pn \u2014 the permutation of length n with decreasing coefficient k. If there are several permutations that meet this condition, print any of them. It is guaranteed that the permutation with the sought parameters exists.ExamplesInputCopy5 2OutputCopy1 5 2 4 3InputCopy3 0OutputCopy1 2 3InputCopy3 2OutputCopy3 2 1"], "Detective Task": ["https://codeforces.com/problemset/problem/1675/C", "C. Detective Tasktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp bought a new expensive painting and decided to show it to his nn friends. He hung it in his room. nn of his friends entered and exited there one by one. At one moment there was no more than one person in the room. In other words, the first friend entered and left first, then the second, and so on.It is known that at the beginning (before visiting friends) a picture hung in the room. At the end (after the nn-th friend) it turned out that it disappeared. At what exact moment it disappeared\u00a0\u2014 there is no information.Polycarp asked his friends one by one. He asked each one if there was a picture when he entered the room. Each friend answered one of three:  no (response encoded with 0);  yes (response encoded as 1);  can't remember (response is encoded with ?). Everyone except the thief either doesn't remember or told the truth. The thief can say anything (any of the three options).Polycarp cannot understand who the thief is. He asks you to find out the number of those who can be considered a thief according to the answers.InputThe first number tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases in the test.The following is a description of test cases.The first line of each test case contains one string ss (length does not exceed 2\u22c51052\u22c5105)\u00a0\u2014 a description of the friends' answers, where sisi indicates the answer of the ii-th friend. Each character in the string is either 0 or 1 or ?.The given regularity is described in the actual situation. In particular, on the basis of answers, at least one friend can be suspected of stealing a painting.It is guaranteed that the sum of string lengths over the entire input data set does not exceed 2\u22c51052\u22c5105.OutputOutput one positive (strictly more zero) number\u00a0\u2013 the number of people who could steal the picture based on the data shown.ExampleInputCopy8\n0\n1\n1110000\n?????\n1?1??0?0\n0?0???\n??11\n??0??\nOutputCopy1\n1\n2\n5\n4\n1\n1\n3\nNoteIn the first case, the answer is 11 since we had exactly 11 friend.The second case is similar to the first.In the third case, the suspects are the third and fourth friends (we count from one). It can be shown that no one else could be the thief.In the fourth case, we know absolutely nothing, so we suspect everyone."], "Repainting Street": ["https://codeforces.com/problemset/problem/1415/B", "B. Repainting Streettime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a street with nn houses in a line, numbered from 11 to nn. The house ii is initially painted in color cici. The street is considered beautiful if all houses are painted in the same color. Tom, the painter, is in charge of making the street beautiful. Tom's painting capacity is defined by an integer, let's call it kk.On one day, Tom can do the following repainting process that consists of two steps:   He chooses two integers ll and rr such that 1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n and r\u2212l+1=kr\u2212l+1=k.  For each house ii such that l\u2264i\u2264rl\u2264i\u2264r, he can either repaint it with any color he wants, or ignore it and let it keep its current color. Note that in the same day Tom can use different colors to repaint different houses.Tom wants to know the minimum number of days needed to repaint the street so that it becomes beautiful.InputThe first line of input contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104), the number of test cases. Description of test cases follows.In the first line of a test case description there are two integers nn and kk (1\u2264k\u2264n\u22641051\u2264k\u2264n\u2264105).The second line contains nn space-separated integers. The ii-th of these integers represents cici (1\u2264ci\u22641001\u2264ci\u2264100), the color which house ii is initially painted in.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputPrint tt lines, each with one integer: the minimum number of days Tom needs to make the street beautiful for each test case. ExampleInputCopy3\n10 2\n1 1 2 2 1 1 2 2 2 1\n7 1\n1 2 3 4 5 6 7\n10 3\n1 3 3 3 3 1 2 1 3 3\nOutputCopy3\n6\n2\nNoteIn the first test case Tom should paint houses 1 and 2 in the first day in color 2, houses 5 and 6 in the second day in color 2, and the last house in color 2 on the third day.In the second test case Tom can, for example, spend 6 days to paint houses 1, 2, 4, 5, 6, 7 in color 3.In the third test case Tom can paint the first house in the first day and houses 6, 7, and 8 in the second day in color 3."], "Lord of the Values": ["https://codeforces.com/problemset/problem/1523/B", "B. Lord of the Valuestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard output  While trading on his favorite exchange trader William realized that he found a vulnerability. Using this vulnerability he could change the values of certain internal variables to his advantage. To play around he decided to change the values of all internal variables from a1,a2,\u2026,ana1,a2,\u2026,an to \u2212a1,\u2212a2,\u2026,\u2212an\u2212a1,\u2212a2,\u2026,\u2212an. For some unknown reason, the number of service variables is always an even number.William understands that with his every action he attracts more and more attention from the exchange's security team, so the number of his actions must not exceed 50005000 and after every operation no variable can have an absolute value greater than 10181018. William can perform actions of two types for two chosen variables with indices ii and jj, where i<ji<j:  Perform assignment ai=ai+ajai=ai+aj  Perform assignment aj=aj\u2212aiaj=aj\u2212ai  William wants you to develop a strategy that will get all the internal variables to the desired values.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u2264201\u2264t\u226420). Description of the test cases follows.The first line of each test case contains a single even integer nn (2\u2264n\u22641032\u2264n\u2264103), which is the number of internal variables.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264109)(1\u2264ai\u2264109), which are initial values of internal variables.OutputFor each test case print the answer in the following format:The first line of output must contain the total number of actions kk, which the strategy will perform. Note that you do not have to minimize kk. The inequality k\u22645000k\u22645000 must be satisfied. Each of the next kk lines must contain actions formatted as \"type i j\", where \"type\" is equal to \"1\" if the strategy needs to perform an assignment of the first type and \"2\" if the strategy needs to perform an assignment of the second type. Note that i<ji<j should hold.We can show that an answer always exists.ExampleInputCopy2\n4\n1 1 1 1\n4\n4 3 1 2\nOutputCopy8\n2 1 2\n2 1 2\n2 1 3\n2 1 3\n2 1 4\n2 1 4\n1 1 2\n1 1 2\n8\n2 1 4\n1 2 4\n1 2 4\n1 2 4\n1 3 4\n1 1 2\n1 1 2\n1 1 4\nNoteFor the first sample test case one possible sequence of operations is as follows:  \"2 1 2\". Values of variables after performing the operation: [1, 0, 1, 1]  \"2 1 2\". Values of variables after performing the operation: [1, -1, 1, 1]  \"2 1 3\". Values of variables after performing the operation: [1, -1, 0, 1]  \"2 1 3\". Values of variables after performing the operation: [1, -1, -1, 1]  \"2 1 4\". Values of variables after performing the operation: [1, -1, -1, 0]  \"2 1 4\". Values of variables after performing the operation: [1, -1, -1, -1]  \"1 1 2\". Values of variables after performing the operation: [0, -1, -1, -1]  \"1 1 2\". Values of variables after performing the operation: [-1, -1, -1, -1] For the second sample test case one possible sequence of operations is as follows:  \"2 1 4\". Values of variables after performing the operation: [4, 3, 1, -2]  \"1 2 4\". Values of variables after performing the operation: [4, 1, 1, -2]  \"1 2 4\". Values of variables after performing the operation: [4, -1, 1, -2]  \"1 2 4\". Values of variables after performing the operation: [4, -3, 1, -2]  \"1 3 4\". Values of variables after performing the operation: [4, -3, -1, -2]  \"1 1 2\". Values of variables after performing the operation: [1, -3, -1, -2]  \"1 1 2\". Values of variables after performing the operation: [-2, -3, -1, -2]  \"1 1 4\". Values of variables after performing the operation: [-4, -3, -1, -2] "], "Passwords": ["https://codeforces.com/problemset/problem/721/B", "B. Passwordstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVanya is managed to enter his favourite site Codehorses. Vanya uses n distinct passwords for sites at all, however he can't remember which one exactly he specified during Codehorses registration.Vanya will enter passwords in order of non-decreasing their lengths, and he will enter passwords of same length in arbitrary order. Just when Vanya will have entered the correct password, he is immediately authorized on the site. Vanya will not enter any password twice.Entering any passwords takes one second for Vanya. But if Vanya will enter wrong password k times, then he is able to make the next try only 5 seconds after that. Vanya makes each try immediately, that is, at each moment when Vanya is able to enter password, he is doing that.Determine how many seconds will Vanya need to enter Codehorses in the best case for him (if he spends minimum possible number of second) and in the worst case (if he spends maximum possible amount of seconds).InputThe first line of the input contains two integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009100)\u00a0\u2014 the number of Vanya's passwords and the number of failed tries, after which the access to the site is blocked for 5 seconds.The next n lines contains passwords, one per line\u00a0\u2014 pairwise distinct non-empty strings consisting of latin letters and digits. Each password length does not exceed 100 characters.The last line of the input contains the Vanya's Codehorses password. It is guaranteed that the Vanya's Codehorses password is equal to some of his n passwords.OutputPrint two integers\u00a0\u2014 time (in seconds), Vanya needs to be authorized to Codehorses in the best case for him and in the worst case respectively.ExamplesInputCopy5 2cbaabcbb1abCABCabcOutputCopy1 15InputCopy4 10011221222OutputCopy3 4NoteConsider the first sample case. As soon as all passwords have the same length, Vanya can enter the right password at the first try as well as at the last try. If he enters it at the first try, he spends exactly 1 second. Thus in the best case the answer is 1. If, at the other hand, he enters it at the last try, he enters another 4 passwords before. He spends 2 seconds to enter first 2 passwords, then he waits 5 seconds as soon as he made 2 wrong tries. Then he spends 2 more seconds to enter 2 wrong passwords, again waits 5 seconds and, finally, enters the correct password spending 1 more second. In summary in the worst case he is able to be authorized in 15 seconds.Consider the second sample case. There is no way of entering passwords and get the access to the site blocked. As soon as the required password has length of 2, Vanya enters all passwords of length 1 anyway, spending 2 seconds for that. Then, in the best case, he immediately enters the correct password and the answer for the best case is 3, but in the worst case he enters wrong password of length 2 and only then the right one, spending 4 seconds at all."], "A New Technique": ["https://codeforces.com/problemset/problem/1413/B", "B. A New Techniquetime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputAll techniques in the ninja world consist of hand seals. At the moment Naruto is learning a new technique, which consists of n\u22c5mn\u22c5m different seals, denoted by distinct numbers. All of them were written in an n\u00d7mn\u00d7m table.The table is lost now. Naruto managed to remember elements of each row from left to right, and elements of each column from top to bottom, but he doesn't remember the order of rows and columns. Please restore the table consistent with this data so that Naruto will be able to learn the new technique.InputThe first line of the input contains the only integer tt (1\u2264t\u22641000001\u2264t\u2264100000) denoting the number of test cases. Their descriptions follow.The first line of each test case description consists of two space-separated integers nn and mm (1\u2264n,m\u22645001\u2264n,m\u2264500) standing for the number of rows and columns in the table, respectively. All hand seals are encoded by the positive integers from 11 to n\u22c5mn\u22c5m.The following nn lines contain mm space separated integers each, denoting elements of an arbitrary row in the table left to right.The following mm lines contain nn space separated integers each, denoting elements of an arbitrary column in the table top to bottom.Sum of nmnm over all test cases does not exceed 250000250000. It is guaranteed that each row occurs in the input exactly once, as well as each column. It is also guaranteed that each number from 11 to nmnm occurs exactly once in all rows, as well as in all columns. Finally, it is guaranteed that a table consistent with the input exists.OutputFor each test case, output nn lines with mm space-separated integers each, denoting the restored table. One can show that the answer is always unique.ExampleInputCopy2\n2 3\n6 5 4\n1 2 3\n1 6\n2 5\n3 4\n3 1\n2\n3\n1\n3 1 2\nOutputCopy1 2 3 \n6 5 4 \n3 \n1 \n2 \nNoteConsider the first test case. The matrix is 2\u00d732\u00d73. You are given the rows and columns in arbitrary order.One of the rows is [6,5,4][6,5,4]. One of the rows is [1,2,3][1,2,3].One of the columns is [1,6][1,6]. One of the columns is [2,5][2,5]. One of the columns is [3,4][3,4].You are to reconstruct the matrix. The answer is given in the output."], "Unlucky Ticket": ["https://codeforces.com/problemset/problem/160/B", "B. Unlucky Tickettime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEach of you probably has your personal experience of riding public transportation and buying tickets. After a person buys a ticket (which traditionally has an even number of digits), he usually checks whether the ticket is lucky. Let us remind you that a ticket is lucky if the sum of digits in its first half matches the sum of digits in its second half.But of course, not every ticket can be lucky. Far from it! Moreover, sometimes one look at a ticket can be enough to say right away that the ticket is not lucky. So, let's consider the following unluckiness criterion that can definitely determine an unlucky ticket. We'll say that a ticket is definitely unlucky if each digit from the first half corresponds to some digit from the second half so that each digit from the first half is strictly less than the corresponding digit from the second one or each digit from the first half is strictly more than the corresponding digit from the second one. Each digit should be used exactly once in the comparisons. In other words, there is such bijective correspondence between the digits of the first and the second half of the ticket, that either each digit of the first half turns out strictly less than the corresponding digit of the second half or each digit of the first half turns out strictly more than the corresponding digit from the second half.For example, ticket 2421 meets the following unluckiness criterion and will not be considered lucky (the sought correspondence is 2\u2009>\u20091 and 4\u2009>\u20092), ticket 0135 also meets the criterion (the sought correspondence is 0\u2009<\u20093 and 1\u2009<\u20095), and ticket 3754 does not meet the criterion. You have a ticket in your hands, it contains 2n digits. Your task is to check whether it meets the unluckiness criterion.InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100). The second line contains a string that consists of 2n digits and defines your ticket.OutputIn the first line print \"YES\" if the ticket meets the unluckiness criterion. Otherwise, print \"NO\" (without the quotes).ExamplesInputCopy22421OutputCopyYESInputCopy20135OutputCopyYESInputCopy23754OutputCopyNO"], "Godsend": ["https://codeforces.com/problemset/problem/841/B", "B. Godsendtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLeha somehow found an array consisting of n integers. Looking at it, he came up with a task. Two players play the game on the array. Players move one by one. The first player can choose for his move a subsegment of non-zero length with an odd sum of numbers and remove it from the array, after that the remaining parts are glued together into one array and the game continues. The second player can choose a subsegment of non-zero length with an even sum and remove it. Loses the one who can not make a move. Who will win if both play optimally?InputFirst line of input data contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009106) \u2014 length of the array.Next line contains n integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009109).OutputOutput answer in single line. \"First\", if first player wins, and \"Second\" otherwise (without quotes).ExamplesInputCopy41 3 2 3OutputCopyFirstInputCopy22 2OutputCopySecondNoteIn first sample first player remove whole array in one move and win.In second sample first player can't make a move and lose."], "Vitaliy and Pie": ["https://codeforces.com/problemset/problem/525/A", "A. Vitaliy and Pietime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter a hard day Vitaly got very hungry and he wants to eat his favorite potato pie. But it's not that simple. Vitaly is in the first room of the house with n room located in a line and numbered starting from one from left to right. You can go from the first room to the second room, from the second room to the third room and so on \u2014 you can go from the (n\u2009-\u20091)-th room to the n-th room. Thus, you can go to room x only from room x\u2009-\u20091.The potato pie is located in the n-th room and Vitaly needs to go there. Each pair of consecutive rooms has a door between them. In order to go to room x from room x\u2009-\u20091, you need to open the door between the rooms with the corresponding key. In total the house has several types of doors (represented by uppercase Latin letters) and several types of keys (represented by lowercase Latin letters). The key of type t can open the door of type T if and only if t and T are the same letter, written in different cases. For example, key f can open door F.Each of the first n\u2009-\u20091 rooms contains exactly one key of some type that Vitaly can use to get to next rooms. Once the door is open with some key, Vitaly won't get the key from the keyhole but he will immediately run into the next room. In other words, each key can open no more than one door.Vitaly realizes that he may end up in some room without the key that opens the door to the next room. Before the start his run for the potato pie Vitaly can buy any number of keys of any type that is guaranteed to get to room n.Given the plan of the house, Vitaly wants to know what is the minimum number of keys he needs to buy to surely get to the room n, which has a delicious potato pie. Write a program that will help Vitaly find out this number.InputThe first line of the input contains a positive integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105)\u00a0\u2014\u00a0the number of rooms in the house.The second line of the input contains string s of length 2\u00b7n\u2009-\u20092. Let's number the elements of the string from left to right, starting from one. The odd positions in the given string s contain lowercase Latin letters\u00a0\u2014\u00a0the types of the keys that lie in the corresponding rooms. Thus, each odd position i of the given string s contains a lowercase Latin letter \u2014 the type of the key that lies in room number (i\u2009+\u20091)\u2009/\u20092.The even positions in the given string contain uppercase Latin letters \u2014 the types of doors between the rooms. Thus, each even position i of the given string s contains an uppercase letter \u2014 the type of the door that leads from room i\u2009/\u20092 to room i\u2009/\u20092\u2009+\u20091.OutputPrint the only integer \u2014 the minimum number of keys that Vitaly needs to buy to surely get from room one to room n.ExamplesInputCopy3aAbBOutputCopy0InputCopy4aBaCaBOutputCopy3InputCopy5xYyXzZaZOutputCopy2"], "Exam": ["https://codeforces.com/problemset/problem/534/A", "A. Examtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn exam for n students will take place in a long and narrow room, so the students will sit in a line in some order. The teacher suspects that students with adjacent numbers (i and i\u2009+\u20091) always studied side by side and became friends and if they take an exam sitting next to each other, they will help each other for sure.Your task is to choose the maximum number of students and make such an arrangement of students in the room that no two students with adjacent numbers sit side by side.InputA single line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095000) \u2014 the number of students at an exam.OutputIn the first line print integer k \u2014 the maximum number of students who can be seated so that no two students with adjacent numbers sit next to each other.In the second line print k distinct integers a1,\u2009a2,\u2009...,\u2009ak (1\u2009\u2264\u2009ai\u2009\u2264\u2009n), where ai is the number of the student on the i-th position. The students on adjacent positions mustn't have adjacent numbers. Formally, the following should be true: |ai\u2009-\u2009ai\u2009+\u20091|\u2009\u2260\u20091 for all i from 1 to k\u2009-\u20091.If there are several possible answers, output any of them.ExamplesInputCopy6OutputCopy61 5 3 6 2 4InputCopy3OutputCopy21 3"], "Benches": ["https://codeforces.com/problemset/problem/630/H", "H. Benchestime limit per test0.5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputThe city park of IT City contains n east to west paths and n north to south paths. Each east to west path crosses each north to south path, so there are n2 intersections.The city funded purchase of five benches. To make it seems that there are many benches it was decided to place them on as many paths as possible. Obviously this requirement is satisfied by the following scheme: each bench is placed on a cross of paths and each path contains not more than one bench.Help the park administration count the number of ways to place the benches.InputThe only line of the input contains one integer n (5\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of east to west paths and north to south paths.OutputOutput one integer \u2014 the number of ways to place the benches.ExamplesInputCopy5OutputCopy120"], "The Eternal Immortality": ["https://codeforces.com/problemset/problem/869/B", "B. The Eternal Immortalitytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputEven if the world is full of counterfeits, I still regard it as wonderful.Pile up herbs and incense, and arise again from the flames and ashes of its predecessor\u00a0\u2014 as is known to many, the phoenix does it like this.The phoenix has a rather long lifespan, and reincarnates itself once every a! years. Here a! denotes the factorial of integer a, that is, a!\u2009=\u20091\u2009\u00d7\u20092\u2009\u00d7\u2009...\u2009\u00d7\u2009a. Specifically, 0!\u2009=\u20091.Koyomi doesn't care much about this, but before he gets into another mess with oddities, he is interested in the number of times the phoenix will reincarnate in a timespan of b! years, that is, . Note that when b\u2009\u2265\u2009a this value is always integer.As the answer can be quite large, it would be enough for Koyomi just to know the last digit of the answer in decimal representation. And you're here to provide Koyomi with this knowledge.InputThe first and only line of input contains two space-separated integers a and b (0\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u20091018).OutputOutput one line containing a single decimal digit\u00a0\u2014 the last digit of the value that interests Koyomi.ExamplesInputCopy2 4OutputCopy2InputCopy0 10OutputCopy0InputCopy107 109OutputCopy2NoteIn the first example, the last digit of  is 2;In the second example, the last digit of  is 0;In the third example, the last digit of  is 2."], "Fridge Lockers": ["https://codeforces.com/problemset/problem/1255/B", "B. Fridge Lockerstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputHanh lives in a shared apartment. There are nn people (including Hanh) living there, each has a private fridge. nn fridges are secured by several steel chains. Each steel chain connects two different fridges and is protected by a digital lock. The owner of a fridge knows passcodes of all chains connected to it. A fridge can be open only if all chains connected to it are unlocked. For example, if a fridge has no chains connected to it at all, then any of nn people can open it.  For exampe, in the picture there are n=4n=4 people and 55 chains. The first person knows passcodes of two chains: 1\u221241\u22124 and 1\u221221\u22122. The fridge 11 can be open by its owner (the person 11), also two people 22 and 44 (acting together) can open it. The weights of these fridges are a1,a2,\u2026,ana1,a2,\u2026,an. To make a steel chain connecting fridges uu and vv, you have to pay au+avau+av dollars. Note that the landlord allows you to create multiple chains connecting the same pair of fridges. Hanh's apartment landlord asks you to create exactly mm steel chains so that all fridges are private. A fridge is private if and only if, among nn people living in the apartment, only the owner can open it (i.e. no other person acting alone can do it). In other words, the fridge ii is not private if there exists the person jj (i\u2260ji\u2260j) that the person jj can open the fridge ii.For example, in the picture all the fridges are private. On the other hand, if there are n=2n=2 fridges and only one chain (which connects them) then both fridges are not private (both fridges can be open not only by its owner but also by another person).Of course, the landlord wants to minimize the total cost of all steel chains to fulfill his request. Determine whether there exists any way to make exactly mm chains, and if yes, output any solution that minimizes the total cost. InputEach test contains multiple test cases. The first line contains the number of test cases TT (1\u2264T\u2264101\u2264T\u226410). Then the descriptions of the test cases follow.The first line of each test case contains two integers nn, mm (2\u2264n\u226410002\u2264n\u22641000, 1\u2264m\u2264n1\u2264m\u2264n)\u00a0\u2014 the number of people living in Hanh's apartment and the number of steel chains that the landlord requires, respectively.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641040\u2264ai\u2264104)\u00a0\u2014 weights of all fridges.OutputFor each test case:  If there is no solution, print a single integer \u22121\u22121.  Otherwise, print a single integer cc\u00a0\u2014 the minimum total cost. The ii-th of the next mm lines contains two integers uiui and vivi (1\u2264ui,vi\u2264n1\u2264ui,vi\u2264n, ui\u2260viui\u2260vi), meaning that the ii-th steel chain connects fridges uiui and vivi. An arbitrary number of chains can be between a pair of fridges. If there are multiple answers, print any.ExampleInputCopy3\n4 4\n1 1 1 1\n3 1\n1 2 3\n3 3\n1 2 3\nOutputCopy8\n1 2\n4 3\n3 2\n4 1\n-1\n12\n3 2\n1 2\n3 1"], "Letter": ["https://codeforces.com/problemset/problem/43/B", "B. Lettertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya decided to write an anonymous letter cutting the letters out of a newspaper heading. He knows heading s1 and text s2 that he wants to send. Vasya can use every single heading letter no more than once. Vasya doesn't have to cut the spaces out of the heading \u2014 he just leaves some blank space to mark them. Help him; find out if he will manage to compose the needed text.InputThe first line contains a newspaper heading s1. The second line contains the letter text s2. s1 \u0438 s2 are non-empty lines consisting of spaces, uppercase and lowercase Latin letters, whose lengths do not exceed 200 symbols. The uppercase and lowercase letters should be differentiated. Vasya does not cut spaces out of the heading.OutputIf Vasya can write the given anonymous letter, print YES, otherwise print NOExamplesInputCopyInstead of dogging Your footsteps it disappears but you dont notice anythingwhere is your dogOutputCopyNOInputCopyInstead of dogging Your footsteps it disappears but you dont notice anythingYour dog is upstearsOutputCopyYESInputCopyInstead of dogging your footsteps it disappears but you dont notice anythingYour dog is upstearsOutputCopyNOInputCopyabcdefg hijkk j i h g f e d c b aOutputCopyYES"], "Vasya and Cornfield": ["https://codeforces.com/problemset/problem/1030/B", "B. Vasya and Cornfieldtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya owns a cornfield which can be defined with two integers nn and dd. The cornfield can be represented as rectangle with vertices having Cartesian coordinates (0,d),(d,0),(n,n\u2212d)(0,d),(d,0),(n,n\u2212d) and (n\u2212d,n)(n\u2212d,n).  An example of a cornfield with n=7n=7 and d=2d=2. Vasya also knows that there are mm grasshoppers near the field (maybe even inside it). The ii-th grasshopper is at the point (xi,yi)(xi,yi). Vasya does not like when grasshoppers eat his corn, so for each grasshopper he wants to know whether its position is inside the cornfield (including the border) or outside.Help Vasya! For each grasshopper determine if it is inside the field (including the border).InputThe first line contains two integers nn and dd (1\u2264d<n\u22641001\u2264d<n\u2264100).The second line contains a single integer mm (1\u2264m\u22641001\u2264m\u2264100) \u2014 the number of grasshoppers.The ii-th of the next mm lines contains two integers xixi and yiyi (0\u2264xi,yi\u2264n0\u2264xi,yi\u2264n) \u2014 position of the ii-th grasshopper.OutputPrint mm lines. The ii-th line should contain \"YES\" if the position of the ii-th grasshopper lies inside or on the border of the cornfield. Otherwise the ii-th line should contain \"NO\".You can print each letter in any case (upper or lower).ExamplesInputCopy7 242 44 16 34 5OutputCopyYESNONOYESInputCopy8 744 42 88 16 1OutputCopyYESNOYESYESNoteThe cornfield from the first example is pictured above. Grasshoppers with indices 11 (coordinates (2,4)(2,4)) and 44 (coordinates (4,5)(4,5)) are inside the cornfield.The cornfield from the second example is pictured below. Grasshoppers with indices 11 (coordinates (4,4)(4,4)), 33 (coordinates (8,1)(8,1)) and 44 (coordinates (6,1)(6,1)) are inside the cornfield.   "], "Knights": ["https://codeforces.com/problemset/problem/1221/B", "B. Knightstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a chess board with nn rows and nn columns. Initially all cells of the board are empty, and you have to put a white or a black knight into each cell of the board.A knight is a chess piece that can attack a piece in cell (x2x2, y2y2) from the cell (x1x1, y1y1) if one of the following conditions is met:  |x1\u2212x2|=2|x1\u2212x2|=2 and |y1\u2212y2|=1|y1\u2212y2|=1, or  |x1\u2212x2|=1|x1\u2212x2|=1 and |y1\u2212y2|=2|y1\u2212y2|=2. Here are some examples of which cells knight can attack. In each of the following pictures, if the knight is currently in the blue cell, it can attack all red cells (and only them).  A duel of knights is a pair of knights of different colors such that these knights attack each other. You have to put a knight (a white one or a black one) into each cell in such a way that the number of duels is maximum possible.InputThe first line contains one integer nn (3\u2264n\u22641003\u2264n\u2264100) \u2014 the number of rows (and columns) in the board.OutputPrint nn lines with nn characters in each line. The jj-th character in the ii-th line should be W, if the cell (ii, jj) contains a white knight, or B, if it contains a black knight. The number of duels should be maximum possible. If there are multiple optimal answers, print any of them.ExampleInputCopy3\nOutputCopyWBW\nBBB\nWBW\nNoteIn the first example, there are 88 duels:  the white knight in (11, 11) attacks the black knight in (33, 22);  the white knight in (11, 11) attacks the black knight in (22, 33);  the white knight in (11, 33) attacks the black knight in (33, 22);  the white knight in (11, 33) attacks the black knight in (22, 11);  the white knight in (33, 11) attacks the black knight in (11, 22);  the white knight in (33, 11) attacks the black knight in (22, 33);  the white knight in (33, 33) attacks the black knight in (11, 22);  the white knight in (33, 33) attacks the black knight in (22, 11). "], "All the Vowels Please": ["https://codeforces.com/problemset/problem/1166/B", "B. All the Vowels Pleasetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTom loves vowels, and he likes long words with many vowels. His favorite words are vowelly words. We say a word of length kk is vowelly if there are positive integers nn and mm such that n\u22c5m=kn\u22c5m=k and when the word is written by using nn rows and mm columns (the first row is filled first, then the second and so on, with each row filled from left to right), every vowel of the English alphabet appears at least once in every row and every column.You are given an integer kk and you must either print a vowelly word of length kk or print \u22121\u22121 if no such word exists.In this problem the vowels of the English alphabet are 'a', 'e', 'i', 'o' ,'u'.InputInput consists of a single line containing the integer kk (1\u2264k\u22641041\u2264k\u2264104)\u00a0\u2014 the required length.OutputThe output must consist of a single line, consisting of a vowelly word of length kk consisting of lowercase English letters if it exists or \u22121\u22121 if it does not.If there are multiple possible words, you may output any of them.ExamplesInputCopy7\nOutputCopy-1\nInputCopy36\nOutputCopyagoeuioaeiruuimaeoieauoweouoiaouimaeNoteIn the second example, the word \"agoeuioaeiruuimaeoieauoweouoiaouimae\" can be arranged into the following 6\u00d766\u00d76 grid:  It is easy to verify that every row and every column contain all the vowels."], "High School: Become Human": ["https://codeforces.com/problemset/problem/987/B", "B. High School: Become Humantime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYear 2118. Androids are in mass production for decades now, and they do all the work for humans. But androids have to go to school to be able to solve creative tasks. Just like humans before.It turns out that high school struggles are not gone. If someone is not like others, he is bullied. Vasya-8800 is an economy-class android which is produced by a little-known company. His design is not perfect, his characteristics also could be better. So he is bullied by other androids.One of the popular pranks on Vasya is to force him to compare xyxy with yxyx. Other androids can do it in milliseconds while Vasya's memory is too small to store such big numbers.Please help Vasya! Write a fast program to compare xyxy with yxyx for Vasya, maybe then other androids will respect him.InputOn the only line of input there are two integers xx and yy (1\u2264x,y\u22641091\u2264x,y\u2264109).OutputIf xy<yxxy<yx, then print '<' (without quotes). If xy>yxxy>yx, then print '>' (without quotes). If xy=yxxy=yx, then print '=' (without quotes).ExamplesInputCopy5 8OutputCopy>InputCopy10 3OutputCopy<InputCopy6 6OutputCopy=NoteIn the first example 58=5\u22c55\u22c55\u22c55\u22c55\u22c55\u22c55\u22c55=39062558=5\u22c55\u22c55\u22c55\u22c55\u22c55\u22c55\u22c55=390625, and 85=8\u22c58\u22c58\u22c58\u22c58=3276885=8\u22c58\u22c58\u22c58\u22c58=32768. So you should print '>'.In the second example 103=1000<310=59049103=1000<310=59049.In the third example 66=46656=6666=46656=66."], "Equidistant String": ["https://codeforces.com/problemset/problem/545/B", "B. Equidistant Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Susie loves strings. Today she calculates distances between them. As Susie is a small girl after all, her strings contain only digits zero and one. She uses the definition of Hamming distance:We will define the distance between two strings s and t of the same length consisting of digits zero and one as the number of positions i, such that si isn't equal to ti. As besides everything else Susie loves symmetry, she wants to find for two strings s and t of length n such string p of length n, that the distance from p to s was equal to the distance from p to t.It's time for Susie to go to bed, help her find such string p or state that it is impossible.InputThe first line contains string s of length n. The second line contains string t of length n.The length of string n is within range from 1 to 105. It is guaranteed that both strings contain only digits zero and one.OutputPrint a string of length n, consisting of digits zero and one, that meets the problem statement. If no such string exist, print on a single line \"impossible\" (without the quotes).If there are multiple possible answers, print any of them.ExamplesInputCopy00011011OutputCopy0011InputCopy000111OutputCopyimpossibleNoteIn the first sample different answers are possible, namely \u2014 0010, 0011, 0110, 0111, 1000, 1001, 1100, 1101."], "Nearest Minimums": ["https://codeforces.com/problemset/problem/911/A", "A. Nearest Minimumstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array of n integer numbers a0,\u2009a1,\u2009...,\u2009an\u2009-\u20091. Find the distance between two closest (nearest) minimums in it. It is guaranteed that in the array a minimum occurs at least two times.InputThe first line contains positive integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 size of the given array. The second line contains n integers a0,\u2009a1,\u2009...,\u2009an\u2009-\u20091 (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 elements of the array. It is guaranteed that in the array a minimum occurs at least two times.OutputPrint the only number \u2014 distance between two nearest minimums in the array.ExamplesInputCopy23 3OutputCopy1InputCopy35 6 5OutputCopy2InputCopy92 1 3 5 4 1 2 3 1OutputCopy3"], "Best Subsegment": ["https://codeforces.com/problemset/problem/1117/A", "A. Best Subsegmenttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given array a1,a2,\u2026,ana1,a2,\u2026,an. Find the subsegment al,al+1,\u2026,aral,al+1,\u2026,ar (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n) with maximum arithmetic mean 1r\u2212l+1\u2211i=lrai1r\u2212l+1\u2211i=lrai (in floating-point numbers, i.e. without any rounding).If there are many such subsegments find the longest one.InputThe first line contains single integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 length of the array aa.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109) \u2014 the array aa.OutputPrint the single integer \u2014 the length of the longest subsegment with maximum possible arithmetic mean.ExampleInputCopy5\n6 1 6 6 0\nOutputCopy2\nNoteThe subsegment [3,4][3,4] is the longest among all subsegments with maximum arithmetic mean."], "The number on the board": ["https://codeforces.com/problemset/problem/835/B", "B. The number on the boardtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSome natural number was written on the board. Its sum of digits was not less than k. But you were distracted a bit, and someone changed this number to n, replacing some digits with others. It's known that the length of the number didn't change.You have to find the minimum number of digits in which these two numbers can differ.InputThe first line contains integer k (1\u2009\u2264\u2009k\u2009\u2264\u2009109).The second line contains integer n (1\u2009\u2264\u2009n\u2009<\u200910100000).There are no leading zeros in n. It's guaranteed that this situation is possible.OutputPrint the minimum number of digits in which the initial number and n can differ.ExamplesInputCopy311OutputCopy1InputCopy399OutputCopy0NoteIn the first example, the initial number could be 12.In the second example the sum of the digits of n is not less than k. The initial number could be equal to n."], "William the Vigilant": ["https://codeforces.com/problemset/problem/1609/B", "B. William the Vigilanttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output  Before becoming a successful trader William got a university degree. During his education an interesting situation happened, after which William started to listen to homework assignments much more attentively. What follows is the correct formal description of the homework assignment:You are given a string ss of length nn only consisting of characters \"a\", \"b\" and \"c\". There are qq queries of format (pos,cpos,c), meaning replacing the element of string ss at position pospos with character cc. After each query you must output the minimal number of characters in the string, which have to be replaced, so that the string doesn't contain string \"abc\" as a substring. A valid replacement of a character is replacing it with \"a\", \"b\" or \"c\".A string xx is a substring of a string yy if xx can be obtained from yy by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.InputThe first line contains two integers nn and qq (1\u2264n,q\u2264105)(1\u2264n,q\u2264105), the length of the string and the number of queries, respectively.The second line contains the string ss, consisting of characters \"a\", \"b\" and \"c\".Each of the next qq lines contains an integer ii and character cc (1\u2264i\u2264n)(1\u2264i\u2264n), index and the value of the new item in the string, respectively. It is guaranteed that character's cc value is \"a\", \"b\" or \"c\".OutputFor each query output the minimal number of characters that would have to be replaced so that the string doesn't contain \"abc\" as a substring.ExampleInputCopy9 10\nabcabcabc\n1 a\n1 b\n2 c\n3 a\n4 b\n5 c\n8 a\n9 b\n1 c\n4 a\nOutputCopy3\n2\n2\n2\n1\n2\n1\n1\n1\n0\nNoteLet's consider the state of the string after each query:   s=s= \"abcabcabc\". In this case 33 replacements can be performed to get, for instance, string s=s= \"bbcaccabb\". This string does not contain \"abc\" as a substring. s=s= \"bbcabcabc\". In this case 22 replacements can be performed to get, for instance, string s=s= \"bbcbbcbbc\". This string does not contain \"abc\" as a substring. s=s= \"bccabcabc\". In this case 22 replacements can be performed to get, for instance, string s=s= \"bccbbcbbc\". This string does not contain \"abc\" as a substring. s=s= \"bcaabcabc\". In this case 22 replacements can be performed to get, for instance, string s=s= \"bcabbcbbc\". This string does not contain \"abc\" as a substring. s=s= \"bcabbcabc\". In this case 11 replacements can be performed to get, for instance, string s=s= \"bcabbcabb\". This string does not contain \"abc\" as a substring. s=s= \"bcabccabc\". In this case 22 replacements can be performed to get, for instance, string s=s= \"bcabbcabb\". This string does not contain \"abc\" as a substring. s=s= \"bcabccaac\". In this case 11 replacements can be performed to get, for instance, string s=s= \"bcabbcaac\". This string does not contain \"abc\" as a substring. s=s= \"bcabccaab\". In this case 11 replacements can be performed to get, for instance, string s=s= \"bcabbcaab\". This string does not contain \"abc\" as a substring. s=s= \"ccabccaab\". In this case 11 replacements can be performed to get, for instance, string s=s= \"ccabbcaab\". This string does not contain \"abc\" as a substring. s=s= \"ccaaccaab\". In this case the string does not contain \"abc\" as a substring and no replacements are needed."], "Salem and Sticks": ["https://codeforces.com/problemset/problem/1105/A", "A. Salem and Sticks time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSalem gave you nn sticks with integer positive lengths a1,a2,\u2026,ana1,a2,\u2026,an.For every stick, you can change its length to any other positive integer length (that is, either shrink or stretch it). The cost of changing the stick's length from aa to bb is |a\u2212b||a\u2212b|, where |x||x| means the absolute value of xx.A stick length aiai is called almost good for some integer tt if |ai\u2212t|\u22641|ai\u2212t|\u22641.Salem asks you to change the lengths of some sticks (possibly all or none), such that all sticks' lengths are almost good for some positive integer tt and the total cost of changing is minimum possible. The value of tt is not fixed in advance and you can choose it as any positive integer. As an answer, print the value of tt and the minimum cost. If there are multiple optimal choices for tt, print any of them.InputThe first line contains a single integer nn (1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the number of sticks.The second line contains nn integers aiai (1\u2264ai\u22641001\u2264ai\u2264100)\u00a0\u2014 the lengths of the sticks.OutputPrint the value of tt and the minimum possible cost. If there are multiple optimal choices for tt, print any of them.ExamplesInputCopy3\n10 1 4\nOutputCopy3 7\nInputCopy5\n1 1 2 2 3\nOutputCopy2 0\nNoteIn the first example, we can change 11 into 22 and 1010 into 44 with cost |1\u22122|+|10\u22124|=1+6=7|1\u22122|+|10\u22124|=1+6=7 and the resulting lengths [2,4,4][2,4,4] are almost good for t=3t=3.In the second example, the sticks lengths are already almost good for t=2t=2, so we don't have to do anything."], "A Perfectly Balanced String?": ["https://codeforces.com/problemset/problem/1673/B", "B. A Perfectly Balanced String?time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call a string ss perfectly balanced if for all possible triplets (t,u,v)(t,u,v) such that tt is a non-empty substring of ss and uu and vv are characters present in ss, the difference between the frequencies of uu and vv in tt is not more than 11.For example, the strings \"aba\" and \"abc\" are perfectly balanced but \"abb\" is not because for the triplet (\"bb\",'a','b'), the condition is not satisfied.You are given a string ss consisting of lowercase English letters only. Your task is to determine whether ss is perfectly balanced or not.A string bb is called a substring of another string aa if bb can be obtained by deleting some characters (possibly 00) from the start and some characters (possibly 00) from the end of aa.InputThe first line of input contains a single integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) denoting the number of testcases.Each of the next tt lines contain a single string ss (1\u2264|s|\u22642\u22c51051\u2264|s|\u22642\u22c5105), consisting of lowercase English letters.It is guaranteed that the sum of |s||s| over all testcases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print \"YES\" if ss is a perfectly balanced string, and \"NO\" otherwise.You may print each letter in any case (for example, \"YES\", \"Yes\", \"yes\", \"yEs\" will all be recognized as positive answer).ExampleInputCopy5\naba\nabb\nabc\naaaaa\nabcba\nOutputCopyYES\nNO\nYES\nYES\nNO\nNoteLet ft(c)ft(c) represent the frequency of character cc in string tt.For the first testcase we have ttft(a)ft(a)ft(b)ft(b)aa1100abab1111abaaba2211bb0011baba1111 It can be seen that for any substring tt of ss, the difference between ft(a)ft(a) and ft(b)ft(b) is not more than 11. Hence the string ss is perfectly balanced.For the second testcase we have ttft(a)ft(a)ft(b)ft(b)aa1100abab1111abbabb1122bb0011bbbb0022 It can be seen that for the substring t=bbt=bb, the difference between ft(a)ft(a) and ft(b)ft(b) is 22 which is greater than 11. Hence the string ss is not perfectly balanced.For the third testcase we have ttft(a)ft(a)ft(b)ft(b)ft(c)ft(c)aa110000abab111100abcabc111111bb001100bcbc001111cc000011It can be seen that for any substring tt of ss and any two characters u,v\u2208{a,b,c}u,v\u2208{a,b,c}, the difference between ft(u)ft(u) and ft(v)ft(v) is not more than 11. Hence the string ss is perfectly balanced."], "Alex and broken contest": ["https://codeforces.com/problemset/problem/877/A", "A. Alex and broken contesttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Alex was creating a contest about his friends, but accidentally deleted it. Fortunately, all the problems were saved, but now he needs to find them among other problems.But there are too many problems, to do it manually. Alex asks you to write a program, which will determine if a problem is from this contest by its name.It is known, that problem is from this contest if and only if its name contains one of Alex's friends' name exactly once. His friends' names are \"Danil\", \"Olya\", \"Slava\", \"Ann\" and \"Nikita\".Names are case sensitive.InputThe only line contains string from lowercase and uppercase letters and \"_\" symbols of length, not more than 100 \u2014 the name of the problem.OutputPrint \"YES\", if problem is from this contest, and \"NO\" otherwise.ExamplesInputCopyAlex_and_broken_contestOutputCopyNOInputCopyNikitaAndStringOutputCopyYESInputCopyDanil_and_OlyaOutputCopyNO"], "Squares and Segments": ["https://codeforces.com/problemset/problem/1099/B", "B. Squares and Segmentstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Sofia is in fourth grade. Today in the geometry lesson she learned about segments and squares. On the way home, she decided to draw nn squares in the snow with a side length of 11. For simplicity, we assume that Sofia lives on a plane and can draw only segments of length 11, parallel to the coordinate axes, with vertices at integer points.In order to draw a segment, Sofia proceeds as follows. If she wants to draw a vertical segment with the coordinates of the ends (x,y)(x,y) and (x,y+1)(x,y+1). Then Sofia looks if there is already a drawn segment with the coordinates of the ends (x\u2032,y)(x\u2032,y) and (x\u2032,y+1)(x\u2032,y+1) for some x\u2032x\u2032. If such a segment exists, then Sofia quickly draws a new segment, using the old one as a guideline. If there is no such segment, then Sofia has to take a ruler and measure a new segment for a long time. Same thing happens when Sofia wants to draw a horizontal segment, but only now she checks for the existence of a segment with the same coordinates xx, x+1x+1 and the differing coordinate yy.For example, if Sofia needs to draw one square, she will have to draw two segments using a ruler:   After that, she can draw the remaining two segments, using the first two as a guide:   If Sofia needs to draw two squares, she will have to draw three segments using a ruler:   After that, she can draw the remaining four segments, using the first three as a guide:   Sofia is in a hurry, so she wants to minimize the number of segments that she will have to draw with a ruler without a guide. Help her find this minimum number.InputThe only line of input contains a single integer nn (1\u2264n\u22641091\u2264n\u2264109), the number of squares that Sofia wants to draw.OutputPrint single integer, the minimum number of segments that Sofia will have to draw with a ruler without a guide in order to draw nn squares in the manner described above.ExamplesInputCopy1\nOutputCopy2\nInputCopy2\nOutputCopy3\nInputCopy4\nOutputCopy4\n"], "Parade": ["https://codeforces.com/problemset/problem/733/B", "B. Paradetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVery soon there will be a parade of victory over alien invaders in Berland. Unfortunately, all soldiers died in the war and now the army consists of entirely new recruits, many of whom do not even know from which leg they should begin to march. The civilian population also poorly understands from which leg recruits begin to march, so it is only important how many soldiers march in step.There will be n columns participating in the parade, the i-th column consists of li soldiers, who start to march from left leg, and ri soldiers, who start to march from right leg.The beauty of the parade is calculated by the following formula: if L is the total number of soldiers on the parade who start to march from the left leg, and R is the total number of soldiers on the parade who start to march from the right leg, so the beauty will equal |L\u2009-\u2009R|.No more than once you can choose one column and tell all the soldiers in this column to switch starting leg, i.e. everyone in this columns who starts the march from left leg will now start it from right leg, and vice versa. Formally, you can pick no more than one index i and swap values li and ri. Find the index of the column, such that switching the starting leg for soldiers in it will maximize the the beauty of the parade, or determine, that no such operation can increase the current beauty.InputThe first line contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105)\u00a0\u2014 the number of columns. The next n lines contain the pairs of integers li and ri (1\u2009\u2264\u2009li,\u2009ri\u2009\u2264\u2009500)\u00a0\u2014 the number of soldiers in the i-th column which start to march from the left or the right leg respectively.OutputPrint single integer k\u00a0\u2014 the number of the column in which soldiers need to change the leg from which they start to march, or 0 if the maximum beauty is already reached.Consider that columns are numbered from 1 to n in the order they are given in the input data.If there are several answers, print any of them.ExamplesInputCopy35 68 910 3OutputCopy3InputCopy26 55 6OutputCopy1InputCopy65 91 34 84 523 5412 32OutputCopy0NoteIn the first example if you don't give the order to change the leg, the number of soldiers, who start to march from the left leg, would equal 5\u2009+\u20098\u2009+\u200910\u2009=\u200923, and from the right leg\u00a0\u2014 6\u2009+\u20099\u2009+\u20093\u2009=\u200918. In this case the beauty of the parade will equal |23\u2009-\u200918|\u2009=\u20095.If you give the order to change the leg to the third column, so the number of soldiers, who march from the left leg, will equal 5\u2009+\u20098\u2009+\u20093\u2009=\u200916, and who march from the right leg\u00a0\u2014 6\u2009+\u20099\u2009+\u200910\u2009=\u200925. In this case the beauty equals |16\u2009-\u200925|\u2009=\u20099.It is impossible to reach greater beauty by giving another orders. Thus, the maximum beauty that can be achieved is 9."], "Ebony and Ivory": ["https://codeforces.com/problemset/problem/633/A", "A. Ebony and Ivorytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDante is engaged in a fight with \"The Savior\". Before he can fight it with his sword, he needs to break its shields. He has two guns, Ebony and Ivory, each of them is able to perform any non-negative number of shots.For every bullet that hits the shield, Ebony deals a units of damage while Ivory deals b units of damage. In order to break the shield Dante has to deal exactly c units of damage. Find out if this is possible.InputThe first line of the input contains three integers a, b, c (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009c\u2009\u2264\u200910\u2009000)\u00a0\u2014 the number of units of damage dealt by Ebony gun and Ivory gun, and the total number of damage required to break the shield, respectively.OutputPrint \"Yes\" (without quotes) if Dante can deal exactly c damage to the shield and \"No\" (without quotes) otherwise.ExamplesInputCopy4 6 15OutputCopyNoInputCopy3 2 7OutputCopyYesInputCopy6 11 6OutputCopyYesNoteIn the second sample, Dante can fire 1 bullet from Ebony and 2 from Ivory to deal exactly 1\u00b73\u2009+\u20092\u00b72\u2009=\u20097 damage. In the third sample, Dante can fire 1 bullet from ebony and no bullets from ivory to do 1\u00b76\u2009+\u20090\u00b711\u2009=\u20096 damage. "], "Weird Subtraction Process": ["https://codeforces.com/problemset/problem/946/B", "B. Weird Subtraction Processtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have two variables a and b. Consider the following sequence of actions performed with these variables: If a\u2009=\u20090 or b\u2009=\u20090, end the process. Otherwise, go to step 2; If a\u2009\u2265\u20092\u00b7b, then set the value of a to a\u2009-\u20092\u00b7b, and repeat step 1. Otherwise, go to step 3; If b\u2009\u2265\u20092\u00b7a, then set the value of b to b\u2009-\u20092\u00b7a, and repeat step 1. Otherwise, end the process.Initially the values of a and b are positive integers, and so the process will be finite.You have to determine the values of a and b after the process ends.InputThe only line of the input contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091018). n is the initial value of variable a, and m is the initial value of variable b.OutputPrint two integers \u2014 the values of a and b after the end of the process.ExamplesInputCopy12 5OutputCopy0 1InputCopy31 12OutputCopy7 12NoteExplanations to the samples: a\u2009=\u200912, b\u2009=\u20095  a\u2009=\u20092, b\u2009=\u20095  a\u2009=\u20092, b\u2009=\u20091  a\u2009=\u20090, b\u2009=\u20091; a\u2009=\u200931, b\u2009=\u200912  a\u2009=\u20097, b\u2009=\u200912."], "Meeting of Old Friends": ["https://codeforces.com/problemset/problem/714/A", "A. Meeting of Old Friendstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputToday an outstanding event is going to happen in the forest\u00a0\u2014 hedgehog Filya will come to his old fried Sonya!Sonya is an owl and she sleeps during the day and stay awake from minute l1 to minute r1 inclusive. Also, during the minute k she prinks and is unavailable for Filya.Filya works a lot and he plans to visit Sonya from minute l2 to minute r2 inclusive.Calculate the number of minutes they will be able to spend together.InputThe only line of the input contains integers l1, r1, l2, r2 and k (1\u2009\u2264\u2009l1,\u2009r1,\u2009l2,\u2009r2,\u2009k\u2009\u2264\u20091018, l1\u2009\u2264\u2009r1, l2\u2009\u2264\u2009r2), providing the segments of time for Sonya and Filya and the moment of time when Sonya prinks.OutputPrint one integer\u00a0\u2014 the number of minutes Sonya and Filya will be able to spend together.ExamplesInputCopy1 10 9 20 1OutputCopy2InputCopy1 100 50 200 75OutputCopy50NoteIn the first sample, they will be together during minutes 9 and 10.In the second sample, they will be together from minute 50 to minute 74 and from minute 76 to minute 100."], "Ilya and a Colorful Walk": ["https://codeforces.com/problemset/problem/1119/A", "A. Ilya and a Colorful Walktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIlya lives in a beautiful city of Chordalsk.There are nn houses on the street Ilya lives, they are numerated from 11 to nn from left to right; the distance between every two neighboring houses is equal to 11 unit. The neighboring houses are 11 and 22, 22 and 33, ..., n\u22121n\u22121 and nn. The houses nn and 11 are not neighboring.The houses are colored in colors c1,c2,\u2026,cnc1,c2,\u2026,cn so that the ii-th house is colored in the color cici. Everyone knows that Chordalsk is not boring, so there are at least two houses colored in different colors.Ilya wants to select two houses ii and jj so that 1\u2264i<j\u2264n1\u2264i<j\u2264n, and they have different colors: ci\u2260cjci\u2260cj. He will then walk from the house ii to the house jj the distance of (j\u2212i)(j\u2212i) units.Ilya loves long walks, so he wants to choose the houses so that the distance between them is the maximum possible.Help Ilya, find this maximum possible distance.InputThe first line contains a single integer nn (3\u2264n\u22643000003\u2264n\u2264300000)\u00a0\u2014 the number of cities on the street.The second line contains nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn (1\u2264ci\u2264n1\u2264ci\u2264n)\u00a0\u2014 the colors of the houses.It is guaranteed that there is at least one pair of indices ii and jj so that 1\u2264i<j\u2264n1\u2264i<j\u2264n and ci\u2260cjci\u2260cj.OutputPrint a single integer\u00a0\u2014 the maximum possible distance Ilya can walk.ExamplesInputCopy5\n1 2 3 2 3\nOutputCopy4\nInputCopy3\n1 2 1\nOutputCopy1\nInputCopy7\n1 1 3 1 1 1 1\nOutputCopy4\nNoteIn the first example the optimal way is to walk from the first house to the last one, where Ilya can walk the distance of 5\u22121=45\u22121=4 units.In the second example the optimal way is to either walk from the first house to the second or from the second to the third. Both these ways have the distance of 11 unit.In the third example the optimal way is to walk from the third house to the last one, where Ilya can walk the distance of 7\u22123=47\u22123=4 units. "], "Anton and Classes": ["https://codeforces.com/problemset/problem/785/B", "B. Anton and Classestime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnton likes to play chess. Also he likes to do programming. No wonder that he decided to attend chess classes and programming classes.Anton has n variants when he will attend chess classes, i-th variant is given by a period of time (l1,\u2009i,\u2009r1,\u2009i). Also he has m variants when he will attend programming classes, i-th variant is given by a period of time (l2,\u2009i,\u2009r2,\u2009i).Anton needs to choose exactly one of n possible periods of time when he will attend chess classes and exactly one of m possible periods of time when he will attend programming classes. He wants to have a rest between classes, so from all the possible pairs of the periods he wants to choose the one where the distance between the periods is maximal.The distance between periods (l1,\u2009r1) and (l2,\u2009r2) is the minimal possible distance between a point in the first period and a point in the second period, that is the minimal possible |i\u2009-\u2009j|, where l1\u2009\u2264\u2009i\u2009\u2264\u2009r1 and l2\u2009\u2264\u2009j\u2009\u2264\u2009r2. In particular, when the periods intersect, the distance between them is 0.Anton wants to know how much time his rest between the classes will last in the best case. Help Anton and find this number!InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of time periods when Anton can attend chess classes.Each of the following n lines of the input contains two integers l1,\u2009i and r1,\u2009i (1\u2009\u2264\u2009l1,\u2009i\u2009\u2264\u2009r1,\u2009i\u2009\u2264\u2009109)\u00a0\u2014 the i-th variant of a period of time when Anton can attend chess classes.The following line of the input contains a single integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of time periods when Anton can attend programming classes.Each of the following m lines of the input contains two integers l2,\u2009i and r2,\u2009i (1\u2009\u2264\u2009l2,\u2009i\u2009\u2264\u2009r2,\u2009i\u2009\u2264\u2009109)\u00a0\u2014 the i-th variant of a period of time when Anton can attend programming classes.OutputOutput one integer\u00a0\u2014 the maximal possible distance between time periods.ExamplesInputCopy31 52 62 322 46 8OutputCopy3InputCopy31 52 63 722 41 4OutputCopy0NoteIn the first sample Anton can attend chess classes in the period (2,\u20093) and attend programming classes in the period (6,\u20098). It's not hard to see that in this case the distance between the periods will be equal to 3.In the second sample if he chooses any pair of periods, they will intersect. So the answer is 0."], "Badges": ["https://codeforces.com/problemset/problem/1214/B", "B. Badgestime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputThere are bb boys and gg girls participating in Olympiad of Metropolises. There will be a board games tournament in the evening and nn participants have accepted the invitation. The organizers do not know how many boys and girls are among them.Organizers are preparing red badges for girls and blue ones for boys.Vasya prepared n+1n+1 decks of badges. The ii-th (where ii is from 00 to nn, inclusive) deck contains ii blue badges and n\u2212in\u2212i red ones. The total number of badges in any deck is exactly nn.Determine the minimum number of decks among these n+1n+1 that Vasya should take, so that there will be a suitable deck no matter how many girls and boys there will be among the participants of the tournament.InputThe first line contains an integer bb (1\u2264b\u22643001\u2264b\u2264300), the number of boys. The second line contains an integer gg (1\u2264g\u22643001\u2264g\u2264300), the number of girls. The third line contains an integer nn (1\u2264n\u2264b+g1\u2264n\u2264b+g), the number of the board games tournament participants.OutputOutput the only integer, the minimum number of badge decks that Vasya could take.ExamplesInputCopy5\n6\n3\nOutputCopy4\nInputCopy5\n3\n5\nOutputCopy4\nNoteIn the first example, each of 4 decks should be taken: (0 blue, 3 red), (1 blue, 2 red), (2 blue, 1 red), (3 blue, 0 red).In the second example, 4 decks should be taken: (2 blue, 3 red), (3 blue, 2 red), (4 blue, 1 red), (5 blue, 0 red). Piles (0 blue, 5 red) and (1 blue, 4 red) can not be used."], "Unequal Array": ["https://codeforces.com/problemset/problem/1672/C", "C. Unequal Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of length nn. We define the equality of the array as the number of indices 1\u2264i\u2264n\u221211\u2264i\u2264n\u22121 such that ai=ai+1ai=ai+1. We are allowed to do the following operation:  Select two integers ii and xx such that 1\u2264i\u2264n\u221211\u2264i\u2264n\u22121 and 1\u2264x\u22641091\u2264x\u2264109. Then, set aiai and ai+1ai+1 to be equal to xx. Find the minimum number of operations needed such that the equality of the array is less than or equal to 11.InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains an integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the length of array aa.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 elements of the array.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105OutputFor each test case, print the minimum number of operations needed.ExampleInputCopy4\n5\n1 1 1 1 1\n5\n2 1 1 1 2\n6\n1 1 2 3 3 4\n6\n1 2 1 4 5 4\nOutputCopy2\n1\n2\n0\nNoteIn the first test case, we can select i=2i=2 and x=2x=2 to form [1,2,2,1,1][1,2,2,1,1]. Then, we can select i=3i=3 and x=3x=3 to form [1,2,3,3,1][1,2,3,3,1].In the second test case, we can select i=3i=3 and x=100x=100 to form [2,1,100,100,2][2,1,100,100,2]."], "Zuhair and Strings": ["https://codeforces.com/problemset/problem/1105/B", "B. Zuhair and Stringstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiven a string ss of length nn and integer kk (1\u2264k\u2264n1\u2264k\u2264n). The string ss has a level xx, if xx is largest non-negative integer, such that it's possible to find in ss:  xx non-intersecting (non-overlapping) substrings of length kk,  all characters of these xx substrings are the same (i.e. each substring contains only one distinct character and this character is the same for all the substrings). A substring is a sequence of consecutive (adjacent) characters, it is defined by two integers ii and jj (1\u2264i\u2264j\u2264n1\u2264i\u2264j\u2264n), denoted as s[i\u2026j]s[i\u2026j] = \"sisi+1\u2026sjsisi+1\u2026sj\".For example, if k=2k=2, then:  the string \"aabb\" has level 11 (you can select substring \"aa\"),  the strings \"zzzz\" and \"zzbzz\" has level 22 (you can select two non-intersecting substrings \"zz\" in each of them),  the strings \"abed\" and \"aca\" have level 00 (you can't find at least one substring of the length k=2k=2 containing the only distinct character). Zuhair gave you the integer kk and the string ss of length nn. You need to find xx, the level of the string ss.InputThe first line contains two integers nn and kk (1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105)\u00a0\u2014 the length of the string and the value of kk.The second line contains the string ss of length nn consisting only of lowercase Latin letters.OutputPrint a single integer xx\u00a0\u2014 the level of the string.ExamplesInputCopy8 2\naaacaabb\nOutputCopy2\nInputCopy2 1\nab\nOutputCopy1\nInputCopy4 2\nabab\nOutputCopy0\nNoteIn the first example, we can select 22 non-intersecting substrings consisting of letter 'a': \"(aa)ac(aa)bb\", so the level is 22.In the second example, we can select either substring \"a\" or \"b\" to get the answer 11."], "Wilbur and Array": ["https://codeforces.com/problemset/problem/596/B", "B. Wilbur and Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWilbur the pig is tinkering with arrays again. He has the array a1,\u2009a2,\u2009...,\u2009an initially consisting of n zeros. At one step, he can choose any index i and either add 1 to all elements ai,\u2009ai\u2009+\u20091,\u2009... ,\u2009an or subtract 1 from all elements ai,\u2009ai\u2009+\u20091,\u2009...,\u2009an. His goal is to end up with the array b1,\u2009b2,\u2009...,\u2009bn. Of course, Wilbur wants to achieve this goal in the minimum number of steps and asks you to compute this value.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the length of the array ai. Initially ai\u2009=\u20090 for every position i, so this array is not given in the input.The second line of the input contains n integers b1,\u2009b2,\u2009...,\u2009bn (\u2009-\u2009109\u2009\u2264\u2009bi\u2009\u2264\u2009109).OutputPrint the minimum number of steps that Wilbur needs to make in order to achieve ai\u2009=\u2009bi for all i.ExamplesInputCopy51 2 3 4 5OutputCopy5InputCopy41 2 2 1OutputCopy3NoteIn the first sample, Wilbur may successively choose indices 1, 2, 3, 4, and 5, and add 1 to corresponding suffixes.In the second sample, Wilbur first chooses indices 1 and 2 and adds 1 to corresponding suffixes, then he chooses index 4 and subtract 1."], "Weird Rounding": ["https://codeforces.com/problemset/problem/779/B", "B. Weird Roundingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp is crazy about round numbers. He especially likes the numbers divisible by 10k.In the given number of n Polycarp wants to remove the least number of digits to get a number that is divisible by 10k. For example, if k\u2009=\u20093, in the number 30020 it is enough to delete a single digit (2). In this case, the result is 3000 that is divisible by 103\u2009=\u20091000.Write a program that prints the minimum number of digits to be deleted from the given integer number n, so that the result is divisible by 10k. The result should not start with the unnecessary leading zero (i.e., zero can start only the number 0, which is required to be written as exactly one digit).It is guaranteed that the answer exists.InputThe only line of the input contains two integer numbers n and k (0\u2009\u2264\u2009n\u2009\u2264\u20092\u2009000\u2009000\u2009000, 1\u2009\u2264\u2009k\u2009\u2264\u20099).It is guaranteed that the answer exists. All numbers in the input are written in traditional notation of integers, that is, without any extra leading zeros.OutputPrint w \u2014 the required minimal number of digits to erase. After removing the appropriate w digits from the number n, the result should have a value that is divisible by 10k. The result can start with digit 0 in the single case (the result is zero and written by exactly the only digit 0).ExamplesInputCopy30020 3OutputCopy1InputCopy100 9OutputCopy2InputCopy10203049 2OutputCopy3NoteIn the example 2 you can remove two digits: 1 and any 0. The result is number 0 which is divisible by any number."], "Text Document Analysis": ["https://codeforces.com/problemset/problem/723/B", "B. Text Document Analysistime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputModern text editors usually show some information regarding the document being edited. For example, the number of words, the number of pages, or the number of characters.In this problem you should implement the similar functionality.You are given a string which only consists of:  uppercase and lowercase English letters,  underscore symbols (they are used as separators),  parentheses (both opening and closing). It is guaranteed that each opening parenthesis has a succeeding closing parenthesis. Similarly, each closing parentheses has a preceding opening parentheses matching it. For each pair of matching parentheses there are no other parenthesis between them. In other words, each parenthesis in the string belongs to a matching \"opening-closing\" pair, and such pairs can't be nested.For example, the following string is valid: \"_Hello_Vasya(and_Petya)__bye_(and_OK)\".Word is a maximal sequence of consecutive letters, i.e. such sequence that the first character to the left and the first character to the right of it is an underscore, a parenthesis, or it just does not exist. For example, the string above consists of seven words: \"Hello\", \"Vasya\", \"and\", \"Petya\", \"bye\", \"and\" and \"OK\". Write a program that finds:  the length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),  the number of words inside the parentheses (print 0, if there is no word inside the parentheses). InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009255)\u00a0\u2014 the length of the given string. The second line contains the string consisting of only lowercase and uppercase English letters, parentheses and underscore symbols. OutputPrint two space-separated integers:  the length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),  the number of words inside the parentheses (print 0, if there is no word inside the parentheses). ExamplesInputCopy37_Hello_Vasya(and_Petya)__bye_(and_OK)OutputCopy5 4InputCopy37_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__OutputCopy2 6InputCopy27(LoooonG)__shOrt__(LoooonG)OutputCopy5 2InputCopy5(___)OutputCopy0 0NoteIn the first sample, the words \"Hello\", \"Vasya\" and \"bye\" are outside any of the parentheses, and the words \"and\", \"Petya\", \"and\" and \"OK\" are inside. Note, that the word \"and\" is given twice and you should count it twice in the answer."], "Blown Garland": ["https://codeforces.com/problemset/problem/758/B", "B. Blown Garlandtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNothing is eternal in the world, Kostya understood it on the 7-th of January when he saw partially dead four-color garland.Now he has a goal to replace dead light bulbs, however he doesn't know how many light bulbs for each color are required. It is guaranteed that for each of four colors at least one light is working.It is known that the garland contains light bulbs of four colors: red, blue, yellow and green. The garland is made as follows: if you take any four consecutive light bulbs then there will not be light bulbs with the same color among them. For example, the garland can look like \"RYBGRYBGRY\", \"YBGRYBGRYBG\", \"BGRYB\", but can not look like \"BGRYG\", \"YBGRYBYGR\" or \"BGYBGY\". Letters denote colors: 'R'\u00a0\u2014 red, 'B'\u00a0\u2014 blue, 'Y'\u00a0\u2014 yellow, 'G'\u00a0\u2014 green.Using the information that for each color at least one light bulb still works count the number of dead light bulbs of each four colors.InputThe first and the only line contains the string s (4\u2009\u2264\u2009|s|\u2009\u2264\u2009100), which describes the garland, the i-th symbol of which describes the color of the i-th light bulb in the order from the beginning of garland:   'R'\u00a0\u2014 the light bulb is red,  'B'\u00a0\u2014 the light bulb is blue,  'Y'\u00a0\u2014 the light bulb is yellow,  'G'\u00a0\u2014 the light bulb is green,  '!'\u00a0\u2014 the light bulb is dead. The string s can not contain other symbols except those five which were described. It is guaranteed that in the given string at least once there is each of four letters 'R', 'B', 'Y' and 'G'. It is guaranteed that the string s is correct garland with some blown light bulbs, it means that for example the line \"GRBY!!!B\" can not be in the input data. OutputIn the only line print four integers kr,\u2009kb,\u2009ky,\u2009kg\u00a0\u2014 the number of dead light bulbs of red, blue, yellow and green colors accordingly.ExamplesInputCopyRYBGRYBGROutputCopy0 0 0 0InputCopy!RGYBOutputCopy0 1 0 0InputCopy!!!!YGRBOutputCopy1 1 1 1InputCopy!GB!RG!Y!OutputCopy2 1 1 0NoteIn the first example there are no dead light bulbs.In the second example it is obvious that one blue bulb is blown, because it could not be light bulbs of other colors on its place according to the statements."], "Mike and Fax": ["https://codeforces.com/problemset/problem/548/A", "A. Mike and Faxtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputWhile Mike was walking in the subway, all the stuff in his back-bag dropped on the ground. There were several fax messages among them. He concatenated these strings in some order and now he has string s.  He is not sure if this is his own back-bag or someone else's. He remembered that there were exactly k messages in his own bag, each was a palindrome string and all those strings had the same length.He asked you to help him and tell him if he has worn his own back-bag. Check if the given string s is a concatenation of k palindromes of the same length.InputThe first line of input contains string s containing lowercase English letters (1\u2009\u2264\u2009|s|\u2009\u2264\u20091000).The second line contains integer k (1\u2009\u2264\u2009k\u2009\u2264\u20091000).OutputPrint \"YES\"(without quotes) if he has worn his own back-bag or \"NO\"(without quotes) otherwise.ExamplesInputCopysaba2OutputCopyNOInputCopysaddastavvat2OutputCopyYESNotePalindrome is a string reading the same forward and backward.In the second sample, the faxes in his back-bag can be \"saddas\" and \"tavvat\"."], "k-Factorization": ["https://codeforces.com/problemset/problem/797/A", "A. k-Factorizationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiven a positive integer n, find k integers (not necessary distinct) such that all these integers are strictly greater than 1, and their product is equal to n.InputThe first line contains two integers n and k (2\u2009\u2264\u2009n\u2009\u2264\u2009100000, 1\u2009\u2264\u2009k\u2009\u2264\u200920).OutputIf it's impossible to find the representation of n as a product of k numbers, print -1.Otherwise, print k integers in any order. Their product must be equal to n. If there are multiple answers, print any of them.ExamplesInputCopy100000 2OutputCopy2 50000 InputCopy100000 20OutputCopy-1InputCopy1024 5OutputCopy2 64 2 2 2 "], "Visiting a Friend": ["https://codeforces.com/problemset/problem/902/A", "A. Visiting a Friendtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPig is visiting a friend.Pig's house is located at point 0, and his friend's house is located at point m on an axis.Pig can use teleports to move along the axis.To use a teleport, Pig should come to a certain point (where the teleport is located) and choose where to move: for each teleport there is the rightmost point it can move Pig to, this point is known as the limit of the teleport.Formally, a teleport located at point x with limit y can move Pig from point x to any point within the segment [x;\u2009y], including the bounds.  Determine if Pig can visit the friend using teleports only, or he should use his car.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009m\u2009\u2264\u2009100)\u00a0\u2014 the number of teleports and the location of the friend's house.The next n lines contain information about teleports.The i-th of these lines contains two integers ai and bi (0\u2009\u2264\u2009ai\u2009\u2264\u2009bi\u2009\u2264\u2009m), where ai is the location of the i-th teleport, and bi is its limit.It is guaranteed that ai\u2009\u2265\u2009ai\u2009-\u20091 for every i (2\u2009\u2264\u2009i\u2009\u2264\u2009n).OutputPrint \"YES\" if there is a path from Pig's house to his friend's house that uses only teleports, and \"NO\" otherwise.You can print each letter in arbitrary case (upper or lower).ExamplesInputCopy3 50 22 43 5OutputCopyYESInputCopy3 70 42 56 7OutputCopyNONoteThe first example is shown on the picture below:  Pig can use the first teleport from his house (point 0) to reach point 2, then using the second teleport go from point 2 to point 3, then using the third teleport go from point 3 to point 5, where his friend lives.The second example is shown on the picture below:  You can see that there is no path from Pig's house to his friend's house that uses only teleports."], "The Artful Expedient": ["https://codeforces.com/problemset/problem/869/A", "A. The Artful Expedienttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRock... Paper!After Karen have found the deterministic winning (losing?) strategy for rock-paper-scissors, her brother, Koyomi, comes up with a new game as a substitute. The game works as follows.A positive integer n is decided first. Both Koyomi and Karen independently choose n distinct positive integers, denoted by x1,\u2009x2,\u2009...,\u2009xn and y1,\u2009y2,\u2009...,\u2009yn respectively. They reveal their sequences, and repeat until all of 2n integers become distinct, which is the only final state to be kept and considered.Then they count the number of ordered pairs (i,\u2009j) (1\u2009\u2264\u2009i,\u2009j\u2009\u2264\u2009n) such that the value xi xor yj equals to one of the 2n integers. Here xor means the bitwise exclusive or operation on two integers, and is denoted by operators ^ and/or xor in most programming languages.Karen claims a win if the number of such pairs is even, and Koyomi does otherwise. And you're here to help determine the winner of their latest game.InputThe first line of input contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u2009000) \u2014 the length of both sequences.The second line contains n space-separated integers x1,\u2009x2,\u2009...,\u2009xn (1\u2009\u2264\u2009xi\u2009\u2264\u20092\u00b7106) \u2014 the integers finally chosen by Koyomi.The third line contains n space-separated integers y1,\u2009y2,\u2009...,\u2009yn (1\u2009\u2264\u2009yi\u2009\u2264\u20092\u00b7106) \u2014 the integers finally chosen by Karen.Input guarantees that the given 2n integers are pairwise distinct, that is, no pair (i,\u2009j) (1\u2009\u2264\u2009i,\u2009j\u2009\u2264\u2009n) exists such that one of the following holds: xi\u2009=\u2009yj; i\u2009\u2260\u2009j and xi\u2009=\u2009xj; i\u2009\u2260\u2009j and yi\u2009=\u2009yj.OutputOutput one line \u2014 the name of the winner, that is, \"Koyomi\" or \"Karen\" (without quotes). Please be aware of the capitalization.ExamplesInputCopy31 2 34 5 6OutputCopyKarenInputCopy52 4 6 8 109 7 5 3 1OutputCopyKarenNoteIn the first example, there are 6 pairs satisfying the constraint: (1,\u20091), (1,\u20092), (2,\u20091), (2,\u20093), (3,\u20092) and (3,\u20093). Thus, Karen wins since 6 is an even number.In the second example, there are 16 such pairs, and Karen wins again."], "Gleb And Pizza": ["https://codeforces.com/problemset/problem/842/B", "B. Gleb And Pizzatime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGleb ordered pizza home. When the courier delivered the pizza, he was very upset, because several pieces of sausage lay on the crust, and he does not really like the crust.The pizza is a circle of radius r and center at the origin. Pizza consists of the main part \u2014 circle of radius r\u2009-\u2009d with center at the origin, and crust around the main part of the width d. Pieces of sausage are also circles. The radius of the i\u00a0-th piece of the sausage is ri, and the center is given as a pair (xi, yi).Gleb asks you to help determine the number of pieces of sausage caught on the crust. A piece of sausage got on the crust, if it completely lies on the crust.InputFirst string contains two integer numbers r and d (0\u2009\u2264\u2009d\u2009<\u2009r\u2009\u2264\u2009500)\u00a0\u2014 the radius of pizza and the width of crust.Next line contains one integer number n\u00a0\u2014 the number of pieces of sausage (1\u2009\u2264\u2009n\u2009\u2264\u2009105).Each of next n lines contains three integer numbers xi, yi and ri (\u2009-\u2009500\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009500, 0\u2009\u2264\u2009ri\u2009\u2264\u2009500), where xi and yi are coordinates of the center of i-th peace of sausage, ri\u00a0\u2014 radius of i-th peace of sausage.OutputOutput the number of pieces of sausage that lay on the crust.ExamplesInputCopy8 477 8 1-7 3 20 2 10 -2 2-3 -3 10 6 25 3 1OutputCopy2InputCopy10 840 0 90 0 101 0 11 0 2OutputCopy0NoteBelow is a picture explaining the first example. Circles of green color denote pieces of sausage lying on the crust.  "], "Lala Land and Apple Trees": ["https://codeforces.com/problemset/problem/558/A", "A. Lala Land and Apple Treestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAmr lives in Lala Land. Lala Land is a very beautiful country that is located on a coordinate line. Lala Land is famous with its apple trees growing everywhere.Lala Land has exactly n apple trees. Tree number i is located in a position xi and has ai apples growing on it. Amr wants to collect apples from the apple trees. Amr currently stands in x\u2009=\u20090 position. At the beginning, he can choose whether to go right or left. He'll continue in his direction until he meets an apple tree he didn't visit before. He'll take all of its apples and then reverse his direction, continue walking in this direction until he meets another apple tree he didn't visit before and so on. In the other words, Amr reverses his direction when visiting each new apple tree. Amr will stop collecting apples when there are no more trees he didn't visit in the direction he is facing.What is the maximum number of apples he can collect?InputThe first line contains one number n (1\u2009\u2264\u2009n\u2009\u2264\u2009100), the number of apple trees in Lala Land.The following n lines contains two integers each xi, ai (\u2009-\u2009105\u2009\u2264\u2009xi\u2009\u2264\u2009105, xi\u2009\u2260\u20090, 1\u2009\u2264\u2009ai\u2009\u2264\u2009105), representing the position of the i-th tree and number of apples on it.It's guaranteed that there is at most one apple tree at each coordinate. It's guaranteed that no tree grows in point 0.OutputOutput the maximum number of apples Amr can collect.ExamplesInputCopy2-1 51 5OutputCopy10InputCopy3-2 21 4-1 3OutputCopy9InputCopy31 93 57 10OutputCopy9NoteIn the first sample test it doesn't matter if Amr chose at first to go left or right. In both cases he'll get all the apples.In the second sample test the optimal solution is to go left to x\u2009=\u2009\u2009-\u20091, collect apples from there, then the direction will be reversed, Amr has to go to x\u2009=\u20091, collect apples from there, then the direction will be reversed and Amr goes to the final tree x\u2009=\u2009\u2009-\u20092.In the third sample test the optimal solution is to go right to x\u2009=\u20091, collect apples from there, then the direction will be reversed and Amr will not be able to collect anymore apples because there are no apple trees to his left."], "PolandBall and Game": ["https://codeforces.com/problemset/problem/755/B", "B. PolandBall and Gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolandBall is playing a game with EnemyBall. The rules are simple. Players have to say words in turns. You cannot say a word which was already said. PolandBall starts. The Ball which can't say a new word loses.You're given two lists of words familiar to PolandBall and EnemyBall. Can you determine who wins the game, if both play optimally?InputThe first input line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009103)\u00a0\u2014 number of words PolandBall and EnemyBall know, respectively.Then n strings follow, one per line\u00a0\u2014 words familiar to PolandBall.Then m strings follow, one per line\u00a0\u2014 words familiar to EnemyBall.Note that one Ball cannot know a word more than once (strings are unique), but some words can be known by both players.Each word is non-empty and consists of no more than 500 lowercase English alphabet letters.OutputIn a single line of print the answer\u00a0\u2014 \"YES\" if PolandBall wins and \"NO\" otherwise. Both Balls play optimally.ExamplesInputCopy5 1polandballisacoolcharacternopeOutputCopyYESInputCopy2 2kremowkawadowickakremowkawiedenskaOutputCopyYESInputCopy1 2aabOutputCopyNONoteIn the first example PolandBall knows much more words and wins effortlessly.In the second example if PolandBall says kremowka first, then EnemyBall cannot use that word anymore. EnemyBall can only say wiedenska. PolandBall says wadowicka and wins."], "Boys and Girls": ["https://codeforces.com/problemset/problem/253/A", "A. Boys and Girlstime limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtThere are n boys and m girls studying in the class. They should stand in a line so that boys and girls alternated there as much as possible. Let's assume that positions in the line are indexed from left to right by numbers from 1 to n\u2009+\u2009m. Then the number of integers i (1\u2009\u2264\u2009i\u2009<\u2009n\u2009+\u2009m) such that positions with indexes i and i\u2009+\u20091 contain children of different genders (position i has a girl and position i\u2009+\u20091 has a boy or vice versa) must be as large as possible. Help the children and tell them how to form the line.InputThe single line of the input contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100), separated by a space.OutputPrint a line of n\u2009+\u2009m characters. Print on the i-th position of the line character \"B\", if the i-th position of your arrangement should have a boy and \"G\", if it should have a girl. Of course, the number of characters \"B\" should equal n and the number of characters \"G\" should equal m. If there are multiple optimal solutions, print any of them.ExamplesInputCopy3 3OutputCopyGBGBGBInputCopy4 2OutputCopyBGBGBBNoteIn the first sample another possible answer is BGBGBG. In the second sample answer BBGBGB is also optimal."], "Math Problem": ["https://codeforces.com/problemset/problem/1227/A", "A. Math Problemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYour math teacher gave you the following problem:There are nn segments on the xx-axis, [l1;r1],[l2;r2],\u2026,[ln;rn][l1;r1],[l2;r2],\u2026,[ln;rn]. The segment [l;r][l;r] includes the bounds, i.e. it is a set of such xx that l\u2264x\u2264rl\u2264x\u2264r. The length of the segment [l;r][l;r] is equal to r\u2212lr\u2212l.Two segments [a;b][a;b] and [c;d][c;d] have a common point (intersect) if there exists xx that a\u2264x\u2264ba\u2264x\u2264b and c\u2264x\u2264dc\u2264x\u2264d. For example, [2;5][2;5] and [3;10][3;10] have a common point, but [5;6][5;6] and [1;4][1;4] don't have.You should add one segment, which has at least one common point with each of the given segments and as short as possible (i.e. has minimal length). The required segment can degenerate to be a point (i.e a segment with length zero). The added segment may or may not be among the given nn segments.In other words, you need to find a segment [a;b][a;b], such that [a;b][a;b] and every [li;ri][li;ri] have a common point for each ii, and b\u2212ab\u2212a is minimal.InputThe first line contains integer number tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases in the input. Then tt test cases follow.The first line of each test case contains one integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of segments. The following nn lines contain segment descriptions: the ii-th of them contains two integers li,rili,ri (1\u2264li\u2264ri\u22641091\u2264li\u2264ri\u2264109).The sum of all values nn over all the test cases in the input doesn't exceed 105105.OutputFor each test case, output one integer\u00a0\u2014 the smallest possible length of the segment which has at least one common point with all given segments.ExampleInputCopy4\n3\n4 5\n5 9\n7 7\n5\n11 19\n4 17\n16 16\n3 12\n14 17\n1\n1 10\n1\n1 1\nOutputCopy2\n4\n0\n0\nNoteIn the first test case of the example, we can choose the segment [5;7][5;7] as the answer. It is the shortest segment that has at least one common point with all given segments."], "President's Office": ["https://codeforces.com/problemset/problem/6/B", "B. President's Officetime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputPresident of Berland has a very vast office-room, where, apart from him, work his subordinates. Each subordinate, as well as President himself, has his own desk of a unique colour. Each desk is rectangular, and its sides are parallel to the office walls. One day President decided to establish an assembly, of which all his deputies will be members. Unfortunately, he does not remember the exact amount of his deputies, but he remembers that the desk of each his deputy is adjacent to his own desk, that is to say, the two desks (President's and each deputy's) have a common side of a positive length.The office-room plan can be viewed as a matrix with n rows and m columns. Each cell of this matrix is either empty, or contains a part of a desk. An uppercase Latin letter stands for each desk colour. The \u00abperiod\u00bb character (\u00ab.\u00bb) stands for an empty cell. InputThe first line contains two separated by a space integer numbers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the length and the width of the office-room, and c character \u2014 the President's desk colour. The following n lines contain m characters each \u2014 the office-room description. It is guaranteed that the colour of each desk is unique, and each desk represents a continuous subrectangle of the given matrix. All colours are marked by uppercase Latin letters.OutputPrint the only number \u2014 the amount of President's deputies.ExamplesInputCopy3 4 RG.B..RR.TTT.OutputCopy2InputCopy3 3 Z....H...ZOutputCopy0"], "Ksenia and Pan Scales": ["https://codeforces.com/problemset/problem/382/A", "A. Ksenia and Pan Scalestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputKsenia has ordinary pan scales and several weights of an equal mass. Ksenia has already put some weights on the scales, while other weights are untouched. Ksenia is now wondering whether it is possible to put all the remaining weights on the scales so that the scales were in equilibrium. The scales is in equilibrium if the total sum of weights on the left pan is equal to the total sum of weights on the right pan.InputThe first line has a non-empty sequence of characters describing the scales. In this sequence, an uppercase English letter indicates a weight, and the symbol \"|\" indicates the delimiter (the character occurs in the sequence exactly once). All weights that are recorded in the sequence before the delimiter are initially on the left pan of the scale. All weights that are recorded in the sequence after the delimiter are initially on the right pan of the scale. The second line contains a non-empty sequence containing uppercase English letters. Each letter indicates a weight which is not used yet. It is guaranteed that all the English letters in the input data are different. It is guaranteed that the input does not contain any extra characters.OutputIf you cannot put all the weights on the scales so that the scales were in equilibrium, print string \"Impossible\". Otherwise, print the description of the resulting scales, copy the format of the input.If there are multiple answers, print any of them.ExamplesInputCopyAC|TLOutputCopyAC|TLInputCopy|ABCXYZOutputCopyXYZ|ABCInputCopyW|TFOutputCopyImpossibleInputCopyABC|DOutputCopyImpossible"], "Combination": ["https://codeforces.com/problemset/problem/155/B", "B. Combinationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIlya plays a card game by the following rules.A player has several cards. Each card contains two non-negative integers inscribed, one at the top of the card and one at the bottom. At the beginning of the round the player chooses one of his cards to play it. If the top of the card contains number ai, and the bottom contains number bi, then when the player is playing the card, he gets ai points and also gets the opportunity to play additional bi cards. After the playing the card is discarded.More formally: let's say that there is a counter of the cards that can be played. At the beginning of the round the counter equals one. When a card is played, the counter decreases by one for the played card and increases by the number bi, which is written at the bottom of the card. Then the played card is discarded. If after that the counter is not equal to zero, the player gets the opportunity to play another card from the remaining cards. The round ends when the counter reaches zero or the player runs out of cards.Of course, Ilya wants to get as many points as possible. Can you determine the maximum number of points he can score provided that you know his cards?InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000) \u2014 the number of cards Ilya has.Each of the next n lines contains two non-negative space-separated integers \u2014 ai and bi (0\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009104) \u2014 the numbers, written at the top and the bottom of the i-th card correspondingly.OutputPrint the single number \u2014 the maximum number of points you can score in one round by the described rules.ExamplesInputCopy21 02 0OutputCopy2InputCopy31 02 00 2OutputCopy3NoteIn the first sample none of two cards brings extra moves, so you should play the one that will bring more points.In the second sample you should first play the third card that doesn't bring any points but lets you play both remaining cards."], "Regular Bracket Sequence": ["https://codeforces.com/problemset/problem/26/B", "B. Regular Bracket Sequencetime limit per test5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA bracket sequence is called regular if it is possible to obtain correct arithmetic expression by inserting characters \u00ab+\u00bb and \u00ab1\u00bb into this sequence. For example, sequences \u00ab(())()\u00bb, \u00ab()\u00bb and \u00ab(()(()))\u00bb are regular, while \u00ab)(\u00bb, \u00ab(()\u00bb and \u00ab(()))(\u00bb are not.One day Johnny got bracket sequence. He decided to remove some of the brackets from it in order to obtain a regular bracket sequence. What is the maximum length of a regular bracket sequence which can be obtained?InputInput consists of a single line with non-empty string of \u00ab(\u00bb and \u00ab)\u00bb characters. Its length does not exceed 106.OutputOutput the maximum possible length of a regular bracket sequence.ExamplesInputCopy(()))(OutputCopy4InputCopy((()())OutputCopy6"], "Divisibility": ["https://codeforces.com/problemset/problem/630/J", "J. Divisibilitytime limit per test0.5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputIT City company developing computer games invented a new way to reward its employees. After a new game release users start buying it actively, and the company tracks the number of sales with precision to each transaction. Every time when the next number of sales is divisible by all numbers from 2 to 10 every developer of this game gets a small bonus.A game designer Petya knows that the company is just about to release a new game that was partly developed by him. On the basis of his experience he predicts that n people will buy the game during the first month. Now Petya wants to determine how many times he will get the bonus. Help him to know it.InputThe only line of the input contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091018) \u2014 the prediction on the number of people who will buy the game.OutputOutput one integer showing how many numbers from 1 to n are divisible by all numbers from 2 to 10.ExamplesInputCopy3000OutputCopy1"], "Div Times Mod": ["https://codeforces.com/problemset/problem/1085/B", "B. Div Times Modtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya likes to solve equations. Today he wants to solve (x\u00a0div\u00a0k)\u22c5(xmodk)=n(x\u00a0div\u00a0k)\u22c5(xmodk)=n, where divdiv and modmod stand for integer division and modulo operations (refer to the Notes below for exact definition). In this equation, kk and nn are positive integer parameters, and xx is a positive integer unknown. If there are several solutions, Vasya wants to find the smallest possible xx. Can you help him?InputThe first line contains two integers nn and kk (1\u2264n\u22641061\u2264n\u2264106, 2\u2264k\u226410002\u2264k\u22641000).OutputPrint a single integer xx\u00a0\u2014 the smallest positive integer solution to (x\u00a0div\u00a0k)\u22c5(xmodk)=n(x\u00a0div\u00a0k)\u22c5(xmodk)=n. It is guaranteed that this equation has at least one positive integer solution.ExamplesInputCopy6 3\nOutputCopy11\nInputCopy1 2\nOutputCopy3\nInputCopy4 6\nOutputCopy10\nNoteThe result of integer division a\u00a0div\u00a0ba\u00a0div\u00a0b is equal to the largest integer cc such that b\u22c5c\u2264ab\u22c5c\u2264a. aa modulo bb (shortened amodbamodb) is the only integer cc such that 0\u2264c<b0\u2264c<b, and a\u2212ca\u2212c is divisible by bb.In the first sample, 11\u00a0div\u00a03=311\u00a0div\u00a03=3 and 11mod3=211mod3=2. Since 3\u22c52=63\u22c52=6, then x=11x=11 is a solution to (x\u00a0div\u00a03)\u22c5(xmod3)=6(x\u00a0div\u00a03)\u22c5(xmod3)=6. One can see that 1919 is the only other positive integer solution, hence 1111 is the smallest one."], "Dorms War": ["https://codeforces.com/problemset/problem/1670/B", "B. Dorms Wartime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputHosssam decided to sneak into Hemose's room while he is sleeping and change his laptop's password. He already knows the password, which is a string ss of length nn. He also knows that there are kk special letters of the alphabet: c1,c2,\u2026,ckc1,c2,\u2026,ck.Hosssam made a program that can do the following.  The program considers the current password ss of some length mm.  Then it finds all positions ii (1\u2264i<m1\u2264i<m) such that si+1si+1 is one of the kk special letters.  Then it deletes all of those positions from the password ss even if sisi is a special character. If there are no positions to delete, then the program displays an error message which has a very loud sound. For example, suppose the string ss is \"abcdef\" and the special characters are 'b' and 'd'. If he runs the program once, the positions 11 and 33 will be deleted as they come before special characters, so the password becomes \"bdef\". If he runs the program again, it deletes position 11, and the password becomes \"def\". If he is wise, he won't run it a third time.Hosssam wants to know how many times he can run the program on Hemose's laptop without waking him up from the sound of the error message. Can you help him?InputThe first line contains a single integer tt (1\u2264t\u22641051\u2264t\u2264105) \u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains a single integer nn (2\u2264n\u22641052\u2264n\u2264105) \u2014 the initial length of the password.The next line contains a string ss consisting of nn lowercase English letters \u2014 the initial password.The next line contains an integer kk (1\u2264k\u2264261\u2264k\u226426), followed by kk distinct lowercase letters c1,c2,\u2026,ckc1,c2,\u2026,ck \u2014 the special letters.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print the maximum number of times Hosssam can run the program without displaying the error message, on a new line.ExampleInputCopy10\n9\niloveslim\n1 s\n7\njoobeel\n2 o e\n7\nbasiozi\n2 s i\n6\nkhater\n1 r\n7\nabobeih\n6 a b e h i o\n5\nzondl\n5 a b c e f\n6\nshoman\n2 a h\n7\nshetwey\n2 h y\n5\nsamez\n1 m\n6\nmouraz\n1 m\nOutputCopy5\n2\n3\n5\n1\n0\n3\n5\n2\n0\nNoteIn the first test case, the program can run 55 times as follows: iloveslim\u2192ilovslim\u2192iloslim\u2192ilslim\u2192islim\u2192slimiloveslim\u2192ilovslim\u2192iloslim\u2192ilslim\u2192islim\u2192slimIn the second test case, the program can run 22 times as follows: joobeel\u2192oel\u2192eljoobeel\u2192oel\u2192elIn the third test case, the program can run 33 times as follows: basiozi\u2192bioi\u2192ii\u2192ibasiozi\u2192bioi\u2192ii\u2192i.In the fourth test case, the program can run 55 times as follows: khater\u2192khatr\u2192khar\u2192khr\u2192kr\u2192rkhater\u2192khatr\u2192khar\u2192khr\u2192kr\u2192rIn the fifth test case, the program can run only once as follows: abobeih\u2192habobeih\u2192hIn the sixth test case, the program cannot run as none of the characters in the password is a special character."], "Memory and Trident": ["https://codeforces.com/problemset/problem/712/B", "B. Memory and Tridenttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMemory is performing a walk on the two-dimensional plane, starting at the origin. He is given a string s with his directions for motion: An 'L' indicates he should move one unit left.  An 'R' indicates he should move one unit right.  A 'U' indicates he should move one unit up.  A 'D' indicates he should move one unit down.But now Memory wants to end at the origin. To do this, he has a special trident. This trident can replace any character in s with any of 'L', 'R', 'U', or 'D'. However, because he doesn't want to wear out the trident, he wants to make the minimum number of edits possible. Please tell Memory what is the minimum number of changes he needs to make to produce a string that, when walked, will end at the origin, or if there is no such string.InputThe first and only line contains the string s (1\u2009\u2264\u2009|s|\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the instructions Memory is given.OutputIf there is a string satisfying the conditions, output a single integer\u00a0\u2014 the minimum number of edits required. In case it's not possible to change the sequence in such a way that it will bring Memory to to the origin, output -1.ExamplesInputCopyRRUOutputCopy-1InputCopyUDUROutputCopy1InputCopyRUUROutputCopy2NoteIn the first sample test, Memory is told to walk right, then right, then up. It is easy to see that it is impossible to edit these instructions to form a valid walk.In the second sample test, Memory is told to walk up, then down, then up, then right. One possible solution is to change s to \"LDUR\". This string uses 1 edit, which is the minimum possible. It also ends at the origin."], "Lucky String": ["https://codeforces.com/problemset/problem/110/B", "B. Lucky Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.Petya recently learned to determine whether a string of lowercase Latin letters is lucky. For each individual letter all its positions in the string are written out in the increasing order. This results in 26 lists of numbers; some of them can be empty. A string is considered lucky if and only if in each list the absolute difference of any two adjacent numbers is a lucky number. For example, let's consider string \"zbcdzefdzc\". The lists of positions of equal letters are: b: 2 c: 3,\u200910 d: 4,\u20098 e: 6 f: 7 z: 1,\u20095,\u20099 Lists of positions of letters a, g, h, ..., y are empty.This string is lucky as all differences are lucky numbers. For letters z: 5\u2009-\u20091\u2009=\u20094, 9\u2009-\u20095\u2009=\u20094, for letters c: 10\u2009-\u20093\u2009=\u20097, for letters d: 8\u2009-\u20094\u2009=\u20094. Note that if some letter occurs only once in a string, it doesn't influence the string's luckiness after building the lists of positions of equal letters. The string where all the letters are distinct is considered lucky.Find the lexicographically minimal lucky string whose length equals n.InputThe single line contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the length of the sought string.OutputPrint on the single line the lexicographically minimal lucky string whose length equals n.ExamplesInputCopy5OutputCopyabcdaInputCopy3OutputCopyabcNoteThe lexical comparison of strings is performed by the < operator in modern programming languages. String a is lexicographically less than string b if exists such i (1\u2009\u2264\u2009i\u2009\u2264\u2009n), that ai\u2009<\u2009bi, and for any j (1\u2009\u2264\u2009j\u2009<\u2009i) aj\u2009=\u2009bj."], "Proper Nutrition": ["https://codeforces.com/problemset/problem/898/B", "B. Proper Nutritiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has n burles. One bottle of Ber-Cola costs a burles and one Bars bar costs b burles. He can buy any non-negative integer number of bottles of Ber-Cola and any non-negative integer number of Bars bars.Find out if it's possible to buy some amount of bottles of Ber-Cola and Bars bars and spend exactly n burles.In other words, you should find two non-negative integers x and y such that Vasya can buy x bottles of Ber-Cola and y Bars bars and x\u00b7a\u2009+\u2009y\u00b7b\u2009=\u2009n or tell that it's impossible.InputFirst line contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200910\u2009000\u2009000)\u00a0\u2014 amount of money, that Vasya has.Second line contains single integer a (1\u2009\u2264\u2009a\u2009\u2264\u200910\u2009000\u2009000)\u00a0\u2014 cost of one bottle of Ber-Cola.Third line contains single integer b (1\u2009\u2264\u2009b\u2009\u2264\u200910\u2009000\u2009000)\u00a0\u2014 cost of one Bars bar.OutputIf Vasya can't buy Bars and Ber-Cola in such a way to spend exactly n burles print \u00abNO\u00bb (without quotes).Otherwise in first line print \u00abYES\u00bb (without quotes). In second line print two non-negative integers x and y\u00a0\u2014 number of bottles of Ber-Cola and number of Bars bars Vasya should buy in order to spend exactly n burles, i.e. x\u00b7a\u2009+\u2009y\u00b7b\u2009=\u2009n. If there are multiple answers print any of them.Any of numbers x and y can be equal 0.ExamplesInputCopy723OutputCopyYES2 1InputCopy1002510OutputCopyYES0 10InputCopy1548OutputCopyNOInputCopy996059425512557OutputCopyYES1951 1949NoteIn first example Vasya can buy two bottles of Ber-Cola and one Bars bar. He will spend exactly 2\u00b72\u2009+\u20091\u00b73\u2009=\u20097 burles.In second example Vasya can spend exactly n burles multiple ways:   buy two bottles of Ber-Cola and five Bars bars;  buy four bottles of Ber-Cola and don't buy Bars bars;  don't buy Ber-Cola and buy 10 Bars bars. In third example it's impossible to but Ber-Cola and Bars bars in order to spend exactly n burles."], "Anastasia and pebbles": ["https://codeforces.com/problemset/problem/789/A", "A. Anastasia and pebblestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnastasia loves going for a walk in Central Uzhlyandian Park. But she became uninterested in simple walking, so she began to collect Uzhlyandian pebbles. At first, she decided to collect all the pebbles she could find in the park.She has only two pockets. She can put at most k pebbles in each pocket at the same time. There are n different pebble types in the park, and there are wi pebbles of the i-th type. Anastasia is very responsible, so she never mixes pebbles of different types in same pocket. However, she can put different kinds of pebbles in different pockets at the same time. Unfortunately, she can't spend all her time collecting pebbles, so she can collect pebbles from the park only once a day.Help her to find the minimum number of days needed to collect all the pebbles of Uzhlyandian Central Park, taking into consideration that Anastasia can't place pebbles of different types in same pocket.InputThe first line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009105, 1\u2009\u2264\u2009k\u2009\u2264\u2009109)\u00a0\u2014 the number of different pebble types and number of pebbles Anastasia can place in one pocket.The second line contains n integers w1,\u2009w2,\u2009...,\u2009wn (1\u2009\u2264\u2009wi\u2009\u2264\u2009104)\u00a0\u2014 number of pebbles of each type. OutputThe only line of output contains one integer\u00a0\u2014 the minimum number of days Anastasia needs to collect all the pebbles.ExamplesInputCopy3 22 3 4OutputCopy3InputCopy5 43 1 8 9 7OutputCopy5NoteIn the first sample case, Anastasia can collect all pebbles of the first type on the first day, of second type\u00a0\u2014 on the second day, and of third type\u00a0\u2014 on the third day.Optimal sequence of actions in the second sample case:   In the first day Anastasia collects 8 pebbles of the third type.  In the second day she collects 8 pebbles of the fourth type.  In the third day she collects 3 pebbles of the first type and 1 pebble of the fourth type.  In the fourth day she collects 7 pebbles of the fifth type.  In the fifth day she collects 1 pebble of the second type. "], "Run For Your Prize": ["https://codeforces.com/problemset/problem/938/B", "B. Run For Your Prizetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou and your friend are participating in a TV show \"Run For Your Prize\".At the start of the show n prizes are located on a straight line. i-th prize is located at position ai. Positions of all prizes are distinct. You start at position 1, your friend \u2014 at position 106 (and there is no prize in any of these two positions). You have to work as a team and collect all prizes in minimum possible time, in any order.You know that it takes exactly 1 second to move from position x to position x\u2009+\u20091 or x\u2009-\u20091, both for you and your friend. You also have trained enough to instantly pick up any prize, if its position is equal to your current position (and the same is true for your friend). Carrying prizes does not affect your speed (or your friend's speed) at all.Now you may discuss your strategy with your friend and decide who will pick up each prize. Remember that every prize must be picked up, either by you or by your friend.What is the minimum number of seconds it will take to pick up all the prizes?InputThe first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of prizes.The second line contains n integers a1, a2, ..., an (2\u2009\u2264\u2009ai\u2009\u2264\u2009106\u2009-\u20091) \u2014 the positions of the prizes. No two prizes are located at the same position. Positions are given in ascending order.OutputPrint one integer \u2014 the minimum number of seconds it will take to collect all prizes.ExamplesInputCopy32 3 9OutputCopy8InputCopy22 999995OutputCopy5NoteIn the first example you take all the prizes: take the first at 1, the second at 2 and the third at 8.In the second example you take the first prize in 1 second and your friend takes the other in 5 seconds, you do this simultaneously, so the total time is 5."], "Nauuo and Chess": ["https://codeforces.com/problemset/problem/1173/B", "B. Nauuo and Chesstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNauuo is a girl who loves playing chess.One day she invented a game by herself which needs nn chess pieces to play on a m\u00d7mm\u00d7m chessboard. The rows and columns are numbered from 11 to mm. We denote a cell on the intersection of the rr-th row and cc-th column as (r,c)(r,c).The game's goal is to place nn chess pieces numbered from 11 to nn on the chessboard, the ii-th piece lies on (ri,ci)(ri,ci), while the following rule is satisfied: for all pairs of pieces ii and jj, |ri\u2212rj|+|ci\u2212cj|\u2265|i\u2212j||ri\u2212rj|+|ci\u2212cj|\u2265|i\u2212j|. Here |x||x| means the absolute value of xx.However, Nauuo discovered that sometimes she couldn't find a solution because the chessboard was too small.She wants to find the smallest chessboard on which she can put nn pieces according to the rules.She also wonders how to place the pieces on such a chessboard. Can you help her?InputThe only line contains a single integer nn (1\u2264n\u226410001\u2264n\u22641000) \u2014 the number of chess pieces for the game.OutputThe first line contains a single integer \u2014 the minimum value of mm, where mm is the length of sides of the suitable chessboard.The ii-th of the next nn lines contains two integers riri and cici (1\u2264ri,ci\u2264m1\u2264ri,ci\u2264m) \u2014 the coordinates of the ii-th chess piece.If there are multiple answers, print any.ExamplesInputCopy2\nOutputCopy2\n1 1\n1 2InputCopy4\nOutputCopy3\n1 1\n1 3\n3 1\n3 3NoteIn the first example, you can't place the two pieces on a 1\u00d711\u00d71 chessboard without breaking the rule. But you can place two pieces on a 2\u00d722\u00d72 chessboard like this:In the second example, you can't place four pieces on a 2\u00d722\u00d72 chessboard without breaking the rule. For example, if you place the pieces like this:then |r1\u2212r3|+|c1\u2212c3|=|1\u22122|+|1\u22121|=1|r1\u2212r3|+|c1\u2212c3|=|1\u22122|+|1\u22121|=1, |1\u22123|=2|1\u22123|=2, 1<21<2; and |r1\u2212r4|+|c1\u2212c4|=|1\u22122|+|1\u22122|=2|r1\u2212r4|+|c1\u2212c4|=|1\u22122|+|1\u22122|=2, |1\u22124|=3|1\u22124|=3, 2<32<3. It doesn't satisfy the rule.However, on a 3\u00d733\u00d73 chessboard, you can place four pieces like this:"], "Vasya and Digital Root": ["https://codeforces.com/problemset/problem/355/A", "A. Vasya and Digital Roottime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has recently found out what a digital root of a number is and he decided to share his knowledge with you.Let's assume that S(n) is the sum of digits of number n, for example, S(4098)\u2009=\u20094\u2009+\u20090\u2009+\u20099\u2009+\u20098\u2009=\u200921. Then the digital root of number n equals to:   dr(n)\u2009=\u2009S(n), if S(n)\u2009<\u200910;  dr(n)\u2009=\u2009dr(\u2009S(n)\u2009), if S(n)\u2009\u2265\u200910. For example, dr(4098)\u2009\u2009=\u2009\u2009dr(21)\u2009\u2009=\u2009\u20093.Vasya is afraid of large numbers, so the numbers he works with are at most 101000. For all such numbers, he has proved that dr(n)\u2009\u2009=\u2009\u2009S(\u2009S(\u2009S(\u2009S(n)\u2009)\u2009)\u2009) (n\u2009\u2264\u2009101000).Now Vasya wants to quickly find numbers with the given digital root. The problem is, he hasn't learned how to do that and he asked you to help him. You task is, given numbers k and d, find the number consisting of exactly k digits (the leading zeroes are not allowed), with digital root equal to d, or else state that such number does not exist.InputThe first line contains two integers k and d (1\u2009\u2264\u2009k\u2009\u2264\u20091000;\u20020\u2009\u2264\u2009d\u2009\u2264\u20099).OutputIn a single line print either any number that meets the requirements (without the leading zeroes) or \"No solution\" (without the quotes), if the corresponding number does not exist.The chosen number must consist of exactly k digits. We assume that number 0 doesn't contain any leading zeroes.ExamplesInputCopy4 4OutputCopy5881InputCopy5 1OutputCopy36172InputCopy1 0OutputCopy0NoteFor the first test sample dr(5881)\u2009\u2009=\u2009\u2009dr(22)\u2009\u2009=\u2009\u20094.For the second test sample dr(36172)\u2009\u2009=\u2009\u2009dr(19)\u2009\u2009=\u2009\u2009dr(10)\u2009\u2009=\u2009\u20091."], "Maximum Sum of Digits": ["https://codeforces.com/problemset/problem/1060/B", "B. Maximum Sum of Digitstime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given a positive integer nn.Let S(x)S(x) be sum of digits in base 10 representation of xx, for example, S(123)=1+2+3=6S(123)=1+2+3=6, S(0)=0S(0)=0.Your task is to find two integers a,ba,b, such that 0\u2264a,b\u2264n0\u2264a,b\u2264n, a+b=na+b=n and S(a)+S(b)S(a)+S(b) is the largest possible among all such pairs.InputThe only line of input contains an integer nn (1\u2264n\u22641012)(1\u2264n\u22641012).OutputPrint largest S(a)+S(b)S(a)+S(b) among all pairs of integers a,ba,b, such that 0\u2264a,b\u2264n0\u2264a,b\u2264n and a+b=na+b=n.ExamplesInputCopy35OutputCopy17InputCopy10000000000OutputCopy91NoteIn the first example, you can choose, for example, a=17a=17 and b=18b=18, so that S(17)+S(18)=1+7+1+8=17S(17)+S(18)=1+7+1+8=17. It can be shown that it is impossible to get a larger answer.In the second test example, you can choose, for example, a=5000000001a=5000000001 and b=4999999999b=4999999999, with S(5000000001)+S(4999999999)=91S(5000000001)+S(4999999999)=91. It can be shown that it is impossible to get a larger answer."], "Fixed Points": ["https://codeforces.com/problemset/problem/347/B", "B. Fixed Pointstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA permutation of length n is an integer sequence such that each integer from 0 to (n\u2009-\u20091) appears exactly once in it. For example, sequence [0,\u20092,\u20091] is a permutation of length 3 while both [0,\u20092,\u20092] and [1,\u20092,\u20093] are not.A fixed point of a function is a point that is mapped to itself by the function. A permutation can be regarded as a bijective function. We'll get a definition of a fixed point in a permutation. An integer i is a fixed point of permutation a0,\u2009a1,\u2009...,\u2009an\u2009-\u20091 if and only if ai\u2009=\u2009i. For example, permutation [0,\u20092,\u20091] has 1 fixed point and permutation [0,\u20091,\u20092] has 3 fixed points.You are given permutation a. You are allowed to swap two elements of the permutation at most once. Your task is to maximize the number of fixed points in the resulting permutation. Note that you are allowed to make at most one swap operation.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105). The second line contains n integers a0,\u2009a1,\u2009...,\u2009an\u2009-\u20091 \u2014 the given permutation.OutputPrint a single integer \u2014 the maximum possible number of fixed points in the permutation after at most one swap operation.ExamplesInputCopy50 1 3 4 2OutputCopy3"], "Spider Man": ["https://codeforces.com/problemset/problem/705/B", "B. Spider Mantime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPeter Parker wants to play a game with Dr. Octopus. The game is about cycles. Cycle is a sequence of vertices, such that first one is connected with the second, second is connected with third and so on, while the last one is connected with the first one again. Cycle may consist of a single isolated vertex.Initially there are k cycles, i-th of them consisting of exactly vi vertices. Players play alternatively. Peter goes first. On each turn a player must choose a cycle with at least 2 vertices (for example, x vertices) among all available cycles and replace it by two cycles with p and x\u2009-\u2009p vertices where 1\u2009\u2264\u2009p\u2009<\u2009x is chosen by the player. The player who cannot make a move loses the game (and his life!).Peter wants to test some configurations of initial cycle sets before he actually plays with Dr. Octopus. Initially he has an empty set. In the i-th test he adds a cycle with ai vertices to the set (this is actually a multiset because it can contain two or more identical cycles). After each test, Peter wants to know that if the players begin the game with the current set of cycles, who wins? Peter is pretty good at math, but now he asks you to help.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of tests Peter is about to make.The second line contains n space separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109), i-th of them stands for the number of vertices in the cycle added before the i-th test.OutputPrint the result of all tests in order they are performed. Print 1 if the player who moves first wins or 2 otherwise.ExamplesInputCopy31 2 3OutputCopy211InputCopy51 1 5 1 1OutputCopy22222NoteIn the first sample test:In Peter's first test, there's only one cycle with 1 vertex. First player cannot make a move and loses.In his second test, there's one cycle with 1 vertex and one with 2. No one can make a move on the cycle with 1 vertex. First player can replace the second cycle with two cycles of 1 vertex and second player can't make any move and loses.In his third test, cycles have 1, 2 and 3 vertices. Like last test, no one can make a move on the first cycle. First player can replace the third cycle with one cycle with size 1 and one with size 2. Now cycles have 1, 1, 2, 2 vertices. Second player's only move is to replace a cycle of size 2 with 2 cycles of size 1. And cycles are 1, 1, 1, 1, 2. First player replaces the last cycle with 2 cycles with size 1 and wins.In the second sample test:Having cycles of size 1 is like not having them (because no one can make a move on them). In Peter's third test: There a cycle of size 5 (others don't matter). First player has two options: replace it with cycles of sizes 1 and 4 or 2 and 3.  If he replaces it with cycles of sizes 1 and 4: Only second cycle matters. Second player will replace it with 2 cycles of sizes 2. First player's only option to replace one of them with two cycles of size 1. Second player does the same thing with the other cycle. First player can't make any move and loses.  If he replaces it with cycles of sizes 2 and 3: Second player will replace the cycle of size 3 with two of sizes 1 and 2. Now only cycles with more than one vertex are two cycles of size 2. As shown in previous case, with 2 cycles of size 2 second player wins. So, either way first player loses."], "You Are Given Two Binary Strings...": ["https://codeforces.com/problemset/problem/1202/A", "A. You Are Given Two Binary Strings...time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two binary strings xx and yy, which are binary representations of some two integers (let's denote these integers as f(x)f(x) and f(y)f(y)). You can choose any integer k\u22650k\u22650, calculate the expression sk=f(x)+f(y)\u22c52ksk=f(x)+f(y)\u22c52k and write the binary representation of sksk in reverse order (let's denote it as revkrevk). For example, let x=1010x=1010 and y=11y=11; you've chosen k=1k=1 and, since 21=10221=102, so sk=10102+112\u22c5102=100002sk=10102+112\u22c5102=100002 and revk=00001revk=00001.For given xx and yy, you need to choose such kk that revkrevk is lexicographically minimal (read notes if you don't know what does \"lexicographically\" means).It's guaranteed that, with given constraints, kk exists and is finite.InputThe first line contains a single integer TT (1\u2264T\u22641001\u2264T\u2264100) \u2014 the number of queries.Next 2T2T lines contain a description of queries: two lines per query. The first line contains one binary string xx, consisting of no more than 105105 characters. Each character is either 0 or 1.The second line contains one binary string yy, consisting of no more than 105105 characters. Each character is either 0 or 1.It's guaranteed, that 1\u2264f(y)\u2264f(x)1\u2264f(y)\u2264f(x) (where f(x)f(x) is the integer represented by xx, and f(y)f(y) is the integer represented by yy), both representations don't have any leading zeroes, the total length of xx over all queries doesn't exceed 105105, and the total length of yy over all queries doesn't exceed 105105.OutputPrint TT integers (one per query). For each query print such kk that revkrevk is lexicographically minimal.ExampleInputCopy4\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\nOutputCopy1\n3\n0\n0\nNoteThe first query was described in the legend.In the second query, it's optimal to choose k=3k=3. The 23=1000223=10002 so s3=100012+1102\u22c510002=10001+110000=1000001s3=100012+1102\u22c510002=10001+110000=1000001 and rev3=1000001rev3=1000001. For example, if k=0k=0, then s0=10111s0=10111 and rev0=11101rev0=11101, but rev3=1000001rev3=1000001 is lexicographically smaller than rev0=11101rev0=11101.In the third query s0=10s0=10 and rev0=01rev0=01. For example, s2=101s2=101 and rev2=101rev2=101. And 0101 is lexicographically smaller than 101101.The quote from Wikipedia: \"To determine which of two strings of characters comes when arranging in lexicographical order, their first letters are compared. If they differ, then the string whose first letter comes earlier in the alphabet comes before the other string. If the first letters are the same, then the second letters are compared, and so on. If a position is reached where one string has no more letters to compare while the other does, then the first (shorter) string is deemed to come first in alphabetical order.\""], "The Monster and the Squirrel": ["https://codeforces.com/problemset/problem/592/B", "B. The Monster and the Squirreltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAri the monster always wakes up very early with the first ray of the sun and the first thing she does is feeding her squirrel.Ari draws a regular convex polygon on the floor and numbers it's vertices 1,\u20092,\u2009...,\u2009n in clockwise order. Then starting from the vertex 1 she draws a ray in the direction of each other vertex. The ray stops when it reaches a vertex or intersects with another ray drawn before. Ari repeats this process for vertex 2,\u20093,\u2009...,\u2009n (in this particular order). And then she puts a walnut in each region inside the polygon.  Ada the squirrel wants to collect all the walnuts, but she is not allowed to step on the lines drawn by Ari. That means Ada have to perform a small jump if she wants to go from one region to another. Ada can jump from one region P to another region Q if and only if P and Q share a side or a corner.Assuming that Ada starts from outside of the picture, what is the minimum number of jumps she has to perform in order to collect all the walnuts?InputThe first and only line of the input contains a single integer n (3\u2009\u2264\u2009n\u2009\u2264\u200954321) - the number of vertices of the regular polygon drawn by Ari.OutputPrint the minimum number of jumps Ada should make to collect all the walnuts. Note, that she doesn't need to leave the polygon after.ExamplesInputCopy5OutputCopy9InputCopy3OutputCopy1NoteOne of the possible solutions for the first sample is shown on the picture above."], "Dice Tower": ["https://codeforces.com/problemset/problem/225/A", "A. Dice Towertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA dice is a cube, its faces contain distinct integers from 1 to 6 as black points. The sum of numbers at the opposite dice faces always equals 7. Please note that there are only two dice (these dices are mirror of each other) that satisfy the given constraints (both of them are shown on the picture on the left).  Alice and Bob play dice. Alice has built a tower from n dice. We know that in this tower the adjacent dice contact with faces with distinct numbers. Bob wants to uniquely identify the numbers written on the faces of all dice, from which the tower is built. Unfortunately, Bob is looking at the tower from the face, and so he does not see all the numbers on the faces. Bob sees the number on the top of the tower and the numbers on the two adjacent sides (on the right side of the picture shown what Bob sees).Help Bob, tell whether it is possible to uniquely identify the numbers on the faces of all the dice in the tower, or not.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of dice in the tower.The second line contains an integer x (1\u2009\u2264\u2009x\u2009\u2264\u20096) \u2014 the number Bob sees at the top of the tower. Next n lines contain two space-separated integers each: the i-th line contains numbers ai,\u2009bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u20096;\u00a0ai\u2009\u2260\u2009bi) \u2014 the numbers Bob sees on the two sidelong faces of the i-th dice in the tower.Consider the dice in the tower indexed from top to bottom from 1 to n. That is, the topmost dice has index 1 (the dice whose top face Bob can see). It is guaranteed that it is possible to make a dice tower that will look as described in the input.OutputPrint \"YES\" (without the quotes), if it is possible to to uniquely identify the numbers on the faces of all the dice in the tower. If it is impossible, print \"NO\" (without the quotes).ExamplesInputCopy363 25 42 4OutputCopyYESInputCopy332 64 15 3OutputCopyNO"], "Chess Placing": ["https://codeforces.com/problemset/problem/985/A", "A. Chess Placingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a chessboard of size 1\u2009\u00d7\u2009n. It is guaranteed that n is even. The chessboard is painted like this: \"BWBW...BW\".Some cells of the board are occupied by the chess pieces. Each cell contains no more than one chess piece. It is known that the total number of pieces equals to .In one step you can move one of the pieces one cell to the left or to the right. You cannot move pieces beyond the borders of the board. You also cannot move pieces to the cells that are already occupied.Your task is to place all the pieces in the cells of the same color using the minimum number of moves (all the pieces must occupy only the black cells or only the white cells after all the moves are made).InputThe first line of the input contains one integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100, n is even) \u2014 the size of the chessboard. The second line of the input contains  integer numbers  (1\u2009\u2264\u2009pi\u2009\u2264\u2009n) \u2014 initial positions of the pieces. It is guaranteed that all the positions are distinct.OutputPrint one integer \u2014 the minimum number of moves you have to make to place all the pieces in the cells of the same color.ExamplesInputCopy61 2 6OutputCopy2InputCopy101 2 3 4 5OutputCopy10NoteIn the first example the only possible strategy is to move the piece at the position 6 to the position 5 and move the piece at the position 2 to the position 3. Notice that if you decide to place the pieces in the white cells the minimum number of moves will be 3.In the second example the possible strategy is to move  in 4 moves, then  in 3 moves,  in 2 moves and  in 1 move."], "New Bus Route": ["https://codeforces.com/problemset/problem/792/A", "A. New Bus Routetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n cities situated along the main road of Berland. Cities are represented by their coordinates \u2014 integer numbers a1,\u2009a2,\u2009...,\u2009an. All coordinates are pairwise distinct.It is possible to get from one city to another only by bus. But all buses and roads are very old, so the Minister of Transport decided to build a new bus route. The Minister doesn't want to spend large amounts of money \u2014 he wants to choose two cities in such a way that the distance between them is minimal possible. The distance between two cities is equal to the absolute value of the difference between their coordinates.It is possible that there are multiple pairs of cities with minimal possible distance, so the Minister wants to know the quantity of such pairs. Your task is to write a program that will calculate the minimal possible distance between two pairs of cities and the quantity of pairs which have this distance.InputThe first line contains one integer number n (2\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105).The second line contains n integer numbers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109). All numbers ai are pairwise distinct.OutputPrint two integer numbers \u2014 the minimal distance and the quantity of pairs with this distance.ExamplesInputCopy46 -3 0 4OutputCopy2 1InputCopy3-2 0 2OutputCopy2 2NoteIn the first example the distance between the first city and the fourth city is |4\u2009-\u20096|\u2009=\u20092, and it is the only pair with this distance."], "The Festive Evening": ["https://codeforces.com/problemset/problem/834/B", "B. The Festive Eveningtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard output  It's the end of July\u00a0\u2013 the time when a festive evening is held at Jelly Castle! Guests from all over the kingdom gather here to discuss new trends in the world of confectionery. Yet some of the things discussed here are not supposed to be disclosed to the general public: the information can cause discord in the kingdom of Sweetland in case it turns out to reach the wrong hands. So it's a necessity to not let any uninvited guests in.There are 26 entrances in Jelly Castle, enumerated with uppercase English letters from A to Z. Because of security measures, each guest is known to be assigned an entrance he should enter the castle through. The door of each entrance is opened right before the first guest's arrival and closed right after the arrival of the last guest that should enter the castle through this entrance. No two guests can enter the castle simultaneously.For an entrance to be protected from possible intrusion, a candy guard should be assigned to it. There are k such guards in the castle, so if there are more than k opened doors, one of them is going to be left unguarded! Notice that a guard can't leave his post until the door he is assigned to is closed.Slastyona had a suspicion that there could be uninvited guests at the evening. She knows the order in which the invited guests entered the castle, and wants you to help her check whether there was a moment when more than k doors were opened.InputTwo integers are given in the first string: the number of guests n and the number of guards k (1\u2009\u2264\u2009n\u2009\u2264\u2009106, 1\u2009\u2264\u2009k\u2009\u2264\u200926).In the second string, n uppercase English letters s1s2... sn are given, where si is the entrance used by the i-th guest.OutputOutput \u00abYES\u00bb if at least one door was unguarded during some time, and \u00abNO\u00bb otherwise.You can output each letter in arbitrary case (upper or lower).ExamplesInputCopy5 1AABBBOutputCopyNOInputCopy5 1ABABBOutputCopyYESNoteIn the first sample case, the door A is opened right before the first guest's arrival and closed when the second guest enters the castle. The door B is opened right before the arrival of the third guest, and closed after the fifth one arrives. One guard can handle both doors, as the first one is closed before the second one is opened.In the second sample case, the door B is opened before the second guest's arrival, but the only guard can't leave the door A unattended, as there is still one more guest that should enter the castle through this door. "], "Ilya and Diplomas": ["https://codeforces.com/problemset/problem/557/A", "A. Ilya and Diplomastime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSoon a school Olympiad in Informatics will be held in Berland, n schoolchildren will participate there.At a meeting of the jury of the Olympiad it was decided that each of the n participants, depending on the results, will get a diploma of the first, second or third degree. Thus, each student will receive exactly one diploma.They also decided that there must be given at least min1 and at most max1 diplomas of the first degree, at least min2 and at most max2 diplomas of the second degree, and at least min3 and at most max3 diplomas of the third degree.After some discussion it was decided to choose from all the options of distributing diplomas satisfying these limitations the one that maximizes the number of participants who receive diplomas of the first degree. Of all these options they select the one which maximizes the number of the participants who receive diplomas of the second degree. If there are multiple of these options, they select the option that maximizes the number of diplomas of the third degree.Choosing the best option of distributing certificates was entrusted to Ilya, one of the best programmers of Berland. However, he found more important things to do, so it is your task now to choose the best option of distributing of diplomas, based on the described limitations.It is guaranteed that the described limitations are such that there is a way to choose such an option of distributing diplomas that all n participants of the Olympiad will receive a diploma of some degree.InputThe first line of the input contains a single integer n (3\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7106)\u00a0\u2014\u00a0the number of schoolchildren who will participate in the Olympiad.The next line of the input contains two integers min1 and max1 (1\u2009\u2264\u2009min1\u2009\u2264\u2009max1\u2009\u2264\u2009106)\u00a0\u2014\u00a0the minimum and maximum limits on the number of diplomas of the first degree that can be distributed.The third line of the input contains two integers min2 and max2 (1\u2009\u2264\u2009min2\u2009\u2264\u2009max2\u2009\u2264\u2009106)\u00a0\u2014\u00a0the minimum and maximum limits on the number of diplomas of the second degree that can be distributed. The next line of the input contains two integers min3 and max3 (1\u2009\u2264\u2009min3\u2009\u2264\u2009max3\u2009\u2264\u2009106)\u00a0\u2014\u00a0the minimum and maximum limits on the number of diplomas of the third degree that can be distributed. It is guaranteed that min1\u2009+\u2009min2\u2009+\u2009min3\u2009\u2264\u2009n\u2009\u2264\u2009max1\u2009+\u2009max2\u2009+\u2009max3.OutputIn the first line of the output print three numbers, showing how many diplomas of the first, second and third degree will be given to students in the optimal variant of distributing diplomas.The optimal variant of distributing diplomas is the one that maximizes the number of students who receive diplomas of the first degree. Of all the suitable options, the best one is the one which maximizes the number of participants who receive diplomas of the second degree. If there are several of these options, the best one is the one that maximizes the number of diplomas of the third degree.ExamplesInputCopy61 52 63 7OutputCopy1 2 3 InputCopy101 21 31 5OutputCopy2 3 5 InputCopy61 32 22 2OutputCopy2 2 2 "], "Urbanization": ["https://codeforces.com/problemset/problem/735/B", "B. Urbanizationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLocal authorities have heard a lot about combinatorial abilities of Ostap Bender so they decided to ask his help in the question of urbanization. There are n people who plan to move to the cities. The wealth of the i of them is equal to ai. Authorities plan to build two cities, first for n1 people and second for n2 people. Of course, each of n candidates can settle in only one of the cities. Thus, first some subset of candidates of size n1 settle in the first city and then some subset of size n2 is chosen among the remaining candidates and the move to the second city. All other candidates receive an official refuse and go back home.To make the statistic of local region look better in the eyes of their bosses, local authorities decided to pick subsets of candidates in such a way that the sum of arithmetic mean of wealth of people in each of the cities is as large as possible. Arithmetic mean of wealth in one city is the sum of wealth ai among all its residents divided by the number of them (n1 or n2 depending on the city). The division should be done in real numbers without any rounding.Please, help authorities find the optimal way to pick residents for two cities.InputThe first line of the input contains three integers n, n1 and n2 (1\u2009\u2264\u2009n,\u2009n1,\u2009n2\u2009\u2264\u2009100\u2009000, n1\u2009+\u2009n2\u2009\u2264\u2009n)\u00a0\u2014 the number of candidates who want to move to the cities, the planned number of residents of the first city and the planned number of residents of the second city.The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009100\u2009000), the i-th of them is equal to the wealth of the i-th candidate.OutputPrint one real value\u00a0\u2014 the maximum possible sum of arithmetic means of wealth of cities' residents. You answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. Namely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .ExamplesInputCopy2 1 11 5OutputCopy6.00000000InputCopy4 2 11 4 2 3OutputCopy6.50000000NoteIn the first sample, one of the optimal solutions is to move candidate 1 to the first city and candidate 2 to the second.In the second sample, the optimal solution is to pick candidates 3 and 4 for the first city, and candidate 2 for the second one. Thus we obtain (a3\u2009+\u2009a4)\u2009/\u20092\u2009+\u2009a2\u2009=\u2009(3\u2009+\u20092)\u2009/\u20092\u2009+\u20094\u2009=\u20096.5"], "Rook, Bishop and King": ["https://codeforces.com/problemset/problem/370/A", "A. Rook, Bishop and Kingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya is learning to play chess. He has already learned how to move a king, a rook and a bishop. Let us remind you the rules of moving chess pieces. A chessboard is 64 square fields organized into an 8\u2009\u00d7\u20098 table. A field is represented by a pair of integers (r,\u2009c) \u2014 the number of the row and the number of the column (in a classical game the columns are traditionally indexed by letters). Each chess piece takes up exactly one field. To make a move is to move a chess piece, the pieces move by the following rules:  A rook moves any number of fields horizontally or vertically.  A bishop moves any number of fields diagonally.  A king moves one field in any direction \u2014 horizontally, vertically or diagonally.   The pieces move like that Petya is thinking about the following problem: what minimum number of moves is needed for each of these pieces to move from field (r1,\u2009c1) to field (r2,\u2009c2)? At that, we assume that there are no more pieces besides this one on the board. Help him solve this problem.InputThe input contains four integers r1,\u2009c1,\u2009r2,\u2009c2 (1\u2009\u2264\u2009r1,\u2009c1,\u2009r2,\u2009c2\u2009\u2264\u20098) \u2014 the coordinates of the starting and the final field. The starting field doesn't coincide with the final one.You can assume that the chessboard rows are numbered from top to bottom 1 through 8, and the columns are numbered from left to right 1 through 8.OutputPrint three space-separated integers: the minimum number of moves the rook, the bishop and the king (in this order) is needed to move from field (r1,\u2009c1) to field (r2,\u2009c2). If a piece cannot make such a move, print a 0 instead of the corresponding number.ExamplesInputCopy4 3 1 6OutputCopy2 1 3InputCopy5 5 5 6OutputCopy1 0 1"], "\u041a\u043d\u0438\u0433\u0430 - \u043b\u0443\u0447\u0448\u0438\u0439 \u043f\u043e\u0434\u0430\u0440\u043e\u043a": ["https://codeforces.com/problemset/problem/609/B", "B. The Best Gifttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEmily's birthday is next week and Jack has decided to buy a present for her. He knows she loves books so he goes to the local bookshop, where there are n books on sale from one of m genres.In the bookshop, Jack decides to buy two books of different genres.Based on the genre of books on sale in the shop, find the number of options available to Jack for choosing two books of different genres for Emily. Options are considered different if they differ in at least one book.The books are given by indices of their genres. The genres are numbered from 1 to m.InputThe first line contains two positive integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105,\u20092\u2009\u2264\u2009m\u2009\u2264\u200910) \u2014 the number of books in the bookstore and the number of genres.The second line contains a sequence a1,\u2009a2,\u2009...,\u2009an, where ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009m) equals the genre of the i-th book.It is guaranteed that for each genre there is at least one book of that genre.OutputPrint the only integer \u2014 the number of ways in which Jack can choose books.It is guaranteed that the answer doesn't exceed the value 2\u00b7109.ExamplesInputCopy4 32 1 3 1OutputCopy5InputCopy7 44 2 3 1 2 4 3OutputCopy18NoteThe answer to the first test sample equals 5 as Sasha can choose:  the first and second books,  the first and third books,  the first and fourth books,  the second and third books,  the third and fourth books. "], "Square Difference": ["https://codeforces.com/problemset/problem/1033/B", "B. Square Differencetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice has a lovely piece of cloth. It has the shape of a square with a side of length aa centimeters. Bob also wants such piece of cloth. He would prefer a square with a side of length bb centimeters (where b<ab<a). Alice wanted to make Bob happy, so she cut the needed square out of the corner of her piece and gave it to Bob. Now she is left with an ugly L shaped cloth (see pictures below).Alice would like to know whether the area of her cloth expressed in square centimeters is prime. Could you help her to determine it?InputThe first line contains a number tt\u00a0(1\u2264t\u226451\u2264t\u22645)\u00a0\u2014 the number of test cases.Each of the next tt lines describes the ii-th test case. It contains two integers aa and b\u00a0(1\u2264b<a\u22641011)b\u00a0(1\u2264b<a\u22641011)\u00a0\u2014 the side length of Alice's square and the side length of the square that Bob wants.OutputPrint tt lines, where the ii-th line is the answer to the ii-th test case. Print \"YES\" (without quotes) if the area of the remaining piece of cloth is prime, otherwise print \"NO\".You can print each letter in an arbitrary case (upper or lower).ExampleInputCopy46 516 1361690850361 2477762263034 33OutputCopyYESNONOYESNoteThe figure below depicts the first test case. The blue part corresponds to the piece which belongs to Bob, and the red part is the piece that Alice keeps for herself. The area of the red part is 62\u221252=36\u221225=1162\u221252=36\u221225=11, which is prime, so the answer is \"YES\".  In the second case, the area is 162\u2212132=87162\u2212132=87, which is divisible by 33.  In the third case, the area of the remaining piece is 616908503612\u2212247776226302=3191830435068605713421616908503612\u2212247776226302=3191830435068605713421. This number is not prime because 3191830435068605713421=36913227731\u22c5864684729913191830435068605713421=36913227731\u22c586468472991.In the last case, the area is 342\u2212332=67342\u2212332=67."], "Photo to Remember": ["https://codeforces.com/problemset/problem/522/B", "B. Photo to Remembertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day n friends met at a party, they hadn't seen each other for a long time and so they decided to make a group photo together. Simply speaking, the process of taking photos can be described as follows. On the photo, each photographed friend occupies a rectangle of pixels: the i-th of them occupies the rectangle of width wi pixels and height hi pixels. On the group photo everybody stands in a line, thus the minimum pixel size of the photo including all the photographed friends, is W\u2009\u00d7\u2009H, where W is the total sum of all widths and H is the maximum height of all the photographed friends.As is usually the case, the friends made n photos \u2014 the j-th (1\u2009\u2264\u2009j\u2009\u2264\u2009n) photo had everybody except for the j-th friend as he was the photographer.Print the minimum size of each made photo in pixels. InputThe first line contains integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000) \u2014 the number of friends. Then n lines follow: the i-th line contains information about the i-th friend. The line contains a pair of integers wi,\u2009hi (1\u2009\u2264\u2009wi\u2009\u2264\u200910,\u20091\u2009\u2264\u2009hi\u2009\u2264\u20091000) \u2014 the width and height in pixels of the corresponding rectangle.OutputPrint n space-separated numbers b1,\u2009b2,\u2009...,\u2009bn, where bi \u2014 the total number of pixels on the minimum photo containing all friends expect for the i-th one.ExamplesInputCopy31 105 510 1OutputCopy75 110 60 InputCopy32 11 22 1OutputCopy6 4 6 "], "Hexagons!": ["https://codeforces.com/problemset/problem/630/D", "D. Hexagons!time limit per test0.5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputAfter a probationary period in the game development company of IT City Petya was included in a group of the programmers that develops a new turn-based strategy game resembling the well known \"Heroes of Might & Magic\". A part of the game is turn-based fights of big squadrons of enemies on infinite fields where every cell is in form of a hexagon.Some of magic effects are able to affect several field cells at once, cells that are situated not farther than n cells away from the cell in which the effect was applied. The distance between cells is the minimum number of cell border crosses on a path from one cell to another.It is easy to see that the number of cells affected by a magic effect grows rapidly when n increases, so it can adversely affect the game performance. That's why Petya decided to write a program that can, given n, determine the number of cells that should be repainted after effect application, so that game designers can balance scale of the effects and the game performance. Help him to do it. Find the number of hexagons situated not farther than n cells away from a given cell.  InputThe only line of the input contains one integer n (0\u2009\u2264\u2009n\u2009\u2264\u2009109).OutputOutput one integer \u2014 the number of hexagons situated not farther than n cells away from a given cell.ExamplesInputCopy2OutputCopy19"], "Two Bases": ["https://codeforces.com/problemset/problem/602/A", "A. Two Basestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter seeing the \"ALL YOUR BASE ARE BELONG TO US\" meme for the first time, numbers X and Y realised that they have different bases, which complicated their relations.You're given a number X represented in base bx and a number Y represented in base by. Compare those two numbers.InputThe first line of the input contains two space-separated integers n and bx (1\u2009\u2264\u2009n\u2009\u2264\u200910, 2\u2009\u2264\u2009bx\u2009\u2264\u200940), where n is the number of digits in the bx-based representation of X. The second line contains n space-separated integers x1,\u2009x2,\u2009...,\u2009xn (0\u2009\u2264\u2009xi\u2009<\u2009bx) \u2014 the digits of X. They are given in the order from the most significant digit to the least significant one.The following two lines describe Y in the same way: the third line contains two space-separated integers m and by (1\u2009\u2264\u2009m\u2009\u2264\u200910, 2\u2009\u2264\u2009by\u2009\u2264\u200940, bx\u2009\u2260\u2009by), where m is the number of digits in the by-based representation of Y, and the fourth line contains m space-separated integers y1,\u2009y2,\u2009...,\u2009ym (0\u2009\u2264\u2009yi\u2009<\u2009by) \u2014 the digits of Y.There will be no leading zeroes. Both X and Y will be positive. All digits of both numbers are given in the standard decimal numeral system.OutputOutput a single character (quotes for clarity):   '<' if X\u2009<\u2009Y  '>' if X\u2009>\u2009Y  '=' if X\u2009=\u2009Y ExamplesInputCopy6 21 0 1 1 1 12 104 7OutputCopy=InputCopy3 31 0 22 52 4OutputCopy<InputCopy7 1615 15 4 0 0 7 107 94 8 0 3 1 5 0OutputCopy>NoteIn the first sample, X\u2009=\u20091011112\u2009=\u20094710\u2009=\u2009Y.In the second sample, X\u2009=\u20091023\u2009=\u2009215 and Y\u2009=\u2009245\u2009=\u20091123, thus X\u2009<\u2009Y.In the third sample,  and Y\u2009=\u200948031509. We may notice that X starts with much larger digits and bx is much larger than by, so X is clearly larger than Y."], "Digital Counter": ["https://codeforces.com/problemset/problem/495/A", "A. Digital Countertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMalek lives in an apartment block with 100 floors numbered from 0 to 99. The apartment has an elevator with a digital counter showing the floor that the elevator is currently on. The elevator shows each digit of a number with 7 light sticks by turning them on or off. The picture below shows how the elevator shows each digit.One day when Malek wanted to go from floor 88 to floor 0 using the elevator he noticed that the counter shows number 89 instead of 88. Then when the elevator started moving the number on the counter changed to 87. After a little thinking Malek came to the conclusion that there is only one explanation for this: One of the sticks of the counter was broken. Later that day Malek was thinking about the broken stick and suddenly he came up with the following problem.Suppose the digital counter is showing number n. Malek calls an integer x (0\u2009\u2264\u2009x\u2009\u2264\u200999) good if it's possible that the digital counter was supposed to show x but because of some(possibly none) broken sticks it's showing n instead. Malek wants to know number of good integers for a specific n. So you must write a program that calculates this number. Please note that the counter always shows two digits.InputThe only line of input contains exactly two digits representing number n (0\u2009\u2264\u2009n\u2009\u2264\u200999). Note that n may have a leading zero.OutputIn the only line of the output print the number of good integers.ExamplesInputCopy89OutputCopy2InputCopy00OutputCopy4InputCopy73OutputCopy15NoteIn the first sample the counter may be supposed to show 88 or 89.In the second sample the good integers are 00, 08, 80 and 88.In the third sample the good integers are 03,\u200908,\u200909,\u200933,\u200938,\u200939,\u200973,\u200978,\u200979,\u200983,\u200988,\u200989,\u200993,\u200998,\u200999."], "Coupons and Discounts": ["https://codeforces.com/problemset/problem/731/B", "B. Coupons and Discountstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe programming competition season has already started and it's time to train for ICPC. Sereja coaches his teams for a number of year and he knows that to get ready for the training session it's not enough to prepare only problems and editorial. As the training sessions lasts for several hours, teams become hungry. Thus, Sereja orders a number of pizzas so they can eat right after the end of the competition.Teams plan to train for n times during n consecutive days. During the training session Sereja orders exactly one pizza for each team that is present this day. He already knows that there will be ai teams on the i-th day.There are two types of discounts in Sereja's favourite pizzeria. The first discount works if one buys two pizzas at one day, while the second is a coupon that allows to buy one pizza during two consecutive days (two pizzas in total).As Sereja orders really a lot of pizza at this place, he is the golden client and can use the unlimited number of discounts and coupons of any type at any days.Sereja wants to order exactly ai pizzas on the i-th day while using only discounts and coupons. Note, that he will never buy more pizzas than he need for this particular day. Help him determine, whether he can buy the proper amount of pizzas each day if he is allowed to use only coupons and discounts. Note, that it's also prohibited to have any active coupons after the end of the day n.InputThe first line of input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of training sessions.The second line contains n integers a1, a2, ..., an (0\u2009\u2264\u2009ai\u2009\u2264\u200910\u2009000)\u00a0\u2014 the number of teams that will be present on each of the days.OutputIf there is a way to order pizzas using only coupons and discounts and do not buy any extra pizzas on any of the days, then print \"YES\" (without quotes) in the only line of output. Otherwise, print \"NO\" (without quotes).ExamplesInputCopy41 2 1 2OutputCopyYESInputCopy31 0 1OutputCopyNONoteIn the first sample, Sereja can use one coupon to buy one pizza on the first and the second days, one coupon to buy pizza on the second and the third days and one discount to buy pizzas on the fourth days. This is the only way to order pizzas for this sample.In the second sample, Sereja can't use neither the coupon nor the discount without ordering an extra pizza. Note, that it's possible that there will be no teams attending the training sessions on some days."], "Case of Fake Numbers": ["https://codeforces.com/problemset/problem/556/B", "B. Case of Fake Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAndrewid the Android is a galaxy-famous detective. He is now investigating a case of frauds who make fake copies of the famous Stolp's gears, puzzles that are as famous as the Rubik's cube once was.Its most important components are a button and a line of n similar gears. Each gear has n teeth containing all numbers from 0 to n\u2009-\u20091 in the counter-clockwise order. When you push a button, the first gear rotates clockwise, then the second gear rotates counter-clockwise, the the third gear rotates clockwise an so on.Besides, each gear has exactly one active tooth. When a gear turns, a new active tooth is the one following after the current active tooth according to the direction of the rotation. For example, if n\u2009=\u20095, and the active tooth is the one containing number 0, then clockwise rotation makes the tooth with number 1 active, or the counter-clockwise rotating makes the tooth number 4 active.Andrewid remembers that the real puzzle has the following property: you can push the button multiple times in such a way that in the end the numbers on the active teeth of the gears from first to last form sequence 0,\u20091,\u20092,\u2009...,\u2009n\u2009-\u20091. Write a program that determines whether the given puzzle is real or fake.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000) \u2014 the number of gears.The second line contains n digits a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009n\u2009-\u20091) \u2014 the sequence of active teeth: the active tooth of the i-th gear contains number ai.OutputIn a single line print \"Yes\" (without the quotes), if the given Stolp's gears puzzle is real, and \"No\" (without the quotes) otherwise.ExamplesInputCopy31 0 0OutputCopyYesInputCopy54 2 1 4 3OutputCopyYesInputCopy40 2 3 1OutputCopyNoNoteIn the first sample test when you push the button for the first time, the sequence of active teeth will be 2 2 1, when you push it for the second time, you get 0 1 2."], "Phone numbers": ["https://codeforces.com/problemset/problem/25/B", "B. Phone numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPhone number in Berland is a sequence of n digits. Often, to make it easier to memorize the number, it is divided into groups of two or three digits. For example, the phone number 1198733 is easier to remember as 11-987-33. Your task is to find for a given phone number any of its divisions into groups of two or three digits.InputThe first line contains integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 amount of digits in the phone number. The second line contains n digits \u2014 the phone number to divide into groups.OutputOutput any of divisions of the given phone number into groups of two or three digits. Separate groups by single character -. If the answer is not unique, output any.ExamplesInputCopy6549871OutputCopy54-98-71InputCopy71198733OutputCopy11-987-33"], "Far Relative\u2019s Problem": ["https://codeforces.com/problemset/problem/629/B", "B. Far Relative\u2019s Problemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputFamil Door wants to celebrate his birthday with his friends from Far Far Away. He has n friends and each of them can come to the party in a specific range of days of the year from ai to bi. Of course, Famil Door wants to have as many friends celebrating together with him as possible.Far cars are as weird as Far Far Away citizens, so they can only carry two people of opposite gender, that is exactly one male and one female. However, Far is so far from here that no other transportation may be used to get to the party.Famil Door should select some day of the year and invite some of his friends, such that they all are available at this moment and the number of male friends invited is equal to the number of female friends invited. Find the maximum number of friends that may present at the party.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095000)\u00a0\u2014 then number of Famil Door's friends.Then follow n lines, that describe the friends. Each line starts with a capital letter 'F' for female friends and with a capital letter 'M' for male friends. Then follow two integers ai and bi (1\u2009\u2264\u2009ai\u2009\u2264\u2009bi\u2009\u2264\u2009366), providing that the i-th friend can come to the party from day ai to day bi inclusive.OutputPrint the maximum number of people that may come to Famil Door's party.ExamplesInputCopy4M 151 307F 343 352F 117 145M 24 128OutputCopy2InputCopy6M 128 130F 128 131F 131 140F 131 141M 131 200M 140 200OutputCopy4NoteIn the first sample, friends 3 and 4 can come on any day in range [117,\u2009128].In the second sample, friends with indices 3, 4, 5 and 6 can come on day 140."], "Guess the Permutation": ["https://codeforces.com/problemset/problem/618/B", "B. Guess the Permutationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBob has a permutation of integers from 1 to n. Denote this permutation as p. The i-th element of p will be denoted as pi. For all pairs of distinct integers i,\u2009j between 1 and n, he wrote the number ai,\u2009j\u2009=\u2009min(pi,\u2009pj). He writes ai,\u2009i\u2009=\u20090 for all integer i from 1 to n.Bob gave you all the values of ai,\u2009j that he wrote down. Your job is to reconstruct any permutation that could have generated these values. The input will be formed so that it is guaranteed that there is at least one solution that is consistent with the information given.InputThe first line of the input will contain a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u200950).The next n lines will contain the values of ai,\u2009j. The j-th number on the i-th line will represent ai,\u2009j. The i-th number on the i-th line will be 0. It's guaranteed that ai,\u2009j\u2009=\u2009aj,\u2009i and there is at least one solution consistent with the information given.OutputPrint n space separated integers, which represents a permutation that could have generated these values. If there are multiple possible solutions, print any of them.ExamplesInputCopy20 11 0OutputCopy2 1InputCopy50 2 2 1 22 0 4 1 32 4 0 1 31 1 1 0 12 3 3 1 0OutputCopy2 5 4 1 3NoteIn the first case, the answer can be {1,\u20092} or {2,\u20091}.In the second case, another possible answer is {2,\u20094,\u20095,\u20091,\u20093}."], "Lucky Sum": ["https://codeforces.com/problemset/problem/121/A", "A. Lucky Sumtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.Let next(x) be the minimum lucky number which is larger than or equals x. Petya is interested what is the value of the expression next(l)\u2009+\u2009next(l\u2009+\u20091)\u2009+\u2009...\u2009+\u2009next(r\u2009-\u20091)\u2009+\u2009next(r). Help him solve this problem.InputThe single line contains two integers l and r (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009109) \u2014 the left and right interval limits.OutputIn the single line print the only number \u2014 the sum next(l)\u2009+\u2009next(l\u2009+\u20091)\u2009+\u2009...\u2009+\u2009next(r\u2009-\u20091)\u2009+\u2009next(r).Please do not use the %lld specificator to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specificator.ExamplesInputCopy2 7OutputCopy33InputCopy7 7OutputCopy7NoteIn the first sample: next(2)\u2009+\u2009next(3)\u2009+\u2009next(4)\u2009+\u2009next(5)\u2009+\u2009next(6)\u2009+\u2009next(7)\u2009=\u20094\u2009+\u20094\u2009+\u20094\u2009+\u20097\u2009+\u20097\u2009+\u20097\u2009=\u200933In the second sample: next(7)\u2009=\u20097"], "Little Robber Girl's Zoo": ["https://codeforces.com/problemset/problem/686/B", "B. Little Robber Girl's Zootime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Robber Girl likes to scare animals in her zoo for fun. She decided to arrange the animals in a row in the order of non-decreasing height. However, the animals were so scared that they couldn't stay in the right places.The robber girl was angry at first, but then she decided to arrange the animals herself. She repeatedly names numbers l and r such that r\u2009-\u2009l\u2009+\u20091 is even. After that animals that occupy positions between l and r inclusively are rearranged as follows: the animal at position l swaps places with the animal at position l\u2009+\u20091, the animal l\u2009+\u20092 swaps with the animal l\u2009+\u20093, ..., finally, the animal at position r\u2009-\u20091 swaps with the animal r.Help the robber girl to arrange the animals in the order of non-decreasing height. You should name at most 20\u2009000 segments, since otherwise the robber girl will become bored and will start scaring the animals again.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 number of animals in the robber girl's zoo.The second line contains n space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109), where ai is the height of the animal occupying the i-th place.OutputPrint the sequence of operations that will rearrange the animals by non-decreasing height.The output should contain several lines, i-th of the lines should contain two space-separated integers li and ri (1\u2009\u2264\u2009li\u2009<\u2009ri\u2009\u2264\u2009n)\u00a0\u2014 descriptions of segments the robber girl should name. The segments should be described in the order the operations are performed.The number of operations should not exceed 20\u2009000.If the animals are arranged correctly from the start, you are allowed to output nothing.ExamplesInputCopy42 1 4 3OutputCopy1 4InputCopy736 28 57 39 66 69 68OutputCopy1 46 7InputCopy51 2 1 2 1OutputCopy2 53 41 41 4NoteNote that you don't have to minimize the number of operations. Any solution that performs at most 20\u2009000 operations is allowed."], "Making a String": ["https://codeforces.com/problemset/problem/624/B", "B. Making a Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an alphabet consisting of n letters, your task is to make a string of the maximum possible length so that the following conditions are satisfied:   the i-th letter occurs in the string no more than ai times;  the number of occurrences of each letter in the string must be distinct for all the letters that occurred in the string at least once. InputThe first line of the input contains a single integer n (2\u2009\u2009\u2264\u2009\u2009n\u2009\u2009\u2264\u2009\u200926)\u00a0\u2014 the number of letters in the alphabet.The next line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 i-th of these integers gives the limitation on the number of occurrences of the i-th character in the string.OutputPrint a single integer \u2014 the maximum length of the string that meets all the requirements.ExamplesInputCopy32 5 5OutputCopy11InputCopy31 1 2OutputCopy3NoteFor convenience let's consider an alphabet consisting of three letters: \"a\", \"b\", \"c\". In the first sample, some of the optimal strings are: \"cccaabbccbb\", \"aabcbcbcbcb\". In the second sample some of the optimal strings are: \"acc\", \"cbc\"."], "Intercepted Message": ["https://codeforces.com/problemset/problem/950/B", "B. Intercepted Messagetime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputHacker Zhorik wants to decipher two secret messages he intercepted yesterday. Yeah message is a sequence of encrypted blocks, each of them consists of several bytes of information.Zhorik knows that each of the messages is an archive containing one or more files. Zhorik knows how each of these archives was transferred through the network: if an archive consists of k files of sizes l1,\u2009l2,\u2009...,\u2009lk bytes, then the i-th file is split to one or more blocks bi,\u20091,\u2009bi,\u20092,\u2009...,\u2009bi,\u2009mi (here the total length of the blocks bi,\u20091\u2009+\u2009bi,\u20092\u2009+\u2009...\u2009+\u2009bi,\u2009mi is equal to the length of the file li), and after that all blocks are transferred through the network, maintaining the order of files in the archive.Zhorik thinks that the two messages contain the same archive, because their total lengths are equal. However, each file can be split in blocks in different ways in the two messages.You are given the lengths of blocks in each of the two messages. Help Zhorik to determine what is the maximum number of files could be in the archive, if the Zhorik's assumption is correct.InputThe first line contains two integers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the number of blocks in the first and in the second messages.The second line contains n integers x1,\u2009x2,\u2009...,\u2009xn (1\u2009\u2264\u2009xi\u2009\u2264\u2009106) \u2014 the length of the blocks that form the first message.The third line contains m integers y1,\u2009y2,\u2009...,\u2009ym (1\u2009\u2264\u2009yi\u2009\u2264\u2009106) \u2014 the length of the blocks that form the second message.It is guaranteed that x1\u2009+\u2009...\u2009+\u2009xn\u2009=\u2009y1\u2009+\u2009...\u2009+\u2009ym. Also, it is guaranteed that x1\u2009+\u2009...\u2009+\u2009xn\u2009\u2264\u2009106.OutputPrint the maximum number of files the intercepted array could consist of.ExamplesInputCopy7 62 5 3 1 11 4 47 8 2 4 1 8OutputCopy3InputCopy3 31 10 1001 100 10OutputCopy2InputCopy1 441 1 1 1OutputCopy1NoteIn the first example the maximum number of files in the archive is 3. For example, it is possible that in the archive are three files of sizes 2\u2009+\u20095\u2009=\u20097, 15\u2009=\u20093\u2009+\u20091\u2009+\u200911\u2009=\u20098\u2009+\u20092\u2009+\u20094\u2009+\u20091 and 4\u2009+\u20094\u2009=\u20098.In the second example it is possible that the archive contains two files of sizes 1 and 110\u2009=\u200910\u2009+\u2009100\u2009=\u2009100\u2009+\u200910. Note that the order of files is kept while transferring archives through the network, so we can't say that there are three files of sizes 1, 10 and 100.In the third example the only possibility is that the archive contains a single file of size 4."], "k-rounding": ["https://codeforces.com/problemset/problem/858/A", "A. k-roundingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFor a given positive integer n denote its k-rounding as the minimum positive integer x, such that x ends with k or more zeros in base 10 and is divisible by n.For example, 4-rounding of 375 is 375\u00b780\u2009=\u200930000. 30000 is the minimum integer such that it ends with 4 or more zeros and is divisible by 375.Write a program that will perform the k-rounding of n.InputThe only line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009109, 0\u2009\u2264\u2009k\u2009\u2264\u20098).OutputPrint the k-rounding of n.ExamplesInputCopy375 4OutputCopy30000InputCopy10000 1OutputCopy10000InputCopy38101 0OutputCopy38101InputCopy123456789 8OutputCopy12345678900000000"], "Chess Tourney": ["https://codeforces.com/problemset/problem/845/A", "A. Chess Tourneytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBerland annual chess tournament is coming!Organizers have gathered 2\u00b7n chess players who should be divided into two teams with n people each. The first team is sponsored by BerOil and the second team is sponsored by BerMobile. Obviously, organizers should guarantee the win for the team of BerOil.Thus, organizers should divide all 2\u00b7n players into two teams with n people each in such a way that the first team always wins.Every chess player has its rating ri. It is known that chess player with the greater rating always wins the player with the lower rating. If their ratings are equal then any of the players can win.After teams assignment there will come a drawing to form n pairs of opponents: in each pair there is a player from the first team and a player from the second team. Every chess player should be in exactly one pair. Every pair plays once. The drawing is totally random.Is it possible to divide all 2\u00b7n players into two teams with n people each so that the player from the first team in every pair wins regardless of the results of the drawing?InputThe first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100).The second line contains 2\u00b7n integers a1,\u2009a2,\u2009... a2n (1\u2009\u2264\u2009ai\u2009\u2264\u20091000).OutputIf it's possible to divide all 2\u00b7n players into two teams with n people each so that the player from the first team in every pair wins regardless of the results of the drawing, then print \"YES\". Otherwise print \"NO\".ExamplesInputCopy21 3 2 4OutputCopyYESInputCopy13 3OutputCopyNO"], "Pasha and Pixels": ["https://codeforces.com/problemset/problem/508/A", "A. Pasha and Pixelstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPasha loves his phone and also putting his hair up... But the hair is now irrelevant.Pasha has installed a new game to his phone. The goal of the game is following. There is a rectangular field consisting of n row with m pixels in each row. Initially, all the pixels are colored white. In one move, Pasha can choose any pixel and color it black. In particular, he can choose the pixel that is already black, then after the boy's move the pixel does not change, that is, it remains black. Pasha loses the game when a 2\u2009\u00d7\u20092 square consisting of black pixels is formed. Pasha has made a plan of k moves, according to which he will paint pixels. Each turn in his plan is represented as a pair of numbers i and j, denoting respectively the row and the column of the pixel to be colored on the current move.Determine whether Pasha loses if he acts in accordance with his plan, and if he does, on what move the 2\u2009\u00d7\u20092 square consisting of black pixels is formed.InputThe first line of the input contains three integers n,\u2009m,\u2009k (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000, 1\u2009\u2264\u2009k\u2009\u2264\u2009105)\u00a0\u2014 the number of rows, the number of columns and the number of moves that Pasha is going to perform. The next k lines contain Pasha's moves in the order he makes them. Each line contains two integers i and j (1\u2009\u2264\u2009i\u2009\u2264\u2009n, 1\u2009\u2264\u2009j\u2009\u2264\u2009m), representing the row number and column number of the pixel that was painted during a move.OutputIf Pasha loses, print the number of the move when the 2\u2009\u00d7\u20092 square consisting of black pixels is formed.If Pasha doesn't lose, that is, no 2\u2009\u00d7\u20092 square consisting of black pixels is formed during the given k moves, print 0.ExamplesInputCopy2 2 41 11 22 12 2OutputCopy4InputCopy2 3 62 32 21 32 21 21 1OutputCopy5InputCopy5 3 72 31 21 14 13 15 33 2OutputCopy0"], "Pouring Rain": ["https://codeforces.com/problemset/problem/667/A", "A. Pouring Raintime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA lot of people in Berland hates rain, but you do not. Rain pacifies, puts your thoughts in order. By these years you have developed a good tradition \u2014 when it rains, you go on the street and stay silent for a moment, contemplate all around you, enjoy freshness, think about big deeds you have to do. Today everything had changed quietly. You went on the street with a cup contained water, your favorite drink. In a moment when you were drinking a water you noticed that the process became quite long: the cup still contained water because of rain. You decided to make a formal model of what was happening and to find if it was possible to drink all water in that situation. Thus, your cup is a cylinder with diameter equals d centimeters. Initial level of water in cup equals h centimeters from the bottom.   You drink a water with a speed equals v milliliters per second. But rain goes with such speed that if you do not drink a water from the cup, the level of water increases on e centimeters per second. The process of drinking water from the cup and the addition of rain to the cup goes evenly and continuously. Find the time needed to make the cup empty or find that it will never happen. It is guaranteed that if it is possible to drink all water, it will happen not later than after 104 seconds.Note one milliliter equals to one cubic centimeter.InputThe only line of the input contains four integer numbers d,\u2009h,\u2009v,\u2009e (1\u2009\u2264\u2009d,\u2009h,\u2009v,\u2009e\u2009\u2264\u2009104), where:  d \u2014 the diameter of your cylindrical cup,  h \u2014 the initial level of water in the cup,  v \u2014 the speed of drinking process from the cup in milliliters per second,  e \u2014 the growth of water because of rain if you do not drink from the cup. OutputIf it is impossible to make the cup empty, print \"NO\" (without quotes).Otherwise print \"YES\" (without quotes) in the first line. In the second line print a real number \u2014 time in seconds needed the cup will be empty. The answer will be considered correct if its relative or absolute error doesn't exceed 10\u2009-\u20094. It is guaranteed that if the answer exists, it doesn't exceed 104.ExamplesInputCopy1 2 3 100OutputCopyNOInputCopy1 1 1 1OutputCopyYES3.659792366325NoteIn the first example the water fills the cup faster than you can drink from it.In the second example area of the cup's bottom equals to , thus we can conclude that you decrease the level of water by  centimeters per second. At the same time water level increases by 1 centimeter per second due to rain. Thus, cup will be empty in  seconds."], "Minesweeper": ["https://codeforces.com/problemset/problem/984/B", "B. Minesweepertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Alex decided to remember childhood when computers were not too powerful and lots of people played only default games. Alex enjoyed playing Minesweeper that time. He imagined that he saved world from bombs planted by terrorists, but he rarely won.Alex has grown up since then, so he easily wins the most difficult levels. This quickly bored him, and he thought: what if the computer gave him invalid fields in the childhood and Alex could not win because of it?He needs your help to check it.A Minesweeper field is a rectangle n\u00d7mn\u00d7m, where each cell is either empty, or contains a digit from 11 to 88, or a bomb. The field is valid if for each cell:   if there is a digit kk in the cell, then exactly kk neighboring cells have bombs.  if the cell is empty, then all neighboring cells have no bombs. Two cells are neighbors if they have a common side or a corner (i.\u00a0e. a cell has at most 88 neighboring cells).InputThe first line contains two integers nn and mm (1\u2264n,m\u22641001\u2264n,m\u2264100) \u2014 the sizes of the field.The next nn lines contain the description of the field. Each line contains mm characters, each of them is \".\" (if this cell is empty), \"*\" (if there is bomb in this cell), or a digit from 11 to 88, inclusive.OutputPrint \"YES\", if the field is valid and \"NO\" otherwise.You can choose the case (lower or upper) for each letter arbitrarily.ExamplesInputCopy3 31111*1111OutputCopyYESInputCopy2 4*.*.1211OutputCopyNONoteIn the second example the answer is \"NO\" because, if the positions of the bombs are preserved, the first line of the field should be *2*1.You can read more about Minesweeper in Wikipedia's article."], "Vicious Keyboard": ["https://codeforces.com/problemset/problem/801/A", "A. Vicious Keyboardtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTonio has a keyboard with only two letters, \"V\" and \"K\".One day, he has typed out a string s with only these two letters. He really likes it when the string \"VK\" appears, so he wishes to change at most one letter in the string (or do no changes) to maximize the number of occurrences of that string. Compute the maximum number of times \"VK\" can appear as a substring (i.\u00a0e. a letter \"K\" right after a letter \"V\") in the resulting string.InputThe first line will contain a string s consisting only of uppercase English letters \"V\" and \"K\" with length not less than 1 and not greater than 100.OutputOutput a single integer, the maximum number of times \"VK\" can appear as a substring of the given string after changing at most one character.ExamplesInputCopyVKOutputCopy1InputCopyVVOutputCopy1InputCopyVOutputCopy0InputCopyVKKKKKKKKKVVVVVVVVVKOutputCopy3InputCopyKVKVOutputCopy1NoteFor the first case, we do not change any letters. \"VK\" appears once, which is the maximum number of times it could appear.For the second case, we can change the second character from a \"V\" to a \"K\". This will give us the string \"VK\". This has one occurrence of the string \"VK\" as a substring.For the fourth case, we can change the fourth character from a \"K\" to a \"V\". This will give us the string \"VKKVKKKKKKVVVVVVVVVK\". This has three occurrences of the string \"VK\" as a substring. We can check no other moves can give us strictly more occurrences."], "Wilbur and Swimming Pool": ["https://codeforces.com/problemset/problem/596/A", "A. Wilbur and Swimming Pooltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter making bad dives into swimming pools, Wilbur wants to build a swimming pool in the shape of a rectangle in his backyard. He has set up coordinate axes, and he wants the sides of the rectangle to be parallel to them. Of course, the area of the rectangle must be positive. Wilbur had all four vertices of the planned pool written on a paper, until his friend came along and erased some of the vertices.Now Wilbur is wondering, if the remaining n vertices of the initial rectangle give enough information to restore the area of the planned swimming pool.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20094)\u00a0\u2014 the number of vertices that were not erased by Wilbur's friend.Each of the following n lines contains two integers xi and yi (\u2009-\u20091000\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u20091000)\u00a0\u2014the coordinates of the i-th vertex that remains. Vertices are given in an arbitrary order.It's guaranteed that these points are distinct vertices of some rectangle, that has positive area and which sides are parallel to the coordinate axes.OutputPrint the area of the initial rectangle if it could be uniquely determined by the points remaining. Otherwise, print \u2009-\u20091. ExamplesInputCopy20 01 1OutputCopy1InputCopy11 1OutputCopy-1NoteIn the first sample, two opposite corners of the initial rectangle are given, and that gives enough information to say that the rectangle is actually a unit square.In the second sample there is only one vertex left and this is definitely not enough to uniquely define the area."], "Hate \"A\"": ["https://codeforces.com/problemset/problem/1146/B", "B. Hate \"A\"time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBob has a string ss consisting of lowercase English letters. He defines s\u2032s\u2032 to be the string after removing all \"a\" characters from ss (keeping all other characters in the same order). He then generates a new string tt by concatenating ss and s\u2032s\u2032. In other words, t=s+s\u2032t=s+s\u2032 (look at notes for an example).You are given a string tt. Your task is to find some ss that Bob could have used to generate tt. It can be shown that if an answer exists, it will be unique.InputThe first line of input contains a string tt (1\u2264|t|\u22641051\u2264|t|\u2264105) consisting of lowercase English letters.OutputPrint a string ss that could have generated tt. It can be shown if an answer exists, it is unique. If no string exists, print \":(\" (without double quotes, there is no space between the characters).ExamplesInputCopyaaaaa\nOutputCopyaaaaa\nInputCopyaacaababc\nOutputCopy:(\nInputCopyababacacbbcc\nOutputCopyababacac\nInputCopybaba\nOutputCopy:(\nNoteIn the first example, we have s=s= \"aaaaa\", and s\u2032=s\u2032= \"\".In the second example, no such ss can work that will generate the given tt.In the third example, we have s=s= \"ababacac\", and s\u2032=s\u2032= \"bbcc\", and t=s+s\u2032=t=s+s\u2032= \"ababacacbbcc\"."], "Technogoblet of Fire": ["https://codeforces.com/problemset/problem/1121/A", "A. Technogoblet of Firetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputEverybody knows that the mm-coder Tournament will happen soon. mm schools participate in the tournament, and only one student from each school participates.There are a total of nn students in those schools. Before the tournament, all students put their names and the names of their schools into the Technogoblet of Fire. After that, Technogoblet selects the strongest student from each school to participate. Arkady is a hacker who wants to have kk Chosen Ones selected by the Technogoblet. Unfortunately, not all of them are the strongest in their schools, but Arkady can make up some new school names and replace some names from Technogoblet with those. You can't use each made-up name more than once. In that case, Technogoblet would select the strongest student in those made-up schools too.You know the power of each student and schools they study in. Calculate the minimal number of schools Arkady has to make up so that kk Chosen Ones would be selected by the Technogoblet.InputThe first line contains three integers nn, mm and kk (1\u2264n\u22641001\u2264n\u2264100, 1\u2264m,k\u2264n1\u2264m,k\u2264n)\u00a0\u2014 the total number of students, the number of schools and the number of the Chosen Ones.The second line contains nn different integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n), where pipi denotes the power of ii-th student. The bigger the power, the stronger the student.The third line contains nn integers s1,s2,\u2026,sns1,s2,\u2026,sn (1\u2264si\u2264m1\u2264si\u2264m), where sisi denotes the school the ii-th student goes to. At least one student studies in each of the schools. The fourth line contains kk different integers c1,c2,\u2026,ckc1,c2,\u2026,ck (1\u2264ci\u2264n1\u2264ci\u2264n) \u00a0\u2014 the id's of the Chosen Ones.OutputOutput a single integer \u00a0\u2014 the minimal number of schools to be made up by Arkady so that kk Chosen Ones would be selected by the Technogoblet.ExamplesInputCopy7 3 1\n1 5 3 4 6 7 2\n1 3 1 2 1 2 3\n3\nOutputCopy1\nInputCopy8 4 4\n1 2 3 4 5 6 7 8\n4 3 2 1 4 3 2 1\n3 4 5 6\nOutputCopy2\nNoteIn the first example there's just a single Chosen One with id 33. His power is equal to 33, but in the same school 11, there's a student with id 55 and power 66, and that means inaction would not lead to the latter being chosen. If we, however, make up a new school (let its id be 44) for the Chosen One, Technogoblet would select students with ids 22 (strongest in 33), 55 (strongest in 11), 66 (strongest in 22) and 33 (strongest in 44).In the second example, you can change the school of student 33 to the made-up 55 and the school of student 44 to the made-up 66. It will cause the Technogoblet to choose students 88, 77, 66, 55, 33 and 44."], "Code obfuscation": ["https://codeforces.com/problemset/problem/765/B", "B. Code obfuscationtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputKostya likes Codeforces contests very much. However, he is very disappointed that his solutions are frequently hacked. That's why he decided to obfuscate (intentionally make less readable) his code before upcoming contest.To obfuscate the code, Kostya first looks at the first variable name used in his program and replaces all its occurrences with a single symbol a, then he looks at the second variable name that has not been replaced yet, and replaces all its occurrences with b, and so on. Kostya is well-mannered, so he doesn't use any one-letter names before obfuscation. Moreover, there are at most 26 unique identifiers in his programs.You are given a list of identifiers of some program with removed spaces and line breaks. Check if this program can be a result of Kostya's obfuscation.InputIn the only line of input there is a string S of lowercase English letters (1\u2009\u2264\u2009|S|\u2009\u2264\u2009500)\u00a0\u2014 the identifiers of a program with removed whitespace characters.OutputIf this program can be a result of Kostya's obfuscation, print \"YES\" (without quotes), otherwise print \"NO\".ExamplesInputCopyabacabaOutputCopyYESInputCopyjinotegaOutputCopyNONoteIn the first sample case, one possible list of identifiers would be \"number string number character number string number\". Here how Kostya would obfuscate the program: replace all occurences of number with a, the result would be \"a string a character a string a\", replace all occurences of string with b, the result would be \"a b a character a b a\", replace all occurences of character with c, the result would be \"a b a c a b a\", all identifiers have been replaced, thus the obfuscation is finished."], "Ilya and tic-tac-toe game": ["https://codeforces.com/problemset/problem/754/B", "B. Ilya and tic-tac-toe gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIlya is an experienced player in tic-tac-toe on the 4\u2009\u00d7\u20094 field. He always starts and plays with Xs. He played a lot of games today with his friend Arseny. The friends became tired and didn't finish the last game. It was Ilya's turn in the game when they left it. Determine whether Ilya could have won the game by making single turn or not. The rules of tic-tac-toe on the 4\u2009\u00d7\u20094 field are as follows. Before the first turn all the field cells are empty. The two players take turns placing their signs into empty cells (the first player places Xs, the second player places Os). The player who places Xs goes first, the another one goes second. The winner is the player who first gets three of his signs in a row next to each other (horizontal, vertical or diagonal).InputThe tic-tac-toe position is given in four lines.Each of these lines contains four characters. Each character is '.' (empty cell), 'x' (lowercase English letter x), or 'o' (lowercase English letter o). It is guaranteed that the position is reachable playing tic-tac-toe, and it is Ilya's turn now (in particular, it means that the game is not finished). It is possible that all the cells are empty, it means that the friends left without making single turn.OutputPrint single line: \"YES\" in case Ilya could have won by making single turn, and \"NO\" otherwise.ExamplesInputCopyxx...oo.x...oox.OutputCopyYESInputCopyx.oxox..x.o.oo.xOutputCopyNOInputCopyx..x..ooo...x.xoOutputCopyYESInputCopyo.x.o....x..ooxxOutputCopyNONoteIn the first example Ilya had two winning moves: to the empty cell in the left column and to the leftmost empty cell in the first row.In the second example it wasn't possible to win by making single turn.In the third example Ilya could have won by placing X in the last row between two existing Xs.In the fourth example it wasn't possible to win by making single turn."], "Set of Strings": ["https://codeforces.com/problemset/problem/544/A", "A. Set of Stringstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string q. A sequence of k strings s1,\u2009s2,\u2009...,\u2009sk is called beautiful, if the concatenation of these strings is string q (formally, s1\u2009+\u2009s2\u2009+\u2009...\u2009+\u2009sk\u2009=\u2009q) and the first characters of these strings are distinct.Find any beautiful sequence of strings or determine that the beautiful sequence doesn't exist.InputThe first line contains a positive integer k (1\u2009\u2264\u2009k\u2009\u2264\u200926) \u2014 the number of strings that should be in a beautiful sequence. The second line contains string q, consisting of lowercase Latin letters. The length of the string is within range from 1 to 100, inclusive.OutputIf such sequence doesn't exist, then print in a single line \"NO\" (without the quotes). Otherwise, print in the first line \"YES\" (without the quotes) and in the next k lines print the beautiful sequence of strings s1,\u2009s2,\u2009...,\u2009sk.If there are multiple possible answers, print any of them.ExamplesInputCopy1abcaOutputCopyYESabcaInputCopy2aaacasOutputCopyYESaaacasInputCopy4abcOutputCopyNONoteIn the second sample there are two possible answers: {\"aaaca\",\u2009\"s\"} and {\"aaa\",\u2009\"cas\"}."], "Binary Protocol": ["https://codeforces.com/problemset/problem/825/A", "A. Binary Protocoltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has just invented a new binary protocol for data transmission. He is encoding positive integer decimal number to binary string using following algorithm:  Each digit is represented with number of '1' characters equal to the value of that digit (for 0 it is zero ones).  Digits are written one by one in order corresponding to number and separated by single '0' character. Though Polycarp learnt how to encode the numbers, he has no idea how to decode them back. Help him calculate the decoded number.InputThe first line contains one integer number n (1\u2009\u2264\u2009n\u2009\u2264\u200989) \u2014 length of the string s.The second line contains string s \u2014 sequence of '0' and '1' characters, number in its encoded format. It is guaranteed that the number corresponding to the string is positive and doesn't exceed 109. The string always starts with '1'.OutputPrint the decoded number.ExamplesInputCopy3111OutputCopy3InputCopy9110011101OutputCopy2031"], "Polo the Penguin and Segments": ["https://codeforces.com/problemset/problem/289/A", "A. Polo the Penguin and Segments time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle penguin Polo adores integer segments, that is, pairs of integers [l;\u00a0r] (l\u2009\u2264\u2009r). He has a set that consists of n integer segments: [l1;\u00a0r1],\u2009[l2;\u00a0r2],\u2009...,\u2009[ln;\u00a0rn]. We know that no two segments of this set intersect. In one move Polo can either widen any segment of the set 1 unit to the left or 1 unit to the right, that is transform [l;\u00a0r] to either segment [l\u2009-\u20091;\u00a0r], or to segment [l;\u00a0r\u2009+\u20091].The value of a set of segments that consists of n segments [l1;\u00a0r1],\u2009[l2;\u00a0r2],\u2009...,\u2009[ln;\u00a0rn] is the number of integers x, such that there is integer j, for which the following inequality holds, lj\u2009\u2264\u2009x\u2009\u2264\u2009rj.Find the minimum number of moves needed to make the value of the set of Polo's segments divisible by k.InputThe first line contains two integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009105). Each of the following n lines contain a segment as a pair of integers li and ri (\u2009-\u2009105\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009105), separated by a space.It is guaranteed that no two segments intersect. In other words, for any two integers i,\u2009j (1\u2009\u2264\u2009i\u2009<\u2009j\u2009\u2264\u2009n) the following inequality holds, min(ri,\u2009rj)\u2009<\u2009max(li,\u2009lj).OutputIn a single line print a single integer \u2014 the answer to the problem.ExamplesInputCopy2 31 23 4OutputCopy2InputCopy3 71 23 34 7OutputCopy0"], "Mountain Scenery": ["https://codeforces.com/problemset/problem/218/A", "A. Mountain Scenerytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Bolek has found a picture with n mountain peaks painted on it. The n painted peaks are represented by a non-closed polyline, consisting of 2n segments. The segments go through 2n\u2009+\u20091 points with coordinates (1,\u2009y1), (2,\u2009y2), ..., (2n\u2009+\u20091,\u2009y2n\u2009+\u20091), with the i-th segment connecting the point (i,\u2009yi) and the point (i\u2009+\u20091,\u2009yi\u2009+\u20091). For any even i (2\u2009\u2264\u2009i\u2009\u2264\u20092n) the following condition holds: yi\u2009-\u20091\u2009<\u2009yi and yi\u2009>\u2009yi\u2009+\u20091. We shall call a vertex of a polyline with an even x coordinate a mountain peak.   The figure to the left shows the initial picture, the figure to the right shows what the picture looks like after Bolek's actions. The affected peaks are marked red, k = 2.  Bolek fancied a little mischief. He chose exactly k mountain peaks, rubbed out the segments that went through those peaks and increased each peak's height by one (that is, he increased the y coordinate of the corresponding points). Then he painted the missing segments to get a new picture of mountain peaks. Let us denote the points through which the new polyline passes on Bolek's new picture as (1,\u2009r1), (2,\u2009r2), ..., (2n\u2009+\u20091,\u2009r2n\u2009+\u20091).Given Bolek's final picture, restore the initial one.InputThe first line contains two space-separated integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009100). The next line contains 2n\u2009+\u20091 space-separated integers r1,\u2009r2,\u2009...,\u2009r2n\u2009+\u20091 (0\u2009\u2264\u2009ri\u2009\u2264\u2009100) \u2014 the y coordinates of the polyline vertices on Bolek's picture.It is guaranteed that we can obtain the given picture after performing the described actions on some picture of mountain peaks.OutputPrint 2n\u2009+\u20091 integers y1,\u2009y2,\u2009...,\u2009y2n\u2009+\u20091 \u2014 the y coordinates of the vertices of the polyline on the initial picture. If there are multiple answers, output any one of them.ExamplesInputCopy3 20 5 3 5 1 5 2OutputCopy0 5 3 4 1 4 2 InputCopy1 10 2 0OutputCopy0 1 0 "], "Mancala": ["https://codeforces.com/problemset/problem/975/B", "B. Mancalatime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMancala is a game famous in the Middle East. It is played on a board that consists of 14 holes.   Initially, each hole has aiai stones. When a player makes a move, he chooses a hole which contains a positive number of stones. He takes all the stones inside it and then redistributes these stones one by one in the next holes in a counter-clockwise direction.Note that the counter-clockwise order means if the player takes the stones from hole ii, he will put one stone in the (i+1)(i+1)-th hole, then in the (i+2)(i+2)-th, etc. If he puts a stone in the 1414-th hole, the next one will be put in the first hole.After the move, the player collects all the stones from holes that contain even number of stones. The number of stones collected by player is the score, according to Resli.Resli is a famous Mancala player. He wants to know the maximum score he can obtain after one move.InputThe only line contains 14 integers a1,a2,\u2026,a14a1,a2,\u2026,a14 (0\u2264ai\u22641090\u2264ai\u2264109)\u00a0\u2014 the number of stones in each hole.It is guaranteed that for any ii (1\u2264i\u2264141\u2264i\u226414) aiai is either zero or odd, and there is at least one stone in the board.OutputOutput one integer, the maximum possible score after one move.ExamplesInputCopy0 1 1 0 0 0 0 0 0 7 0 0 0 0OutputCopy4InputCopy5 1 1 1 1 0 0 0 0 0 0 0 0 0OutputCopy8NoteIn the first test case the board after the move from the hole with 77 stones will look like 1 2 2 0 0 0 0 0 0 0 1 1 1 1. Then the player collects the even numbers and ends up with a score equal to 44."], "Japanese Crosswords Strike Back": ["https://codeforces.com/problemset/problem/884/B", "B. Japanese Crosswords Strike Backtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA one-dimensional Japanese crossword can be represented as a binary string of length x. An encoding of this crossword is an array a of size n, where n is the number of segments formed completely of 1's, and ai is the length of i-th segment. No two segments touch or intersect.For example:   If x\u2009=\u20096 and the crossword is 111011, then its encoding is an array {3,\u20092};  If x\u2009=\u20098 and the crossword is 01101010, then its encoding is an array {2,\u20091,\u20091};  If x\u2009=\u20095 and the crossword is 11111, then its encoding is an array {5};  If x\u2009=\u20095 and the crossword is 00000, then its encoding is an empty array. Mishka wants to create a new one-dimensional Japanese crossword. He has already picked the length and the encoding for this crossword. And now he needs to check if there is exactly one crossword such that its length and encoding are equal to the length and encoding he picked. Help him to check it!InputThe first line contains two integer numbers n and x (1\u2009\u2264\u2009n\u2009\u2264\u2009100000, 1\u2009\u2264\u2009x\u2009\u2264\u2009109) \u2014 the number of elements in the encoding and the length of the crossword Mishka picked.The second line contains n integer numbers a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u200910000) \u2014 the encoding.OutputPrint YES if there exists exaclty one crossword with chosen length and encoding. Otherwise, print NO.ExamplesInputCopy2 41 3OutputCopyNOInputCopy3 103 3 2OutputCopyYESInputCopy2 101 3OutputCopyNO"], "Mr. Kitayuta's Gift": ["https://codeforces.com/problemset/problem/505/A", "A. Mr. Kitayuta's Gifttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMr. Kitayuta has kindly given you a string s consisting of lowercase English letters. You are asked to insert exactly one lowercase English letter into s to make it a palindrome. A palindrome is a string that reads the same forward and backward. For example, \"noon\", \"testset\" and \"a\" are all palindromes, while \"test\" and \"kitayuta\" are not.You can choose any lowercase English letter, and insert it to any position of s, possibly to the beginning or the end of s. You have to insert a letter even if the given string is already a palindrome.If it is possible to insert one lowercase English letter into s so that the resulting string will be a palindrome, print the string after the insertion. Otherwise, print \"NA\" (without quotes, case-sensitive). In case there is more than one palindrome that can be obtained, you are allowed to print any of them.InputThe only line of the input contains a string s (1\u2009\u2264\u2009|s|\u2009\u2264\u200910). Each character in s is a lowercase English letter.OutputIf it is possible to turn s into a palindrome by inserting one lowercase English letter, print the resulting string in a single line. Otherwise, print \"NA\" (without quotes, case-sensitive). In case there is more than one solution, any of them will be accepted. ExamplesInputCopyreviveOutputCopyreviverInputCopyeeOutputCopyeyeInputCopykitayutaOutputCopyNANoteFor the first sample, insert 'r' to the end of \"revive\" to obtain a palindrome \"reviver\".For the second sample, there is more than one solution. For example, \"eve\" will also be accepted.For the third sample, it is not possible to turn \"kitayuta\" into a palindrome by just inserting one letter."], "Fox and Cross": ["https://codeforces.com/problemset/problem/389/B", "B. Fox and Crosstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFox Ciel has a board with n rows and n columns. So, the board consists of n\u2009\u00d7\u2009n cells. Each cell contains either a symbol '.', or a symbol '#'.A cross on the board is a connected set of exactly five cells of the board that looks like a cross. The picture below shows how it looks.Ciel wants to draw several (may be zero) crosses on the board. Each cross must cover exactly five cells with symbols '#', and any cell with symbol '#' must belong to some cross. No two crosses can share a cell.Please, tell Ciel if she can draw the crosses in the described way.InputThe first line contains an integer n (3\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the size of the board.Each of the next n lines describes one row of the board. The i-th line describes the i-th row of the board and consists of n characters. Each character is either a symbol '.', or a symbol '#'.OutputOutput a single line with \"YES\" if Ciel can draw the crosses in the described way. Otherwise output a single line with \"NO\".ExamplesInputCopy5.#...####..####...#......OutputCopyYESInputCopy4################OutputCopyNOInputCopy6.#....####...####..#.##.######.#..#.OutputCopyYESInputCopy6.#..#.######.####..####.######.#..#.OutputCopyNOInputCopy3.........OutputCopyYESNoteIn example 1, you can draw two crosses. The picture below shows what they look like.In example 2, the board contains 16 cells with '#', but each cross contains 5. Since 16 is not a multiple of 5, so it's impossible to cover all."], "Correct Solution?": ["https://codeforces.com/problemset/problem/12/B", "B. Correct Solution?time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne cold winter evening Alice and her older brother Bob was sitting at home near the fireplace and giving each other interesting problems to solve. When it was Alice's turn, she told the number n to Bob and said:\u2014Shuffle the digits in this number in order to obtain the smallest possible number without leading zeroes.\u2014No problem! \u2014 said Bob and immediately gave her an answer.Alice said a random number, so she doesn't know whether Bob's answer is correct. Help her to find this out, because impatient brother is waiting for the verdict.InputThe first line contains one integer n (0\u2009\u2264\u2009n\u2009\u2264\u2009109) without leading zeroes. The second lines contains one integer m (0\u2009\u2264\u2009m\u2009\u2264\u2009109) \u2014 Bob's answer, possibly with leading zeroes.OutputPrint OK if Bob's answer is correct and WRONG_ANSWER otherwise.ExamplesInputCopy33101033OutputCopyOKInputCopy45OutputCopyWRONG_ANSWER"], "Feed the cat": ["https://codeforces.com/problemset/problem/955/A", "A. Feed the cattime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter waking up at hh:mm, Andrew realised that he had forgotten to feed his only cat for yet another time (guess why there's only one cat). The cat's current hunger level is H points, moreover each minute without food increases his hunger by D points.At any time Andrew can visit the store where tasty buns are sold (you can assume that is doesn't take time to get to the store and back). One such bun costs C roubles and decreases hunger by N points. Since the demand for bakery drops heavily in the evening, there is a special 20% discount for buns starting from 20:00 (note that the cost might become rational). Of course, buns cannot be sold by parts.Determine the minimum amount of money Andrew has to spend in order to feed his cat. The cat is considered fed if its hunger level is less than or equal to zero.InputThe first line contains two integers hh and mm (00\u2009\u2264\u2009hh\u2009\u2264\u200923,\u200900\u2009\u2264\u2009mm\u2009\u2264\u200959) \u2014 the time of Andrew's awakening.The second line contains four integers H, D, C and N (1\u2009\u2264\u2009H\u2009\u2264\u2009105,\u20091\u2009\u2264\u2009D,\u2009C,\u2009N\u2009\u2264\u2009102).OutputOutput the minimum amount of money to within three decimal digits. You answer is considered correct, if its absolute or relative error does not exceed 10\u2009-\u20094.Formally, let your answer be a, and the jury's answer be b. Your answer is considered correct if .ExamplesInputCopy19 00255 1 100 1OutputCopy25200.0000InputCopy17 411000 6 15 11OutputCopy1365.0000NoteIn the first sample Andrew can visit the store at exactly 20:00. The cat's hunger will be equal to 315, hence it will be necessary to purchase 315 buns. The discount makes the final answer 25200 roubles.In the second sample it's optimal to visit the store right after he wakes up. Then he'll have to buy 91 bins per 15 roubles each and spend a total of 1365 roubles."], "Sereja and Stairs": ["https://codeforces.com/problemset/problem/381/B", "B. Sereja and Stairstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSereja loves integer sequences very much. He especially likes stairs.Sequence a1,\u2009a2,\u2009...,\u2009a|a| (|a| is the length of the sequence) is stairs if there is such index i (1\u2009\u2264\u2009i\u2009\u2264\u2009|a|), that the following condition is met: a1\u2009<\u2009a2\u2009<\u2009...\u2009<\u2009ai\u2009-\u20091\u2009<\u2009ai\u2009>\u2009ai\u2009+\u20091\u2009>\u2009...\u2009>\u2009a|a|\u2009-\u20091\u2009>\u2009a|a|.For example, sequences [1, 2, 3, 2] and [4, 2] are stairs and sequence [3, 1, 2] isn't.Sereja has m cards with numbers. He wants to put some cards on the table in a row to get a stair sequence. What maximum number of cards can he put on the table?InputThe first line contains integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009105) \u2014 the number of Sereja's cards. The second line contains m integers bi (1\u2009\u2264\u2009bi\u2009\u2264\u20095000) \u2014 the numbers on the Sereja's cards.OutputIn the first line print the number of cards you can put on the table. In the second line print the resulting stairs.ExamplesInputCopy51 2 3 4 5OutputCopy55 4 3 2 1InputCopy61 1 2 2 3 3OutputCopy51 2 3 2 1"], "Sockets": ["https://codeforces.com/problemset/problem/257/A", "A. Socketstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has got many devices that work on electricity. He's got n supply-line filters to plug the devices, the i-th supply-line filter has ai sockets.Overall Vasya has got m devices and k electrical sockets in his flat, he can plug the devices or supply-line filters directly. Of course, he can plug the supply-line filter to any other supply-line filter. The device (or the supply-line filter) is considered plugged to electricity if it is either plugged to one of k electrical sockets, or if it is plugged to some supply-line filter that is in turn plugged to electricity. What minimum number of supply-line filters from the given set will Vasya need to plug all the devices he has to electricity? Note that all devices and supply-line filters take one socket for plugging and that he can use one socket to plug either one device or one supply-line filter.InputThe first line contains three integers n, m, k (1\u2009\u2264\u2009n,\u2009m,\u2009k\u2009\u2264\u200950) \u2014 the number of supply-line filters, the number of devices and the number of sockets that he can plug to directly, correspondingly. The second line contains n space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u200950) \u2014 number ai stands for the number of sockets on the i-th supply-line filter.OutputPrint a single number \u2014 the minimum number of supply-line filters that is needed to plug all the devices to electricity. If it is impossible to plug all the devices even using all the supply-line filters, print -1.ExamplesInputCopy3 5 33 1 2OutputCopy1InputCopy4 7 23 3 2 4OutputCopy2InputCopy5 5 11 3 1 2 1OutputCopy-1NoteIn the first test case he can plug the first supply-line filter directly to electricity. After he plug it, he get 5 (3 on the supply-line filter and 2 remaining sockets for direct plugging) available sockets to plug. Thus, one filter is enough to plug 5 devices.One of the optimal ways in the second test sample is to plug the second supply-line filter directly and plug the fourth supply-line filter to one of the sockets in the second supply-line filter. Thus, he gets exactly 7 sockets, available to plug: one to plug to the electricity directly, 2 on the second supply-line filter, 4 on the fourth supply-line filter. There's no way he can plug 7 devices if he use one supply-line filter."], "Heads or Tails": ["https://codeforces.com/problemset/problem/242/A", "A. Heads or Tailstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya and Vasya are tossing a coin. Their friend Valera is appointed as a judge. The game is very simple. First Vasya tosses a coin x times, then Petya tosses a coin y times. If the tossing player gets head, he scores one point. If he gets tail, nobody gets any points. The winner is the player with most points by the end of the game. If boys have the same number of points, the game finishes with a draw.At some point, Valera lost his count, and so he can not say exactly what the score is at the end of the game. But there are things he remembers for sure. He remembers that the entire game Vasya got heads at least a times, and Petya got heads at least b times. Moreover, he knows that the winner of the game was Vasya. Valera wants to use this information to know every possible outcome of the game, which do not contradict his memories.InputThe single line contains four integers x,\u2009y,\u2009a,\u2009b (1\u2009\u2264\u2009a\u2009\u2264\u2009x\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009b\u2009\u2264\u2009y\u2009\u2264\u2009100). The numbers on the line are separated by a space.OutputIn the first line print integer n \u2014 the number of possible outcomes of the game. Then on n lines print the outcomes. On the i-th line print a space-separated pair of integers ci, di \u2014 the number of heads Vasya and Petya got in the i-th outcome of the game, correspondingly. Print pairs of integers (ci,\u2009di) in the strictly increasing order.Let us remind you that the pair of numbers (p1,\u2009q1) is less than the pair of numbers (p2,\u2009q2), if p1\u2009<\u2009p2, or p1\u2009=\u2009p2 and also q1\u2009<\u2009q2.ExamplesInputCopy3 2 1 1OutputCopy32 13 13 2InputCopy2 4 2 2OutputCopy0"], "Kalevitch and Chess": ["https://codeforces.com/problemset/problem/7/A", "A. Kalevitch and Chesstime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputA famous Berland's painter Kalevitch likes to shock the public. One of his last obsessions is chess. For more than a thousand years people have been playing this old game on uninteresting, monotonous boards. Kalevitch decided to put an end to this tradition and to introduce a new attitude to chessboards.As before, the chessboard is a square-checkered board with the squares arranged in a 8\u2009\u00d7\u20098 grid, each square is painted black or white. Kalevitch suggests that chessboards should be painted in the following manner: there should be chosen a horizontal or a vertical line of 8 squares (i.e. a row or a column), and painted black. Initially the whole chessboard is white, and it can be painted in the above described way one or more times. It is allowed to paint a square many times, but after the first time it does not change its colour any more and remains black. Kalevitch paints chessboards neatly, and it is impossible to judge by an individual square if it was painted with a vertical or a horizontal stroke.Kalevitch hopes that such chessboards will gain popularity, and he will be commissioned to paint chessboards, which will help him ensure a comfortable old age. The clients will inform him what chessboard they want to have, and the painter will paint a white chessboard meeting the client's requirements.It goes without saying that in such business one should economize on everything \u2014 for each commission he wants to know the minimum amount of strokes that he has to paint to fulfill the client's needs. You are asked to help Kalevitch with this task.InputThe input file contains 8 lines, each of the lines contains 8 characters. The given matrix describes the client's requirements, W character stands for a white square, and B character \u2014 for a square painted black.It is guaranteed that client's requirments can be fulfilled with a sequence of allowed strokes (vertical/column or horizontal/row).OutputOutput the only number \u2014 the minimum amount of rows and columns that Kalevitch has to paint on the white chessboard to meet the client's requirements.ExamplesInputCopyWWWBWWBWBBBBBBBBWWWBWWBWWWWBWWBWWWWBWWBWWWWBWWBWWWWBWWBWWWWBWWBWOutputCopy3InputCopyWWWWWWWWBBBBBBBBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWOutputCopy1"], "Walking in the Rain": ["https://codeforces.com/problemset/problem/192/B", "B. Walking in the Raintime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn Berland the opposition is going to arrange mass walking on the boulevard. The boulevard consists of n tiles that are lain in a row and are numbered from 1 to n from right to left. The opposition should start walking on the tile number 1 and the finish on the tile number n. During the walk it is allowed to move from right to left between adjacent tiles in a row, and jump over a tile. More formally, if you are standing on the tile number i (i\u2009<\u2009n\u2009-\u20091), you can reach the tiles number i\u2009+\u20091 or the tile number i\u2009+\u20092 from it (if you stand on the tile number n\u2009-\u20091, you can only reach tile number n). We can assume that all the opposition movements occur instantaneously.In order to thwart an opposition rally, the Berland bloody regime organized the rain. The tiles on the boulevard are of poor quality and they are rapidly destroyed in the rain. We know that the i-th tile is destroyed after ai days of rain (on day ai tile isn't destroyed yet, and on day ai\u2009+\u20091 it is already destroyed). Of course, no one is allowed to walk on the destroyed tiles! So the walk of the opposition is considered thwarted, if either the tile number 1 is broken, or the tile number n is broken, or it is impossible to reach the tile number n from the tile number 1 if we can walk on undestroyed tiles.The opposition wants to gather more supporters for their walk. Therefore, the more time they have to pack, the better. Help the opposition to calculate how much time they still have and tell us for how many days the walk from the tile number 1 to the tile number n will be possible.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009103) \u2014 the boulevard's length in tiles.The second line contains n space-separated integers ai \u2014 the number of days after which the i-th tile gets destroyed (1\u2009\u2264\u2009ai\u2009\u2264\u2009103). OutputPrint a single number \u2014 the sought number of days.ExamplesInputCopy410 3 5 10OutputCopy5InputCopy510 2 8 3 5OutputCopy5NoteIn the first sample the second tile gets destroyed after day three, and the only path left is 1\u2009\u2192\u20093\u2009\u2192\u20094. After day five there is a two-tile gap between the first and the last tile, you can't jump over it.In the second sample path 1\u2009\u2192\u20093\u2009\u2192\u20095 is available up to day five, inclusive. On day six the last tile is destroyed and the walk is thwarted."], "Domino Effect": ["https://codeforces.com/problemset/problem/405/B", "B. Domino Effecttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Chris knows there's no fun in playing dominoes, he thinks it's too random and doesn't require skill. Instead, he decided to play with the dominoes and make a \"domino show\".Chris arranges n dominoes in a line, placing each piece vertically upright. In the beginning, he simultaneously pushes some of the dominoes either to the left or to the right. However, somewhere between every two dominoes pushed in the same direction there is at least one domino pushed in the opposite direction.After each second, each domino that is falling to the left pushes the adjacent domino on the left. Similarly, the dominoes falling to the right push their adjacent dominoes standing on the right. When a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces. The figure shows one possible example of the process.  Given the initial directions Chris has pushed the dominoes, find the number of the dominoes left standing vertically at the end of the process!InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093000), the number of the dominoes in the line. The next line contains a character string s of length n. The i-th character of the string si is equal to   \"L\", if the i-th domino has been pushed to the left;  \"R\", if the i-th domino has been pushed to the right;  \".\", if the i-th domino has not been pushed. It is guaranteed that if si\u2009=\u2009sj\u2009=\u2009\"L\" and i\u2009<\u2009j, then there exists such k that i\u2009<\u2009k\u2009<\u2009j and sk\u2009=\u2009\"R\"; if si\u2009=\u2009sj\u2009=\u2009\"R\" and i\u2009<\u2009j, then there exists such k that i\u2009<\u2009k\u2009<\u2009j and sk\u2009=\u2009\"L\".OutputOutput a single integer, the number of the dominoes that remain vertical at the end of the process.ExamplesInputCopy14.L.R...LR..L..OutputCopy4InputCopy5R....OutputCopy0InputCopy1.OutputCopy1NoteThe first example case is shown on the figure. The four pieces that remain standing vertically are highlighted with orange.In the second example case, all pieces fall down since the first piece topples all the other pieces.In the last example case, a single piece has not been pushed in either direction."], "Coat of Anticubism": ["https://codeforces.com/problemset/problem/667/B", "B. Coat of Anticubismtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard output  As some of you know, cubism is a trend in art, where the problem of constructing volumetrical shape on a plane with a combination of three-dimensional geometric shapes comes to the fore. A famous sculptor Cicasso, whose self-portrait you can contemplate, hates cubism. He is more impressed by the idea to transmit two-dimensional objects through three-dimensional objects by using his magnificent sculptures. And his new project is connected with this. Cicasso wants to make a coat for the haters of anticubism. To do this, he wants to create a sculpture depicting a well-known geometric primitive \u2014 convex polygon.Cicasso prepared for this a few blanks, which are rods with integer lengths, and now he wants to bring them together. The i-th rod is a segment of length li.The sculptor plans to make a convex polygon with a nonzero area, using all rods he has as its sides. Each rod should be used as a side to its full length. It is forbidden to cut, break or bend rods. However, two sides may form a straight angle .Cicasso knows that it is impossible to make a convex polygon with a nonzero area out of the rods with the lengths which he had chosen. Cicasso does not want to leave the unused rods, so the sculptor decides to make another rod-blank with an integer length so that his problem is solvable. Of course, he wants to make it as short as possible, because the materials are expensive, and it is improper deed to spend money for nothing. Help sculptor! InputThe first line contains an integer n (3\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 a number of rod-blanks.The second line contains n integers li (1\u2009\u2264\u2009li\u2009\u2264\u2009109) \u2014 lengths of rods, which Cicasso already has. It is guaranteed that it is impossible to make a polygon with n vertices and nonzero area using the rods Cicasso already has.OutputPrint the only integer z \u2014 the minimum length of the rod, so that after adding it it can be possible to construct convex polygon with (n\u2009+\u20091) vertices and nonzero area from all of the rods.ExamplesInputCopy31 2 1OutputCopy1InputCopy520 4 3 2 1OutputCopy11NoteIn the first example triangle with sides {1\u2009+\u20091\u2009=\u20092,\u20092,\u20091} can be formed from a set of lengths {1,\u20091,\u20091,\u20092}. In the second example you can make a triangle with lengths {20,\u200911,\u20094\u2009+\u20093\u2009+\u20092\u2009+\u20091\u2009=\u200910}. "], "Testing Pants for Sadness": ["https://codeforces.com/problemset/problem/103/A", "A. Testing Pants for Sadnesstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe average miner Vaganych took refresher courses. As soon as a miner completes the courses, he should take exams. The hardest one is a computer test called \"Testing Pants for Sadness\".The test consists of n questions; the questions are to be answered strictly in the order in which they are given, from question 1 to question n. Question i contains ai answer variants, exactly one of them is correct. A click is regarded as selecting any answer in any question. The goal is to select the correct answer for each of the n questions. If Vaganych selects a wrong answer for some question, then all selected answers become unselected and the test starts from the very beginning, from question 1 again. But Vaganych remembers everything. The order of answers for each question and the order of questions remain unchanged, as well as the question and answers themselves.Vaganych is very smart and his memory is superb, yet he is unbelievably unlucky and knows nothing whatsoever about the test's theme. How many clicks will he have to perform in the worst case?InputThe first line contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100). It is the number of questions in the test. The second line contains space-separated n positive integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009109), the number of answer variants to question i.OutputPrint a single number \u2014 the minimal number of clicks needed to pass the test it the worst-case scenario. Please do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specificator.ExamplesInputCopy21 1OutputCopy2InputCopy22 2OutputCopy5InputCopy110OutputCopy10NoteNote to the second sample. In the worst-case scenario you will need five clicks:   the first click selects the first variant to the first question, this answer turns out to be wrong.  the second click selects the second variant to the first question, it proves correct and we move on to the second question;  the third click selects the first variant to the second question, it is wrong and we go back to question 1;  the fourth click selects the second variant to the first question, it proves as correct as it was and we move on to the second question;  the fifth click selects the second variant to the second question, it proves correct, the test is finished. "], "Vasya and the Bus": ["https://codeforces.com/problemset/problem/190/A", "A. Vasya and the Bustime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Vasya heard a story: \"In the city of High Bertown a bus number 62 left from the bus station. It had n grown-ups and m kids...\"The latter events happen to be of no importance to us. Vasya is an accountant and he loves counting money. So he wondered what maximum and minimum sum of money these passengers could have paid for the ride.The bus fare equals one berland ruble in High Bertown. However, not everything is that easy \u2014 no more than one child can ride for free with each grown-up passenger. That means that a grown-up passenger who rides with his k (k\u2009>\u20090) children, pays overall k rubles: a ticket for himself and (k\u2009-\u20091) tickets for his children. Also, a grown-up can ride without children, in this case he only pays one ruble.We know that in High Bertown children can't ride in a bus unaccompanied by grown-ups.Help Vasya count the minimum and the maximum sum in Berland rubles, that all passengers of this bus could have paid in total.InputThe input file consists of a single line containing two space-separated numbers n and m (0\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the number of the grown-ups and the number of the children in the bus, correspondingly.OutputIf n grown-ups and m children could have ridden in the bus, then print on a single line two space-separated integers \u2014 the minimum and the maximum possible total bus fare, correspondingly. Otherwise, print \"Impossible\" (without the quotes).ExamplesInputCopy1 2OutputCopy2 2InputCopy0 5OutputCopyImpossibleInputCopy2 2OutputCopy2 3NoteIn the first sample a grown-up rides with two children and pays two rubles.In the second sample there are only children in the bus, so the situation is impossible. In the third sample there are two cases:  Each of the two grown-ups rides with one children and pays one ruble for the tickets. In this case the passengers pay two rubles in total.  One of the grown-ups ride with two children's and pays two rubles, the another one rides alone and pays one ruble for himself. So, they pay three rubles in total. "], "The Great Julya Calendar": ["https://codeforces.com/problemset/problem/331/C1", "C1. The Great Julya Calendartime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYet another Armageddon is coming! This time the culprit is the Julya tribe calendar. The beavers in this tribe knew math very well. Smart Beaver, an archaeologist, got a sacred plate with a magic integer on it. The translation from Old Beaverish is as follows: \"May the Great Beaver bless you! May your chacres open and may your third eye never turn blind from beholding the Truth! Take the magic number, subtract a digit from it (the digit must occur in the number) and get a new magic number. Repeat this operation until a magic number equals zero. The Earth will stand on Three Beavers for the time, equal to the number of subtractions you perform!\"Distinct subtraction sequences can obviously get you different number of operations. But the Smart Beaver is ready to face the worst and is asking you to count the minimum number of operations he needs to reduce the magic number to zero.InputThe single line contains the magic integer n, 0\u2009\u2264\u2009n.  to get 20 points, you need to solve the problem with constraints: n\u2009\u2264\u2009106 (subproblem C1);  to get 40 points, you need to solve the problem with constraints: n\u2009\u2264\u20091012 (subproblems C1+C2);  to get 100 points, you need to solve the problem with constraints: n\u2009\u2264\u20091018 (subproblems C1+C2+C3). OutputPrint a single integer \u2014 the minimum number of subtractions that turns the magic number to a zero.ExamplesInputCopy24OutputCopy5NoteIn the first test sample the minimum number of operations can be reached by the following sequence of subtractions:  24\u2009\u2192\u200920\u2009\u2192\u200918\u2009\u2192\u200910\u2009\u2192\u20099\u2009\u2192\u20090 "], "Lexicographically Maximum Subsequence": ["https://codeforces.com/problemset/problem/196/A", "A. Lexicographically Maximum Subsequencetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou've got string s, consisting of only lowercase English letters. Find its lexicographically maximum subsequence.We'll call a non-empty string s[p1p2... pk]\u2009=\u2009sp1sp2... spk(1\u2009\u2264\u2009p1\u2009<\u2009p2\u2009<\u2009...\u2009<\u2009pk\u2009\u2264\u2009|s|) a subsequence of string s\u2009=\u2009s1s2... s|s|.String x\u2009=\u2009x1x2... x|x| is lexicographically larger than string y\u2009=\u2009y1y2... y|y|, if either |x|\u2009>\u2009|y| and x1\u2009=\u2009y1,\u2009x2\u2009=\u2009y2,\u2009... ,\u2009x|y|\u2009=\u2009y|y|, or exists such number r (r\u2009<\u2009|x|,\u2009r\u2009<\u2009|y|), that x1\u2009=\u2009y1,\u2009x2\u2009=\u2009y2,\u2009... ,\u2009xr\u2009=\u2009yr and xr\u2009+\u20091\u2009>\u2009yr\u2009+\u20091. Characters in lines are compared like their ASCII codes.InputThe single line contains a non-empty string s, consisting only of lowercase English letters. The string's length doesn't exceed 105.OutputPrint the lexicographically maximum subsequence of string s.ExamplesInputCopyababbaOutputCopybbbaInputCopyabbcbccacbbcbaabaOutputCopycccccbbaNoteLet's look at samples and see what the sought subsequences look like (they are marked with uppercase bold letters).The first sample: aBaBBAThe second sample: abbCbCCaCbbCBaaBA"], "Internet Address": ["https://codeforces.com/problemset/problem/245/B", "B. Internet Addresstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya is an active Internet user. One day he came across an Internet resource he liked, so he wrote its address in the notebook. We know that the address of the written resource has format: <protocol>://<domain>.ru[/<context>] where:  <protocol> can equal either \"http\" (without the quotes) or \"ftp\" (without the quotes),  <domain> is a non-empty string, consisting of lowercase English letters,  the /<context> part may not be present. If it is present, then <context> is a non-empty string, consisting of lowercase English letters. If string <context> isn't present in the address, then the additional character \"/\" isn't written. Thus, the address has either two characters \"/\" (the ones that go before the domain), or three (an extra one in front of the context).When the boy came home, he found out that the address he wrote in his notebook had no punctuation marks. Vasya must have been in a lot of hurry and didn't write characters \":\", \"/\", \".\".Help Vasya to restore the possible address of the recorded Internet resource.InputThe first line contains a non-empty string that Vasya wrote out in his notebook. This line consists of lowercase English letters only. It is guaranteed that the given string contains at most 50 letters. It is guaranteed that the given string can be obtained from some correct Internet resource address, described above.OutputPrint a single line \u2014 the address of the Internet resource that Vasya liked. If there are several addresses that meet the problem limitations, you are allowed to print any of them.ExamplesInputCopyhttpsunruxOutputCopyhttp://sun.ru/xInputCopyftphttprururuOutputCopyftp://http.ru/ruruNoteIn the second sample there are two more possible answers: \"ftp://httpruru.ru\" and \"ftp://httpru.ru/ru\"."], "The Contest": ["https://codeforces.com/problemset/problem/813/A", "A. The Contesttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPasha is participating in a contest on one well-known website. This time he wants to win the contest and will do anything to get to the first place!This contest consists of n problems, and Pasha solves ith problem in ai time units (his solutions are always correct). At any moment of time he can be thinking about a solution to only one of the problems (that is, he cannot be solving two problems at the same time). The time Pasha spends to send his solutions is negligible. Pasha can send any number of solutions at the same moment.Unfortunately, there are too many participants, and the website is not always working. Pasha received the information that the website will be working only during m time periods, jth period is represented by its starting moment lj and ending moment rj. Of course, Pasha can send his solution only when the website is working. In other words, Pasha can send his solution at some moment T iff there exists a period x such that lx\u2009\u2264\u2009T\u2009\u2264\u2009rx.Pasha wants to know his best possible result. We need to tell him the minimal moment of time by which he is able to have solutions to all problems submitted, if he acts optimally, or say that it's impossible no matter how Pasha solves the problems.InputThe first line contains one integer n\u00a0(1\u2009\u2264\u2009n\u2009\u2264\u20091000) \u2014 the number of problems. The second line contains n integers ai\u00a0(1\u2009\u2264\u2009ai\u2009\u2264\u2009105) \u2014 the time Pasha needs to solve ith problem.The third line contains one integer m\u00a0(0\u2009\u2264\u2009m\u2009\u2264\u20091000) \u2014 the number of periods of time when the website is working. Next m lines represent these periods. jth line contains two numbers lj and rj\u00a0(1\u2009\u2264\u2009lj\u2009<\u2009rj\u2009\u2264\u2009105) \u2014 the starting and the ending moment of jth period.It is guaranteed that the periods are not intersecting and are given in chronological order, so for every j\u2009>\u20091 the condition lj\u2009>\u2009rj\u2009-\u20091 is met.OutputIf Pasha can solve and submit all the problems before the end of the contest, print the minimal moment of time by which he can have all the solutions submitted.Otherwise print \"-1\" (without brackets).ExamplesInputCopy23 421 47 9OutputCopy7InputCopy1511 4OutputCopy-1InputCopy1511 5OutputCopy5NoteIn the first example Pasha can act like this: he solves the second problem in 4 units of time and sends it immediately. Then he spends 3 time units to solve the first problem and sends it 7 time units after the contest starts, because at this moment the website starts working again.In the second example Pasha invents the solution only after the website stops working for the last time.In the third example Pasha sends the solution exactly at the end of the first period."], "Bayan Bus": ["https://codeforces.com/problemset/problem/475/A", "A. Bayan Bustime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe final round of Bayan Programming Contest will be held in Tehran, and the participants will be carried around with a yellow bus. The bus has 34 passenger seats: 4 seats in the last row and 3 seats in remaining rows.   The event coordinator has a list of k participants who should be picked up at the airport. When a participant gets on the bus, he will sit in the last row with an empty seat. If there is more than one empty seat in that row, he will take the leftmost one. In order to keep track of the people who are on the bus, the event coordinator needs a figure showing which seats are going to be taken by k participants. Your task is to draw the figure representing occupied seats.InputThe only line of input contains integer k, (0\u2009\u2264\u2009k\u2009\u2264\u200934), denoting the number of participants.OutputPrint the figure of a bus with k passengers as described in sample tests. Character '#' denotes an empty seat, while 'O' denotes a taken seat. 'D' is the bus driver and other characters in the output are for the purpose of beautifying the figure. Strictly follow the sample test cases output format. Print exactly six lines. Do not output extra space or other characters.ExamplesInputCopy9OutputCopy+------------------------+|O.O.O.#.#.#.#.#.#.#.#.|D|)|O.O.O.#.#.#.#.#.#.#.#.|.||O.......................||O.O.#.#.#.#.#.#.#.#.#.|.|)+------------------------+InputCopy20OutputCopy+------------------------+|O.O.O.O.O.O.O.#.#.#.#.|D|)|O.O.O.O.O.O.#.#.#.#.#.|.||O.......................||O.O.O.O.O.O.#.#.#.#.#.|.|)+------------------------+"], "Video Posts": ["https://codeforces.com/problemset/problem/1070/K", "K. Video Poststime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp took nn videos, the duration of the ii-th video is aiai seconds. The videos are listed in the chronological order, i.e. the 11-st video is the earliest, the 22-nd video is the next, ..., the nn-th video is the last.Now Polycarp wants to publish exactly kk (1\u2264k\u2264n1\u2264k\u2264n) posts in Instabram. Each video should be a part of a single post. The posts should preserve the chronological order, it means that the first post should contain one or more of the earliest videos, the second post should contain a block (one or more videos) going next and so on. In other words, if the number of videos in the jj-th post is sjsj then:  s1+s2+\u22ef+sk=ns1+s2+\u22ef+sk=n (si>0si>0),  the first post contains the videos: 1,2,\u2026,s11,2,\u2026,s1;  the second post contains the videos: s1+1,s1+2,\u2026,s1+s2s1+1,s1+2,\u2026,s1+s2;  the third post contains the videos: s1+s2+1,s1+s2+2,\u2026,s1+s2+s3s1+s2+1,s1+s2+2,\u2026,s1+s2+s3;  ...  the kk-th post contains videos: n\u2212sk+1,n\u2212sk+2,\u2026,nn\u2212sk+1,n\u2212sk+2,\u2026,n. Polycarp is a perfectionist, he wants the total duration of videos in each post to be the same.Help Polycarp to find such positive integer values s1,s2,\u2026,sks1,s2,\u2026,sk that satisfy all the conditions above.InputThe first line contains two integers nn and kk (1\u2264k\u2264n\u22641051\u2264k\u2264n\u2264105). The next line contains nn positive integer numbers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641041\u2264ai\u2264104), where aiai is the duration of the ii-th video.OutputIf solution exists, print \"Yes\" in the first line. Print kk positive integers s1,s2,\u2026,sks1,s2,\u2026,sk (s1+s2+\u22ef+sk=ns1+s2+\u22ef+sk=n) in the second line. The total duration of videos in each post should be the same. It can be easily proven that the answer is unique (if it exists).If there is no solution, print a single line \"No\".ExamplesInputCopy6 33 3 1 4 1 6OutputCopyYes2 3 1 InputCopy3 31 1 1OutputCopyYes1 1 1 InputCopy3 31 1 2OutputCopyNoInputCopy3 11 10 100OutputCopyYes3 "], "Little Xor": ["https://codeforces.com/problemset/problem/252/A", "A. Little Xortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya likes arrays that consist of non-negative integers a lot. Recently his mom has presented him one such array consisting of n elements. Petya immediately decided to find there a segment of consecutive elements, such that the xor of all numbers from this segment was maximal possible. Help him with that.The xor operation is the bitwise exclusive \"OR\", that is denoted as \"xor\" in Pascal and \"^\" in C/C++/Java.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of elements in the array. The second line contains the space-separated integers from the array. All numbers are non-negative integers strictly less than 230.OutputPrint a single integer \u2014 the required maximal xor of a segment of consecutive elements.ExamplesInputCopy51 2 1 1 2OutputCopy3InputCopy31 2 7OutputCopy7InputCopy44 2 4 8OutputCopy14NoteIn the first sample one of the optimal segments is the segment that consists of the first and the second array elements, if we consider the array elements indexed starting from one.The second sample contains only one optimal segment, which contains exactly one array element (element with index three)."], "Whose sentence is it?": ["https://codeforces.com/problemset/problem/312/A", "A. Whose sentence is it?time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day, liouzhou_101 got a chat record of Freda and Rainbow. Out of curiosity, he wanted to know which sentences were said by Freda, and which were said by Rainbow. According to his experience, he thought that Freda always said \"lala.\" at the end of her sentences, while Rainbow always said \"miao.\" at the beginning of his sentences. For each sentence in the chat record, help liouzhou_101 find whose sentence it is. InputThe first line of the input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u200910), number of sentences in the chat record. Each of the next n lines contains a sentence. A sentence is a string that contains only Latin letters (A-Z, a-z), underline (_), comma (,), point (.) and space ( ). Its length doesn\u2019t exceed 100.OutputFor each sentence, output \"Freda's\" if the sentence was said by Freda, \"Rainbow's\" if the sentence was said by Rainbow, or \"OMG>.< I don't know!\" if liouzhou_101 can\u2019t recognize whose sentence it is. He can\u2019t recognize a sentence if it begins with \"miao.\" and ends with \"lala.\", or satisfies neither of the conditions. ExamplesInputCopy5I will go to play with you lala.wow, welcome.miao.lala.miao.miao .OutputCopyFreda'sOMG>.< I don't know!OMG>.< I don't know!Rainbow'sOMG>.< I don't know!"], "Nuts": ["https://codeforces.com/problemset/problem/402/A", "A. Nutstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a nuts and lots of boxes. The boxes have a wonderful feature: if you put x (x\u2009\u2265\u20090) divisors (the spacial bars that can divide a box) to it, you get a box, divided into x\u2009+\u20091 sections.You are minimalist. Therefore, on the one hand, you are against dividing some box into more than k sections. On the other hand, you are against putting more than v nuts into some section of the box. What is the minimum number of boxes you have to use if you want to put all the nuts in boxes, and you have b divisors?Please note that you need to minimize the number of used boxes, not sections. You do not have to minimize the number of used divisors.InputThe first line contains four space-separated integers k, a, b, v (2\u2009\u2264\u2009k\u2009\u2264\u20091000; 1\u2009\u2264\u2009a,\u2009b,\u2009v\u2009\u2264\u20091000) \u2014 the maximum number of sections in the box, the number of nuts, the number of divisors and the capacity of each section of the box.OutputPrint a single integer \u2014 the answer to the problem.ExamplesInputCopy3 10 3 3OutputCopy2InputCopy3 10 1 3OutputCopy3InputCopy100 100 1 1000OutputCopy1NoteIn the first sample you can act like this:   Put two divisors to the first box. Now the first box has three sections and we can put three nuts into each section. Overall, the first box will have nine nuts.  Do not put any divisors into the second box. Thus, the second box has one section for the last nut. In the end we've put all the ten nuts into boxes.The second sample is different as we have exactly one divisor and we put it to the first box. The next two boxes will have one section each."], "Fruits": ["https://codeforces.com/problemset/problem/12/C", "C. Fruitstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe spring is coming and it means that a lot of fruits appear on the counters. One sunny day little boy Valera decided to go shopping. He made a list of m fruits he wanted to buy. If Valera want to buy more than one fruit of some kind, he includes it into the list several times. When he came to the fruit stall of Ashot, he saw that the seller hadn't distributed price tags to the goods, but put all price tags on the counter. Later Ashot will attach every price tag to some kind of fruits, and Valera will be able to count the total price of all fruits from his list. But Valera wants to know now what can be the smallest total price (in case of the most \u00ablucky\u00bb for him distribution of price tags) and the largest total price (in case of the most \u00abunlucky\u00bb for him distribution of price tags).InputThe first line of the input contains two integer number n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the number of price tags (which is equal to the number of different kinds of fruits that Ashot sells) and the number of items in Valera's list. The second line contains n space-separated positive integer numbers. Each of them doesn't exceed 100 and stands for the price of one fruit of some kind. The following m lines contain names of the fruits from the list. Each name is a non-empty string of small Latin letters which length doesn't exceed 32. It is guaranteed that the number of distinct fruits from the list is less of equal to n. Also it is known that the seller has in stock all fruits that Valera wants to buy.OutputPrint two numbers a and b (a\u2009\u2264\u2009b) \u2014 the minimum and the maximum possible sum which Valera may need to buy all fruits from his list.ExamplesInputCopy5 34 2 1 10 5appleorangemangoOutputCopy7 19InputCopy6 53 5 1 6 8 1peachgrapefruitbananaorangeorangeOutputCopy11 30"], "Dima and Guards": ["https://codeforces.com/problemset/problem/366/A", "A. Dima and Guardstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNothing has changed since the last round. Dima and Inna still love each other and want to be together. They've made a deal with Seryozha and now they need to make a deal with the dorm guards...There are four guardposts in Dima's dorm. Each post contains two guards (in Russia they are usually elderly women). You can bribe a guard by a chocolate bar or a box of juice. For each guard you know the minimum price of the chocolate bar she can accept as a gift and the minimum price of the box of juice she can accept as a gift. If a chocolate bar for some guard costs less than the minimum chocolate bar price for this guard is, or if a box of juice for some guard costs less than the minimum box of juice price for this guard is, then the guard doesn't accept such a gift.In order to pass through a guardpost, one needs to bribe both guards.The shop has an unlimited amount of juice and chocolate of any price starting with 1. Dima wants to choose some guardpost, buy one gift for each guard from the guardpost and spend exactly n rubles on it.Help him choose a post through which he can safely sneak Inna or otherwise say that this is impossible. Mind you, Inna would be very sorry to hear that!InputThe first line of the input contains integer n\u00a0(1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the money Dima wants to spend. Then follow four lines describing the guardposts. Each line contains four integers a,\u2009b,\u2009c,\u2009d\u00a0(1\u2009\u2264\u2009a,\u2009b,\u2009c,\u2009d\u2009\u2264\u2009105) \u2014 the minimum price of the chocolate and the minimum price of the juice for the first guard and the minimum price of the chocolate and the minimum price of the juice for the second guard, correspondingly.OutputIn a single line of the output print three space-separated integers: the number of the guardpost, the cost of the first present and the cost of the second present. If there is no guardpost Dima can sneak Inna through at such conditions, print -1 in a single line. The guardposts are numbered from 1 to 4 according to the order given in the input.If there are multiple solutions, you can print any of them.ExamplesInputCopy105 6 5 66 6 7 75 8 6 69 9 9 9OutputCopy1 5 5InputCopy106 6 6 67 7 7 74 4 4 48 8 8 8OutputCopy3 4 6InputCopy53 3 3 33 3 3 33 3 3 33 3 3 3OutputCopy-1NoteExplanation of the first example.The only way to spend 10 rubles to buy the gifts that won't be less than the minimum prices is to buy two 5 ruble chocolates to both guards from the first guardpost.Explanation of the second example.Dima needs 12 rubles for the first guardpost, 14 for the second one, 16 for the fourth one. So the only guardpost we can sneak through is the third one. So, Dima can buy 4 ruble chocolate for the first guard and 6 ruble juice of the second guard."], "African Crossword": ["https://codeforces.com/problemset/problem/90/B", "B. African Crosswordtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn African crossword is a rectangular table n\u2009\u00d7\u2009m in size. Each cell of the table contains exactly one letter. This table (it is also referred to as grid) contains some encrypted word that needs to be decoded.To solve the crossword you should cross out all repeated letters in rows and columns. In other words, a letter should only be crossed out if and only if the corresponding column or row contains at least one more letter that is exactly the same. Besides, all such letters are crossed out simultaneously.When all repeated letters have been crossed out, we should write the remaining letters in a string. The letters that occupy a higher position follow before the letters that occupy a lower position. If the letters are located in one row, then the letter to the left goes first. The resulting word is the answer to the problem.You are suggested to solve an African crossword and print the word encrypted there.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100). Next n lines contain m lowercase Latin letters each. That is the crossword grid.OutputPrint the encrypted word on a single line. It is guaranteed that the answer consists of at least one letter.ExamplesInputCopy3 3cbabcdcbcOutputCopyabcdInputCopy5 5fcofdooedoafaoardcdfeofsfOutputCopycodeforces"], "Ternary Logic": ["https://codeforces.com/problemset/problem/136/B", "B. Ternary Logictime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya very much likes computers. Recently he has received a new \"Ternatron IV\" as a gift from his mother. Unlike other modern computers, \"Ternatron IV\" operates with ternary and not binary logic. Petya immediately wondered how the xor operation is performed on this computer (and whether there is anything like it).It turned out that the operation does exist (however, it is called tor) and it works like this. Suppose that we need to calculate the value of the expression a tor b. Both numbers a and b are written in the ternary notation one under the other one (b under a). If they have a different number of digits, then leading zeroes are added to the shorter number until the lengths are the same. Then the numbers are summed together digit by digit. The result of summing each two digits is calculated modulo 3. Note that there is no carry between digits (i. e. during this operation the digits aren't transferred). For example: 1410 tor 5010\u2009=\u200901123 tor 12123\u2009=\u200910213\u2009=\u20093410.Petya wrote numbers a and c on a piece of paper. Help him find such number b, that a tor b\u2009=\u2009c. If there are several such numbers, print the smallest one.InputThe first line contains two integers a and c (0\u2009\u2264\u2009a,\u2009c\u2009\u2264\u2009109). Both numbers are written in decimal notation.OutputPrint the single integer b, such that a tor b\u2009=\u2009c. If there are several possible numbers b, print the smallest one. You should print the number in decimal notation.ExamplesInputCopy14 34OutputCopy50InputCopy50 34OutputCopy14InputCopy387420489 225159023OutputCopy1000000001InputCopy5 5OutputCopy0"], "Vasya and Public Transport": ["https://codeforces.com/problemset/problem/355/B", "B. Vasya and Public Transporttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya often uses public transport. The transport in the city is of two types: trolleys and buses. The city has n buses and m trolleys, the buses are numbered by integers from 1 to n, the trolleys are numbered by integers from 1 to m.Public transport is not free. There are 4 types of tickets:   A ticket for one ride on some bus or trolley. It costs c1 burles;  A ticket for an unlimited number of rides on some bus or on some trolley. It costs c2 burles;  A ticket for an unlimited number of rides on all buses or all trolleys. It costs c3 burles;  A ticket for an unlimited number of rides on all buses and trolleys. It costs c4 burles. Vasya knows for sure the number of rides he is going to make and the transport he is going to use. He asked you for help to find the minimum sum of burles he will have to spend on the tickets.InputThe first line contains four integers c1,\u2009c2,\u2009c3,\u2009c4 (1\u2009\u2264\u2009c1,\u2009c2,\u2009c3,\u2009c4\u2009\u2264\u20091000) \u2014 the costs of the tickets.The second line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000) \u2014 the number of buses and trolleys Vasya is going to use.The third line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u20091000) \u2014 the number of times Vasya is going to use the bus number i.The fourth line contains m integers bi (0\u2009\u2264\u2009bi\u2009\u2264\u20091000) \u2014 the number of times Vasya is going to use the trolley number i.OutputPrint a single number \u2014 the minimum sum of burles Vasya will have to spend on the tickets.ExamplesInputCopy1 3 7 192 32 54 4 4OutputCopy12InputCopy4 3 2 11 37981 2 3OutputCopy1InputCopy100 100 8 1003 57 94 12100 1 47 0 42OutputCopy16NoteIn the first sample the profitable strategy is to buy two tickets of the first type (for the first bus), one ticket of the second type (for the second bus) and one ticket of the third type (for all trolleys). It totals to (2\u00b71)\u2009+\u20093\u2009+\u20097\u2009=\u200912 burles.In the second sample the profitable strategy is to buy one ticket of the fourth type.In the third sample the profitable strategy is to buy two tickets of the third type: for all buses and for all trolleys."], "Irrational problem": ["https://codeforces.com/problemset/problem/68/A", "A. Irrational problemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya was given this problem for homework:You are given function  (here  represents the operation of taking the remainder). His task is to count the number of integers x in range [a;b] with property f(x)\u2009=\u2009x.It is a pity that Petya forgot the order in which the remainders should be taken and wrote down only 4 numbers. Each of 24 possible orders of taking the remainder has equal probability of being chosen. For example, if Petya has numbers 1, 2, 3, 4 then he can take remainders in that order or first take remainder modulo 4, then modulo 2, 3, 1. There also are 22 other permutations of these numbers that represent orders in which remainder can be taken. In this problem 4 numbers wrote down by Petya will be pairwise distinct.Now it is impossible for Petya to complete the task given by teacher but just for fun he decided to find the number of integers  with property that probability that f(x)\u2009=\u2009x is not less than 31.4159265352718281828459045%. In other words, Petya will pick up the number x if there exist at least 7 permutations of numbers p1,\u2009p2,\u2009p3,\u2009p4, for which f(x)\u2009=\u2009x.InputFirst line of the input will contain 6 integers, separated by spaces: p1,\u2009p2,\u2009p3,\u2009p4,\u2009a,\u2009b (1\u2009\u2264\u2009p1,\u2009p2,\u2009p3,\u2009p4\u2009\u2264\u20091000,\u20090\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u200931415). It is guaranteed that numbers p1,\u2009p2,\u2009p3,\u2009p4 will be pairwise distinct.OutputOutput the number of integers in the given range that have the given property.ExamplesInputCopy2 7 1 8 2 8OutputCopy0InputCopy20 30 40 50 0 100OutputCopy20InputCopy31 41 59 26 17 43OutputCopy9"], "Mind the Gap": ["https://codeforces.com/problemset/problem/967/A", "A. Mind the Gaptime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThese days Arkady works as an air traffic controller at a large airport. He controls a runway which is usually used for landings only. Thus, he has a schedule of planes that are landing in the nearest future, each landing lasts 11 minute.He was asked to insert one takeoff in the schedule. The takeoff takes 11 minute itself, but for safety reasons there should be a time space between the takeoff and any landing of at least ss minutes from both sides.Find the earliest time when Arkady can insert the takeoff.InputThe first line of input contains two integers nn and ss (1\u2264n\u22641001\u2264n\u2264100, 1\u2264s\u2264601\u2264s\u226460)\u00a0\u2014 the number of landings on the schedule and the minimum allowed time (in minutes) between a landing and a takeoff.Each of next nn lines contains two integers hh and mm (0\u2264h\u2264230\u2264h\u226423, 0\u2264m\u2264590\u2264m\u226459)\u00a0\u2014 the time, in hours and minutes, when a plane will land, starting from current moment (i.\u00a0e. the current time is 00 00). These times are given in increasing order.OutputPrint two integers hh and mm\u00a0\u2014 the hour and the minute from the current moment of the earliest time Arkady can insert the takeoff.ExamplesInputCopy6 600 01 203 215 019 3023 40OutputCopy6 1InputCopy16 500 301 203 04 306 107 509 3011 1012 5014 3016 1017 5019 3021 1022 5023 59OutputCopy24 50InputCopy3 170 301 012 0OutputCopy0 0NoteIn the first example note that there is not enough time between 1:20 and 3:21, because each landing and the takeoff take one minute.In the second example there is no gaps in the schedule, so Arkady can only add takeoff after all landings. Note that it is possible that one should wait more than 2424 hours to insert the takeoff.In the third example Arkady can insert the takeoff even between the first landing."], "Autocomplete": ["https://codeforces.com/problemset/problem/53/A", "A. Autocompletetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAutocomplete is a program function that enables inputting the text (in editors, command line shells, browsers etc.) completing the text by its inputted part. Vasya is busy working on a new browser called 'BERowser'. He happens to be working on the autocomplete function in the address line at this very moment. A list consisting of n last visited by the user pages and the inputted part s are known. Your task is to complete s to make it an address of one of the pages from the list. You have to find the lexicographically smallest address having a prefix s.InputThe first line contains the s line which is the inputted part. The second line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) which is the number of visited pages. Then follow n lines which are the visited pages, one on each line. All the lines have lengths of from 1 to 100 symbols inclusively and consist of lowercase Latin letters only.OutputIf s is not the beginning of any of n addresses of the visited pages, print s. Otherwise, print the lexicographically minimal address of one of the visited pages starting from s.The lexicographical order is the order of words in a dictionary. The lexicographical comparison of lines is realized by the '<' operator in the modern programming languages.ExamplesInputCopynext2nextpermutationnextelementOutputCopynextelementInputCopyfind4findfindfirstoffinditfandOutputCopyfindInputCopyfind4fondfindfondfirstoffonditfandOutputCopyfind"], "Home Numbers": ["https://codeforces.com/problemset/problem/638/A", "A. Home Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe main street of Berland is a straight line with n houses built along it (n is an even number). The houses are located at both sides of the street. The houses with odd numbers are at one side of the street and are numbered from 1 to n\u2009-\u20091 in the order from the beginning of the street to the end (in the picture: from left to right). The houses with even numbers are at the other side of the street and are numbered from 2 to n in the order from the end of the street to its beginning (in the picture: from right to left). The corresponding houses with even and odd numbers are strictly opposite each other, that is, house 1 is opposite house n, house 3 is opposite house n\u2009-\u20092, house 5 is opposite house n\u2009-\u20094 and so on.  Vasya needs to get to house number a as quickly as possible. He starts driving from the beginning of the street and drives his car to house a. To get from the beginning of the street to houses number 1 and n, he spends exactly 1 second. He also spends exactly one second to drive the distance between two neighbouring houses. Vasya can park at any side of the road, so the distance between the beginning of the street at the houses that stand opposite one another should be considered the same.Your task is: find the minimum time Vasya needs to reach house a.InputThe first line of the input contains two integers, n and a (1\u2009\u2264\u2009a\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of houses on the street and the number of the house that Vasya needs to reach, correspondingly. It is guaranteed that number n is even.OutputPrint a single integer \u2014 the minimum time Vasya needs to get from the beginning of the street to house a.ExamplesInputCopy4 2OutputCopy2InputCopy8 5OutputCopy3NoteIn the first sample there are only four houses on the street, two houses at each side. House 2 will be the last at Vasya's right.The second sample corresponds to picture with n\u2009=\u20098. House 5 is the one before last at Vasya's left."], "Matchmaker": ["https://codeforces.com/problemset/problem/159/B", "B. Matchmakertime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarpus has n markers and m marker caps. Each marker is described by two numbers: xi is the color and yi is the diameter. Correspondingly, each cap is described by two numbers: aj is the color and bj is the diameter. Cap (aj,\u2009bj) can close marker (xi,\u2009yi) only if their diameters match, that is, bj\u2009=\u2009yi. Besides, a marker is considered to be beautifully closed, if the cap color and the marker color match, that is, aj\u2009=\u2009xi.Find the way to close the maximum number of markers. If there are several such ways, then choose the one that has the maximum number of beautifully closed markers.InputThe first input line contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the number of markers and the number of caps, correspondingly. Next n lines describe the markers. The i-th line contains two space-separated integers xi, yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u20091000) \u2014 the i-th marker's color and diameter, correspondingly.Next m lines describe the caps. The j-th line contains two space-separated integers aj, bj (1\u2009\u2264\u2009aj,\u2009bj\u2009\u2264\u20091000) \u2014 the color and diameter of the j-th cap, correspondingly.OutputPrint two space-separated integers u,\u2009v, where u is the number of closed markers and v is the number of beautifully closed markers in the sought optimal way. Remember that you have to find the way to close the maximum number of markers, and if there are several such ways, you should choose the one where the number of beautifully closed markers is maximum.ExamplesInputCopy3 41 23 42 45 42 41 11 2OutputCopy3 2InputCopy2 21 22 13 45 1OutputCopy1 0NoteIn the first test sample the first marker should be closed by the fourth cap, the second marker should be closed by the first cap and the third marker should be closed by the second cap. Thus, three markers will be closed, and two of them will be beautifully closed \u2014 the first and the third markers."], "Winnie-the-Pooh and honey": ["https://codeforces.com/problemset/problem/120/C", "C. Winnie-the-Pooh and honeytime limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtAs we all know, Winnie-the-Pooh just adores honey. Ones he and the Piglet found out that the Rabbit has recently gotten hold of an impressive amount of this sweet and healthy snack. As you may guess, Winnie and the Piglet asked to come at the Rabbit's place. Thus, there are n jars of honey lined up in front of Winnie-the-Pooh, jar number i contains ai kilos of honey. Winnie-the-Pooh eats the honey like that: each time he chooses a jar containing most honey. If the jar has less that k kilos of honey or if Winnie-the-Pooh has already eaten from it three times, he gives the jar to Piglet. Otherwise he eats exactly k kilos of honey from the jar and puts it back. Winnie does so until he gives all jars to the Piglet. Count how much honey Piglet will overall get after Winnie satisfies his hunger.InputThe first line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009100). The second line contains n integers a1, a2, ..., an, separated by spaces (1\u2009\u2264\u2009ai\u2009\u2264\u2009100).OutputPrint a single number \u2014 how many kilos of honey gets Piglet.ExamplesInputCopy3 315 8 10OutputCopy9"], "Quadcopter Competition": ["https://codeforces.com/problemset/problem/883/M", "M. Quadcopter Competitiontime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp takes part in a quadcopter competition. According to the rules a flying robot should:  start the race from some point of a field,  go around the flag,  close cycle returning back to the starting point. Polycarp knows the coordinates of the starting point (x1,\u2009y1) and the coordinates of the point where the flag is situated (x2,\u2009y2). Polycarp\u2019s quadcopter can fly only parallel to the sides of the field each tick changing exactly one coordinate by 1. It means that in one tick the quadcopter can fly from the point (x,\u2009y) to any of four points: (x\u2009-\u20091,\u2009y), (x\u2009+\u20091,\u2009y), (x,\u2009y\u2009-\u20091) or (x,\u2009y\u2009+\u20091).Thus the quadcopter path is a closed cycle starting and finishing in (x1,\u2009y1) and containing the point (x2,\u2009y2) strictly inside.  The picture corresponds to the first example: the starting (and finishing) point is in (1,\u20095) and the flag is in (5,\u20092). What is the minimal length of the quadcopter path?InputThe first line contains two integer numbers x1 and y1 (\u2009-\u2009100\u2009\u2264\u2009x1,\u2009y1\u2009\u2264\u2009100) \u2014 coordinates of the quadcopter starting (and finishing) point.The second line contains two integer numbers x2 and y2 (\u2009-\u2009100\u2009\u2264\u2009x2,\u2009y2\u2009\u2264\u2009100) \u2014 coordinates of the flag.It is guaranteed that the quadcopter starting point and the flag do not coincide.OutputPrint the length of minimal path of the quadcopter to surround the flag and return back.ExamplesInputCopy1 55 2OutputCopy18InputCopy0 10 0OutputCopy8"], "Quiz League": ["https://codeforces.com/problemset/problem/120/B", "B. Quiz Leaguetime limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtA team quiz game called \"What? Where? When?\" is very popular in Berland. The game is centered on two teams competing. They are the team of six Experts versus the team of the Audience. A person from the audience asks a question and the experts are allowed a minute on brainstorming and finding the right answer to the question. All it takes to answer a typical question is general knowledge and common logic. The question sent be the audience are in envelops lain out in a circle on a round table. Each envelop is marked by the name of the asker's town. Each question is positioned in a separate sector. In the centre of the table is a spinning arrow. Thus, the table rather resembles a roulette table with no ball but with a spinning arrow instead. The host sets off the spinning arrow to choose a question for the experts: when the arrow stops spinning, the question it is pointing at is chosen. If the arrow points at the question that has already been asked, the host chooses the next unanswered question in the clockwise direction. Your task is to determine which will be the number of the next asked question if the arrow points at sector number k.InputThe first line contains two positive integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u20091000 and 1\u2009\u2264\u2009k\u2009\u2264\u2009n) \u2014 the numbers of sectors on the table and the number of the sector where the arrow is pointing. The second line contains n numbers: ai\u2009=\u20090 if the question from sector i has already been asked and ai\u2009=\u20091 if the question from sector i hasn't been asked yet (1\u2009\u2264\u2009i\u2009\u2264\u2009n). The sectors are given in the clockwise order, the first sector follows after the n-th one.OutputPrint the single number \u2014 the number of the sector containing the question the experts will be asked. It is guaranteed that the answer exists, that is that not all the questions have already been asked.ExamplesInputCopy5 50 1 0 1 0OutputCopy2InputCopy2 11 1OutputCopy1"], "Another Sorting Problem": ["https://codeforces.com/problemset/problem/1575/A", "A. Another Sorting Problemtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputAndi and Budi were given an assignment to tidy up their bookshelf of nn books. Each book is represented by the book title \u2014 a string sisi numbered from 11 to nn, each with length mm. Andi really wants to sort the book lexicographically ascending, while Budi wants to sort it lexicographically descending.Settling their fight, they decided to combine their idea and sort it asc-desc-endingly, where the odd-indexed characters will be compared ascendingly, and the even-indexed characters will be compared descendingly.A string aa occurs before a string bb in asc-desc-ending order if and only if in the first position where aa and bb differ, the following holds:  if it is an odd position, the string aa has a letter that appears earlier in the alphabet than the corresponding letter in bb;  if it is an even position, the string aa has a letter that appears later in the alphabet than the corresponding letter in bb. InputThe first line contains two integers nn and mm (1\u2264n\u22c5m\u22641061\u2264n\u22c5m\u2264106).The ii-th of the next nn lines contains a string sisi consisting of mm uppercase Latin letters \u2014 the book title. The strings are pairwise distinct.OutputOutput nn integers \u2014 the indices of the strings after they are sorted asc-desc-endingly.ExampleInputCopy5 2\nAA\nAB\nBB\nBA\nAZ\nOutputCopy5 2 1 3 4\nNoteThe following illustrates the first example.  "], "Cubical Planet": ["https://codeforces.com/problemset/problem/39/D", "D. Cubical Planettime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputYou can find anything whatsoever in our Galaxy! A cubical planet goes round an icosahedral star. Let us introduce a system of axes so that the edges of the cubical planet are parallel to the coordinate axes and two opposite vertices lay in the points (0,\u20090,\u20090) and (1,\u20091,\u20091). Two flies live on the planet. At the moment they are sitting on two different vertices of the cubical planet. Your task is to determine whether they see each other or not. The flies see each other when the vertices they occupy lie on the same face of the cube.InputThe first line contains three space-separated integers (0 or 1) \u2014 the coordinates of the first fly, the second line analogously contains the coordinates of the second fly.OutputOutput \"YES\" (without quotes) if the flies see each other. Otherwise, output \"NO\".ExamplesInputCopy0 0 00 1 0OutputCopyYESInputCopy1 1 00 1 0OutputCopyYESInputCopy0 0 01 1 1OutputCopyNO"], "T-shirts from Sponsor": ["https://codeforces.com/problemset/problem/46/B", "B. T-shirts from Sponsortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day a well-known sponsor of a well-known contest decided to give every participant of the contest a T-shirt as a present. A natural problem occurred: on the one hand, it is not clear how many T-shirts of what sizes should be ordered, and on the other hand, one doesn't want to order too many T-shirts (and we do not exactly paper the walls with the oversupply). After considerable brain racking and some pre-estimating, the sponsor representatives ordered a certain number of T-shirts of sizes S, M, L, XL and XXL. The T-shirts turned out to bring good luck, that's why on the contest day there built up a line of K participants willing to get one. Every contestant is characterized by his/her desired T-shirt size (so it happens that for all the participants it is also one of the sizes S, M, L, XL and XXL). The participants come up to get a T-shirt one by one and try to choose the most suitable one, choosing it like this. If there is still a T-shirt of the optimal size left, that he/she takes it without further ado. Otherwise the contestant would prefer to choose a T-shirt with the size as close to the optimal one as possible (the distance between neighboring sizes is considered equal to one). If the variant of choice is not unique, the contestant will take a T-shirt of a bigger size (in case he/she grows more). For example, for a person whose optimal size is L the preference list looks like this: L, XL, M, XXL, S. Using the data on how many T-shirts of every size had been ordered by the organizers, on the size of contestants in the line determine who got a T-shirt of what size.InputThe first line contains five non-negative integers NS,\u2009NM,\u2009NL,\u2009NXL,\u2009NXXL not exceeding 1000 which represent the number of T-shirts of the corresponding sizes. The second line contains an integer K (1\u2009\u2264\u2009K\u2009\u2264\u20091000) which represents the number of participants. The next K lines contain the optimal T-shirt sizes for the contestants. The sizes are given in the order in which the participants stand in the line. It is guaranteed that NS\u2009+\u2009NM\u2009+\u2009NL\u2009+\u2009NXL\u2009+\u2009NXXL\u2009\u2265\u2009K.OutputFor each contestant, print a line containing the size of the T-shirt he/she got.ExamplesInputCopy1 0 2 0 13XLXXLMOutputCopyXXLLL"], "Increasing Matrix": ["https://codeforces.com/problemset/problem/1231/C", "C. Increasing Matrixtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn this problem, a n\u00d7mn\u00d7m rectangular matrix aa is called increasing if, for each row of ii, when go from left to right, the values strictly increase (that is, ai,1<ai,2<\u22ef<ai,mai,1<ai,2<\u22ef<ai,m) and for each column jj, when go from top to bottom, the values strictly increase (that is, a1,j<a2,j<\u22ef<an,ja1,j<a2,j<\u22ef<an,j).In a given matrix of non-negative integers, it is necessary to replace each value of 00 with some positive integer so that the resulting matrix is increasing and the sum of its elements is maximum, or find that it is impossible.It is guaranteed that in a given value matrix all values of 00 are contained only in internal cells (that is, not in the first or last row and not in the first or last column).InputThe first line contains integers nn and mm (3\u2264n,m\u22645003\u2264n,m\u2264500) \u2014 the number of rows and columns in the given matrix aa.The following lines contain mm each of non-negative integers \u2014 the values in the corresponding row of the given matrix: ai,1,ai,2,\u2026,ai,mai,1,ai,2,\u2026,ai,m (0\u2264ai,j\u226480000\u2264ai,j\u22648000).It is guaranteed that for all ai,j=0ai,j=0, 1<i<n1<i<n and 1<j<m1<j<m are true.OutputIf it is possible to replace all zeros with positive numbers so that the matrix is increasing, print the maximum possible sum of matrix elements. Otherwise, print -1.ExamplesInputCopy4 5\n1 3 5 6 7\n3 0 7 0 9\n5 0 0 0 10\n8 9 10 11 12\nOutputCopy144\nInputCopy3 3\n1 2 3\n2 0 4\n4 5 6\nOutputCopy30\nInputCopy3 3\n1 2 3\n3 0 4\n4 5 6\nOutputCopy-1\nInputCopy3 3\n1 2 3\n2 3 4\n3 4 2\nOutputCopy-1\nNoteIn the first example, the resulting matrix is as follows: 1 3 5 6 73 6 7 8 95 7 8 9 108 9 10 11 12In the second example, the value 33 must be put in the middle cell.In the third example, the desired resultant matrix does not exist."], "Replacing Digits": ["https://codeforces.com/problemset/problem/169/B", "B. Replacing Digitstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an integer a that consists of n digits. You are also given a sequence of digits s of length m. The digit in position j (1\u2009\u2264\u2009j\u2009\u2264\u2009m) of sequence s means that you can choose an arbitrary position i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) in a and replace the digit in the chosen position i with sj. Each element in the sequence s can participate in no more than one replacing operation.Your task is to perform such sequence of replacements, that the given number a gets maximum value. You are allowed to use not all elements from s.InputThe first line contains positive integer a. Its length n is positive and doesn't exceed 105. The second line contains sequence of digits s. Its length m is positive and doesn't exceed 105. The digits in the sequence s are written consecutively without any separators.The given number a doesn't contain leading zeroes. OutputPrint the maximum value that can be obtained from a after a series of replacements. You are allowed to use not all elements from s. The printed number shouldn't contain any leading zeroes.ExamplesInputCopy1024010OutputCopy1124InputCopy9871234567OutputCopy987"], "Orchestra": ["https://codeforces.com/problemset/problem/635/A", "A. Orchestratime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPaul is at the orchestra. The string section is arranged in an r\u2009\u00d7\u2009c rectangular grid and is filled with violinists with the exception of n violists. Paul really likes violas, so he would like to take a picture including at least k of them. Paul can take a picture of any axis-parallel rectangle in the orchestra. Count the number of possible pictures that Paul can take.Two pictures are considered to be different if the coordinates of corresponding rectangles are different.InputThe first line of input contains four space-separated integers r, c, n, k (1\u2009\u2264\u2009r,\u2009c,\u2009n\u2009\u2264\u200910, 1\u2009\u2264\u2009k\u2009\u2264\u2009n)\u00a0\u2014 the number of rows and columns of the string section, the total number of violas, and the minimum number of violas Paul would like in his photograph, respectively.The next n lines each contain two integers xi and yi (1\u2009\u2264\u2009xi\u2009\u2264\u2009r, 1\u2009\u2264\u2009yi\u2009\u2264\u2009c): the position of the i-th viola. It is guaranteed that no location appears more than once in the input.OutputPrint a single integer\u00a0\u2014 the number of photographs Paul can take which include at least k violas. ExamplesInputCopy2 2 1 11 2OutputCopy4InputCopy3 2 3 31 13 12 2OutputCopy1InputCopy3 2 3 21 13 12 2OutputCopy4NoteWe will use '*' to denote violinists and '#' to denote violists.In the first sample, the orchestra looks as follows *#** Paul can take a photograph of just the viola, the 1\u2009\u00d7\u20092 column containing the viola, the 2\u2009\u00d7\u20091 row containing the viola, or the entire string section, for 4 pictures total.In the second sample, the orchestra looks as follows #**##* Paul must take a photograph of the entire section.In the third sample, the orchestra looks the same as in the second sample."], "SMSC": ["https://codeforces.com/problemset/problem/292/A", "A. SMSCtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSome large corporation where Polycarpus works has its own short message service center (SMSC). The center's task is to send all sorts of crucial information. Polycarpus decided to check the efficiency of the SMSC. For that, he asked to give him the statistics of the performance of the SMSC for some period of time. In the end, Polycarpus got a list of n tasks that went to the SMSC of the corporation. Each task was described by the time it was received by the SMSC and the number of text messages to send. More formally, the i-th task was described by two integers ti and ci \u2014 the receiving time (the second) and the number of the text messages, correspondingly.Polycarpus knows that the SMSC cannot send more than one text message per second. The SMSC uses a queue to organize its work. Consider a time moment x, the SMSC work at that moment as follows:  If at the time moment x the queue is not empty, then SMSC sends one message from the queue (SMSC gets the message from the head of the queue). Otherwise it doesn't send messages at the time moment x.  If at the time moment x SMSC receives a task, then it adds to the queue all the messages from this task (SMSC adds messages to the tail of the queue). Note, that the messages from the task cannot be send at time moment x. That's because the decision about sending message or not is made at point 1 before adding these messages to the queue. Given the information about all n tasks, Polycarpus wants to count two values: the time when the last text message was sent and the maximum size of the queue at some time. Help him count these two characteristics he needs to evaluate the efficiency of the SMSC.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009103) \u2014 the number of tasks of the SMSC. Next n lines contain the tasks' descriptions: the i-th line contains two space-separated integers ti and ci (1\u2009\u2264\u2009ti,\u2009ci\u2009\u2264\u2009106) \u2014 the time (the second) when the i-th task was received and the number of messages to send, correspondingly.It is guaranteed that all tasks were received at different moments of time. It is guaranteed that the tasks are sorted in the chronological order, that is, ti\u2009<\u2009ti\u2009+\u20091 for all integer i (1\u2009\u2264\u2009i\u2009<\u2009n).OutputIn a single line print two space-separated integers \u2014 the time when the last text message was sent and the maximum queue size at a certain moment of time.ExamplesInputCopy21 12 1OutputCopy3 1InputCopy11000000 10OutputCopy1000010 10InputCopy33 34 35 3OutputCopy12 7NoteIn the first test sample:   second 1: the first message has appeared in the queue, the queue's size is 1;  second 2: the first message is sent, the second message has been received, the queue's size is 1;  second 3: the second message is sent, the queue's size is 0, Thus, the maximum size of the queue is 1, the last message was sent at the second 3."], "Collective Mindsets (easy)": ["https://codeforces.com/problemset/problem/690/A1", "A1. Collective Mindsets (easy)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTonight is brain dinner night and all zombies will gather together to scarf down some delicious brains. The artful Heidi plans to crash the party, incognito, disguised as one of them. Her objective is to get away with at least one brain, so she can analyze the zombies' mindset back home and gain a strategic advantage.They will be N guests tonight: N\u2009-\u20091 real zombies and a fake one, our Heidi. The living-dead love hierarchies as much as they love brains: each one has a unique rank in the range 1 to N\u2009-\u20091, and Heidi, who still appears slightly different from the others, is attributed the highest rank, N. Tonight there will be a chest with brains on display and every attendee sees how many there are. These will then be split among the attendees according to the following procedure:The zombie of the highest rank makes a suggestion on who gets how many brains (every brain is an indivisible entity). A vote follows. If at least half of the attendees accept the offer, the brains are shared in the suggested way and the feast begins. But if majority is not reached, then the highest-ranked zombie is killed, and the next zombie in hierarchy has to make a suggestion. If he is killed too, then the third highest-ranked makes one, etc. (It's enough to have exactly half of the votes \u2013 in case of a tie, the vote of the highest-ranked alive zombie counts twice, and he will of course vote in favor of his own suggestion in order to stay alive.)You should know that zombies are very greedy and sly, and they know this too \u2013 basically all zombie brains are alike. Consequently, a zombie will never accept an offer which is suboptimal for him. That is, if an offer is not strictly better than a potential later offer, he will vote against it. And make no mistake: while zombies may normally seem rather dull, tonight their intellects are perfect. Each zombie's priorities for tonight are, in descending order:   survive the event (they experienced death already once and know it is no fun),  get as many brains as possible. Heidi goes first and must make an offer which at least half of the attendees will accept, and which allocates at least one brain for Heidi herself.What is the smallest number of brains that have to be in the chest for this to be possible?InputThe only line of input contains one integer: N, the number of attendees (1\u2009\u2264\u2009N\u2009\u2264\u2009109).OutputOutput one integer: the smallest number of brains in the chest which allows Heidi to take one brain home.ExamplesInputCopy1OutputCopy1InputCopy4OutputCopy2Note"], "Special Task": ["https://codeforces.com/problemset/problem/316/A2", "A2. Special Tasktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSpecial Agent Smart Beaver works in a secret research department of ABBYY. He's been working there for a long time and is satisfied with his job, as it allows him to eat out in the best restaurants and order the most expensive and exotic wood types there. The content special agent has got an important task: to get the latest research by British scientists on the English Language. These developments are encoded and stored in a large safe. The Beaver's teeth are strong enough, so the authorities assured that upon arriving at the place the beaver won't have any problems with opening the safe.And he finishes his aspen sprig and leaves for this important task. Of course, the Beaver arrived at the location without any problems, but alas. He can't open the safe with his strong and big teeth. At this point, the Smart Beaver get a call from the headquarters and learns that opening the safe with the teeth is not necessary, as a reliable source has sent the following information: the safe code consists of digits and has no leading zeroes. There also is a special hint, which can be used to open the safe. The hint is string s with the following structure:  if si = \"?\", then the digit that goes i-th in the safe code can be anything (between 0 to 9, inclusively);  if si is a digit (between 0 to 9, inclusively), then it means that there is digit si on position i in code;  if the string contains letters from \"A\" to \"J\", then all positions with the same letters must contain the same digits and the positions with distinct letters must contain distinct digits.  The length of the safe code coincides with the length of the hint. For example, hint \"?JGJ9\" has such matching safe code variants: \"51919\", \"55959\", \"12329\", \"93539\" and so on, and has wrong variants such as: \"56669\", \"00111\", \"03539\" and \"13666\".After receiving such information, the authorities change the plan and ask the special agents to work quietly and gently and not to try to open the safe by mechanical means, and try to find the password using the given hint.At a special agent school the Smart Beaver was the fastest in his platoon finding codes for such safes, but now he is not in that shape: the years take their toll ... Help him to determine the number of possible variants of the code to the safe, matching the given hint. After receiving this information, and knowing his own speed of entering codes, the Smart Beaver will be able to determine whether he will have time for tonight's show \"Beavers are on the trail\" on his favorite TV channel, or he should work for a sleepless night...InputThe first line contains string s \u2014 the hint to the safe code. String s consists of the following characters: ?, 0-9, A-J. It is guaranteed that the first character of string s doesn't equal to character 0.The input limits for scoring 30 points are (subproblem A1):   1\u2009\u2264\u2009|s|\u2009\u2264\u20095. The input limits for scoring 100 points are (subproblems A1+A2):   1\u2009\u2264\u2009|s|\u2009\u2264\u2009105. Here |s| means the length of string s.OutputPrint the number of codes that match the given hint.ExamplesInputCopyAJOutputCopy81InputCopy1?AAOutputCopy100"], "Problem About Equation": ["https://codeforces.com/problemset/problem/174/A", "A. Problem About Equationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA group of n merry programmers celebrate Robert Floyd's birthday. Polucarpus has got an honourable task of pouring Ber-Cola to everybody. Pouring the same amount of Ber-Cola to everybody is really important. In other words, the drink's volume in each of the n mugs must be the same.Polycarpus has already began the process and he partially emptied the Ber-Cola bottle. Now the first mug has a1 milliliters of the drink, the second one has a2 milliliters and so on. The bottle has b milliliters left and Polycarpus plans to pour them into the mugs so that the main equation was fulfilled.Write a program that would determine what volume of the drink Polycarpus needs to add into each mug to ensure that the following two conditions were fulfilled simultaneously:   there were b milliliters poured in total. That is, the bottle need to be emptied;  after the process is over, the volumes of the drink in the mugs should be equal. InputThe first line contains a pair of integers n, b (2\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009b\u2009\u2264\u2009100), where n is the total number of friends in the group and b is the current volume of drink in the bottle. The second line contains a sequence of integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009100), where ai is the current volume of drink in the i-th mug.OutputPrint a single number \"-1\" (without the quotes), if there is no solution. Otherwise, print n float numbers c1,\u2009c2,\u2009...,\u2009cn, where ci is the volume of the drink to add in the i-th mug. Print the numbers with no less than 6 digits after the decimal point, print each ci on a single line. Polycarpus proved that if a solution exists then it is unique.Russian locale is installed by default on the testing computer. Make sure that your solution use the point to separate the integer part of a real number from the decimal, not a comma.ExamplesInputCopy5 501 2 3 4 5OutputCopy12.00000011.00000010.0000009.0000008.000000InputCopy2 21 100OutputCopy-1"], "Educational Game": ["https://codeforces.com/problemset/problem/178/A3", "A3. Educational Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Smart Beaver from ABBYY began to develop a new educational game for children. The rules of the game are fairly simple and are described below.The playing field is a sequence of n non-negative integers ai numbered from 1 to n. The goal of the game is to make numbers a1,\u2009a2,\u2009...,\u2009ak (i.e. some prefix of the sequence) equal to zero for some fixed k (k\u2009<\u2009n), and this should be done in the smallest possible number of moves.One move is choosing an integer i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) such that ai\u2009>\u20090 and an integer t (t\u2009\u2265\u20090) such that i\u2009+\u20092t\u2009\u2264\u2009n. After the values of i and t have been selected, the value of ai is decreased by 1, and the value of ai\u2009+\u20092t is increased by 1. For example, let n\u2009=\u20094 and a\u2009=\u2009(1,\u20090,\u20091,\u20092), then it is possible to make move i\u2009=\u20093, t\u2009=\u20090 and get a\u2009=\u2009(1,\u20090,\u20090,\u20093) or to make move i\u2009=\u20091, t\u2009=\u20091 and get a\u2009=\u2009(0,\u20090,\u20092,\u20092) (the only possible other move is i\u2009=\u20091, t\u2009=\u20090).You are given n and the initial sequence ai. The task is to calculate the minimum number of moves needed to make the first k elements of the original sequence equal to zero for each possible k (1\u2009\u2264\u2009k\u2009<\u2009n).InputThe first input line contains a single integer n. The second line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009104), separated by single spaces.The input limitations for getting 20 points are:   1\u2009\u2264\u2009n\u2009\u2264\u2009300 The input limitations for getting 50 points are:   1\u2009\u2264\u2009n\u2009\u2264\u20092000 The input limitations for getting 100 points are:   1\u2009\u2264\u2009n\u2009\u2264\u2009105 OutputPrint exactly n\u2009-\u20091 lines: the k-th output line must contain the minimum number of moves needed to make the first k elements of the original sequence ai equal to zero.Please do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams, or the %I64d specifier.ExamplesInputCopy41 0 1 2OutputCopy113InputCopy81 2 3 4 5 6 7 8OutputCopy13610162440"], "Generate plus state or minus state": ["https://codeforces.com/problemset/problem/1001/A", "A. Generate plus state or minus statetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a qubit in state  and an integer sign. Your task is to convert the given qubit to state  if sign\u2009=\u20091 or  if sign\u2009=\u2009\u2009-\u20091.InputYou have to implement an operation which takes a qubit and an integer as an input and has no output. The \"output\" of your solution is the state in which it left the input qubit.Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (q : Qubit, sign : Int) : ()    {        body        {            // your code here        }    }}"], "Carpeting the Room": ["https://codeforces.com/problemset/problem/100/A", "A. Carpeting the Roomtime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputSoroush's room is a square with side length n. Before this contest he bought k fine Persian carpets to carpet his room for celebrating the 100th contest on his favorite site. Each Persian carpet is a square of side length n1.Soroush wants to cover all the area of his room. Carpets can be put over each other but it is not allowed to rotate the carpets. Can Soroush carpet his room completely?InputThe input consists of three integer numbers n, k and n1 (10\u2009\u2264\u2009n\u2009\u2264\u200912, 1\u2009\u2264\u2009k\u2009\u2264\u200910, ).OutputWrite a single YES or NO. Write YES if and only if Sorush can carpet his room completely.ExamplesInputCopy10 4 6OutputCopyYESInputCopy10 2 5OutputCopyNO"], "Pentagonal numbers": ["https://codeforces.com/problemset/problem/162/A", "A. Pentagonal numberstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPentagonal numbers are figurate numbers which can be calculated using the formula pn\u2009=\u2009(3n2\u2009-\u2009n)\u2009/\u20092 (always integer). You are given n; calculate n-th pentagonal number.InputThe only line of input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100).OutputOutput the n-th pentagonal number.ExamplesInputCopy2OutputCopy5InputCopy5OutputCopy35"], "Hexagonal Numbers": ["https://codeforces.com/problemset/problem/188/A", "A. Hexagonal Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHexagonal numbers are figurate numbers which can be calculated using the formula hn\u2009=\u20092n2\u2009-\u2009n. You are given n; calculate n-th hexagonal number.InputThe only line of input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100).OutputOutput the n-th hexagonal number.ExamplesInputCopy3OutputCopy15InputCopy6OutputCopy66"], "Asterisks": ["https://codeforces.com/problemset/problem/188/D", "D. Asteriskstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a number n. Print n lines, i-th line should consist of i characters \"*\". Lines' indices are 1-based.InputThe only line of input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950).OutputOutput the described pattern.ExamplesInputCopy3OutputCopy******InputCopy6OutputCopy*********************"], "AND oracle": ["https://codeforces.com/problemset/problem/1115/G1", "G1. AND oracletime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a quantum oracle on NN qubits which implements the following function: f(x\u20d7\u00a0)=x0\u2227x1\u2227\u22ef\u2227xN\u22121f(x\u2192)=x0\u2227x1\u2227\u22ef\u2227xN\u22121You have to implement an operation which takes the following inputs: an array of NN (1\u2264N\u226481\u2264N\u22648) qubits xx in an arbitrary state (input register), a qubit yy in an arbitrary state (output qubit),and performs a transformation |x\u27e9|y\u27e9\u2192|x\u27e9|y\u2295f(x)\u27e9|x\u27e9|y\u27e9\u2192|x\u27e9|y\u2295f(x)\u27e9. The operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (x : Qubit[], y : Qubit) : Unit {        body (...) {            // your code here        }        adjoint auto;    }}"], "Vanya and Lanterns": ["https://codeforces.com/problemset/problem/492/B", "B. Vanya and Lanternstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVanya walks late at night along a straight street of length l, lit by n lanterns. Consider the coordinate system with the beginning of the street corresponding to the point 0, and its end corresponding to the point l. Then the i-th lantern is at the point ai. The lantern lights all points of the street that are at the distance of at most d from it, where d is some positive number, common for all lanterns. Vanya wonders: what is the minimum light radius d should the lanterns have to light the whole street?InputThe first line contains two integers n, l (1\u2009\u2264\u2009n\u2009\u2264\u20091000, 1\u2009\u2264\u2009l\u2009\u2264\u2009109)\u00a0\u2014 the number of lanterns and the length of the street respectively. The next line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009l). Multiple lanterns can be located at the same point. The lanterns may be located at the ends of the street.OutputPrint the minimum light radius d, needed to light the whole street. The answer will be considered correct if its absolute or relative error doesn't exceed 10\u2009-\u20099.ExamplesInputCopy7 1515 5 3 7 9 14 0OutputCopy2.5000000000InputCopy2 52 5OutputCopy2.0000000000NoteConsider the second sample. At d\u2009=\u20092 the first lantern will light the segment [0,\u20094] of the street, and the second lantern will light segment [3,\u20095]. Thus, the whole street will be lit."], "Cheap Travel": ["https://codeforces.com/problemset/problem/466/A", "A. Cheap Traveltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnn has recently started commuting by subway. We know that a one ride subway ticket costs a rubles. Besides, Ann found out that she can buy a special ticket for m rides (she can buy it several times). It costs b rubles. Ann did the math; she will need to use subway n times. Help Ann, tell her what is the minimum sum of money she will have to spend to make n rides?InputThe single line contains four space-separated integers n, m, a, b (1\u2009\u2264\u2009n,\u2009m,\u2009a,\u2009b\u2009\u2264\u20091000) \u2014 the number of rides Ann has planned, the number of rides covered by the m ride ticket, the price of a one ride ticket and the price of an m ride ticket. OutputPrint a single integer \u2014 the minimum sum in rubles that Ann will need to spend.ExamplesInputCopy6 2 1 2OutputCopy6InputCopy5 2 2 3OutputCopy8NoteIn the first sample one of the optimal solutions is: each time buy a one ride ticket. There are other optimal solutions. For example, buy three m ride tickets."], "BerSU Ball": ["https://codeforces.com/problemset/problem/489/B", "B. BerSU Balltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Berland State University is hosting a ballroom dance in celebration of its 100500-th anniversary! n boys and m girls are already busy rehearsing waltz, minuet, polonaise and quadrille moves.We know that several boy&girl pairs are going to be invited to the ball. However, the partners' dancing skill in each pair must differ by at most one.For each boy, we know his dancing skills. Similarly, for each girl we know her dancing skills. Write a code that can determine the largest possible number of pairs that can be formed from n boys and m girls.InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of boys. The second line contains sequence a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009100), where ai is the i-th boy's dancing skill.Similarly, the third line contains an integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009100) \u2014 the number of girls. The fourth line contains sequence b1,\u2009b2,\u2009...,\u2009bm (1\u2009\u2264\u2009bj\u2009\u2264\u2009100), where bj is the j-th girl's dancing skill.OutputPrint a single number \u2014 the required maximum possible number of pairs.ExamplesInputCopy41 4 6 255 1 5 7 9OutputCopy3InputCopy41 2 3 4410 11 12 13OutputCopy0InputCopy51 1 1 1 131 2 3OutputCopy2"], "K-th Not Divisible by n": ["https://codeforces.com/problemset/problem/1352/C", "C. K-th Not Divisible by ntime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two positive integers nn and kk. Print the kk-th positive integer that is not divisible by nn.For example, if n=3n=3, and k=7k=7, then all numbers that are not divisible by 33 are: 1,2,4,5,7,8,10,11,13\u20261,2,4,5,7,8,10,11,13\u2026. The 77-th number among them is 1010.InputThe first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases in the input. Next, tt test cases are given, one per line.Each test case is two positive integers nn (2\u2264n\u22641092\u2264n\u2264109) and kk (1\u2264k\u22641091\u2264k\u2264109).OutputFor each test case print the kk-th positive integer that is not divisible by nn.ExampleInputCopy6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\nOutputCopy10\n15\n1999999999\n113\n1000000001\n1\n"], "Flipping Game": ["https://codeforces.com/problemset/problem/327/A", "A. Flipping Gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIahub got bored, so he invented a game to be played on paper. He writes n integers a1,\u2009a2,\u2009...,\u2009an. Each of those integers can be either 0 or 1. He's allowed to do exactly one move: he chooses two indices i and j (1\u2009\u2264\u2009i\u2009\u2264\u2009j\u2009\u2264\u2009n) and flips all values ak for which their positions are in range [i,\u2009j] (that is i\u2009\u2264\u2009k\u2009\u2264\u2009j). Flip the value of x means to apply operation x\u2009=\u20091 - x.The goal of the game is that after exactly one move to obtain the maximum number of ones. Write a program to solve the little game of Iahub.InputThe first line of the input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100). In the second line of the input there are n integers: a1,\u2009a2,\u2009...,\u2009an. It is guaranteed that each of those n values is either 0 or 1.OutputPrint an integer \u2014 the maximal number of 1s that can be obtained after exactly one move. ExamplesInputCopy51 0 0 1 0OutputCopy4InputCopy41 0 0 1OutputCopy4NoteIn the first case, flip the segment from 2 to 5 (i\u2009=\u20092,\u2009j\u2009=\u20095). That flip changes the sequence, it becomes: [1 1 1 0 1]. So, it contains four ones. There is no way to make the whole sequence equal to [1 1 1 1 1].In the second case, flipping only the second and the third element (i\u2009=\u20092,\u2009j\u2009=\u20093) will turn all numbers into 1."], "Worms": ["https://codeforces.com/problemset/problem/474/B", "B. Wormstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt is lunch time for Mole. His friend, Marmot, prepared him a nice game for lunch.Marmot brought Mole n ordered piles of worms such that i-th pile contains ai worms. He labeled all these worms with consecutive integers: worms in first pile are labeled with numbers 1 to a1, worms in second pile are labeled with numbers a1\u2009+\u20091 to a1\u2009+\u2009a2 and so on. See the example for a better understanding.Mole can't eat all the worms (Marmot brought a lot) and, as we all know, Mole is blind, so Marmot tells him the labels of the best juicy worms. Marmot will only give Mole a worm if Mole says correctly in which pile this worm is contained.Poor Mole asks for your help. For all juicy worms said by Marmot, tell Mole the correct answers.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105), the number of piles.The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009103, a1\u2009+\u2009a2\u2009+\u2009...\u2009+\u2009an\u2009\u2264\u2009106), where ai is the number of worms in the i-th pile.The third line contains single integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009105), the number of juicy worms said by Marmot.The fourth line contains m integers q1,\u2009q2,\u2009...,\u2009qm (1\u2009\u2264\u2009qi\u2009\u2264\u2009a1\u2009+\u2009a2\u2009+\u2009...\u2009+\u2009an), the labels of the juicy worms.OutputPrint m lines to the standard output. The i-th line should contain an integer, representing the number of the pile where the worm labeled with the number qi is.ExamplesInputCopy52 7 3 4 931 25 11OutputCopy153NoteFor the sample input:  The worms with labels from [1, 2] are in the first pile.  The worms with labels from [3, 9] are in the second pile.  The worms with labels from [10, 12] are in the third pile.  The worms with labels from [13, 16] are in the fourth pile.  The worms with labels from [17, 25] are in the fifth pile. "], "Alternating Subsequence": ["https://codeforces.com/problemset/problem/1343/C", "C. Alternating Subsequencetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecall that the sequence bb is a a subsequence of the sequence aa if bb can be derived from aa by removing zero or more elements without changing the order of the remaining elements. For example, if a=[1,2,1,3,1,2,1]a=[1,2,1,3,1,2,1], then possible subsequences are: [1,1,1,1][1,1,1,1], [3][3] and [1,2,1,3,1,2,1][1,2,1,3,1,2,1], but not [3,2,3][3,2,3] and [1,1,1,1,2][1,1,1,1,2].You are given a sequence aa consisting of nn positive and negative elements (there is no zeros in the sequence).Your task is to choose maximum by size (length) alternating subsequence of the given sequence (i.e. the sign of each next element is the opposite from the sign of the current element, like positive-negative-positive and so on or negative-positive-negative and so on). Among all such subsequences, you have to choose one which has the maximum sum of elements.In other words, if the maximum length of alternating subsequence is kk then your task is to find the maximum sum of elements of some alternating subsequence of length kk.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. Then tt test cases follow.The first line of the test case contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of elements in aa. The second line of the test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109,ai\u22600\u2212109\u2264ai\u2264109,ai\u22600), where aiai is the ii-th element of aa.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105).OutputFor each test case, print the answer \u2014 the maximum sum of the maximum by size (length) alternating subsequence of aa.ExampleInputCopy4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\nOutputCopy2\n-1\n6\n-2999999997\nNoteIn the first test case of the example, one of the possible answers is [1,2,3\u2013,\u22121\u2013\u2013\u2013,\u22122][1,2,3_,\u22121_,\u22122].In the second test case of the example, one of the possible answers is [\u22121,\u22122,\u22121\u2013\u2013\u2013,\u22123][\u22121,\u22122,\u22121_,\u22123].In the third test case of the example, one of the possible answers is [\u22122\u2013\u2013\u2013,8,3,8\u2013,\u22124\u2013\u2013\u2013,\u221215,5\u2013,\u22122\u2013\u2013\u2013,\u22123,1\u2013][\u22122_,8,3,8_,\u22124_,\u221215,5_,\u22122_,\u22123,1_].In the fourth test case of the example, one of the possible answers is [1\u2013,\u22121000000000\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013,1\u2013,\u22121000000000\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013,1\u2013,\u22121000000000\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013][1_,\u22121000000000_,1_,\u22121000000000_,1_,\u22121000000000_]."], "Odd Selection": ["https://codeforces.com/problemset/problem/1363/A", "A. Odd Selectiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputShubham has an array aa of size nn, and wants to select exactly xx elements from it, such that their sum is odd. These elements do not have to be consecutive. The elements of the array are not guaranteed to be distinct.Tell him whether he can do so.InputThe first line of the input contains a single integer tt (1\u2264t\u2264100)(1\u2264t\u2264100)\u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains two integers nn and xx (1\u2264x\u2264n\u22641000)(1\u2264x\u2264n\u22641000)\u00a0\u2014 the length of the array and the number of elements you need to choose.The next line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641000)(1\u2264ai\u22641000)\u00a0\u2014 elements of the array.OutputFor each test case, print \"Yes\" or \"No\" depending on whether it is possible to choose xx elements such that their sum is odd.You may print every letter in any case you want.ExampleInputCopy5\n1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103\nOutputCopyYes\nNo\nYes\nYes\nNo\nNoteFor 11st case: We must select element 999999, and the sum is odd.For 22nd case: We must select element 10001000, so overall sum is not odd.For 33rd case: We can select element 5151.For 44th case: We must select both elements 5050 and 5151 \u00a0\u2014 so overall sum is odd.For 55th case: We must select all elements \u00a0\u2014 but overall sum is not odd."], "Same Parity Summands": ["https://codeforces.com/problemset/problem/1352/B", "B. Same Parity Summandstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two positive integers nn (1\u2264n\u22641091\u2264n\u2264109) and kk (1\u2264k\u22641001\u2264k\u2264100). Represent the number nn as the sum of kk positive integers of the same parity (have the same remainder when divided by 22).In other words, find a1,a2,\u2026,aka1,a2,\u2026,ak such that all ai>0ai>0, n=a1+a2+\u2026+akn=a1+a2+\u2026+ak and either all aiai are even or all aiai are odd at the same time.If such a representation does not exist, then report it.InputThe first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases in the input. Next, tt test cases are given, one per line.Each test case is two positive integers nn (1\u2264n\u22641091\u2264n\u2264109) and kk (1\u2264k\u22641001\u2264k\u2264100).OutputFor each test case print:  YES and the required values aiai, if the answer exists (if there are several answers, print any of them);  NO if the answer does not exist. The letters in the words YES and NO can be printed in any case.ExampleInputCopy8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\nOutputCopyYES\n4 2 4\nYES\n55 5 5 35\nNO\nNO\nYES\n1 1 1 1 1 1 1 1\nNO\nYES\n3 1 1\nYES\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\n"], "Same Differences": ["https://codeforces.com/problemset/problem/1520/D", "D. Same Differencestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of nn integers. Count the number of pairs of indices (i,j)(i,j) such that i<ji<j and aj\u2212ai=j\u2212iaj\u2212ai=j\u2212i.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104). Then tt test cases follow.The first line of each test case contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105).The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n)\u00a0\u2014 array aa.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case output the number of pairs of indices (i,j)(i,j) such that i<ji<j and aj\u2212ai=j\u2212iaj\u2212ai=j\u2212i.ExampleInputCopy4\n6\n3 5 1 4 6 6\n3\n1 2 3\n4\n1 3 3 4\n6\n1 6 3 4 5 6\nOutputCopy1\n3\n3\n10\n"], "Pashmak and Garden": ["https://codeforces.com/problemset/problem/459/A", "A. Pashmak and Gardentime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPashmak has fallen in love with an attractive girl called Parmida since one year ago...Today, Pashmak set up a meeting with his partner in a romantic garden. Unfortunately, Pashmak has forgotten where the garden is. But he remembers that the garden looks like a square with sides parallel to the coordinate axes. He also remembers that there is exactly one tree on each vertex of the square. Now, Pashmak knows the position of only two of the trees. Help him to find the position of two remaining ones.InputThe first line contains four space-separated x1,\u2009y1,\u2009x2,\u2009y2 (\u2009-\u2009100\u2009\u2264\u2009x1,\u2009y1,\u2009x2,\u2009y2\u2009\u2264\u2009100) integers, where x1 and y1 are coordinates of the first tree and x2 and y2 are coordinates of the second tree. It's guaranteed that the given points are distinct.OutputIf there is no solution to the problem, print -1. Otherwise print four space-separated integers x3,\u2009y3,\u2009x4,\u2009y4 that correspond to the coordinates of the two other trees. If there are several solutions you can output any of them. Note that x3,\u2009y3,\u2009x4,\u2009y4 must be in the range (\u2009-\u20091000\u2009\u2264\u2009x3,\u2009y3,\u2009x4,\u2009y4\u2009\u2264\u20091000).ExamplesInputCopy0 0 0 1OutputCopy1 0 1 1InputCopy0 0 1 1OutputCopy0 1 1 0InputCopy0 0 1 2OutputCopy-1"], "Ternary XOR": ["https://codeforces.com/problemset/problem/1328/C", "C. Ternary XORtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA number is ternary if it contains only digits 00, 11 and 22. For example, the following numbers are ternary: 10221022, 1111, 2121, 20022002.You are given a long ternary number xx. The first (leftmost) digit of xx is guaranteed to be 22, the other digits of xx can be 00, 11 or 22.Let's define the ternary XOR operation \u2299\u2299 of two ternary numbers aa and bb (both of length nn) as a number c=a\u2299bc=a\u2299b of length nn, where ci=(ai+bi)%3ci=(ai+bi)%3 (where %% is modulo operation). In other words, add the corresponding digits and take the remainders of the sums when divided by 33. For example, 10222\u229911021=2121010222\u229911021=21210.Your task is to find such ternary numbers aa and bb both of length nn and both without leading zeros that a\u2299b=xa\u2299b=x and max(a,b)max(a,b) is the minimum possible.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. Then tt test cases follow. The first line of the test case contains one integer nn (1\u2264n\u22645\u22c51041\u2264n\u22645\u22c5104) \u2014 the length of xx. The second line of the test case contains ternary number xx consisting of nn digits 0,10,1 or 22. It is guaranteed that the first digit of xx is 22. It is guaranteed that the sum of nn over all test cases does not exceed 5\u22c51045\u22c5104 (\u2211n\u22645\u22c5104\u2211n\u22645\u22c5104).OutputFor each test case, print the answer \u2014 two ternary integers aa and bb both of length nn and both without leading zeros such that a\u2299b=xa\u2299b=x and max(a,b)max(a,b) is the minimum possible. If there are several answers, you can print any.ExampleInputCopy4\n5\n22222\n5\n21211\n1\n2\n9\n220222021\nOutputCopy11111\n11111\n11000\n10211\n1\n1\n110111011\n110111010\n"], "Chewba\u0441ca and Number": ["https://codeforces.com/problemset/problem/514/A", "A. Chewba\u0441ca and Numbertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLuke Skywalker gave Chewbacca an integer number x. Chewbacca isn't good at numbers but he loves inverting digits in them. Inverting digit t means replacing it with digit 9\u2009-\u2009t. Help Chewbacca to transform the initial number x to the minimum possible positive number by inverting some (possibly, zero) digits. The decimal representation of the final number shouldn't start with a zero.InputThe first line contains a single integer x (1\u2009\u2264\u2009x\u2009\u2264\u20091018) \u2014 the number that Luke Skywalker gave to Chewbacca.OutputPrint the minimum possible positive number that Chewbacca can obtain after inverting some digits. The number shouldn't contain leading zeroes.ExamplesInputCopy27OutputCopy22InputCopy4545OutputCopy4444"], "Kuriyama Mirai's Stones": ["https://codeforces.com/problemset/problem/433/B", "B. Kuriyama Mirai's Stonestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputKuriyama Mirai has killed many monsters and got many (namely n) stones. She numbers the stones from 1 to n. The cost of the i-th stone is vi. Kuriyama Mirai wants to know something about these stones so she will ask you two kinds of questions:  She will tell you two numbers, l and r\u00a0(1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009n), and you should tell her .  Let ui be the cost of the i-th cheapest stone (the cost that will be on the i-th place if we arrange all the stone costs in non-decreasing order). This time she will tell you two numbers, l and r\u00a0(1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009n), and you should tell her . For every question you should give the correct answer, or Kuriyama Mirai will say \"fuyukai desu\" and then become unhappy.InputThe first line contains an integer n\u00a0(1\u2009\u2264\u2009n\u2009\u2264\u2009105). The second line contains n integers: v1,\u2009v2,\u2009...,\u2009vn\u00a0(1\u2009\u2264\u2009vi\u2009\u2264\u2009109) \u2014 costs of the stones. The third line contains an integer m\u00a0(1\u2009\u2264\u2009m\u2009\u2264\u2009105) \u2014 the number of Kuriyama Mirai's questions. Then follow m lines, each line contains three integers type, l and r\u00a0(1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009n;\u00a01\u2009\u2264\u2009type\u2009\u2264\u20092), describing a question. If type equal to 1, then you should output the answer for the first question, else you should output the answer for the second one.OutputPrint m lines. Each line must contain an integer \u2014 the answer to Kuriyama Mirai's question. Print the answers to the questions in the order of input.ExamplesInputCopy66 4 2 7 2 732 3 61 3 41 1 6OutputCopy24928InputCopy45 5 2 3101 2 42 1 41 1 12 1 42 1 21 1 11 3 31 1 31 4 41 2 2OutputCopy10155155521235NotePlease note that the answers to the questions may overflow 32-bit integer type."], "Boats Competition": ["https://codeforces.com/problemset/problem/1399/C", "C. Boats Competitiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn people who want to participate in a boat competition. The weight of the ii-th participant is wiwi. Only teams consisting of two people can participate in this competition. As an organizer, you think that it's fair to allow only teams with the same total weight.So, if there are kk teams (a1,b1)(a1,b1), (a2,b2)(a2,b2), \u2026\u2026, (ak,bk)(ak,bk), where aiai is the weight of the first participant of the ii-th team and bibi is the weight of the second participant of the ii-th team, then the condition a1+b1=a2+b2=\u22ef=ak+bk=sa1+b1=a2+b2=\u22ef=ak+bk=s, where ss is the total weight of each team, should be satisfied.Your task is to choose such ss that the number of teams people can create is the maximum possible. Note that each participant can be in no more than one team.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases. Then tt test cases follow.The first line of the test case contains one integer nn (1\u2264n\u2264501\u2264n\u226450) \u2014 the number of participants. The second line of the test case contains nn integers w1,w2,\u2026,wnw1,w2,\u2026,wn (1\u2264wi\u2264n1\u2264wi\u2264n), where wiwi is the weight of the ii-th participant.OutputFor each test case, print one integer kk: the maximum number of teams people can compose with the total weight ss, if you choose ss optimally.ExampleInputCopy5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\nOutputCopy2\n3\n4\n1\n2\nNoteIn the first test case of the example, we can reach the optimal answer for s=6s=6. Then the first boat is used by participants 11 and 55 and the second boat is used by participants 22 and 44 (indices are the same as weights).In the second test case of the example, we can reach the optimal answer for s=12s=12. Then first 66 participants can form 33 pairs.In the third test case of the example, we can reach the optimal answer for s=3s=3. The answer is 44 because we have 44 participants with weight 11 and 44 participants with weight 22.In the fourth test case of the example, we can reach the optimal answer for s=4s=4 or s=6s=6.In the fifth test case of the example, we can reach the optimal answer for s=3s=3. Note that participant with weight 33 can't use the boat because there is no suitable pair for him in the list."], "Ternary String": ["https://codeforces.com/problemset/problem/1354/B", "B. Ternary Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string ss such that each its character is either 1, 2, or 3. You have to choose the shortest contiguous substring of ss such that it contains each of these three characters at least once.A contiguous substring of string ss is a string that can be obtained from ss by removing some (possibly zero) characters from the beginning of ss and some (possibly zero) characters from the end of ss.InputThe first line contains one integer tt (1\u2264t\u2264200001\u2264t\u226420000) \u2014 the number of test cases.Each test case consists of one line containing the string ss (1\u2264|s|\u22642000001\u2264|s|\u2264200000). It is guaranteed that each character of ss is either 1, 2, or 3.The sum of lengths of all strings in all test cases does not exceed 200000200000.OutputFor each test case, print one integer \u2014 the length of the shortest contiguous substring of ss containing all three types of characters at least once. If there is no such substring, print 00 instead.ExampleInputCopy7\n123\n12222133333332\n112233\n332211\n12121212\n333333\n31121\nOutputCopy3\n3\n4\n4\n0\n0\n4\nNoteConsider the example test:In the first test case, the substring 123 can be used.In the second test case, the substring 213 can be used.In the third test case, the substring 1223 can be used.In the fourth test case, the substring 3221 can be used.In the fifth test case, there is no character 3 in ss.In the sixth test case, there is no character 1 in ss.In the seventh test case, the substring 3112 can be used."], "Make It Good": ["https://codeforces.com/problemset/problem/1385/C", "C. Make It Goodtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn integers. You have to find the length of the smallest (shortest) prefix of elements you need to erase from aa to make it a good array. Recall that the prefix of the array a=[a1,a2,\u2026,an]a=[a1,a2,\u2026,an] is a subarray consisting several first elements: the prefix of the array aa of length kk is the array [a1,a2,\u2026,ak][a1,a2,\u2026,ak] (0\u2264k\u2264n0\u2264k\u2264n).The array bb of length mm is called good, if you can obtain a non-decreasing array cc (c1\u2264c2\u2264\u22ef\u2264cmc1\u2264c2\u2264\u22ef\u2264cm) from it, repeating the following operation mm times (initially, cc is empty):  select either the first or the last element of bb, remove it from bb, and append it to the end of the array cc. For example, if we do 44 operations: take b1b1, then bmbm, then bm\u22121bm\u22121 and at last b2b2, then bb becomes [b3,b4,\u2026,bm\u22123][b3,b4,\u2026,bm\u22123] and c=[b1,bm,bm\u22121,b2]c=[b1,bm,bm\u22121,b2].Consider the following example: b=[1,2,3,4,4,2,1]b=[1,2,3,4,4,2,1]. This array is good because we can obtain non-decreasing array cc from it by the following sequence of operations:  take the first element of bb, so b=[2,3,4,4,2,1]b=[2,3,4,4,2,1], c=[1]c=[1];  take the last element of bb, so b=[2,3,4,4,2]b=[2,3,4,4,2], c=[1,1]c=[1,1];  take the last element of bb, so b=[2,3,4,4]b=[2,3,4,4], c=[1,1,2]c=[1,1,2];  take the first element of bb, so b=[3,4,4]b=[3,4,4], c=[1,1,2,2]c=[1,1,2,2];  take the first element of bb, so b=[4,4]b=[4,4], c=[1,1,2,2,3]c=[1,1,2,2,3];  take the last element of bb, so b=[4]b=[4], c=[1,1,2,2,3,4]c=[1,1,2,2,3,4];  take the only element of bb, so b=[]b=[], c=[1,1,2,2,3,4,4]c=[1,1,2,2,3,4,4]\u00a0\u2014 cc is non-decreasing. Note that the array consisting of one element is good.Print the length of the shortest prefix of aa to delete (erase), to make aa to be a good array. Note that the required length can be 00.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u2014 the number of test cases. Then tt test cases follow.The first line of the test case contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the length of aa. The second line of the test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22642\u22c51051\u2264ai\u22642\u22c5105), where aiai is the ii-th element of aa.It is guaranteed that the sum of nn does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105).OutputFor each test case, print the answer: the length of the shortest prefix of elements you need to erase from aa to make it a good array.ExampleInputCopy5\n4\n1 2 3 4\n7\n4 3 3 8 4 5 2\n3\n1 1 1\n7\n1 3 1 4 5 3 2\n5\n5 4 3 2 3\nOutputCopy0\n4\n0\n2\n3\nNoteIn the first test case of the example, the array aa is already good, so we don't need to erase any prefix.In the second test case of the example, the initial array aa is not good. Let's erase first 44 elements of aa, the result is [4,5,2][4,5,2]. The resulting array is good. You can prove that if you erase fewer number of first elements, the result will not be good."], "Sorted Adjacent Differences": ["https://codeforces.com/problemset/problem/1339/B", "B. Sorted Adjacent Differencestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have array of nn numbers a1,a2,\u2026,ana1,a2,\u2026,an. Rearrange these numbers to satisfy |a1\u2212a2|\u2264|a2\u2212a3|\u2264\u2026\u2264|an\u22121\u2212an||a1\u2212a2|\u2264|a2\u2212a3|\u2264\u2026\u2264|an\u22121\u2212an|, where |x||x| denotes absolute value of xx. It's always possible to find such rearrangement.Note that all numbers in aa are not necessarily different. In other words, some numbers of aa may be same.You have to answer independent tt test cases.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.The first line of each test case contains single integer nn (3\u2264n\u22641053\u2264n\u2264105)\u00a0\u2014 the length of array aa. It is guaranteed that the sum of values of nn over all test cases in the input does not exceed 105105.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109).OutputFor each test case, print the rearranged version of array aa which satisfies given condition. If there are multiple valid rearrangements, print any of them.ExampleInputCopy2\n6\n5 -2 4 8 6 5\n4\n8 1 4 2\nOutputCopy5 5 4 6 8 -2\n1 2 4 8\nNoteIn the first test case, after given rearrangement, |a1\u2212a2|=0\u2264|a2\u2212a3|=1\u2264|a3\u2212a4|=2\u2264|a4\u2212a5|=2\u2264|a5\u2212a6|=10|a1\u2212a2|=0\u2264|a2\u2212a3|=1\u2264|a3\u2212a4|=2\u2264|a4\u2212a5|=2\u2264|a5\u2212a6|=10. There are other possible answers like \"5 4 5 6 -2 8\".In the second test case, after given rearrangement, |a1\u2212a2|=1\u2264|a2\u2212a3|=2\u2264|a3\u2212a4|=4|a1\u2212a2|=1\u2264|a2\u2212a3|=2\u2264|a3\u2212a4|=4. There are other possible answers like \"2 4 8 1\"."], "Sequence with Digits": ["https://codeforces.com/problemset/problem/1355/A", "A. Sequence with Digitstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's define the following recurrence: an+1=an+minDigit(an)\u22c5maxDigit(an).an+1=an+minDigit(an)\u22c5maxDigit(an).Here minDigit(x)minDigit(x) and maxDigit(x)maxDigit(x) are the minimal and maximal digits in the decimal representation of xx without leading zeroes. For examples refer to notes.Your task is calculate aKaK for given a1a1 and KK.InputThe first line contains one integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of independent test cases.Each test case consists of a single line containing two integers a1a1 and KK (1\u2264a1\u226410181\u2264a1\u22641018, 1\u2264K\u226410161\u2264K\u22641016) separated by a space.OutputFor each test case print one integer aKaK on a separate line.ExampleInputCopy8\n1 4\n487 1\n487 2\n487 3\n487 4\n487 5\n487 6\n487 7\nOutputCopy42\n487\n519\n528\n544\n564\n588\n628\nNotea1=487a1=487  a2=a1+minDigit(a1)\u22c5maxDigit(a1)=487+min(4,8,7)\u22c5max(4,8,7)=487+4\u22c58=519a2=a1+minDigit(a1)\u22c5maxDigit(a1)=487+min(4,8,7)\u22c5max(4,8,7)=487+4\u22c58=519  a3=a2+minDigit(a2)\u22c5maxDigit(a2)=519+min(5,1,9)\u22c5max(5,1,9)=519+1\u22c59=528a3=a2+minDigit(a2)\u22c5maxDigit(a2)=519+min(5,1,9)\u22c5max(5,1,9)=519+1\u22c59=528  a4=a3+minDigit(a3)\u22c5maxDigit(a3)=528+min(5,2,8)\u22c5max(5,2,8)=528+2\u22c58=544a4=a3+minDigit(a3)\u22c5maxDigit(a3)=528+min(5,2,8)\u22c5max(5,2,8)=528+2\u22c58=544  a5=a4+minDigit(a4)\u22c5maxDigit(a4)=544+min(5,4,4)\u22c5max(5,4,4)=544+4\u22c55=564a5=a4+minDigit(a4)\u22c5maxDigit(a4)=544+min(5,4,4)\u22c5max(5,4,4)=544+4\u22c55=564  a6=a5+minDigit(a5)\u22c5maxDigit(a5)=564+min(5,6,4)\u22c5max(5,6,4)=564+4\u22c56=588a6=a5+minDigit(a5)\u22c5maxDigit(a5)=564+min(5,6,4)\u22c5max(5,6,4)=564+4\u22c56=588  a7=a6+minDigit(a6)\u22c5maxDigit(a6)=588+min(5,8,8)\u22c5max(5,8,8)=588+5\u22c58=628a7=a6+minDigit(a6)\u22c5maxDigit(a6)=588+min(5,8,8)\u22c5max(5,8,8)=588+5\u22c58=628"], "Less or Equal": ["https://codeforces.com/problemset/problem/977/C", "C. Less or Equaltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a sequence of integers of length nn and integer number kk. You should print any integer number xx in the range of [1;109][1;109] (i.e. 1\u2264x\u22641091\u2264x\u2264109) such that exactly kk elements of given sequence are less than or equal to xx.Note that the sequence can contain equal elements.If there is no such xx, print \"-1\" (without quotes).InputThe first line of the input contains integer numbers nn and kk (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 0\u2264k\u2264n0\u2264k\u2264n). The second line of the input contains nn integer numbers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 the sequence itself.OutputPrint any integer number xx from range [1;109][1;109] such that exactly kk elements of given sequence is less or equal to xx.If there is no such xx, print \"-1\" (without quotes).ExamplesInputCopy7 43 7 5 1 10 3 20OutputCopy6InputCopy7 23 7 5 1 10 3 20OutputCopy-1NoteIn the first example 55 is also a valid answer because the elements with indices [1,3,4,6][1,3,4,6] is less than or equal to 55 and obviously less than or equal to 66.In the second example you cannot choose any number that only 22 elements of the given sequence will be less than or equal to this number because 33 elements of the given sequence will be also less than or equal to this number."], "XXXXX": ["https://codeforces.com/problemset/problem/1364/A", "A. XXXXXtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputEhab loves number theory, but for some reason he hates the number xx. Given an array aa, find the length of its longest subarray such that the sum of its elements isn't divisible by xx, or determine that such subarray doesn't exist.An array aa is a subarray of an array bb if aa can be obtained from bb by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.InputThe first line contains an integer tt (1\u2264t\u22645)(1\u2264t\u22645)\u00a0\u2014 the number of test cases you need to solve. The description of the test cases follows.The first line of each test case contains 2 integers nn and xx (1\u2264n\u22641051\u2264n\u2264105, 1\u2264x\u22641041\u2264x\u2264104)\u00a0\u2014 the number of elements in the array aa and the number that Ehab hates.The second line contains nn space-separated integers a1a1, a2a2, \u2026\u2026, anan (0\u2264ai\u22641040\u2264ai\u2264104)\u00a0\u2014 the elements of the array aa.OutputFor each testcase, print the length of the longest subarray whose sum isn't divisible by xx. If there's no such subarray, print \u22121\u22121.ExampleInputCopy3\n3 3\n1 2 3\n3 4\n1 2 3\n2 2\n0 6\nOutputCopy2\n3\n-1\nNoteIn the first test case, the subarray [2,3][2,3] has sum of elements 55, which isn't divisible by 33.In the second test case, the sum of elements of the whole array is 66, which isn't divisible by 44.In the third test case, all subarrays have an even sum, so the answer is \u22121\u22121."], "Young Explorers": ["https://codeforces.com/problemset/problem/1355/B", "B. Young Explorerstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYoung wilderness explorers set off to their first expedition led by senior explorer Russell. Explorers went into a forest, set up a camp and decided to split into groups to explore as much interesting locations as possible. Russell was trying to form groups, but ran into some difficulties...Most of the young explorers are inexperienced, and sending them alone would be a mistake. Even Russell himself became senior explorer not long ago. Each of young explorers has a positive integer parameter eiei\u00a0\u2014 his inexperience. Russell decided that an explorer with inexperience ee can only join the group of ee or more people.Now Russell needs to figure out how many groups he can organize. It's not necessary to include every explorer in one of the groups: some can stay in the camp. Russell is worried about this expedition, so he asked you to help him.InputThe first line contains the number of independent test cases TT(1\u2264T\u22642\u22c51051\u2264T\u22642\u22c5105). Next 2T2T lines contain description of test cases.The first line of description of each test case contains the number of young explorers NN (1\u2264N\u22642\u22c51051\u2264N\u22642\u22c5105).The second line contains NN integers e1,e2,\u2026,eNe1,e2,\u2026,eN (1\u2264ei\u2264N1\u2264ei\u2264N), where eiei is the inexperience of the ii-th explorer.It's guaranteed that sum of all NN doesn't exceed 3\u22c51053\u22c5105.OutputPrint TT numbers, each number on a separate line.In ii-th line print the maximum number of groups Russell can form in ii-th test case.ExampleInputCopy2\n3\n1 1 1\n5\n2 3 1 2 2\nOutputCopy3\n2\nNoteIn the first example we can organize three groups. There will be only one explorer in each group. It's correct because inexperience of each explorer equals to 11, so it's not less than the size of his group.In the second example we can organize two groups. Explorers with inexperience 11, 22 and 33 will form the first group, and the other two explorers with inexperience equal to 22 will form the second group.This solution is not unique. For example, we can form the first group using the three explorers with inexperience equal to 22, and the second group using only one explorer with inexperience equal to 11. In this case the young explorer with inexperience equal to 33 will not be included in any group."], "AccurateLee": ["https://codeforces.com/problemset/problem/1369/B", "B. AccurateLeetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLee was cleaning his house for the party when he found a messy string under the carpets. Now he'd like to make it clean accurately and in a stylish way...The string ss he found is a binary string of length nn (i. e. string consists only of 0-s and 1-s).In one move he can choose two consecutive characters sisi and si+1si+1, and if sisi is 1 and si+1si+1 is 0, he can erase exactly one of them (he can choose which one to erase but he can't erase both characters simultaneously). The string shrinks after erasing.Lee can make an arbitrary number of moves (possibly zero) and he'd like to make the string ss as clean as possible. He thinks for two different strings xx and yy, the shorter string is cleaner, and if they are the same length, then the lexicographically smaller string is cleaner.Now you should answer tt test cases: for the ii-th test case, print the cleanest possible string that Lee can get by doing some number of moves.Small reminder: if we have two strings xx and yy of the same length then xx is lexicographically smaller than yy if there is a position ii such that x1=y1x1=y1, x2=y2x2=y2,..., xi\u22121=yi\u22121xi\u22121=yi\u22121 and xi<yixi<yi.InputThe first line contains the integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Next 2t2t lines contain test cases\u00a0\u2014 one per two lines.The first line of each test case contains the integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the length of the string ss.The second line contains the binary string ss. The string ss is a string of length nn which consists only of zeroes and ones.It's guaranteed that sum of nn over test cases doesn't exceed 105105.OutputPrint tt answers\u00a0\u2014 one per test case.The answer to the ii-th test case is the cleanest string Lee can get after doing some number of moves (possibly zero).ExampleInputCopy5\n10\n0001111111\n4\n0101\n8\n11001101\n10\n1110000000\n1\n1\nOutputCopy0001111111\n001\n01\n0\n1\nNoteIn the first test case, Lee can't perform any moves.In the second test case, Lee should erase s2s2.In the third test case, Lee can make moves, for example, in the following order: 11001101\u00a0\u2192\u2192 1100101\u00a0\u2192\u2192 110101\u00a0\u2192\u2192 10101\u00a0\u2192\u2192 1101\u00a0\u2192\u2192 101\u00a0\u2192\u2192 01."], "DZY Loves Chessboard": ["https://codeforces.com/problemset/problem/445/A", "A. DZY Loves Chessboardtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDZY loves chessboard, and he enjoys playing with it.He has a chessboard of n rows and m columns. Some cells of the chessboard are bad, others are good. For every good cell, DZY wants to put a chessman on it. Each chessman is either white or black. After putting all chessmen, DZY wants that no two chessmen with the same color are on two adjacent cells. Two cells are adjacent if and only if they share a common edge.You task is to find any suitable placement of chessmen on the given chessboard.InputThe first line contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100).Each of the next n lines contains a string of m characters: the j-th character of the i-th string is either \".\" or \"-\". A \".\" means that the corresponding cell (in the i-th row and the j-th column) is good, while a \"-\" means it is bad.OutputOutput must contain n lines, each line must contain a string of m characters. The j-th character of the i-th string should be either \"W\", \"B\" or \"-\". Character \"W\" means the chessman on the cell is white, \"B\" means it is black, \"-\" means the cell is a bad cell.If multiple answers exist, print any of them. It is guaranteed that at least one answer exists.ExamplesInputCopy1 1.OutputCopyBInputCopy2 2....OutputCopyBWWBInputCopy3 3.-.-----.OutputCopyB-B-----BNoteIn the first sample, DZY puts a single black chessman. Of course putting a white one is also OK.In the second sample, all 4 cells are good. No two same chessmen share an edge in the sample output.In the third sample, no good cells are adjacent. So you can just put 3 chessmen, no matter what their colors are."], "Level Statistics": ["https://codeforces.com/problemset/problem/1334/A", "A. Level Statisticstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has recently created a new level in this cool new game Berlio Maker 85 and uploaded it online. Now players from all over the world can try his level.All levels in this game have two stats to them: the number of plays and the number of clears. So when a player attempts the level, the number of plays increases by 11. If he manages to finish the level successfully then the number of clears increases by 11 as well. Note that both of the statistics update at the same time (so if the player finishes the level successfully then the number of plays will increase at the same time as the number of clears).Polycarp is very excited about his level, so he keeps peeking at the stats to know how hard his level turns out to be.So he peeked at the stats nn times and wrote down nn pairs of integers \u2014 (p1,c1),(p2,c2),\u2026,(pn,cn)(p1,c1),(p2,c2),\u2026,(pn,cn), where pipi is the number of plays at the ii-th moment of time and cici is the number of clears at the same moment of time. The stats are given in chronological order (i.e. the order of given pairs is exactly the same as Polycarp has written down).Between two consecutive moments of time Polycarp peeked at the stats many players (but possibly zero) could attempt the level.Finally, Polycarp wonders if he hasn't messed up any records and all the pairs are correct. If there could exist such a sequence of plays (and clears, respectively) that the stats were exactly as Polycarp has written down, then he considers his records correct.Help him to check the correctness of his records.For your convenience you have to answer multiple independent test cases.InputThe first line contains a single integer TT (1\u2264T\u2264500)(1\u2264T\u2264500) \u2014 the number of test cases.The first line of each test case contains a single integer nn (1\u2264n\u22641001\u2264n\u2264100) \u2014 the number of moments of time Polycarp peeked at the stats.Each of the next nn lines contains two integers pipi and cici (0\u2264pi,ci\u226410000\u2264pi,ci\u22641000) \u2014 the number of plays and the number of clears of the level at the ii-th moment of time.Note that the stats are given in chronological order.OutputFor each test case print a single line.If there could exist such a sequence of plays (and clears, respectively) that the stats were exactly as Polycarp has written down, then print \"YES\".Otherwise, print \"NO\".You can print each letter in any case (upper or lower).ExampleInputCopy6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\nOutputCopyNO\nYES\nNO\nYES\nNO\nYES\nNoteIn the first test case at the third moment of time the number of clears increased but the number of plays did not, that couldn't have happened.The second test case is a nice example of a Super Expert level.In the third test case the number of plays decreased, which is impossible.The fourth test case is probably an auto level with a single jump over the spike.In the fifth test case the number of clears decreased, which is also impossible.Nobody wanted to play the sixth test case; Polycarp's mom attempted it to make him feel better, however, she couldn't clear it."], "Even-Odd Game": ["https://codeforces.com/problemset/problem/1472/D", "D. Even-Odd Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDuring their New Year holidays, Alice and Bob play the following game using an array aa of nn integers:   Players take turns, Alice moves first.  Each turn a player chooses any element and removes it from the array.  If Alice chooses even value, then she adds it to her score. If the chosen value is odd, Alice's score does not change.  Similarly, if Bob chooses odd value, then he adds it to his score. If the chosen value is even, then Bob's score does not change. If there are no numbers left in the array, then the game ends. The player with the highest score wins. If the scores of the players are equal, then a draw is declared.For example, if n=4n=4 and a=[5,2,7,3]a=[5,2,7,3], then the game could go as follows (there are other options):   On the first move, Alice chooses 22 and get two points. Her score is now 22. The array aa is now [5,7,3][5,7,3].  On the second move, Bob chooses 55 and get five points. His score is now 55. The array aa is now [7,3][7,3].  On the third move, Alice chooses 77 and get no points. Her score is now 22. The array aa is now [3][3].  On the last move, Bob chooses 33 and get three points. His score is now 88. The array aa is empty now.  Since Bob has more points at the end of the game, he is the winner. You want to find out who will win if both players play optimally. Note that there may be duplicate numbers in the array.InputThe first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains an integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the number of elements in the array aa.The next line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the array aa used to play the game.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output on a separate line:   \"Alice\" if Alice wins with the optimal play;  \"Bob\" if Bob wins with the optimal play;  \"Tie\", if a tie is declared during the optimal play. ExampleInputCopy4\n4\n5 2 7 3\n3\n3 2 1\n4\n2 2 2 2\n2\n7 8\nOutputCopyBob\nTie\nAlice\nAlice\n"], "Yet Another Array Restoration": ["https://codeforces.com/problemset/problem/1409/C", "C. Yet Another Array Restorationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputWe have a secret array. You don't know this array and you have to restore it. However, you know some facts about this array:  The array consists of nn distinct positive (greater than 00) integers.  The array contains two elements xx and yy (these elements are known for you) such that x<yx<y.  If you sort the array in increasing order (such that a1<a2<\u2026<ana1<a2<\u2026<an), differences between all adjacent (consecutive) elements are equal (i.e. a2\u2212a1=a3\u2212a2=\u2026=an\u2212an\u22121)a2\u2212a1=a3\u2212a2=\u2026=an\u2212an\u22121). It can be proven that such an array always exists under the constraints given below.Among all possible arrays that satisfy the given conditions, we ask you to restore one which has the minimum possible maximum element. In other words, you have to minimize max(a1,a2,\u2026,an)max(a1,a2,\u2026,an).You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases. Then tt test cases follow.The only line of the test case contains three integers nn, xx and yy (2\u2264n\u2264502\u2264n\u226450; 1\u2264x<y\u2264501\u2264x<y\u226450) \u2014 the length of the array and two elements that are present in the array, respectively.OutputFor each test case, print the answer: nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is the ii-th element of the required array. If there are several answers, you can print any (it also means that the order of elements doesn't matter).It can be proven that such an array always exists under the given constraints.ExampleInputCopy5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\nOutputCopy1 49 \n20 40 30 50 10\n26 32 20 38 44 50 \n8 23 18 13 3 \n1 10 13 4 19 22 25 16 7 "], "Pleasant Pairs": ["https://codeforces.com/problemset/problem/1541/B", "B. Pleasant Pairstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array a1,a2,\u2026,ana1,a2,\u2026,an consisting of nn distinct integers. Count the number of pairs of indices (i,j)(i,j) such that i<ji<j and ai\u22c5aj=i+jai\u22c5aj=i+j.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Then tt cases follow.The first line of each test case contains one integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the length of array aa.The second line of each test case contains nn space separated integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22642\u22c5n1\u2264ai\u22642\u22c5n)\u00a0\u2014 the array aa. It is guaranteed that all elements are distinct.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output the number of pairs of indices (i,j)(i,j) such that i<ji<j and ai\u22c5aj=i+jai\u22c5aj=i+j.ExampleInputCopy3\n2\n3 1\n3\n6 1 5\n5\n3 1 5 9 2\nOutputCopy1\n1\n3\nNoteFor the first test case, the only pair that satisfies the constraints is (1,2)(1,2), as a1\u22c5a2=1+2=3a1\u22c5a2=1+2=3For the second test case, the only pair that satisfies the constraints is (2,3)(2,3).For the third test case, the pairs that satisfy the constraints are (1,2)(1,2), (1,5)(1,5), and (2,3)(2,3)."], "Challenging Cliffs": ["https://codeforces.com/problemset/problem/1537/C", "C. Challenging Cliffstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are a game designer and want to make an obstacle course. The player will walk from left to right. You have nn heights of mountains already selected and want to arrange them so that the absolute difference of the heights of the first and last mountains is as small as possible. In addition, you want to make the game difficult, and since walking uphill or flat is harder than walking downhill, the difficulty of the level will be the number of mountains ii (1\u2264i<n1\u2264i<n) such that hi\u2264hi+1hi\u2264hi+1 where hihi is the height of the ii-th mountain. You don't want to waste any of the mountains you modelled, so you have to use all of them. From all the arrangements that minimize |h1\u2212hn||h1\u2212hn|, find one that is the most difficult. If there are multiple orders that satisfy these requirements, you may find any.InputThe first line will contain a single integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains a single integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the number of mountains.The second line of each test case contains nn integers h1,\u2026,hnh1,\u2026,hn (1\u2264hi\u22641091\u2264hi\u2264109), where hihi is the height of the ii-th mountain.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output nn integers \u2014 the given heights in an order that maximizes the difficulty score among all orders that minimize |h1\u2212hn||h1\u2212hn|.If there are multiple orders that satisfy these requirements, you may output any.ExampleInputCopy2\n4\n4 2 1 2\n2\n3 1\nOutputCopy2 4 1 2 \n1 3\nNoteIn the first test case:The player begins at height 22, next going up to height 44 increasing the difficulty by 11. After that he will go down to height 11 and the difficulty doesn't change because he is going downhill. Finally the player will go up to height 22 and the difficulty will increase by 11. The absolute difference between the starting height and the end height is equal to 00 and it's minimal. The difficulty is maximal.In the second test case:The player begins at height 11, next going up to height 33 increasing the difficulty by 11. The absolute difference between the starting height and the end height is equal to 22 and it's minimal as they are the only heights. The difficulty is maximal."], "Yet Another Broken Keyboard": ["https://codeforces.com/problemset/problem/1272/C", "C. Yet Another Broken Keyboardtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently, Norge found a string s=s1s2\u2026sns=s1s2\u2026sn consisting of nn lowercase Latin letters. As an exercise to improve his typing speed, he decided to type all substrings of the string ss. Yes, all n(n+1)2n(n+1)2 of them!A substring of ss is a non-empty string x=s[a\u2026b]=sasa+1\u2026sbx=s[a\u2026b]=sasa+1\u2026sb (1\u2264a\u2264b\u2264n1\u2264a\u2264b\u2264n). For example, \"auto\" and \"ton\" are substrings of \"automaton\".Shortly after the start of the exercise, Norge realized that his keyboard was broken, namely, he could use only kk Latin letters c1,c2,\u2026,ckc1,c2,\u2026,ck out of 2626.After that, Norge became interested in how many substrings of the string ss he could still type using his broken keyboard. Help him to find this number.InputThe first line contains two space-separated integers nn and kk (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 1\u2264k\u2264261\u2264k\u226426) \u2014 the length of the string ss and the number of Latin letters still available on the keyboard.The second line contains the string ss consisting of exactly nn lowercase Latin letters.The third line contains kk space-separated distinct lowercase Latin letters c1,c2,\u2026,ckc1,c2,\u2026,ck \u2014 the letters still available on the keyboard.OutputPrint a single number \u2014 the number of substrings of ss that can be typed using only available letters c1,c2,\u2026,ckc1,c2,\u2026,ck.ExamplesInputCopy7 2\nabacaba\na b\nOutputCopy12\nInputCopy10 3\nsadfaasdda\nf a d\nOutputCopy21\nInputCopy7 1\naaaaaaa\nb\nOutputCopy0\nNoteIn the first example Norge can print substrings s[1\u20262]s[1\u20262], s[2\u20263]s[2\u20263], s[1\u20263]s[1\u20263], s[1\u20261]s[1\u20261], s[2\u20262]s[2\u20262], s[3\u20263]s[3\u20263], s[5\u20266]s[5\u20266], s[6\u20267]s[6\u20267], s[5\u20267]s[5\u20267], s[5\u20265]s[5\u20265], s[6\u20266]s[6\u20266], s[7\u20267]s[7\u20267]."], "Collecting Packages": ["https://codeforces.com/problemset/problem/1294/B", "B. Collecting Packagestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a robot in a warehouse and nn packages he wants to collect. The warehouse can be represented as a coordinate grid. Initially, the robot stays at the point (0,0)(0,0). The ii-th package is at the point (xi,yi)(xi,yi). It is guaranteed that there are no two packages at the same point. It is also guaranteed that the point (0,0)(0,0) doesn't contain a package.The robot is semi-broken and only can move up ('U') and right ('R'). In other words, in one move the robot can go from the point (x,y)(x,y) to the point (x+1,yx+1,y) or to the point (x,y+1)(x,y+1).As we say above, the robot wants to collect all nn packages (in arbitrary order). He wants to do it with the minimum possible number of moves. If there are several possible traversals, the robot wants to choose the lexicographically smallest path.The string ss of length nn is lexicographically less than the string tt of length nn if there is some index 1\u2264j\u2264n1\u2264j\u2264n that for all ii from 11 to j\u22121j\u22121 si=tisi=ti and sj<tjsj<tj. It is the standard comparison of string, like in a dictionary. Most programming languages compare strings in this way.InputThe first line of the input contains an integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases. Then test cases follow.The first line of a test case contains one integer nn (1\u2264n\u226410001\u2264n\u22641000) \u2014 the number of packages.The next nn lines contain descriptions of packages. The ii-th package is given as two integers xixi and yiyi (0\u2264xi,yi\u226410000\u2264xi,yi\u22641000) \u2014 the xx-coordinate of the package and the yy-coordinate of the package.It is guaranteed that there are no two packages at the same point. It is also guaranteed that the point (0,0)(0,0) doesn't contain a package.The sum of all values nn over test cases in the test doesn't exceed 10001000.OutputPrint the answer for each test case.If it is impossible to collect all nn packages in some order starting from (0,00,0), print \"NO\" on the first line.Otherwise, print \"YES\" in the first line. Then print the shortest path \u2014 a string consisting of characters 'R' and 'U'. Among all such paths choose the lexicographically smallest path.Note that in this problem \"YES\" and \"NO\" can be only uppercase words, i.e. \"Yes\", \"no\" and \"YeS\" are not acceptable.ExampleInputCopy3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\nOutputCopyYES\nRUUURRRRUU\nNO\nYES\nRRRRUUU\nNoteFor the first test case in the example the optimal path RUUURRRRUU is shown below:   "], "Palindrome Game (easy version)": ["https://codeforces.com/problemset/problem/1527/B1", "B1. Palindrome Game (easy version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between the easy and hard versions is that the given string ss in the easy version is initially a palindrome, this condition is not always true for the hard version.A palindrome is a string that reads the same left to right and right to left. For example, \"101101\" is a palindrome, while \"0101\" is not.Alice and Bob are playing a game on a string ss (which is initially a palindrome in this version) of length nn consisting of the characters '0' and '1'. Both players take alternate turns with Alice going first.In each turn, the player can perform one of the following operations:   Choose any ii (1\u2264i\u2264n1\u2264i\u2264n), where s[i]=s[i]= '0' and change s[i]s[i] to '1'. Pay 1 dollar.  Reverse the whole string, pay 0 dollars. This operation is only allowed if the string is currently not a palindrome, and the last operation was not reverse. That is, if Alice reverses the string, then Bob can't reverse in the next move, and vice versa. Reversing a string means reordering its letters from the last to the first. For example, \"01001\" becomes \"10010\" after reversing.The game ends when every character of string becomes '1'. The player who spends minimum dollars till this point wins the game and it is a draw if both spend equal dollars. If both players play optimally, output whether Alice wins, Bob wins, or if it is a draw.InputThe first line contains a single integer tt (1\u2264t\u22641031\u2264t\u2264103). Then tt test cases follow.The first line of each test case contains a single integer nn (1\u2264n\u22641031\u2264n\u2264103).The second line of each test case contains the string ss of length nn, consisting of the characters '0' and '1'. It is guaranteed that the string ss is a palindrome and contains at least one '0'. Note that there is no limit on the sum of nn over test cases.OutputFor each test case print a single word in a new line:   \"ALICE\", if Alice will win the game,  \"BOB\", if Bob will win the game,  \"DRAW\", if the game ends in a draw. ExampleInputCopy2\n4\n1001\n1\n0\nOutputCopyBOB\nBOB\nNoteIn the first test case of the example,   in the 11-st move Alice has to perform the 11-st operation, since the string is currently a palindrome.  in the 22-nd move Bob reverses the string.  in the 33-rd move Alice again has to perform the 11-st operation. All characters of the string are '1', game over.  Alice spends 22 dollars while Bob spends 00 dollars. Hence, Bob always wins."], "Maximum Product": ["https://codeforces.com/problemset/problem/1406/B", "B. Maximum Producttime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given an array of integers a1,a2,\u2026,ana1,a2,\u2026,an. Find the maximum possible value of aiajakalataiajakalat among all five indices (i,j,k,l,t)(i,j,k,l,t) (i<j<k<l<ti<j<k<l<t).InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer nn (5\u2264n\u22641055\u2264n\u2264105) \u2014 the size of the array.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u22123\u00d7103\u2264ai\u22643\u00d7103\u22123\u00d7103\u2264ai\u22643\u00d7103) \u2014 given array.It's guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print one integer \u2014 the answer to the problem.ExampleInputCopy4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1\nOutputCopy-120\n12\n0\n945\nNoteIn the first test case, choosing a1,a2,a3,a4,a5a1,a2,a3,a4,a5 is a best choice: (\u22121)\u22c5(\u22122)\u22c5(\u22123)\u22c5(\u22124)\u22c5(\u22125)=\u2212120(\u22121)\u22c5(\u22122)\u22c5(\u22123)\u22c5(\u22124)\u22c5(\u22125)=\u2212120.In the second test case, choosing a1,a2,a3,a5,a6a1,a2,a3,a5,a6 is a best choice: (\u22121)\u22c5(\u22122)\u22c5(\u22123)\u22c52\u22c5(\u22121)=12(\u22121)\u22c5(\u22122)\u22c5(\u22123)\u22c52\u22c5(\u22121)=12.In the third test case, choosing a1,a2,a3,a4,a5a1,a2,a3,a4,a5 is a best choice: (\u22121)\u22c50\u22c50\u22c50\u22c5(\u22121)=0(\u22121)\u22c50\u22c50\u22c50\u22c5(\u22121)=0.In the fourth test case, choosing a1,a2,a3,a4,a6a1,a2,a3,a4,a6 is a best choice: (\u22129)\u22c5(\u22127)\u22c5(\u22125)\u22c5(\u22123)\u22c51=945(\u22129)\u22c5(\u22127)\u22c5(\u22125)\u22c5(\u22123)\u22c51=945."], "Petr and a Combination Lock": ["https://codeforces.com/problemset/problem/1097/B", "B. Petr and a Combination Locktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetr has just bought a new car. He's just arrived at the most known Petersburg's petrol station to refuel it when he suddenly discovered that the petrol tank is secured with a combination lock! The lock has a scale of 360360 degrees and a pointer which initially points at zero:  Petr called his car dealer, who instructed him to rotate the lock's wheel exactly nn times. The ii-th rotation should be aiai degrees, either clockwise or counterclockwise, and after all nn rotations the pointer should again point at zero.This confused Petr a little bit as he isn't sure which rotations should be done clockwise and which should be done counterclockwise. As there are many possible ways of rotating the lock, help him and find out whether there exists at least one, such that after all nn rotations the pointer will point at zero again.InputThe first line contains one integer nn (1\u2264n\u2264151\u2264n\u226415) \u2014 the number of rotations.Each of the following nn lines contains one integer aiai (1\u2264ai\u22641801\u2264ai\u2264180) \u2014 the angle of the ii-th rotation in degrees.OutputIf it is possible to do all the rotations so that the pointer will point at zero after all of them are performed, print a single word \"YES\". Otherwise, print \"NO\". Petr will probably buy a new car in this case.You can print each letter in any case (upper or lower).ExamplesInputCopy3\n10\n20\n30\nOutputCopyYES\nInputCopy3\n10\n10\n10\nOutputCopyNO\nInputCopy3\n120\n120\n120\nOutputCopyYES\nNoteIn the first example, we can achieve our goal by applying the first and the second rotation clockwise, and performing the third rotation counterclockwise.In the second example, it's impossible to perform the rotations in order to make the pointer point at zero in the end.In the third example, Petr can do all three rotations clockwise. In this case, the whole wheel will be rotated by 360360 degrees clockwise and the pointer will point at zero again."], "Sequence Transformation": ["https://codeforces.com/problemset/problem/1454/C", "C. Sequence Transformationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a sequence aa, initially consisting of nn integers.You want to transform this sequence so that all elements in it are equal (i.\u00a0e. it contains several occurrences of the same element).To achieve this, you choose some integer xx that occurs at least once in aa, and then perform the following operation any number of times (possibly zero): choose some segment [l,r][l,r] of the sequence and remove it. But there is one exception: you are not allowed to choose a segment that contains xx. More formally, you choose some contiguous subsequence [al,al+1,\u2026,ar][al,al+1,\u2026,ar] such that ai\u2260xai\u2260x if l\u2264i\u2264rl\u2264i\u2264r, and remove it. After removal, the numbering of elements to the right of the removed segment changes: the element that was the (r+1)(r+1)-th is now ll-th, the element that was (r+2)(r+2)-th is now (l+1)(l+1)-th, and so on (i.\u00a0e. the remaining sequence just collapses).Note that you can not change xx after you chose it.For example, suppose n=6n=6, a=[1,3,2,4,1,2]a=[1,3,2,4,1,2]. Then one of the ways to transform it in two operations is to choose x=1x=1, then:  choose l=2l=2, r=4r=4, so the resulting sequence is a=[1,1,2]a=[1,1,2];  choose l=3l=3, r=3r=3, so the resulting sequence is a=[1,1]a=[1,1]. Note that choosing xx is not an operation. Also, note that you can not remove any occurrence of xx.Your task is to find the minimum number of operations required to transform the sequence in a way described above.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u2014 the number of test cases. Then tt test cases follow.The first line of the test case contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of elements in aa. The second line of the test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n), where aiai is the ii-th element of aa.It is guaranteed that the sum of nn does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105).OutputFor each test case, print the answer \u2014 the minimum number of operations required to transform the given sequence in a way described in the problem statement. It can be proven that it is always possible to perform a finite sequence of operations so the sequence is transformed in the required way.ExampleInputCopy5\n3\n1 1 1\n5\n1 2 3 4 5\n5\n1 2 3 2 1\n7\n1 2 3 1 2 3 1\n11\n2 2 1 2 3 2 1 2 3 1 2\nOutputCopy0\n1\n1\n2\n3\n"], "Magical Calendar": ["https://codeforces.com/problemset/problem/1371/B", "B. Magical Calendartime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA competitive eater, Alice is scheduling some practices for an eating contest on a magical calendar. The calendar is unusual because a week contains not necessarily 77 days!In detail, she can choose any integer kk which satisfies 1\u2264k\u2264r1\u2264k\u2264r, and set kk days as the number of days in a week.Alice is going to paint some nn consecutive days on this calendar. On this calendar, dates are written from the left cell to the right cell in a week. If a date reaches the last day of a week, the next day's cell is the leftmost cell in the next (under) row.She wants to make all of the painted cells to be connected by side. It means, that for any two painted cells there should exist at least one sequence of painted cells, started in one of these cells, and ended in another, such that any two consecutive cells in this sequence are connected by side.Alice is considering the shape of the painted cells. Two shapes are the same if there exists a way to make them exactly overlapped using only parallel moves, parallel to the calendar's sides.For example, in the picture, a week has 44 days and Alice paints 55 consecutive days. [1] and [2] are different shapes, but [1] and [3] are equal shapes.  Alice wants to know how many possible shapes exists if she set how many days a week has and choose consecutive nn days and paints them in calendar started in one of the days of the week. As was said before, she considers only shapes, there all cells are connected by side.InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases. Next tt lines contain descriptions of test cases.For each test case, the only line contains two integers nn, rr (1\u2264n\u2264109,1\u2264r\u22641091\u2264n\u2264109,1\u2264r\u2264109).OutputFor each test case, print a single integer \u00a0\u2014 the answer to the problem.Please note, that the answer for some test cases won't fit into 3232-bit integer type, so you should use at least 6464-bit integer type in your programming language.ExampleInputCopy5\n3 4\n3 2\n3 1\n13 7\n1010000 9999999\nOutputCopy4\n3\n1\n28\n510049495001\nNoteIn the first test case, Alice can set 1,2,31,2,3 or 44 days as the number of days in a week.There are 66 possible paintings shown in the picture, but there are only 44 different shapes. So, the answer is 44. Notice that the last example in the picture is an invalid painting because all cells are not connected by sides.  In the last test case, be careful with the overflow issue, described in the output format."], "k-LCM (easy version)": ["https://codeforces.com/problemset/problem/1497/C1", "C1. k-LCM (easy version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt is the easy version of the problem. The only difference is that in this version k=3k=3.You are given a positive integer nn. Find kk positive integers a1,a2,\u2026,aka1,a2,\u2026,ak, such that:  a1+a2+\u2026+ak=na1+a2+\u2026+ak=n  LCM(a1,a2,\u2026,ak)\u2264n2LCM(a1,a2,\u2026,ak)\u2264n2 Here LCMLCM is the least common multiple of numbers a1,a2,\u2026,aka1,a2,\u2026,ak.We can show that for given constraints the answer always exists.InputThe first line contains a single integer tt (1\u2264t\u2264104)(1\u2264t\u2264104) \u00a0\u2014 the number of test cases.The only line of each test case contains two integers nn, kk (3\u2264n\u22641093\u2264n\u2264109, k=3k=3).OutputFor each test case print kk positive integers a1,a2,\u2026,aka1,a2,\u2026,ak, for which all conditions are satisfied.ExampleInputCopy3\n3 3\n8 3\n14 3\nOutputCopy1 1 1\n4 2 2\n2 6 6\n"], "Rock and Lever": ["https://codeforces.com/problemset/problem/1420/B", "B. Rock and Levertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard output  \"You must lift the dam. With a lever. I will give it to you.You must block the canal. With a rock. I will not give the rock to you.\" Danik urgently needs rock and lever! Obviously, the easiest way to get these things is to ask Hermit Lizard for them.Hermit Lizard agreed to give Danik the lever. But to get a stone, Danik needs to solve the following task.You are given a positive integer nn, and an array aa of positive integers. The task is to calculate the number of such pairs (i,j)(i,j) that i<ji<j and aiai && aj\u2265ai\u2295ajaj\u2265ai\u2295aj, where && denotes the bitwise AND operation, and \u2295\u2295 denotes the bitwise XOR operation.Danik has solved this task. But can you solve it?InputEach test contains multiple test cases.The first line contains one positive integer tt (1\u2264t\u2264101\u2264t\u226410) denoting the number of test cases. Description of the test cases follows.The first line of each test case contains one positive integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 length of the array.The second line contains nn positive integers aiai (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 elements of the array.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor every test case print one non-negative integer\u00a0\u2014 the answer to the problem.ExampleInputCopy5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\nOutputCopy1\n3\n2\n0\n0\nNoteIn the first test case there is only one pair: (4,7)(4,7): for it 44 && 7=47=4, and 4\u22957=34\u22957=3.In the second test case all pairs are good.In the third test case there are two pairs: (6,5)(6,5) and (2,3)(2,3).In the fourth test case there are no good pairs."], "Districts Connection": ["https://codeforces.com/problemset/problem/1433/D", "D. Districts Connectiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn districts in the town, the ii-th district belongs to the aiai-th bandit gang. Initially, no districts are connected to each other.You are the mayor of the city and want to build n\u22121n\u22121 two-way roads to connect all districts (two districts can be connected directly or through other connected districts).If two districts belonging to the same gang are connected directly with a road, this gang will revolt.You don't want this so your task is to build n\u22121n\u22121 two-way roads in such a way that all districts are reachable from each other (possibly, using intermediate districts) and each pair of directly connected districts belong to different gangs, or determine that it is impossible to build n\u22121n\u22121 roads to satisfy all the conditions.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22645001\u2264t\u2264500) \u2014 the number of test cases. Then tt test cases follow.The first line of the test case contains one integer nn (2\u2264n\u226450002\u2264n\u22645000) \u2014 the number of districts. The second line of the test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is the gang the ii-th district belongs to.It is guaranteed that the sum of nn does not exceed 50005000 (\u2211n\u22645000\u2211n\u22645000).OutputFor each test case, print:  NO on the only line if it is impossible to connect all districts satisfying the conditions from the problem statement.  YES on the first line and n\u22121n\u22121 roads on the next n\u22121n\u22121 lines. Each road should be presented as a pair of integers xixi and yiyi (1\u2264xi,yi\u2264n;xi\u2260yi1\u2264xi,yi\u2264n;xi\u2260yi), where xixi and yiyi are two districts the ii-th road connects. For each road ii, the condition a[xi]\u2260a[yi]a[xi]\u2260a[yi] should be satisfied. Also, all districts should be reachable from each other (possibly, using intermediate districts).ExampleInputCopy4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\nOutputCopyYES\n1 3\n3 5\n5 4\n1 2\nNO\nYES\n1 2\n2 3\n3 4\nYES\n1 2\n1 3\n1 4\n"], "Jumps": ["https://codeforces.com/problemset/problem/1455/B", "B. Jumpstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are standing on the OXOX-axis at point 00 and you want to move to an integer point x>0x>0.You can make several jumps. Suppose you're currently at point yy (yy may be negative) and jump for the kk-th time. You can:   either jump to the point y+ky+k  or jump to the point y\u22121y\u22121. What is the minimum number of jumps you need to reach the point xx?InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first and only line of each test case contains the single integer xx (1\u2264x\u22641061\u2264x\u2264106)\u00a0\u2014 the destination point.OutputFor each test case, print the single integer\u00a0\u2014 the minimum number of jumps to reach xx. It can be proved that we can reach any integer point xx.ExampleInputCopy5\n1\n2\n3\n4\n5\nOutputCopy1\n3\n2\n3\n4\nNoteIn the first test case x=1x=1, so you need only one jump: the 11-st jump from 00 to 0+1=10+1=1.In the second test case x=2x=2. You need at least three jumps:   the 11-st jump from 00 to 0+1=10+1=1;  the 22-nd jump from 11 to 1+2=31+2=3;  the 33-rd jump from 33 to 3\u22121=23\u22121=2; Two jumps are not enough because these are the only possible variants:   the 11-st jump as \u22121\u22121 and the 22-nd one as \u22121\u22121\u00a0\u2014 you'll reach 0\u22121\u22121=\u221220\u22121\u22121=\u22122;  the 11-st jump as \u22121\u22121 and the 22-nd one as +2+2\u00a0\u2014 you'll reach 0\u22121+2=10\u22121+2=1;  the 11-st jump as +1+1 and the 22-nd one as \u22121\u22121\u00a0\u2014 you'll reach 0+1\u22121=00+1\u22121=0;  the 11-st jump as +1+1 and the 22-nd one as +2+2\u00a0\u2014 you'll reach 0+1+2=30+1+2=3; In the third test case, you need two jumps: the 11-st one as +1+1 and the 22-nd one as +2+2, so 0+1+2=30+1+2=3.In the fourth test case, you need three jumps: the 11-st one as \u22121\u22121, the 22-nd one as +2+2 and the 33-rd one as +3+3, so 0\u22121+2+3=40\u22121+2+3=4."], "Before an Exam": ["https://codeforces.com/problemset/problem/4/B", "B. Before an Examtime limit per test0.5 secondmemory limit per test64 megabytesinputstandard inputoutputstandard outputTomorrow Peter has a Biology exam. He does not like this subject much, but d days ago he learnt that he would have to take this exam. Peter's strict parents made him prepare for the exam immediately, for this purpose he has to study not less than minTimei and not more than maxTimei hours per each i-th day. Moreover, they warned Peter that a day before the exam they would check how he has followed their instructions.So, today is the day when Peter's parents ask him to show the timetable of his preparatory studies. But the boy has counted only the sum of hours sumTime spent him on preparation, and now he wants to know if he can show his parents a timetable s\u0441hedule with d numbers, where each number s\u0441hedulei stands for the time in hours spent by Peter each i-th day on biology studies, and satisfying the limitations imposed by his parents, and at the same time the sum total of all schedulei should equal to sumTime.InputThe first input line contains two integer numbers d,\u2009sumTime (1\u2009\u2264\u2009d\u2009\u2264\u200930,\u20090\u2009\u2264\u2009sumTime\u2009\u2264\u2009240) \u2014 the amount of days, during which Peter studied, and the total amount of hours, spent on preparation. Each of the following d lines contains two integer numbers minTimei,\u2009maxTimei (0\u2009\u2264\u2009minTimei\u2009\u2264\u2009maxTimei\u2009\u2264\u20098), separated by a space \u2014 minimum and maximum amount of hours that Peter could spent in the i-th day.OutputIn the first line print YES, and in the second line print d numbers (separated by a space), each of the numbers \u2014 amount of hours, spent by Peter on preparation in the corresponding day, if he followed his parents' instructions; or print NO in the unique line. If there are many solutions, print any of them.ExamplesInputCopy1 485 7OutputCopyNOInputCopy2 50 13 5OutputCopyYES1 4 "], "Building Permutation": ["https://codeforces.com/problemset/problem/285/C", "C. Building Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPermutation p is an ordered set of integers p1,\u2009\u2009p2,\u2009\u2009...,\u2009\u2009pn, consisting of n distinct positive integers, each of them doesn't exceed n. We'll denote the i-th element of permutation p as pi. We'll call number n the size or the length of permutation p1,\u2009\u2009p2,\u2009\u2009...,\u2009\u2009pn.You have a sequence of integers a1,\u2009a2,\u2009...,\u2009an. In one move, you are allowed to decrease or increase any number by one. Count the minimum number of moves, needed to build a permutation from this sequence.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105) \u2014 the size of the sought permutation. The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109).OutputPrint a single number \u2014 the minimum number of moves.Please, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.ExamplesInputCopy23 0OutputCopy2InputCopy3-1 -1 2OutputCopy6NoteIn the first sample you should decrease the first number by one and then increase the second number by one. The resulting permutation is (2,\u20091).In the second sample you need 6 moves to build permutation (1,\u20093,\u20092)."], "Princesses and Princes": ["https://codeforces.com/problemset/problem/1327/B", "B. Princesses and Princestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe King of Berland Polycarp LXXXIV has nn daughters. To establish his power to the neighbouring kingdoms he wants to marry his daughters to the princes of these kingdoms. As a lucky coincidence there are nn other kingdoms as well.So Polycarp LXXXIV has enumerated his daughters from 11 to nn and the kingdoms from 11 to nn. For each daughter he has compiled a list of kingdoms princes of which she wanted to marry.Polycarp LXXXIV is very busy, so he finds a couple for his daughters greedily one after another.For the first daughter he takes the kingdom with the lowest number from her list and marries the daughter to their prince. For the second daughter he takes the kingdom with the lowest number from her list, prince of which hasn't been taken already. If there are no free princes in the list then the daughter marries nobody and Polycarp LXXXIV proceeds to the next daughter. The process ends after the nn-th daughter.For example, let there be 44 daughters and kingdoms, the lists daughters have are [2,3][2,3], [1,2][1,2], [3,4][3,4], [3][3], respectively.  In that case daughter 11 marries the prince of kingdom 22, daughter 22 marries the prince of kingdom 11, daughter 33 marries the prince of kingdom 33, leaving daughter 44 nobody to marry to.Actually, before starting the marriage process Polycarp LXXXIV has the time to convince one of his daughters that some prince is also worth marrying to. Effectively, that means that he can add exactly one kingdom to exactly one of his daughter's list. Note that this kingdom should not be present in the daughter's list.Polycarp LXXXIV wants to increase the number of married couples.Unfortunately, what he doesn't have the time for is determining what entry to add. If there is no way to increase the total number of married couples then output that the marriages are already optimal. Otherwise, find such an entry that the total number of married couples increases if Polycarp LXXXIV adds it.If there are multiple ways to add an entry so that the total number of married couples increases then print any of them.For your and our convenience you are asked to answer tt independent test cases.InputThe first line contains a single integer tt (1\u2264t\u22641051\u2264t\u2264105) \u2014 the number of test cases.Then tt test cases follow.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 the number of daughters and the number of kingdoms.Each of the next nn lines contains the description of each daughter's list. The first integer kk (0\u2264k\u2264n0\u2264k\u2264n) is the number of entries in the ii-th daughter's list. After that kk distinct integers follow gi[1],gi[2],\u2026,gi[k]gi[1],gi[2],\u2026,gi[k] (1\u2264gi[j]\u2264n1\u2264gi[j]\u2264n) \u2014 the indices of the kingdoms in the list in the increasing order (gi[1]<gi[2]<\u22ef<gi[k]gi[1]<gi[2]<\u22ef<gi[k]).It's guaranteed that the total number of daughters over all test cases does not exceed 105105.It's also guaranteed that the total number of kingdoms in lists over all test cases does not exceed 105105.OutputFor each test case print the answer to it.Print \"IMPROVE\" in the first line if Polycarp LXXXIV can add some kingdom to some of his daughter's list so that the total number of married couples increases. The second line then should contain two integers \u2014 the index of the daughter and the index of the kingdom Polycarp LXXXIV should add to that daughter's list.If there are multiple ways to add an entry so that the total number of married couples increases then print any of them.Otherwise the only line should contain one word \"OPTIMAL\".ExampleInputCopy5\n4\n2 2 3\n2 1 2\n2 3 4\n1 3\n2\n0\n0\n3\n3 1 2 3\n3 1 2 3\n3 1 2 3\n1\n1 1\n4\n1 1\n1 2\n1 3\n1 4\nOutputCopyIMPROVE\n4 4\nIMPROVE\n1 1\nOPTIMAL\nOPTIMAL\nOPTIMAL\nNoteThe first test case is depicted in the statement. Adding the fourth kingdom to the list of the fourth daughter makes her marry the prince of the fourth kingdom.In the second test case any new entry will increase the number of marriages from 00 to 11.In the third and the fourth test cases there is no way to add an entry.In the fifth test case there is no way to change the marriages by adding any entry."], "Common Prefixes": ["https://codeforces.com/problemset/problem/1384/A", "A. Common Prefixestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe length of the longest common prefix of two strings s=s1s2\u2026sns=s1s2\u2026sn and t=t1t2\u2026tmt=t1t2\u2026tm is defined as the maximum integer kk (0\u2264k\u2264min(n,m)0\u2264k\u2264min(n,m)) such that s1s2\u2026sks1s2\u2026sk equals t1t2\u2026tkt1t2\u2026tk.Koa the Koala initially has n+1n+1 strings s1,s2,\u2026,sn+1s1,s2,\u2026,sn+1.For each ii (1\u2264i\u2264n1\u2264i\u2264n) she calculated aiai\u00a0\u2014 the length of the longest common prefix of sisi and si+1si+1.Several days later Koa found these numbers, but she couldn't remember the strings.So Koa would like to find some strings s1,s2,\u2026,sn+1s1,s2,\u2026,sn+1 which would have generated numbers a1,a2,\u2026,ana1,a2,\u2026,an. Can you help her?If there are many answers print any. We can show that answer always exists for the given constraints. InputEach test contains multiple test cases. The first line contains tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22641001\u2264n\u2264100)\u00a0\u2014 the number of elements in the list aa.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u2264500\u2264ai\u226450)\u00a0\u2014 the elements of aa.It is guaranteed that the sum of nn over all test cases does not exceed 100100.OutputFor each test case:Output n+1n+1 lines. In the ii-th line print string sisi (1\u2264|si|\u22642001\u2264|si|\u2264200), consisting of lowercase Latin letters. Length of the longest common prefix of strings sisi and si+1si+1 has to be equal to aiai.If there are many answers print any. We can show that answer always exists for the given constraints.ExampleInputCopy4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\nOutputCopyaeren\nari\narousal\naround\nari\nmonogon\nmonogamy\nmonthly\nkevinvu\nkuroni\nkurioni\nkorone\nanton\nloves\nadhoc\nproblemsNoteIn the 11-st test case one of the possible answers is s=[aeren,ari,arousal,around,ari]s=[aeren,ari,arousal,around,ari].Lengths of longest common prefixes are:  Between aerenaeren and ariari \u21921\u21921  Between ariari and arousalarousal \u21922\u21922  Between arousalarousal and aroundaround \u21924\u21924  Between aroundaround and ariari \u21922\u21922 "], "WeirdSort": ["https://codeforces.com/problemset/problem/1311/B", "B. WeirdSorttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of length nn.You are also given a set of distinct positions p1,p2,\u2026,pmp1,p2,\u2026,pm, where 1\u2264pi<n1\u2264pi<n. The position pipi means that you can swap elements a[pi]a[pi] and a[pi+1]a[pi+1]. You can apply this operation any number of times for each of the given positions.Your task is to determine if it is possible to sort the initial array in non-decreasing order (a1\u2264a2\u2264\u22ef\u2264ana1\u2264a2\u2264\u22ef\u2264an) using only allowed swaps.For example, if a=[3,2,1]a=[3,2,1] and p=[1,2]p=[1,2], then we can first swap elements a[2]a[2] and a[3]a[3] (because position 22 is contained in the given set pp). We get the array a=[3,1,2]a=[3,1,2]. Then we swap a[1]a[1] and a[2]a[2] (position 11 is also contained in pp). We get the array a=[1,3,2]a=[1,3,2]. Finally, we swap a[2]a[2] and a[3]a[3] again and get the array a=[1,2,3]a=[1,2,3], sorted in non-decreasing order.You can see that if a=[4,1,2,3]a=[4,1,2,3] and p=[3,2]p=[3,2] then you cannot sort the array.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.Then tt test cases follow. The first line of each test case contains two integers nn and mm (1\u2264m<n\u22641001\u2264m<n\u2264100) \u2014 the number of elements in aa and the number of elements in pp. The second line of the test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641001\u2264ai\u2264100). The third line of the test case contains mm integers p1,p2,\u2026,pmp1,p2,\u2026,pm (1\u2264pi<n1\u2264pi<n, all pipi are distinct) \u2014 the set of positions described in the problem statement.OutputFor each test case, print the answer \u2014 \"YES\" (without quotes) if you can sort the initial array in non-decreasing order (a1\u2264a2\u2264\u22ef\u2264ana1\u2264a2\u2264\u22ef\u2264an) using only allowed swaps. Otherwise, print \"NO\".ExampleInputCopy6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\nOutputCopyYES\nNO\nYES\nYES\nNO\nYES\n"], "AND 0, Sum Big": ["https://codeforces.com/problemset/problem/1514/B", "B. AND 0, Sum Bigtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBaby Badawy's first words were \"AND 0 SUM BIG\", so he decided to solve the following problem. Given two integers nn and kk, count the number of arrays of length nn such that:  all its elements are integers between 00 and 2k\u221212k\u22121 (inclusive);  the bitwise AND of all its elements is 00;  the sum of its elements is as large as possible. Since the answer can be very large, print its remainder when divided by 109+7109+7.InputThe first line contains an integer tt (1\u2264t\u2264101\u2264t\u226410)\u00a0\u2014 the number of test cases you need to solve.Each test case consists of a line containing two integers nn and kk (1\u2264n\u22641051\u2264n\u2264105, 1\u2264k\u2264201\u2264k\u226420).OutputFor each test case, print the number of arrays satisfying the conditions. Since the answer can be very large, print its remainder when divided by 109+7109+7.ExampleInputCopy2\n2 2\n100000 20\nOutputCopy4\n226732710\nNoteIn the first example, the 44 arrays are:  [3,0][3,0],  [0,3][0,3],  [1,2][1,2],  [2,1][2,1]. "], "Johnny and His Hobbies": ["https://codeforces.com/problemset/problem/1362/B", "B. Johnny and His Hobbiestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAmong Johnny's numerous hobbies, there are two seemingly harmless ones: applying bitwise operations and sneaking into his dad's office. As it is usually the case with small children, Johnny is unaware that combining these two activities can get him in a lot of trouble.There is a set SS containing very important numbers on his dad's desk. The minute Johnny heard about it, he decided that it's a good idea to choose a positive integer kk and replace each element ss of the set SS with s\u2295ks\u2295k (\u2295\u2295 denotes the exclusive or operation). Help him choose such kk that Johnny's dad will not see any difference after his son is done playing (i.e. Johnny will get the same set as before playing). It is possible that no such number exists. It is also possible that there are many of them. In such a case, output the smallest one. Note that the order of elements in a set doesn't matter, i.e. set {1,2,3}{1,2,3} equals to set {2,1,3}{2,1,3}.Formally, find the smallest positive integer kk such that {s\u2295k|s\u2208S}=S{s\u2295k|s\u2208S}=S or report that there is no such number.For example, if S={1,3,4}S={1,3,4} and k=2k=2, new set will be equal to {3,1,6}{3,1,6}. If S={0,1,2,3}S={0,1,2,3} and k=1k=1, after playing set will stay the same.InputIn the first line of input, there is a single integer tt (1\u2264t\u226410241\u2264t\u22641024), the number of test cases. In the next lines, tt test cases follow. Each of them consists of two lines. In the first line there is a single integer nn (1\u2264n\u226410241\u2264n\u22641024) denoting the number of elements in set SS. Second line consists of nn distinct integers sisi (0\u2264si<10240\u2264si<1024), elements of SS.It is guaranteed that the sum of nn over all test cases will not exceed 10241024.OutputPrint tt lines; ii-th line should contain the answer to the ii-th test case, the minimal positive integer kk satisfying the conditions or \u22121\u22121 if no such kk exists.ExampleInputCopy6\n4\n1 0 2 3\n6\n10 7 14 8 3 12\n2\n0 2\n3\n1 2 3\n6\n1 4 6 10 11 12\n2\n0 1023\nOutputCopy1\n4\n2\n-1\n-1\n1023\nNoteIn the first test case, the answer is 11 because it is a minimum positive integer and it satisfies all the conditions."], "Corrupted Array": ["https://codeforces.com/problemset/problem/1512/D", "D. Corrupted Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a number nn and an array b1,b2,\u2026,bn+2b1,b2,\u2026,bn+2, obtained according to the following algorithm:   some array a1,a2,\u2026,ana1,a2,\u2026,an was guessed;  array aa was written to array bb, i.e. bi=aibi=ai (1\u2264i\u2264n1\u2264i\u2264n);  The (n+1)(n+1)-th element of the array bb is the sum of the numbers in the array aa, i.e. bn+1=a1+a2+\u2026+anbn+1=a1+a2+\u2026+an;  The (n+2)(n+2)-th element of the array bb was written some number xx (1\u2264x\u22641091\u2264x\u2264109), i.e. bn+2=xbn+2=x; The  array bb was shuffled. For example, the array b=[2,3,7,12,2]b=[2,3,7,12,2] it could be obtained in the following ways:   a=[2,2,3]a=[2,2,3] and x=12x=12;  a=[3,2,7]a=[3,2,7] and x=2x=2. For the given array bb, find any array aa that could have been guessed initially.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104). Then tt test cases follow.The first line of each test case contains a single integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105).The second row of each test case contains n+2n+2 integers b1,b2,\u2026,bn+2b1,b2,\u2026,bn+2 (1\u2264bi\u22641091\u2264bi\u2264109).It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output:   \"-1\", if the array bb could not be obtained from any array aa;  nn integers a1,a2,\u2026,ana1,a2,\u2026,an, otherwise. If there are several arrays of aa, you can output any.ExampleInputCopy4\n3\n2 3 7 12 2\n4\n9 1 7 1 6 5\n5\n18 2 2 3 2 9 2\n3\n2 6 9 2 1\nOutputCopy2 3 7 \n-1\n2 2 2 3 9 \n1 2 6 \n"], "Ice Skating": ["https://codeforces.com/problemset/problem/217/A", "A. Ice Skatingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBajtek is learning to skate on ice. He's a beginner, so his only mode of transportation is pushing off from a snow drift to the north, east, south or west and sliding until he lands in another snow drift. He has noticed that in this way it's impossible to get from some snow drifts to some other by any sequence of moves. He now wants to heap up some additional snow drifts, so that he can get from any snow drift to any other one. He asked you to find the minimal number of snow drifts that need to be created.We assume that Bajtek can only heap up snow drifts at integer coordinates.InputThe first line of input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of snow drifts. Each of the following n lines contains two integers xi and yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u20091000) \u2014 the coordinates of the i-th snow drift.Note that the north direction coin\u0441ides with the direction of Oy axis, so the east direction coin\u0441ides with the direction of the Ox axis. All snow drift's locations are distinct.OutputOutput the minimal number of snow drifts that need to be created in order for Bajtek to be able to reach any snow drift from any other one.ExamplesInputCopy22 11 2OutputCopy1InputCopy22 14 1OutputCopy0"], "Omkar and Waterslide": ["https://codeforces.com/problemset/problem/1392/C", "C. Omkar and Waterslidetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOmkar is building a waterslide in his water park, and he needs your help to ensure that he does it as efficiently as possible.Omkar currently has nn supports arranged in a line, the ii-th of which has height aiai. Omkar wants to build his waterslide from the right to the left, so his supports must be nondecreasing in height in order to support the waterslide. In 11 operation, Omkar can do the following: take any contiguous subsegment of supports which is nondecreasing by heights and add 11 to each of their heights. Help Omkar find the minimum number of operations he needs to perform to make his supports able to support his waterslide!An array bb is a subsegment of an array cc if bb can be obtained from cc by deletion of several (possibly zero or all) elements from the beginning and several (possibly zero or all) elements from the end.An array b1,b2,\u2026,bnb1,b2,\u2026,bn is called nondecreasing if bi\u2264bi+1bi\u2264bi+1 for every ii from 11 to n\u22121n\u22121.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641001\u2264t\u2264100). Description of the test cases follows.The first line of each test case contains an integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the number of supports Omkar has.The second line of each test case contains nn integers a1,a2,...,ana1,a2,...,an (0\u2264ai\u2264109)(0\u2264ai\u2264109)\u00a0\u2014 the heights of the supports.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output a single integer\u00a0\u2014 the minimum number of operations Omkar needs to perform to make his supports able to support his waterslide.ExampleInputCopy3\n4\n5 3 2 5\n5\n1 2 3 5 3\n3\n1 1 1\nOutputCopy3\n2\n0\nNoteThe subarray with which Omkar performs the operation is bolded.In the first test case:First operation:[5,3,2,5]\u2192[5,3,3,5][5,3,2,5]\u2192[5,3,3,5]Second operation:[5,3,3,5]\u2192[5,4,4,5][5,3,3,5]\u2192[5,4,4,5]Third operation:[5,4,4,5]\u2192[5,5,5,5][5,4,4,5]\u2192[5,5,5,5]In the third test case, the array is already nondecreasing, so Omkar does 00 operations."], "Perfect Team": ["https://codeforces.com/problemset/problem/1221/C", "C. Perfect Teamtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou may have already known that a standard ICPC team consists of exactly three members. The perfect team however has more restrictions. A student can have some specialization: coder or mathematician. She/he can have no specialization, but can't have both at the same time.So the team is considered perfect if it includes at least one coder, at least one mathematician and it consists of exactly three members.You are a coach at a very large university and you know that cc of your students are coders, mm are mathematicians and xx have no specialization.What is the maximum number of full perfect teams you can distribute them into? Note that some students can be left without a team and each student can be a part of no more than one team.You are also asked to answer qq independent queries.InputThe first line contains a single integer qq (1\u2264q\u22641041\u2264q\u2264104) \u2014 the number of queries. Each of the next qq lines contains three integers cc, mm and xx (0\u2264c,m,x\u22641080\u2264c,m,x\u2264108) \u2014 the number of coders, mathematicians and students without any specialization in the university, respectively.Note that the no student is both coder and mathematician at the same time. OutputPrint qq integers \u2014 the ii-th of them should be the answer to the ii query in the order they are given in the input. The answer is the maximum number of full perfect teams you can distribute your students into. ExampleInputCopy6\n1 1 1\n3 6 0\n0 0 0\n0 1 1\n10 1 10\n4 4 1\nOutputCopy1\n3\n0\n0\n1\n3\nNoteIn the first example here are how teams are formed:  the only team of 1 coder, 1 mathematician and 1 without specialization;  all three teams consist of 1 coder and 2 mathematicians;  no teams can be formed;  no teams can be formed;  one team consists of 1 coder, 1 mathematician and 1 without specialization, the rest aren't able to form any team;  one team consists of 1 coder, 1 mathematician and 1 without specialization, one consists of 2 coders and 1 mathematician and one consists of 1 coder and 2 mathematicians. "], "Reverse Binary Strings": ["https://codeforces.com/problemset/problem/1437/B", "B. Reverse Binary Stringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string ss of even length nn. String ss is binary, in other words, consists only of 0's and 1's.String ss has exactly n2n2 zeroes and n2n2 ones (nn is even).In one operation you can reverse any substring of ss. A substring of a string is a contiguous subsequence of that string.What is the minimum number of operations you need to make string ss alternating? A string is alternating if si\u2260si+1si\u2260si+1 for all ii. There are two types of alternating strings in general: 01010101... or 10101010...InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains a single integer nn (2\u2264n\u22641052\u2264n\u2264105; nn is even)\u00a0\u2014 the length of string ss.The second line of each test case contains a binary string ss of length nn (si\u2208si\u2208 {0, 1}). String ss has exactly n2n2 zeroes and n2n2 ones.It's guaranteed that the total sum of nn over test cases doesn't exceed 105105.OutputFor each test case, print the minimum number of operations to make ss alternating.ExampleInputCopy3\n2\n10\n4\n0110\n8\n11101000\nOutputCopy0\n1\n2\nNoteIn the first test case, string 10 is already alternating.In the second test case, we can, for example, reverse the last two elements of ss and get: 0110 \u2192\u2192 0101.In the third test case, we can, for example, make the following two operations:   11101000 \u2192\u2192 10101100;  10101100 \u2192\u2192 10101010. "], "Stable Groups": ["https://codeforces.com/problemset/problem/1539/C", "C. Stable Groupstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn students numerated from 11 to nn. The level of the ii-th student is aiai. You need to split the students into stable groups. A group of students is called stable, if in the sorted array of their levels no two neighboring elements differ by more than xx.For example, if x=4x=4, then the group with levels [1,10,8,4,4][1,10,8,4,4] is stable (because 4\u22121\u2264x4\u22121\u2264x, 4\u22124\u2264x4\u22124\u2264x, 8\u22124\u2264x8\u22124\u2264x, 10\u22128\u2264x10\u22128\u2264x), while the group with levels [2,10,10,7][2,10,10,7] is not stable (7\u22122=5>x7\u22122=5>x).Apart from the nn given students, teachers can invite at most kk additional students with arbitrary levels (at teachers' choice). Find the minimum number of stable groups teachers can form from all students (including the newly invited).For example, if there are two students with levels 11 and 55; x=2x=2; and k\u22651k\u22651, then you can invite a new student with level 33 and put all the students in one stable group.InputThe first line contains three integers nn, kk, xx (1\u2264n\u22642000001\u2264n\u2264200000, 0\u2264k\u226410180\u2264k\u22641018, 1\u2264x\u226410181\u2264x\u22641018)\u00a0\u2014 the initial number of students, the number of students you can additionally invite, and the maximum allowed level difference.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u226410181\u2264ai\u22641018)\u00a0\u2014 the students levels.OutputIn the only line print a single integer: the minimum number of stable groups you can split the students into.ExamplesInputCopy8 2 3\n1 1 5 8 12 13 20 22\nOutputCopy2InputCopy13 0 37\n20 20 80 70 70 70 420 5 1 5 1 60 90\nOutputCopy3NoteIn the first example you can invite two students with levels 22 and 1111. Then you can split the students into two stable groups:   [1,1,2,5,8,11,12,13][1,1,2,5,8,11,12,13],  [20,22][20,22]. In the second example you are not allowed to invite new students, so you need 33 groups:   [1,1,5,5,20,20][1,1,5,5,20,20]  [60,70,70,70,80,90][60,70,70,70,80,90]  [420][420] "], "A-B Palindrome": ["https://codeforces.com/problemset/problem/1512/C", "C. A-B Palindrometime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string ss consisting of the characters '0', '1', and '?'. You need to replace all the characters with '?' in the string ss by '0' or '1' so that the string becomes a palindrome and has exactly aa characters '0' and exactly bb characters '1'. Note that each of the characters '?' is replaced independently from the others.A string tt of length nn is called a palindrome if the equality t[i]=t[n\u2212i+1]t[i]=t[n\u2212i+1] is true for all ii (1\u2264i\u2264n1\u2264i\u2264n).For example, if s=s=\"01?????0\", a=4a=4 and b=4b=4, then you can replace the characters '?' in the following ways:   \"01011010\";  \"01100110\". For the given string ss and the numbers aa and bb, replace all the characters with '?' in the string ss by '0' or '1' so that the string becomes a palindrome and has exactly aa characters '0' and exactly bb characters '1'.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104). Then tt test cases follow.The first line of each test case contains two integers aa and bb (0\u2264a,b\u22642\u22c51050\u2264a,b\u22642\u22c5105, a+b\u22651a+b\u22651).The second line of each test case contains the string ss of length a+ba+b, consisting of the characters '0', '1', and '?'.It is guaranteed that the sum of the string lengths of ss over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output:   \"-1\", if you can't replace all the characters '?' in the string ss by '0' or '1' so that the string becomes a palindrome and that it contains exactly aa characters '0' and exactly bb characters '1';  the string that is obtained as a result of the replacement, otherwise. If there are several suitable ways to replace characters, you can output any.ExampleInputCopy9\n4 4\n01?????0\n3 3\n??????\n1 0\n?\n2 2\n0101\n2 2\n01?0\n0 1\n0\n0 3\n1?1\n2 2\n?00?\n4 3\n??010?0\nOutputCopy01011010\n-1\n0\n-1\n0110\n-1\n111\n1001\n0101010\n"], "Neighbor Grid": ["https://codeforces.com/problemset/problem/1375/B", "B. Neighbor Gridtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a grid with nn rows and mm columns, where each cell has a non-negative integer written on it. We say the grid is good if for each cell the following condition holds: if it has a number k>0k>0 written on it, then exactly kk of its neighboring cells have a number greater than 00 written on them. Note that if the number in the cell is 00, there is no such restriction on neighboring cells.You are allowed to take any number in the grid and increase it by 11. You may apply this operation as many times as you want, to any numbers you want. Perform some operations (possibly zero) to make the grid good, or say that it is impossible. If there are multiple possible answers, you may find any of them.Two cells are considered to be neighboring if they have a common edge.InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u226450001\u2264t\u22645000) \u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains two integers nn and mm (2\u2264n,m\u22643002\u2264n,m\u2264300) \u00a0\u2014 the number of rows and columns, respectively.The following nn lines contain mm integers each, the jj-th element in the ii-th line ai,jai,j is the number written in the jj-th cell of the ii-th row (0\u2264ai,j\u22641090\u2264ai,j\u2264109).It is guaranteed that the sum of n\u22c5mn\u22c5m over all test cases does not exceed 105105.OutputIf it is impossible to obtain a good grid, print a single line containing \"NO\".Otherwise, print a single line containing \"YES\", followed by nn lines each containing mm integers, which describe the final state of the grid. This final grid should be obtainable from the initial one by applying some operations (possibly zero).If there are multiple possible answers, you may print any of them.ExampleInputCopy5\n3 4\n0 0 0 0\n0 1 0 0\n0 0 0 0\n2 2\n3 0\n0 0\n2 2\n0 0\n0 0\n2 3\n0 0 0\n0 4 0\n4 4\n0 0 0 0\n0 2 0 1\n0 0 0 0\n0 0 0 0\nOutputCopyYES\n0 0 0 0\n0 1 1 0\n0 0 0 0\nNO\nYES\n0 0\n0 0\nNO\nYES\n0 1 0 0\n1 4 2 1\n0 2 0 0\n1 3 1 0\nNoteIn the first test case, we can obtain the resulting grid by increasing the number in row 22, column 33 once. Both of the cells that contain 11 have exactly one neighbor that is greater than zero, so the grid is good. Many other solutions exist, such as the grid 01000100 02100210 00000000 All of them are accepted as valid answers.In the second test case, it is impossible to make the grid good.In the third test case, notice that no cell has a number greater than zero on it, so the grid is automatically good."], "Three Parts of the Array": ["https://codeforces.com/problemset/problem/1006/C", "C. Three Parts of the Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array d1,d2,\u2026,dnd1,d2,\u2026,dn consisting of nn integer numbers.Your task is to split this array into three parts (some of which may be empty) in such a way that each element of the array belongs to exactly one of the three parts, and each of the parts forms a consecutive contiguous subsegment (possibly, empty) of the original array. Let the sum of elements of the first part be sum1sum1, the sum of elements of the second part be sum2sum2 and the sum of elements of the third part be sum3sum3. Among all possible ways to split the array you have to choose a way such that sum1=sum3sum1=sum3 and sum1sum1 is maximum possible.More formally, if the first part of the array contains aa elements, the second part of the array contains bb elements and the third part contains cc elements, then:sum1=\u22111\u2264i\u2264adi,sum1=\u22111\u2264i\u2264adi, sum2=\u2211a+1\u2264i\u2264a+bdi,sum2=\u2211a+1\u2264i\u2264a+bdi, sum3=\u2211a+b+1\u2264i\u2264a+b+cdi.sum3=\u2211a+b+1\u2264i\u2264a+b+cdi.The sum of an empty array is 00.Your task is to find a way to split the array such that sum1=sum3sum1=sum3 and sum1sum1 is maximum possible.InputThe first line of the input contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of elements in the array dd.The second line of the input contains nn integers d1,d2,\u2026,dnd1,d2,\u2026,dn (1\u2264di\u22641091\u2264di\u2264109) \u2014 the elements of the array dd.OutputPrint a single integer \u2014 the maximum possible value of sum1sum1, considering that the condition sum1=sum3sum1=sum3 must be met.Obviously, at least one valid way to split the array exists (use a=c=0a=c=0 and b=nb=n).ExamplesInputCopy51 3 1 1 4OutputCopy5InputCopy51 3 2 1 4OutputCopy4InputCopy34 1 2OutputCopy0NoteIn the first example there is only one possible splitting which maximizes sum1sum1: [1,3,1],[\u00a0],[1,4][1,3,1],[\u00a0],[1,4].In the second example the only way to have sum1=4sum1=4 is: [1,3],[2,1],[4][1,3],[2,1],[4].In the third example there is only one way to split the array: [\u00a0],[4,1,2],[\u00a0][\u00a0],[4,1,2],[\u00a0]."], "Permutation Transformation": ["https://codeforces.com/problemset/problem/1490/D", "D. Permutation Transformationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA permutation\u00a0\u2014 is a sequence of length nn integers from 11 to nn, in which all the numbers occur exactly once. For example, [1][1], [3,5,2,1,4][3,5,2,1,4], [1,3,2][1,3,2]\u00a0\u2014 permutations, and [2,3,2][2,3,2], [4,3,1][4,3,1], [0][0]\u00a0\u2014 no.Polycarp was recently gifted a permutation a[1\u2026n]a[1\u2026n] of length nn. Polycarp likes trees more than permutations, so he wants to transform permutation aa into a rooted binary tree. He transforms an array of different integers into a tree as follows:   the maximum element of the array becomes the root of the tree;  all elements to the left of the maximum \u2014 form a left subtree (which is built according to the same rules but applied to the left part of the array), but if there are no elements to the left of the maximum, then the root has no left child;  all elements to the right of the maximum \u2014 form a right subtree (which is built according to the same rules but applied to the right side of the array), but if there are no elements to the right of the maximum, then the root has no right child. For example, if he builds a tree by permutation a=[3,5,2,1,4]a=[3,5,2,1,4], then the root will be the element a2=5a2=5, and the left subtree will be the tree that will be built for the subarray a[1\u20261]=[3]a[1\u20261]=[3], and the right one \u2014 for the subarray a[3\u20265]=[2,1,4]a[3\u20265]=[2,1,4]. As a result, the following tree will be built:   The tree corresponding to the permutation a=[3,5,2,1,4]a=[3,5,2,1,4]. Another example: let the permutation be a=[1,3,2,7,5,6,4]a=[1,3,2,7,5,6,4]. In this case, the tree looks like this:   The tree corresponding to the permutation a=[1,3,2,7,5,6,4]a=[1,3,2,7,5,6,4]. Let us denote by dvdv the depth of the vertex avav, that is, the number of edges on the path from the root to the vertex numbered avav. Note that the root depth is zero. Given the permutation aa, for each vertex, find the value of dvdv.InputThe first line contains one integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains an integer nn (1\u2264n\u22641001\u2264n\u2264100)\u00a0\u2014 the length of the permutation.This is followed by nn numbers a1,a2,\u2026,ana1,a2,\u2026,an\u00a0\u2014 permutation aa.OutputFor each test case, output nn values\u00a0\u2014 d1,d2,\u2026,dnd1,d2,\u2026,dn.ExampleInputCopy3\n5\n3 5 2 1 4\n1\n1\n4\n4 3 1 2\nOutputCopy1 0 2 3 1 \n0 \n0 1 3 2 \n"], "Book Reading": ["https://codeforces.com/problemset/problem/1213/C", "C. Book Readingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp is reading a book consisting of nn pages numbered from 11 to nn. Every time he finishes the page with the number divisible by mm, he writes down the last digit of this page number. For example, if n=15n=15 and m=5m=5, pages divisible by mm are 5,10,155,10,15. Their last digits are 5,0,55,0,5 correspondingly, their sum is 1010.Your task is to calculate the sum of all digits Polycarp has written down.You have to answer qq independent queries.InputThe first line of the input contains one integer qq (1\u2264q\u226410001\u2264q\u22641000) \u2014 the number of queries.The following qq lines contain queries, one per line. Each query is given as two integers nn and mm (1\u2264n,m\u226410161\u2264n,m\u22641016) \u2014 the number of pages in the book and required divisor, respectively.OutputFor each query print the answer for it \u2014 the sum of digits written down by Polycarp.ExampleInputCopy7\n1 1\n10 1\n100 3\n1024 14\n998244353 1337\n123 144\n1234312817382646 13\nOutputCopy1\n45\n153\n294\n3359835\n0\n427262129093995\n"], "Mocha and Hiking": ["https://codeforces.com/problemset/problem/1559/C", "C. Mocha and Hikingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe city where Mocha lives in is called Zhijiang. There are n+1n+1 villages and 2n\u221212n\u22121 directed roads in this city. There are two kinds of roads:  n\u22121n\u22121 roads are from village ii to village i+1i+1, for all 1\u2264i\u2264n\u221211\u2264i\u2264n\u22121.  nn roads can be described by a sequence a1,\u2026,ana1,\u2026,an. If ai=0ai=0, the ii-th of these roads goes from village ii to village n+1n+1, otherwise it goes from village n+1n+1 to village ii, for all 1\u2264i\u2264n1\u2264i\u2264n. Mocha plans to go hiking with Taki this weekend. To avoid the trip being boring, they plan to go through every village exactly once. They can start and finish at any villages. Can you help them to draw up a plan? InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u2264201\u2264t\u226420) \u2014 the number of test cases. Each test case consists of two lines.The first line of each test case contains a single integer nn (1\u2264n\u22641041\u2264n\u2264104) \u2014 indicates that the number of villages is n+1n+1.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u226410\u2264ai\u22641). If ai=0ai=0, it means that there is a road from village ii to village n+1n+1. If ai=1ai=1, it means that there is a road from village n+1n+1 to village ii.It is guaranteed that the sum of nn over all test cases does not exceed 104104.OutputFor each test case, print a line with n+1n+1 integers, where the ii-th number is the ii-th village they will go through. If the answer doesn't exist, print \u22121\u22121.If there are multiple correct answers, you can print any one of them.ExampleInputCopy2\n3\n0 1 0\n3\n1 1 0\nOutputCopy1 4 2 3 \n4 1 2 3 \nNoteIn the first test case, the city looks like the following graph:So all possible answers are (1\u21924\u21922\u21923)(1\u21924\u21922\u21923), (1\u21922\u21923\u21924)(1\u21922\u21923\u21924).In the second test case, the city looks like the following graph:So all possible answers are (4\u21921\u21922\u21923)(4\u21921\u21922\u21923), (1\u21922\u21923\u21924)(1\u21922\u21923\u21924), (3\u21924\u21921\u21922)(3\u21924\u21921\u21922), (2\u21923\u21924\u21921)(2\u21923\u21924\u21921)."], "Wrong Addition": ["https://codeforces.com/problemset/problem/1619/C", "C. Wrong Additiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTanya is learning how to add numbers, but so far she is not doing it correctly. She is adding two numbers aa and bb using the following algorithm:  If one of the numbers is shorter than the other, Tanya adds leading zeros so that the numbers are the same length.  The numbers are processed from right to left (that is, from the least significant digits to the most significant).  In the first step, she adds the last digit of aa to the last digit of bb and writes their sum in the answer.  At each next step, she performs the same operation on each pair of digits in the same place and writes the result to the left side of the answer.  For example, the numbers a=17236a=17236 and b=3465b=3465 Tanya adds up as follows:+17236034651106911+17236034651106911  calculates the sum of 6+5=116+5=11 and writes 1111 in the answer.  calculates the sum of 3+6=93+6=9 and writes the result to the left side of the answer to get 911911.  calculates the sum of 2+4=62+4=6 and writes the result to the left side of the answer to get 69116911.  calculates the sum of 7+3=107+3=10, and writes the result to the left side of the answer to get 106911106911.  calculates the sum of 1+0=11+0=1 and writes the result to the left side of the answer and get 11069111106911. As a result, she gets 11069111106911.You are given two positive integers aa and ss. Find the number bb such that by adding aa and bb as described above, Tanya will get ss. Or determine that no suitable bb exists.InputThe first line of input data contains an integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases.Each test case consists of a single line containing two positive integers aa and ss (1\u2264a<s\u226410181\u2264a<s\u22641018) separated by a space.OutputFor each test case print the answer on a separate line.If the solution exists, print a single positive integer bb. The answer must be written without leading zeros. If multiple answers exist, print any of them.If no suitable number bb exists, output -1.ExampleInputCopy6\n17236 1106911\n1 5\n108 112\n12345 1023412\n1 11\n1 20\nOutputCopy3465\n4\n-1\n90007\n10\n-1\nNoteThe first test case is explained in the main part of the statement.In the third test case, we cannot choose bb that satisfies the problem statement."], "M-arrays": ["https://codeforces.com/problemset/problem/1497/B", "B. M-arraystime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array a1,a2,\u2026,ana1,a2,\u2026,an consisting of nn positive integers and a positive integer mm.You should divide elements of this array into some arrays. You can order the elements in the new arrays as you want.Let's call an array mm-divisible if for each two adjacent numbers in the array (two numbers on the positions ii and i+1i+1 are called adjacent for each ii) their sum is divisible by mm. An array of one element is mm-divisible.Find the smallest number of mm-divisible arrays that a1,a2,\u2026,ana1,a2,\u2026,an is possible to divide into.InputThe first line contains a single integer tt (1\u2264t\u22641000)(1\u2264t\u22641000) \u00a0\u2014 the number of test cases.The first line of each test case contains two integers nn, mm (1\u2264n\u2264105,1\u2264m\u2264105)(1\u2264n\u2264105,1\u2264m\u2264105).The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264109)(1\u2264ai\u2264109).It is guaranteed that the sum of nn and the sum of mm over all test cases do not exceed 105105.OutputFor each test case print the answer to the problem.ExampleInputCopy4\n6 4\n2 2 8 6 9 4\n10 8\n1 1 1 5 2 4 4 8 6 7\n1 1\n666\n2 2\n2 4\nOutputCopy3\n6\n1\n1\nNoteIn the first test case we can divide the elements as follows:  [4,8][4,8]. It is a 44-divisible array because 4+84+8 is divisible by 44.  [2,6,2][2,6,2]. It is a 44-divisible array because 2+62+6 and 6+26+2 are divisible by 44.  [9][9]. It is a 44-divisible array because it consists of one element. "], "Cat Cycle": ["https://codeforces.com/problemset/problem/1487/B", "B. Cat Cycletime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSuppose you are living with two cats: A and B. There are nn napping spots where both cats usually sleep.Your cats like to sleep and also like all these spots, so they change napping spot each hour cyclically:   Cat A changes its napping place in order: n,n\u22121,n\u22122,\u2026,3,2,1,n,n\u22121,\u2026n,n\u22121,n\u22122,\u2026,3,2,1,n,n\u22121,\u2026 In other words, at the first hour it's on the spot nn and then goes in decreasing order cyclically;  Cat B changes its napping place in order: 1,2,3,\u2026,n\u22121,n,1,2,\u20261,2,3,\u2026,n\u22121,n,1,2,\u2026 In other words, at the first hour it's on the spot 11 and then goes in increasing order cyclically. The cat B is much younger, so they have a strict hierarchy: A and B don't lie together. In other words, if both cats'd like to go in spot xx then the A takes this place and B moves to the next place in its order (if x<nx<n then to x+1x+1, but if x=nx=n then to 11). Cat B follows his order, so it won't return to the skipped spot xx after A frees it, but will move to the spot x+2x+2 and so on.Calculate, where cat B will be at hour kk?InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.The first and only line of each test case contains two integers nn and kk (2\u2264n\u22641092\u2264n\u2264109; 1\u2264k\u22641091\u2264k\u2264109)\u00a0\u2014 the number of spots and hour kk.OutputFor each test case, print one integer\u00a0\u2014 the index of the spot where cat B will sleep at hour kk.ExampleInputCopy7\n2 1\n2 2\n3 1\n3 2\n3 3\n5 5\n69 1337\nOutputCopy1\n2\n1\n3\n2\n2\n65\nNoteIn the first and second test cases n=2n=2, so:   at the 11-st hour, A is on spot 22 and B is on 11;  at the 22-nd hour, A moves to spot 11 and B\u00a0\u2014 to 22.  If n=3n=3 then:   at the 11-st hour, A is on spot 33 and B is on 11;  at the 22-nd hour, A moves to spot 22; B'd like to move from 11 to 22, but this spot is occupied, so it moves to 33;  at the 33-rd hour, A moves to spot 11; B also would like to move from 33 to 11, but this spot is occupied, so it moves to 22. In the sixth test case:   A's spots at each hour are [5,4,3,2,1][5,4,3,2,1];  B's spots at each hour are [1,2,4,5,2][1,2,4,5,2]. "], "Little Pony and Sort by Shift": ["https://codeforces.com/problemset/problem/454/B", "B. Little Pony and Sort by Shifttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day, Twilight Sparkle is interested in how to sort a sequence of integers a1,\u2009a2,\u2009...,\u2009an in non-decreasing order. Being a young unicorn, the only operation she can perform is a unit shift. That is, she can move the last element of the sequence to its beginning:a1,\u2009a2,\u2009...,\u2009an\u2009\u2192\u2009an,\u2009a1,\u2009a2,\u2009...,\u2009an\u2009-\u20091. Help Twilight Sparkle to calculate: what is the minimum number of operations that she needs to sort the sequence?InputThe first line contains an integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105). The second line contains n integer numbers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105).OutputIf it's impossible to sort the sequence output -1. Otherwise output the minimum number of operations Twilight Sparkle needs to sort it.ExamplesInputCopy22 1OutputCopy1InputCopy31 3 2OutputCopy-1InputCopy21 2OutputCopy0"], "Soldier and Badges": ["https://codeforces.com/problemset/problem/546/B", "B. Soldier and Badgestime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputColonel has n badges. He wants to give one badge to every of his n soldiers. Each badge has a coolness factor, which shows how much it's owner reached. Coolness factor can be increased by one for the cost of one coin. For every pair of soldiers one of them should get a badge with strictly higher factor than the second one. Exact values of their factors aren't important, they just need to have distinct factors. Colonel knows, which soldier is supposed to get which badge initially, but there is a problem. Some of badges may have the same factor of coolness. Help him and calculate how much money has to be paid for making all badges have different factors of coolness.InputFirst line of input consists of one integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093000).Next line consists of n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009n), which stand for coolness factor of each badge.OutputOutput single integer \u2014 minimum amount of coins the colonel has to pay.ExamplesInputCopy41 3 1 4OutputCopy1InputCopy51 2 3 2 5OutputCopy2NoteIn first sample test we can increase factor of first badge by 1.In second sample test we can increase factors of the second and the third badge by 1."], "Prinzessin der Verurteilung": ["https://codeforces.com/problemset/problem/1536/B", "B. Prinzessin der Verurteilungtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputI, Fischl, Prinzessin der Verurteilung, descend upon this land by the call of fate an \u2014 Oh, you are also a traveler from another world? Very well, I grant you permission to travel with me.It is no surprise Fischl speaks with a strange choice of words. However, this time, not even Oz, her raven friend, can interpret her expressions! Maybe you can help us understand what this young princess is saying?You are given a string of nn lowercase Latin letters, the word that Fischl just spoke. You think that the MEX of this string may help you find the meaning behind this message. The MEX of the string is defined as the shortest string that doesn't appear as a contiguous substring in the input. If multiple strings exist, the lexicographically smallest one is considered the MEX. Note that the empty substring does NOT count as a valid MEX.A string aa is lexicographically smaller than a string bb if and only if one of the following holds:   aa is a prefix of bb, but a\u2260ba\u2260b;  in the first position where aa and bb differ, the string aa has a letter that appears earlier in the alphabet than the corresponding letter in bb. A string aa is a substring of a string bb if aa can be obtained from bb by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.Find out what the MEX of the string is!InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u226410001\u2264t\u22641000). Description of the test cases follows.The first line of each test case contains an integer nn (1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the length of the word. The second line for each test case contains a single string of nn lowercase Latin letters.The sum of nn over all test cases will not exceed 10001000.OutputFor each test case, output the MEX of the string on a new line.ExampleInputCopy3\n28\nqaabzwsxedcrfvtgbyhnujmiklop\n13\ncleanairactbd\n10\naannttoonn\nOutputCopyac\nf\nb\n"], "Balanced Team": ["https://codeforces.com/problemset/problem/1133/C", "C. Balanced Teamtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are a coach at your local university. There are nn students under your supervision, the programming skill of the ii-th student is aiai.You have to create a team for a new programming competition. As you know, the more students some team has the more probable its victory is! So you have to create a team with the maximum number of students. But you also know that a team should be balanced. It means that the programming skill of each pair of students in a created team should differ by no more than 55.Your task is to report the maximum possible number of students in a balanced team.InputThe first line of the input contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of students.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is a programming skill of the ii-th student.OutputPrint one integer \u2014 the maximum possible number of students in a balanced team.ExamplesInputCopy6\n1 10 17 12 15 2\nOutputCopy3\nInputCopy10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\nOutputCopy10\nInputCopy6\n1 1000 10000 10 100 1000000000\nOutputCopy1\nNoteIn the first example you can create a team with skills [12,17,15][12,17,15].In the second example you can take all students in a team because their programming skills are equal.In the third example you can create a team consisting of a single student (and you cannot create a team consisting of at least two students)."], "Hungry Sequence": ["https://codeforces.com/problemset/problem/327/B", "B. Hungry Sequencetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIahub and Iahubina went to a date at a luxury restaurant. Everything went fine until paying for the food. Instead of money, the waiter wants Iahub to write a Hungry sequence consisting of n integers. A sequence a1, a2, ..., an, consisting of n integers, is Hungry if and only if:   Its elements are in increasing order. That is an inequality ai\u2009<\u2009aj holds for any two indices i,\u2009j (i\u2009<\u2009j).  For any two indices i and j (i\u2009<\u2009j), aj must not be divisible by ai. Iahub is in trouble, so he asks you for help. Find a Hungry sequence with n elements.InputThe input contains a single integer: n (1\u2009\u2264\u2009n\u2009\u2264\u2009105).OutputOutput a line that contains n space-separated integers a1 a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u2009107), representing a possible Hungry sequence. Note, that each ai must not be greater than 10000000 (107) and less than 1.If there are multiple solutions you can output any one.ExamplesInputCopy3OutputCopy2 9 15InputCopy5OutputCopy11 14 20 27 31"], "Diamond Miner": ["https://codeforces.com/problemset/problem/1495/A", "A. Diamond Minertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDiamond Miner is a game that is similar to Gold Miner, but there are nn miners instead of 11 in this game.The mining area can be described as a plane. The nn miners can be regarded as nn points on the y-axis. There are nn diamond mines in the mining area. We can regard them as nn points on the x-axis. For some reason, no miners or diamond mines can be at the origin (point (0,0)(0,0)). Every miner should mine exactly one diamond mine. Every miner has a hook, which can be used to mine a diamond mine. If a miner at the point (a,b)(a,b) uses his hook to mine a diamond mine at the point (c,d)(c,d), he will spend (a\u2212c)2+(b\u2212d)2\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u221a(a\u2212c)2+(b\u2212d)2 energy to mine it (the distance between these points). The miners can't move or help each other.The object of this game is to minimize the sum of the energy that miners spend. Can you find this minimum?InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u2264101\u2264t\u226410)\u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of miners and mines.Each of the next 2n2n lines contains two space-separated integers xx (\u2212108\u2264x\u2264108\u2212108\u2264x\u2264108) and yy (\u2212108\u2264y\u2264108\u2212108\u2264y\u2264108), which represent the point (x,y)(x,y) to describe a miner's or a diamond mine's position. Either x=0x=0, meaning there is a miner at the point (0,y)(0,y), or y=0y=0, meaning there is a diamond mine at the point (x,0)(x,0). There can be multiple miners or diamond mines at the same point.It is guaranteed that no point is at the origin. It is guaranteed that the number of points on the x-axis is equal to nn and the number of points on the y-axis is equal to nn.It's guaranteed that the sum of nn for all test cases does not exceed 105105.OutputFor each test case, print a single real number \u2014 the minimal sum of energy that should be spent.Your answer is considered correct if its absolute or relative error does not exceed 10\u2212910\u22129.Formally, let your answer be aa, and the jury's answer be bb. Your answer is accepted if and only if |a\u2212b|max(1,|b|)\u226410\u22129|a\u2212b|max(1,|b|)\u226410\u22129.ExampleInputCopy3\n2\n0 1\n1 0\n0 -1\n-2 0\n4\n1 0\n3 0\n-5 0\n6 0\n0 3\n0 1\n0 2\n0 4\n5\n3 0\n0 4\n0 -3\n4 0\n2 0\n1 0\n-3 0\n0 -10\n0 -2\n0 -10\nOutputCopy3.650281539872885\n18.061819283610362\n32.052255376143336\nNoteIn the first test case, the miners are at (0,1)(0,1) and (0,\u22121)(0,\u22121), while the diamond mines are at (1,0)(1,0) and (\u22122,0)(\u22122,0). If you arrange the miners to get the diamond mines in the way, shown in the picture, you can get the sum of the energy 2\u2013\u221a+5\u2013\u221a2+5."], "Stairs": ["https://codeforces.com/problemset/problem/1419/B", "B. Stairstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputJett is tired after destroying the town and she wants to have a rest. She likes high places, that's why for having a rest she wants to get high and she decided to craft staircases.A staircase is a squared figure that consists of square cells. Each staircase consists of an arbitrary number of stairs. If a staircase has nn stairs, then it is made of nn columns, the first column is 11 cell high, the second column is 22 cells high, \u2026\u2026, the nn-th column if nn cells high. The lowest cells of all stairs must be in the same row.A staircase with nn stairs is called nice, if it may be covered by nn disjoint squares made of cells. All squares should fully consist of cells of a staircase. This is how a nice covered staircase with 77 stairs looks like:  Find out the maximal number of different nice staircases, that can be built, using no more than xx cells, in total. No cell can be used more than once.InputThe first line contains a single integer tt (1\u2264t\u22641000)(1\u2264t\u22641000) \u00a0\u2014 the number of test cases.The description of each test case contains a single integer xx (1\u2264x\u22641018)(1\u2264x\u22641018) \u00a0\u2014 the number of cells for building staircases.OutputFor each test case output a single integer \u00a0\u2014 the number of different nice staircases, that can be built, using not more than xx cells, in total.ExampleInputCopy4\n1\n8\n6\n1000000000000000000\nOutputCopy1\n2\n1\n30\nNoteIn the first test case, it is possible to build only one staircase, that consists of 11 stair. It's nice. That's why the answer is 11.In the second test case, it is possible to build two different nice staircases: one consists of 11 stair, and another consists of 33 stairs. This will cost 77 cells. In this case, there is one cell left, but it is not possible to use it for building any nice staircases, that have not been built yet. That's why the answer is 22.In the third test case, it is possible to build only one of two nice staircases: with 11 stair or with 33 stairs. In the first case, there will be 55 cells left, that may be used only to build a staircase with 22 stairs. This staircase is not nice, and Jett only builds nice staircases. That's why in this case the answer is 11. If Jett builds a staircase with 33 stairs, then there are no more cells left, so the answer is 11 again."], "Flip the Bits": ["https://codeforces.com/problemset/problem/1504/B", "B. Flip the Bitstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a binary string aa of length nn. In one operation, you can select any prefix of aa with an equal number of 00 and 11 symbols. Then all symbols in the prefix are inverted: each 00 becomes 11 and each 11 becomes 00.For example, suppose a=0111010000a=0111010000.   In the first operation, we can select the prefix of length 88 since it has four 00's and four 11's: [01110100]00\u2192[10001011]00[01110100]00\u2192[10001011]00.  In the second operation, we can select the prefix of length 22 since it has one 00 and one 11: [10]00101100\u2192[01]00101100[10]00101100\u2192[01]00101100.  It is illegal to select the prefix of length 44 for the third operation, because it has three 00's and one 11. Can you transform the string aa into the string bb using some finite number of operations (possibly, none)?InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases.The first line of each test case contains a single integer nn (1\u2264n\u22643\u22c51051\u2264n\u22643\u22c5105) \u2014 the length of the strings aa and bb.The following two lines contain strings aa and bb of length nn, consisting of symbols 00 and 11.The sum of nn across all test cases does not exceed 3\u22c51053\u22c5105.OutputFor each test case, output \"YES\" if it is possible to transform aa into bb, or \"NO\" if it is impossible. You can print each letter in any case (upper or lower).ExampleInputCopy5\n10\n0111010000\n0100101100\n4\n0000\n0000\n3\n001\n000\n12\n010101010101\n100110011010\n6\n000111\n110100\nOutputCopyYES\nYES\nNO\nYES\nNO\nNoteThe first test case is shown in the statement.In the second test case, we transform aa into bb by using zero operations.In the third test case, there is no legal operation, so it is impossible to transform aa into bb.In the fourth test case, here is one such transformation:   Select the length 22 prefix to get 100101010101100101010101.  Select the length 1212 prefix to get 011010101010011010101010.  Select the length 88 prefix to get 100101011010100101011010.  Select the length 44 prefix to get 011001011010011001011010.  Select the length 66 prefix to get 100110011010100110011010. In the fifth test case, the only legal operation is to transform aa into 111000111000. From there, the only legal operation is to return to the string we started with, so we cannot transform aa into bb."], "Domino": ["https://codeforces.com/problemset/problem/85/A", "A. Dominotime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputWe all know the problem about the number of ways one can tile a 2\u2009\u00d7\u2009n field by 1\u2009\u00d7\u20092 dominoes. You probably remember that it goes down to Fibonacci numbers. We will talk about some other problem below, there you also are going to deal with tiling a rectangular field with dominoes.You are given a 4\u2009\u00d7\u2009n rectangular field, that is the field that contains four lines and n columns. You have to find for it any tiling by 1\u2009\u00d7\u20092 dominoes such that each of the n\u2009-\u20091 potential vertical cuts along the grid lines intersects at least one domino, splitting it in two. No two dominoes in the sought tiling should overlap, each square of the field should be covered by exactly one domino. It is allowed to rotate the dominoes, that is, you can use 2\u2009\u00d7\u20091 as well as 1\u2009\u00d7\u20092 dominoes.Write a program that finds an arbitrary sought tiling. InputThe input contains one positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of the field's columns.OutputIf there's no solution, print \"-1\" (without the quotes). Otherwise, print four lines containing n characters each \u2014 that's the description of tiling, where each vertical cut intersects at least one domino. You should print the tiling, having painted the field in no more than 26 colors. Each domino should be painted a color. Different dominoes can be painted the same color, but dominoes of the same color should not be side-neighbouring. To indicate colors you should use lowercase Latin letters. Print any of the acceptable ways of tiling.ExamplesInputCopy4OutputCopyyyzzbccdbxxdyyaa"], "Two Bags of Potatoes": ["https://codeforces.com/problemset/problem/239/A", "A. Two Bags of Potatoestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputValera had two bags of potatoes, the first of these bags contains x (x\u2009\u2265\u20091) potatoes, and the second \u2014 y (y\u2009\u2265\u20091) potatoes. Valera \u2014 very scattered boy, so the first bag of potatoes (it contains x potatoes) Valera lost. Valera remembers that the total amount of potatoes (x\u2009+\u2009y) in the two bags, firstly, was not gerater than n, and, secondly, was divisible by k.Help Valera to determine how many potatoes could be in the first bag. Print all such possible numbers in ascending order.InputThe first line of input contains three integers y, k, n (1\u2009\u2264\u2009y,\u2009k,\u2009n\u2009\u2264\u2009109;  \u2009\u2264\u2009105).OutputPrint the list of whitespace-separated integers \u2014 all possible values of x in ascending order. You should print each possible value of x exactly once.If there are no such values of x print a single integer -1.ExamplesInputCopy10 1 10OutputCopy-1InputCopy10 6 40OutputCopy2 8 14 20 26 "], "Creating the Contest": ["https://codeforces.com/problemset/problem/1029/B", "B. Creating the Contesttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a problemset consisting of nn problems. The difficulty of the ii-th problem is aiai. It is guaranteed that all difficulties are distinct and are given in the increasing order.You have to assemble the contest which consists of some problems of the given problemset. In other words, the contest you have to assemble should be a subset of problems (not necessary consecutive) of the given problemset. There is only one condition that should be satisfied: for each problem but the hardest one (the problem with the maximum difficulty) there should be a problem with the difficulty greater than the difficulty of this problem but not greater than twice the difficulty of this problem. In other words, let ai1,ai2,\u2026,aipai1,ai2,\u2026,aip be the difficulties of the selected problems in increasing order. Then for each jj from 11 to p\u22121p\u22121 aij+1\u2264aij\u22c52aij+1\u2264aij\u22c52 should hold. It means that the contest consisting of only one problem is always valid.Among all contests satisfying the condition above you have to assemble one with the maximum number of problems. Your task is to find this number of problems.InputThe first line of the input contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of problems in the problemset.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 difficulties of the problems. It is guaranteed that difficulties of the problems are distinct and are given in the increasing order.OutputPrint a single integer \u2014 maximum number of problems in the contest satisfying the condition in the problem statement.ExamplesInputCopy101 2 5 6 7 10 21 23 24 49OutputCopy4InputCopy52 10 50 110 250OutputCopy1InputCopy64 7 12 100 150 199OutputCopy3NoteDescription of the first example: there are 1010 valid contests consisting of 11 problem, 1010 valid contests consisting of 22 problems ([1,2],[5,6],[5,7],[5,10],[6,7],[6,10],[7,10],[21,23],[21,24],[23,24][1,2],[5,6],[5,7],[5,10],[6,7],[6,10],[7,10],[21,23],[21,24],[23,24]), 55 valid contests consisting of 33 problems ([5,6,7],[5,6,10],[5,7,10],[6,7,10],[21,23,24][5,6,7],[5,6,10],[5,7,10],[6,7,10],[21,23,24]) and a single valid contest consisting of 44 problems ([5,6,7,10][5,6,7,10]).In the second example all the valid contests consist of 11 problem.In the third example are two contests consisting of 33 problems: [4,7,12][4,7,12] and [100,150,199][100,150,199]."], "Poisoned Dagger": ["https://codeforces.com/problemset/problem/1613/C", "C. Poisoned Daggertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMonocarp is playing yet another computer game. In this game, his character has to kill a dragon. The battle with the dragon lasts 100500100500 seconds, during which Monocarp attacks the dragon with a poisoned dagger. The ii-th attack is performed at the beginning of the aiai-th second from the battle start. The dagger itself does not deal damage, but it applies a poison effect on the dragon, which deals 11 damage during each of the next kk seconds (starting with the same second when the dragon was stabbed by the dagger). However, if the dragon has already been poisoned, then the dagger updates the poison effect (i.e. cancels the current poison effect and applies a new one).For example, suppose k=4k=4, and Monocarp stabs the dragon during the seconds 22, 44 and 1010. Then the poison effect is applied at the start of the 22-nd second and deals 11 damage during the 22-nd and 33-rd seconds; then, at the beginning of the 44-th second, the poison effect is reapplied, so it deals exactly 11 damage during the seconds 44, 55, 66 and 77; then, during the 1010-th second, the poison effect is applied again, and it deals 11 damage during the seconds 1010, 1111, 1212 and 1313. In total, the dragon receives 1010 damage.Monocarp knows that the dragon has hh hit points, and if he deals at least hh damage to the dragon during the battle \u2014 he slays the dragon. Monocarp has not decided on the strength of the poison he will use during the battle, so he wants to find the minimum possible value of kk (the number of seconds the poison effect lasts) that is enough to deal at least hh damage to the dragon.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of the test case contains two integers nn and hh (1\u2264n\u2264100;1\u2264h\u226410181\u2264n\u2264100;1\u2264h\u22641018)\u00a0\u2014 the number of Monocarp's attacks and the amount of damage that needs to be dealt.The second line contains nn integers a1a1, a2a2, ..., anan (1\u2264ai\u2264109;ai<ai+11\u2264ai\u2264109;ai<ai+1), where aiai is the second when the ii-th attack is performed.OutputFor each test case, print a single integer\u00a0\u2014 the minimum value of the parameter kk, such that Monocarp will cause at least hh damage to the dragon.ExampleInputCopy4\n2 5\n1 5\n3 10\n2 4 10\n5 3\n1 2 4 5 7\n4 1000\n3 25 64 1337\nOutputCopy3\n4\n1\n470\nNoteIn the first example, for k=3k=3, damage is dealt in seconds [1,2,3,5,6,7][1,2,3,5,6,7].In the second example, for k=4k=4, damage is dealt in seconds [2,3,4,5,6,7,10,11,12,13][2,3,4,5,6,7,10,11,12,13].In the third example, for k=1k=1, damage is dealt in seconds [1,2,4,5,7][1,2,4,5,7]."], "Next Test": ["https://codeforces.com/problemset/problem/27/A", "A. Next Testtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output\u00abPolygon\u00bb is a system which allows to create programming tasks in a simple and professional way. When you add a test to the problem, the corresponding form asks you for the test index. As in most cases it is clear which index the next test will have, the system suggests the default value of the index. It is calculated as the smallest positive integer which is not used as an index for some previously added test.You are to implement this feature. Create a program which determines the default index of the next test, given the indexes of the previously added tests.InputThe first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093000) \u2014 the amount of previously added tests. The second line contains n distinct integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u20093000) \u2014 indexes of these tests.OutputOutput the required default value for the next test index.ExamplesInputCopy31 7 2OutputCopy3"], "Make Them Equal": ["https://codeforces.com/problemset/problem/1594/C", "C. Make Them Equaltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTheofanis has a string s1s2\u2026sns1s2\u2026sn and a character cc. He wants to make all characters of the string equal to cc using the minimum number of operations.In one operation he can choose a number xx (1\u2264x\u2264n1\u2264x\u2264n) and for every position ii, where ii is not divisible by xx, replace sisi with cc. Find the minimum number of operations required to make all the characters equal to cc and the xx-s that he should use in his operations.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.The first line of each test case contains the integer nn (3\u2264n\u22643\u22c51053\u2264n\u22643\u22c5105) and a lowercase Latin letter cc\u00a0\u2014 the length of the string ss and the character the resulting string should consist of.The second line of each test case contains a string ss of lowercase Latin letters\u00a0\u2014 the initial string.It is guaranteed that the sum of nn over all test cases does not exceed 3\u22c51053\u22c5105.OutputFor each test case, firstly print one integer mm\u00a0\u2014 the minimum number of operations required to make all the characters equal to cc.Next, print mm integers x1,x2,\u2026,xmx1,x2,\u2026,xm (1\u2264xj\u2264n1\u2264xj\u2264n)\u00a0\u2014 the xx-s that should be used in the order they are given.It can be proved that under given constraints, an answer always exists. If there are multiple answers, print any.ExampleInputCopy3\n4 a\naaaa\n4 a\nbaaa\n4 b\nbzyx\nOutputCopy0\n1\n2\n2 \n2 3\nNoteLet's describe what happens in the third test case:   x1=2x1=2: we choose all positions that are not divisible by 22 and replace them, i.\u00a0e. bzyx \u2192\u2192 bzbx;  x2=3x2=3: we choose all positions that are not divisible by 33 and replace them, i.\u00a0e. bzbx \u2192\u2192 bbbb. "], "Interesting Subarray": ["https://codeforces.com/problemset/problem/1270/B", "B. Interesting Subarraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputFor an array aa of integers let's denote its maximal element as max(a)max(a), and minimal as min(a)min(a). We will call an array aa of kk integers interesting if max(a)\u2212min(a)\u2265kmax(a)\u2212min(a)\u2265k. For example, array [1,3,4,3][1,3,4,3] isn't interesting as max(a)\u2212min(a)=4\u22121=3<4max(a)\u2212min(a)=4\u22121=3<4 while array [7,3,0,4,3][7,3,0,4,3] is as max(a)\u2212min(a)=7\u22120=7\u22655max(a)\u2212min(a)=7\u22120=7\u22655.You are given an array aa of nn integers. Find some interesting nonempty subarray of aa, or tell that it doesn't exist.An array bb is a subarray of an array aa if bb can be obtained from aa by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end. In particular, an array is a subarray of itself.InputThe first line contains integer number tt (1\u2264t\u2264100001\u2264t\u226410000). Then tt test cases follow.The first line of each test case contains a single integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105)\u00a0\u2014 the length of the array.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109)\u00a0\u2014 the elements of the array.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output \"NO\" in a separate line if there is no interesting nonempty subarray in aa. Otherwise, output \"YES\" in a separate line. In the next line, output two integers ll and rr (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n)\u00a0\u2014 bounds of the chosen subarray. If there are multiple answers, print any.You can print each letter in any case (upper or lower).ExampleInputCopy3\n5\n1 2 3 4 5\n4\n2 0 1 9\n2\n2019 2020\nOutputCopyNO\nYES\n1 4\nNO\nNoteIn the second test case of the example, one of the interesting subarrays is a=[2,0,1,9]a=[2,0,1,9]: max(a)\u2212min(a)=9\u22120=9\u22654max(a)\u2212min(a)=9\u22120=9\u22654."], "Odd Sum Segments": ["https://codeforces.com/problemset/problem/1196/B", "B. Odd Sum Segmentstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn integers a1,a2,\u2026,ana1,a2,\u2026,an. You want to split it into exactly kk non-empty non-intersecting subsegments such that each subsegment has odd sum (i.\u2009e. for each subsegment, the sum of all elements that belong to this subsegment is odd). It is impossible to rearrange (shuffle) the elements of a given array. Each of the nn elements of the array aa must belong to exactly one of the kk subsegments.Let's see some examples of dividing the array of length 55 into 33 subsegments (not necessarily with odd sums): [1,2,3,4,5][1,2,3,4,5] is the initial array, then all possible ways to divide it into 33 non-empty non-intersecting subsegments are described below:  [1],[2],[3,4,5][1],[2],[3,4,5];  [1],[2,3],[4,5][1],[2,3],[4,5];  [1],[2,3,4],[5][1],[2,3,4],[5];  [1,2],[3],[4,5][1,2],[3],[4,5];  [1,2],[3,4],[5][1,2],[3,4],[5];  [1,2,3],[4],[5][1,2,3],[4],[5]. Of course, it can be impossible to divide the initial array into exactly kk subsegments in such a way that each of them will have odd sum of elements. In this case print \"NO\". Otherwise, print \"YES\" and any possible division of the array. See the output format for the detailed explanation.You have to answer qq independent queries.InputThe first line contains one integer qq (1\u2264q\u22642\u22c51051\u2264q\u22642\u22c5105) \u2014 the number of queries. Then qq queries follow.The first line of the query contains two integers nn and kk (1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105) \u2014 the number of elements in the array and the number of subsegments, respectively.The second line of the query contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is the ii-th element of aa.It is guaranteed that the sum of nn over all queries does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105).OutputFor each query, print the answer to it. If it is impossible to divide the initial array into exactly kk subsegments in such a way that each of them will have odd sum of elements, print \"NO\" in the first line. Otherwise, print \"YES\" in the first line and any possible division of the array in the second line. The division can be represented as kk integers r1r1, r2r2, ..., rkrk such that 1\u2264r1<r2<\u22ef<rk=n1\u2264r1<r2<\u22ef<rk=n, where rjrj is the right border of the jj-th segment (the index of the last element that belongs to the jj-th segment), so the array is divided into subsegments [1;r1],[r1+1;r2],[r2+1,r3],\u2026,[rk\u22121+1,n][1;r1],[r1+1;r2],[r2+1,r3],\u2026,[rk\u22121+1,n]. Note that rkrk is always nn but you should print it anyway. ExampleInputCopy3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\nOutputCopyYES\n1 3 5\nNO\nNO\n"], "Replace and Keep Sorted": ["https://codeforces.com/problemset/problem/1485/B", "B. Replace and Keep Sortedtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiven a positive integer kk, two arrays are called kk-similar if:  they are strictly increasing;  they have the same length;  all their elements are positive integers between 11 and kk (inclusive);  they differ in exactly one position. You are given an integer kk, a strictly increasing array aa and qq queries. For each query, you are given two integers li\u2264rili\u2264ri. Your task is to find how many arrays bb exist, such that bb is kk-similar to array [ali,ali+1\u2026,ari][ali,ali+1\u2026,ari]. InputThe first line contains three integers nn, qq and kk (1\u2264n,q\u22641051\u2264n,q\u2264105, n\u2264k\u2264109n\u2264k\u2264109)\u00a0\u2014 the length of array aa, the number of queries and number kk.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264k1\u2264ai\u2264k). This array is strictly increasing \u00a0\u2014 a1<a2<\u2026<ana1<a2<\u2026<an.Each of the following qq lines contains two integers lili, riri (1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n).OutputPrint qq lines. The ii-th of them should contain the answer to the ii-th query.ExamplesInputCopy4 2 5\n1 2 4 5\n2 3\n3 4\nOutputCopy4\n3\nInputCopy6 5 10\n2 4 6 7 8 9\n1 4\n1 2\n3 5\n1 6\n5 5\nOutputCopy8\n9\n7\n6\n9\nNoteIn the first example:In the first query there are 44 arrays that are 55-similar to [2,4][2,4]: [1,4],[3,4],[2,3],[2,5][1,4],[3,4],[2,3],[2,5].In the second query there are 33 arrays that are 55-similar to [4,5][4,5]: [1,5],[2,5],[3,5][1,5],[2,5],[3,5]."], "Penalty": ["https://codeforces.com/problemset/problem/1553/C", "C. Penaltytime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputConsider a simplified penalty phase at the end of a football match.A penalty phase consists of at most 1010 kicks, the first team takes the first kick, the second team takes the second kick, then the first team takes the third kick, and so on. The team that scores more goals wins; if both teams score the same number of goals, the game results in a tie (note that it goes against the usual football rules). The penalty phase is stopped if one team has scored more goals than the other team could reach with all of its remaining kicks. For example, if after the 77-th kick the first team has scored 11 goal, and the second team has scored 33 goals, the penalty phase ends \u2014 the first team cannot reach 33 goals.You know which player will be taking each kick, so you have your predictions for each of the 1010 kicks. These predictions are represented by a string ss consisting of 1010 characters. Each character can either be 1, 0, or ?. This string represents your predictions in the following way:  if sisi is 1, then the ii-th kick will definitely score a goal;  if sisi is 0, then the ii-th kick definitely won't score a goal;  if sisi is ?, then the ii-th kick could go either way. Based on your predictions, you have to calculate the minimum possible number of kicks there can be in the penalty phase (that means, the earliest moment when the penalty phase is stopped, considering all possible ways it could go). Note that the referee doesn't take into account any predictions when deciding to stop the penalty phase \u2014 you may know that some kick will/won't be scored, but the referee doesn't.InputThe first line contains one integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases.Each test case is represented by one line containing the string ss, consisting of exactly 1010 characters. Each character is either 1, 0, or ?.OutputFor each test case, print one integer \u2014 the minimum possible number of kicks in the penalty phase.ExampleInputCopy4\n1?0???1001\n1111111111\n??????????\n0100000000\nOutputCopy7\n10\n6\n9\nNoteConsider the example test:In the first test case, consider the situation when the 11-st, 55-th and 77-th kicks score goals, and kicks 22, 33, 44 and 66 are unsuccessful. Then the current number of goals for the first team is 33, for the second team is 00, and the referee sees that the second team can score at most 22 goals in the remaining kicks. So the penalty phase can be stopped after the 77-th kick.In the second test case, the penalty phase won't be stopped until all 1010 kicks are finished.In the third test case, if the first team doesn't score any of its three first kicks and the second team scores all of its three first kicks, then after the 66-th kick, the first team has scored 00 goals and the second team has scored 33 goals, and the referee sees that the first team can score at most 22 goals in the remaining kicks. So, the penalty phase can be stopped after the 66-th kick.In the fourth test case, even though you can predict the whole penalty phase, the referee understands that the phase should be ended only after the 99-th kick."], "Delete Two Elements": ["https://codeforces.com/problemset/problem/1598/C", "C. Delete Two Elementstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMonocarp has got an array aa consisting of nn integers. Let's denote kk as the mathematic mean of these elements (note that it's possible that kk is not an integer). The mathematic mean of an array of nn elements is the sum of elements divided by the number of these elements (i.\u2009e. sum divided by nn).Monocarp wants to delete exactly two elements from aa so that the mathematic mean of the remaining (n\u22122)(n\u22122) elements is still equal to kk.Your task is to calculate the number of pairs of positions [i,j][i,j] (i<ji<j) such that if the elements on these positions are deleted, the mathematic mean of (n\u22122)(n\u22122) remaining elements is equal to kk (that is, it is equal to the mathematic mean of nn elements of the original array aa).InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of testcases.The first line of each testcase contains one integer nn (3\u2264n\u22642\u22c51053\u2264n\u22642\u22c5105) \u2014 the number of elements in the array.The second line contains a sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109), where aiai is the ii-th element of the array.The sum of nn over all testcases doesn't exceed 2\u22c51052\u22c5105.OutputPrint one integer \u2014 the number of pairs of positions [i,j][i,j] (i<ji<j) such that if the elements on these positions are deleted, the mathematic mean of (n\u22122)(n\u22122) remaining elements is equal to kk (that is, it is equal to the mathematic mean of nn elements of the original array aa).ExampleInputCopy4\n4\n8 8 8 8\n3\n50 20 10\n5\n1 4 7 3 5\n7\n1 2 3 4 5 6 7\nOutputCopy6\n0\n2\n3\nNoteIn the first example, any pair of elements can be removed since all of them are equal.In the second example, there is no way to delete two elements so the mathematic mean doesn't change.In the third example, it is possible to delete the elements on positions 11 and 33, or the elements on positions 44 and 55."], "Vanya and Books": ["https://codeforces.com/problemset/problem/552/B", "B. Vanya and Bookstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVanya got an important task \u2014 he should enumerate books in the library and label each book with its number. Each of the n books should be assigned with a number from 1 to n. Naturally, distinct books should be assigned distinct numbers.Vanya wants to know how many digits he will have to write down as he labels the books.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009109) \u2014 the number of books in the library.OutputPrint the number of digits needed to number all the books.ExamplesInputCopy13OutputCopy17InputCopy4OutputCopy4NoteNote to the first test. The books get numbers 1,\u20092,\u20093,\u20094,\u20095,\u20096,\u20097,\u20098,\u20099,\u200910,\u200911,\u200912,\u200913, which totals to 17 digits.Note to the second sample. The books get numbers 1,\u20092,\u20093,\u20094, which totals to 4 digits."], "Sherlock and his girlfriend": ["https://codeforces.com/problemset/problem/776/B", "B. Sherlock and his girlfriendtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSherlock has a new girlfriend (so unlike him!). Valentine's day is coming and he wants to gift her some jewelry.He bought n pieces of jewelry. The i-th piece has price equal to i\u2009+\u20091, that is, the prices of the jewelry are 2,\u20093,\u20094,\u2009... n\u2009+\u20091.Watson gave Sherlock a challenge to color these jewelry pieces such that two pieces don't have the same color if the price of one piece is a prime divisor of the price of the other piece. Also, Watson asked him to minimize the number of different colors used.Help Sherlock complete this trivial task.InputThe only line contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100000)\u00a0\u2014 the number of jewelry pieces.OutputThe first line of output should contain a single integer k, the minimum number of colors that can be used to color the pieces of jewelry with the given constraints.The next line should consist of n space-separated integers (between 1 and k) that specify the color of each piece in the order of increasing price.If there are multiple ways to color the pieces using k colors, you can output any of them.ExamplesInputCopy3OutputCopy21 1 2 InputCopy4OutputCopy22 1 1 2NoteIn the first input, the colors for first, second and third pieces of jewelry having respective prices 2, 3 and 4 are 1, 1 and 2 respectively.In this case, as 2 is a prime divisor of 4, colors of jewelry having prices 2 and 4 must be distinct."], "Andrew and Stones": ["https://codeforces.com/problemset/problem/1637/C", "C. Andrew and Stonestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAndrew has nn piles with stones. The ii-th pile contains aiai stones. He wants to make his table clean so he decided to put every stone either to the 11-st or the nn-th pile.Andrew can perform the following operation any number of times: choose 33 indices 1\u2264i<j<k\u2264n1\u2264i<j<k\u2264n, such that the jj-th pile contains at least 22 stones, then he takes 22 stones from the pile jj and puts one stone into pile ii and one stone into pile kk. Tell Andrew what is the minimum number of operations needed to move all the stones to piles 11 and nn, or determine if it's impossible.InputThe input contains several test cases. The first line contains one integer tt (1\u2264t\u2264100001\u2264t\u226410000)\u00a0\u2014 the number of test cases.The first line for each test case contains one integer nn (3\u2264n\u22641053\u2264n\u2264105)\u00a0\u2014 the length of the array.The second line contains a sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the array elements.It is guaranteed that the sum of the values nn over all test cases does not exceed 105105.OutputFor each test case print the minimum number of operations needed to move stones to piles 11 and nn, or print \u22121\u22121 if it's impossible.ExampleInputCopy4\n5\n1 2 2 3 6\n3\n1 3 1\n3\n1 2 1\n4\n3 1 1 2\nOutputCopy4\n-1\n1\n-1 \nNoteIn the first test case, it is optimal to do the following:   Select (i,j,k)=(1,2,5)(i,j,k)=(1,2,5). The array becomes equal to [2,0,2,3,7][2,0,2,3,7].  Select (i,j,k)=(1,3,4)(i,j,k)=(1,3,4). The array becomes equal to [3,0,0,4,7][3,0,0,4,7].  Twice select (i,j,k)=(1,4,5)(i,j,k)=(1,4,5). The array becomes equal to [5,0,0,0,9][5,0,0,0,9]. This array satisfy the statement, because every stone is moved to piles 11 and 55.  There are 44 operations in total.In the second test case, it's impossible to put all stones into piles with numbers 11 and 33:   At the beginning there's only one possible operation with (i,j,k)=(1,2,3)(i,j,k)=(1,2,3). The array becomes equal to [2,1,2][2,1,2].  Now there is no possible operation and the array doesn't satisfy the statement, so the answer is \u22121\u22121. In the third test case, it's optimal to do the following:   Select (i,j,k)=(1,2,3)(i,j,k)=(1,2,3). The array becomes equal to [2,0,2][2,0,2]. This array satisfies the statement, because every stone is moved to piles 11 and 33.  The is 11 operation in total.In the fourth test case, it's impossible to do any operation, and the array doesn't satisfy the statement, so the answer is \u22121\u22121."], "Dominated Subarray": ["https://codeforces.com/problemset/problem/1257/C", "C. Dominated Subarraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call an array tt dominated by value vv in the next situation.At first, array tt should have at least 22 elements. Now, let's calculate number of occurrences of each number numnum in tt and define it as occ(num)occ(num). Then tt is dominated (by vv) if (and only if) occ(v)>occ(v\u2032)occ(v)>occ(v\u2032) for any other number v\u2032v\u2032. For example, arrays [1,2,3,4,5,2][1,2,3,4,5,2], [11,11][11,11] and [3,2,3,2,3][3,2,3,2,3] are dominated (by 22, 1111 and 33 respectevitely) but arrays [3][3], [1,2][1,2] and [3,3,2,2,1][3,3,2,2,1] are not.Small remark: since any array can be dominated only by one number, we can not specify this number and just say that array is either dominated or not.You are given array a1,a2,\u2026,ana1,a2,\u2026,an. Calculate its shortest dominated subarray or say that there are no such subarrays.The subarray of aa is a contiguous part of the array aa, i.\u2009e. the array ai,ai+1,\u2026,ajai,ai+1,\u2026,aj for some 1\u2264i\u2264j\u2264n1\u2264i\u2264j\u2264n.InputThe first line contains single integer TT (1\u2264T\u226410001\u2264T\u22641000) \u2014 the number of test cases. Each test case consists of two lines.The first line contains single integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the length of the array aa.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n) \u2014 the corresponding values of the array aa.It's guaranteed that the total length of all arrays in one test doesn't exceed 2\u22c51052\u22c5105.OutputPrint TT integers \u2014 one per test case. For each test case print the only integer \u2014 the length of the shortest dominated subarray, or \u22121\u22121 if there are no such subarrays.ExampleInputCopy4\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\nOutputCopy-1\n6\n3\n2\nNoteIn the first test case, there are no subarrays of length at least 22, so the answer is \u22121\u22121.In the second test case, the whole array is dominated (by 11) and it's the only dominated subarray.In the third test case, the subarray a4,a5,a6a4,a5,a6 is the shortest dominated subarray.In the fourth test case, all subarrays of length more than one are dominated."], "Appleman and Toastman": ["https://codeforces.com/problemset/problem/461/A", "A. Appleman and Toastmantime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAppleman and Toastman play a game. Initially Appleman gives one group of n numbers to the Toastman, then they start to complete the following tasks:  Each time Toastman gets a group of numbers, he sums up all the numbers and adds this sum to the score. Then he gives the group to the Appleman.  Each time Appleman gets a group consisting of a single number, he throws this group out. Each time Appleman gets a group consisting of more than one number, he splits the group into two non-empty groups (he can do it in any way) and gives each of them to Toastman. After guys complete all the tasks they look at the score value. What is the maximum possible value of score they can get?InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105). The second line contains n integers a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u2009106) \u2014 the initial group that is given to Toastman.OutputPrint a single integer \u2014 the largest possible score.ExamplesInputCopy33 1 5OutputCopy26InputCopy110OutputCopy10NoteConsider the following situation in the first example. Initially Toastman gets group [3, 1, 5] and adds 9 to the score, then he give the group to Appleman. Appleman splits group [3, 1, 5] into two groups: [3, 5] and [1]. Both of them should be given to Toastman. When Toastman receives group [1], he adds 1 to score and gives the group to Appleman (he will throw it out). When Toastman receives group [3, 5], he adds 8 to the score and gives the group to Appleman. Appleman splits [3, 5] in the only possible way: [5] and [3]. Then he gives both groups to Toastman. When Toastman receives [5], he adds 5 to the score and gives the group to Appleman (he will throws it out). When Toastman receives [3], he adds 3 to the score and gives the group to Appleman (he will throws it out). Finally Toastman have added 9 + 1 + 8 + 5 + 3 = 26 to the score. This is the optimal sequence of actions."], "Equal Rectangles": ["https://codeforces.com/problemset/problem/1203/B", "B. Equal Rectanglestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given 4n4n sticks, the length of the ii-th stick is aiai.You have to create nn rectangles, each rectangle will consist of exactly 44 sticks from the given set. The rectangle consists of four sides, opposite sides should have equal length and all angles in it should be right. Note that each stick can be used in only one rectangle. Each stick should be used as a side, you cannot break the stick or use it not to the full length.You want to all rectangles to have equal area. The area of the rectangle with sides aa and bb is a\u22c5ba\u22c5b.Your task is to say if it is possible to create exactly nn rectangles of equal area or not.You have to answer qq independent queries.InputThe first line of the input contains one integer qq (1\u2264q\u22645001\u2264q\u2264500) \u2014 the number of queries. Then qq queries follow.The first line of the query contains one integer nn (1\u2264n\u22641001\u2264n\u2264100) \u2014 the number of rectangles.The second line of the query contains 4n4n integers a1,a2,\u2026,a4na1,a2,\u2026,a4n (1\u2264ai\u22641041\u2264ai\u2264104), where aiai is the length of the ii-th stick.OutputFor each query print the answer to it. If it is impossible to create exactly nn rectangles of equal area using given sticks, print \"NO\". Otherwise print \"YES\".ExampleInputCopy5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\nOutputCopyYES\nYES\nNO\nYES\nYES\n"], "Bracket Sequence Deletion": ["https://codeforces.com/problemset/problem/1657/C", "C. Bracket Sequence Deletiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a bracket sequence consisting of nn characters '(' and/or )'. You perform several operations with it.During one operation, you choose the shortest prefix of this string (some amount of first characters of the string) that is good and remove it from the string.The prefix is considered good if one of the following two conditions is satisfied:  this prefix is a regular bracket sequence;  this prefix is a palindrome of length at least two. A bracket sequence is called regular if it is possible to obtain a correct arithmetic expression by inserting characters '+' and '1' into this sequence. For example, sequences (())(), () and (()(())) are regular, while )(, (() and (()))( are not.The bracket sequence is called palindrome if it reads the same back and forth. For example, the bracket sequences )), (( and )(() are palindromes, while bracket sequences (), )( and ))( are not palindromes.You stop performing the operations when it's not possible to find a good prefix. Your task is to find the number of operations you will perform on the given string and the number of remaining characters in the string.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. The next 2t2t lines describe test cases.The first line of the test case contains one integer nn (1\u2264n\u22645\u22c51051\u2264n\u22645\u22c5105) \u2014 the length of the bracket sequence.The second line of the test case contains nn characters '(' and/or ')' \u2014 the bracket sequence itself.It is guaranteed that the sum of nn over all test cases do not exceed 5\u22c51055\u22c5105 (\u2211n\u22645\u22c5105\u2211n\u22645\u22c5105).OutputFor each test case, print two integers cc and rr \u2014 the number of operations you will perform on the given bracket sequence and the number of characters that remain in the string after performing all operations.ExampleInputCopy5\n2\n()\n3\n())\n4\n((((\n5\n)((()\n6\n)((()(\nOutputCopy1 0\n1 1\n2 0\n1 0\n1 1\n"], "Lecture Sleep": ["https://codeforces.com/problemset/problem/961/B", "B. Lecture Sleeptime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYour friend Mishka and you attend a calculus lecture. Lecture lasts n minutes. Lecturer tells ai theorems during the i-th minute.Mishka is really interested in calculus, though it is so hard to stay awake for all the time of lecture. You are given an array t of Mishka's behavior. If Mishka is asleep during the i-th minute of the lecture then ti will be equal to 0, otherwise it will be equal to 1. When Mishka is awake he writes down all the theorems he is being told \u2014 ai during the i-th minute. Otherwise he writes nothing.You know some secret technique to keep Mishka awake for k minutes straight. However you can use it only once. You can start using it at the beginning of any minute between 1 and n\u2009-\u2009k\u2009+\u20091. If you use it on some minute i then Mishka will be awake during minutes j such that  and will write down all the theorems lecturer tells.You task is to calculate the maximum number of theorems Mishka will be able to write down if you use your technique only once to wake him up.InputThe first line of the input contains two integer numbers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the duration of the lecture in minutes and the number of minutes you can keep Mishka awake.The second line of the input contains n integer numbers a1,\u2009a2,\u2009... an (1\u2009\u2264\u2009ai\u2009\u2264\u2009104) \u2014 the number of theorems lecturer tells during the i-th minute.The third line of the input contains n integer numbers t1,\u2009t2,\u2009... tn (0\u2009\u2264\u2009ti\u2009\u2264\u20091) \u2014 type of Mishka's behavior at the i-th minute of the lecture.OutputPrint only one integer \u2014 the maximum number of theorems Mishka will be able to write down if you use your technique only once to wake him up.ExampleInputCopy6 31 3 5 2 5 41 1 0 1 0 0OutputCopy16NoteIn the sample case the better way is to use the secret technique at the beginning of the third minute. Then the number of theorems Mishka will be able to write down will be equal to 16."], "Great Sequence": ["https://codeforces.com/problemset/problem/1641/A", "A. Great Sequencetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA sequence of positive integers is called great for a positive integer xx, if we can split it into pairs in such a way that in each pair the first number multiplied by xx is equal to the second number. More formally, a sequence aa of size nn is great for a positive integer xx, if nn is even and there exists a permutation pp of size nn, such that for each ii (1\u2264i\u2264n21\u2264i\u2264n2) ap2i\u22121\u22c5x=ap2iap2i\u22121\u22c5x=ap2i. Sam has a sequence aa and a positive integer xx. Help him to make the sequence great: find the minimum possible number of positive integers that should be added to the sequence aa to make it great for the number xx.InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u2264200001\u2264t\u226420000) \u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains two integers nn, xx (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 2\u2264x\u22641062\u2264x\u2264106).The next line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case print a single integer\u00a0\u2014 the minimum number of integers that can be added to the end of aa to make it a great sequence for the number xx.ExampleInputCopy4\n4 4\n1 16 4 4\n6 2\n1 2 2 2 4 7\n5 3\n5 2 3 5 15\n9 10\n10 10 10 20 1 100 200 2000 3\nOutputCopy0\n2\n3\n3\nNoteIn the first test case, Sam got lucky and the sequence is already great for the number 44 because you can divide it into such pairs: (1,4)(1,4), (4,16)(4,16). Thus we can add 00 numbers.In the second test case, you can add numbers 11 and 1414 to the sequence, then you can divide all 88 integers into such pairs: (1,2)(1,2), (1,2)(1,2), (2,4)(2,4), (7,14)(7,14). It is impossible to add less than 22 integers to fix the sequence."], "TL": ["https://codeforces.com/problemset/problem/350/A", "A. TLtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputValera wanted to prepare a Codesecrof round. He's already got one problem and he wants to set a time limit (TL) on it.Valera has written n correct solutions. For each correct solution, he knows its running time (in seconds). Valera has also wrote m wrong solutions and for each wrong solution he knows its running time (in seconds).Let's suppose that Valera will set v seconds TL in the problem. Then we can say that a solution passes the system testing if its running time is at most v seconds. We can also say that a solution passes the system testing with some \"extra\" time if for its running time, a seconds, an inequality 2a\u2009\u2264\u2009v holds.As a result, Valera decided to set v seconds TL, that the following conditions are met:  v is a positive integer;  all correct solutions pass the system testing;  at least one correct solution passes the system testing with some \"extra\" time;  all wrong solutions do not pass the system testing;  value v is minimum among all TLs, for which points 1, 2, 3, 4 hold. Help Valera and find the most suitable TL or else state that such TL doesn't exist.InputThe first line contains two integers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100). The second line contains n space-separated positive integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009100) \u2014 the running time of each of the n correct solutions in seconds. The third line contains m space-separated positive integers b1,\u2009b2,\u2009...,\u2009bm (1\u2009\u2264\u2009bi\u2009\u2264\u2009100) \u2014 the running time of each of m wrong solutions in seconds. OutputIf there is a valid TL value, print it. Otherwise, print -1.ExamplesInputCopy3 64 5 28 9 6 10 7 11OutputCopy5InputCopy3 13 4 56OutputCopy-1"], "Fedya and Maths": ["https://codeforces.com/problemset/problem/456/B", "B. Fedya and Mathstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFedya studies in a gymnasium. Fedya's maths hometask is to calculate the following expression:(1n\u2009+\u20092n\u2009+\u20093n\u2009+\u20094n)\u00a0mod\u00a05for given value of n. Fedya managed to complete the task. Can you? Note that given number n can be extremely large (e.g. it can exceed any integer type of your programming language).InputThe single line contains a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u200910105). The number doesn't contain any leading zeroes.OutputPrint the value of the expression without leading zeros.ExamplesInputCopy4OutputCopy4InputCopy124356983594583453458888889OutputCopy0NoteOperation x\u00a0mod\u00a0y means taking remainder after division x by y.Note to the first sample:"], "Weight of the System of Nested Segments": ["https://codeforces.com/problemset/problem/1650/C", "C. Weight of the System of Nested Segmentstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOn the number line there are mm points, ii-th of which has integer coordinate xixi and integer weight wiwi. The coordinates of all points are different, and the points are numbered from 11 to mm.A sequence of nn segments [l1,r1],[l2,r2],\u2026,[ln,rn][l1,r1],[l2,r2],\u2026,[ln,rn] is called system of nested segments if for each pair i,ji,j (1\u2264i<j\u2264n1\u2264i<j\u2264n) the condition li<lj<rj<rili<lj<rj<ri is satisfied. In other words, the second segment is strictly inside the first one, the third segment is strictly inside the second one, and so on.For a given number nn, find a system of nested segments such that:  both ends of each segment are one of mm given points;  the sum of the weights 2\u22c5n2\u22c5n of the points used as ends of the segments is minimal. For example, let m=8m=8. The given points are marked in the picture, their weights are marked in red, their coordinates are marked in blue. Make a system of three nested segments:  weight of the first segment: 1+1=21+1=2  weight of the second segment: 10+(\u22121)=910+(\u22121)=9  weight of the third segment: 3+(\u22122)=13+(\u22122)=1  sum of the weights of all the segments in the system: 2+9+1=122+9+1=12   System of three nested segments InputThe first line of input data contains an integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014the number of input test cases.An empty line is written before each test case.The first line of each test case contains two positive integers nn (1\u2264n\u22641051\u2264n\u2264105) and mm (2\u22c5n\u2264m\u22642\u22c51052\u22c5n\u2264m\u22642\u22c5105). The next mm lines contain pairs of integers xixi (\u2212109\u2264xi\u2264109\u2212109\u2264xi\u2264109) and wiwi (\u2212104\u2264wi\u2264104\u2212104\u2264wi\u2264104) \u2014 coordinate and weight of point number ii (1\u2264i\u2264m1\u2264i\u2264m) respectively. All xixi are different.It is guaranteed that the sum of mm values over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output n+1n+1 lines: in the first of them, output the weight of the composed system, and in the next nn lines output exactly two numbers \u00a0\u2014 the indices of the points which are the endpoints of the ii-th segment (1\u2264i\u2264n1\u2264i\u2264n). The order in which you output the endpoints of a segment is not important \u2014 you can output the index of the left endpoint first and then the number of the right endpoint, or the other way around.If there are several ways to make a system of nested segments with minimal weight, output any of them.ExampleInputCopy3\n\n3 8\n0 10\n-2 1\n4 10\n11 20\n7 -1\n9 1\n2 3\n5 -2\n\n3 6\n-1 2\n1 3\n3 -1\n2 4\n4 0\n8 2\n\n2 5\n5 -1\n3 -2\n1 0\n-2 0\n-5 -3\nOutputCopy12\n2 6\n5 1\n7 8\n\n10\n1 6\n5 2\n3 4\n\n-6\n5 1\n4 2NoteThe first test case coincides with the example from the condition. It can be shown that the weight of the composed system is minimal.The second test case has only 66 points, so you need to use each of them to compose 33 segments."], "Make Equal With Mod": ["https://codeforces.com/problemset/problem/1656/C", "C. Make Equal With Modtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array of nn non-negative integers a1,a2,\u2026,ana1,a2,\u2026,an. You can make the following operation: choose an integer x\u22652x\u22652 and replace each number of the array by the remainder when dividing that number by xx, that is, for all 1\u2264i\u2264n1\u2264i\u2264n set aiai to aimodxaimodx.Determine if it is possible to make all the elements of the array equal by applying the operation zero or more times.InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains an integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 the length of the array.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109) where aiai is the ii-th element of the array.The sum of nn for all test cases is at most 2\u22c51052\u22c5105.OutputFor each test case, print a line with YES if you can make all elements of the list equal by applying the operation. Otherwise, print NO.You may print each letter in any case (for example, \"YES\", \"Yes\", \"yes\", \"yEs\" will all be recognized as a positive answer).ExampleInputCopy4\n4\n2 5 6 8\n3\n1 1 1\n5\n4 1 7 0 8\n4\n5 9 17 5\nOutputCopyYES\nYES\nNO\nYES\nNoteIn the first test case, one can apply the operation with x=3x=3 to obtain the array [2,2,0,2][2,2,0,2], and then apply the operation with x=2x=2 to obtain [0,0,0,0][0,0,0,0].In the second test case, all numbers are already equal.In the fourth test case, applying the operation with x=4x=4 results in the array [1,1,1,1][1,1,1,1]."], "Alphabetic Removals": ["https://codeforces.com/problemset/problem/999/C", "C. Alphabetic Removalstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string ss consisting of nn lowercase Latin letters. Polycarp wants to remove exactly kk characters (k\u2264nk\u2264n) from the string ss. Polycarp uses the following algorithm kk times:  if there is at least one letter 'a', remove the leftmost occurrence and stop the algorithm, otherwise go to next item;  if there is at least one letter 'b', remove the leftmost occurrence and stop the algorithm, otherwise go to next item;  ...  remove the leftmost occurrence of the letter 'z' and stop the algorithm. This algorithm removes a single letter from the string. Polycarp performs this algorithm exactly kk times, thus removing exactly kk characters.Help Polycarp find the resulting string.InputThe first line of input contains two integers nn and kk (1\u2264k\u2264n\u22644\u22c51051\u2264k\u2264n\u22644\u22c5105) \u2014 the length of the string and the number of letters Polycarp will remove.The second line contains the string ss consisting of nn lowercase Latin letters.OutputPrint the string that will be obtained from ss after Polycarp removes exactly kk letters using the above algorithm kk times.If the resulting string is empty, print nothing. It is allowed to print nothing or an empty line (line break).ExamplesInputCopy15 3cccaabababaccbcOutputCopycccbbabaccbcInputCopy15 9cccaabababaccbcOutputCopyccccccInputCopy1 1uOutputCopy"], "Find Marble": ["https://codeforces.com/problemset/problem/285/B", "B. Find Marbletime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya and Vasya are playing a game. Petya's got n non-transparent glasses, standing in a row. The glasses' positions are indexed with integers from 1 to n from left to right. Note that the positions are indexed but the glasses are not.First Petya puts a marble under the glass in position s. Then he performs some (possibly zero) shuffling operations. One shuffling operation means moving the glass from the first position to position p1, the glass from the second position to position p2 and so on. That is, a glass goes from position i to position pi. Consider all glasses are moving simultaneously during one shuffling operation. When the glasses are shuffled, the marble doesn't travel from one glass to another: it moves together with the glass it was initially been put in.After all shuffling operations Petya shows Vasya that the ball has moved to position t. Vasya's task is to say what minimum number of shuffling operations Petya has performed or determine that Petya has made a mistake and the marble could not have got from position s to position t.InputThe first line contains three integers: n,\u2009s,\u2009t (1\u2009\u2264\u2009n\u2009\u2264\u2009105;\u00a01\u2009\u2264\u2009s,\u2009t\u2009\u2264\u2009n) \u2014 the number of glasses, the ball's initial and final position. The second line contains n space-separated integers: p1,\u2009p2,\u2009...,\u2009pn (1\u2009\u2264\u2009pi\u2009\u2264\u2009n) \u2014 the shuffling operation parameters. It is guaranteed that all pi's are distinct.Note that s can equal t.OutputIf the marble can move from position s to position t, then print on a single line a non-negative integer \u2014 the minimum number of shuffling operations, needed to get the marble to position t. If it is impossible, print number -1.ExamplesInputCopy4 2 12 3 4 1OutputCopy3InputCopy4 3 34 1 3 2OutputCopy0InputCopy4 3 41 2 3 4OutputCopy-1InputCopy3 1 32 1 3OutputCopy-1"], "Game with string": ["https://codeforces.com/problemset/problem/1104/B", "B. Game with stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTwo people are playing a game with a string ss, consisting of lowercase latin letters. On a player's turn, he should choose two consecutive equal letters in the string and delete them. For example, if the string is equal to \"xaax\" than there is only one possible turn: delete \"aa\", so the string will become \"xx\". A player not able to make a turn loses.Your task is to determine which player will win if both play optimally.InputThe only line contains the string ss, consisting of lowercase latin letters (1\u2264|s|\u22641000001\u2264|s|\u2264100000), where |s||s| means the length of a string ss.OutputIf the first player wins, print \"Yes\". If the second player wins, print \"No\".ExamplesInputCopyabacaba\nOutputCopyNo\nInputCopyiiq\nOutputCopyYes\nInputCopyabba\nOutputCopyNo\nNoteIn the first example the first player is unable to make a turn, so he loses.In the second example first player turns the string into \"q\", then second player is unable to move, so he loses."], "Christmas Spruce": ["https://codeforces.com/problemset/problem/913/B", "B. Christmas Sprucetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputConsider a rooted tree. A rooted tree has one special vertex called the root. All edges are directed from the root. Vertex u is called a child of vertex v and vertex v is called a parent of vertex u if there exists a directed edge from v to u. A vertex is called a leaf if it doesn't have children and has a parent.Let's call a rooted tree a spruce if its every non-leaf vertex has at least 3 leaf children. You are given a rooted tree, check whether it's a spruce.The definition of a rooted tree can be found here.InputThe first line contains one integer n\u00a0\u2014 the number of vertices in the tree (3\u2009\u2264\u2009n\u2009\u2264\u20091\u2009000). Each of the next n\u2009-\u20091 lines contains one integer pi (1\u2009\u2264\u2009i\u2009\u2264\u2009n\u2009-\u20091)\u00a0\u2014 the index of the parent of the i\u2009+\u20091-th vertex (1\u2009\u2264\u2009pi\u2009\u2264\u2009i).Vertex 1 is the root. It's guaranteed that the root has at least 2 children.OutputPrint \"Yes\" if the tree is a spruce and \"No\" otherwise.ExamplesInputCopy4111OutputCopyYesInputCopy7111222OutputCopyNoInputCopy81111333OutputCopyYesNoteThe first example:The second example:It is not a spruce, because the non-leaf vertex 1 has only 2 leaf children.The third example:"], "Belted Rooms": ["https://codeforces.com/problemset/problem/1428/B", "B. Belted Roomstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn the snake exhibition, there are nn rooms (numbered 00 to n\u22121n\u22121) arranged in a circle, with a snake in each room. The rooms are connected by nn conveyor belts, and the ii-th conveyor belt connects the rooms ii and (i+1)modn(i+1)modn. In the other words, rooms 00 and 11, 11 and 22, \u2026\u2026, n\u22122n\u22122 and n\u22121n\u22121, n\u22121n\u22121 and 00 are connected with conveyor belts.The ii-th conveyor belt is in one of three states:  If it is clockwise, snakes can only go from room ii to (i+1)modn(i+1)modn.  If it is anticlockwise, snakes can only go from room (i+1)modn(i+1)modn to ii.  If it is off, snakes can travel in either direction.   Above is an example with 44 rooms, where belts 00 and 33 are off, 11 is clockwise, and 22 is anticlockwise.Each snake wants to leave its room and come back to it later. A room is returnable if the snake there can leave the room, and later come back to it using the conveyor belts. How many such returnable rooms are there?InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000): the number of test cases. The description of the test cases follows.  The first line of each test case description contains a single integer nn (2\u2264n\u22643000002\u2264n\u2264300000): the number of rooms. The next line of each test case description contains a string ss of length nn, consisting of only '<', '>' and '-'.  If si=si= '>', the ii-th conveyor belt goes clockwise.  If si=si= '<', the ii-th conveyor belt goes anticlockwise.  If si=si= '-', the ii-th conveyor belt is off. It is guaranteed that the sum of nn among all test cases does not exceed 300000300000.OutputFor each test case, output the number of returnable rooms.ExampleInputCopy4\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\nOutputCopy3\n5\n3\n0\nNoteIn the first test case, all rooms are returnable except room 22. The snake in the room 22 is trapped and cannot exit. This test case corresponds to the picture from the problem statement. In the second test case, all rooms are returnable by traveling on the series of clockwise belts."], "Reposts": ["https://codeforces.com/problemset/problem/522/A", "A. Repoststime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Polycarp published a funny picture in a social network making a poll about the color of his handle. Many of his friends started reposting Polycarp's joke to their news feed. Some of them reposted the reposts and so on.These events are given as a sequence of strings \"name1 reposted name2\", where name1 is the name of the person who reposted the joke, and name2 is the name of the person from whose news feed the joke was reposted. It is guaranteed that for each string \"name1 reposted name2\" user \"name1\" didn't have the joke in his feed yet, and \"name2\" already had it in his feed by the moment of repost. Polycarp was registered as \"Polycarp\" and initially the joke was only in his feed.Polycarp measures the popularity of the joke as the length of the largest repost chain. Print the popularity of Polycarp's joke.InputThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200) \u2014 the number of reposts. Next follow the reposts in the order they were made. Each of them is written on a single line and looks as \"name1 reposted name2\". All the names in the input consist of lowercase or uppercase English letters and/or digits and have lengths from 2 to 24 characters, inclusive.We know that the user names are case-insensitive, that is, two names that only differ in the letter case correspond to the same social network user.OutputPrint a single integer \u2014 the maximum length of a repost chain.ExamplesInputCopy5tourist reposted PolycarpPetr reposted TouristWJMZBMR reposted Petrsdya reposted wjmzbmrvepifanov reposted sdyaOutputCopy6InputCopy6Mike reposted PolycarpMax reposted PolycarpEveryOne reposted Polycarp111 reposted PolycarpVkCup reposted PolycarpCodeforces reposted PolycarpOutputCopy2InputCopy1SoMeStRaNgEgUe reposted PoLyCaRpOutputCopy2"], "Almost Equal": ["https://codeforces.com/problemset/problem/1205/A", "A. Almost Equaltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given integer nn. You have to arrange numbers from 11 to 2n2n, using each of them exactly once, on the circle, so that the following condition would be satisfied:For every nn consecutive numbers on the circle write their sum on the blackboard. Then any two of written on the blackboard 2n2n numbers differ not more than by 11.For example, choose n=3n=3. On the left you can see an example of a valid arrangement: 1+4+5=101+4+5=10, 4+5+2=114+5+2=11, 5+2+3=105+2+3=10, 2+3+6=112+3+6=11, 3+6+1=103+6+1=10, 6+1+4=116+1+4=11, any two numbers differ by at most 11. On the right you can see an invalid arrangement: for example, 5+1+6=125+1+6=12, and 3+2+4=93+2+4=9, 99 and 1212 differ more than by 11.  InputThe first and the only line contain one integer nn (1\u2264n\u22641051\u2264n\u2264105).OutputIf there is no solution, output \"NO\" in the first line. If there is a solution, output \"YES\" in the first line. In the second line output 2n2n numbers\u00a0\u2014 numbers from 11 to 2n2n in the order they will stay in the circle. Each number should appear only once. If there are several solutions, you can output any of them.ExamplesInputCopy3\nOutputCopyYES\n1 4 5 2 3 6 InputCopy4\nOutputCopyNONoteExample from the statement is shown for the first example. It can be proved that there is no solution in the second example."], "Ehab Is an Odd Person": ["https://codeforces.com/problemset/problem/1174/B", "B. Ehab Is an Odd Persontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're given an array aa of length nn. You can perform the following operation on it as many times as you want:  Pick two integers ii and jj (1\u2264i,j\u2264n)(1\u2264i,j\u2264n) such that ai+ajai+aj is odd, then swap aiai and ajaj. What is lexicographically the smallest array you can obtain?An array xx is lexicographically smaller than an array yy if there exists an index ii such that xi<yixi<yi, and xj=yjxj=yj for all 1\u2264j<i1\u2264j<i. Less formally, at the first index ii in which they differ, xi<yixi<yiInputThe first line contains an integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of elements in the array aa.The second line contains nn space-separated integers a1a1, a2a2, \u2026\u2026, anan (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the elements of the array aa.OutputThe only line contains nn space-separated integers, the lexicographically smallest array you can obtain.ExamplesInputCopy3\n4 1 7\nOutputCopy1 4 7 InputCopy2\n1 1\nOutputCopy1 1 NoteIn the first example, we can swap 11 and 44 since 1+4=51+4=5, which is odd."], "Minimal Cost": ["https://codeforces.com/problemset/problem/1491/B", "B. Minimal Costtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a graph of nn rows and 106+2106+2 columns, where rows are numbered from 11 to nn and columns from 00 to 106+1106+1:  Let's denote the node in the row ii and column jj by (i,j)(i,j).Initially for each ii the ii-th row has exactly one obstacle \u2014 at node (i,ai)(i,ai). You want to move some obstacles so that you can reach node (n,106+1)(n,106+1) from node (1,0)(1,0) by moving through edges of this graph (you can't pass through obstacles). Moving one obstacle to an adjacent by edge free node costs uu or vv coins, as below:  If there is an obstacle in the node (i,j)(i,j), you can use uu coins to move it to (i\u22121,j)(i\u22121,j) or (i+1,j)(i+1,j), if such node exists and if there is no obstacle in that node currently.  If there is an obstacle in the node (i,j)(i,j), you can use vv coins to move it to (i,j\u22121)(i,j\u22121) or (i,j+1)(i,j+1), if such node exists and if there is no obstacle in that node currently.  Note that you can't move obstacles outside the grid. For example, you can't move an obstacle from (1,1)(1,1) to (0,1)(0,1). Refer to the picture above for a better understanding. Now you need to calculate the minimal number of coins you need to spend to be able to reach node (n,106+1)(n,106+1) from node (1,0)(1,0) by moving through edges of this graph without passing through obstacles.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases.The first line of each test case contains three integers nn, uu and vv (2\u2264n\u22641002\u2264n\u2264100, 1\u2264u,v\u22641091\u2264u,v\u2264109)\u00a0\u2014 the number of rows in the graph and the numbers of coins needed to move vertically and horizontally respectively.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641061\u2264ai\u2264106)\u00a0\u2014 where aiai represents that the obstacle in the ii-th row is in node (i,ai)(i,ai).It's guaranteed that the sum of nn over all test cases doesn't exceed 2\u22c51042\u22c5104.OutputFor each test case, output a single integer\u00a0\u2014 the minimal number of coins you need to spend to be able to reach node (n,106+1)(n,106+1) from node (1,0)(1,0) by moving through edges of this graph without passing through obstacles.It can be shown that under the constraints of the problem there is always a way to make such a trip possible.ExampleInputCopy3\n2 3 4\n2 2\n2 3 4\n3 2\n2 4 3\n3 2\nOutputCopy7\n3\n3\nNoteIn the first sample, two obstacles are at (1,2)(1,2) and (2,2)(2,2). You can move the obstacle on (2,2)(2,2) to (2,3)(2,3), then to (1,3)(1,3). The total cost is u+v=7u+v=7 coins.  In the second sample, two obstacles are at (1,3)(1,3) and (2,2)(2,2). You can move the obstacle on (1,3)(1,3) to (2,3)(2,3). The cost is u=3u=3 coins.  "], "Prefix Sum Primes": ["https://codeforces.com/problemset/problem/1149/A", "A. Prefix Sum Primestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputWe're giving away nice huge bags containing number tiles! A bag we want to present to you contains nn tiles. Each of them has a single number written on it\u00a0\u2014 either 11 or 22.However, there is one condition you must fulfill in order to receive the prize. You will need to put all the tiles from the bag in a sequence, in any order you wish. We will then compute the sums of all prefixes in the sequence, and then count how many of these sums are prime numbers. If you want to keep the prize, you will need to maximize the number of primes you get.Can you win the prize? Hurry up, the bags are waiting!InputThe first line of the input contains a single integer nn (1\u2264n\u22642000001\u2264n\u2264200000) \u2014 the number of number tiles in the bag. The following line contains nn space-separated integers a1,a2,\u2026,ana1,a2,\u2026,an (ai\u2208{1,2}ai\u2208{1,2}) \u2014 the values written on the tiles.OutputOutput a permutation b1,b2,\u2026,bnb1,b2,\u2026,bn of the input sequence (a1,a2,\u2026,an)(a1,a2,\u2026,an) maximizing the number of the prefix sums being prime numbers. If there are multiple optimal permutations, output any.ExamplesInputCopy5\n1 2 1 2 1\nOutputCopy1 1 1 2 2\nInputCopy9\n1 1 2 1 1 1 2 1 1\nOutputCopy1 1 1 2 1 1 1 2 1\nNoteThe first solution produces the prefix sums 1,2,3,5,71,2,3,5,7 (four primes constructed), while the prefix sums in the second solution are 1,2,3,5,6,7,8,10,111,2,3,5,6,7,8,10,11 (five primes). Primes are marked bold and blue. In each of these cases, the number of produced primes is maximum possible."], "Hemose Shopping": ["https://codeforces.com/problemset/problem/1592/B", "B. Hemose Shoppingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputHemose was shopping with his friends Samez, AhmedZ, AshrafEzz, TheSawan and O_E in Germany. As you know, Hemose and his friends are problem solvers, so they are very clever. Therefore, they will go to all discount markets in Germany.Hemose has an array of nn integers. He wants Samez to sort the array in the non-decreasing order. Since it would be a too easy problem for Samez, Hemose allows Samez to use only the following operation:Choose indices ii and jj such that 1\u2264i,j\u2264n1\u2264i,j\u2264n, and |i\u2212j|\u2265x|i\u2212j|\u2265x. Then, swap elements aiai and ajaj.Can you tell Samez if there's a way to sort the array in the non-decreasing order by using the operation written above some finite number of times (possibly 00)?InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u2264105)(1\u2264t\u2264105). Description of the test cases follows.The first line of each test case contains two integers nn and xx (1\u2264x\u2264n\u2264105)(1\u2264x\u2264n\u2264105).The second line of each test case contains nn integers a1,a2,...,ana1,a2,...,an (1\u2264ai\u2264109)(1\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases doesn't exceed 2\u22c51052\u22c5105.OutputFor each test case, you should output a single string. If Samez can sort the array in non-decreasing order using the operation written above, output \"YES\" (without quotes). Otherwise, output \"NO\" (without quotes).You can print each letter of \"YES\" and \"NO\" in any case (upper or lower).ExampleInputCopy4\n3 3\n3 2 1\n4 3\n1 2 3 4\n5 2\n5 1 2 3 4\n5 4\n1 2 3 4 4\nOutputCopyNO\nYES\nYES\nYES\nNoteIn the first test case, you can't do any operations.In the second test case, the array is already sorted.In the third test case, you can do the operations as follows:   [5,1,2,3,4][5,1,2,3,4], swap(a1,a3)swap(a1,a3)  [2,1,5,3,4][2,1,5,3,4], swap(a2,a5)swap(a2,a5)  [2,4,5,3,1][2,4,5,3,1], swap(a2,a4)swap(a2,a4)  [2,3,5,4,1][2,3,5,4,1], swap(a1,a5)swap(a1,a5)  [1,3,5,4,2][1,3,5,4,2], swap(a2,a5)swap(a2,a5)  [1,2,5,4,3][1,2,5,4,3], swap(a3,a5)swap(a3,a5)  [1,2,3,4,5][1,2,3,4,5] (Here swap(ai,aj)swap(ai,aj) refers to swapping elements at positions ii, jj)."], "Differential Sorting": ["https://codeforces.com/problemset/problem/1635/C", "C. Differential Sortingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of nn elements. Your can perform the following operation no more than nn times: Select three indices x,y,zx,y,z (1\u2264x<y<z\u2264n)(1\u2264x<y<z\u2264n) and replace axax with ay\u2212azay\u2212az. After the operation, |ax||ax| need to be less than 10181018.Your goal is to make the resulting array non-decreasing. If there are multiple solutions, you can output any. If it is impossible to achieve, you should report it as well.InputEach test contains multiple test cases. The first line will contain a single integer tt (1\u2264t\u226410000)(1\u2264t\u226410000) \u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains a single integer nn (3\u2264n\u22642\u22c5105)(3\u2264n\u22642\u22c5105) \u2014 the size of the array aa.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109)(\u2212109\u2264ai\u2264109), the elements of aa.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print \u22121\u22121 in a single line if there is no solution. Otherwise in the first line you should print a single integer mm (0\u2264m\u2264n)(0\u2264m\u2264n) \u2014 number of operations you performed.Then the ii-th of the following mm lines should contain three integers x,y,zx,y,z (1\u2264x<y<z\u2264n)(1\u2264x<y<z\u2264n)\u2014 description of the ii-th operation.If there are multiple solutions, you can output any. Note that you don't have to minimize the number of operations in this task.ExampleInputCopy3\n5\n5 -4 2 -1 2\n3\n4 3 2\n3\n-3 -2 -1\nOutputCopy2\n1 2 3\n3 4 5\n-1\n0\nNoteIn the first example, the array becomes [\u22126,\u22124,2,\u22121,2][\u22126,\u22124,2,\u22121,2] after the first operation,[\u22126,\u22124,\u22123,\u22121,2][\u22126,\u22124,\u22123,\u22121,2] after the second operation.In the second example, it is impossible to make the array sorted after any sequence of operations.In the third example, the array is already sorted, so we don't need to perform any operations."], "Block Adventure": ["https://codeforces.com/problemset/problem/1200/B", "B. Block Adventuretime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGildong is playing a video game called Block Adventure. In Block Adventure, there are nn columns of blocks in a row, and the columns are numbered from 11 to nn. All blocks have equal heights. The height of the ii-th column is represented as hihi, which is the number of blocks stacked in the ii-th column.Gildong plays the game as a character that can stand only on the top of the columns. At the beginning, the character is standing on the top of the 11-st column. The goal of the game is to move the character to the top of the nn-th column.The character also has a bag that can hold infinitely many blocks. When the character is on the top of the ii-th column, Gildong can take one of the following three actions as many times as he wants:   if there is at least one block on the column, remove one block from the top of the ii-th column and put it in the bag;  if there is at least one block in the bag, take one block out of the bag and place it on the top of the ii-th column;  if i<ni<n and |hi\u2212hi+1|\u2264k|hi\u2212hi+1|\u2264k, move the character to the top of the i+1i+1-st column. kk is a non-negative integer given at the beginning of the game. Note that it is only possible to move to the next column. In actions of the first two types the character remains in the ii-th column, and the value hihi changes.The character initially has mm blocks in the bag. Gildong wants to know if it is possible to win the game. Help Gildong find the answer to his question.InputEach test contains one or more test cases. The first line contains the number of test cases tt (1\u2264t\u226410001\u2264t\u22641000). Description of the test cases follows.The first line of each test case contains three integers nn, mm, and kk (1\u2264n\u22641001\u2264n\u2264100, 0\u2264m\u22641060\u2264m\u2264106, 0\u2264k\u22641060\u2264k\u2264106) \u2014 the number of columns in the game, the number of blocks in the character's bag at the beginning, and the non-negative integer kk described in the statement.The second line of each test case contains nn integers. The ii-th integer is hihi (0\u2264hi\u22641060\u2264hi\u2264106), the initial height of the ii-th column.OutputFor each test case, print \"YES\" if it is possible to win the game. Otherwise, print \"NO\".You can print each letter in any case (upper or lower).ExampleInputCopy53 0 14 3 53 1 21 4 74 10 010 20 10 202 5 50 111 9 999OutputCopyYESNOYESNOYESNoteIn the first case, Gildong can take one block from the 11-st column, move to the 22-nd column, put the block on the 22-nd column, then move to the 33-rd column.In the second case, Gildong has to put the block in his bag on the 11-st column to get to the 22-nd column. But it is impossible to get to the 33-rd column because |h2\u2212h3|=3>k|h2\u2212h3|=3>k and there is no way to decrease the gap.In the fifth case, the character is already on the nn-th column from the start so the game is won instantly."], "Devu, the Dumb Guy": ["https://codeforces.com/problemset/problem/439/B", "B. Devu, the Dumb Guytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDevu is a dumb guy, his learning curve is very slow. You are supposed to teach him n subjects, the ith subject has ci chapters. When you teach him, you are supposed to teach all the chapters of a subject continuously.Let us say that his initial per chapter learning power of a subject is x hours. In other words he can learn a chapter of a particular subject in x hours.Well Devu is not complete dumb, there is a good thing about him too. If you teach him a subject, then time required to teach any chapter of the next subject will require exactly 1 hour less than previously required (see the examples to understand it more clearly). Note that his per chapter learning power can not be less than 1 hour.You can teach him the n subjects in any possible order. Find out minimum amount of time (in hours) Devu will take to understand all the subjects and you will be free to do some enjoying task rather than teaching a dumb guy.Please be careful that answer might not fit in 32 bit data type.InputThe first line will contain two space separated integers n, x (1\u2009\u2264\u2009n,\u2009x\u2009\u2264\u2009105). The next line will contain n space separated integers: c1,\u2009c2,\u2009...,\u2009cn (1\u2009\u2264\u2009ci\u2009\u2264\u2009105).OutputOutput a single integer representing the answer to the problem.ExamplesInputCopy2 34 1OutputCopy11InputCopy4 25 1 2 1OutputCopy10InputCopy3 31 1 1OutputCopy6NoteLook at the first example. Consider the order of subjects: 1, 2. When you teach Devu the first subject, it will take him 3 hours per chapter, so it will take 12 hours to teach first subject. After teaching first subject, his per chapter learning time will be 2 hours. Now teaching him second subject will take 2\u2009\u00d7\u20091\u2009=\u20092 hours. Hence you will need to spend 12\u2009+\u20092\u2009=\u200914 hours.Consider the order of subjects: 2, 1. When you teach Devu the second subject, then it will take him 3 hours per chapter, so it will take 3\u2009\u00d7\u20091\u2009=\u20093 hours to teach the second subject. After teaching the second subject, his per chapter learning time will be 2 hours. Now teaching him the first subject will take 2\u2009\u00d7\u20094\u2009=\u20098 hours. Hence you will need to spend 11 hours.So overall, minimum of both the cases is 11 hours.Look at the third example. The order in this example doesn't matter. When you teach Devu the first subject, it will take him 3 hours per chapter. When you teach Devu the second subject, it will take him 2 hours per chapter. When you teach Devu the third subject, it will take him 1 hours per chapter. In total it takes 6 hours."], "Birthday": ["https://codeforces.com/problemset/problem/1068/A", "A. Birthdaytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIvan is collecting coins. There are only NN different collectible coins, Ivan has KK of them. He will be celebrating his birthday soon, so all his MM freinds decided to gift him coins. They all agreed to three terms:  Everyone must gift as many coins as others. All coins given to Ivan must be different. Not less than LL coins from gifts altogether, must be new in Ivan's collection.But his friends don't know which coins have Ivan already got in his collection. They don't want to spend money so they want to buy minimum quantity of coins, that satisfy all terms, irrespective of the Ivan's collection. Help them to find this minimum number of coins or define it's not possible to meet all the terms.InputThe only line of input contains 4 integers NN, MM, KK, LL (1\u2264K\u2264N\u226410181\u2264K\u2264N\u22641018; 1\u2264M,L\u226410181\u2264M,L\u22641018)\u00a0\u2014 quantity of different coins, number of Ivan's friends, size of Ivan's collection and quantity of coins, that must be new in Ivan's collection.OutputPrint one number\u00a0\u2014 minimal number of coins one friend can gift to satisfy all the conditions. If it is impossible to satisfy all three conditions print \"-1\" (without quotes).ExamplesInputCopy20 15 2 3OutputCopy1InputCopy10 11 2 4OutputCopy-1NoteIn the first test, one coin from each friend is enough, as he will be presented with 15 different coins and 13 of them will definitely be new.In the second test, Ivan has 11 friends, but there are only 10 different coins. So all friends can't present him different coins."], "Madoka and the Elegant Gift": ["https://codeforces.com/problemset/problem/1647/B", "B. Madoka and the Elegant Gifttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMadoka's father just reached 11 million subscribers on Mathub! So the website decided to send him a personalized award\u00a0\u2014 The Mathhub's Bit Button! The Bit Button is a rectangular table with nn rows and mm columns with 00 or 11 in each cell. After exploring the table Madoka found out that: A subrectangle AA is contained in a subrectangle BB if there's no cell contained in AA but not contained in BB. Two subrectangles intersect if there is a cell contained in both of them. A subrectangle is called black if there's no cell with value 00 inside it. A subrectangle is called nice if it's black and it's not contained in another black subrectangle. The table is called elegant if there are no two nice intersecting subrectangles.For example, in the first illustration the red subrectangle is nice, but in the second one it's not, because it's contained in the purple subrectangle.  Help Madoka to determine whether the table is elegant.InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u22642001\u2264t\u2264200)\u00a0\u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains two positive integers n,mn,m (1\u2264n,m\u22641001\u2264n,m\u2264100).The next nn lines contain strings of length mm consisting of zeros and ones\u00a0\u2014 the description of the table.It is guaranteed that the sum of the values of nn and the sum of the values of mm for all test cases do not exceed 777777.OutputFor each test case print \"YES\" if its table is elegant or print \"NO\" otherwise.You may print each letter in any case (for example, \"YES\", \"Yes\", \"yes\", \"yEs\" will all be recognized as positive answer).ExampleInputCopy5\n3 3\n100\n011\n011\n3 3\n110\n111\n110\n1 5\n01111\n4 5\n11111\n01010\n01000\n01000\n3 2\n11\n00\n11\nOutputCopyYES\nNO\nYES\nNO\nYES\nNoteIn the second test case the table is not elegant, because the red and the purple subrectangles are nice and intersect.   In the fourth test case the table is not elegant, because the red and the purple subrectangles are nice and intersect.   "], "Restricted RPS": ["https://codeforces.com/problemset/problem/1245/B", "B. Restricted RPStime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet nn be a positive integer. Let a,b,ca,b,c be nonnegative integers such that a+b+c=na+b+c=n.Alice and Bob are gonna play rock-paper-scissors nn times. Alice knows the sequences of hands that Bob will play. However, Alice has to play rock aa times, paper bb times, and scissors cc times.Alice wins if she beats Bob in at least \u2308n2\u2309\u2308n2\u2309 (n2n2 rounded up to the nearest integer) hands, otherwise Alice loses.Note that in rock-paper-scissors:  rock beats scissors;  paper beats rock;  scissors beat paper. The task is, given the sequence of hands that Bob will play, and the numbers a,b,ca,b,c, determine whether or not Alice can win. And if so, find any possible sequence of hands that Alice can use to win.If there are multiple answers, print any of them.InputThe first line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.Then, tt testcases follow, each consisting of three lines:   The first line contains a single integer nn (1\u2264n\u22641001\u2264n\u2264100).  The second line contains three integers, a,b,ca,b,c (0\u2264a,b,c\u2264n0\u2264a,b,c\u2264n). It is guaranteed that a+b+c=na+b+c=n.  The third line contains a string ss of length nn. ss is made up of only 'R', 'P', and 'S'. The ii-th character is 'R' if for his ii-th Bob plays rock, 'P' if paper, and 'S' if scissors. OutputFor each testcase:   If Alice cannot win, print \"NO\" (without the quotes).  Otherwise, print \"YES\" (without the quotes). Also, print a string tt of length nn made up of only 'R', 'P', and 'S' \u2014 a sequence of hands that Alice can use to win. tt must contain exactly aa 'R's, bb 'P's, and cc 'S's.  If there are multiple answers, print any of them. The \"YES\" / \"NO\" part of the output is case-insensitive (i.e. \"yEs\", \"no\" or \"YEs\" are all valid answers). Note that 'R', 'P' and 'S' are case-sensitive.ExampleInputCopy2\n3\n1 1 1\nRPS\n3\n3 0 0\nRPS\nOutputCopyYES\nPSR\nNO\nNoteIn the first testcase, in the first hand, Alice plays paper and Bob plays rock, so Alice beats Bob. In the second hand, Alice plays scissors and Bob plays paper, so Alice beats Bob. In the third hand, Alice plays rock and Bob plays scissors, so Alice beats Bob. Alice beat Bob 3 times, and 3\u2265\u230832\u2309=23\u2265\u230832\u2309=2, so Alice wins.In the second testcase, the only sequence of hands that Alice can play is \"RRR\". Alice beats Bob only in the last hand, so Alice can't win. 1<\u230832\u2309=21<\u230832\u2309=2."], "Pursuit": ["https://codeforces.com/problemset/problem/1530/C", "C. Pursuittime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou and your friend Ilya are participating in an individual programming contest consisting of multiple stages. A contestant can get between 00 and 100100 points, inclusive, for each stage, independently of other contestants.Points received by contestants in different stages are used for forming overall contest results. Suppose that kk stages of the contest are completed. For each contestant, k\u2212\u230ak4\u230bk\u2212\u230ak4\u230b stages with the highest scores are selected, and these scores are added up. This sum is the overall result of the contestant. (Here \u230at\u230b\u230at\u230b denotes rounding tt down.)For example, suppose 99 stages are completed, and your scores are 50,30,50,50,100,10,30,100,5050,30,50,50,100,10,30,100,50. First, 77 stages with the highest scores are chosen\u00a0\u2014 for example, all stages except for the 22-nd and the 66-th can be chosen. Then your overall result is equal to 50+50+50+100+30+100+50=43050+50+50+100+30+100+50=430.As of now, nn stages are completed, and you know the points you and Ilya got for these stages. However, it is unknown how many more stages will be held. You wonder what the smallest number of additional stages is, after which your result might become greater than or equal to Ilya's result, at least in theory. Find this number!InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u226410001\u2264t\u22641000). Description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of completed stages.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641000\u2264ai\u2264100)\u00a0\u2014 your points for the completed stages.The third line contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (0\u2264bi\u22641000\u2264bi\u2264100)\u00a0\u2014 Ilya's points for the completed stages.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case print a single integer\u00a0\u2014 the smallest number of additional stages required for your result to be able to become greater than or equal to Ilya's result.If your result is already not less than Ilya's result, print 00.ExampleInputCopy5\n1\n100\n0\n1\n0\n100\n4\n20 30 40 50\n100 100 100 100\n4\n10 20 30 40\n100 100 100 100\n7\n7 59 62 52 27 31 55\n33 35 50 98 83 80 64\nOutputCopy0\n1\n3\n4\n2\nNoteIn the first test case, you have scored 100100 points for the first stage, while Ilya has scored 00. Thus, your overall result (100100) is already not less than Ilya's result (00).In the second test case, you have scored 00 points for the first stage, while Ilya has scored 100100. A single stage with an opposite result is enough for both your and Ilya's overall scores to become equal to 100100.In the third test case, your overall result is 30+40+50=12030+40+50=120, while Ilya's result is 100+100+100=300100+100+100=300. After three additional stages your result might become equal to 420420, while Ilya's result might become equal to 400400.In the fourth test case, your overall result after four additional stages might become equal to 470470, while Ilya's result might become equal to 400400. Three stages are not enough."], "Chloe and the sequence": ["https://codeforces.com/problemset/problem/743/B", "B. Chloe and the sequence time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputChloe, the same as Vladik, is a competitive programmer. She didn't have any problems to get to the olympiad like Vladik, but she was confused by the task proposed on the olympiad.Let's consider the following algorithm of generating a sequence of integers. Initially we have a sequence consisting of a single element equal to 1. Then we perform (n\u2009-\u20091) steps. On each step we take the sequence we've got on the previous step, append it to the end of itself and insert in the middle the minimum positive integer we haven't used before. For example, we get the sequence [1,\u20092,\u20091] after the first step, the sequence [1,\u20092,\u20091,\u20093,\u20091,\u20092,\u20091] after the second step.The task is to find the value of the element with index k (the elements are numbered from 1) in the obtained sequence, i.\u00a0e. after (n\u2009-\u20091) steps.Please help Chloe to solve the problem!InputThe only line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u200950, 1\u2009\u2264\u2009k\u2009\u2264\u20092n\u2009-\u20091).OutputPrint single integer\u00a0\u2014 the integer at the k-th position in the obtained sequence.ExamplesInputCopy3 2OutputCopy2InputCopy4 8OutputCopy4NoteIn the first sample the obtained sequence is [1,\u20092,\u20091,\u20093,\u20091,\u20092,\u20091]. The number on the second position is 2.In the second sample the obtained sequence is [1,\u20092,\u20091,\u20093,\u20091,\u20092,\u20091,\u20094,\u20091,\u20092,\u20091,\u20093,\u20091,\u20092,\u20091]. The number on the eighth position is 4."], "Snow Walking Robot": ["https://codeforces.com/problemset/problem/1272/B", "B. Snow Walking Robottime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently you have bought a snow walking robot and brought it home. Suppose your home is a cell (0,0)(0,0) on an infinite grid.You also have the sequence of instructions of this robot. It is written as the string ss consisting of characters 'L', 'R', 'U' and 'D'. If the robot is in the cell (x,y)(x,y) right now, he can move to one of the adjacent cells (depending on the current instruction).  If the current instruction is 'L', then the robot can move to the left to (x\u22121,y)(x\u22121,y);  if the current instruction is 'R', then the robot can move to the right to (x+1,y)(x+1,y);  if the current instruction is 'U', then the robot can move to the top to (x,y+1)(x,y+1);  if the current instruction is 'D', then the robot can move to the bottom to (x,y\u22121)(x,y\u22121). You've noticed the warning on the last page of the manual: if the robot visits some cell (except (0,0)(0,0)) twice then it breaks.So the sequence of instructions is valid if the robot starts in the cell (0,0)(0,0), performs the given instructions, visits no cell other than (0,0)(0,0) two or more times and ends the path in the cell (0,0)(0,0). Also cell (0,0)(0,0) should be visited at most two times: at the beginning and at the end (if the path is empty then it is visited only once). For example, the following sequences of instructions are considered valid: \"UD\", \"RL\", \"UUURULLDDDDLDDRRUU\", and the following are considered invalid: \"U\" (the endpoint is not (0,0)(0,0)) and \"UUDD\" (the cell (0,1)(0,1) is visited twice).The initial sequence of instructions, however, might be not valid. You don't want your robot to break so you decided to reprogram it in the following way: you will remove some (possibly, all or none) instructions from the initial sequence of instructions, then rearrange the remaining instructions as you wish and turn on your robot to move. Your task is to remove as few instructions from the initial sequence as possible and rearrange the remaining ones so that the sequence is valid. Report the valid sequence of the maximum length you can obtain.Note that you can choose any order of remaining instructions (you don't need to minimize the number of swaps or any other similar metric).You have to answer qq independent test cases.InputThe first line of the input contains one integer qq (1\u2264q\u22642\u22c51041\u2264q\u22642\u22c5104) \u2014 the number of test cases.The next qq lines contain test cases. The ii-th test case is given as the string ss consisting of at least 11 and no more than 105105 characters 'L', 'R', 'U' and 'D' \u2014 the initial sequence of instructions.It is guaranteed that the sum of |s||s| (where |s||s| is the length of ss) does not exceed 105105 over all test cases (\u2211|s|\u2264105\u2211|s|\u2264105).OutputFor each test case print the answer on it. In the first line print the maximum number of remaining instructions. In the second line print the valid sequence of remaining instructions tt the robot has to perform. The moves are performed from left to right in the order of the printed sequence. If there are several answers, you can print any. If the answer is 00, you are allowed to print an empty line (but you can don't print it).ExampleInputCopy6\nLRU\nDURLDRUDRULRDURDDL\nLRUDDLRUDRUL\nLLLLRRRR\nURDUR\nLLL\nOutputCopy2\nLR\n14\nRUURDDDDLLLUUR\n12\nULDDDRRRUULL\n2\nLR\n2\nUD\n0\n\nNoteThere are only two possible answers in the first test case: \"LR\" and \"RL\".The picture corresponding to the second test case:  Note that the direction of traverse does not matter Another correct answer to the third test case: \"URDDLLLUURDR\"."], "Square Filling": ["https://codeforces.com/problemset/problem/1207/B", "B. Square Fillingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two matrices AA and BB. Each matrix contains exactly nn rows and mm columns. Each element of AA is either 00 or 11; each element of BB is initially 00.You may perform some operations with matrix BB. During each operation, you choose any submatrix of BB having size 2\u00d722\u00d72, and replace every element in the chosen submatrix with 11. In other words, you choose two integers xx and yy such that 1\u2264x<n1\u2264x<n and 1\u2264y<m1\u2264y<m, and then set Bx,yBx,y, Bx,y+1Bx,y+1, Bx+1,yBx+1,y and Bx+1,y+1Bx+1,y+1 to 11.Your goal is to make matrix BB equal to matrix AA. Two matrices AA and BB are equal if and only if every element of matrix AA is equal to the corresponding element of matrix BB.Is it possible to make these matrices equal? If it is, you have to come up with a sequence of operations that makes BB equal to AA. Note that you don't have to minimize the number of operations.InputThe first line contains two integers nn and mm (2\u2264n,m\u2264502\u2264n,m\u226450).Then nn lines follow, each containing mm integers. The jj-th integer in the ii-th line is Ai,jAi,j. Each integer is either 00 or 11.OutputIf it is impossible to make BB equal to AA, print one integer \u22121\u22121.Otherwise, print any sequence of operations that transforms BB into AA in the following format: the first line should contain one integer kk \u2014 the number of operations, and then kk lines should follow, each line containing two integers xx and yy for the corresponding operation (set Bx,yBx,y, Bx,y+1Bx,y+1, Bx+1,yBx+1,y and Bx+1,y+1Bx+1,y+1 to 11). The condition 0\u2264k\u226425000\u2264k\u22642500 should hold.ExamplesInputCopy3 3\n1 1 1\n1 1 1\n0 1 1\nOutputCopy3\n1 1\n1 2\n2 2\nInputCopy3 3\n1 0 1\n1 0 1\n0 0 0\nOutputCopy-1\nInputCopy3 2\n0 0\n0 0\n0 0\nOutputCopy0\nNoteThe sequence of operations in the first example: 000000000\u2192110110000\u2192110110110\u2192110111111000110111111000\u2192110\u2192111\u2192111000000000011 "], "Morning Jogging": ["https://codeforces.com/problemset/problem/1517/B", "B. Morning Joggingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe 2050 volunteers are organizing the \"Run! Chase the Rising Sun\" activity. Starting on Apr 25 at 7:30 am, runners will complete the 6km trail around the Yunqi town.There are n+1n+1 checkpoints on the trail. They are numbered by 00, 11, ..., nn. A runner must start at checkpoint 00 and finish at checkpoint nn. No checkpoint is skippable\u00a0\u2014 he must run from checkpoint 00 to checkpoint 11, then from checkpoint 11 to checkpoint 22 and so on. Look at the picture in notes section for clarification.Between any two adjacent checkpoints, there are mm different paths to choose. For any 1\u2264i\u2264n1\u2264i\u2264n, to run from checkpoint i\u22121i\u22121 to checkpoint ii, a runner can choose exactly one from the mm possible paths. The length of the jj-th path between checkpoint i\u22121i\u22121 and ii is bi,jbi,j for any 1\u2264j\u2264m1\u2264j\u2264m and 1\u2264i\u2264n1\u2264i\u2264n.To test the trail, we have mm runners. Each runner must run from the checkpoint 00 to the checkpoint nn once, visiting all the checkpoints. Every path between every pair of adjacent checkpoints needs to be ran by exactly one runner. If a runner chooses the path of length lili between checkpoint i\u22121i\u22121 and ii (1\u2264i\u2264n1\u2264i\u2264n), his tiredness is mini=1nli,mini=1nli, i.\u00a0e. the minimum length of the paths he takes.Please arrange the paths of the mm runners to minimize the sum of tiredness of them.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u2264100001\u2264t\u226410000). Description of the test cases follows.The first line of each test case contains two integers nn and mm (1\u2264n,m\u22641001\u2264n,m\u2264100).The ii-th of the next nn lines contains mm integers bi,1bi,1, bi,2bi,2, ..., bi,mbi,m (1\u2264bi,j\u22641091\u2264bi,j\u2264109).It is guaranteed that the sum of n\u22c5mn\u22c5m over all test cases does not exceed 104104.OutputFor each test case, output nn lines. The jj-th number in the ii-th line should contain the length of the path that runner jj chooses to run from checkpoint i\u22121i\u22121 to checkpoint ii. There should be exactly mm integers in the ii-th line and these integers should form a permuatation of bi,1bi,1, ..., bi,mbi,m for all 1\u2264i\u2264n1\u2264i\u2264n.If there are multiple answers, print any.ExampleInputCopy2\n2 3\n2 3 4\n1 3 5\n3 2\n2 3\n4 1\n3 5\nOutputCopy2 3 4\n5 3 1\n2 3\n4 1\n3 5\nNoteIn the first case, the sum of tiredness is min(2,5)+min(3,3)+min(4,1)=6min(2,5)+min(3,3)+min(4,1)=6.  In the second case, the sum of tiredness is min(2,4,3)+min(3,1,5)=3min(2,4,3)+min(3,1,5)=3."], "Make Them Odd": ["https://codeforces.com/problemset/problem/1277/B", "B. Make Them Oddtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn positive integers a1,a2,\u2026,ana1,a2,\u2026,an. For the one move you can choose any even value cc and divide by two all elements that equal cc.For example, if a=[6,8,12,6,3,12]a=[6,8,12,6,3,12] and you choose c=6c=6, and aa is transformed into a=[3,8,12,3,3,12]a=[3,8,12,3,3,12] after the move.You need to find the minimal number of moves for transforming aa to an array of only odd integers (each element shouldn't be divisible by 22).InputThe first line of the input contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases in the input. Then tt test cases follow.The first line of a test case contains nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of integers in the sequence aa. The second line contains positive integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).The sum of nn for all test cases in the input doesn't exceed 2\u22c51052\u22c5105.OutputFor tt test cases print the answers in the order of test cases in the input. The answer for the test case is the minimal number of moves needed to make all numbers in the test case odd (i.e. not divisible by 22).ExampleInputCopy4\n6\n40 6 40 3 20 1\n1\n1024\n4\n2 4 8 16\n3\n3 1 7\nOutputCopy4\n10\n4\n0\nNoteIn the first test case of the example, the optimal sequence of moves can be as follows:  before making moves a=[40,6,40,3,20,1]a=[40,6,40,3,20,1];  choose c=6c=6;  now a=[40,3,40,3,20,1]a=[40,3,40,3,20,1];  choose c=40c=40;  now a=[20,3,20,3,20,1]a=[20,3,20,3,20,1];  choose c=20c=20;  now a=[10,3,10,3,10,1]a=[10,3,10,3,10,1];  choose c=10c=10;  now a=[5,3,5,3,5,1]a=[5,3,5,3,5,1] \u2014 all numbers are odd. Thus, all numbers became odd after 44 moves. In 33 or fewer moves, you cannot make them all odd."], "Email from Polycarp": ["https://codeforces.com/problemset/problem/1185/B", "B. Email from Polycarptime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMethodius received an email from his friend Polycarp. However, Polycarp's keyboard is broken, so pressing a key on it once may cause the corresponding symbol to appear more than once (if you press a key on a regular keyboard, it prints exactly one symbol).For example, as a result of typing the word \"hello\", the following words could be printed: \"hello\", \"hhhhello\", \"hheeeellllooo\", but the following could not be printed: \"hell\", \"helo\", \"hhllllooo\".Note, that when you press a key, the corresponding symbol must appear (possibly, more than once). The keyboard is broken in a random manner, it means that pressing the same key you can get the different number of letters in the result.For each word in the letter, Methodius has guessed what word Polycarp actually wanted to write, but he is not sure about it, so he asks you to help him.You are given a list of pairs of words. For each pair, determine if the second word could be printed by typing the first one on Polycarp's keyboard.InputThe first line of the input contains one integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 the number of pairs to check. Further input contains nn descriptions of pairs.The first line of each description contains a single non-empty word ss consisting of lowercase Latin letters. The second line of the description contains a single non-empty word tt consisting of lowercase Latin letters. The lengths of both strings are not greater than 106106.It is guaranteed that the total length of all words ss in the input is not greater than 106106. Also, it is guaranteed that the total length of all words tt in the input is not greater than 106106.OutputOutput nn lines. In the ii-th line for the ii-th pair of words ss and tt print YES if the word tt could be printed by typing the word ss. Otherwise, print NO.ExamplesInputCopy4\nhello\nhello\nhello\nhelloo\nhello\nhlllloo\nhello\nhelo\nOutputCopyYES\nYES\nNO\nNO\nInputCopy5\naa\nbb\ncodeforces\ncodeforce\npolycarp\npoolycarpp\naaaa\naaaab\nabcdefghijklmnopqrstuvwxyz\nzabcdefghijklmnopqrstuvwxyz\nOutputCopyNO\nNO\nYES\nNO\nNO\n"], "Minimizing the String": ["https://codeforces.com/problemset/problem/1076/A", "A. Minimizing the Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string ss consisting of nn lowercase Latin letters.You have to remove at most one (i.e. zero or one) character of this string in such a way that the string you obtain will be lexicographically smallest among all strings that can be obtained using this operation.String s=s1s2\u2026sns=s1s2\u2026sn is lexicographically smaller than string t=t1t2\u2026tmt=t1t2\u2026tm if n<mn<m and s1=t1,s2=t2,\u2026,sn=tns1=t1,s2=t2,\u2026,sn=tn or there exists a number pp such that p\u2264min(n,m)p\u2264min(n,m) and s1=t1,s2=t2,\u2026,sp\u22121=tp\u22121s1=t1,s2=t2,\u2026,sp\u22121=tp\u22121 and sp<tpsp<tp.For example, \"aaa\" is smaller than \"aaaa\", \"abb\" is smaller than \"abc\", \"pqr\" is smaller than \"z\".InputThe first line of the input contains one integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the length of ss.The second line of the input contains exactly nn lowercase Latin letters \u2014 the string ss.OutputPrint one string \u2014 the smallest possible lexicographically string that can be obtained by removing at most one character from the string ss.ExamplesInputCopy3\naaa\nOutputCopyaa\nInputCopy5\nabcda\nOutputCopyabca\nNoteIn the first example you can remove any character of ss to obtain the string \"aa\".In the second example \"abca\" < \"abcd\" < \"abcda\" < \"abda\" < \"acda\" < \"bcda\"."], "Doors Breaking and Repairing": ["https://codeforces.com/problemset/problem/1102/C", "C. Doors Breaking and Repairingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are policeman and you are playing a game with Slavik. The game is turn-based and each turn consists of two phases. During the first phase you make your move and during the second phase Slavik makes his move.There are nn doors, the ii-th door initially has durability equal to aiai.During your move you can try to break one of the doors. If you choose door ii and its current durability is bibi then you reduce its durability to max(0,bi\u2212x)max(0,bi\u2212x) (the value xx is given).During Slavik's move he tries to repair one of the doors. If he chooses door ii and its current durability is bibi then he increases its durability to bi+ybi+y (the value yy is given). Slavik cannot repair doors with current durability equal to 00.The game lasts 1010010100 turns. If some player cannot make his move then he has to skip it.Your goal is to maximize the number of doors with durability equal to 00 at the end of the game. You can assume that Slavik wants to minimize the number of such doors. What is the number of such doors in the end if you both play optimally?InputThe first line of the input contains three integers nn, xx and yy (1\u2264n\u22641001\u2264n\u2264100, 1\u2264x,y\u22641051\u2264x,y\u2264105) \u2014 the number of doors, value xx and value yy, respectively.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641051\u2264ai\u2264105), where aiai is the initial durability of the ii-th door.OutputPrint one integer \u2014 the number of doors with durability equal to 00 at the end of the game, if you and Slavik both play optimally.ExamplesInputCopy6 3 2\n2 3 1 3 4 2\nOutputCopy6\nInputCopy5 3 3\n1 2 4 2 3\nOutputCopy2\nInputCopy5 5 6\n1 2 6 10 3\nOutputCopy2\nNoteClarifications about the optimal strategy will be ignored."], "Vitamins": ["https://codeforces.com/problemset/problem/1042/B", "B. Vitaminstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBerland shop sells nn kinds of juices. Each juice has its price cici. Each juice includes some set of vitamins in it. There are three types of vitamins: vitamin \"A\", vitamin \"B\" and vitamin \"C\". Each juice can contain one, two or all three types of vitamins in it.Petya knows that he needs all three types of vitamins to stay healthy. What is the minimum total price of juices that Petya has to buy to obtain all three vitamins? Petya obtains some vitamin if he buys at least one juice containing it and drinks it.InputThe first line contains a single integer nn (1\u2264n\u22641000)(1\u2264n\u22641000) \u2014 the number of juices.Each of the next nn lines contains an integer cici (1\u2264ci\u2264100000)(1\u2264ci\u2264100000) and a string sisi \u2014 the price of the ii-th juice and the vitamins it contains. String sisi contains from 11 to 33 characters, and the only possible characters are \"A\", \"B\" and \"C\". It is guaranteed that each letter appears no more than once in each string sisi. The order of letters in strings sisi is arbitrary.OutputPrint -1 if there is no way to obtain all three vitamins. Otherwise print the minimum total price of juices that Petya has to buy to obtain all three vitamins.ExamplesInputCopy45 C6 B16 BAC4 AOutputCopy15InputCopy210 AB15 BAOutputCopy-1InputCopy510 A9 BC11 CA4 A5 BOutputCopy13InputCopy6100 A355 BCA150 BC160 AC180 B190 CAOutputCopy250InputCopy25 BA11 CBOutputCopy16NoteIn the first example Petya buys the first, the second and the fourth juice. He spends 5+6+4=155+6+4=15 and obtains all three vitamins. He can also buy just the third juice and obtain three vitamins, but its cost is 1616, which isn't optimal.In the second example Petya can't obtain all three vitamins, as no juice contains vitamin \"C\"."], "Filya and Homework": ["https://codeforces.com/problemset/problem/714/B", "B. Filya and Homeworktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputToday, hedgehog Filya went to school for the very first time! Teacher gave him a homework which Filya was unable to complete without your help.Filya is given an array of non-negative integers a1,\u2009a2,\u2009...,\u2009an. First, he pick an integer x and then he adds x to some elements of the array (no more than once), subtract x from some other elements (also, no more than once) and do no change other elements. He wants all elements of the array to be equal.Now he wonders if it's possible to pick such integer x and change some elements of the array using this x in order to make all elements equal.InputThe first line of the input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of integers in the Filya's array. The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 elements of the array.OutputIf it's impossible to make all elements of the array equal using the process given in the problem statement, then print \"NO\" (without quotes) in the only line of the output. Otherwise print \"YES\" (without quotes).ExamplesInputCopy51 3 3 2 1OutputCopyYESInputCopy51 2 3 4 5OutputCopyNONoteIn the first sample Filya should select x\u2009=\u20091, then add it to the first and the last elements of the array and subtract from the second and the third elements."], "AquaMoon and Stolen String": ["https://codeforces.com/problemset/problem/1546/B", "B. AquaMoon and Stolen Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAquaMoon had nn strings of length mm each. nn is an odd number.When AquaMoon was gone, Cirno tried to pair these nn strings together. After making n\u221212n\u221212 pairs, she found out that there was exactly one string without the pair!In her rage, she disrupted each pair of strings. For each pair, she selected some positions (at least 11 and at most mm) and swapped the letters in the two strings of this pair at the selected positions.For example, if m=6m=6 and two strings \"abcdef\" and \"xyzklm\" are in one pair and Cirno selected positions 22, 33 and 66 she will swap 'b' with 'y', 'c' with 'z' and 'f' with 'm'. The resulting strings will be \"ayzdem\" and \"xbcklf\".Cirno then stole away the string without pair and shuffled all remaining strings in arbitrary order.AquaMoon found the remaining n\u22121n\u22121 strings in complete disarray. Also, she remembers the initial nn strings. She wants to know which string was stolen, but she is not good at programming. Can you help her?InputThis problem is made as interactive. It means, that your solution will read the input, given by the interactor. But the interactor will give you the full input at the beginning and after that, you should print the answer. So you should solve the problem, like as you solve the usual, non-interactive problem because you won't have any interaction process. The only thing you should not forget is to flush the output buffer, after printing the answer. Otherwise, you can get an \"Idleness limit exceeded\" verdict. Refer to the interactive problems guide for the detailed information about flushing the output buffer.The input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.The first line of each test case contains two integers nn, mm (1\u2264n\u22641051\u2264n\u2264105, 1\u2264m\u22641051\u2264m\u2264105) \u2014 the number of strings and the length of each string, respectively.The next nn lines each contain a string with length mm, describing the original nn strings. All string consists of lowercase Latin letters.The next n\u22121n\u22121 lines each contain a string with length mm, describing the strings after Cirno exchanged and reordered them.It is guaranteed that nn is odd and that the sum of n\u22c5mn\u22c5m over all test cases does not exceed 105105.Hack format:The first line should contain a single integer tt. After that tt test cases should follow in the following format:The first line should contain two integers nn and mm.The following nn lines should contain nn strings of length mm, describing the original strings.The following n\u221212n\u221212 lines should describe the pairs. They should contain, in the following order: the index of the first string ii (1\u2264i\u2264n1\u2264i\u2264n), the index of the second string jj (1\u2264j\u2264n1\u2264j\u2264n, i\u2260ji\u2260j), the number of exchanged positions kk (1\u2264k\u2264m1\u2264k\u2264m), and the list of kk positions that are exchanged (kk distinct indices from 11 to mm in any order).The final line should contain a permutation of integers from 11 to nn, describing the way the strings should be reordered. The strings will be placed in the order indices placed in this permutation, the stolen string index will be ignored.OutputFor each test case print a single line with the stolen string.ExampleInputCopy3\n3 5\naaaaa\nbbbbb\nccccc\naaaaa\nbbbbb\n3 4\naaaa\nbbbb\ncccc\naabb\nbbaa\n5 6\nabcdef\nuuuuuu\nkekeke\nekekek\nxyzklm\nxbcklf\neueueu\nayzdem\nukukuk\nOutputCopyccccc\ncccc\nkekeke\nNoteIn the first test case, \"aaaaa\" and \"bbbbb\" exchanged all positions, and \"ccccc\" is the stolen string.In the second test case, \"aaaa\" and \"bbbb\" exchanged two first positions, and \"cccc\" is the stolen string.This is the first test in the hack format: 33 5aaaaabbbbbccccc1 2 5 1 2 3 4 52 1 33 4aaaabbbbcccc1 2 2 1 22 1 35 6abcdefuuuuuukekekeekekekxyzklm1 5 3 2 3 62 4 3 2 4 65 4 1 2 3"], "Minimum Triangulation": ["https://codeforces.com/problemset/problem/1140/D", "D. Minimum Triangulationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a regular polygon with nn vertices labeled from 11 to nn in counter-clockwise order. The triangulation of a given polygon is a set of triangles such that each vertex of each triangle is a vertex of the initial polygon, there is no pair of triangles such that their intersection has non-zero area, and the total area of all triangles is equal to the area of the given polygon. The weight of a triangulation is the sum of weigths of triangles it consists of, where the weight of a triagle is denoted as the product of labels of its vertices.Calculate the minimum weight among all triangulations of the polygon.InputThe first line contains single integer nn (3\u2264n\u22645003\u2264n\u2264500) \u2014 the number of vertices in the regular polygon.OutputPrint one integer \u2014 the minimum weight among all triangulations of the given polygon.ExamplesInputCopy3\nOutputCopy6\nInputCopy4\nOutputCopy18\nNoteAccording to Wiki: polygon triangulation is the decomposition of a polygonal area (simple polygon) PP into a set of triangles, i.\u2009e., finding a set of triangles with pairwise non-intersecting interiors whose union is PP.In the first example the polygon is a triangle, so we don't need to cut it further, so the answer is 1\u22c52\u22c53=61\u22c52\u22c53=6.In the second example the polygon is a rectangle, so it should be divided into two triangles. It's optimal to cut it using diagonal 1\u221231\u22123 so answer is 1\u22c52\u22c53+1\u22c53\u22c54=6+12=181\u22c52\u22c53+1\u22c53\u22c54=6+12=18."], "Boxes Packing": ["https://codeforces.com/problemset/problem/903/C", "C. Boxes Packingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMishka has got n empty boxes. For every i (1\u2009\u2264\u2009i\u2009\u2264\u2009n), i-th box is a cube with side length ai.Mishka can put a box i into another box j if the following conditions are met:  i-th box is not put into another box;  j-th box doesn't contain any other boxes;  box i is smaller than box j (ai\u2009<\u2009aj). Mishka can put boxes into each other an arbitrary number of times. He wants to minimize the number of visible boxes. A box is called visible iff it is not put into some another box.Help Mishka to determine the minimum possible number of visible boxes!InputThe first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095000) \u2014 the number of boxes Mishka has got.The second line contains n integers a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109), where ai is the side length of i-th box.OutputPrint the minimum possible number of visible boxes.ExamplesInputCopy31 2 3OutputCopy1InputCopy44 2 4 3OutputCopy2NoteIn the first example it is possible to put box 1 into box 2, and 2 into 3.In the second example Mishka can put box 2 into box 3, and box 4 into box 1."], "Cutting": ["https://codeforces.com/problemset/problem/998/B", "B. Cuttingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are a lot of things which could be cut\u00a0\u2014 trees, paper, \"the rope\". In this problem you are going to cut a sequence of integers.There is a sequence of integers, which contains the equal number of even and odd numbers. Given a limited budget, you need to make maximum possible number of cuts such that each resulting segment will have the same number of odd and even integers.Cuts separate a sequence to continuous (contiguous) segments. You may think about each cut as a break between two adjacent elements in a sequence. So after cutting each element belongs to exactly one segment. Say, [4,1,2,3,4,5,4,4,5,5][4,1,2,3,4,5,4,4,5,5] \u2192\u2192 two cuts \u2192\u2192 [4,1|2,3,4,5|4,4,5,5][4,1|2,3,4,5|4,4,5,5]. On each segment the number of even elements should be equal to the number of odd elements.The cost of the cut between xx and yy numbers is |x\u2212y||x\u2212y| bitcoins. Find the maximum possible number of cuts that can be made while spending no more than BB bitcoins.InputFirst line of the input contains an integer nn (2\u2264n\u22641002\u2264n\u2264100) and an integer BB (1\u2264B\u22641001\u2264B\u2264100)\u00a0\u2014 the number of elements in the sequence and the number of bitcoins you have.Second line contains nn integers: a1a1, a2a2, ..., anan (1\u2264ai\u22641001\u2264ai\u2264100)\u00a0\u2014 elements of the sequence, which contains the equal number of even and odd numbersOutputPrint the maximum possible number of cuts which can be made while spending no more than BB bitcoins.ExamplesInputCopy6 41 2 5 10 15 20OutputCopy1InputCopy4 101 3 2 4OutputCopy0InputCopy6 1001 2 3 4 5 6OutputCopy2NoteIn the first sample the optimal answer is to split sequence between 22 and 55. Price of this cut is equal to 33 bitcoins.In the second sample it is not possible to make even one cut even with unlimited number of bitcoins.In the third sample the sequence should be cut between 22 and 33, and between 44 and 55. The total price of the cuts is 1+1=21+1=2 bitcoins."], "Divisor Subtraction": ["https://codeforces.com/problemset/problem/1076/B", "B. Divisor Subtractiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an integer number nn. The following algorithm is applied to it:  if n=0n=0, then end algorithm;  find the smallest prime divisor dd of nn;  subtract dd from nn and go to step 11. Determine the number of subtrations the algorithm will make.InputThe only line contains a single integer nn (2\u2264n\u226410102\u2264n\u22641010).OutputPrint a single integer \u2014 the number of subtractions the algorithm will make.ExamplesInputCopy5\nOutputCopy1\nInputCopy4\nOutputCopy2\nNoteIn the first example 55 is the smallest prime divisor, thus it gets subtracted right away to make a 00.In the second example 22 is the smallest prime divisor at both steps."], "Grandma Capa Knits a Scarf": ["https://codeforces.com/problemset/problem/1582/C", "C. Grandma Capa Knits a Scarftime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGrandma Capa has decided to knit a scarf and asked Grandpa Sher to make a pattern for it, a pattern is a string consisting of lowercase English letters. Grandpa Sher wrote a string ss of length nn.Grandma Capa wants to knit a beautiful scarf, and in her opinion, a beautiful scarf can only be knit from a string that is a palindrome. She wants to change the pattern written by Grandpa Sher, but to avoid offending him, she will choose one lowercase English letter and erase some (at her choice, possibly none or all) occurrences of that letter in string ss.She also wants to minimize the number of erased symbols from the pattern. Please help her and find the minimum number of symbols she can erase to make string ss a palindrome, or tell her that it's impossible. Notice that she can only erase symbols equal to the one letter she chose.A string is a palindrome if it is the same from the left to the right and from the right to the left. For example, the strings 'kek', 'abacaba', 'r' and 'papicipap' are palindromes, while the strings 'abb' and 'iq' are not.InputThe first line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases. The next 2\u22c5t2\u22c5t lines contain the description of test cases. The description of each test case consists of two lines.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 the length of the string.The second line of each test case contains the string ss consisting of nn lowercase English letters.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case print the minimum number of erased symbols required to make the string a palindrome, if it is possible, and \u22121\u22121, if it is impossible.ExampleInputCopy5\n8\nabcaacab\n6\nxyzxyz\n4\nabba\n8\nrprarlap\n10\nkhyyhhyhky\nOutputCopy2\n-1\n0\n3\n2\nNoteIn the first test case, you can choose a letter 'a' and erase its first and last occurrences, you will get a string 'bcaacb', which is a palindrome. You can also choose a letter 'b' and erase all its occurrences, you will get a string 'acaaca', which is a palindrome as well.In the second test case, it can be shown that it is impossible to choose a letter and erase some of its occurrences to get a palindrome.In the third test case, you don't have to erase any symbols because the string is already a palindrome."], "Polycarp's Practice": ["https://codeforces.com/problemset/problem/1006/B", "B. Polycarp's Practicetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp is practicing his problem solving skill. He has a list of nn problems with difficulties a1,a2,\u2026,ana1,a2,\u2026,an, respectively. His plan is to practice for exactly kk days. Each day he has to solve at least one problem from his list. Polycarp solves the problems in the order they are given in his list, he cannot skip any problem from his list. He has to solve all nn problems in exactly kk days.Thus, each day Polycarp solves a contiguous sequence of (consecutive) problems from the start of the list. He can't skip problems or solve them multiple times. As a result, in kk days he will solve all the nn problems.The profit of the jj-th day of Polycarp's practice is the maximum among all the difficulties of problems Polycarp solves during the jj-th day (i.e. if he solves problems with indices from ll to rr during a day, then the profit of the day is maxl\u2264i\u2264raimaxl\u2264i\u2264rai). The total profit of his practice is the sum of the profits over all kk days of his practice.You want to help Polycarp to get the maximum possible total profit over all valid ways to solve problems. Your task is to distribute all nn problems between kk days satisfying the conditions above in such a way, that the total profit is maximum.For example, if n=8,k=3n=8,k=3 and a=[5,4,2,6,5,1,9,2]a=[5,4,2,6,5,1,9,2], one of the possible distributions with maximum total profit is: [5,4,2],[6,5],[1,9,2][5,4,2],[6,5],[1,9,2]. Here the total profit equals 5+6+9=205+6+9=20.InputThe first line of the input contains two integers nn and kk (1\u2264k\u2264n\u226420001\u2264k\u2264n\u22642000) \u2014 the number of problems and the number of days, respectively.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u226420001\u2264ai\u22642000) \u2014 difficulties of problems in Polycarp's list, in the order they are placed in the list (i.e. in the order Polycarp will solve them).OutputIn the first line of the output print the maximum possible total profit.In the second line print exactly kk positive integers t1,t2,\u2026,tkt1,t2,\u2026,tk (t1+t2+\u22ef+tkt1+t2+\u22ef+tk must equal nn), where tjtj means the number of problems Polycarp will solve during the jj-th day in order to achieve the maximum possible total profit of his practice.If there are many possible answers, you may print any of them.ExamplesInputCopy8 35 4 2 6 5 1 9 2OutputCopy203 2 3InputCopy5 11 1 1 1 1OutputCopy15InputCopy4 21 2000 2000 2OutputCopy40002 2NoteThe first example is described in the problem statement.In the second example there is only one possible distribution.In the third example the best answer is to distribute problems in the following way: [1,2000],[2000,2][1,2000],[2000,2]. The total profit of this distribution is 2000+2000=40002000+2000=4000."], "Bad Sequence": ["https://codeforces.com/problemset/problem/1214/C", "C. Bad Sequencetime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputPetya's friends made him a birthday present \u2014 a bracket sequence. Petya was quite disappointed with his gift, because he dreamed of correct bracket sequence, yet he told his friends nothing about his dreams and decided to fix present himself. To make everything right, Petya is going to move at most one bracket from its original place in the sequence to any other position. Reversing the bracket (e.g. turning \"(\" into \")\" or vice versa) isn't allowed. We remind that bracket sequence ss is called correct if:   ss is empty;  ss is equal to \"(tt)\", where tt is correct bracket sequence;  ss is equal to t1t2t1t2, i.e. concatenation of t1t1 and t2t2, where t1t1 and t2t2 are correct bracket sequences. For example, \"(()())\", \"()\" are correct, while \")(\" and \"())\" are not. Help Petya to fix his birthday present and understand whether he can move one bracket so that the sequence becomes correct.InputFirst of line of input contains a single number nn (1\u2264n\u22642000001\u2264n\u2264200000)\u00a0\u2014 length of the sequence which Petya received for his birthday.Second line of the input contains bracket sequence of length nn, containing symbols \"(\" and \")\".OutputPrint \"Yes\" if Petya can make his sequence correct moving at most one bracket. Otherwise print \"No\".ExamplesInputCopy2\n)(\nOutputCopyYes\nInputCopy3\n(()\nOutputCopyNo\nInputCopy2\n()\nOutputCopyYes\nInputCopy10\n)))))(((((\nOutputCopyNo\nNoteIn the first example, Petya can move first bracket to the end, thus turning the sequence into \"()\", which is correct bracket sequence.In the second example, there is no way to move at most one bracket so that the sequence becomes correct.In the third example, the sequence is already correct and there's no need to move brackets."], "Sail": ["https://codeforces.com/problemset/problem/298/B", "B. Sailtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe polar bears are going fishing. They plan to sail from (sx,\u2009sy) to (ex,\u2009ey). However, the boat can only sail by wind. At each second, the wind blows in one of these directions: east, south, west or north. Assume the boat is currently at (x,\u2009y).  If the wind blows to the east, the boat will move to (x\u2009+\u20091,\u2009y).  If the wind blows to the south, the boat will move to (x,\u2009y\u2009-\u20091).  If the wind blows to the west, the boat will move to (x\u2009-\u20091,\u2009y).  If the wind blows to the north, the boat will move to (x,\u2009y\u2009+\u20091). Alternatively, they can hold the boat by the anchor. In this case, the boat stays at (x,\u2009y). Given the wind direction for t seconds, what is the earliest time they sail to (ex,\u2009ey)?InputThe first line contains five integers t,\u2009sx,\u2009sy,\u2009ex,\u2009ey (1\u2009\u2264\u2009t\u2009\u2264\u2009105,\u2009\u2009-\u2009109\u2009\u2264\u2009sx,\u2009sy,\u2009ex,\u2009ey\u2009\u2264\u2009109). The starting location and the ending location will be different.The second line contains t characters, the i-th character is the wind blowing direction at the i-th second. It will be one of the four possibilities: \"E\" (east), \"S\" (south), \"W\" (west) and \"N\" (north).OutputIf they can reach (ex,\u2009ey) within t seconds, print the earliest time they can achieve it. Otherwise, print \"-1\" (without quotes).ExamplesInputCopy5 0 0 1 1SESNWOutputCopy4InputCopy10 5 3 3 6NENSWESNEEOutputCopy-1NoteIn the first sample, they can stay at seconds 1, 3, and move at seconds 2, 4.In the second sample, they cannot sail to the destination."], "George and Round": ["https://codeforces.com/problemset/problem/387/B", "B. George and Roundtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGeorge decided to prepare a Codesecrof round, so he has prepared m problems for the round. Let's number the problems with integers 1 through m. George estimates the i-th problem's complexity by integer bi.To make the round good, he needs to put at least n problems there. Besides, he needs to have at least one problem with complexity exactly a1, at least one with complexity exactly a2, ..., and at least one with complexity exactly an. Of course, the round can also have problems with other complexities.George has a poor imagination. It's easier for him to make some already prepared problem simpler than to come up with a new one and prepare it. George is magnificent at simplifying problems. He can simplify any already prepared problem with complexity c to any positive integer complexity d (c\u2009\u2265\u2009d), by changing limits on the input data.However, nothing is so simple. George understood that even if he simplifies some problems, he can run out of problems for a good round. That's why he decided to find out the minimum number of problems he needs to come up with in addition to the m he's prepared in order to make a good round. Note that George can come up with a new problem of any complexity.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20093000) \u2014 the minimal number of problems in a good round and the number of problems George's prepared. The second line contains space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009a1\u2009<\u2009a2\u2009<\u2009...\u2009<\u2009an\u2009\u2264\u2009106) \u2014 the requirements for the complexity of the problems in a good round. The third line contains space-separated integers b1,\u2009b2,\u2009...,\u2009bm (1\u2009\u2264\u2009b1\u2009\u2264\u2009b2...\u2009\u2264\u2009bm\u2009\u2264\u2009106) \u2014 the complexities of the problems prepared by George. OutputPrint a single integer \u2014 the answer to the problem.ExamplesInputCopy3 51 2 31 2 2 3 3OutputCopy0InputCopy3 51 2 31 1 1 1 1OutputCopy2InputCopy3 12 3 41OutputCopy3NoteIn the first sample the set of the prepared problems meets the requirements for a good round.In the second sample, it is enough to come up with and prepare two problems with complexities 2 and 3 to get a good round.In the third sample it is very easy to get a good round if come up with and prepare extra problems with complexities: 2,\u20093,\u20094. "], "Preparation for International Women's Day": ["https://codeforces.com/problemset/problem/1133/B", "B. Preparation for International Women's Daytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputInternational Women's Day is coming soon! Polycarp is preparing for the holiday.There are nn candy boxes in the shop for sale. The ii-th box contains didi candies.Polycarp wants to prepare the maximum number of gifts for kk girls. Each gift will consist of exactly two boxes. The girls should be able to share each gift equally, so the total amount of candies in a gift (in a pair of boxes) should be divisible by kk. In other words, two boxes ii and jj (i\u2260ji\u2260j) can be combined as a gift if di+djdi+dj is divisible by kk.How many boxes will Polycarp be able to give? Of course, each box can be a part of no more than one gift. Polycarp cannot use boxes \"partially\" or redistribute candies between them. InputThe first line of the input contains two integers nn and kk (1\u2264n\u22642\u22c5105,1\u2264k\u22641001\u2264n\u22642\u22c5105,1\u2264k\u2264100) \u2014 the number the boxes and the number the girls.The second line of the input contains nn integers d1,d2,\u2026,dnd1,d2,\u2026,dn (1\u2264di\u22641091\u2264di\u2264109), where didi is the number of candies in the ii-th box.OutputPrint one integer \u2014 the maximum number of the boxes Polycarp can give as gifts.ExamplesInputCopy7 2\n1 2 2 3 2 4 10\nOutputCopy6\nInputCopy8 2\n1 2 2 3 2 4 6 10\nOutputCopy8\nInputCopy7 3\n1 2 2 3 2 4 5\nOutputCopy4\nNoteIn the first example Polycarp can give the following pairs of boxes (pairs are presented by indices of corresponding boxes):   (2,3)(2,3);  (5,6)(5,6);  (1,4)(1,4). So the answer is 66.In the second example Polycarp can give the following pairs of boxes (pairs are presented by indices of corresponding boxes):   (6,8)(6,8);  (2,3)(2,3);  (1,4)(1,4);  (5,7)(5,7). So the answer is 88.In the third example Polycarp can give the following pairs of boxes (pairs are presented by indices of corresponding boxes):   (1,2)(1,2);  (6,7)(6,7). So the answer is 44."], "Tanya and Toys": ["https://codeforces.com/problemset/problem/659/C", "C. Tanya and Toystime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn Berland recently a new collection of toys went on sale. This collection consists of 109 types of toys, numbered with integers from 1 to 109. A toy from the new collection of the i-th type costs i bourles.Tania has managed to collect n different types of toys a1,\u2009a2,\u2009...,\u2009an from the new collection. Today is Tanya's birthday, and her mother decided to spend no more than m bourles on the gift to the daughter. Tanya will choose several different types of toys from the new collection as a gift. Of course, she does not want to get a type of toy which she already has.Tanya wants to have as many distinct types of toys in her collection as possible as the result. The new collection is too diverse, and Tanya is too little, so she asks you to help her in this.InputThe first line contains two integers n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000) and m (1\u2009\u2264\u2009m\u2009\u2264\u2009109)\u00a0\u2014 the number of types of toys that Tanya already has and the number of bourles that her mom is willing to spend on buying new toys.The next line contains n distinct integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 the types of toys that Tanya already has.OutputIn the first line print a single integer k\u00a0\u2014 the number of different types of toys that Tanya should choose so that the number of different types of toys in her collection is maximum possible. Of course, the total cost of the selected toys should not exceed m.In the second line print k distinct space-separated integers t1,\u2009t2,\u2009...,\u2009tk (1\u2009\u2264\u2009ti\u2009\u2264\u2009109)\u00a0\u2014 the types of toys that Tanya should choose.If there are multiple answers, you may print any of them. Values of ti can be printed in any order.ExamplesInputCopy3 71 3 4OutputCopy22 5 InputCopy4 144 6 12 8OutputCopy47 2 3 1NoteIn the first sample mom should buy two toys: one toy of the 2-nd type and one toy of the 5-th type. At any other purchase for 7 bourles (assuming that the toys of types 1, 3 and 4 have already been bought), it is impossible to buy two and more toys."], "Good String": ["https://codeforces.com/problemset/problem/1389/C", "C. Good Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call left cyclic shift of some string t1t2t3\u2026tn\u22121tnt1t2t3\u2026tn\u22121tn as string t2t3\u2026tn\u22121tnt1t2t3\u2026tn\u22121tnt1.Analogically, let's call right cyclic shift of string tt as string tnt1t2t3\u2026tn\u22121tnt1t2t3\u2026tn\u22121.Let's say string tt is good if its left cyclic shift is equal to its right cyclic shift.You are given string ss which consists of digits 0\u20139.What is the minimum number of characters you need to erase from ss to make it good?InputThe first line contains single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.Next tt lines contains test cases\u00a0\u2014 one per line. The first and only line of each test case contains string ss (2\u2264|s|\u22642\u22c51052\u2264|s|\u22642\u22c5105). Each character sisi is digit 0\u20139.It's guaranteed that the total length of strings doesn't exceed 2\u22c51052\u22c5105.OutputFor each test case, print the minimum number of characters you need to erase from ss to make it good.ExampleInputCopy3\n95831\n100120013\n252525252525\nOutputCopy3\n5\n0\nNoteIn the first test case, you can erase any 33 characters, for example, the 11-st, the 33-rd, and the 44-th. You'll get string 51 and it is good.In the second test case, we can erase all characters except 0: the remaining string is 0000 and it's good.In the third test case, the given string ss is already good."], "Kuroni and Simple Strings": ["https://codeforces.com/problemset/problem/1305/B", "B. Kuroni and Simple Stringstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNow that Kuroni has reached 10 years old, he is a big boy and doesn't like arrays of integers as presents anymore. This year he wants a Bracket sequence as a Birthday present. More specifically, he wants a bracket sequence so complex that no matter how hard he tries, he will not be able to remove a simple subsequence!We say that a string formed by nn characters '(' or ')' is simple if its length nn is even and positive, its first n2n2 characters are '(', and its last n2n2 characters are ')'. For example, the strings () and (()) are simple, while the strings )( and ()() are not simple.Kuroni will be given a string formed by characters '(' and ')' (the given string is not necessarily simple). An operation consists of choosing a subsequence of the characters of the string that forms a simple string and removing all the characters of this subsequence from the string. Note that this subsequence doesn't have to be continuous. For example, he can apply the operation to the string ')()(()))', to choose a subsequence of bold characters, as it forms a simple string '(())', delete these bold characters from the string and to get '))()'. Kuroni has to perform the minimum possible number of operations on the string, in such a way that no more operations can be performed on the remaining string. The resulting string does not have to be empty.Since the given string is too large, Kuroni is unable to figure out how to minimize the number of operations. Can you help him do it instead?A sequence of characters aa is a subsequence of a string bb if aa can be obtained from bb by deletion of several (possibly, zero or all) characters.InputThe only line of input contains a string ss (1\u2264|s|\u226410001\u2264|s|\u22641000) formed by characters '(' and ')', where |s||s| is the length of ss.OutputIn the first line, print an integer kk \u00a0\u2014 the minimum number of operations you have to apply. Then, print 2k2k lines describing the operations in the following format:For each operation, print a line containing an integer mm \u00a0\u2014 the number of characters in the subsequence you will remove.Then, print a line containing mm integers 1\u2264a1<a2<\u22ef<am1\u2264a1<a2<\u22ef<am \u00a0\u2014 the indices of the characters you will remove. All integers must be less than or equal to the length of the current string, and the corresponding subsequence must form a simple string.If there are multiple valid sequences of operations with the smallest kk, you may print any of them.ExamplesInputCopy(()((\nOutputCopy1\n2\n1 3 \nInputCopy)(\nOutputCopy0\nInputCopy(()())\nOutputCopy1\n4\n1 2 5 6 \nNoteIn the first sample, the string is '(()(('. The operation described corresponds to deleting the bolded subsequence. The resulting string is '(((', and no more operations can be performed on it. Another valid answer is choosing indices 22 and 33, which results in the same final string.In the second sample, it is already impossible to perform any operations."], "Football Kit": ["https://codeforces.com/problemset/problem/432/B", "B. Football Kittime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputConsider a football tournament where n teams participate. Each team has two football kits: for home games, and for away games. The kit for home games of the i-th team has color xi and the kit for away games of this team has color yi (xi\u2009\u2260\u2009yi).In the tournament, each team plays exactly one home game and exactly one away game with each other team (n(n\u2009-\u20091) games in total). The team, that plays the home game, traditionally plays in its home kit. The team that plays an away game plays in its away kit. However, if two teams has the kits of the same color, they cannot be distinguished. In this case the away team plays in its home kit.Calculate how many games in the described tournament each team plays in its home kit and how many games it plays in its away kit.InputThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of teams. Next n lines contain the description of the teams. The i-th line contains two space-separated numbers xi, yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009105;\u00a0xi\u2009\u2260\u2009yi) \u2014 the color numbers for the home and away kits of the i-th team.OutputFor each team, print on a single line two space-separated integers \u2014 the number of games this team is going to play in home and away kits, correspondingly. Print the answers for the teams in the order they appeared in the input.ExamplesInputCopy21 22 1OutputCopy2 02 0InputCopy31 22 11 3OutputCopy3 14 02 2"], "Hexadecimal's Numbers": ["https://codeforces.com/problemset/problem/9/C", "C. Hexadecimal's Numberstime limit per test1 secondmemory limit per test64 megabytesinputstandard inputoutputstandard outputOne beautiful July morning a terrible thing happened in Mainframe: a mean virus Megabyte somehow got access to the memory of his not less mean sister Hexadecimal. He loaded there a huge amount of n different natural numbers from 1 to n to obtain total control over her energy.But his plan failed. The reason for this was very simple: Hexadecimal didn't perceive any information, apart from numbers written in binary format. This means that if a number in a decimal representation contained characters apart from 0 and 1, it was not stored in the memory. Now Megabyte wants to know, how many numbers were loaded successfully.InputInput data contains the only number n (1\u2009\u2264\u2009n\u2009\u2264\u2009109).OutputOutput the only number \u2014 answer to the problem.ExamplesInputCopy10OutputCopy2NoteFor n = 10 the answer includes numbers 1 and 10."], "Exam in BerSU (easy version)": ["https://codeforces.com/problemset/problem/1185/C1", "C1. Exam in BerSU (easy version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is constraints.A session has begun at Beland State University. Many students are taking exams.Polygraph Poligrafovich is going to examine a group of nn students. Students will take the exam one-by-one in order from 11-th to nn-th. Rules of the exam are following:  The ii-th student randomly chooses a ticket.  if this ticket is too hard to the student, he doesn't answer and goes home immediately (this process is so fast that it's considered no time elapses). This student fails the exam.  if the student finds the ticket easy, he spends exactly titi minutes to pass the exam. After it, he immediately gets a mark and goes home. Students take the exam in the fixed order, one-by-one, without any interruption. At any moment of time, Polygraph Poligrafovich takes the answer from one student.The duration of the whole exam for all students is MM minutes (maxti\u2264Mmaxti\u2264M), so students at the end of the list have a greater possibility to run out of time to pass the exam.For each student ii, you should count the minimum possible number of students who need to fail the exam so the ii-th student has enough time to pass the exam.For each student ii, find the answer independently. That is, if when finding the answer for the student i1i1 some student jj should leave, then while finding the answer for i2i2 (i2>i1i2>i1) the student jj student does not have to go home.InputThe first line of the input contains two integers nn and MM (1\u2264n\u22641001\u2264n\u2264100, 1\u2264M\u22641001\u2264M\u2264100)\u00a0\u2014 the number of students and the total duration of the exam in minutes, respectively.The second line of the input contains nn integers titi (1\u2264ti\u22641001\u2264ti\u2264100)\u00a0\u2014 time in minutes that ii-th student spends to answer to a ticket.It's guaranteed that all values of titi are not greater than MM.OutputPrint nn numbers: the ii-th number must be equal to the minimum number of students who have to leave the exam in order to ii-th student has enough time to pass the exam.ExamplesInputCopy7 15\n1 2 3 4 5 6 7\nOutputCopy0 0 0 0 0 2 3 InputCopy5 100\n80 40 40 40 60\nOutputCopy0 1 1 2 3 NoteThe explanation for the example 1.Please note that the sum of the first five exam times does not exceed M=15M=15 (the sum is 1+2+3+4+5=151+2+3+4+5=15). Thus, the first five students can pass the exam even if all the students before them also pass the exam. In other words, the first five numbers in the answer are 00.In order for the 66-th student to pass the exam, it is necessary that at least 22 students must fail it before (for example, the 33-rd and 44-th, then the 66-th will finish its exam in 1+2+5+6=141+2+5+6=14 minutes, which does not exceed MM).In order for the 77-th student to pass the exam, it is necessary that at least 33 students must fail it before (for example, the 22-nd, 55-th and 66-th, then the 77-th will finish its exam in 1+3+4+7=151+3+4+7=15 minutes, which does not exceed MM)."], "Fall Down": ["https://codeforces.com/problemset/problem/1669/G", "G. Fall Downtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a grid with nn rows and mm columns, and three types of cells:   An empty cell, denoted with '.'.  A stone, denoted with '*'.  An obstacle, denoted with the lowercase Latin letter 'o'. All stones fall down until they meet the floor (the bottom row), an obstacle, or other stone which is already immovable. (In other words, all the stones just fall down as long as they can fall.)Simulate the process. What does the resulting grid look like?InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains two integers nn and mm (1\u2264n,m\u2264501\u2264n,m\u226450)\u00a0\u2014 the number of rows and the number of columns in the grid, respectively.Then nn lines follow, each containing mm characters. Each of these characters is either '.', '*', or 'o'\u00a0\u2014 an empty cell, a stone, or an obstacle, respectively.OutputFor each test case, output a grid with nn rows and mm columns, showing the result of the process.You don't need to output a new line after each test, it is in the samples just for clarity.ExampleInputCopy3\n6 10\n.*.*....*.\n.*.......*\n...o....o.\n.*.*....*.\n..........\n.o......o*\n2 9\n...***ooo\n.*o.*o.*o\n5 5\n*****\n*....\n*****\n....*\n*****\nOutputCopy..........\n...*....*.\n.*.o....o.\n.*........\n.*......**\n.o.*....o*\n\n....**ooo\n.*o**o.*o\n\n.....\n*...*\n*****\n*****\n*****\n"], "Cells Not Under Attack": ["https://codeforces.com/problemset/problem/701/B", "B. Cells Not Under Attacktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has the square chessboard of size n\u2009\u00d7\u2009n and m rooks. Initially the chessboard is empty. Vasya will consequently put the rooks on the board one after another.The cell of the field is under rook's attack, if there is at least one rook located in the same row or in the same column with this cell. If there is a rook located in the cell, this cell is also under attack.You are given the positions of the board where Vasya will put rooks. For each rook you have to determine the number of cells which are not under attack after Vasya puts it on the board.InputThe first line of the input contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009m\u2009\u2264\u2009min(100\u2009000,\u2009n2))\u00a0\u2014 the size of the board and the number of rooks. Each of the next m lines contains integers xi and yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n)\u00a0\u2014 the number of the row and the number of the column where Vasya will put the i-th rook. Vasya puts rooks on the board in the order they appear in the input. It is guaranteed that any cell will contain no more than one rook.OutputPrint m integer, the i-th of them should be equal to the number of cells that are not under attack after first i rooks are put.ExamplesInputCopy3 31 13 12 2OutputCopy4 2 0 InputCopy5 21 55 1OutputCopy16 9 InputCopy100000 1300 400OutputCopy9999800001 NoteOn the picture below show the state of the board after put each of the three rooks. The cells which painted with grey color is not under the attack.  "], "Obtaining the String": ["https://codeforces.com/problemset/problem/1015/B", "B. Obtaining the Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two strings ss and tt. Both strings have length nn and consist of lowercase Latin letters. The characters in the strings are numbered from 11 to nn.You can successively perform the following move any number of times (possibly, zero):  swap any two adjacent (neighboring) characters of ss (i.e. for any i={1,2,\u2026,n\u22121}i={1,2,\u2026,n\u22121} you can swap sisi and si+1)si+1). You can't apply a move to the string tt. The moves are applied to the string ss one after another.Your task is to obtain the string tt from the string ss. Find any way to do it with at most 104104 such moves.You do not have to minimize the number of moves, just find any sequence of moves of length 104104 or less to transform ss into tt.InputThe first line of the input contains one integer nn (1\u2264n\u2264501\u2264n\u226450) \u2014 the length of strings ss and tt.The second line of the input contains the string ss consisting of nn lowercase Latin letters.The third line of the input contains the string tt consisting of nn lowercase Latin letters.OutputIf it is impossible to obtain the string tt using moves, print \"-1\".Otherwise in the first line print one integer kk \u2014 the number of moves to transform ss to tt. Note that kk must be an integer number between 00 and 104104 inclusive.In the second line print kk integers cjcj (1\u2264cj<n1\u2264cj<n), where cjcj means that on the jj-th move you swap characters scjscj and scj+1scj+1.If you do not need to apply any moves, print a single integer 00 in the first line and either leave the second line empty or do not print it at all.ExamplesInputCopy6abcdefabdfecOutputCopy43 5 4 5 InputCopy4abcdaccdOutputCopy-1NoteIn the first example the string ss changes as follows: \"abcdef\" \u2192\u2192 \"abdcef\" \u2192\u2192 \"abdcfe\" \u2192\u2192 \"abdfce\" \u2192\u2192 \"abdfec\".In the second example there is no way to transform the string ss into the string tt through any allowed moves."], "2-Letter Strings": ["https://codeforces.com/problemset/problem/1669/E", "E. 2-Letter Stringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiven nn strings, each of length 22, consisting of lowercase Latin alphabet letters from 'a' to 'k', output the number of pairs of indices (i,j)(i,j) such that i<ji<j and the ii-th string and the jj-th string differ in exactly one position.In other words, count the number of pairs (i,j)(i,j) (i<ji<j) such that the ii-th string and the jj-th string have exactly one position pp (1\u2264p\u226421\u2264p\u22642) such that sip\u2260sjpsip\u2260sjp.The answer may not fit into 32-bit integer type, so you should use 64-bit integers like long long in C++ to avoid integer overflow.InputThe first line of the input contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases. The description of test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 the number of strings.Then follows nn lines, the ii-th of which containing a single string sisi of length 22, consisting of lowercase Latin letters from 'a' to 'k'.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case, print a single integer \u2014 the number of pairs (i,j)(i,j) (i<ji<j) such that the ii-th string and the jj-th string have exactly one position pp (1\u2264p\u226421\u2264p\u22642) such that sip\u2260sjpsip\u2260sjp. Please note, that the answer for some test cases won't fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like long long for C++).ExampleInputCopy4\n6\nab\ncb\ndb\naa\ncc\nef\n7\naa\nbb\ncc\nac\nca\nbb\naa\n4\nkk\nkk\nab\nab\n5\njf\njf\njk\njk\njk\nOutputCopy5\n6\n0\n6\nNoteFor the first test case the pairs that differ in exactly one position are: (\"ab\", \"cb\"), (\"ab\", \"db\"), (\"ab\", \"aa\"), (\"cb\", \"db\") and (\"cb\", \"cc\").For the second test case the pairs that differ in exactly one position are: (\"aa\", \"ac\"), (\"aa\", \"ca\"), (\"cc\", \"ac\"), (\"cc\", \"ca\"), (\"ac\", \"aa\") and (\"ca\", \"aa\").For the third test case, the are no pairs satisfying the conditions."], "Tanya and Candies": ["https://codeforces.com/problemset/problem/1118/B", "B. Tanya and Candiestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTanya has nn candies numbered from 11 to nn. The ii-th candy has the weight aiai.She plans to eat exactly n\u22121n\u22121 candies and give the remaining candy to her dad. Tanya eats candies in order of increasing their numbers, exactly one candy per day.Your task is to find the number of such candies ii (let's call these candies good) that if dad gets the ii-th candy then the sum of weights of candies Tanya eats in even days will be equal to the sum of weights of candies Tanya eats in odd days. Note that at first, she will give the candy, after it she will eat the remaining candies one by one.For example, n=4n=4 and weights are [1,4,3,3][1,4,3,3]. Consider all possible cases to give a candy to dad:  Tanya gives the 11-st candy to dad (a1=1a1=1), the remaining candies are [4,3,3][4,3,3]. She will eat a2=4a2=4 in the first day, a3=3a3=3 in the second day, a4=3a4=3 in the third day. So in odd days she will eat 4+3=74+3=7 and in even days she will eat 33. Since 7\u226037\u22603 this case shouldn't be counted to the answer (this candy isn't good).  Tanya gives the 22-nd candy to dad (a2=4a2=4), the remaining candies are [1,3,3][1,3,3]. She will eat a1=1a1=1 in the first day, a3=3a3=3 in the second day, a4=3a4=3 in the third day. So in odd days she will eat 1+3=41+3=4 and in even days she will eat 33. Since 4\u226034\u22603 this case shouldn't be counted to the answer (this candy isn't good).  Tanya gives the 33-rd candy to dad (a3=3a3=3), the remaining candies are [1,4,3][1,4,3]. She will eat a1=1a1=1 in the first day, a2=4a2=4 in the second day, a4=3a4=3 in the third day. So in odd days she will eat 1+3=41+3=4 and in even days she will eat 44. Since 4=44=4 this case should be counted to the answer (this candy is good).  Tanya gives the 44-th candy to dad (a4=3a4=3), the remaining candies are [1,4,3][1,4,3]. She will eat a1=1a1=1 in the first day, a2=4a2=4 in the second day, a3=3a3=3 in the third day. So in odd days she will eat 1+3=41+3=4 and in even days she will eat 44. Since 4=44=4 this case should be counted to the answer (this candy is good). In total there 22 cases which should counted (these candies are good), so the answer is 22.InputThe first line of the input contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of candies.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641041\u2264ai\u2264104), where aiai is the weight of the ii-th candy.OutputPrint one integer \u2014 the number of such candies ii (good candies) that if dad gets the ii-th candy then the sum of weights of candies Tanya eats in even days will be equal to the sum of weights of candies Tanya eats in odd days.ExamplesInputCopy7\n5 5 4 5 5 5 6\nOutputCopy2\nInputCopy8\n4 8 8 7 8 4 4 5\nOutputCopy2\nInputCopy9\n2 3 4 2 2 3 2 2 4\nOutputCopy3\nNoteIn the first example indices of good candies are [1,2][1,2].In the second example indices of good candies are [2,3][2,3].In the third example indices of good candies are [4,5,9][4,5,9]."], "Dishonest Sellers": ["https://codeforces.com/problemset/problem/779/C", "C. Dishonest Sellerstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIgor found out discounts in a shop and decided to buy n items. Discounts at the store will last for a week and Igor knows about each item that its price now is ai, and after a week of discounts its price will be bi.Not all of sellers are honest, so now some products could be more expensive than after a week of discounts.Igor decided that buy at least k of items now, but wait with the rest of the week in order to save money as much as possible. Your task is to determine the minimum money that Igor can spend to buy all n items.InputIn the first line there are two positive integer numbers n and k (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105, 0\u2009\u2264\u2009k\u2009\u2264\u2009n) \u2014 total number of items to buy and minimal number of items Igor wants to by right now.The second line contains sequence of integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009104) \u2014 prices of items during discounts (i.e. right now).The third line contains sequence of integers b1,\u2009b2,\u2009...,\u2009bn (1\u2009\u2264\u2009bi\u2009\u2264\u2009104) \u2014 prices of items after discounts (i.e. after a week).OutputPrint the minimal amount of money Igor will spend to buy all n items. Remember, he should buy at least k items right now.ExamplesInputCopy3 15 4 63 1 5OutputCopy10InputCopy5 33 4 7 10 34 5 5 12 5OutputCopy25NoteIn the first example Igor should buy item 3 paying 6. But items 1 and 2 he should buy after a week. He will pay 3 and 1 for them. So in total he will pay 6\u2009+\u20093\u2009+\u20091\u2009=\u200910.In the second example Igor should buy right now items 1, 2, 4 and 5, paying for them 3, 4, 10 and 3, respectively. Item 3 he should buy after a week of discounts, he will pay 5 for it. In total he will spend 3\u2009+\u20094\u2009+\u200910\u2009+\u20093\u2009+\u20095\u2009=\u200925."], "Game with Telephone Numbers": ["https://codeforces.com/problemset/problem/1155/B", "B. Game with Telephone Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA telephone number is a sequence of exactly 1111 digits such that its first digit is 8.Vasya and Petya are playing a game. Initially they have a string ss of length nn (nn is odd) consisting of digits. Vasya makes the first move, then players alternate turns. In one move the player must choose a character and erase it from the current string. For example, if the current string 1121, after the player's move it may be 112, 111 or 121. The game ends when the length of string ss becomes 11. If the resulting string is a telephone number, Vasya wins, otherwise Petya wins.You have to determine if Vasya has a winning strategy (that is, if Vasya can win the game no matter which characters Petya chooses during his moves).InputThe first line contains one integer nn (13\u2264n<10513\u2264n<105, nn is odd) \u2014 the length of string ss.The second line contains the string ss (|s|=n|s|=n) consisting only of decimal digits.OutputIf Vasya has a strategy that guarantees him victory, print YES.Otherwise print NO.ExamplesInputCopy13\n8380011223344\nOutputCopyYES\nInputCopy15\n807345619350641\nOutputCopyNO\nNoteIn the first example Vasya needs to erase the second character. Then Petya cannot erase a character from the remaining string 880011223344 so that it does not become a telephone number.In the second example after Vasya's turn Petya can erase one character character 8. The resulting string can't be a telephone number, because there is no digit 8 at all."], "Xenia and Divisors": ["https://codeforces.com/problemset/problem/342/A", "A. Xenia and Divisorstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputXenia the mathematician has a sequence consisting of n (n is divisible by 3) positive integers, each of them is at most 7. She wants to split the sequence into groups of three so that for each group of three a,\u2009b,\u2009c the following conditions held:  a\u2009<\u2009b\u2009<\u2009c;  a divides b, b divides c. Naturally, Xenia wants each element of the sequence to belong to exactly one group of three. Thus, if the required partition exists, then it has  groups of three.Help Xenia, find the required partition or else say that it doesn't exist.InputThe first line contains integer n (3\u2009\u2264\u2009n\u2009\u2264\u200999999) \u2014 the number of elements in the sequence. The next line contains n positive integers, each of them is at most 7.It is guaranteed that n is divisible by 3.OutputIf the required partition exists, print  groups of three. Print each group as values of the elements it contains. You should print values in increasing order. Separate the groups and integers in groups by whitespaces. If there are multiple solutions, you can print any of them.If there is no solution, print -1.ExamplesInputCopy61 1 1 2 2 2OutputCopy-1InputCopy62 2 1 1 4 6OutputCopy1 2 41 2 6"], "Omkar and Heavenly Tree": ["https://codeforces.com/problemset/problem/1583/B", "B. Omkar and Heavenly Treetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLord Omkar would like to have a tree with nn nodes (3\u2264n\u22641053\u2264n\u2264105) and has asked his disciples to construct the tree. However, Lord Omkar has created mm (1\u2264m<n1\u2264m<n) restrictions to ensure that the tree will be as heavenly as possible. A tree with nn nodes is an connected undirected graph with nn nodes and n\u22121n\u22121 edges. Note that for any two nodes, there is exactly one simple path between them, where a simple path is a path between two nodes that does not contain any node more than once.Here is an example of a tree:   A restriction consists of 33 pairwise distinct integers, aa, bb, and cc (1\u2264a,b,c\u2264n1\u2264a,b,c\u2264n). It signifies that node bb cannot lie on the simple path between node aa and node cc. Can you help Lord Omkar and become his most trusted disciple? You will need to find heavenly trees for multiple sets of restrictions. It can be shown that a heavenly tree will always exist for any set of restrictions under the given constraints.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104). Description of the test cases follows.The first line of each test case contains two integers, nn and mm (3\u2264n\u22641053\u2264n\u2264105, 1\u2264m<n1\u2264m<n), representing the size of the tree and the number of restrictions.The ii-th of the next mm lines contains three integers aiai, bibi, cici (1\u2264ai,bi,ci\u2264n1\u2264ai,bi,ci\u2264n, aa, bb, cc are distinct), signifying that node bibi cannot lie on the simple path between nodes aiai and cici. It is guaranteed that the sum of nn across all test cases will not exceed 105105.OutputFor each test case, output n\u22121n\u22121 lines representing the n\u22121n\u22121 edges in the tree. On each line, output two integers uu and vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v) signifying that there is an edge between nodes uu and vv. Given edges have to form a tree that satisfies Omkar's restrictions.ExampleInputCopy2\n7 4\n1 2 3\n3 4 5\n5 6 7\n6 5 4\n5 3\n1 2 3\n2 3 4\n3 4 5\nOutputCopy1 2\n1 3\n3 5\n3 4\n2 7\n7 6\n5 1\n1 3\n3 2\n2 4\nNoteThe output of the first sample case corresponds to the following tree:    For the first restriction, the simple path between 11 and 33 is 1,31,3, which doesn't contain 22. The simple path between 33 and 55 is 3,53,5, which doesn't contain 44. The simple path between 55 and 77 is 5,3,1,2,75,3,1,2,7, which doesn't contain 66. The simple path between 66 and 44 is 6,7,2,1,3,46,7,2,1,3,4, which doesn't contain 55. Thus, this tree meets all of the restrictions.The output of the second sample case corresponds to the following tree:   "], "Beautiful Paintings": ["https://codeforces.com/problemset/problem/651/B", "B. Beautiful Paintingstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n pictures delivered for the new exhibition. The i-th painting has beauty ai. We know that a visitor becomes happy every time he passes from a painting to a more beautiful one.We are allowed to arranged pictures in any order. What is the maximum possible number of times the visitor may become happy while passing all pictures from first to last? In other words, we are allowed to rearrange elements of a in any order. What is the maximum possible number of indices i (1\u2009\u2264\u2009i\u2009\u2264\u2009n\u2009-\u20091), such that ai\u2009+\u20091\u2009>\u2009ai.InputThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000)\u00a0\u2014 the number of painting.The second line contains the sequence a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u20091000), where ai means the beauty of the i-th painting.OutputPrint one integer\u00a0\u2014 the maximum possible number of neighbouring pairs, such that ai\u2009+\u20091\u2009>\u2009ai, after the optimal rearrangement.ExamplesInputCopy520 30 10 50 40OutputCopy4InputCopy4200 100 100 200OutputCopy2NoteIn the first sample, the optimal order is: 10,\u200920,\u200930,\u200940,\u200950.In the second sample, the optimal order is: 100,\u2009200,\u2009100,\u2009200."], "Table Tennis": ["https://codeforces.com/problemset/problem/879/B", "B. Table Tennistime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputn people are standing in a line to play table tennis. At first, the first two players in the line play a game. Then the loser goes to the end of the line, and the winner plays with the next person from the line, and so on. They play until someone wins k games in a row. This player becomes the winner.For each of the participants, you know the power to play table tennis, and for all players these values are different. In a game the player with greater power always wins. Determine who will be the winner.InputThe first line contains two integers: n and k (2\u2009\u2264\u2009n\u2009\u2264\u2009500, 2\u2009\u2264\u2009k\u2009\u2264\u20091012)\u00a0\u2014 the number of people and the number of wins.The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009n) \u2014 powers of the player. It's guaranteed that this line contains a valid permutation, i.e. all ai are distinct.OutputOutput a single integer \u2014 power of the winner.ExamplesInputCopy2 21 2OutputCopy2 InputCopy4 23 1 2 4OutputCopy3 InputCopy6 26 5 3 1 2 4OutputCopy6 InputCopy2 100000000002 1OutputCopy2NoteGames in the second sample:3 plays with 1. 3 wins. 1 goes to the end of the line.3 plays with 2. 3 wins. He wins twice in a row. He becomes the winner."], "Dolce Vita": ["https://codeforces.com/problemset/problem/1671/C", "C. Dolce Vitatime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTurbulent times are coming, so you decided to buy sugar in advance. There are nn shops around that sell sugar: the ii-th shop sells one pack of sugar for aiai coins, but only one pack to one customer each day. So in order to buy several packs, you need to visit several shops.Another problem is that prices are increasing each day: during the first day the cost is aiai, during the second day cost is ai+1ai+1, during the third day\u00a0\u2014 ai+2ai+2 and so on for each shop ii.On the contrary, your everyday budget is only xx coins. In other words, each day you go and buy as many packs as possible with total cost not exceeding xx. Note that if you don't spend some amount of coins during a day, you can't use these coins during the next days.Eventually, the cost for each pack will exceed xx, and you won't be able to buy even a single pack. So, how many packs will you be able to buy till that moment in total?InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases. Next tt cases follow.The first line of each test case contains two integers nn and xx (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105; 1\u2264x\u22641091\u2264x\u2264109)\u00a0\u2014 the number of shops and your everyday budget.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the initial cost of one pack in each shop.It's guaranteed that the total sum of nn doesn't exceed 2\u22c51052\u22c5105.OutputFor each test case, print one integer\u00a0\u2014 the total number of packs you will be able to buy until prices exceed your everyday budget.ExampleInputCopy4\n3 7\n2 1 2\n5 9\n10 20 30 40 50\n1 1\n1\n2 1000\n1 1\nOutputCopy11\n0\n1\n1500\nNoteIn the first test case,   Day 1: prices are [2,1,2][2,1,2]. You can buy all 33 packs, since 2+1+2\u226472+1+2\u22647.  Day 2: prices are [3,2,3][3,2,3]. You can't buy all 33 packs, since 3+2+3>73+2+3>7, so you buy only 22 packs.  Day 3: prices are [4,3,4][4,3,4]. You can buy 22 packs with prices 44 and 33.  Day 4: prices are [5,4,5][5,4,5]. You can't buy 22 packs anymore, so you buy only 11 pack.  Day 5: prices are [6,5,6][6,5,6]. You can buy 11 pack.  Day 6: prices are [7,6,7][7,6,7]. You can buy 11 pack.  Day 7: prices are [8,7,8][8,7,8]. You still can buy 11 pack of cost 77.  Day 8: prices are [9,8,9][9,8,9]. Prices are too high, so you can't buy anything.  In total, you bought 3+2+2+1+1+1+1=113+2+2+1+1+1+1=11 packs.In the second test case, prices are too high even at the first day, so you can't buy anything.In the third test case, you can buy only one pack at day one.In the fourth test case, you can buy 22 packs first 500500 days. At day 501501 prices are [501,501][501,501], so you can buy only 11 pack the next 500500 days. At day 10011001 prices are [1001,1001][1001,1001] so can't buy anymore. In total, you bought 500\u22c52+500\u22c51=1500500\u22c52+500\u22c51=1500 packs."], "Vladik and flights": ["https://codeforces.com/problemset/problem/743/A", "A. Vladik and flightstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVladik is a competitive programmer. This year he is going to win the International Olympiad in Informatics. But it is not as easy as it sounds: the question Vladik face now is to find the cheapest way to get to the olympiad.Vladik knows n airports. All the airports are located on a straight line. Each airport has unique id from 1 to n, Vladik's house is situated next to the airport with id a, and the place of the olympiad is situated next to the airport with id b. It is possible that Vladik's house and the place of the olympiad are located near the same airport. To get to the olympiad, Vladik can fly between any pair of airports any number of times, but he has to start his route at the airport a and finish it at the airport b.Each airport belongs to one of two companies. The cost of flight from the airport i to the airport j is zero if both airports belong to the same company, and |i\u2009-\u2009j| if they belong to different companies.Print the minimum cost Vladik has to pay to get to the olympiad.InputThe first line contains three integers n, a, and b (1\u2009\u2264\u2009n\u2009\u2264\u2009105, 1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009n)\u00a0\u2014 the number of airports, the id of the airport from which Vladik starts his route and the id of the airport which he has to reach. The second line contains a string with length n, which consists only of characters 0 and 1. If the i-th character in this string is 0, then i-th airport belongs to first company, otherwise it belongs to the second.OutputPrint single integer\u00a0\u2014 the minimum cost Vladik has to pay to get to the olympiad.ExamplesInputCopy4 1 41010OutputCopy1InputCopy5 5 210110OutputCopy0NoteIn the first example Vladik can fly to the airport 2 at first and pay |1\u2009-\u20092|\u2009=\u20091 (because the airports belong to different companies), and then fly from the airport 2 to the airport 4 for free (because the airports belong to the same company). So the cost of the whole flight is equal to 1. It's impossible to get to the olympiad for free, so the answer is equal to 1. In the second example Vladik can fly directly from the airport 5 to the airport 2, because they belong to the same company."], "New Year and the Treasure Geolocation": ["https://codeforces.com/problemset/problem/1091/B", "B. New Year and the Treasure Geolocationtime limit per test1.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBob is a pirate looking for the greatest treasure the world has ever seen. The treasure is located at the point TT, which coordinates to be found out.Bob travelled around the world and collected clues of the treasure location at nn obelisks. These clues were in an ancient language, and he has only decrypted them at home. Since he does not know which clue belongs to which obelisk, finding the treasure might pose a challenge. Can you help him?As everyone knows, the world is a two-dimensional plane. The ii-th obelisk is at integer coordinates (xi,yi)(xi,yi). The jj-th clue consists of 22 integers (aj,bj)(aj,bj) and belongs to the obelisk pjpj, where pp is some (unknown) permutation on nn elements. It means that the treasure is located at T=(xpj+aj,ypj+bj)T=(xpj+aj,ypj+bj). This point TT is the same for all clues.In other words, each clue belongs to exactly one of the obelisks, and each obelisk has exactly one clue that belongs to it. A clue represents the vector from the obelisk to the treasure. The clues must be distributed among the obelisks in such a way that they all point to the same position of the treasure.Your task is to find the coordinates of the treasure. If there are multiple solutions, you may print any of them.Note that you don't need to find the permutation. Permutations are used only in order to explain the problem.InputThe first line contains an integer nn\u00a0(1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the number of obelisks, that is also equal to the number of clues.Each of the next nn lines contains two integers xixi, yiyi\u00a0(\u2212106\u2264xi,yi\u2264106\u2212106\u2264xi,yi\u2264106)\u00a0\u2014 the coordinates of the ii-th obelisk. All coordinates are distinct, that is xi\u2260xjxi\u2260xj or yi\u2260yjyi\u2260yj will be satisfied for every (i,j)(i,j) such that i\u2260ji\u2260j. Each of the next nn lines contains two integers aiai, bibi\u00a0(\u22122\u22c5106\u2264ai,bi\u22642\u22c5106\u22122\u22c5106\u2264ai,bi\u22642\u22c5106)\u00a0\u2014 the direction of the ii-th clue. All coordinates are distinct, that is ai\u2260ajai\u2260aj or bi\u2260bjbi\u2260bj will be satisfied for every (i,j)(i,j) such that i\u2260ji\u2260j. It is guaranteed that there exists a permutation pp, such that for all i,ji,j it holds (xpi+ai,ypi+bi)=(xpj+aj,ypj+bj)(xpi+ai,ypi+bi)=(xpj+aj,ypj+bj). OutputOutput a single line containing two integers Tx,TyTx,Ty\u00a0\u2014 the coordinates of the treasure.If there are multiple answers, you may print any of them.ExamplesInputCopy2\n2 5\n-6 4\n7 -2\n-1 -3\nOutputCopy1 2\nInputCopy4\n2 2\n8 2\n-7 0\n-2 6\n1 -14\n16 -12\n11 -18\n7 -14\nOutputCopy9 -12\nNoteAs n=2n=2, we can consider all permutations on two elements. If p=[1,2]p=[1,2], then the obelisk (2,5)(2,5) holds the clue (7,\u22122)(7,\u22122), which means that the treasure is hidden at (9,3)(9,3). The second obelisk (\u22126,4)(\u22126,4) would give the clue (\u22121,\u22123)(\u22121,\u22123) and the treasure at (\u22127,1)(\u22127,1). However, both obelisks must give the same location, hence this is clearly not the correct permutation.If the hidden permutation is [2,1][2,1], then the first clue belongs to the second obelisk and the second clue belongs to the first obelisk. Hence (\u22126,4)+(7,\u22122)=(2,5)+(\u22121,\u22123)=(1,2)(\u22126,4)+(7,\u22122)=(2,5)+(\u22121,\u22123)=(1,2), so T=(1,2)T=(1,2) is the location of the treasure.  In the second sample, the hidden permutation is [2,3,4,1][2,3,4,1]."], "Two Cakes": ["https://codeforces.com/problemset/problem/1130/B", "B. Two Cakestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSasha and Dima want to buy two nn-tier cakes. Each cake should consist of nn different tiers: from the size of 11 to the size of nn. Tiers should go in order from the smallest to the biggest (from top to bottom).They live on the same street, there are 2\u22c5n2\u22c5n houses in a row from left to right. Each house has a pastry shop where you can buy a cake tier. Unfortunately, in each pastry shop you can buy only one tier of only one specific size: in the ii-th house you can buy a tier of the size aiai (1\u2264ai\u2264n1\u2264ai\u2264n).Since the guys carry already purchased tiers, and it is impossible to insert a new tier in the middle of the cake, they agreed to buy tiers from the smallest to the biggest. That is, each of them buys tiers in order: 11, then 22, then 33 and so on up to nn.Initially, Sasha and Dima are located near the first (leftmost) house. Output the minimum distance that they will have to walk in total to buy both cakes. The distance between any two neighboring houses is exactly 11.InputThe first line of the input contains an integer number nn \u2014 the number of tiers in each cake (1\u2264n\u22641051\u2264n\u2264105).The second line contains 2\u22c5n2\u22c5n integers a1,a2,\u2026,a2na1,a2,\u2026,a2n (1\u2264ai\u2264n1\u2264ai\u2264n), where aiai is equal to the size of the tier, which can be bought in the ii-th house. Remember that in each house you can buy only one tier. It is guaranteed that every number from 11 to nn occurs in aa exactly two times.OutputPrint one number \u00a0\u2014 the minimum distance that the guys have to walk in total to buy both cakes. Guys can be near same house at the same time. They begin near the first (leftmost) house. Each of the guys should buy nn tiers in ascending order of their sizes.ExamplesInputCopy3\n1 1 2 2 3 3\nOutputCopy9\nInputCopy2\n2 1 1 2\nOutputCopy5\nInputCopy4\n4 1 3 2 2 3 1 4\nOutputCopy17\nNoteIn the first example, the possible optimal sequence of actions is:  Sasha buys a tier of size 11 near the 11-st house (a1=1a1=1);  Dima goes to the house 22;  Dima buys a tier of size 11 near the 22-nd house (a2=1a2=1);  Sasha goes to the house 44;  Sasha buys a tier of size 22 near the 44-th house (a4=2a4=2);  Sasha goes to the house 55;  Sasha buys a tier of size 33 near the 55-th house (a5=3a5=3);  Dima goes to the house 33;  Dima buys a tier of size 22 near the 33-rd house (a3=2a3=2);  Dima goes to the house 66;  Dima buys a tier of size 33 near the 66-th house (a6=3a6=3). So, Sasha goes the distance 3+1=43+1=4, and Dima goes the distance 1+1+3=51+1+3=5. In total, they cover a distance of 4+5=94+5=9. You can make sure that with any other sequence of actions they will walk no less distance."], "Chat Order": ["https://codeforces.com/problemset/problem/637/B", "B. Chat Ordertime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp is a big lover of killing time in social networks. A page with a chatlist in his favourite network is made so that when a message is sent to some friend, his friend's chat rises to the very top of the page. The relative order of the other chats doesn't change. If there was no chat with this friend before, then a new chat is simply inserted to the top of the list.Assuming that the chat list is initially empty, given the sequence of Polycaprus' messages make a list of chats after all of his messages are processed. Assume that no friend wrote any message to Polycarpus.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of Polycarpus' messages. Next n lines enlist the message recipients in the order in which the messages were sent. The name of each participant is a non-empty sequence of lowercase English letters of length at most 10.OutputPrint all the recipients to who Polycarp talked to in the order of chats with them, from top to bottom.ExamplesInputCopy4alexivanromanivanOutputCopyivanromanalexInputCopy8alinamariaekaterinadaryadaryaekaterinamariaalinaOutputCopyalinamariaekaterinadaryaNoteIn the first test case Polycarpus first writes to friend by name \"alex\", and the list looks as follows:   alex Then Polycarpus writes to friend by name \"ivan\" and the list looks as follows:  ivan  alex Polycarpus writes the third message to friend by name \"roman\" and the list looks as follows:  roman  ivan  alex Polycarpus writes the fourth message to friend by name \"ivan\", to who he has already sent a message, so the list of chats changes as follows:  ivan  roman  alex "], "The Monster": ["https://codeforces.com/problemset/problem/787/A", "A. The Monstertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA monster is chasing after Rick and Morty on another planet. They're so frightened that sometimes they scream. More accurately, Rick screams at times b,\u2009b\u2009+\u2009a,\u2009b\u2009+\u20092a,\u2009b\u2009+\u20093a,\u2009... and Morty screams at times d,\u2009d\u2009+\u2009c,\u2009d\u2009+\u20092c,\u2009d\u2009+\u20093c,\u2009....   The Monster will catch them if at any point they scream at the same time, so it wants to know when it will catch them (the first time they scream at the same time) or that they will never scream at the same time.InputThe first line of input contains two integers a and b (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009100). The second line contains two integers c and d (1\u2009\u2264\u2009c,\u2009d\u2009\u2264\u2009100).OutputPrint the first time Rick and Morty will scream at the same time, or \u2009-\u20091 if they will never scream at the same time.ExamplesInputCopy20 29 19OutputCopy82InputCopy2 116 12OutputCopy-1NoteIn the first sample testcase, Rick's 5th scream and Morty's 8th time are at time 82. In the second sample testcase, all Rick's screams will be at odd times and Morty's will be at even times, so they will never scream at the same time."], "Alice, Bob and Chocolate": ["https://codeforces.com/problemset/problem/6/C", "C. Alice, Bob and Chocolatetime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputAlice and Bob like games. And now they are ready to start a new game. They have placed n chocolate bars in a line. Alice starts to eat chocolate bars one by one from left to right, and Bob \u2014 from right to left. For each chocololate bar the time, needed for the player to consume it, is known (Alice and Bob eat them with equal speed). When the player consumes a chocolate bar, he immediately starts with another. It is not allowed to eat two chocolate bars at the same time, to leave the bar unfinished and to make pauses. If both players start to eat the same bar simultaneously, Bob leaves it to Alice as a true gentleman.How many bars each of the players will consume?InputThe first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the amount of bars on the table. The second line contains a sequence t1,\u2009t2,\u2009...,\u2009tn (1\u2009\u2264\u2009ti\u2009\u2264\u20091000), where ti is the time (in seconds) needed to consume the i-th bar (in the order from left to right).OutputPrint two numbers a and b, where a is the amount of bars consumed by Alice, and b is the amount of bars consumed by Bob.ExamplesInputCopy52 9 8 2 7OutputCopy2 3"], "Students and Shoelaces": ["https://codeforces.com/problemset/problem/129/B", "B. Students and Shoelacestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnna and Maria are in charge of the math club for junior students. When the club gathers together, the students behave badly. They've brought lots of shoe laces to the club and got tied with each other. Specifically, each string ties together two students. Besides, if two students are tied, then the lace connects the first student with the second one as well as the second student with the first one.To restore order, Anna and Maria do the following. First, for each student Anna finds out what other students he is tied to. If a student is tied to exactly one other student, Anna reprimands him. Then Maria gathers in a single group all the students who have been just reprimanded. She kicks them out from the club. This group of students immediately leaves the club. These students takes with them the laces that used to tie them. Then again for every student Anna finds out how many other students he is tied to and so on. And they do so until Anna can reprimand at least one student.Determine how many groups of students will be kicked out of the club.InputThe first line contains two integers n and m \u2014 the initial number of students and laces (). The students are numbered from 1 to n, and the laces are numbered from 1 to m. Next m lines each contain two integers a and b \u2014 the numbers of students tied by the i-th lace (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009n,\u2009a\u2009\u2260\u2009b). It is guaranteed that no two students are tied with more than one lace. No lace ties a student to himself.OutputPrint the single number \u2014 the number of groups of students that will be kicked out from the club.ExamplesInputCopy3 31 22 33 1OutputCopy0InputCopy6 31 22 33 4OutputCopy2InputCopy6 51 42 43 45 46 4OutputCopy1NoteIn the first sample Anna and Maria won't kick out any group of students \u2014 in the initial position every student is tied to two other students and Anna won't be able to reprimand anyone.In the second sample four students are tied in a chain and two more are running by themselves. First Anna and Maria kick out the two students from both ends of the chain (1 and 4), then \u2014 two other students from the chain (2 and 3). At that the students who are running by themselves will stay in the club.In the third sample Anna and Maria will momentarily kick out all students except for the fourth one and the process stops at that point. The correct answer is one."], "A-B-C Sort": ["https://codeforces.com/problemset/problem/1674/D", "D. A-B-C Sorttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given three arrays aa, bb and cc. Initially, array aa consists of nn elements, arrays bb and cc are empty.You are performing the following algorithm that consists of two steps:   Step 11: while aa is not empty, you take the last element from aa and move it in the middle of array bb. If bb currently has odd length, you can choose: place the element from aa to the left or to the right of the middle element of bb. As a result, aa becomes empty and bb consists of nn elements.  Step 22: while bb is not empty, you take the middle element from bb and move it to the end of array cc. If bb currently has even length, you can choose which of two middle elements to take. As a result, bb becomes empty and cc now consists of nn elements.  Refer to the Note section for examples.Can you make array cc sorted in non-decreasing order?InputThe first line contains a single integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104)\u00a0\u2014 the number of test cases. Next tt cases follow.The first line of each test case contains the single integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the length of array aa.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641061\u2264ai\u2264106)\u00a0\u2014 the array aa itself.It's guaranteed that the sum of nn doesn't exceed 2\u22c51052\u22c5105.OutputFor each test, print YES (case-insensitive), if you can make array cc sorted in non-decreasing order. Otherwise, print NO (case-insensitive).ExampleInputCopy3\n4\n3 1 5 3\n3\n3 2 1\n1\n7331\nOutputCopyYES\nNO\nYES\nNoteIn the first test case, we can do the following for a=[3,1,5,3]a=[3,1,5,3]:Step 11: aa[3,1,5,3][3,1,5,3]\u21d2\u21d2[3,1,5][3,1,5]\u21d2\u21d2[3,1][3,1]\u21d2\u21d2[3][3]\u21d2\u21d2[][]bb[][][3\u2013][3_][3,5\u2013][3,5_][3,1\u2013,5][3,1_,5][3,3\u2013,1,5][3,3_,1,5]Step 22: bb[3,3,1\u2013,5][3,3,1_,5]\u21d2\u21d2[3,3\u2013,5][3,3_,5]\u21d2\u21d2[3\u2013,5][3_,5]\u21d2\u21d2[5\u2013][5_]\u21d2\u21d2[][]cc[][][1][1][1,3][1,3][1,3,3][1,3,3][1,3,3,5][1,3,3,5] As a result, array c=[1,3,3,5]c=[1,3,3,5] and it's sorted."], "Escape from Stones": ["https://codeforces.com/problemset/problem/264/A", "A. Escape from Stonestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSquirrel Liss lived in a forest peacefully, but unexpected trouble happens. Stones fall from a mountain. Initially Squirrel Liss occupies an interval [0,\u20091]. Next, n stones will fall and Liss will escape from the stones. The stones are numbered from 1 to n in order.The stones always fall to the center of Liss's interval. When Liss occupies the interval [k\u2009-\u2009d,\u2009k\u2009+\u2009d] and a stone falls to k, she will escape to the left or to the right. If she escapes to the left, her new interval will be [k\u2009-\u2009d,\u2009k]. If she escapes to the right, her new interval will be [k,\u2009k\u2009+\u2009d].You are given a string s of length n. If the i-th character of s is \"l\" or \"r\", when the i-th stone falls Liss will escape to the left or to the right, respectively. Find the sequence of stones' numbers from left to right after all the n stones falls.InputThe input consists of only one line. The only line contains the string s (1\u2009\u2264\u2009|s|\u2009\u2264\u2009106). Each character in s will be either \"l\" or \"r\".OutputOutput n lines \u2014 on the i-th line you should print the i-th stone's number from the left.ExamplesInputCopyllrlrOutputCopy35421InputCopyrrlllOutputCopy12543InputCopylrlrrOutputCopy24531NoteIn the first example, the positions of stones 1, 2, 3, 4, 5 will be , respectively. So you should print the sequence: 3, 5, 4, 2, 1."], "Stripe": ["https://codeforces.com/problemset/problem/18/C", "C. Stripetime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputOnce Bob took a paper stripe of n squares (the height of the stripe is 1 square). In each square he wrote an integer number, possibly negative. He became interested in how many ways exist to cut this stripe into two pieces so that the sum of numbers from one piece is equal to the sum of numbers from the other piece, and each piece contains positive integer amount of squares. Would you help Bob solve this problem?InputThe first input line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 amount of squares in the stripe. The second line contains n space-separated numbers \u2014 they are the numbers written in the squares of the stripe. These numbers are integer and do not exceed 10000 in absolute value.OutputOutput the amount of ways to cut the stripe into two non-empty pieces so that the sum of numbers from one piece is equal to the sum of numbers from the other piece. Don't forget that it's allowed to cut the stripe along the squares' borders only.ExamplesInputCopy91 5 -6 7 9 -16 0 -2 2OutputCopy3InputCopy31 1 1OutputCopy0InputCopy20 0OutputCopy1"], "Alyona and Mex": ["https://codeforces.com/problemset/problem/682/B", "B. Alyona and Mextime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSomeone gave Alyona an array containing n positive integers a1,\u2009a2,\u2009...,\u2009an. In one operation, Alyona can choose any element of the array and decrease it, i.e. replace with any positive integer that is smaller than the current one. Alyona can repeat this operation as many times as she wants. In particular, she may not apply any operation to the array at all.Formally, after applying some operations Alyona will get an array of n positive integers b1,\u2009b2,\u2009...,\u2009bn such that 1\u2009\u2264\u2009bi\u2009\u2264\u2009ai for every 1\u2009\u2264\u2009i\u2009\u2264\u2009n. Your task is to determine the maximum possible value of mex of this array.Mex of an array in this problem is the minimum positive integer that doesn't appear in this array. For example, mex of the array containing 1, 3 and 4 is equal to 2, while mex of the array containing 2, 3 and 2 is equal to 1.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of elements in the Alyona's array.The second line of the input contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 the elements of the array.OutputPrint one positive integer\u00a0\u2014 the maximum possible value of mex of the array after Alyona applies some (possibly none) operations.ExamplesInputCopy51 3 3 3 6OutputCopy5InputCopy22 1OutputCopy3NoteIn the first sample case if one will decrease the second element value to 2 and the fifth element value to 4 then the mex value of resulting array 1 2 3 3 4 will be equal to 5.To reach the answer to the second sample case one must not decrease any of the array elements."], "LCM": ["https://codeforces.com/problemset/problem/188/C", "C. LCMtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLeast common multiple (LCM) of two numbers is the smallest positive integer which is divisible by both of them. You are given integers a and b. Calculate their LCM.InputThe input contains two integers a and b (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009103), separated by a single space.OutputOutput LCM(a, b).ExamplesInputCopy10 42OutputCopy210InputCopy123 41OutputCopy123"], "Build the Permutation": ["https://codeforces.com/problemset/problem/1608/B", "B. Build the Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given three integers n,a,bn,a,b. Determine if there exists a permutation p1,p2,\u2026,pnp1,p2,\u2026,pn of integers from 11 to nn, such that:There are exactly aa integers ii with 2\u2264i\u2264n\u221212\u2264i\u2264n\u22121 such that pi\u22121<pi>pi+1pi\u22121<pi>pi+1 (in other words, there are exactly aa local maximums).There are exactly bb integers ii with 2\u2264i\u2264n\u221212\u2264i\u2264n\u22121 such that pi\u22121>pi<pi+1pi\u22121>pi<pi+1 (in other words, there are exactly bb local minimums).If such permutations exist, find any such permutation.InputThe first line of the input contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. The description of test cases follows.The only line of each test case contains three integers nn, aa and bb (2\u2264n\u22641052\u2264n\u2264105, 0\u2264a,b\u2264n0\u2264a,b\u2264n).The sum of nn over all test cases doesn't exceed 105105.OutputFor each test case, if there is no permutation with the requested properties, output \u22121\u22121.Otherwise, print the permutation that you are found. If there are several such permutations, you may print any of them.ExampleInputCopy3\n4 1 1\n6 1 2\n6 4 0\nOutputCopy1 3 2 4\n4 2 3 1 5 6\n-1\nNoteIn the first test case, one example of such permutations is [1,3,2,4][1,3,2,4]. In it p1<p2>p3p1<p2>p3, and 22 is the only such index, and p2>p3<p4p2>p3<p4, and 33 the only such index.One can show that there is no such permutation for the third test case."], "Tokitsukaze and Mahjong": ["https://codeforces.com/problemset/problem/1191/B", "B. Tokitsukaze and Mahjongtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTokitsukaze is playing a game derivated from Japanese mahjong. In this game, she has three tiles in her hand. Each tile she owns is a suited tile, which means it has a suit (manzu, pinzu or souzu) and a number (a digit ranged from 11 to 99). In this problem, we use one digit and one lowercase letter, which is the first character of the suit, to represent a suited tile. All possible suited tiles are represented as 1m, 2m, \u2026\u2026, 9m, 1p, 2p, \u2026\u2026, 9p, 1s, 2s, \u2026\u2026, 9s.In order to win the game, she must have at least one mentsu (described below) in her hand, so sometimes she should draw extra suited tiles. After drawing a tile, the number of her tiles increases by one. She can draw any tiles she wants, including those already in her hand.Do you know the minimum number of extra suited tiles she needs to draw so that she can win?Here are some useful definitions in this game:  A mentsu, also known as meld, is formed by a koutsu or a shuntsu;  A koutsu, also known as triplet, is made of three identical tiles, such as [1m, 1m, 1m], however, [1m, 1p, 1s] or [1m, 4m, 7m] is NOT a koutsu;  A shuntsu, also known as sequence, is made of three sequential numbered tiles in the same suit, such as [1m, 2m, 3m] and [5s, 7s, 6s], however, [9m, 1m, 2m] or [1m, 2p, 3s] is NOT a shuntsu. Some examples:   [2m, 3p, 2s, 4m, 1s, 2s, 4s] \u2014 it contains no koutsu or shuntsu, so it includes no mentsu;  [4s, 3m, 3p, 4s, 5p, 4s, 5p] \u2014 it contains a koutsu, [4s, 4s, 4s], but no shuntsu, so it includes a mentsu;  [5p, 5s, 9m, 4p, 1s, 7p, 7m, 6p] \u2014 it contains no koutsu but a shuntsu, [5p, 4p, 6p] or [5p, 7p, 6p], so it includes a mentsu. Note that the order of tiles is unnecessary and you can assume the number of each type of suited tiles she can draw is infinite.InputThe only line contains three strings\u00a0\u2014 the tiles in Tokitsukaze's hand. For each string, the first character is a digit ranged from 11 to 99 and the second character is m, p or s.OutputPrint a single integer\u00a0\u2014 the minimum number of extra suited tiles she needs to draw.ExamplesInputCopy1s 2s 3s\nOutputCopy0\nInputCopy9m 9m 9m\nOutputCopy0\nInputCopy3p 9m 2p\nOutputCopy1\nNoteIn the first example, Tokitsukaze already has a shuntsu.In the second example, Tokitsukaze already has a koutsu.In the third example, Tokitsukaze can get a shuntsu by drawing one suited tile\u00a0\u2014 1p or 4p. The resulting tiles will be [3p, 9m, 2p, 1p] or [3p, 9m, 2p, 4p]."], "Classroom Watch": ["https://codeforces.com/problemset/problem/875/A", "A. Classroom Watchtime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputEighth-grader Vova is on duty today in the class. After classes, he went into the office to wash the board, and found on it the number n. He asked what is this number and the teacher of mathematics Inna Petrovna answered Vova that n is the answer to the arithmetic task for first-graders. In the textbook, a certain positive integer x was given. The task was to add x to the sum of the digits of the number x written in decimal numeral system.Since the number n on the board was small, Vova quickly guessed which x could be in the textbook. Now he wants to get a program which will search for arbitrary values of the number n for all suitable values of x or determine that such x does not exist. Write such a program for Vova.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009109).OutputIn the first line print one integer k\u00a0\u2014 number of different values of x satisfying the condition. In next k lines print these values in ascending order.ExamplesInputCopy21OutputCopy115InputCopy20OutputCopy0NoteIn the first test case x\u2009=\u200915 there is only one variant: 15\u2009+\u20091\u2009+\u20095\u2009=\u200921.In the second test case there are no such x."], "NN and the Optical Illusion": ["https://codeforces.com/problemset/problem/1100/C", "C. NN and the Optical Illusiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputNN is an experienced internet user and that means he spends a lot of time on the social media. Once he found the following image on the Net, which asked him to compare the sizes of inner circles:  It turned out that the circles are equal. NN was very surprised by this fact, so he decided to create a similar picture himself.He managed to calculate the number of outer circles nn and the radius of the inner circle rr. NN thinks that, using this information, you can exactly determine the radius of the outer circles RR so that the inner circle touches all of the outer ones externally and each pair of neighboring outer circles also touches each other. While NN tried very hard to guess the required radius, he didn't manage to do that. Help NN find the required radius for building the required picture.InputThe first and the only line of the input file contains two numbers nn and rr (3\u2264n\u22641003\u2264n\u2264100, 1\u2264r\u22641001\u2264r\u2264100)\u00a0\u2014 the number of the outer circles and the radius of the inner circle respectively.OutputOutput a single number RR\u00a0\u2014 the radius of the outer circle required for building the required picture. Your answer will be accepted if its relative or absolute error does not exceed 10\u2212610\u22126.Formally, if your answer is aa and the jury's answer is bb. Your answer is accepted if and only when |a\u2212b|max(1,|b|)\u226410\u22126|a\u2212b|max(1,|b|)\u226410\u22126.ExamplesInputCopy3 1OutputCopy6.4641016InputCopy6 1OutputCopy1.0000000InputCopy100 100OutputCopy3.2429391"], "Shower Line": ["https://codeforces.com/problemset/problem/431/B", "B. Shower Linetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMany students live in a dormitory. A dormitory is a whole new world of funny amusements and possibilities but it does have its drawbacks. There is only one shower and there are multiple students who wish to have a shower in the morning. That's why every morning there is a line of five people in front of the dormitory shower door. As soon as the shower opens, the first person from the line enters the shower. After a while the first person leaves the shower and the next person enters the shower. The process continues until everybody in the line has a shower.Having a shower takes some time, so the students in the line talk as they wait. At each moment of time the students talk in pairs: the (2i\u2009-\u20091)-th man in the line (for the current moment) talks with the (2i)-th one. Let's look at this process in more detail. Let's number the people from 1 to 5. Let's assume that the line initially looks as 23154 (person number 2 stands at the beginning of the line). Then, before the shower opens, 2 talks with 3, 1 talks with 5, 4 doesn't talk with anyone. Then 2 enters the shower. While 2 has a shower, 3 and 1 talk, 5 and 4 talk too. Then, 3 enters the shower. While 3 has a shower, 1 and 5 talk, 4 doesn't talk to anyone. Then 1 enters the shower and while he is there, 5 and 4 talk. Then 5 enters the shower, and then 4 enters the shower.We know that if students i and j talk, then the i-th student's happiness increases by gij and the j-th student's happiness increases by gji. Your task is to find such initial order of students in the line that the total happiness of all students will be maximum in the end. Please note that some pair of students may have a talk several times. In the example above students 1 and 5 talk while they wait for the shower to open and while 3 has a shower.InputThe input consists of five lines, each line contains five space-separated integers: the j-th number in the i-th line shows gij (0\u2009\u2264\u2009gij\u2009\u2264\u2009105). It is guaranteed that gii\u2009=\u20090 for all i.Assume that the students are numbered from 1 to 5.OutputPrint a single integer \u2014 the maximum possible total happiness of the students.ExamplesInputCopy0 0 0 0 90 0 0 0 00 0 0 0 00 0 0 0 07 0 0 0 0OutputCopy32InputCopy0 43 21 18 23 0 21 11 655 2 0 1 454 62 12 0 9987 64 81 33 0OutputCopy620NoteIn the first sample, the optimal arrangement of the line is 23154. In this case, the total happiness equals:(g23\u2009+\u2009g32\u2009+\u2009g15\u2009+\u2009g51)\u2009+\u2009(g13\u2009+\u2009g31\u2009+\u2009g54\u2009+\u2009g45)\u2009+\u2009(g15\u2009+\u2009g51)\u2009+\u2009(g54\u2009+\u2009g45)\u2009=\u200932."], "Planning The Expedition": ["https://codeforces.com/problemset/problem/1011/B", "B. Planning The Expeditiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNatasha is planning an expedition to Mars for nn people. One of the important tasks is to provide food for each participant.The warehouse has mm daily food packages. Each package has some food type aiai.Each participant must eat exactly one food package each day. Due to extreme loads, each participant must eat the same food type throughout the expedition. Different participants may eat different (or the same) types of food.Formally, for each participant jj Natasha should select his food type bjbj and each day jj-th participant will eat one food package of type bjbj. The values bjbj for different participants may be different.What is the maximum possible number of days the expedition can last, following the requirements above?InputThe first line contains two integers nn and mm (1\u2264n\u22641001\u2264n\u2264100, 1\u2264m\u22641001\u2264m\u2264100)\u00a0\u2014 the number of the expedition participants and the number of the daily food packages available.The second line contains sequence of integers a1,a2,\u2026,ama1,a2,\u2026,am (1\u2264ai\u22641001\u2264ai\u2264100), where aiai is the type of ii-th food package.OutputPrint the single integer\u00a0\u2014 the number of days the expedition can last. If it is not possible to plan the expedition for even one day, print 0.ExamplesInputCopy4 101 5 2 1 1 1 2 5 7 2OutputCopy2InputCopy100 11OutputCopy0InputCopy2 55 4 3 2 1OutputCopy1InputCopy3 942 42 42 42 42 42 42 42 42OutputCopy3NoteIn the first example, Natasha can assign type 11 food to the first participant, the same type 11 to the second, type 55 to the third and type 22 to the fourth. In this case, the expedition can last for 22 days, since each participant can get two food packages of his food type (there will be used 44 packages of type 11, two packages of type 22 and two packages of type 55).In the second example, there are 100100 participants and only 11 food package. In this case, the expedition can't last even 11 day."], "Diameter of Graph": ["https://codeforces.com/problemset/problem/1581/B", "B. Diameter of Graphtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputCQXYM wants to create a connected undirected graph with nn nodes and mm edges, and the diameter of the graph must be strictly less than k\u22121k\u22121. Also, CQXYM doesn't want a graph that contains self-loops or multiple edges (i.e. each edge connects two different vertices and between each pair of vertices there is at most one edge).The diameter of a graph is the maximum distance between any two nodes.The distance between two nodes is the minimum number of the edges on the path which endpoints are the two nodes.CQXYM wonders whether it is possible to create such a graph.InputThe input consists of multiple test cases. The first line contains an integer t(1\u2264t\u2264105)t(1\u2264t\u2264105) \u2014 the number of test cases. The description of the test cases follows.Only one line of each test case contains three integers n(1\u2264n\u2264109)n(1\u2264n\u2264109), mm, kk (0\u2264m,k\u2264109)(0\u2264m,k\u2264109).OutputFor each test case, print YES if it is possible to create the graph, or print NO if it is impossible. You can print each letter in any case (upper or lower).ExampleInputCopy5\n1 0 3\n4 5 3\n4 6 3\n5 4 1\n2 1 1\nOutputCopyYES\nNO\nYES\nNO\nNO\nNoteIn the first test case, the graph's diameter equal to 0.In the second test case, the graph's diameter can only be 2.In the third test case, the graph's diameter can only be 1."], "Coloring a Tree": ["https://codeforces.com/problemset/problem/902/B", "B. Coloring a Treetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree with n vertices. The vertices are numbered from 1 to n, the root is the vertex number 1.Each vertex has a color, let's denote the color of vertex v by cv. Initially cv\u2009=\u20090.You have to color the tree into the given colors using the smallest possible number of steps. On each step you can choose a vertex v and a color x, and then color all vectices in the subtree of v (including v itself) in color x. In other words, for every vertex u, such that the path from root to u passes through v, set cu\u2009=\u2009x.It is guaranteed that you have to color each vertex in a color different from 0.You can learn what a rooted tree is using the link: https://en.wikipedia.org/wiki/Tree_(graph_theory).InputThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009104)\u00a0\u2014 the number of vertices in the tree.The second line contains n\u2009-\u20091 integers p2,\u2009p3,\u2009...,\u2009pn (1\u2009\u2264\u2009pi\u2009<\u2009i), where pi means that there is an edge between vertices i and pi.The third line contains n integers c1,\u2009c2,\u2009...,\u2009cn (1\u2009\u2264\u2009ci\u2009\u2264\u2009n), where ci is the color you should color the i-th vertex into.It is guaranteed that the given graph is a tree. OutputPrint a single integer\u00a0\u2014 the minimum number of steps you have to perform to color the tree into given colors.ExamplesInputCopy61 2 2 1 52 1 1 1 1 1OutputCopy3InputCopy71 1 2 3 1 43 3 1 1 1 2 3OutputCopy5NoteThe tree from the first sample is shown on the picture (numbers are vetices' indices):On first step we color all vertices in the subtree of vertex 1 into color 2 (numbers are colors):On seond step we color all vertices in the subtree of vertex 5 into color 1:On third step we color all vertices in the subtree of vertex 2 into color 1:The tree from the second sample is shown on the picture (numbers are vetices' indices):On first step we color all vertices in the subtree of vertex 1 into color 3 (numbers are colors):On second step we color all vertices in the subtree of vertex 3 into color 1:On third step we color all vertices in the subtree of vertex 6 into color 2:On fourth step we color all vertices in the subtree of vertex 4 into color 1:On fith step we color all vertices in the subtree of vertex 7 into color 3:"], "War of the Corporations": ["https://codeforces.com/problemset/problem/625/B", "B. War of the Corporationstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA long time ago, in a galaxy far far away two giant IT-corporations Pineapple and Gogol continue their fierce competition. Crucial moment is just around the corner: Gogol is ready to release it's new tablet Lastus 3000.This new device is equipped with specially designed artificial intelligence (AI). Employees of Pineapple did their best to postpone the release of Lastus 3000 as long as possible. Finally, they found out, that the name of the new artificial intelligence is similar to the name of the phone, that Pineapple released 200 years ago. As all rights on its name belong to Pineapple, they stand on changing the name of Gogol's artificial intelligence.Pineapple insists, that the name of their phone occurs in the name of AI as a substring. Because the name of technology was already printed on all devices, the Gogol's director decided to replace some characters in AI name with \"#\". As this operation is pretty expensive, you should find the minimum number of characters to replace with \"#\", such that the name of AI doesn't contain the name of the phone as a substring.Substring is a continuous subsequence of a string.InputThe first line of the input contains the name of AI designed by Gogol, its length doesn't exceed 100\u2009000 characters. Second line contains the name of the phone released by Pineapple 200 years ago, its length doesn't exceed 30. Both string are non-empty and consist of only small English letters.OutputPrint the minimum number of characters that must be replaced with \"#\" in order to obtain that the name of the phone doesn't occur in the name of AI as a substring.ExamplesInputCopyintellecttellOutputCopy1InputCopygoogleappleOutputCopy0InputCopysirisirisirOutputCopy2NoteIn the first sample AI's name may be replaced with \"int#llect\".In the second sample Gogol can just keep things as they are.In the third sample one of the new possible names of AI may be \"s#ris#ri\"."], "Easter Eggs": ["https://codeforces.com/problemset/problem/78/B", "B. Easter Eggstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Easter Rabbit laid n eggs in a circle and is about to paint them. Each egg should be painted one color out of 7: red, orange, yellow, green, blue, indigo or violet. Also, the following conditions should be satisfied:  Each of the seven colors should be used to paint at least one egg.  Any four eggs lying sequentially should be painted different colors. Help the Easter Rabbit paint the eggs in the required manner. We know that it is always possible.InputThe only line contains an integer n \u2014 the amount of eggs (7\u2009\u2264\u2009n\u2009\u2264\u2009100).OutputPrint one line consisting of n characters. The i-th character should describe the color of the i-th egg in the order they lie in the circle. The colors should be represented as follows: \"R\" stands for red, \"O\" stands for orange, \"Y\" stands for yellow, \"G\" stands for green, \"B\" stands for blue, \"I\" stands for indigo, \"V\" stands for violet.If there are several answers, print any of them.ExamplesInputCopy8OutputCopyROYGRBIVInputCopy13OutputCopyROYGBIVGBIVYGNoteThe way the eggs will be painted in the first sample is shown on the picture:   "], "The Bits": ["https://codeforces.com/problemset/problem/1017/B", "B. The Bitstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRudolf is on his way to the castle. Before getting into the castle, the security staff asked him a question:Given two binary numbers aa and bb of length nn. How many different ways of swapping two digits in aa (only in aa, not bb) so that bitwise OR of these two numbers will be changed? In other words, let cc be the bitwise OR of aa and bb, you need to find the number of ways of swapping two bits in aa so that bitwise OR will not be equal to cc.Note that binary numbers can contain leading zeros so that length of each number is exactly nn.Bitwise OR is a binary operation. A result is a binary number which contains a one in each digit if there is a one in at least one of the two numbers. For example, 010102010102 OR 100112100112 = 110112110112.Well, to your surprise, you are not Rudolf, and you don't need to help him\u2026\u2026 You are the security staff! Please find the number of ways of swapping two bits in aa so that bitwise OR will be changed.InputThe first line contains one integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the number of bits in each number.The second line contains a binary number aa of length nn.The third line contains a binary number bb of length nn.OutputPrint the number of ways to swap two bits in aa so that bitwise OR will be changed.ExamplesInputCopy50101111001OutputCopy4InputCopy6011000010011OutputCopy6NoteIn the first sample, you can swap bits that have indexes (1,4)(1,4), (2,3)(2,3), (3,4)(3,4), and (3,5)(3,5).In the second example, you can swap bits that have indexes (1,2)(1,2), (1,3)(1,3), (2,4)(2,4), (3,4)(3,4), (3,5)(3,5), and (3,6)(3,6)."], "Kirill And The Game": ["https://codeforces.com/problemset/problem/842/A", "A. Kirill And The Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputKirill plays a new computer game. He came to the potion store where he can buy any potion. Each potion is characterized by two integers\u00a0\u2014 amount of experience and cost. The efficiency of a potion is the ratio of the amount of experience to the cost. Efficiency may be a non-integer number.For each two integer numbers a and b such that l\u2009\u2264\u2009a\u2009\u2264\u2009r and x\u2009\u2264\u2009b\u2009\u2264\u2009y there is a potion with experience a and cost b in the store (that is, there are (r\u2009-\u2009l\u2009+\u20091)\u00b7(y\u2009-\u2009x\u2009+\u20091) potions).Kirill wants to buy a potion which has efficiency k. Will he be able to do this?InputFirst string contains five integer numbers l, r, x, y, k (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009107, 1\u2009\u2264\u2009x\u2009\u2264\u2009y\u2009\u2264\u2009107, 1\u2009\u2264\u2009k\u2009\u2264\u2009107).OutputPrint \"YES\" without quotes if a potion with efficiency exactly k can be bought in the store and \"NO\" without quotes otherwise.You can output each of the letters in any register.ExamplesInputCopy1 10 1 10 1OutputCopyYESInputCopy1 5 6 10 1OutputCopyNO"], "Coins": ["https://codeforces.com/problemset/problem/58/B", "B. Coinstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn Berland a money reform is being prepared. New coins are being introduced. After long economic calculations was decided that the most expensive coin should possess the denomination of exactly n Berland dollars. Also the following restriction has been introduced for comfort: the denomination of each coin should be divisible by the denomination of any cheaper coin. It is known that among all the possible variants the variant with the largest number of new coins will be chosen. Find this variant. Print in the order of decreasing of the coins' denominations.InputThe first and only line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009106) which represents the denomination of the most expensive coin. OutputPrint the denominations of all the coins in the order of decreasing. The number of coins must be the largest possible (with the given denomination n of the most expensive coin). Also, the denomination of every coin must be divisible by the denomination of any cheaper coin. Naturally, the denominations of all the coins should be different. If there are several solutins to that problem, print any of them.ExamplesInputCopy10OutputCopy10 5 1InputCopy4OutputCopy4 2 1InputCopy3OutputCopy3 1"], "Roma and Changing Signs": ["https://codeforces.com/problemset/problem/262/B", "B. Roma and Changing Signstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRoma works in a company that sells TVs. Now he has to prepare a report for the last year.Roma has got a list of the company's incomes. The list is a sequence that consists of n integers. The total income of the company is the sum of all integers in sequence. Roma decided to perform exactly k changes of signs of several numbers in the sequence. He can also change the sign of a number one, two or more times.The operation of changing a number's sign is the operation of multiplying this number by -1.Help Roma perform the changes so as to make the total income of the company (the sum of numbers in the resulting sequence) maximum. Note that Roma should perform exactly k changes.InputThe first line contains two integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009105), showing, how many numbers are in the sequence and how many swaps are to be made.The second line contains a non-decreasing sequence, consisting of n integers ai (|ai|\u2009\u2264\u2009104).The numbers in the lines are separated by single spaces. Please note that the given sequence is sorted in non-decreasing order.OutputIn the single line print the answer to the problem \u2014 the maximum total income that we can obtain after exactly k changes.ExamplesInputCopy3 2-1 -1 1OutputCopy3InputCopy3 1-1 -1 1OutputCopy1NoteIn the first sample we can get sequence [1, 1, 1], thus the total income equals 3.In the second test, the optimal strategy is to get sequence [-1, 1, 1], thus the total income equals 1."], "Restoring Permutation": ["https://codeforces.com/problemset/problem/1315/C", "C. Restoring Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a sequence b1,b2,\u2026,bnb1,b2,\u2026,bn. Find the lexicographically minimal permutation a1,a2,\u2026,a2na1,a2,\u2026,a2n such that bi=min(a2i\u22121,a2i)bi=min(a2i\u22121,a2i), or determine that it is impossible.InputEach test contains one or more test cases. The first line contains the number of test cases tt (1\u2264t\u22641001\u2264t\u2264100).The first line of each test case consists of one integer nn\u00a0\u2014 the number of elements in the sequence bb (1\u2264n\u22641001\u2264n\u2264100).The second line of each test case consists of nn different integers b1,\u2026,bnb1,\u2026,bn\u00a0\u2014 elements of the sequence bb (1\u2264bi\u22642n1\u2264bi\u22642n).It is guaranteed that the sum of nn by all test cases doesn't exceed 100100.OutputFor each test case, if there is no appropriate permutation, print one number \u22121\u22121.Otherwise, print 2n2n integers a1,\u2026,a2na1,\u2026,a2n\u00a0\u2014 required lexicographically minimal permutation of numbers from 11 to 2n2n.ExampleInputCopy5\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\nOutputCopy1 2 \n-1\n4 5 1 2 3 6 \n-1\n1 3 5 6 7 9 2 4 8 10 \n"], "Nirvana": ["https://codeforces.com/problemset/problem/1143/B", "B. Nirvanatime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputKurt reaches nirvana when he finds the product of all the digits of some positive integer. Greater value of the product makes the nirvana deeper.Help Kurt find the maximum possible product of digits among all integers from 11 to nn.InputThe only input line contains the integer nn (1\u2264n\u22642\u22c51091\u2264n\u22642\u22c5109).OutputPrint the maximum product of digits among all integers from 11 to nn.ExamplesInputCopy390\nOutputCopy216\nInputCopy7\nOutputCopy7\nInputCopy1000000000\nOutputCopy387420489\nNoteIn the first example the maximum product is achieved for 389389 (the product of digits is 3\u22c58\u22c59=2163\u22c58\u22c59=216).In the second example the maximum product is achieved for 77 (the product of digits is 77).In the third example the maximum product is achieved for 999999999999999999 (the product of digits is 99=38742048999=387420489)."], "Shooshuns and Sequence": ["https://codeforces.com/problemset/problem/222/A", "A. Shooshuns and Sequence time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day shooshuns found a sequence of n integers, written on a blackboard. The shooshuns can perform one operation with it, the operation consists of two steps:  Find the number that goes k-th in the current sequence and add the same number to the end of the sequence;  Delete the first number of the current sequence. The shooshuns wonder after how many operations all numbers on the board will be the same and whether all numbers will ever be the same.InputThe first line contains two space-separated integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009105).The second line contains n space-separated integers: a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105) \u2014 the sequence that the shooshuns found.OutputPrint the minimum number of operations, required for all numbers on the blackboard to become the same. If it is impossible to achieve, print -1.ExamplesInputCopy3 23 1 1OutputCopy1InputCopy3 13 1 1OutputCopy-1NoteIn the first test case after the first operation the blackboard will have sequence [1, 1, 1]. So, one operation is enough to make all numbers the same. Thus, the answer equals one.In the second test case the sequence will never consist of the same numbers. It will always contain at least two distinct numbers 3 and 1. Thus, the answer equals -1."], "Sanatorium": ["https://codeforces.com/problemset/problem/732/C", "C. Sanatoriumtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasiliy spent his vacation in a sanatorium, came back and found that he completely forgot details of his vacation! Every day there was a breakfast, a dinner and a supper in a dining room of the sanatorium (of course, in this order). The only thing that Vasiliy has now is a card from the dining room contaning notes how many times he had a breakfast, a dinner and a supper (thus, the card contains three integers). Vasiliy could sometimes have missed some meal, for example, he could have had a breakfast and a supper, but a dinner, or, probably, at some days he haven't been at the dining room at all.Vasiliy doesn't remember what was the time of the day when he arrived to sanatorium (before breakfast, before dinner, before supper or after supper), and the time when he left it (before breakfast, before dinner, before supper or after supper). So he considers any of these options. After Vasiliy arrived to the sanatorium, he was there all the time until he left. Please note, that it's possible that Vasiliy left the sanatorium on the same day he arrived.According to the notes in the card, help Vasiliy determine the minimum number of meals in the dining room that he could have missed. We shouldn't count as missed meals on the arrival day before Vasiliy's arrival and meals on the departure day after he left.InputThe only line contains three integers b, d and s (0\u2009\u2264\u2009b,\u2009d,\u2009s\u2009\u2264\u20091018,\u2009\u2009b\u2009+\u2009d\u2009+\u2009s\u2009\u2265\u20091)\u00a0\u2014 the number of breakfasts, dinners and suppers which Vasiliy had during his vacation in the sanatorium. OutputPrint single integer\u00a0\u2014 the minimum possible number of meals which Vasiliy could have missed during his vacation. ExamplesInputCopy3 2 1OutputCopy1InputCopy1 0 0OutputCopy0InputCopy1 1 1OutputCopy0InputCopy1000000000000000000 0 1000000000000000000OutputCopy999999999999999999NoteIn the first sample, Vasiliy could have missed one supper, for example, in case he have arrived before breakfast, have been in the sanatorium for two days (including the day of arrival) and then have left after breakfast on the third day. In the second sample, Vasiliy could have arrived before breakfast, have had it, and immediately have left the sanatorium, not missing any meal.In the third sample, Vasiliy could have been in the sanatorium for one day, not missing any meal. "], "Bracket Subsequence": ["https://codeforces.com/problemset/problem/1023/C", "C. Bracket Subsequencetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA bracket sequence is a string containing only characters \"(\" and \")\". A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \"1\" and \"+\" between the original characters of the sequence. For example, bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\"), and \")(\", \"(\" and \")\" are not.Subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.You are given a regular bracket sequence ss and an integer number kk. Your task is to find a regular bracket sequence of length exactly kk such that it is also a subsequence of ss.It is guaranteed that such sequence always exists.InputThe first line contains two integers nn and kk (2\u2264k\u2264n\u22642\u22c51052\u2264k\u2264n\u22642\u22c5105, both nn and kk are even) \u2014 the length of ss and the length of the sequence you are asked to find.The second line is a string ss \u2014 regular bracket sequence of length nn.OutputPrint a single string \u2014 a regular bracket sequence of length exactly kk such that it is also a subsequence of ss.It is guaranteed that such sequence always exists.ExamplesInputCopy6 4()(())OutputCopy()()InputCopy8 8(()(()))OutputCopy(()(()))"], "Diverse Permutation": ["https://codeforces.com/problemset/problem/482/A", "A. Diverse Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPermutation p is an ordered set of integers p1,\u2009\u2009\u2009p2,\u2009\u2009\u2009...,\u2009\u2009\u2009pn, consisting of n distinct positive integers not larger than n. We'll denote as n the length of permutation p1,\u2009\u2009\u2009p2,\u2009\u2009\u2009...,\u2009\u2009\u2009pn.Your task is to find such permutation p of length n, that the group of numbers |p1\u2009-\u2009p2|,\u2009|p2\u2009-\u2009p3|,\u2009...,\u2009|pn\u2009-\u20091\u2009-\u2009pn| has exactly k distinct elements.InputThe single line of the input contains two space-separated positive integers n, k (1\u2009\u2264\u2009k\u2009<\u2009n\u2009\u2264\u2009105).OutputPrint n integers forming the permutation. If there are multiple answers, print any of them.ExamplesInputCopy3 2OutputCopy1 3 2InputCopy3 1OutputCopy1 2 3InputCopy5 2OutputCopy1 3 2 4 5NoteBy |x| we denote the absolute value of number x. "], "SwapSort": ["https://codeforces.com/problemset/problem/489/A", "A. SwapSorttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn this problem your goal is to sort an array consisting of n integers in at most n swaps. For the given array find the sequence of swaps that makes the array sorted in the non-descending order. Swaps are performed consecutively, one after another.Note that in this problem you do not have to minimize the number of swaps \u2014 your task is to find any sequence that is no longer than n.InputThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093000) \u2014 the number of array elements. The second line contains elements of array: a0,\u2009a1,\u2009...,\u2009an\u2009-\u20091 (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109), where ai is the i-th element of the array. The elements are numerated from 0 to n\u2009-\u20091 from left to right. Some integers may appear in the array more than once.OutputIn the first line print k (0\u2009\u2264\u2009k\u2009\u2264\u2009n) \u2014 the number of swaps. Next k lines must contain the descriptions of the k swaps, one per line. Each swap should be printed as a pair of integers i, j (0\u2009\u2264\u2009i,\u2009j\u2009\u2264\u2009n\u2009-\u20091), representing the swap of elements ai and aj. You can print indices in the pairs in any order. The swaps are performed in the order they appear in the output, from the first to the last. It is allowed to print i\u2009=\u2009j and swap the same pair of elements multiple times.If there are multiple answers, print any of them. It is guaranteed that at least one answer exists.ExamplesInputCopy55 2 5 1 4OutputCopy20 34 2InputCopy610 20 20 40 60 60OutputCopy0InputCopy2101 100OutputCopy10 1"], "Row": ["https://codeforces.com/problemset/problem/982/A", "A. Rowtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're given a row with nn chairs. We call a seating of people \"maximal\" if the two following conditions hold:  There are no neighbors adjacent to anyone seated.  It's impossible to seat one more person without violating the first rule. The seating is given as a string consisting of zeros and ones (00 means that the corresponding seat is empty, 11 \u2014 occupied). The goal is to determine whether this seating is \"maximal\".Note that the first and last seats are not adjacent (if n\u22602n\u22602).InputThe first line contains a single integer nn (1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the number of chairs.The next line contains a string of nn characters, each of them is either zero or one, describing the seating.OutputOutput \"Yes\" (without quotation marks) if the seating is \"maximal\". Otherwise print \"No\".You are allowed to print letters in whatever case you'd like (uppercase or lowercase).ExamplesInputCopy3101OutputCopyYesInputCopy41011OutputCopyNoInputCopy510001OutputCopyNoNoteIn sample case one the given seating is maximal.In sample case two the person at chair three has a neighbour to the right.In sample case three it is possible to seat yet another person into chair three."], "Box": ["https://codeforces.com/problemset/problem/1227/B", "B. Boxtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPermutation pp is a sequence of integers p=[p1,p2,\u2026,pn]p=[p1,p2,\u2026,pn], consisting of nn distinct (unique) positive integers between 11 and nn, inclusive. For example, the following sequences are permutations: [3,4,1,2][3,4,1,2], [1][1], [1,2][1,2]. The following sequences are not permutations: [0][0], [1,2,1][1,2,1], [2,3][2,3], [0,1,2][0,1,2].The important key is in the locked box that you need to open. To open the box you need to enter secret code. Secret code is a permutation pp of length nn. You don't know this permutation, you only know the array qq of prefix maximums of this permutation. Formally:  q1=p1q1=p1,  q2=max(p1,p2)q2=max(p1,p2),  q3=max(p1,p2,p3)q3=max(p1,p2,p3),  ...  qn=max(p1,p2,\u2026,pn)qn=max(p1,p2,\u2026,pn). You want to construct any possible suitable permutation (i.e. any such permutation, that calculated qq for this permutation is equal to the given array).InputThe first line contains integer number tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases in the input. Then tt test cases follow.The first line of a test case contains one integer nn (1\u2264n\u2264105)(1\u2264n\u2264105)\u00a0\u2014 the number of elements in the secret code permutation pp.The second line of a test case contains nn integers q1,q2,\u2026,qnq1,q2,\u2026,qn (1\u2264qi\u2264n)(1\u2264qi\u2264n)\u00a0\u2014 elements of the array qq for secret permutation. It is guaranteed that qi\u2264qi+1qi\u2264qi+1 for all ii (1\u2264i<n1\u2264i<n).The sum of all values nn over all the test cases in the input doesn't exceed 105105.OutputFor each test case, print:  If it's impossible to find such a permutation pp, print \"-1\" (without quotes).  Otherwise, print nn distinct integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n). If there are multiple possible answers, you can print any of them. ExampleInputCopy4\n5\n1 3 4 5 5\n4\n1 1 3 4\n2\n2 2\n1\n1\nOutputCopy1 3 4 5 2 \n-1\n2 1 \n1 \nNoteIn the first test case of the example answer [1,3,4,5,2][1,3,4,5,2] is the only possible answer:  q1=p1=1q1=p1=1;  q2=max(p1,p2)=3q2=max(p1,p2)=3;  q3=max(p1,p2,p3)=4q3=max(p1,p2,p3)=4;  q4=max(p1,p2,p3,p4)=5q4=max(p1,p2,p3,p4)=5;  q5=max(p1,p2,p3,p4,p5)=5q5=max(p1,p2,p3,p4,p5)=5. It can be proved that there are no answers for the second test case of the example."], "Ohana Cleans Up": ["https://codeforces.com/problemset/problem/554/B", "B. Ohana Cleans Uptime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOhana Matsumae is trying to clean a room, which is divided up into an n by n grid of squares. Each square is initially either clean or dirty. Ohana can sweep her broom over columns of the grid. Her broom is very strange: if she sweeps over a clean square, it will become dirty, and if she sweeps over a dirty square, it will become clean. She wants to sweep some columns of the room to maximize the number of rows that are completely clean. It is not allowed to sweep over the part of the column, Ohana can only sweep the whole column.Return the maximum number of rows that she can make completely clean.InputThe first line of input will be a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100).The next n lines will describe the state of the room. The i-th line will contain a binary string with n characters denoting the state of the i-th row of the room. The j-th character on this line is '1' if the j-th square in the i-th row is clean, and '0' if it is dirty.OutputThe output should be a single line containing an integer equal to a maximum possible number of rows that are completely clean.ExamplesInputCopy40101100011110101OutputCopy2InputCopy3111111111OutputCopy3NoteIn the first sample, Ohana can sweep the 1st and 3rd columns. This will make the 1st and 4th row be completely clean.In the second sample, everything is already clean, so Ohana doesn't need to do anything."], "Serval and Toy Bricks": ["https://codeforces.com/problemset/problem/1153/B", "B. Serval and Toy Brickstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLuckily, Serval got onto the right bus, and he came to the kindergarten on time. After coming to kindergarten, he found the toy bricks very funny.He has a special interest to create difficult problems for others to solve. This time, with many 1\u00d71\u00d711\u00d71\u00d71 toy bricks, he builds up a 3-dimensional object. We can describe this object with a n\u00d7mn\u00d7m matrix, such that in each cell (i,j)(i,j), there are hi,jhi,j bricks standing on the top of each other.However, Serval doesn't give you any hi,jhi,j, and just give you the front view, left view, and the top view of this object, and he is now asking you to restore the object. Note that in the front view, there are mm columns, and in the ii-th of them, the height is the maximum of h1,i,h2,i,\u2026,hn,ih1,i,h2,i,\u2026,hn,i. It is similar for the left view, where there are nn columns. And in the top view, there is an n\u00d7mn\u00d7m matrix ti,jti,j, where ti,jti,j is 00 or 11. If ti,jti,j equals 11, that means hi,j>0hi,j>0, otherwise, hi,j=0hi,j=0.However, Serval is very lonely because others are bored about his unsolvable problems before, and refused to solve this one, although this time he promises there will be at least one object satisfying all the views. As his best friend, can you have a try?InputThe first line contains three positive space-separated integers n,m,hn,m,h (1\u2264n,m,h\u22641001\u2264n,m,h\u2264100)\u00a0\u2014 the length, width and height.The second line contains mm non-negative space-separated integers a1,a2,\u2026,ama1,a2,\u2026,am, where aiai is the height in the ii-th column from left to right of the front view (0\u2264ai\u2264h0\u2264ai\u2264h).The third line contains nn non-negative space-separated integers b1,b2,\u2026,bnb1,b2,\u2026,bn (0\u2264bj\u2264h0\u2264bj\u2264h), where bjbj is the height in the jj-th column from left to right of the left view.Each of the following nn lines contains mm numbers, each is 00 or 11, representing the top view, where jj-th number of ii-th row is 11 if hi,j>0hi,j>0, and 00 otherwise.It is guaranteed that there is at least one structure satisfying the input.OutputOutput nn lines, each of them contains mm integers, the jj-th number in the ii-th line should be equal to the height in the corresponding position of the top view. If there are several objects satisfying the views, output any one of them.ExamplesInputCopy3 7 3\n2 3 0 0 2 0 1\n2 1 3\n1 0 0 0 1 0 0\n0 0 0 0 0 0 1\n1 1 0 0 0 0 0\nOutputCopy1 0 0 0 2 0 0\n0 0 0 0 0 0 1\n2 3 0 0 0 0 0\nInputCopy4 5 5\n3 5 2 0 4\n4 2 5 4\n0 0 0 0 1\n1 0 1 0 0\n0 1 0 0 0\n1 1 1 0 0\nOutputCopy0 0 0 0 4\n1 0 2 0 0\n0 5 0 0 0\n3 4 1 0 0\nNote  The graph above illustrates the object in the first example.    The first graph illustrates the object in the example output for the second example, and the second graph shows the three-view drawing of it."], "Caisa and Sugar": ["https://codeforces.com/problemset/problem/463/A", "A. Caisa and Sugartime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputCaisa is going to have a party and he needs to buy the ingredients for a big chocolate cake. For that he is going to the biggest supermarket in town.Unfortunately, he has just s dollars for sugar. But that's not a reason to be sad, because there are n types of sugar in the supermarket, maybe he able to buy one. But that's not all. The supermarket has very unusual exchange politics: instead of cents the sellers give sweets to a buyer as a change. Of course, the number of given sweets always doesn't exceed 99, because each seller maximizes the number of dollars in the change (100 cents can be replaced with a dollar).Caisa wants to buy only one type of sugar, also he wants to maximize the number of sweets in the change. What is the maximum number of sweets he can get? Note, that Caisa doesn't want to minimize the cost of the sugar, he only wants to get maximum number of sweets as change. InputThe first line contains two space-separated integers n,\u2009s (1\u2009\u2264\u2009n,\u2009s\u2009\u2264\u2009100).The i-th of the next n lines contains two integers xi, yi (1\u2009\u2264\u2009xi\u2009\u2264\u2009100;\u00a00\u2009\u2264\u2009yi\u2009<\u2009100), where xi represents the number of dollars and yi the number of cents needed in order to buy the i-th type of sugar.OutputPrint a single integer representing the maximum number of sweets he can buy, or -1 if he can't buy any type of sugar.ExamplesInputCopy5 103 9012 09 705 507 0OutputCopy50InputCopy5 510 1020 2030 3040 4050 50OutputCopy-1NoteIn the first test sample Caisa can buy the fourth type of sugar, in such a case he will take 50 sweets as a change."], "Pythagorean Theorem II": ["https://codeforces.com/problemset/problem/304/A", "A. Pythagorean Theorem IItime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn mathematics, the Pythagorean theorem \u2014 is a relation in Euclidean geometry among the three sides of a right-angled triangle. In terms of areas, it states: \u007fIn any right-angled triangle, the area of the square whose side is the hypotenuse (the side opposite the right angle) is equal to the sum of the areas of the squares whose sides are the two legs (the two sides that meet at a right angle). The theorem can be written as an equation relating the lengths of the sides a, b and c, often called the Pythagorean equation:a2\u2009+\u2009b2\u2009=\u2009c2where c represents the length of the hypotenuse, and a and b represent the lengths of the other two sides.  Given n, your task is to count how many right-angled triangles with side-lengths a, b and c that satisfied an inequality 1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u2009c\u2009\u2264\u2009n.InputThe only line contains one integer n\u00a0(1\u2009\u2264\u2009n\u2009\u2264\u2009104) as we mentioned above.OutputPrint a single integer \u2014 the answer to the problem.ExamplesInputCopy5OutputCopy1InputCopy74OutputCopy35"], "Robot's Task": ["https://codeforces.com/problemset/problem/583/B", "B. Robot's Tasktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRobot Doc is located in the hall, with n computers stand in a line, numbered from left to right from 1 to n. Each computer contains exactly one piece of information, each of which Doc wants to get eventually. The computers are equipped with a security system, so to crack the i-th of them, the robot needs to collect at least ai any pieces of information from the other computers. Doc can hack the computer only if he is right next to it.The robot is assembled using modern technologies and can move along the line of computers in either of the two possible directions, but the change of direction requires a large amount of resources from Doc. Tell the minimum number of changes of direction, which the robot will have to make to collect all n parts of information if initially it is next to computer with number 1.It is guaranteed that there exists at least one sequence of the robot's actions, which leads to the collection of all information. Initially Doc doesn't have any pieces of information.InputThe first line contains number n (1\u2009\u2264\u2009n\u2009\u2264\u20091000). The second line contains n non-negative integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009<\u2009n), separated by a space. It is guaranteed that there exists a way for robot to collect all pieces of the information.OutputPrint a single number \u2014 the minimum number of changes in direction that the robot will have to make in order to collect all n parts of information.ExamplesInputCopy30 2 0OutputCopy1InputCopy54 2 3 0 1OutputCopy3InputCopy70 3 1 0 5 2 6OutputCopy2NoteIn the first sample you can assemble all the pieces of information in the optimal manner by assembling first the piece of information in the first computer, then in the third one, then change direction and move to the second one, and then, having 2 pieces of information, collect the last piece.In the second sample to collect all the pieces of information in the optimal manner, Doc can go to the fourth computer and get the piece of information, then go to the fifth computer with one piece and get another one, then go to the second computer in the same manner, then to the third one and finally, to the first one. Changes of direction will take place before moving from the fifth to the second computer, then from the second to the third computer, then from the third to the first computer.In the third sample the optimal order of collecting parts from computers can look like that: 1->3->4->6->2->5->7."], "Bear and Elections": ["https://codeforces.com/problemset/problem/574/A", "A. Bear and Electionstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLimak is a grizzly bear who desires power and adoration. He wants to win in upcoming elections and rule over the Bearland.There are n candidates, including Limak. We know how many citizens are going to vote for each candidate. Now i-th candidate would get ai votes. Limak is candidate number 1. To win in elections, he must get strictly more votes than any other candidate.Victory is more important than everything else so Limak decided to cheat. He will steal votes from his opponents by bribing some citizens. To bribe a citizen, Limak must give him or her one candy - citizens are bears and bears like candies. Limak doesn't have many candies and wonders - how many citizens does he have to bribe?InputThe first line contains single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100) - number of candidates.The second line contains n space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u20091000) - number of votes for each candidate. Limak is candidate number 1.Note that after bribing number of votes for some candidate might be zero or might be greater than 1000.OutputPrint the minimum number of citizens Limak must bribe to have strictly more votes than any other candidate.ExamplesInputCopy55 1 11 2 8OutputCopy4InputCopy41 8 8 8OutputCopy6InputCopy27 6OutputCopy0NoteIn the first sample Limak has 5 votes. One of the ways to achieve victory is to bribe 4 citizens who want to vote for the third candidate. Then numbers of votes would be 9,\u20091,\u20097,\u20092,\u20098 (Limak would have 9 votes). Alternatively, Limak could steal only 3 votes from the third candidate and 1 vote from the second candidate to get situation 9,\u20090,\u20098,\u20092,\u20098.In the second sample Limak will steal 2 votes from each candidate. Situation will be 7,\u20096,\u20096,\u20096.In the third sample Limak is a winner without bribing any citizen."], "Postcard": ["https://codeforces.com/problemset/problem/1099/C", "C. Postcardtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAndrey received a postcard from Irina. It contained only the words \"Hello, Andrey!\", and a strange string consisting of lowercase Latin letters, snowflakes and candy canes. Andrey thought that this string is an encrypted message, and decided to decrypt it.Andrey noticed that snowflakes and candy canes always stand after the letters, so he supposed that the message was encrypted as follows. Candy cane means that the letter before it can be removed, or can be left. A snowflake means that the letter before it can be removed, left, or repeated several times.For example, consider the following string:   This string can encode the message \u00abhappynewyear\u00bb. For this, candy canes and snowflakes should be used as follows:   candy cane 1: remove the letter w,  snowflake 1: repeat the letter p twice,  candy cane 2: leave the letter n,  snowflake 2: remove the letter w,  snowflake 3: leave the letter e.   Please note that the same string can encode different messages. For example, the string above can encode \u00abhayewyar\u00bb, \u00abhapppppynewwwwwyear\u00bb, and other messages.Andrey knows that messages from Irina usually have a length of kk letters. Help him to find out if a given string can encode a message of kk letters, and if so, give an example of such a message.InputThe first line contains the string received in the postcard. The string consists only of lowercase Latin letters, as well as the characters \u00ab*\u00bb and \u00ab?\u00bb, meaning snowflake and candy cone, respectively. These characters can only appear immediately after the letter. The length of the string does not exceed 200200.The second line contains an integer number kk (1\u2264k\u22642001\u2264k\u2264200), the required message length.OutputPrint any message of length kk that the given string can encode, or \u00abImpossible\u00bb if such a message does not exist.ExamplesInputCopyhw?ap*yn?eww*ye*ar\n12\nOutputCopyhappynewyear\nInputCopyab?a\n2\nOutputCopyaaInputCopyab?a\n3\nOutputCopyabaInputCopyababb\n5\nOutputCopyababbInputCopyab?a\n1\nOutputCopyImpossible"], "Vasya And Password": ["https://codeforces.com/problemset/problem/1051/A", "A. Vasya And Passwordtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya came up with a password to register for EatForces \u2014 a string ss. The password in EatForces should be a string, consisting of lowercase and uppercase Latin letters and digits.But since EatForces takes care of the security of its users, user passwords must contain at least one digit, at least one uppercase Latin letter and at least one lowercase Latin letter. For example, the passwords \"abaCABA12\", \"Z7q\" and \"3R24m\" are valid, and the passwords \"qwerty\", \"qwerty12345\" and \"Password\" are not. A substring of string ss is a string x=slsl+1\u2026sl+len\u22121(1\u2264l\u2264|s|,0\u2264len\u2264|s|\u2212l+1)x=slsl+1\u2026sl+len\u22121(1\u2264l\u2264|s|,0\u2264len\u2264|s|\u2212l+1). lenlen is the length of the substring. Note that the empty string is also considered a substring of ss, it has the length 00.Vasya's password, however, may come too weak for the security settings of EatForces. He likes his password, so he wants to replace some its substring with another string of the same length in order to satisfy the above conditions. This operation should be performed exactly once, and the chosen string should have the minimal possible length.Note that the length of ss should not change after the replacement of the substring, and the string itself should contain only lowercase and uppercase Latin letters and digits.InputThe first line contains a single integer TT (1\u2264T\u22641001\u2264T\u2264100) \u2014 the number of testcases.Each of the next TT lines contains the initial password s\u00a0(3\u2264|s|\u2264100)s\u00a0(3\u2264|s|\u2264100), consisting of lowercase and uppercase Latin letters and digits.Only T=1T=1 is allowed for hacks.OutputFor each testcase print a renewed password, which corresponds to given conditions. The length of the replaced substring is calculated as following: write down all the changed positions. If there are none, then the length is 00. Otherwise the length is the difference between the first and the last changed position plus one. For example, the length of the changed substring between the passwords \"abcdef\" \u2192\u2192 \"a7cdEf\" is 44, because the changed positions are 22 and 55, thus (5\u22122)+1=4(5\u22122)+1=4.It is guaranteed that such a password always exists.If there are several suitable passwords \u2014 output any of them.ExampleInputCopy2abcDCEhtQw27OutputCopyabcD4EhtQw27NoteIn the first example Vasya's password lacks a digit, he replaces substring \"C\" with \"4\" and gets password \"abcD4E\". That means, he changed the substring of length 1.In the second example Vasya's password is ok from the beginning, and nothing has to be changed. That is the same as replacing the empty substring with another empty substring (length 0)."], "Codehorses T-shirts": ["https://codeforces.com/problemset/problem/1000/A", "A. Codehorses T-shirtstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputCodehorses has just hosted the second Codehorses Cup. This year, the same as the previous one, organizers are giving T-shirts for the winners.The valid sizes of T-shirts are either \"M\" or from 00 to 33 \"X\" followed by \"S\" or \"L\". For example, sizes \"M\", \"XXS\", \"L\", \"XXXL\" are valid and \"XM\", \"Z\", \"XXXXL\" are not.There are nn winners to the cup for both the previous year and the current year. Ksenia has a list with the T-shirt sizes printed for the last year cup and is yet to send the new list to the printing office. Organizers want to distribute the prizes as soon as possible, so now Ksenia is required not to write the whole list from the scratch but just make some changes to the list of the previous year. In one second she can choose arbitrary position in any word and replace its character with some uppercase Latin letter. Ksenia can't remove or add letters in any of the words.What is the minimal number of seconds Ksenia is required to spend to change the last year list to the current one?The lists are unordered. That means, two lists are considered equal if and only if the number of occurrences of any string is the same in both lists.InputThe first line contains one integer nn (1\u2264n\u22641001\u2264n\u2264100) \u2014 the number of T-shirts.The ii-th of the next nn lines contains aiai \u2014 the size of the ii-th T-shirt of the list for the previous year.The ii-th of the next nn lines contains bibi \u2014 the size of the ii-th T-shirt of the list for the current year.It is guaranteed that all the sizes in the input are valid. It is also guaranteed that Ksenia can produce list bb from the list aa.OutputPrint the minimal number of seconds Ksenia is required to spend to change the last year list to the current one. If the lists are already equal, print 0.ExamplesInputCopy3XSXSMXLSXSOutputCopy2InputCopy2XXXLXXLXXLXXXSOutputCopy1InputCopy2MXSXSMOutputCopy0NoteIn the first example Ksenia can replace \"M\" with \"S\" and \"S\" in one of the occurrences of \"XS\" with \"L\".In the second example Ksenia should replace \"L\" in \"XXXL\" with \"S\".In the third example lists are equal."], "Letters Cyclic Shift": ["https://codeforces.com/problemset/problem/708/A", "A. Letters Cyclic Shifttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a non-empty string s consisting of lowercase English letters. You have to pick exactly one non-empty substring of s and shift all its letters 'z'  'y'  'x'  'b'  'a'  'z'. In other words, each character is replaced with the previous character of English alphabet and 'a' is replaced with 'z'.What is the lexicographically minimum string that can be obtained from s by performing this shift exactly once?InputThe only line of the input contains the string s (1\u2009\u2264\u2009|s|\u2009\u2264\u2009100\u2009000) consisting of lowercase English letters.OutputPrint the lexicographically minimum string that can be obtained from s by shifting letters of exactly one non-empty substring.ExamplesInputCopycodeforcesOutputCopybncdenqbdrInputCopyabacabaOutputCopyaaacabaNoteString s is lexicographically smaller than some other string t of the same length if there exists some 1\u2009\u2264\u2009i\u2009\u2264\u2009|s|, such that s1\u2009=\u2009t1,\u2009s2\u2009=\u2009t2,\u2009...,\u2009si\u2009-\u20091\u2009=\u2009ti\u2009-\u20091, and si\u2009<\u2009ti."], "Bear and Strings": ["https://codeforces.com/problemset/problem/385/B", "B. Bear and Stringstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe bear has a string s\u2009=\u2009s1s2... s|s| (record |s| is the string's length), consisting of lowercase English letters. The bear wants to count the number of such pairs of indices i,\u2009j (1\u2009\u2264\u2009i\u2009\u2264\u2009j\u2009\u2264\u2009|s|), that string x(i,\u2009j)\u2009=\u2009sisi\u2009+\u20091... sj contains at least one string \"bear\" as a substring.String x(i,\u2009j) contains string \"bear\", if there is such index k (i\u2009\u2264\u2009k\u2009\u2264\u2009j\u2009-\u20093), that sk\u2009=\u2009b, sk\u2009+\u20091\u2009=\u2009e, sk\u2009+\u20092\u2009=\u2009a, sk\u2009+\u20093\u2009=\u2009r.Help the bear cope with the given problem.InputThe first line contains a non-empty string s (1\u2009\u2264\u2009|s|\u2009\u2264\u20095000). It is guaranteed that the string only consists of lowercase English letters.OutputPrint a single number \u2014 the answer to the problem.ExamplesInputCopybearbtearOutputCopy6InputCopybearaabearcOutputCopy20NoteIn the first sample, the following pairs (i,\u2009j) match: (1,\u20094),\u2009(1,\u20095),\u2009(1,\u20096),\u2009(1,\u20097),\u2009(1,\u20098),\u2009(1,\u20099).In the second sample, the following pairs (i,\u2009j) match: (1,\u2009\u20094),\u2009(1,\u2009\u20095),\u2009(1,\u2009\u20096),\u2009(1,\u2009\u20097),\u2009(1,\u2009\u20098),\u2009(1,\u2009\u20099),\u2009(1,\u2009\u200910),\u2009(1,\u2009\u200911),\u2009(2,\u2009\u200910),\u2009(2,\u2009\u200911),\u2009(3,\u2009\u200910),\u2009(3,\u2009\u200911),\u2009(4,\u2009\u200910),\u2009(4,\u2009\u200911),\u2009(5,\u2009\u200910),\u2009(5,\u2009\u200911),\u2009(6,\u2009\u200910),\u2009(6,\u2009\u200911),\u2009(7,\u2009\u200910),\u2009(7,\u2009\u200911)."], "A Prosperous Lot": ["https://codeforces.com/problemset/problem/934/B", "B. A Prosperous Lottime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputApart from Nian, there is a daemon named Sui, which terrifies children and causes them to become sick. Parents give their children money wrapped in red packets and put them under the pillow, so that when Sui tries to approach them, it will be driven away by the fairies inside.Big Banban is hesitating over the amount of money to give out. He considers loops to be lucky since it symbolizes unity and harmony.He would like to find a positive integer n not greater than 1018, such that there are exactly k loops in the decimal representation of n, or determine that such n does not exist.A loop is a planar area enclosed by lines in the digits' decimal representation written in Arabic numerals. For example, there is one loop in digit 4, two loops in 8 and no loops in 5. Refer to the figure below for all exact forms.  InputThe first and only line contains an integer k (1\u2009\u2264\u2009k\u2009\u2264\u2009106)\u00a0\u2014 the desired number of loops.OutputOutput an integer\u00a0\u2014 if no such n exists, output -1; otherwise output any such n. In the latter case, your output should be a positive decimal integer not exceeding 1018.ExamplesInputCopy2OutputCopy462InputCopy6OutputCopy8080"], "Maximum of Maximums of Minimums": ["https://codeforces.com/problemset/problem/870/B", "B. Maximum of Maximums of Minimumstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array a1,\u2009a2,\u2009...,\u2009an consisting of n integers, and an integer k. You have to split the array into exactly k non-empty subsegments. You'll then compute the minimum integer on each subsegment, and take the maximum integer over the k obtained minimums. What is the maximum possible integer you can get?Definitions of subsegment and array splitting are given in notes.InputThe first line contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009\u2009105) \u2014 the size of the array a and the number of subsegments you have to split the array to.The second line contains n integers a1,\u2009\u2009a2,\u2009\u2009...,\u2009\u2009an (\u2009-\u2009109\u2009\u2009\u2264\u2009\u2009ai\u2009\u2264\u2009\u2009109).OutputPrint single integer \u2014 the maximum possible integer you can get if you split the array into k non-empty subsegments and take maximum of minimums on the subsegments.ExamplesInputCopy5 21 2 3 4 5OutputCopy5InputCopy5 1-4 -5 -3 -2 -1OutputCopy-5NoteA subsegment [l,\u2009\u2009r] (l\u2009\u2264\u2009r) of array a is the sequence al,\u2009\u2009al\u2009+\u20091,\u2009\u2009...,\u2009\u2009ar.Splitting of array a of n elements into k subsegments [l1,\u2009r1], [l2,\u2009r2], ..., [lk,\u2009rk] (l1\u2009=\u20091, rk\u2009=\u2009n, li\u2009=\u2009ri\u2009-\u20091\u2009+\u20091 for all i\u2009>\u20091) is k sequences (al1,\u2009...,\u2009ar1),\u2009...,\u2009(alk,\u2009...,\u2009ark).In the first example you should split the array into subsegments [1,\u20094] and [5,\u20095] that results in sequences (1,\u20092,\u20093,\u20094) and (5). The minimums are min(1,\u20092,\u20093,\u20094)\u2009=\u20091 and min(5)\u2009=\u20095. The resulting maximum is max(1,\u20095)\u2009=\u20095. It is obvious that you can't reach greater result.In the second example the only option you have is to split the array into one subsegment [1,\u20095], that results in one sequence (\u2009-\u20094,\u2009\u2009-\u20095,\u2009\u2009-\u20093,\u2009\u2009-\u20092,\u2009\u2009-\u20091). The only minimum is min(\u2009-\u20094,\u2009\u2009-\u20095,\u2009\u2009-\u20093,\u2009\u2009-\u20092,\u2009\u2009-\u20091)\u2009=\u2009\u2009-\u20095. The resulting maximum is \u2009-\u20095."], "Mahmoud and Ehab and the message": ["https://codeforces.com/problemset/problem/959/B", "B. Mahmoud and Ehab and the messagetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMahmoud wants to send a message to his friend Ehab. Their language consists of n words numbered from 1 to n. Some words have the same meaning so there are k groups of words such that all the words in some group have the same meaning.Mahmoud knows that the i-th word can be sent with cost ai. For each word in his message, Mahmoud can either replace it with another word of the same meaning or leave it as it is. Can you help Mahmoud determine the minimum cost of sending the message?The cost of sending the message is the sum of the costs of sending every word in it.InputThe first line of input contains integers n, k and m (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20091\u2009\u2264\u2009m\u2009\u2264\u2009105)\u00a0\u2014 the number of words in their language, the number of groups of words, and the number of words in Mahmoud's message respectively.The second line contains n strings consisting of lowercase English letters of length not exceeding 20 which represent the words. It's guaranteed that the words are distinct.The third line contains n integers a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) where ai is the cost of sending the i-th word.The next k lines describe the groups of words of same meaning. The next k lines each start with an integer x (1\u2009\u2264\u2009x\u2009\u2264\u2009n) which means that there are x words in this group, followed by x integers which represent the indices of words in this group. It's guaranteed that each word appears in exactly one group.The next line contains m space-separated words which represent Mahmoud's message. Each of these words appears in the list of language's words.OutputThe only line should contain the minimum cost to send the message after replacing some words (maybe none) with some words of the same meaning.ExamplesInputCopy5 4 4i loser am the second100 1 1 5 101 11 32 2 51 4i am the secondOutputCopy107InputCopy5 4 4i loser am the second100 20 1 5 101 11 32 2 51 4i am the secondOutputCopy116NoteIn the first sample, Mahmoud should replace the word \"second\" with the word \"loser\" because it has less cost so the cost will be 100+1+5+1=107.In the second sample, Mahmoud shouldn't do any replacement so the cost will be 100+1+5+10=116."], "Conan and Agasa play a Card Game": ["https://codeforces.com/problemset/problem/914/B", "B. Conan and Agasa play a Card Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEdogawa Conan got tired of solving cases, and invited his friend, Professor Agasa, over. They decided to play a game of cards. Conan has n cards, and the i-th card has a number ai written on it.They take turns playing, starting with Conan. In each turn, the player chooses a card and removes it. Also, he removes all cards having a number strictly lesser than the number on the chosen card. Formally, if the player chooses the i-th card, he removes that card and removes the j-th card for all j such that aj\u2009<\u2009ai.A player loses if he cannot make a move on his turn, that is, he loses if there are no cards left. Predict the outcome of the game, assuming both players play optimally.InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105)\u00a0\u2014 the number of cards Conan has. The next line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105), where ai is the number on the i-th card.OutputIf Conan wins, print \"Conan\" (without quotes), otherwise print \"Agasa\" (without quotes).ExamplesInputCopy34 5 7OutputCopyConanInputCopy21 1OutputCopyAgasaNoteIn the first example, Conan can just choose the card having number 7 on it and hence remove all the cards. After that, there are no cards left on Agasa's turn.In the second example, no matter which card Conan chooses, there will be one one card left, which Agasa can choose. After that, there are no cards left when it becomes Conan's turn again."], "Numbers on the Chessboard": ["https://codeforces.com/problemset/problem/1027/B", "B. Numbers on the Chessboardtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a chessboard of size n\u00d7nn\u00d7n. It is filled with numbers from 11 to n2n2 in the following way: the first \u2308n22\u2309\u2308n22\u2309 numbers from 11 to \u2308n22\u2309\u2308n22\u2309 are written in the cells with even sum of coordinates from left to right from top to bottom. The rest n2\u2212\u2308n22\u2309n2\u2212\u2308n22\u2309 numbers from \u2308n22\u2309+1\u2308n22\u2309+1 to n2n2 are written in the cells with odd sum of coordinates from left to right from top to bottom. The operation \u2308xy\u2309\u2308xy\u2309 means division xx by yy rounded up.For example, the left board on the following picture is the chessboard which is given for n=4n=4 and the right board is the chessboard which is given for n=5n=5.  You are given qq queries. The ii-th query is described as a pair xi,yixi,yi. The answer to the ii-th query is the number written in the cell xi,yixi,yi (xixi is the row, yiyi is the column). Rows and columns are numbered from 11 to nn.InputThe first line contains two integers nn and qq (1\u2264n\u22641091\u2264n\u2264109, 1\u2264q\u22641051\u2264q\u2264105) \u2014 the size of the board and the number of queries.The next qq lines contain two integers each. The ii-th line contains two integers xi,yixi,yi (1\u2264xi,yi\u2264n1\u2264xi,yi\u2264n) \u2014 description of the ii-th query.OutputFor each query from 11 to qq print the answer to this query. The answer to the ii-th query is the number written in the cell xi,yixi,yi (xixi is the row, yiyi is the column). Rows and columns are numbered from 11 to nn. Queries are numbered from 11 to qq in order of the input.ExamplesInputCopy4 51 14 44 33 22 4OutputCopy1816134InputCopy5 42 14 23 33 4OutputCopy169720NoteAnswers to the queries from examples are on the board in the picture from the problem statement."], "Maxim Buys an Apartment": ["https://codeforces.com/problemset/problem/854/B", "B. Maxim Buys an Apartmenttime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputMaxim wants to buy an apartment in a new house at Line Avenue of Metropolis. The house has n apartments that are numbered from 1 to n and are arranged in a row. Two apartments are adjacent if their indices differ by 1. Some of the apartments can already be inhabited, others are available for sale.Maxim often visits his neighbors, so apartment is good for him if it is available for sale and there is at least one already inhabited apartment adjacent to it. Maxim knows that there are exactly k already inhabited apartments, but he doesn't know their indices yet.Find out what could be the minimum possible and the maximum possible number of apartments that are good for Maxim.InputThe only line of the input contains two integers: n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009109, 0\u2009\u2264\u2009k\u2009\u2264\u2009n).OutputPrint the minimum possible and the maximum possible number of apartments good for Maxim.ExampleInputCopy6 3OutputCopy1 3NoteIn the sample test, the number of good apartments could be minimum possible if, for example, apartments with indices 1, 2 and 3 were inhabited. In this case only apartment 4 is good. The maximum possible number could be, for example, if apartments with indices 1, 3 and 5 were inhabited. In this case all other apartments: 2, 4 and 6 are good."], "Simple Molecules": ["https://codeforces.com/problemset/problem/344/B", "B. Simple Moleculestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMad scientist Mike is busy carrying out experiments in chemistry. Today he will attempt to join three atoms into one molecule.A molecule consists of atoms, with some pairs of atoms connected by atomic bonds. Each atom has a valence number \u2014 the number of bonds the atom must form with other atoms. An atom can form one or multiple bonds with any other atom, but it cannot form a bond with itself. The number of bonds of an atom in the molecule must be equal to its valence number.  Mike knows valence numbers of the three atoms. Find a molecule that can be built from these atoms according to the stated rules, or determine that it is impossible.InputThe single line of the input contains three space-separated integers a, b and c (1\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u2009106) \u2014 the valence numbers of the given atoms.OutputIf such a molecule can be built, print three space-separated integers \u2014 the number of bonds between the 1-st and the 2-nd, the 2-nd and the 3-rd, the 3-rd and the 1-st atoms, correspondingly. If there are multiple solutions, output any of them. If there is no solution, print \"Impossible\" (without the quotes).ExamplesInputCopy1 1 2OutputCopy0 1 1InputCopy3 4 5OutputCopy1 3 2InputCopy4 1 1OutputCopyImpossibleNoteThe first sample corresponds to the first figure. There are no bonds between atoms 1 and 2 in this case.The second sample corresponds to the second figure. There is one or more bonds between each pair of atoms.The third sample corresponds to the third figure. There is no solution, because an atom cannot form bonds with itself.The configuration in the fourth figure is impossible as each atom must have at least one atomic bond."], "Worms Evolution": ["https://codeforces.com/problemset/problem/31/A", "A. Worms Evolutiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputProfessor Vasechkin is studying evolution of worms. Recently he put forward hypotheses that all worms evolve by division. There are n forms of worms. Worms of these forms have lengths a1, a2, ..., an. To prove his theory, professor needs to find 3 different forms that the length of the first form is equal to sum of lengths of the other two forms. Help him to do this.InputThe first line contains integer n (3\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 amount of worm's forms. The second line contains n space-separated integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u20091000) \u2014 lengths of worms of each form.OutputOutput 3 distinct integers i j k (1\u2009\u2264\u2009i,\u2009j,\u2009k\u2009\u2264\u2009n) \u2014 such indexes of worm's forms that ai\u2009=\u2009aj\u2009+\u2009ak. If there is no such triple, output -1. If there are several solutions, output any of them. It possible that aj\u2009=\u2009ak.ExamplesInputCopy51 2 3 5 7OutputCopy3 2 1InputCopy51 8 1 5 1OutputCopy-1"], "Single Wildcard Pattern Matching": ["https://codeforces.com/problemset/problem/1023/A", "A. Single Wildcard Pattern Matchingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two strings ss and tt. The string ss consists of lowercase Latin letters and at most one wildcard character '*', the string tt consists only of lowercase Latin letters. The length of the string ss equals nn, the length of the string tt equals mm.The wildcard character '*' in the string ss (if any) can be replaced with an arbitrary sequence (possibly empty) of lowercase Latin letters. No other character of ss can be replaced with anything. If it is possible to replace a wildcard character '*' in ss to obtain a string tt, then the string tt matches the pattern ss.For example, if s=s=\"aba*aba\" then the following strings match it \"abaaba\", \"abacaba\" and \"abazzzaba\", but the following strings do not match: \"ababa\", \"abcaaba\", \"codeforces\", \"aba1aba\", \"aba?aba\".If the given string tt matches the given string ss, print \"YES\", otherwise print \"NO\".InputThe first line contains two integers nn and mm (1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105) \u2014 the length of the string ss and the length of the string tt, respectively.The second line contains string ss of length nn, which consists of lowercase Latin letters and at most one wildcard character '*'.The third line contains string tt of length mm, which consists only of lowercase Latin letters.OutputPrint \"YES\" (without quotes), if you can obtain the string tt from the string ss. Otherwise print \"NO\" (without quotes).ExamplesInputCopy6 10code*scodeforcesOutputCopyYESInputCopy6 5vk*cupvkcupOutputCopyYESInputCopy1 1vkOutputCopyNOInputCopy9 6gfgf*gfgfgfgfgfOutputCopyNONoteIn the first example a wildcard character '*' can be replaced with a string \"force\". So the string ss after this replacement is \"codeforces\" and the answer is \"YES\".In the second example a wildcard character '*' can be replaced with an empty string. So the string ss after this replacement is \"vkcup\" and the answer is \"YES\".There is no wildcard character '*' in the third example and the strings \"v\" and \"k\" are different so the answer is \"NO\".In the fourth example there is no such replacement of a wildcard character '*' that you can obtain the string tt so the answer is \"NO\"."], "Vasya and Book": ["https://codeforces.com/problemset/problem/1082/A", "A. Vasya and Booktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya is reading a e-book. The file of the book consists of nn pages, numbered from 11 to nn. The screen is currently displaying the contents of page xx, and Vasya wants to read the page yy. There are two buttons on the book which allow Vasya to scroll dd pages forwards or backwards (but he cannot scroll outside the book). For example, if the book consists of 1010 pages, and d=3d=3, then from the first page Vasya can scroll to the first or to the fourth page by pressing one of the buttons; from the second page \u2014 to the first or to the fifth; from the sixth page \u2014 to the third or to the ninth; from the eighth \u2014 to the fifth or to the tenth.Help Vasya to calculate the minimum number of times he needs to press a button to move to page yy.InputThe first line contains one integer tt (1\u2264t\u22641031\u2264t\u2264103) \u2014 the number of testcases.Each testcase is denoted by a line containing four integers nn, xx, yy, dd (1\u2264n,d\u22641091\u2264n,d\u2264109, 1\u2264x,y\u2264n1\u2264x,y\u2264n) \u2014 the number of pages, the starting page, the desired page, and the number of pages scrolled by pressing one button, respectively.OutputPrint one line for each test.If Vasya can move from page xx to page yy, print the minimum number of times he needs to press a button to do it. Otherwise print \u22121\u22121.ExampleInputCopy3\n10 4 5 2\n5 1 3 4\n20 4 19 3\nOutputCopy4\n-1\n5\nNoteIn the first test case the optimal sequence is: 4\u21922\u21921\u21923\u219254\u21922\u21921\u21923\u21925.In the second test case it is possible to get to pages 11 and 55.In the third test case the optimal sequence is: 4\u21927\u219210\u219213\u219216\u2192194\u21927\u219210\u219213\u219216\u219219."], "Wrath": ["https://codeforces.com/problemset/problem/892/B", "B. Wrathtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHands that shed innocent blood!There are n guilty people in a line, the i-th of them holds a claw with length Li. The bell rings and every person kills some of people in front of him. All people kill others at the same time. Namely, the i-th person kills the j-th person if and only if j\u2009<\u2009i and j\u2009\u2265\u2009i\u2009-\u2009Li.You are given lengths of the claws. You need to find the total number of alive people after the bell rings.InputThe first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009106) \u2014 the number of guilty people.Second line contains n space-separated integers L1,\u2009L2,\u2009...,\u2009Ln (0\u2009\u2264\u2009Li\u2009\u2264\u2009109), where Li is the length of the i-th person's claw.OutputPrint one integer \u2014 the total number of alive people after the bell rings.ExamplesInputCopy40 1 0 10OutputCopy1InputCopy20 0OutputCopy2InputCopy101 1 3 0 0 0 2 1 0 3OutputCopy3NoteIn first sample the last person kills everyone in front of him."], "Lesha and array splitting": ["https://codeforces.com/problemset/problem/754/A", "A. Lesha and array splittingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne spring day on his way to university Lesha found an array A. Lesha likes to split arrays into several parts. This time Lesha decided to split the array A into several, possibly one, new arrays so that the sum of elements in each of the new arrays is not zero. One more condition is that if we place the new arrays one after another they will form the old array A.Lesha is tired now so he asked you to split the array. Help Lesha!InputThe first line contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 the number of elements in the array A.The next line contains n integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009103\u2009\u2264\u2009ai\u2009\u2264\u2009103)\u00a0\u2014 the elements of the array A.OutputIf it is not possible to split the array A and satisfy all the constraints, print single line containing \"NO\" (without quotes).Otherwise in the first line print \"YES\" (without quotes). In the next line print single integer k\u00a0\u2014 the number of new arrays. In each of the next k lines print two integers li and ri which denote the subarray A[li... ri] of the initial array A being the i-th new array. Integers li, ri should satisfy the following conditions:  l1\u2009=\u20091  rk\u2009=\u2009n  ri\u2009+\u20091\u2009=\u2009li\u2009+\u20091 for each 1\u2009\u2264\u2009i\u2009<\u2009k. If there are multiple answers, print any of them.ExamplesInputCopy31 2 -3OutputCopyYES21 23 3InputCopy89 -12 3 4 -4 -10 7 3OutputCopyYES21 23 8InputCopy10OutputCopyNOInputCopy41 2 3 -5OutputCopyYES41 12 23 34 4"], "Micro-World": ["https://codeforces.com/problemset/problem/990/B", "B. Micro-Worldtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a Petri dish with bacteria and you are preparing to dive into the harsh micro-world. But, unfortunately, you don't have any microscope nearby, so you can't watch them.You know that you have nn bacteria in the Petri dish and size of the ii-th bacteria is aiai. Also you know intergalactic positive integer constant KK.The ii-th bacteria can swallow the jj-th bacteria if and only if ai>ajai>aj and ai\u2264aj+Kai\u2264aj+K. The jj-th bacteria disappear, but the ii-th bacteria doesn't change its size. The bacteria can perform multiple swallows. On each swallow operation any bacteria ii can swallow any bacteria jj if ai>ajai>aj and ai\u2264aj+Kai\u2264aj+K. The swallow operations go one after another.For example, the sequence of bacteria sizes a=[101,53,42,102,101,55,54]a=[101,53,42,102,101,55,54] and K=1K=1. The one of possible sequences of swallows is: [101,53,42,102,101\u2013\u2013\u2013\u2013,55,54][101,53,42,102,101_,55,54] \u2192\u2192 [101,53\u2013\u2013\u2013,42,102,55,54][101,53_,42,102,55,54] \u2192\u2192 [101\u2013\u2013\u2013\u2013,42,102,55,54][101_,42,102,55,54] \u2192\u2192 [42,102,55,54\u2013\u2013\u2013][42,102,55,54_] \u2192\u2192 [42,102,55][42,102,55]. In total there are 33 bacteria remained in the Petri dish.Since you don't have a microscope, you can only guess, what the minimal possible number of bacteria can remain in your Petri dish when you finally will find any microscope.InputThe first line contains two space separated positive integers nn and KK (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 1\u2264K\u22641061\u2264K\u2264106) \u2014 number of bacteria and intergalactic constant KK.The second line contains nn space separated integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641061\u2264ai\u2264106) \u2014 sizes of bacteria you have.OutputPrint the only integer \u2014 minimal possible number of bacteria can remain.ExamplesInputCopy7 1101 53 42 102 101 55 54OutputCopy3InputCopy6 520 15 10 15 20 25OutputCopy1InputCopy7 10000001 1 1 1 1 1 1OutputCopy7NoteThe first example is clarified in the problem statement.In the second example an optimal possible sequence of swallows is: [20,15,10,15,20\u2013\u2013\u2013,25][20,15,10,15,20_,25] \u2192\u2192 [20,15,10,15\u2013\u2013\u2013,25][20,15,10,15_,25] \u2192\u2192 [20,15,10\u2013\u2013\u2013,25][20,15,10_,25] \u2192\u2192 [20,15\u2013\u2013\u2013,25][20,15_,25] \u2192\u2192 [20\u2013\u2013\u2013,25][20_,25] \u2192\u2192 [25][25].In the third example no bacteria can swallow any other bacteria."], "Unary": ["https://codeforces.com/problemset/problem/133/B", "B. Unarytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputUnary is a minimalistic Brainfuck dialect in which programs are written using only one token. Brainfuck programs use 8 commands: \"+\", \"-\", \"[\", \"]\", \"<\", \">\", \".\" and \",\" (their meaning is not important for the purposes of this problem). Unary programs are created from Brainfuck programs using the following algorithm. First, replace each command with a corresponding binary code, using the following conversion table:   \">\" \u2009\u2192\u2009 1000,  \"<\" \u2009\u2192\u2009 1001,  \"+\" \u2009\u2192\u2009 1010,  \"-\" \u2009\u2192\u2009 1011,  \".\" \u2009\u2192\u2009 1100,  \",\" \u2009\u2192\u2009 1101,  \"[\" \u2009\u2192\u2009 1110,  \"]\" \u2009\u2192\u2009 1111. Next, concatenate the resulting binary codes into one binary number in the same order as in the program. Finally, write this number using unary numeral system \u2014 this is the Unary program equivalent to the original Brainfuck one.You are given a Brainfuck program. Your task is to calculate the size of the equivalent Unary program, and print it modulo 1000003 (106\u2009+\u20093).InputThe input will consist of a single line p which gives a Brainfuck program. String p will contain between 1 and 100 characters, inclusive. Each character of p will be \"+\", \"-\", \"[\", \"]\", \"<\", \">\", \".\" or \",\".OutputOutput the size of the equivalent Unary program modulo 1000003 (106\u2009+\u20093).ExamplesInputCopy,.OutputCopy220InputCopy++++[>,.<-]OutputCopy61425NoteTo write a number n in unary numeral system, one simply has to write 1 n times. For example, 5 written in unary system will be 11111.In the first example replacing Brainfuck commands with binary code will give us 1101 1100. After we concatenate the codes, we'll get 11011100 in binary system, or 220 in decimal. That's exactly the number of tokens in the equivalent Unary program."], "Unnatural Conditions": ["https://codeforces.com/problemset/problem/1028/B", "B. Unnatural Conditionstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet s(x)s(x) be sum of digits in decimal representation of positive integer xx. Given two integers nn and mm, find some positive integers aa and bb such that   s(a)\u2265ns(a)\u2265n,  s(b)\u2265ns(b)\u2265n,  s(a+b)\u2264ms(a+b)\u2264m. InputThe only line of input contain two integers nn and mm (1\u2264n,m\u226411291\u2264n,m\u22641129).OutputPrint two lines, one for decimal representation of aa and one for decimal representation of bb. Both numbers must not contain leading zeros and must have length no more than 22302230.ExamplesInputCopy6 5OutputCopy6 7InputCopy8 16OutputCopy35 53NoteIn the first sample, we have n=6n=6 and m=5m=5. One valid solution is a=6a=6, b=7b=7. Indeed, we have s(a)=6\u2265ns(a)=6\u2265n and s(b)=7\u2265ns(b)=7\u2265n, and also s(a+b)=s(13)=4\u2264ms(a+b)=s(13)=4\u2264m."], "Parallelogram is Back": ["https://codeforces.com/problemset/problem/749/B", "B. Parallelogram is Backtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLong time ago Alex created an interesting problem about parallelogram. The input data for this problem contained four integer points on the Cartesian plane, that defined the set of vertices of some non-degenerate (positive area) parallelogram. Points not necessary were given in the order of clockwise or counterclockwise traversal.Alex had very nice test for this problem, but is somehow happened that the last line of the input was lost and now he has only three out of four points of the original parallelogram. He remembers that test was so good that he asks you to restore it given only these three points.InputThe input consists of three lines, each containing a pair of integer coordinates xi and yi (\u2009-\u20091000\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u20091000). It's guaranteed that these three points do not lie on the same line and no two of them coincide.OutputFirst print integer k\u00a0\u2014 the number of ways to add one new integer point such that the obtained set defines some parallelogram of positive area. There is no requirement for the points to be arranged in any special order (like traversal), they just define the set of vertices.Then print k lines, each containing a pair of integer\u00a0\u2014 possible coordinates of the fourth point.ExampleInputCopy0 01 00 1OutputCopy31 -1-1 11 1NoteIf you need clarification of what parallelogram is, please check Wikipedia page:https://en.wikipedia.org/wiki/Parallelogram"], "Points on the line": ["https://codeforces.com/problemset/problem/940/A", "A. Points on the linetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputWe've got no test cases. A big olympiad is coming up. But the problemsetters' number one priority should be adding another problem to the round. The diameter of a multiset of points on the line is the largest distance between two points from this set. For example, the diameter of the multiset {1,\u20093,\u20092,\u20091} is 2.Diameter of multiset consisting of one point is 0.You are given n points on the line. What is the minimum number of points you have to remove, so that the diameter of the multiset of the remaining points will not exceed d?InputThe first line contains two integers n and d (1\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20090\u2009\u2264\u2009d\u2009\u2264\u2009100)\u00a0\u2014 the amount of points and the maximum allowed diameter respectively.The second line contains n space separated integers (1\u2009\u2264\u2009xi\u2009\u2264\u2009100)\u00a0\u2014 the coordinates of the points.OutputOutput a single integer\u00a0\u2014 the minimum number of points you have to remove.ExamplesInputCopy3 12 1 4OutputCopy1InputCopy3 07 7 7OutputCopy0InputCopy6 31 3 4 6 9 10OutputCopy3NoteIn the first test case the optimal strategy is to remove the point with coordinate 4. The remaining points will have coordinates 1 and 2, so the diameter will be equal to 2\u2009-\u20091\u2009=\u20091.In the second test case the diameter is equal to 0, so its is unnecessary to remove any points. In the third test case the optimal strategy is to remove points with coordinates 1, 9 and 10. The remaining points will have coordinates 3, 4 and 6, so the diameter will be equal to 6\u2009-\u20093\u2009=\u20093."], "New Year and Buggy Bot": ["https://codeforces.com/problemset/problem/908/B", "B. New Year and Buggy Bottime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBob programmed a robot to navigate through a 2d maze.The maze has some obstacles. Empty cells are denoted by the character '.', where obstacles are denoted by '#'.There is a single robot in the maze. Its start position is denoted with the character 'S'. This position has no obstacle in it. There is also a single exit in the maze. Its position is denoted with the character 'E'. This position has no obstacle in it.The robot can only move up, left, right, or down.When Bob programmed the robot, he wrote down a string of digits consisting of the digits 0 to 3, inclusive. He intended for each digit to correspond to a distinct direction, and the robot would follow the directions in order to reach the exit. Unfortunately, he forgot to actually assign the directions to digits.The robot will choose some random mapping of digits to distinct directions. The robot will map distinct digits to distinct directions. The robot will then follow the instructions according to the given string in order and chosen mapping. If an instruction would lead the robot to go off the edge of the maze or hit an obstacle, the robot will crash and break down. If the robot reaches the exit at any point, then the robot will stop following any further instructions.Bob is having trouble debugging his robot, so he would like to determine the number of mappings of digits to directions that would lead the robot to the exit.InputThe first line of input will contain two integers n and m (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200950), denoting the dimensions of the maze.The next n lines will contain exactly m characters each, denoting the maze.Each character of the maze will be '.', '#', 'S', or 'E'.There will be exactly one 'S' and exactly one 'E' in the maze.The last line will contain a single string s (1\u2009\u2264\u2009|s|\u2009\u2264\u2009100)\u00a0\u2014 the instructions given to the robot. Each character of s is a digit from 0 to 3.OutputPrint a single integer, the number of mappings of digits to directions that will lead the robot to the exit.ExamplesInputCopy5 6.....#S....#.#.....#.......E..333300012OutputCopy1InputCopy6 6..............SE....................01232123212302123021OutputCopy14InputCopy5 3....S.###.E....3OutputCopy0NoteFor the first sample, the only valid mapping is , where D is down, L is left, U is up, R is right."], "Check the string": ["https://codeforces.com/problemset/problem/960/A", "A. Check the stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA has a string consisting of some number of lowercase English letters 'a'. He gives it to his friend B who appends some number of letters 'b' to the end of this string. Since both A and B like the characters 'a' and 'b', they have made sure that at this point, at least one 'a' and one 'b' exist in the string.B now gives this string to C and he appends some number of letters 'c' to the end of the string. However, since C is a good friend of A and B, the number of letters 'c' he appends is equal to the number of 'a' or to the number of 'b' in the string. It is also possible that the number of letters 'c' equals both to the number of letters 'a' and to the number of letters 'b' at the same time.You have a string in your hands, and you want to check if it is possible to obtain the string in this way or not. If it is possible to obtain the string, print \"YES\", otherwise print \"NO\" (without the quotes).InputThe first and only line consists of a string SS (1\u2264|S|\u226450001\u2264|S|\u22645000). It is guaranteed that the string will only consist of the lowercase English letters 'a', 'b', 'c'.OutputPrint \"YES\" or \"NO\", according to the condition.ExamplesInputCopyaaabcccOutputCopyYESInputCopybbaccOutputCopyNOInputCopyaabcOutputCopyYESNoteConsider first example: the number of 'c' is equal to the number of 'a'. Consider second example: although the number of 'c' is equal to the number of the 'b', the order is not correct.Consider third example: the number of 'c' is equal to the number of 'b'."], "Rebranding": ["https://codeforces.com/problemset/problem/591/B", "B. Rebrandingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe name of one small but proud corporation consists of n lowercase English letters. The Corporation has decided to try rebranding\u00a0\u2014 an active marketing strategy, that includes a set of measures to change either the brand (both for the company and the goods it produces) or its components: the name, the logo, the slogan. They decided to start with the name.For this purpose the corporation has consecutively hired m designers. Once a company hires the i-th designer, he immediately contributes to the creation of a new corporation name as follows: he takes the newest version of the name and replaces all the letters xi by yi, and all the letters yi by xi. This results in the new version. It is possible that some of these letters do no occur in the string. It may also happen that xi coincides with yi. The version of the name received after the work of the last designer becomes the new name of the corporation.Manager Arkady has recently got a job in this company, but is already soaked in the spirit of teamwork and is very worried about the success of the rebranding. Naturally, he can't wait to find out what is the new name the Corporation will receive.Satisfy Arkady's curiosity and tell him the final version of the name.InputThe first line of the input contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the length of the initial name and the number of designers hired, respectively.The second line consists of n lowercase English letters and represents the original name of the corporation.Next m lines contain the descriptions of the designers' actions: the i-th of them contains two space-separated lowercase English letters xi and yi.OutputPrint the new name of the corporation.ExamplesInputCopy6 1policep mOutputCopymoliceInputCopy11 6abacabadabaa bb ca de gf ab bOutputCopycdcbcdcfcdcNoteIn the second sample the name of the corporation consecutively changes as follows: "], "Alyona and flowers": ["https://codeforces.com/problemset/problem/740/B", "B. Alyona and flowerstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Alyona is celebrating Happy Birthday! Her mother has an array of n flowers. Each flower has some mood, the mood of i-th flower is ai. The mood can be positive, zero or negative.Let's define a subarray as a segment of consecutive flowers. The mother suggested some set of subarrays. Alyona wants to choose several of the subarrays suggested by her mother. After that, each of the flowers will add to the girl's happiness its mood multiplied by the number of chosen subarrays the flower is in.For example, consider the case when the mother has 5 flowers, and their moods are equal to 1,\u2009\u2009-\u20092,\u20091,\u20093,\u2009\u2009-\u20094. Suppose the mother suggested subarrays (1,\u2009\u2009-\u20092), (3,\u2009\u2009-\u20094), (1,\u20093), (1,\u2009\u2009-\u20092,\u20091,\u20093). Then if the girl chooses the third and the fourth subarrays then:   the first flower adds 1\u00b71\u2009=\u20091 to the girl's happiness, because he is in one of chosen subarrays,  the second flower adds (\u2009-\u20092)\u00b71\u2009=\u2009\u2009-\u20092, because he is in one of chosen subarrays,  the third flower adds 1\u00b72\u2009=\u20092, because he is in two of chosen subarrays,  the fourth flower adds 3\u00b72\u2009=\u20096, because he is in two of chosen subarrays,  the fifth flower adds (\u2009-\u20094)\u00b70\u2009=\u20090, because he is in no chosen subarrays. Thus, in total 1\u2009+\u2009(\u2009-\u20092)\u2009+\u20092\u2009+\u20096\u2009+\u20090\u2009=\u20097 is added to the girl's happiness. Alyona wants to choose such subarrays from those suggested by the mother that the value added to her happiness would be as large as possible. Help her do this!Alyona can choose any number of the subarrays, even 0 or all suggested by her mother.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100)\u00a0\u2014 the number of flowers and the number of subarrays suggested by the mother.The second line contains the flowers moods\u00a0\u2014 n integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009100\u2009\u2264\u2009ai\u2009\u2264\u2009100).The next m lines contain the description of the subarrays suggested by the mother. The i-th of these lines contain two integers li and ri (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009n) denoting the subarray a[li],\u2009a[li\u2009+\u20091],\u2009...,\u2009a[ri].Each subarray can encounter more than once.OutputPrint single integer\u00a0\u2014 the maximum possible value added to the Alyona's happiness.ExamplesInputCopy5 41 -2 1 3 -41 24 53 41 4OutputCopy7InputCopy4 31 2 3 41 32 41 1OutputCopy16InputCopy2 2-1 -21 11 2OutputCopy0NoteThe first example is the situation described in the statements.In the second example Alyona should choose all subarrays.The third example has answer 0 because Alyona can choose none of the subarrays."], "Restaurant Tables": ["https://codeforces.com/problemset/problem/828/A", "A. Restaurant Tablestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn a small restaurant there are a tables for one person and b tables for two persons. It it known that n groups of people come today, each consisting of one or two people. If a group consist of one person, it is seated at a vacant one-seater table. If there are none of them, it is seated at a vacant two-seater table. If there are none of them, it is seated at a two-seater table occupied by single person. If there are still none of them, the restaurant denies service to this group.If a group consist of two people, it is seated at a vacant two-seater table. If there are none of them, the restaurant denies service to this group.You are given a chronological order of groups coming. You are to determine the total number of people the restaurant denies service to.InputThe first line contains three integers n, a and b (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105, 1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u20092\u00b7105) \u2014 the number of groups coming to the restaurant, the number of one-seater and the number of two-seater tables.The second line contains a sequence of integers t1,\u2009t2,\u2009...,\u2009tn (1\u2009\u2264\u2009ti\u2009\u2264\u20092) \u2014 the description of clients in chronological order. If ti is equal to one, then the i-th group consists of one person, otherwise the i-th group consists of two people.OutputPrint the total number of people the restaurant denies service to.ExamplesInputCopy4 1 21 2 1 1OutputCopy0InputCopy4 1 11 1 2 1OutputCopy2NoteIn the first example the first group consists of one person, it is seated at a vacant one-seater table. The next group occupies a whole two-seater table. The third group consists of one person, it occupies one place at the remaining two-seater table. The fourth group consists of one person, he is seated at the remaining seat at the two-seater table. Thus, all clients are served.In the second example the first group consists of one person, it is seated at the vacant one-seater table. The next group consists of one person, it occupies one place at the two-seater table. It's impossible to seat the next group of two people, so the restaurant denies service to them. The fourth group consists of one person, he is seated at the remaining seat at the two-seater table. Thus, the restaurant denies service to 2 clients. "], "Magic Spheres": ["https://codeforces.com/problemset/problem/606/A", "A. Magic Spherestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputCarl is a beginner magician. He has a blue, b violet and c orange magic spheres. In one move he can transform two spheres of the same color into one sphere of any other color. To make a spell that has never been seen before, he needs at least x blue, y violet and z orange spheres. Can he get them (possible, in multiple actions)?InputThe first line of the input contains three integers a, b and c (0\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the number of blue, violet and orange spheres that are in the magician's disposal.The second line of the input contains three integers, x, y and z (0\u2009\u2264\u2009x,\u2009y,\u2009z\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the number of blue, violet and orange spheres that he needs to get.OutputIf the wizard is able to obtain the required numbers of spheres, print \"Yes\". Otherwise, print \"No\".ExamplesInputCopy4 4 02 1 2OutputCopyYesInputCopy5 6 12 7 2OutputCopyNoInputCopy3 3 32 2 2OutputCopyYesNoteIn the first sample the wizard has 4 blue and 4 violet spheres. In his first action he can turn two blue spheres into one violet one. After that he will have 2 blue and 5 violet spheres. Then he turns 4 violet spheres into 2 orange spheres and he ends up with 2 blue, 1 violet and 2 orange spheres, which is exactly what he needs."], "Equations of Mathematical Magic": ["https://codeforces.com/problemset/problem/1064/B", "B. Equations of Mathematical Magictime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputColossal!\u00a0\u2014 exclaimed Hawk-nose.\u00a0\u2014 A programmer! That's exactly what we are looking for.Arkadi and Boris Strugatsky. Monday starts on SaturdayReading the book \"Equations of Mathematical Magic\" Roman Oira-Oira and Cristobal Junta found an interesting equation: a\u2212(a\u2295x)\u2212x=0a\u2212(a\u2295x)\u2212x=0 for some given aa, where \u2295\u2295 stands for a bitwise exclusive or (XOR) of two integers (this operation is denoted as ^ or xor in many modern programming languages). Oira-Oira quickly found some xx, which is the solution of the equation, but Cristobal Junta decided that Oira-Oira's result is not interesting enough, so he asked his colleague how many non-negative solutions of this equation exist. This task turned out to be too difficult for Oira-Oira, so he asks you to help.InputEach test contains several possible values of aa and your task is to find the number of equation's solution for each of them. The first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of these values.The following tt lines contain the values of parameter aa, each value is an integer from 00 to 230\u22121230\u22121 inclusive.OutputFor each value of aa print exactly one integer\u00a0\u2014 the number of non-negative solutions of the equation for the given value of the parameter. Print answers in the same order as values of aa appear in the input.One can show that the number of solutions is always finite.ExampleInputCopy3021073741823OutputCopy121073741824NoteLet's define the bitwise exclusive OR (XOR) operation. Given two integers xx and yy, consider their binary representations (possibly with leading zeroes): xk\u2026x2x1x0xk\u2026x2x1x0 and yk\u2026y2y1y0yk\u2026y2y1y0. Here, xixi is the ii-th bit of the number xx and yiyi is the ii-th bit of the number yy. Let r=x\u2295yr=x\u2295y be the result of the XOR operation of xx and yy. Then rr is defined as rk\u2026r2r1r0rk\u2026r2r1r0 where:ri={1,\u00a0if\u00a0xi\u2260yi0,\u00a0if\u00a0xi=yiri={1,\u00a0if\u00a0xi\u2260yi0,\u00a0if\u00a0xi=yiFor the first value of the parameter, only x=0x=0 is a solution of the equation.For the second value of the parameter, solutions are x=0x=0 and x=2x=2."], "Mike and Children": ["https://codeforces.com/problemset/problem/1121/B", "B. Mike and Childrentime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMike decided to teach programming to children in an elementary school. He knows that it is not an easy task to interest children in that age to code. That is why he decided to give each child two sweets.Mike has nn sweets with sizes a1,a2,\u2026,ana1,a2,\u2026,an. All his sweets have different sizes. That is, there is no such pair (i,j)(i,j) (1\u2264i,j\u2264n1\u2264i,j\u2264n) such that i\u2260ji\u2260j and ai=ajai=aj.Since Mike has taught for many years, he knows that if he gives two sweets with sizes aiai and ajaj to one child and akak and apap to another, where (ai+aj)\u2260(ak+ap)(ai+aj)\u2260(ak+ap), then a child who has a smaller sum of sizes will be upset. That is, if there are two children who have different sums of sweets, then one of them will be upset. Apparently, Mike does not want somebody to be upset. Mike wants to invite children giving each of them two sweets. Obviously, he can't give one sweet to two or more children. His goal is to invite as many children as he can. Since Mike is busy preparing to his first lecture in the elementary school, he is asking you to find the maximum number of children he can invite giving each of them two sweets in such way that nobody will be upset.InputThe first line contains one integer nn (2\u2264n\u226410002\u2264n\u22641000)\u00a0\u2014 the number of sweets Mike has.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641051\u2264ai\u2264105)\u00a0\u2014 the sizes of the sweets. It is guaranteed that all integers are distinct.OutputPrint one integer\u00a0\u2014 the maximum number of children Mike can invite giving each of them two sweets in such way that nobody will be upset.ExamplesInputCopy8\n1 8 3 11 4 9 2 7\nOutputCopy3\nInputCopy7\n3 1 7 11 9 2 12\nOutputCopy2\nNoteIn the first example, Mike can give 9+2=119+2=11 to one child, 8+3=118+3=11 to another one, and 7+4=117+4=11 to the third child. Therefore, Mike can invite three children. Note that it is not the only solution.In the second example, Mike can give 3+9=123+9=12 to one child and 1+111+11 to another one. Therefore, Mike can invite two children. Note that it is not the only solution."], "Prizes, Prizes, more Prizes": ["https://codeforces.com/problemset/problem/208/D", "D. Prizes, Prizes, more Prizestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya, like many others, likes to participate in a variety of sweepstakes and lotteries. Now he collects wrappings from a famous chocolate bar \"Jupiter\". According to the sweepstake rules, each wrapping has an integer written on it \u2014 the number of points that the participant adds to his score as he buys the bar. After a participant earns a certain number of points, he can come to the prize distribution center and exchange the points for prizes. When somebody takes a prize, the prize's cost is simply subtracted from the number of his points.Vasya didn't only bought the bars, he also kept a record of how many points each wrapping cost. Also, he remembers that he always stucks to the greedy strategy \u2014 as soon as he could take at least one prize, he went to the prize distribution centre and exchanged the points for prizes. Moreover, if he could choose between multiple prizes, he chose the most expensive one. If after an exchange Vasya had enough points left to get at least one more prize, then he continued to exchange points.The sweepstake has the following prizes (the prizes are sorted by increasing of their cost):   a mug (costs a points),  a towel (costs b points),  a bag (costs c points),  a bicycle (costs d points),  a car (costs e points). Now Vasya wants to recollect what prizes he has received. You know sequence p1,\u2009p2,\u2009...,\u2009pn, where pi is the number of points Vasya got for the i-th bar. The sequence of points is given in the chronological order. You also know numbers a, b, c, d, e. Your task is to find, how many prizes Vasya received, what prizes they are and how many points he's got left after all operations are completed.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950) \u2014 the number of chocolate bar wrappings that brought points to Vasya. The second line contains space-separated integers p1,\u2009p2,\u2009...,\u2009pn (1\u2009\u2264\u2009pi\u2009\u2264\u2009109). The third line contains 5 integers a, b, c, d, e (1\u2009\u2264\u2009a\u2009<\u2009b\u2009<\u2009c\u2009<\u2009d\u2009<\u2009e\u2009\u2264\u2009109) \u2014 the prizes' costs.OutputPrint on the first line 5 integers, separated by a space \u2014 the number of mugs, towels, bags, bicycles and cars that Vasya has got, respectively. On the second line print a single integer \u2014 the number of points Vasya will have left after all operations of exchange are completed.Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.ExamplesInputCopy33 10 42 4 10 15 20OutputCopy1 1 1 0 0 1InputCopy410 4 39 23 5 10 11 12OutputCopy3 0 1 0 3 0NoteIn the first sample Vasya gets 3 points after eating the first chocolate bar. Then he exchanges 2 points and gets a mug. Vasya wins a bag after eating the second chocolate bar. Then he wins a towel after eating the third chocolate bar. After all chocolate bars 3\u2009-\u20092\u2009+\u200910\u2009-\u200910\u2009+\u20094\u2009-\u20094\u2009=\u20091 points remains."], "Gerald is into Art": ["https://codeforces.com/problemset/problem/560/B", "B. Gerald is into Arttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGerald bought two very rare paintings at the Sotheby's auction and he now wants to hang them on the wall. For that he bought a special board to attach it to the wall and place the paintings on the board. The board has shape of an a1\u2009\u00d7\u2009b1 rectangle, the paintings have shape of a a2\u2009\u00d7\u2009b2 and a3\u2009\u00d7\u2009b3 rectangles.Since the paintings are painted in the style of abstract art, it does not matter exactly how they will be rotated, but still, one side of both the board, and each of the paintings must be parallel to the floor. The paintings can touch each other and the edges of the board, but can not overlap or go beyond the edge of the board. Gerald asks whether it is possible to place the paintings on the board, or is the board he bought not large enough?InputThe first line contains two space-separated numbers a1 and b1 \u2014 the sides of the board. Next two lines contain numbers a2,\u2009b2,\u2009a3 and b3 \u2014 the sides of the paintings. All numbers ai,\u2009bi in the input are integers and fit into the range from 1 to 1000.OutputIf the paintings can be placed on the wall, print \"YES\" (without the quotes), and if they cannot, print \"NO\" (without the quotes).ExamplesInputCopy3 21 32 1OutputCopyYESInputCopy5 53 33 3OutputCopyNOInputCopy4 22 31 2OutputCopyYESNoteThat's how we can place the pictures in the first test:And that's how we can do it in the third one."], "The Modcrab": ["https://codeforces.com/problemset/problem/903/B", "B. The Modcrabtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVova is again playing some computer game, now an RPG. In the game Vova's character received a quest: to slay the fearsome monster called Modcrab.After two hours of playing the game Vova has tracked the monster and analyzed its tactics. The Modcrab has h2 health points and an attack power of a2. Knowing that, Vova has decided to buy a lot of strong healing potions and to prepare for battle.Vova's character has h1 health points and an attack power of a1. Also he has a large supply of healing potions, each of which increases his current amount of health points by c1 when Vova drinks a potion. All potions are identical to each other. It is guaranteed that c1\u2009>\u2009a2.The battle consists of multiple phases. In the beginning of each phase, Vova can either attack the monster (thus reducing its health by a1) or drink a healing potion (it increases Vova's health by c1; Vova's health can exceed h1). Then, if the battle is not over yet, the Modcrab attacks Vova, reducing his health by a2. The battle ends when Vova's (or Modcrab's) health drops to 0 or lower. It is possible that the battle ends in a middle of a phase after Vova's attack.Of course, Vova wants to win the fight. But also he wants to do it as fast as possible. So he wants to make up a strategy that will allow him to win the fight after the minimum possible number of phases.Help Vova to make up a strategy! You may assume that Vova never runs out of healing potions, and that he can always win.InputThe first line contains three integers h1, a1, c1 (1\u2009\u2264\u2009h1,\u2009a1\u2009\u2264\u2009100, 2\u2009\u2264\u2009c1\u2009\u2264\u2009100) \u2014 Vova's health, Vova's attack power and the healing power of a potion.The second line contains two integers h2, a2 (1\u2009\u2264\u2009h2\u2009\u2264\u2009100, 1\u2009\u2264\u2009a2\u2009<\u2009c1) \u2014 the Modcrab's health and his attack power.OutputIn the first line print one integer n denoting the minimum number of phases required to win the battle.Then print n lines. i-th line must be equal to HEAL if Vova drinks a potion in i-th phase, or STRIKE if he attacks the Modcrab.The strategy must be valid: Vova's character must not be defeated before slaying the Modcrab, and the monster's health must be 0 or lower after Vova's last action.If there are multiple optimal solutions, print any of them.ExamplesInputCopy10 6 10017 5OutputCopy4STRIKEHEALSTRIKESTRIKEInputCopy11 6 10012 5OutputCopy2STRIKESTRIKENoteIn the first example Vova's character must heal before or after his first attack. Otherwise his health will drop to zero in 2 phases while he needs 3 strikes to win.In the second example no healing needed, two strikes are enough to get monster to zero health and win with 6 health left."], "Kvass and the Fair Nut": ["https://codeforces.com/problemset/problem/1084/B", "B. Kvass and the Fair Nuttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Fair Nut likes kvass very much. On his birthday parents presented him nn kegs of kvass. There are vivi liters of kvass in the ii-th keg. Each keg has a lever. You can pour your glass by exactly 11 liter pulling this lever. The Fair Nut likes this drink very much, so he wants to pour his glass by ss liters of kvass. But he wants to do it, so kvass level in the least keg is as much as possible.Help him find out how much kvass can be in the least keg or define it's not possible to pour his glass by ss liters of kvass.InputThe first line contains two integers nn and ss (1\u2264n\u22641031\u2264n\u2264103, 1\u2264s\u226410121\u2264s\u22641012)\u00a0\u2014 the number of kegs and glass volume.The second line contains nn integers v1,v2,\u2026,vnv1,v2,\u2026,vn (1\u2264vi\u22641091\u2264vi\u2264109)\u00a0\u2014 the volume of ii-th keg.OutputIf the Fair Nut cannot pour his glass by ss liters of kvass, print \u22121\u22121. Otherwise, print a single integer\u00a0\u2014 how much kvass in the least keg can be.ExamplesInputCopy3 34 3 5OutputCopy3InputCopy3 45 3 4OutputCopy2InputCopy3 71 2 3OutputCopy-1NoteIn the first example, the answer is 33, the Fair Nut can take 11 liter from the first keg and 22 liters from the third keg. There are 33 liters of kvass in each keg.In the second example, the answer is 22, the Fair Nut can take 33 liters from the first keg and 11 liter from the second keg.In the third example, the Fair Nut can't pour his cup by 77 liters, so the answer is \u22121\u22121."], "Switches and Lamps": ["https://codeforces.com/problemset/problem/985/B", "B. Switches and Lampstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given n switches and m lamps. The i-th switch turns on some subset of the lamps. This information is given as the matrix a consisting of n rows and m columns where ai,\u2009j\u2009=\u20091 if the i-th switch turns on the j-th lamp and ai,\u2009j\u2009=\u20090 if the i-th switch is not connected to the j-th lamp.Initially all m lamps are turned off.Switches change state only from \"off\" to \"on\". It means that if you press two or more switches connected to the same lamp then the lamp will be turned on after any of this switches is pressed and will remain its state even if any switch connected to this lamp is pressed afterwards.It is guaranteed that if you push all n switches then all m lamps will be turned on.Your think that you have too many switches and you would like to ignore one of them. Your task is to say if there exists such a switch that if you will ignore (not use) it but press all the other n\u2009-\u20091 switches then all the m lamps will be turned on.InputThe first line of the input contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20092000) \u2014 the number of the switches and the number of the lamps.The following n lines contain m characters each. The character ai,\u2009j is equal to '1' if the i-th switch turns on the j-th lamp and '0' otherwise.It is guaranteed that if you press all n switches all m lamps will be turned on.OutputPrint \"YES\" if there is a switch that if you will ignore it and press all the other n\u2009-\u20091 switches then all m lamps will be turned on. Print \"NO\" if there is no such switch.ExamplesInputCopy4 510101010000011110000OutputCopyYESInputCopy4 510100010000011000101OutputCopyNO"], "Garland": ["https://codeforces.com/problemset/problem/408/B", "B. Garlandtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce little Vasya read an article in a magazine on how to make beautiful handmade garland from colored paper. Vasya immediately went to the store and bought n colored sheets of paper, the area of each sheet is 1 square meter.The garland must consist of exactly m pieces of colored paper of arbitrary area, each piece should be of a certain color. To make the garland, Vasya can arbitrarily cut his existing colored sheets into pieces. Vasya is not obliged to use all the sheets to make the garland.Vasya wants the garland to be as attractive as possible, so he wants to maximize the total area of \u200b\u200bm pieces of paper in the garland. Calculate what the maximum total area of \u200b\u200bthe pieces of paper in the garland Vasya can get.InputThe first line contains a non-empty sequence of n (1\u2009\u2264\u2009n\u2009\u2264\u20091000) small English letters (\"a\"...\"z\"). Each letter means that Vasya has a sheet of paper of the corresponding color.The second line contains a non-empty sequence of m (1\u2009\u2264\u2009m\u2009\u2264\u20091000) small English letters that correspond to the colors of the pieces of paper in the garland that Vasya wants to make.OutputPrint an integer that is the maximum possible total area of the pieces of paper in the garland Vasya wants to get or -1, if it is impossible to make the garland from the sheets he's got. It is guaranteed that the answer is always an integer.ExamplesInputCopyaaabbacaabbccacOutputCopy6InputCopyazOutputCopy-1NoteIn the first test sample Vasya can make an garland of area 6: he can use both sheets of color b, three (but not four) sheets of color a and cut a single sheet of color c in three, for example, equal pieces. Vasya can use the resulting pieces to make a garland of area 6.In the second test sample Vasya cannot make a garland at all \u2014 he doesn't have a sheet of color z."], "Levko and Permutation": ["https://codeforces.com/problemset/problem/361/B", "B. Levko and Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLevko loves permutations very much. A permutation of length n is a sequence of distinct positive integers, each is at most n.Let\u2019s assume that value gcd(a,\u2009b) shows the greatest common divisor of numbers a and b. Levko assumes that element pi of permutation p1,\u2009p2,\u2009... ,\u2009pn is good if gcd(i,\u2009pi)\u2009>\u20091. Levko considers a permutation beautiful, if it has exactly k good elements. Unfortunately, he doesn\u2019t know any beautiful permutation. Your task is to help him to find at least one of them.InputThe single line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009105, 0\u2009\u2264\u2009k\u2009\u2264\u2009n).OutputIn a single line print either any beautiful permutation or -1, if such permutation doesn\u2019t exist.If there are multiple suitable permutations, you are allowed to print any of them.ExamplesInputCopy4 2OutputCopy2 4 3 1InputCopy1 1OutputCopy-1NoteIn the first sample elements 4 and 3 are good because gcd(2,\u20094)\u2009=\u20092\u2009>\u20091 and gcd(3,\u20093)\u2009=\u20093\u2009>\u20091. Elements 2 and 1 are not good because gcd(1,\u20092)\u2009=\u20091 and gcd(4,\u20091)\u2009=\u20091. As there are exactly 2 good elements, the permutation is beautiful.The second sample has no beautiful permutations."], "And": ["https://codeforces.com/problemset/problem/1013/B", "B. Andtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is an array with n elements a1,\u2009a2,\u2009...,\u2009an and the number x.In one operation you can select some i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) and replace element ai with ai\u2009&\u2009x, where & denotes the bitwise and operation.You want the array to have at least two equal elements after applying some operations (possibly, none). In other words, there should be at least two distinct indices i\u2009\u2260\u2009j such that ai\u2009=\u2009aj. Determine whether it is possible to achieve and, if possible, the minimal number of operations to apply.InputThe first line contains integers n and x (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009x\u2009\u2264\u2009100\u2009000), number of elements in the array and the number to and with.The second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009100\u2009000), the elements of the array.OutputPrint a single integer denoting the minimal number of operations to do, or -1, if it is impossible.ExamplesInputCopy4 31 2 3 7OutputCopy1InputCopy2 2281 1OutputCopy0InputCopy3 71 2 3OutputCopy-1NoteIn the first example one can apply the operation to the last element of the array. That replaces 7 with 3, so we achieve the goal in one move.In the second example the array already has two equal elements.In the third example applying the operation won't change the array at all, so it is impossible to make some pair of elements equal."], "Game": ["https://codeforces.com/problemset/problem/630/R", "R. Gametime limit per test0.5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputThere is a legend in the IT City college. A student that failed to answer all questions on the game theory exam is given one more chance by his professor. The student has to play a game with the professor.The game is played on a square field consisting of n\u2009\u00d7\u2009n cells. Initially all cells are empty. On each turn a player chooses and paint an empty cell that has no common sides with previously painted cells. Adjacent corner of painted cells is allowed. On the next turn another player does the same, then the first one and so on. The player with no cells to paint on his turn loses.The professor have chosen the field size n and allowed the student to choose to be the first or the second player in the game. What should the student choose to win the game? Both players play optimally.InputThe only line of the input contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091018) \u2014 the size of the field.OutputOutput number 1, if the player making the first turn wins when both players play optimally, otherwise print number 2.ExamplesInputCopy1OutputCopy1InputCopy2OutputCopy2"], "Co-prime Array": ["https://codeforces.com/problemset/problem/660/A", "A. Co-prime Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array of n elements, you must make it a co-prime array in as few moves as possible.In each move you can insert any positive integral number you want not greater than 109 in any place in the array.An array is co-prime if any two adjacent numbers of it are co-prime.In the number theory, two integers a and b are said to be co-prime if the only positive integer that divides both of them is 1.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000) \u2014 the number of elements in the given array.The second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the elements of the array a.OutputPrint integer k on the first line \u2014 the least number of elements needed to add to the array a to make it co-prime.The second line should contain n\u2009+\u2009k integers aj \u2014 the elements of the array a after adding k elements to it. Note that the new array should be co-prime, so any two adjacent values should be co-prime. Also the new array should be got from the original array a by adding k elements to it.If there are multiple answers you can print any one of them.ExampleInputCopy32 7 28OutputCopy12 7 9 28"], "Spotlights": ["https://codeforces.com/problemset/problem/729/B", "B. Spotlightstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTheater stage is a rectangular field of size n\u2009\u00d7\u2009m. The director gave you the stage's plan which actors will follow. For each cell it is stated in the plan if there would be an actor in this cell or not.You are to place a spotlight on the stage in some good position. The spotlight will project light in one of the four directions (if you look at the stage from above)\u00a0\u2014 left, right, up or down. Thus, the spotlight's position is a cell it is placed to and a direction it shines.A position is good if two conditions hold:   there is no actor in the cell the spotlight is placed to;  there is at least one actor in the direction the spotlight projects. Count the number of good positions for placing the spotlight. Two positions of spotlight are considered to be different if the location cells or projection direction differ.InputThe first line contains two positive integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000)\u00a0\u2014 the number of rows and the number of columns in the plan.The next n lines contain m integers, 0 or 1 each\u00a0\u2014 the description of the plan. Integer 1, means there will be an actor in the corresponding cell, while 0 means the cell will remain empty. It is guaranteed that there is at least one actor in the plan.OutputPrint one integer\u00a0\u2014 the number of good positions for placing the spotlight.ExamplesInputCopy2 40 1 0 01 0 1 0OutputCopy9InputCopy4 40 0 0 01 0 0 10 1 1 00 1 0 0OutputCopy20NoteIn the first example the following positions are good:  the (1, 1) cell and right direction;  the (1, 1) cell and down direction;  the (1, 3) cell and left direction;  the (1, 3) cell and down direction;  the (1, 4) cell and left direction;  the (2, 2) cell and left direction;  the (2, 2) cell and up direction;  the (2, 2) and right direction;  the (2, 4) cell and left direction. Therefore, there are 9 good positions in this example."], "The Wall": ["https://codeforces.com/problemset/problem/340/A", "A. The Walltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIahub and his friend Floyd have started painting a wall. Iahub is painting the wall red and Floyd is painting it pink. You can consider the wall being made of a very large number of bricks, numbered 1, 2, 3 and so on. Iahub has the following scheme of painting: he skips x\u2009-\u20091 consecutive bricks, then he paints the x-th one. That is, he'll paint bricks x, 2\u00b7x, 3\u00b7x and so on red. Similarly, Floyd skips y\u2009-\u20091 consecutive bricks, then he paints the y-th one. Hence he'll paint bricks y, 2\u00b7y, 3\u00b7y and so on pink.After painting the wall all day, the boys observed that some bricks are painted both red and pink. Iahub has a lucky number a and Floyd has a lucky number b. Boys wonder how many bricks numbered no less than a and no greater than b are painted both red and pink. This is exactly your task: compute and print the answer to the question. InputThe input will have a single line containing four integers in this order: x, y, a, b. (1\u2009\u2264\u2009x,\u2009y\u2009\u2264\u20091000, 1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u20092\u00b7109, a\u2009\u2264\u2009b).OutputOutput a single integer \u2014 the number of bricks numbered no less than a and no greater than b that are painted both red and pink.ExamplesInputCopy2 3 6 18OutputCopy3NoteLet's look at the bricks from a to b (a\u2009=\u20096,\u2009b\u2009=\u200918). The bricks colored in red are numbered 6, 8, 10, 12, 14, 16, 18. The bricks colored in pink are numbered 6, 9, 12, 15, 18. The bricks colored in both red and pink are numbered with 6, 12 and 18. "], "A Tide of Riverscape": ["https://codeforces.com/problemset/problem/989/B", "B. A Tide of Riverscapetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard output Walking along a riverside, Mino silently takes a note of something.\"Time,\" Mino thinks aloud.\"What?\"\"Time and tide wait for no man,\" explains Mino. \"My name, taken from the river, always reminds me of this.\"\"And what are you recording?\"\"You see it, tide. Everything has its own period, and I think I've figured out this one,\" says Mino with confidence.Doubtfully, Kanno peeks at Mino's records. The records are expressed as a string ss of characters '0', '1' and '.', where '0' denotes a low tide, '1' denotes a high tide, and '.' denotes an unknown one (either high or low).You are to help Mino determine whether it's possible that after replacing each '.' independently with '0' or '1', a given integer pp is not a period of the resulting string. In case the answer is yes, please also show such a replacement to Mino.In this problem, a positive integer pp is considered a period of string ss, if for all 1\u2264i\u2264|s|\u2212p1\u2264i\u2264|s|\u2212p, the ii-th and (i+p)(i+p)-th characters of ss are the same. Here |s||s| is the length of ss.InputThe first line contains two space-separated integers nn and pp (1\u2264p\u2264n\u226420001\u2264p\u2264n\u22642000)\u00a0\u2014 the length of the given string and the supposed period, respectively.The second line contains a string ss of nn characters\u00a0\u2014 Mino's records. ss only contains characters '0', '1' and '.', and contains at least one '.' character.OutputOutput one line\u00a0\u2014 if it's possible that pp is not a period of the resulting string, output any one of such strings; otherwise output \"No\" (without quotes, you can print letters in any case (upper or lower)).ExamplesInputCopy10 71.0.1.0.1.OutputCopy1000100010InputCopy10 61.0.1.1000OutputCopy1001101000InputCopy10 91........1OutputCopyNoNoteIn the first example, 77 is not a period of the resulting string because the 11-st and 88-th characters of it are different.In the second example, 66 is not a period of the resulting string because the 44-th and 1010-th characters of it are different.In the third example, 99 is always a period because the only constraint that the first and last characters are the same is already satisfied.Note that there are multiple acceptable answers for the first two examples, you can print any of them."], "Print Check": ["https://codeforces.com/problemset/problem/631/B", "B. Print Checktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputKris works in a large company \"Blake Technologies\". As a best engineer of the company he was assigned a task to develop a printer that will be able to print horizontal and vertical strips. First prototype is already built and Kris wants to tests it. He wants you to implement the program that checks the result of the printing.Printer works with a rectangular sheet of paper of size n\u2009\u00d7\u2009m. Consider the list as a table consisting of n rows and m columns. Rows are numbered from top to bottom with integers from 1 to n, while columns are numbered from left to right with integers from 1 to m. Initially, all cells are painted in color 0.Your program has to support two operations:   Paint all cells in row ri in color ai;  Paint all cells in column ci in color ai. If during some operation i there is a cell that have already been painted, the color of this cell also changes to ai.Your program has to print the resulting table after k operation.InputThe first line of the input contains three integers n, m and k (1\u2009\u2009\u2264\u2009\u2009n,\u2009\u2009m\u2009\u2009\u2264\u20095000, n\u00b7m\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009k\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the dimensions of the sheet and the number of operations, respectively.Each of the next k lines contains the description of exactly one query:   1\u00a0ri\u00a0ai (1\u2009\u2264\u2009ri\u2009\u2264\u2009n, 1\u2009\u2264\u2009ai\u2009\u2264\u2009109), means that row ri is painted in color ai;  2\u00a0ci\u00a0ai (1\u2009\u2264\u2009ci\u2009\u2264\u2009m, 1\u2009\u2264\u2009ai\u2009\u2264\u2009109), means that column ci is painted in color ai. OutputPrint n lines containing m integers each\u00a0\u2014 the resulting table after all operations are applied.ExamplesInputCopy3 3 31 1 32 2 11 2 2OutputCopy3 1 3 2 2 2 0 1 0 InputCopy5 3 51 1 11 3 11 5 12 1 12 3 1OutputCopy1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 NoteThe figure below shows all three operations for the first sample step by step. The cells that were painted on the corresponding step are marked gray.   "], "New Year Present": ["https://codeforces.com/problemset/problem/379/B", "B. New Year Presenttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe New Year is coming! That's why many people today are busy preparing New Year presents. Vasily the Programmer is no exception.Vasily knows that the best present is (no, it's not a contest) money. He's put n empty wallets from left to right in a row and decided how much money to put in what wallet. Vasily decided to put ai coins to the i-th wallet from the left.Vasily is a very busy man, so the money are sorted into the bags by his robot. Initially, the robot stands by the leftmost wallet in the row. The robot can follow instructions of three types: go to the wallet that is to the left of the current one (if such wallet exists), go to the wallet that is to the right of the current one (if such wallet exists), put a coin to the current wallet. Due to some technical malfunctions the robot cannot follow two \"put a coin\" instructions in a row.Vasily doesn't want to wait for long, so he wants to write a program for the robot that contains at most 106 operations (not necessarily minimum in length) the robot can use to put coins into the wallets. Help him.InputThe first line contains integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009300) \u2014 the number of wallets. The next line contains n integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009300).It is guaranteed that at least one ai is positive.OutputPrint the sequence that consists of k (1\u2009\u2264\u2009k\u2009\u2264\u2009106) characters, each of them equals: \"L\", \"R\" or \"P\". Each character of the sequence is an instruction to the robot. Character \"L\" orders to move to the left, character \"R\" orders to move to the right, character \"P\" orders the robot to put a coin in the wallet. The robot is not allowed to go beyond the wallet line. In other words, you cannot give instructions \"L\" if the robot is at wallet 1, or \"R\" at wallet n.As a result of the performed operations, the i-th wallet from the left must contain exactly ai coins. If there are multiple answers, you can print any of them.ExamplesInputCopy21 2OutputCopyPRPLRPInputCopy40 2 0 2OutputCopyRPRRPLLPLRRRP"], "Inventory": ["https://codeforces.com/problemset/problem/569/B", "B. Inventorytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputCompanies always have a lot of equipment, furniture and other things. All of them should be tracked. To do this, there is an inventory number assigned with each item. It is much easier to create a database by using those numbers and keep the track of everything.During an audit, you were surprised to find out that the items are not numbered sequentially, and some items even share the same inventory number! There is an urgent need to fix it. You have chosen to make the numbers of the items sequential, starting with 1. Changing a number is quite a time-consuming process, and you would like to make maximum use of the current numbering.You have been given information on current inventory numbers for n items in the company. Renumber items so that their inventory numbers form a permutation of numbers from 1 to n by changing the number of as few items as possible. Let us remind you that a set of n numbers forms a permutation if all the numbers are in the range from 1 to n, and no two numbers are equal.InputThe first line contains a single integer n\u00a0\u2014 the number of items (1\u2009\u2264\u2009n\u2009\u2264\u2009105).The second line contains n numbers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105)\u00a0\u2014 the initial inventory numbers of the items.OutputPrint n numbers\u00a0\u2014 the final inventory numbers of the items in the order they occur in the input. If there are multiple possible answers, you may print any of them.ExamplesInputCopy31 3 2OutputCopy1 3 2 InputCopy42 2 3 3OutputCopy2 1 3 4 InputCopy12OutputCopy1 NoteIn the first test the numeration is already a permutation, so there is no need to change anything.In the second test there are two pairs of equal numbers, in each pair you need to replace one number.In the third test you need to replace 2 by 1, as the numbering should start from one."], "World Cup": ["https://codeforces.com/problemset/problem/996/B", "B. World Cuptime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAllen wants to enter a fan zone that occupies a round square and has nn entrances.There already is a queue of aiai people in front of the ii-th entrance. Each entrance allows one person from its queue to enter the fan zone in one minute.Allen uses the following strategy to enter the fan zone:   Initially he stands in the end of the queue in front of the first entrance.  Each minute, if he is not allowed into the fan zone during the minute (meaning he is not the first in the queue), he leaves the current queue and stands in the end of the queue of the next entrance (or the first entrance if he leaves the last entrance). Determine the entrance through which Allen will finally enter the fan zone.InputThe first line contains a single integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the number of entrances.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109)\u00a0\u2014 the number of people in queues. These numbers do not include Allen.OutputPrint a single integer\u00a0\u2014 the number of entrance that Allen will use.ExamplesInputCopy42 3 2 0OutputCopy3InputCopy210 10OutputCopy1InputCopy65 2 6 5 7 4OutputCopy6NoteIn the first example the number of people (not including Allen) changes as follows: [2,3,2,0]\u2192[1,2,1,0]\u2192[0,1,0,0][2,3,2,0]\u2192[1,2,1,0]\u2192[0,1,0,0]. The number in bold is the queue Alles stands in. We see that he will enter the fan zone through the third entrance.In the second example the number of people (not including Allen) changes as follows: [10,10]\u2192[9,9]\u2192[8,8]\u2192[7,7]\u2192[6,6]\u2192[5,5]\u2192[4,4]\u2192[3,3]\u2192[2,2]\u2192[1,1]\u2192[0,0][10,10]\u2192[9,9]\u2192[8,8]\u2192[7,7]\u2192[6,6]\u2192[5,5]\u2192[4,4]\u2192[3,3]\u2192[2,2]\u2192[1,1]\u2192[0,0].In the third example the number of people (not including Allen) changes as follows: [5,2,6,5,7,4]\u2192[4,1,5,4,6,3]\u2192[3,0,4,3,5,2]\u2192[2,0,3,2,4,1]\u2192[1,0,2,1,3,0]\u2192[0,0,1,0,2,0][5,2,6,5,7,4]\u2192[4,1,5,4,6,3]\u2192[3,0,4,3,5,2]\u2192[2,0,3,2,4,1]\u2192[1,0,2,1,3,0]\u2192[0,0,1,0,2,0]."], "Tea Queue": ["https://codeforces.com/problemset/problem/920/B", "B. Tea Queuetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently n students from city S moved to city P to attend a programming camp.They moved there by train. In the evening, all students in the train decided that they want to drink some tea. Of course, no two people can use the same teapot simultaneously, so the students had to form a queue to get their tea.i-th student comes to the end of the queue at the beginning of li-th second. If there are multiple students coming to the queue in the same moment, then the student with greater index comes after the student with lesser index. Students in the queue behave as follows: if there is nobody in the queue before the student, then he uses the teapot for exactly one second and leaves the queue with his tea; otherwise the student waits for the people before him to get their tea. If at the beginning of ri-th second student i still cannot get his tea (there is someone before him in the queue), then he leaves the queue without getting any tea. For each student determine the second he will use the teapot and get his tea (if he actually gets it).InputThe first line contains one integer t \u2014 the number of test cases to solve (1\u2009\u2264\u2009t\u2009\u2264\u20091000).Then t test cases follow. The first line of each test case contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000) \u2014 the number of students.Then n lines follow. Each line contains two integer li, ri (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u20095000) \u2014 the second i-th student comes to the end of the queue, and the second he leaves the queue if he still cannot get his tea.It is guaranteed that for every  condition li\u2009-\u20091\u2009\u2264\u2009li holds.The sum of n over all test cases doesn't exceed 1000.Note that in hacks you have to set t\u2009=\u20091.OutputFor each test case print n integers. i-th of them must be equal to the second when i-th student gets his tea, or 0 if he leaves without tea.ExampleInputCopy221 31 431 51 12 3OutputCopy1 2 1 0 2 NoteThe example contains 2 tests:  During 1-st second, students 1 and 2 come to the queue, and student 1 gets his tea. Student 2 gets his tea during 2-nd second.  During 1-st second, students 1 and 2 come to the queue, student 1 gets his tea, and student 2 leaves without tea. During 2-nd second, student 3 comes and gets his tea. "], "Lucky Conversion": ["https://codeforces.com/problemset/problem/145/A", "A. Lucky Conversiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya loves lucky numbers very much. Everybody knows that lucky numbers are positive integers whose decimal record contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.Petya has two strings a and b of the same length n. The strings consist only of lucky digits. Petya can perform operations of two types:   replace any one digit from string a by its opposite (i.e., replace 4 by 7 and 7 by 4);  swap any pair of digits in string a. Petya is interested in the minimum number of operations that are needed to make string a equal to string b. Help him with the task.InputThe first and the second line contains strings a and b, correspondingly. Strings a and b have equal lengths and contain only lucky digits. The strings are not empty, their length does not exceed 105.OutputPrint on the single line the single number \u2014 the minimum number of operations needed to convert string a into string b.ExamplesInputCopy4774OutputCopy1InputCopy774744OutputCopy1InputCopy777444OutputCopy3NoteIn the first sample it is enough simply to swap the first and the second digit.In the second sample we should replace the second digit with its opposite.In the third number we should replace all three digits with their opposites."], "Eugeny and Play List": ["https://codeforces.com/problemset/problem/302/B", "B. Eugeny and Play Listtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEugeny loves listening to music. He has n songs in his play list. We know that song number i has the duration of ti minutes. Eugeny listens to each song, perhaps more than once. He listens to song number i ci times. Eugeny's play list is organized as follows: first song number 1 plays c1 times, then song number 2 plays c2 times, ..., in the end the song number n plays cn times.Eugeny took a piece of paper and wrote out m moments of time when he liked a song. Now for each such moment he wants to know the number of the song that played at that moment. The moment x means that Eugeny wants to know which song was playing during the x-th minute of his listening to the play list.Help Eugeny and calculate the required numbers of songs.InputThe first line contains two integers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105). The next n lines contain pairs of integers. The i-th line contains integers ci,\u2009ti (1\u2009\u2264\u2009ci,\u2009ti\u2009\u2264\u2009109) \u2014 the description of the play list. It is guaranteed that the play list's total duration doesn't exceed 109 .The next line contains m positive integers v1,\u2009v2,\u2009...,\u2009vm, that describe the moments Eugeny has written out. It is guaranteed that there isn't such moment of time vi, when the music doesn't play any longer. It is guaranteed that vi\u2009<\u2009vi\u2009+\u20091 (i\u2009<\u2009m).The moment of time vi means that Eugeny wants to know which song was playing during the vi-th munite from the start of listening to the playlist.OutputPrint m integers \u2014 the i-th number must equal the number of the song that was playing during the vi-th minute after Eugeny started listening to the play list.ExamplesInputCopy1 22 81 16OutputCopy11InputCopy4 91 22 11 12 21 2 3 4 5 6 7 8 9OutputCopy112234444"], "Table Tennis Game 2": ["https://codeforces.com/problemset/problem/765/C", "C. Table Tennis Game 2time limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputMisha and Vanya have played several table tennis sets. Each set consists of several serves, each serve is won by one of the players, he receives one point and the loser receives nothing. Once one of the players scores exactly k points, the score is reset and a new set begins.Across all the sets Misha scored a points in total, and Vanya scored b points. Given this information, determine the maximum number of sets they could have played, or that the situation is impossible.Note that the game consisted of several complete sets.InputThe first line contains three space-separated integers k, a and b (1\u2009\u2264\u2009k\u2009\u2264\u2009109, 0\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009109, a\u2009+\u2009b\u2009>\u20090).OutputIf the situation is impossible, print a single number -1. Otherwise, print the maximum possible number of sets.ExamplesInputCopy11 11 5OutputCopy1InputCopy11 2 3OutputCopy-1NoteNote that the rules of the game in this problem differ from the real table tennis game, for example, the rule of \"balance\" (the winning player has to be at least two points ahead to win a set) has no power within the present problem."], "Megacity": ["https://codeforces.com/problemset/problem/424/B", "B. Megacitytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe administration of the Tomsk Region firmly believes that it's time to become a megacity (that is, get population of one million). Instead of improving the demographic situation, they decided to achieve its goal by expanding the boundaries of the city.The city of Tomsk can be represented as point on the plane with coordinates (0; 0). The city is surrounded with n other locations, the i-th one has coordinates (xi, yi) with the population of ki people. You can widen the city boundaries to a circle of radius r. In such case all locations inside the circle and on its border are included into the city.Your goal is to write a program that will determine the minimum radius r, to which is necessary to expand the boundaries of Tomsk, so that it becomes a megacity.InputThe first line of the input contains two integers n and s (1\u2009\u2264\u2009n\u2009\u2264\u2009103; 1\u2009\u2264\u2009s\u2009<\u2009106) \u2014 the number of locatons around Tomsk city and the population of the city. Then n lines follow. The i-th line contains three integers \u2014 the xi and yi coordinate values of the i-th location and the number ki of people in it (1\u2009\u2264\u2009ki\u2009<\u2009106). Each coordinate is an integer and doesn't exceed 104 in its absolute value.It is guaranteed that no two locations are at the same point and no location is at point (0;\u00a00).OutputIn the output, print \"-1\" (without the quotes), if Tomsk won't be able to become a megacity. Otherwise, in the first line print a single real number \u2014 the minimum radius of the circle that the city needs to expand to in order to become a megacity.The answer is considered correct if the absolute or relative error don't exceed 10\u2009-\u20096.ExamplesInputCopy4 9999981 1 12 2 13 3 12 -2 1OutputCopy2.8284271InputCopy4 9999981 1 22 2 13 3 12 -2 1OutputCopy1.4142136InputCopy2 11 1 9999972 2 1OutputCopy-1"], "Sereja and Array": ["https://codeforces.com/problemset/problem/315/B", "B. Sereja and Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSereja has got an array, consisting of n integers, a1,\u2009a2,\u2009...,\u2009an. Sereja is an active boy, so he is now going to complete m operations. Each operation will have one of the three forms:  Make vi-th array element equal to xi. In other words, perform the assignment avi\u2009=\u2009xi.  Increase each array element by yi. In other words, perform n assignments ai\u2009=\u2009ai\u2009+\u2009yi (1\u2009\u2264\u2009i\u2009\u2264\u2009n).  Take a piece of paper and write out the qi-th array element. That is, the element aqi. Help Sereja, complete all his operations.InputThe first line contains integers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105). The second line contains n space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the original array.Next m lines describe operations, the i-th line describes the i-th operation. The first number in the i-th line is integer ti (1\u2009\u2264\u2009ti\u2009\u2264\u20093) that represents the operation type. If ti\u2009=\u20091, then it is followed by two integers vi and xi, (1\u2009\u2264\u2009vi\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009xi\u2009\u2264\u2009109). If ti\u2009=\u20092, then it is followed by integer yi (1\u2009\u2264\u2009yi\u2009\u2264\u2009104). And if ti\u2009=\u20093, then it is followed by integer qi (1\u2009\u2264\u2009qi\u2009\u2264\u2009n).OutputFor each third type operation print value aqi. Print the values in the order, in which the corresponding queries follow in the input.ExamplesInputCopy10 111 2 3 4 5 6 7 8 9 103 23 92 103 13 101 1 102 102 103 13 103 9OutputCopy291120304039"], "Vladik and Complicated Book": ["https://codeforces.com/problemset/problem/811/B", "B. Vladik and Complicated Booktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVladik had started reading a complicated book about algorithms containing n pages. To improve understanding of what is written, his friends advised him to read pages in some order given by permutation P\u2009=\u2009[p1,\u2009p2,\u2009...,\u2009pn], where pi denotes the number of page that should be read i-th in turn.Sometimes Vladik\u2019s mom sorted some subsegment of permutation P from position l to position r inclusive, because she loves the order. For every of such sorting Vladik knows number x\u00a0\u2014 what index of page in permutation he should read. He is wondered if the page, which he will read after sorting, has changed. In other words, has px changed? After every sorting Vladik return permutation to initial state, so you can assume that each sorting is independent from each other.InputFirst line contains two space-separated integers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009104)\u00a0\u2014 length of permutation and number of times Vladik's mom sorted some subsegment of the book.Second line contains n space-separated integers p1,\u2009p2,\u2009...,\u2009pn (1\u2009\u2264\u2009pi\u2009\u2264\u2009n)\u00a0\u2014 permutation P. Note that elements in permutation are distinct.Each of the next m lines contains three space-separated integers li, ri, xi (1\u2009\u2264\u2009li\u2009\u2264\u2009xi\u2009\u2264\u2009ri\u2009\u2264\u2009n)\u00a0\u2014 left and right borders of sorted subsegment in i-th sorting and position that is interesting to Vladik.OutputFor each mom\u2019s sorting on it\u2019s own line print \"Yes\", if page which is interesting to Vladik hasn't changed, or \"No\" otherwise.ExamplesInputCopy5 55 4 3 2 11 5 31 3 12 4 34 4 42 5 3OutputCopyYesNoYesYesNoInputCopy6 51 4 3 2 5 62 4 31 6 24 5 41 3 32 6 3OutputCopyYesNoYesNoYesNoteExplanation of first test case:   [1,\u20092,\u20093,\u20094,\u20095]\u00a0\u2014 permutation after sorting, 3-rd element hasn\u2019t changed, so answer is \"Yes\".  [3,\u20094,\u20095,\u20092,\u20091]\u00a0\u2014 permutation after sorting, 1-st element has changed, so answer is \"No\".  [5,\u20092,\u20093,\u20094,\u20091]\u00a0\u2014 permutation after sorting, 3-rd element hasn\u2019t changed, so answer is \"Yes\".  [5,\u20094,\u20093,\u20092,\u20091]\u00a0\u2014 permutation after sorting, 4-th element hasn\u2019t changed, so answer is \"Yes\".  [5,\u20091,\u20092,\u20093,\u20094]\u00a0\u2014 permutation after sorting, 3-rd element has changed, so answer is \"No\". "], "Opposites Attract": ["https://codeforces.com/problemset/problem/131/B", "B. Opposites Attracttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEverybody knows that opposites attract. That is the key principle of the \"Perfect Matching\" dating agency. The \"Perfect Matching\" matchmakers have classified each registered customer by his interests and assigned to the i-th client number ti (\u2009-\u200910\u2009\u2264\u2009ti\u2009\u2264\u200910). Of course, one number can be assigned to any number of customers.\"Perfect Matching\" wants to advertise its services and publish the number of opposite couples, that is, the couples who have opposite values of t. Each couple consists of exactly two clients. The customer can be included in a couple an arbitrary number of times. Help the agency and write the program that will find the sought number by the given sequence t1,\u2009t2,\u2009...,\u2009tn. For example, if t\u2009=\u2009(1,\u2009\u2009-\u20091,\u20091,\u2009\u2009-\u20091), then any two elements ti and tj form a couple if i and j have different parity. Consequently, in this case the sought number equals 4.Of course, a client can't form a couple with him/herself.InputThe first line of the input data contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) which represents the number of registered clients of the \"Couple Matching\". The second line contains a sequence of integers t1,\u2009t2,\u2009...,\u2009tn (\u2009-\u200910\u2009\u2264\u2009ti\u2009\u2264\u200910), ti \u2014 is the parameter of the i-th customer that has been assigned to the customer by the result of the analysis of his interests.OutputPrint the number of couples of customs with opposite t. The opposite number for x is number \u2009-\u2009x (0 is opposite to itself). Couples that only differ in the clients' order are considered the same.Note that the answer to the problem can be large enough, so you must use the 64-bit integer type for calculations. Please, do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specificator.ExamplesInputCopy5-3 3 0 0 3OutputCopy3InputCopy30 0 0OutputCopy3NoteIn the first sample the couples of opposite clients are: (1,2), (1,5) \u0438 (3,4).In the second sample any couple of clients is opposite."], "Dima and To-do List": ["https://codeforces.com/problemset/problem/366/B", "B. Dima and To-do Listtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou helped Dima to have a great weekend, but it's time to work. Naturally, Dima, as all other men who have girlfriends, does everything wrong.Inna and Dima are now in one room. Inna tells Dima off for everything he does in her presence. After Inna tells him off for something, she goes to another room, walks there in circles muttering about how useless her sweetheart is. During that time Dima has time to peacefully complete k\u2009-\u20091 tasks. Then Inna returns and tells Dima off for the next task he does in her presence and goes to another room again. It continues until Dima is through with his tasks.Overall, Dima has n tasks to do, each task has a unique number from 1 to n. Dima loves order, so he does tasks consecutively, starting from some task. For example, if Dima has 6 tasks to do in total, then, if he starts from the 5-th task, the order is like that: first Dima does the 5-th task, then the 6-th one, then the 1-st one, then the 2-nd one, then the 3-rd one, then the 4-th one.Inna tells Dima off (only lovingly and appropriately!) so often and systematically that he's very well learned the power with which she tells him off for each task. Help Dima choose the first task so that in total he gets told off with as little power as possible.InputThe first line of the input contains two integers n,\u2009k\u00a0(1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009105). The second line contains n integers a1,\u2009a2,\u2009...,\u2009an\u00a0(1\u2009\u2264\u2009ai\u2009\u2264\u2009103), where ai is the power Inna tells Dima off with if she is present in the room while he is doing the i-th task.It is guaranteed that n is divisible by k.OutputIn a single line print the number of the task Dima should start with to get told off with as little power as possible. If there are multiple solutions, print the one with the minimum number of the first task to do.ExamplesInputCopy6 23 2 1 6 5 4OutputCopy1InputCopy10 51 3 5 7 9 9 4 1 8 5OutputCopy3NoteExplanation of the first example.If Dima starts from the first task, Inna tells him off with power 3, then Dima can do one more task (as k = 2), then Inna tells him off for the third task with power 1, then she tells him off for the fifth task with power 5. Thus, Dima gets told off with total power 3 + 1 + 5 = 9. If Dima started from the second task, for example, then Inna would tell him off for tasks 2, 4 and 6 with power 2 + 6 + 4 = 12. Explanation of the second example.In the second example k = 5, thus, Dima manages to complete 4 tasks in-between the telling off sessions. Thus, Inna tells Dima off for tasks number 1 and 6 (if he starts from 1 or 6), 2 and 7 (if he starts from 2 or 7) and so on. The optimal answer is to start from task 3 or 8, 3 has a smaller number, so the answer is 3."], "Lost Array": ["https://codeforces.com/problemset/problem/1043/B", "B. Lost Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBajtek, known for his unusual gifts, recently got an integer array x0,x1,\u2026,xk\u22121x0,x1,\u2026,xk\u22121.Unfortunately, after a huge array-party with his extraordinary friends, he realized that he'd lost it. After hours spent on searching for a new toy, Bajtek found on the arrays producer's website another array aa of length n+1n+1. As a formal description of aa says, a0=0a0=0 and for all other ii\u00a0(1\u2264i\u2264n1\u2264i\u2264n) ai=x(i\u22121)modk+ai\u22121ai=x(i\u22121)modk+ai\u22121, where pmodqpmodq denotes the remainder of division pp by qq.For example, if the x=[1,2,3]x=[1,2,3] and n=5n=5, then:  a0=0a0=0,  a1=x0mod3+a0=x0+0=1a1=x0mod3+a0=x0+0=1,  a2=x1mod3+a1=x1+1=3a2=x1mod3+a1=x1+1=3,  a3=x2mod3+a2=x2+3=6a3=x2mod3+a2=x2+3=6,  a4=x3mod3+a3=x0+6=7a4=x3mod3+a3=x0+6=7,  a5=x4mod3+a4=x1+7=9a5=x4mod3+a4=x1+7=9. So, if the x=[1,2,3]x=[1,2,3] and n=5n=5, then a=[0,1,3,6,7,9]a=[0,1,3,6,7,9].Now the boy hopes that he will be able to restore xx from aa! Knowing that 1\u2264k\u2264n1\u2264k\u2264n, help him and find all possible values of kk\u00a0\u2014 possible lengths of the lost array.InputThe first line contains exactly one integer nn (1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the length of the array aa, excluding the element a0a0.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641061\u2264ai\u2264106).Note that a0a0 is always 00 and is not given in the input.OutputThe first line of the output should contain one integer ll denoting the number of correct lengths of the lost array.The second line of the output should contain ll integers\u00a0\u2014 possible lengths of the lost array in increasing order.ExamplesInputCopy51 2 3 4 5OutputCopy51 2 3 4 5 InputCopy51 3 5 6 8OutputCopy23 5 InputCopy31 5 3OutputCopy13 NoteIn the first example, any kk is suitable, since aa is an arithmetic progression.Possible arrays xx:  [1][1] [1,1][1,1] [1,1,1][1,1,1] [1,1,1,1][1,1,1,1]  [1,1,1,1,1][1,1,1,1,1]In the second example, Bajtek's array can have three or five elements.Possible arrays xx:  [1,2,2][1,2,2] [1,2,2,1,2][1,2,2,1,2]For example, k=4k=4 is bad, since it leads to 6+x0=86+x0=8 and 0+x0=10+x0=1, which is an obvious contradiction.In the third example, only k=nk=n is good.Array [1,4,\u22122][1,4,\u22122] satisfies the requirements.Note that xixi may be negative."], "Verse Pattern": ["https://codeforces.com/problemset/problem/722/B", "B. Verse Patterntime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a text consisting of n lines. Each line contains some space-separated words, consisting of lowercase English letters.We define a syllable as a string that contains exactly one vowel and any arbitrary number (possibly none) of consonants. In English alphabet following letters are considered to be vowels: 'a', 'e', 'i', 'o', 'u' and 'y'.Each word of the text that contains at least one vowel can be divided into syllables. Each character should be a part of exactly one syllable. For example, the word \"mamma\" can be divided into syllables as \"ma\" and \"mma\", \"mam\" and \"ma\", and \"mamm\" and \"a\". Words that consist of only consonants should be ignored.The verse patterns for the given text is a sequence of n integers p1,\u2009p2,\u2009...,\u2009pn. Text matches the given verse pattern if for each i from 1 to n one can divide words of the i-th line in syllables in such a way that the total number of syllables is equal to pi.You are given the text and the verse pattern. Check, if the given text matches the given verse pattern.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 the number of lines in the text.The second line contains integers p1,\u2009...,\u2009pn (0\u2009\u2264\u2009pi\u2009\u2264\u2009100)\u00a0\u2014 the verse pattern.Next n lines contain the text itself. Text consists of lowercase English letters and spaces. It's guaranteed that all lines are non-empty, each line starts and ends with a letter and words are separated by exactly one space. The length of each line doesn't exceed 100 characters.OutputIf the given text matches the given verse pattern, then print \"YES\" (without quotes) in the only line of the output. Otherwise, print \"NO\" (without quotes).ExamplesInputCopy32 2 3intelcodech allengeOutputCopyYESInputCopy41 2 3 1abcdefghijklmnopqrstuvwxyzOutputCopyNOInputCopy413 11 15 15to be or not to be that is the questionwhether tis nobler in the mind to sufferthe slings and arrows of outrageous fortuneor to take arms against a sea of troublesOutputCopyYESNoteIn the first sample, one can split words into syllables in the following way: in-telco-dech al-len-geSince the word \"ch\" in the third line doesn't contain vowels, we can ignore it. As the result we get 2 syllabels in first two lines and 3 syllables in the third one."], "Sagheer and Crossroads": ["https://codeforces.com/problemset/problem/812/A", "A. Sagheer and Crossroadstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSagheer is walking in the street when he comes to an intersection of two roads. Each road can be represented as two parts where each part has 3 lanes getting into the intersection (one for each direction) and 3 lanes getting out of the intersection, so we have 4 parts in total. Each part has 4 lights, one for each lane getting into the intersection (l \u2014 left, s \u2014 straight, r \u2014 right) and a light p for a pedestrian crossing.   An accident is possible if a car can hit a pedestrian. This can happen if the light of a pedestrian crossing of some part and the light of a lane that can get to or from that same part are green at the same time.Now, Sagheer is monitoring the configuration of the traffic lights. Your task is to help him detect whether an accident is possible.InputThe input consists of four lines with each line describing a road part given in a counter-clockwise order.Each line contains four integers l, s, r, p \u2014 for the left, straight, right and pedestrian lights, respectively. The possible values are 0 for red light and 1 for green light.OutputOn a single line, print \"YES\" if an accident is possible, and \"NO\" otherwise.ExamplesInputCopy1 0 0 10 1 0 00 0 1 00 0 0 1OutputCopyYESInputCopy0 1 1 01 0 1 01 1 0 00 0 0 1OutputCopyNOInputCopy1 0 0 00 0 0 10 0 0 01 0 1 0OutputCopyNONoteIn the first example, some accidents are possible because cars of part 1 can hit pedestrians of parts 1 and 4. Also, cars of parts 2 and 3 can hit pedestrians of part 4.In the second example, no car can pass the pedestrian crossing of part 4 which is the only green pedestrian light. So, no accident can occur."], "HDD is Outdated Technology": ["https://codeforces.com/problemset/problem/612/B", "B. HDD is Outdated Technologytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputHDD hard drives group data by sectors. All files are split to fragments and each of them are written in some sector of hard drive. Note the fragments can be written in sectors in arbitrary order.One of the problems of HDD hard drives is the following: the magnetic head should move from one sector to another to read some file.Find the time need to read file split to n fragments. The i-th sector contains the fi-th fragment of the file (1\u2009\u2264\u2009fi\u2009\u2264\u2009n). Note different sectors contains the different fragments. At the start the magnetic head is in the position that contains the first fragment. The file are reading in the following manner: at first the first fragment is read, then the magnetic head moves to the sector that contains the second fragment, then the second fragment is read and so on until the n-th fragment is read. The fragments are read in the order from the first to the n-th.It takes |a\u2009-\u2009b| time units to move the magnetic head from the sector a to the sector b. Reading a fragment takes no time.InputThe first line contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) \u2014 the number of fragments.The second line contains n different integers fi (1\u2009\u2264\u2009fi\u2009\u2264\u2009n) \u2014 the number of the fragment written in the i-th sector.OutputPrint the only integer \u2014 the number of time units needed to read the file.ExamplesInputCopy33 1 2OutputCopy3InputCopy51 3 5 4 2OutputCopy10NoteIn the second example the head moves in the following way:  1->2 means movement from the sector 1 to the sector 5, i.e. it takes 4 time units  2->3 means movement from the sector 5 to the sector 2, i.e. it takes 3 time units  3->4 means movement from the sector 2 to the sector 4, i.e. it takes 2 time units  4->5 means movement from the sector 4 to the sector 3, i.e. it takes 1 time units So the answer to the second example is 4\u2009+\u20093\u2009+\u20092\u2009+\u20091\u2009=\u200910."], "Moore's Law": ["https://codeforces.com/problemset/problem/630/B", "B. Moore's Lawtime limit per test0.5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputThe city administration of IT City decided to fix up a symbol of scientific and technical progress in the city's main square, namely an indicator board that shows the effect of Moore's law in real time.Moore's law is the observation that the number of transistors in a dense integrated circuit doubles approximately every 24 months. The implication of Moore's law is that computer performance as function of time increases exponentially as well.You are to prepare information that will change every second to display on the indicator board. Let's assume that every second the number of transistors increases exactly 1.000000011 times.InputThe only line of the input contains a pair of integers n (1000\u2009\u2264\u2009n\u2009\u2264\u200910\u00a0000) and t (0\u2009\u2264\u2009t\u2009\u2264\u20092\u00a0000\u00a0000\u00a0000)\u00a0\u2014 the number of transistors in the initial time and the number of seconds passed since the initial time.OutputOutput one number \u2014 the estimate of the number of transistors in a dence integrated circuit in t seconds since the initial time. The relative error of your answer should not be greater than 10\u2009-\u20096.ExamplesInputCopy1000 1000000OutputCopy1011.060722383550382782399454922040"], "PawnChess": ["https://codeforces.com/problemset/problem/592/A", "A. PawnChesstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGalois is one of the strongest chess players of Byteforces. He has even invented a new variant of chess, which he named \u00abPawnChess\u00bb.This new game is played on a board consisting of 8 rows and 8 columns. At the beginning of every game some black and white pawns are placed on the board. The number of black pawns placed is not necessarily equal to the number of white pawns placed.   Lets enumerate rows and columns with integers from 1 to 8. Rows are numbered from top to bottom, while columns are numbered from left to right. Now we denote as (r,\u2009c) the cell located at the row r and at the column c.There are always two players A and B playing the game. Player A plays with white pawns, while player B plays with black ones. The goal of player A is to put any of his pawns to the row 1, while player B tries to put any of his pawns to the row 8. As soon as any of the players completes his goal the game finishes immediately and the succeeded player is declared a winner.Player A moves first and then they alternate turns. On his move player A must choose exactly one white pawn and move it one step upward and player B (at his turn) must choose exactly one black pawn and move it one step down. Any move is possible only if the targeted cell is empty. It's guaranteed that for any scenario of the game there will always be at least one move available for any of the players.Moving upward means that the pawn located in (r,\u2009c) will go to the cell (r\u2009-\u20091,\u2009c), while moving down means the pawn located in (r,\u2009c) will go to the cell (r\u2009+\u20091,\u2009c). Again, the corresponding cell must be empty, i.e. not occupied by any other pawn of any color.Given the initial disposition of the board, determine who wins the game if both players play optimally. Note that there will always be a winner due to the restriction that for any game scenario both players will have some moves available.InputThe input consists of the board description given in eight lines, each line contains eight characters. Character 'B' is used to denote a black pawn, and character 'W' represents a white pawn. Empty cell is marked with '.'. It's guaranteed that there will not be white pawns on the first row neither black pawns on the last row.OutputPrint 'A' if player A wins the game on the given board, and 'B' if player B will claim the victory. Again, it's guaranteed that there will always be a winner on the given board.ExamplesInputCopy.................B....B.....W.............W.....................OutputCopyAInputCopy..B.......W...........B..............W........B.................OutputCopyBNoteIn the first sample player A is able to complete his goal in 3 steps by always moving a pawn initially located at (4,\u20095). Player B needs at least 5 steps for any of his pawns to reach the row 8. Hence, player A will be the winner."], "Inna and New Matrix of Candies": ["https://codeforces.com/problemset/problem/400/B", "B. Inna and New Matrix of Candiestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputInna likes sweets and a game called the \"Candy Matrix\". Today, she came up with the new game \"Candy Matrix 2: Reload\".The field for the new game is a rectangle table of size n\u2009\u00d7\u2009m. Each line of the table contains one cell with a dwarf figurine, one cell with a candy, the other cells of the line are empty. The game lasts for several moves. During each move the player should choose all lines of the matrix where dwarf is not on the cell with candy and shout \"Let's go!\". After that, all the dwarves from the chosen lines start to simultaneously move to the right. During each second, each dwarf goes to the adjacent cell that is located to the right of its current cell. The movement continues until one of the following events occurs:  some dwarf in one of the chosen lines is located in the rightmost cell of his row;  some dwarf in the chosen lines is located in the cell with the candy. The point of the game is to transport all the dwarves to the candy cells.Inna is fabulous, as she came up with such an interesting game. But what about you? Your task is to play this game optimally well. Specifically, you should say by the given game field what minimum number of moves the player needs to reach the goal of the game.InputThe first line of the input contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u20091000;\u00a02\u2009\u2264\u2009m\u2009\u2264\u20091000). Next n lines each contain m characters \u2014 the game field for the \"Candy Martix 2: Reload\". Character \"*\" represents an empty cell of the field, character \"G\" represents a dwarf and character \"S\" represents a candy. The matrix doesn't contain other characters. It is guaranteed that each line contains exactly one character \"G\" and one character \"S\".OutputIn a single line print a single integer \u2014 either the minimum number of moves needed to achieve the aim of the game, or -1, if the aim cannot be achieved on the given game field.ExamplesInputCopy3 4*G*SG**S*G*SOutputCopy2InputCopy1 3S*GOutputCopy-1"], "Pizza Separation": ["https://codeforces.com/problemset/problem/895/A", "A. Pizza Separationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputStudents Vasya and Petya are studying at the BSU (Byteland State University). At one of the breaks they decided to order a pizza. In this problem pizza is a circle of some radius. The pizza was delivered already cut into n pieces. The i-th piece is a sector of angle equal to ai. Vasya and Petya want to divide all pieces of pizza into two continuous sectors in such way that the difference between angles of these sectors is minimal. Sector angle is sum of angles of all pieces in it. Pay attention, that one of sectors can be empty.InputThe first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009360) \u00a0\u2014 the number of pieces into which the delivered pizza was cut.The second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009360) \u00a0\u2014 the angles of the sectors into which the pizza was cut. The sum of all ai is 360.OutputPrint one integer \u00a0\u2014 the minimal difference between angles of sectors that will go to Vasya and Petya.ExamplesInputCopy490 90 90 90OutputCopy0InputCopy3100 100 160OutputCopy40InputCopy1360OutputCopy360InputCopy4170 30 150 10OutputCopy0NoteIn first sample Vasya can take 1 and 2 pieces, Petya can take 3 and 4 pieces. Then the answer is |(90\u2009+\u200990)\u2009-\u2009(90\u2009+\u200990)|\u2009=\u20090.In third sample there is only one piece of pizza that can be taken by only one from Vasya and Petya. So the answer is |360\u2009-\u20090|\u2009=\u2009360.In fourth sample Vasya can take 1 and 4 pieces, then Petya will take 2 and 3 pieces. So the answer is |(170\u2009+\u200910)\u2009-\u2009(30\u2009+\u2009150)|\u2009=\u20090.Picture explaning fourth sample:Both red and green sectors consist of two adjacent pieces of pizza. So Vasya can take green sector, then Petya will take red sector."], "Network Topology": ["https://codeforces.com/problemset/problem/292/B", "B. Network Topologytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis problem uses a simplified network topology model, please read the problem statement carefully and use it as a formal document as you develop the solution.Polycarpus continues working as a system administrator in a large corporation. The computer network of this corporation consists of n computers, some of them are connected by a cable. The computers are indexed by integers from 1 to n. It's known that any two computers connected by cable directly or through other computersPolycarpus decided to find out the network's topology. A network topology is the way of describing the network configuration, the scheme that shows the location and the connections of network devices.Polycarpus knows three main network topologies: bus, ring and star. A bus is the topology that represents a shared cable with all computers connected with it. In the ring topology the cable connects each computer only with two other ones. A star is the topology where all computers of a network are connected to the single central node.Let's represent each of these network topologies as a connected non-directed graph. A bus is a connected graph that is the only path, that is, the graph where all nodes are connected with two other ones except for some two nodes that are the beginning and the end of the path. A ring is a connected graph, where all nodes are connected with two other ones. A star is a connected graph, where a single central node is singled out and connected with all other nodes. For clarifications, see the picture.  (1) \u2014 bus, (2) \u2014 ring, (3) \u2014 star You've got a connected non-directed graph that characterizes the computer network in Polycarpus' corporation. Help him find out, which topology type the given network is. If that is impossible to do, say that the network's topology is unknown. InputThe first line contains two space-separated integers n and m (4\u2009\u2264\u2009n\u2009\u2264\u2009105;\u00a03\u2009\u2264\u2009m\u2009\u2264\u2009105) \u2014 the number of nodes and edges in the graph, correspondingly. Next m lines contain the description of the graph's edges. The i-th line contains a space-separated pair of integers xi, yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n) \u2014 the numbers of nodes that are connected by the i-the edge.It is guaranteed that the given graph is connected. There is at most one edge between any two nodes. No edge connects a node with itself.OutputIn a single line print the network topology name of the given graph. If the answer is the bus, print \"bus topology\" (without the quotes), if the answer is the ring, print \"ring topology\" (without the quotes), if the answer is the star, print \"star topology\" (without the quotes). If no answer fits, print \"unknown topology\" (without the quotes).ExamplesInputCopy4 31 22 33 4OutputCopybus topologyInputCopy4 41 22 33 44 1OutputCopyring topologyInputCopy4 31 21 31 4OutputCopystar topologyInputCopy4 41 22 33 11 4OutputCopyunknown topology"], "Cards with Numbers": ["https://codeforces.com/problemset/problem/254/A", "A. Cards with Numberstime limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtPetya has got 2n cards, each card contains some integer. The numbers on the cards can be the same. Let's index all cards by consecutive integers from 1 to 2n. We'll denote the number that is written on a card with number i, as ai. In order to play one entertaining game with his friends, Petya needs to split the cards into pairs so that each pair had equal numbers on the cards. Help Petya do that.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105). The second line contains the sequence of 2n positive integers a1,\u2009a2,\u2009...,\u2009a2n (1\u2009\u2264\u2009ai\u2009\u2264\u20095000) \u2014 the numbers that are written on the cards. The numbers on the line are separated by single spaces.OutputIf it is impossible to divide the cards into pairs so that cards in each pair had the same numbers, print on a single line integer -1. But if the required partition exists, then print n pairs of integers, a pair per line \u2014 the indices of the cards that form the pairs.Separate the numbers on the lines by spaces. You can print the pairs and the numbers in the pairs in any order. If there are multiple solutions, print any of them.ExamplesInputCopy320 30 10 30 20 10OutputCopy4 21 56 3InputCopy11 2OutputCopy-1"], "Cutting Carrot": ["https://codeforces.com/problemset/problem/794/B", "B. Cutting Carrottime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIgor the analyst has adopted n little bunnies. As we all know, bunnies love carrots. Thus, Igor has bought a carrot to be shared between his bunnies. Igor wants to treat all the bunnies equally, and thus he wants to cut the carrot into n pieces of equal area. Formally, the carrot can be viewed as an isosceles triangle with base length equal to 1 and height equal to h. Igor wants to make n\u2009-\u20091 cuts parallel to the base to cut the carrot into n pieces. He wants to make sure that all n pieces have the same area. Can you help Igor determine where to cut the carrot so that each piece have equal area?  Illustration to the first example. InputThe first and only line of input contains two space-separated integers, n and h (2\u2009\u2264\u2009n\u2009\u2264\u20091000, 1\u2009\u2264\u2009h\u2009\u2264\u2009105).OutputThe output should contain n\u2009-\u20091 real numbers x1,\u2009x2,\u2009...,\u2009xn\u2009-\u20091. The number xi denotes that the i-th cut must be made xi units away from the apex of the carrot. In addition, 0\u2009<\u2009x1\u2009<\u2009x2\u2009<\u2009...\u2009<\u2009xn\u2009-\u20091\u2009<\u2009h must hold. Your output will be considered correct if absolute or relative error of every number in your output doesn't exceed 10\u2009-\u20096.Formally, let your answer be a, and the jury's answer be b. Your answer is considered correct if .ExamplesInputCopy3 2OutputCopy1.154700538379 1.632993161855InputCopy2 100000OutputCopy70710.678118654752NoteDefinition of isosceles triangle: https://en.wikipedia.org/wiki/Isosceles_triangle."], "Phone Numbers": ["https://codeforces.com/problemset/problem/898/C", "C. Phone Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has several phone books, in which he recorded the telephone numbers of his friends. Each of his friends can have one or several phone numbers.Vasya decided to organize information about the phone numbers of friends. You will be given n strings \u2014 all entries from Vasya's phone books. Each entry starts with a friend's name. Then follows the number of phone numbers in the current entry, and then the phone numbers themselves. It is possible that several identical phones are recorded in the same record.Vasya also believes that if the phone number a is a suffix of the phone number b (that is, the number b ends up with a), and both numbers are written by Vasya as the phone numbers of the same person, then a is recorded without the city code and it should not be taken into account.The task is to print organized information about the phone numbers of Vasya's friends. It is possible that two different people have the same number. If one person has two numbers x and y, and x is a suffix of y (that is, y ends in x), then you shouldn't print number x. If the number of a friend in the Vasya's phone books is recorded several times in the same format, it is necessary to take it into account exactly once.Read the examples to understand statement and format of the output better.InputFirst line contains the integer n (1\u2009\u2264\u2009n\u2009\u2264\u200920)\u00a0\u2014 number of entries in Vasya's phone books. The following n lines are followed by descriptions of the records in the format described in statement. Names of Vasya's friends are non-empty strings whose length does not exceed 10. They consists only of lowercase English letters. Number of phone numbers in one entry is not less than 1 is not more than 10. The telephone numbers consist of digits only. If you represent a phone number as a string, then its length will be in range from 1 to 10. Phone numbers can contain leading zeros.OutputPrint out the ordered information about the phone numbers of Vasya's friends. First output m\u00a0\u2014 number of friends that are found in Vasya's phone books.The following m lines must contain entries in the following format \"name number_of_phone_numbers phone_numbers\". Phone numbers should be separated by a space. Each record must contain all the phone numbers of current friend.Entries can be displayed in arbitrary order, phone numbers for one record can also be printed in arbitrary order.ExamplesInputCopy2ivan 1 00123masha 1 00123OutputCopy2masha 1 00123 ivan 1 00123 InputCopy3karl 2 612 12petr 1 12katya 1 612OutputCopy3katya 1 612 petr 1 12 karl 1 612 InputCopy4ivan 3 123 123 456ivan 2 456 456ivan 8 789 3 23 6 56 9 89 2dasha 2 23 789OutputCopy2dasha 2 23 789 ivan 4 789 123 2 456 "], "Fortune Telling": ["https://codeforces.com/problemset/problem/1634/B", "B. Fortune Tellingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputHaha, try to solve this, SelectorUnlimited!\u2014 antontrygubO_oYour friends Alice and Bob practice fortune telling.Fortune telling is performed as follows. There is a well-known array aa of nn non-negative integers indexed from 11 to nn. The tellee starts with some non-negative number dd and performs one of the two operations for each i=1,2,\u2026,ni=1,2,\u2026,n, in the increasing order of ii. The possible operations are: replace their current number dd with d+aid+ai replace their current number dd with d\u2295aid\u2295ai (hereinafter \u2295\u2295 denotes the bitwise XOR operation)Notice that the chosen operation may be different for different ii and for different tellees.One time, Alice decided to start with d=xd=x and Bob started with d=x+3d=x+3. Each of them performed fortune telling and got a particular number in the end. Notice that the friends chose operations independently of each other, that is, they could apply different operations for the same ii.You learnt that either Alice or Bob ended up with number yy in the end, but you don't know whose of the two it was. Given the numbers Alice and Bob started with and yy, find out who (Alice or Bob) could get the number yy after performing the operations. It is guaranteed that on the jury tests, exactly one of your friends could have actually gotten that number.HacksYou cannot make hacks in this problem.InputOn the first line of the input, you are given one number tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. The following 2\u22c5t2\u22c5t lines contain test cases.The first line of each test case contains three numbers nn, xx, yy (1\u2264n\u22641051\u2264n\u2264105, 0\u2264x\u22641090\u2264x\u2264109, 0\u2264y\u226410150\u2264y\u22641015)\u00a0\u2014 the length of array aa, Alice's initial number (Bob's initial number is therefore x+3x+3), and the number that one of the two friends got in the end.The second line of each test case contains nn numbers\u00a0\u2014 the array aa (0\u2264ai\u22641090\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case, print the name of the friend who could get the number yy: \"Alice\" or \"Bob\".ExampleInputCopy4\n1 7 9\n2\n2 0 2\n1 3\n4 0 1\n1 2 3 4\n2 1000000000 3000000000\n1000000000 1000000000\nOutputCopyAlice\nAlice\nBob\nAlice\nNoteIn the first test case, Alice could get 99 using the following operations: 7+2=97+2=9.In the second test case, Alice could get 22 using this operations: (0+1)\u22953=2(0+1)\u22953=2.In the third test case, Bob started with x+3=0+3=3x+3=0+3=3 and could get 11 this way: (((3+1)+2)\u22953)\u22954=1(((3+1)+2)\u22953)\u22954=1."], "Distances to Zero": ["https://codeforces.com/problemset/problem/803/B", "B. Distances to Zerotime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given the array of integer numbers a0,\u2009a1,\u2009...,\u2009an\u2009-\u20091. For each element find the distance to the nearest zero (to the element which equals to zero). There is at least one zero element in the given array.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) \u2014 length of the array a. The second line contains integer elements of the array separated by single spaces (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109).OutputPrint the sequence d0,\u2009d1,\u2009...,\u2009dn\u2009-\u20091, where di is the difference of indices between i and nearest j such that aj\u2009=\u20090. It is possible that i\u2009=\u2009j.ExamplesInputCopy92 1 0 3 0 0 3 2 4OutputCopy2 1 0 1 0 0 1 2 3 InputCopy50 1 2 3 4OutputCopy0 1 2 3 4 InputCopy75 6 0 1 -2 3 4OutputCopy2 1 0 1 2 3 4 "], "Months and Years": ["https://codeforces.com/problemset/problem/899/B", "B. Months and Yearstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputEverybody in Russia uses Gregorian calendar. In this calendar there are 31 days in January, 28 or 29 days in February (depending on whether the year is leap or not), 31 days in March, 30 days in April, 31 days in May, 30 in June, 31 in July, 31 in August, 30 in September, 31 in October, 30 in November, 31 in December.A year is leap in one of two cases: either its number is divisible by 4, but not divisible by 100, or is divisible by 400. For example, the following years are leap: 2000, 2004, but years 1900 and 2018 are not leap.In this problem you are given n (1\u2009\u2264\u2009n\u2009\u2264\u200924) integers a1,\u2009a2,\u2009...,\u2009an, and you have to check if these integers could be durations in days of n consecutive months, according to Gregorian calendar. Note that these months could belong to several consecutive years. In other words, check if there is a month in some year, such that its duration is a1 days, duration of the next month is a2 days, and so on.InputThe first line contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200924) \u2014 the number of integers.The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (28\u2009\u2264\u2009ai\u2009\u2264\u200931) \u2014 the numbers you are to check.OutputIf there are several consecutive months that fit the sequence, print \"YES\" (without quotes). Otherwise, print \"NO\" (without quotes).You can print each letter in arbitrary case (small or large).ExamplesInputCopy431 31 30 31OutputCopyYesInputCopy230 30OutputCopyNoInputCopy529 31 30 31 30OutputCopyYesInputCopy331 28 30OutputCopyNoInputCopy331 31 28OutputCopyYesNoteIn the first example the integers can denote months July, August, September and October.In the second example the answer is no, because there are no two consecutive months each having 30 days.In the third example the months are: February (leap year) \u2014 March \u2014 April \u2013 May \u2014 June.In the fourth example the number of days in the second month is 28, so this is February. March follows February and has 31 days, but not 30, so the answer is NO.In the fifth example the months are: December \u2014 January \u2014 February (non-leap year)."], "2Char": ["https://codeforces.com/problemset/problem/593/A", "A. 2Chartime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAndrew often reads articles in his favorite magazine 2Char. The main feature of these articles is that each of them uses at most two distinct letters. Andrew decided to send an article to the magazine, but as he hasn't written any article, he just decided to take a random one from magazine 26Char. However, before sending it to the magazine 2Char, he needs to adapt the text to the format of the journal. To do so, he removes some words from the chosen article, in such a way that the remaining text can be written using no more than two distinct letters.Since the payment depends from the number of non-space characters in the article, Andrew wants to keep the words with the maximum total length.InputThe first line of the input contains number n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 the number of words in the article chosen by Andrew. Following are n lines, each of them contains one word. All the words consist only of small English letters and their total length doesn't exceed 1000. The words are not guaranteed to be distinct, in this case you are allowed to use a word in the article as many times as it appears in the input.OutputPrint a single integer\u00a0\u2014 the maximum possible total length of words in Andrew's article.ExamplesInputCopy4abbcaccaaabbbOutputCopy9InputCopy5aabcbcbcdecdecdecdecdecdeaaaaOutputCopy6NoteIn the first sample the optimal way to choose words is {'abb', 'aaa', 'bbb'}.In the second sample the word 'cdecdecdecdecdecde' consists of three distinct letters, and thus cannot be used in the article. The optimal answer is {'a', 'a', 'aaaa'}."], "Treasure Hunt": ["https://codeforces.com/problemset/problem/817/A", "A. Treasure Hunttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputCaptain Bill the Hummingbird and his crew recieved an interesting challenge offer. Some stranger gave them a map, potion of teleportation and said that only this potion might help them to reach the treasure. Bottle with potion has two values x and y written on it. These values define four moves which can be performed using the potion:         Map shows that the position of Captain Bill the Hummingbird is (x1,\u2009y1) and the position of the treasure is (x2,\u2009y2).You task is to tell Captain Bill the Hummingbird whether he should accept this challenge or decline. If it is possible for Captain to reach the treasure using the potion then output \"YES\", otherwise \"NO\" (without quotes).The potion can be used infinite amount of times.InputThe first line contains four integer numbers x1,\u2009y1,\u2009x2,\u2009y2 (\u2009-\u2009105\u2009\u2264\u2009x1,\u2009y1,\u2009x2,\u2009y2\u2009\u2264\u2009105) \u2014 positions of Captain Bill the Hummingbird and treasure respectively.The second line contains two integer numbers x,\u2009y (1\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009105) \u2014 values on the potion bottle.OutputPrint \"YES\" if it is possible for Captain to reach the treasure using the potion, otherwise print \"NO\" (without quotes).ExamplesInputCopy0 0 0 62 3OutputCopyYESInputCopy1 1 3 61 5OutputCopyNONoteIn the first example there exists such sequence of moves:   \u2014 the first type of move   \u2014 the third type of move "], "Bear and Displayed Friends": ["https://codeforces.com/problemset/problem/639/A", "A. Bear and Displayed Friendstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLimak is a little polar bear. He loves connecting with other bears via social networks. He has n friends and his relation with the i-th of them is described by a unique integer ti. The bigger this value is, the better the friendship is. No two friends have the same value ti.Spring is starting and the Winter sleep is over for bears. Limak has just woken up and logged in. All his friends still sleep and thus none of them is online. Some (maybe all) of them will appear online in the next hours, one at a time.The system displays friends who are online. On the screen there is space to display at most k friends. If there are more than k friends online then the system displays only k best of them\u00a0\u2014 those with biggest ti.Your task is to handle queries of two types:  \"1 id\"\u00a0\u2014 Friend id becomes online. It's guaranteed that he wasn't online before.  \"2 id\"\u00a0\u2014 Check whether friend id is displayed by the system. Print \"YES\" or \"NO\" in a separate line. Are you able to help Limak and answer all queries of the second type?InputThe first line contains three integers n, k and q (1\u2009\u2264\u2009n,\u2009q\u2009\u2264\u2009150\u2009000,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009min(6,\u2009n))\u00a0\u2014 the number of friends, the maximum number of displayed online friends and the number of queries, respectively.The second line contains n integers t1,\u2009t2,\u2009...,\u2009tn (1\u2009\u2264\u2009ti\u2009\u2264\u2009109) where ti describes how good is Limak's relation with the i-th friend.The i-th of the following q lines contains two integers typei and idi (1\u2009\u2264\u2009typei\u2009\u2264\u20092,\u20091\u2009\u2264\u2009idi\u2009\u2264\u2009n)\u00a0\u2014 the i-th query. If typei\u2009=\u20091 then a friend idi becomes online. If typei\u2009=\u20092 then you should check whether a friend idi is displayed.It's guaranteed that no two queries of the first type will have the same idi becuase one friend can't become online twice. Also, it's guaranteed that at least one query will be of the second type (typei\u2009=\u20092) so the output won't be empty.OutputFor each query of the second type print one line with the answer\u00a0\u2014 \"YES\" (without quotes) if the given friend is displayed and \"NO\" (without quotes) otherwise.ExamplesInputCopy4 2 8300 950 500 2001 32 42 31 11 22 12 22 3OutputCopyNOYESNOYESYESInputCopy6 3 950 20 51 17 99 241 31 41 51 22 42 21 12 42 3OutputCopyNOYESNOYESNoteIn the first sample, Limak has 4 friends who all sleep initially. At first, the system displays nobody because nobody is online. There are the following 8 queries:  \"1 3\"\u00a0\u2014 Friend 3 becomes online.  \"2 4\"\u00a0\u2014 We should check if friend 4 is displayed. He isn't even online and thus we print \"NO\".  \"2 3\"\u00a0\u2014 We should check if friend 3 is displayed. Right now he is the only friend online and the system displays him. We should print \"YES\".  \"1 1\"\u00a0\u2014 Friend 1 becomes online. The system now displays both friend 1 and friend 3.  \"1 2\"\u00a0\u2014 Friend 2 becomes online. There are 3 friends online now but we were given k\u2009=\u20092 so only two friends can be displayed. Limak has worse relation with friend 1 than with other two online friends (t1\u2009<\u2009t2,\u2009t3) so friend 1 won't be displayed  \"2 1\"\u00a0\u2014 Print \"NO\".  \"2 2\"\u00a0\u2014 Print \"YES\".  \"2 3\"\u00a0\u2014 Print \"YES\". "], "Little Frog": ["https://codeforces.com/problemset/problem/53/C", "C. Little Frogtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce upon a time a little frog whose name was Vasya decided to travel around his home swamp. Overall there are n mounds on the swamp, located on one line. The distance between the neighboring mounds is one meter. Vasya wants to visit all the mounds in one day; besides, he wants to visit each one exactly once. For that he makes a route plan, to decide the order in which to jump on the mounds. Vasya can pick any mound as the first one. He thinks it boring to jump two times at the same distance. That's why he wants any two jumps on his route to have different lengths. Help Vasya the Frog and make the plan for him.InputThe single line contains a number n (1\u2009\u2264\u2009n\u2009\u2264\u2009104) which is the number of mounds.OutputPrint n integers pi (1\u2009\u2264\u2009pi\u2009\u2264\u2009n) which are the frog's route plan.   All the pi's should be mutually different.  All the |pi\u2013pi\u2009+\u20091|'s should be mutually different (1\u2009\u2264\u2009i\u2009\u2264\u2009n\u2009-\u20091). If there are several solutions, output any.ExamplesInputCopy2OutputCopy1 2 InputCopy3OutputCopy1 3 2 "], "Heidi Learns Hashing (Easy)": ["https://codeforces.com/problemset/problem/1184/A1", "A1. Heidi Learns Hashing (Easy)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMelody Pond was stolen from her parents as a newborn baby by Madame Kovarian, to become a weapon of the Silence in their crusade against the Doctor. Madame Kovarian changed Melody's name to River Song, giving her a new identity that allowed her to kill the Eleventh Doctor.Heidi figured out that Madame Kovarian uses a very complicated hashing function in order to change the names of the babies she steals. In order to prevent this from happening to future Doctors, Heidi decided to prepare herself by learning some basic hashing techniques.The first hashing function she designed is as follows.Given two positive integers (x,y)(x,y) she defines H(x,y):=x2+2xy+x+1H(x,y):=x2+2xy+x+1.Now, Heidi wonders if the function is reversible. That is, given a positive integer rr, can you find a pair (x,y)(x,y) (of positive integers) such that H(x,y)=rH(x,y)=r?If multiple such pairs exist, output the one with smallest possible xx. If there is no such pair, output \"NO\".InputThe first and only line contains an integer rr (1\u2264r\u226410121\u2264r\u22641012).OutputOutput integers x,yx,y such that H(x,y)=rH(x,y)=r and xx is smallest possible, or \"NO\" if no such pair exists.ExamplesInputCopy19\nOutputCopy1 8\nInputCopy16\nOutputCopyNO\n"], "Food on the Plane": ["https://codeforces.com/problemset/problem/725/B", "B. Food on the Planetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA new airplane SuperPuperJet has an infinite number of rows, numbered with positive integers starting with 1 from cockpit to tail. There are six seats in each row, denoted with letters from 'a' to 'f'. Seats 'a', 'b' and 'c' are located to the left of an aisle (if one looks in the direction of the cockpit), while seats 'd', 'e' and 'f' are located to the right. Seats 'a' and 'f' are located near the windows, while seats 'c' and 'd' are located near the aisle.   \u00a0It's lunch time and two flight attendants have just started to serve food. They move from the first rows to the tail, always maintaining a distance of two rows from each other because of the food trolley. Thus, at the beginning the first attendant serves row 1 while the second attendant serves row 3. When both rows are done they move one row forward: the first attendant serves row 2 while the second attendant serves row 4. Then they move three rows forward and the first attendant serves row 5 while the second attendant serves row 7. Then they move one row forward again and so on.Flight attendants work with the same speed: it takes exactly 1 second to serve one passenger and 1 second to move one row forward. Each attendant first serves the passengers on the seats to the right of the aisle and then serves passengers on the seats to the left of the aisle (if one looks in the direction of the cockpit). Moreover, they always serve passengers in order from the window to the aisle. Thus, the first passenger to receive food in each row is located in seat 'f', and the last one\u00a0\u2014 in seat 'c'. Assume that all seats are occupied.Vasya has seat s in row n and wants to know how many seconds will pass before he gets his lunch.InputThe only line of input contains a description of Vasya's seat in the format ns, where n (1\u2009\u2264\u2009n\u2009\u2264\u20091018) is the index of the row and s is the seat in this row, denoted as letter from 'a' to 'f'. The index of the row and the seat are not separated by a space.OutputPrint one integer\u00a0\u2014 the number of seconds Vasya has to wait until he gets his lunch.ExamplesInputCopy1fOutputCopy1InputCopy2dOutputCopy10InputCopy4aOutputCopy11InputCopy5eOutputCopy18NoteIn the first sample, the first flight attendant serves Vasya first, so Vasya gets his lunch after 1 second.In the second sample, the flight attendants will spend 6 seconds to serve everyone in the rows 1 and 3, then they will move one row forward in 1 second. As they first serve seats located to the right of the aisle in order from window to aisle, Vasya has to wait 3 more seconds. The total is 6\u2009+\u20091\u2009+\u20093\u2009=\u200910."], "Personalized Cup": ["https://codeforces.com/problemset/problem/1032/B", "B. Personalized Cuptime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAt many competitions that have a word \u00abcup\u00bb in its official name the winner is presented with an actual cup. This time the organizers of one unusual programming competition have decided to please the winner even more and to add a nameplate to the cup with the handle of the winner.The nameplate is to be rectangular and the text on it will be printed as a table of several rows and columns. Having some measurements done, the organizers have found out that the number aa of rows cannot be greater than 55 while the number bb of columns cannot exceed 2020. Every cell of the table will contain either an asterisk (\u00ab*\u00bb) or a letter of user's handle.Furthermore, the organizers want the rows of the table to be uniform, which means that the number of asterisks used in different rows should differ by at most one (i.e. you can't have two asterisks in the first row and none in the second). The main goal, however, is to obtain the winner's handle precisely when reading the table from top to bottom and from left to right in every row (skipping asterisks).The organizers want for the nameplate to have as few rows as possible and among all valid tables with the minimum number of rows they want to choose the one that has the minimum number of columns.The winner is not yet determined so your task is to write a program that, given a certain handle, generates the necessary table.InputThe only line contains one string ss (1\u2264|s|\u22641001\u2264|s|\u2264100), comprised of uppercase and lowercase Latin letters, \u00a0\u2014 the handle of the winner.OutputIn the first line output the minimum number aa of rows in the table and the minimum number bb of columns in an optimal table with rows.The following aa lines should contain bb characters each \u00a0\u2014 any valid table.ExamplesInputCopytourist\nOutputCopy1 7\ntourist\nInputCopyMyNameIsLifeIAmForeverByYourSideMyNameIsLife\nOutputCopy3 15\nMyNameIsLifeIAm\nForeverByYourSi\ndeMyNameIsL*ife\n"], "Help Kingdom of Far Far Away 2": ["https://codeforces.com/problemset/problem/143/B", "B. Help Kingdom of Far Far Away 2time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputFor some time the program of rounding numbers that had been developed by the Codeforces participants during one of the previous rounds, helped the citizens of Far Far Away to convert numbers into a more easily readable format. However, as time went by, the economy of the Far Far Away developed and the scale of operations grew. So the King ordered to found the Bank of Far Far Away and very soon even the rounding didn't help to quickly determine even the order of the numbers involved in operations. Besides, rounding a number to an integer wasn't very convenient as a bank needed to operate with all numbers with accuracy of up to 0.01, and not up to an integer.The King issued yet another order: to introduce financial format to represent numbers denoting amounts of money. The formal rules of storing a number in the financial format are as follows:   A number contains the integer part and the fractional part. The two parts are separated with a character \".\" (decimal point).  To make digits in the integer part of a number easier to read, they are split into groups of three digits, starting from the least significant ones. The groups are separated with the character \",\" (comma). For example, if the integer part of a number equals 12345678, then it will be stored in the financial format as 12,345,678  In the financial format a number's fractional part should contain exactly two digits. So, if the initial number (the number that is converted into the financial format) contains less than two digits in the fractional part (or contains no digits at all), it is complemented with zeros until its length equals 2. If the fractional part contains more than two digits, the extra digits are simply discarded (they are not rounded: see sample tests).  When a number is stored in the financial format, the minus sign is not written. Instead, if the initial number had the minus sign, the result is written in round brackets.  Please keep in mind that the bank of Far Far Away operates using an exotic foreign currency \u2014 snakes ($), that's why right before the number in the financial format we should put the sign \"$\". If the number should be written in the brackets, then the snake sign should also be inside the brackets. For example, by the above given rules number 2012 will be stored in the financial format as \"$2,012.00\" and number -12345678.9 will be stored as \"($12,345,678.90)\".The merchants of Far Far Away visited you again and expressed much hope that you supply them with the program that can convert arbitrary numbers to the financial format. Can you help them?InputThe input contains a number that needs to be converted into financial format. The number's notation length does not exceed 100 characters, including (possible) signs \"-\" (minus) and \".\" (decimal point). The number's notation is correct, that is:   The number's notation only contains characters from the set {\"0\" \u2013 \"9\", \"-\", \".\"}.  The decimal point (if it is present) is unique and is preceded and followed by a non-zero quantity on decimal digits  A number cannot start with digit 0, except for a case when its whole integer part equals zero (in this case the integer parts is guaranteed to be a single zero: \"0\").  The minus sign (if it is present) is unique and stands in the very beginning of the number's notation  If a number is identically equal to 0 (that is, if it is written as, for example, \"0\" or \"0.000\"), than it is not preceded by the minus sign.  The input data contains no spaces.  The number's notation contains at least one decimal digit. OutputPrint the number given in the input in the financial format by the rules described in the problem statement.ExamplesInputCopy2012OutputCopy$2,012.00InputCopy0.000OutputCopy$0.00InputCopy-0.00987654321OutputCopy($0.00)InputCopy-12345678.9OutputCopy($12,345,678.90)NotePay attention to the second and third sample tests. They show that the sign of a number in the financial format (and consequently, the presence or absence of brackets) is determined solely by the sign of the initial number. It does not depend on the sign of the number you got after translating the number to the financial format."], "King's Task": ["https://codeforces.com/problemset/problem/1510/K", "K. King's Tasktime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThe brave Knight came to the King and asked permission to marry the princess. The King knew that the Knight was brave, but he also wanted to know if he was smart enough. So he asked him to solve the following task.There is a permutation pipi of numbers from 1 to 2n2n. You can make two types of operations.   Swap p1p1 and p2p2, p3p3 and p4p4, ..., p2n\u22121p2n\u22121 and p2np2n.  Swap p1p1 and pn+1pn+1, p2p2 and pn+2pn+2, ..., pnpn and p2np2n. The task is to find the minimal number of operations required to sort the given permutation.The Knight was not that smart actually, but quite charming, so the princess asks you to help him to solve the King's task.InputThe first line contains the integer nn (1\u2264n\u226410001\u2264n\u22641000). The second line contains 2n2n integers pipi\u00a0\u2014 the permutation of numbers from 1 to 2n2n.OutputPrint one integer\u00a0\u2014 the minimal number of operations required to sort the permutation. If it is impossible to sort the permutation using these operations, print \u22121\u22121.ExamplesInputCopy3\n6 3 2 5 4 1\nOutputCopy3\nInputCopy2\n3 4 2 1\nOutputCopy-1\nInputCopy4\n1 2 3 4 5 6 7 8\nOutputCopy0\nNoteIn the first example, you can sort the permutation in three operations:   Make operation 1: 3,6,5,2,1,43,6,5,2,1,4.  Make operation 2: 2,1,4,3,6,52,1,4,3,6,5.  Make operation 1: 1,2,3,4,5,61,2,3,4,5,6. "], "Tiling with Hexagons": ["https://codeforces.com/problemset/problem/216/A", "A. Tiling with Hexagonstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSeveral ages ago Berland was a kingdom. The King of Berland adored math. That's why, when he first visited one of his many palaces, he first of all paid attention to the floor in one hall. The floor was tiled with hexagonal tiles.The hall also turned out hexagonal in its shape. The King walked along the perimeter of the hall and concluded that each of the six sides has a, b, c, a, b and c adjacent tiles, correspondingly.To better visualize the situation, look at the picture showing a similar hexagon for a\u2009=\u20092, b\u2009=\u20093 and c\u2009=\u20094.  According to the legend, as the King of Berland obtained the values a, b and c, he almost immediately calculated the total number of tiles on the hall floor. Can you do the same?InputThe first line contains three integers: a, b and c (2\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u20091000).OutputPrint a single number \u2014 the total number of tiles on the hall floor.ExamplesInputCopy2 3 4OutputCopy18"], "Center Alignment": ["https://codeforces.com/problemset/problem/5/B", "B. Center Alignmenttime limit per test1 secondmemory limit per test64 megabytesinputstandard inputoutputstandard outputAlmost every text editor has a built-in function of center text alignment. The developers of the popular in Berland text editor \u00abTextpad\u00bb decided to introduce this functionality into the fourth release of the product.You are to implement the alignment in the shortest possible time. Good luck!InputThe input file consists of one or more lines, each of the lines contains Latin letters, digits and/or spaces. The lines cannot start or end with a space. It is guaranteed that at least one of the lines has positive length. The length of each line and the total amount of the lines do not exceed 1000. OutputFormat the given text, aligning it center. Frame the whole text with characters \u00ab*\u00bb of the minimum size. If a line cannot be aligned perfectly (for example, the line has even length, while the width of the block is uneven), you should place such lines rounding down the distance to the left or to the right edge and bringing them closer left or right alternatively (you should start with bringing left). Study the sample tests carefully to understand the output format better.ExamplesInputCopyThis  isCodeforcesBetaRound5OutputCopy************* This  is **          **Codeforces**   Beta   **  Round   **     5    *************InputCopywelcome to theCodeforcesBetaRound 5andgood luckOutputCopy*****************welcome to the**  Codeforces  **     Beta     **   Round 5    **              **      and     **  good luck   *****************"], "Code Parsing": ["https://codeforces.com/problemset/problem/255/B", "B. Code Parsingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Vitaly loves different algorithms. Today he has invented a new algorithm just for you. Vitaly's algorithm works with string s, consisting of characters \"x\" and \"y\", and uses two following operations at runtime:  Find two consecutive characters in the string, such that the first of them equals \"y\", and the second one equals \"x\" and swap them. If there are several suitable pairs of characters, we choose the pair of characters that is located closer to the beginning of the string.  Find in the string two consecutive characters, such that the first of them equals \"x\" and the second one equals \"y\". Remove these characters from the string. If there are several suitable pairs of characters, we choose the pair of characters that is located closer to the beginning of the string. The input for the new algorithm is string s, and the algorithm works as follows:  If you can apply at least one of the described operations to the string, go to step 2 of the algorithm. Otherwise, stop executing the algorithm and print the current string.  If you can apply operation 1, then apply it. Otherwise, apply operation 2. After you apply the operation, go to step 1 of the algorithm. Now Vitaly wonders, what is going to be printed as the result of the algorithm's work, if the input receives string s.InputThe first line contains a non-empty string s. It is guaranteed that the string only consists of characters \"x\" and \"y\". It is guaranteed that the string consists of at most 106 characters. It is guaranteed that as the result of the algorithm's execution won't be an empty string.OutputIn the only line print the string that is printed as the result of the algorithm's work, if the input of the algorithm input receives string s.ExamplesInputCopyxOutputCopyxInputCopyyxyxyOutputCopyyInputCopyxxxxxyOutputCopyxxxxNoteIn the first test the algorithm will end after the first step of the algorithm, as it is impossible to apply any operation. Thus, the string won't change.In the second test the transformation will be like this:  string \"yxyxy\" transforms into string \"xyyxy\";  string \"xyyxy\" transforms into string \"xyxyy\";  string \"xyxyy\" transforms into string \"xxyyy\";  string \"xxyyy\" transforms into string \"xyy\";  string \"xyy\" transforms into string \"y\". As a result, we've got string \"y\". In the third test case only one transformation will take place: string \"xxxxxy\" transforms into string \"xxxx\". Thus, the answer will be string \"xxxx\"."], "Train and Peter": ["https://codeforces.com/problemset/problem/8/A", "A. Train and Petertime limit per test1 secondmemory limit per test64 megabytesinputstandard inputoutputstandard outputPeter likes to travel by train. He likes it so much that on the train he falls asleep. Once in summer Peter was going by train from city A to city B, and as usual, was sleeping. Then he woke up, started to look through the window and noticed that every railway station has a flag of a particular colour.The boy started to memorize the order of the flags' colours that he had seen. But soon he fell asleep again. Unfortunately, he didn't sleep long, he woke up and went on memorizing the colours. Then he fell asleep again, and that time he slept till the end of the journey.At the station he told his parents about what he was doing, and wrote two sequences of the colours that he had seen before and after his sleep, respectively.Peter's parents know that their son likes to fantasize. They give you the list of the flags' colours at the stations that the train passes sequentially on the way from A to B, and ask you to find out if Peter could see those sequences on the way from A to B, or from B to A. Remember, please, that Peter had two periods of wakefulness.Peter's parents put lowercase Latin letters for colours. The same letter stands for the same colour, different letters \u2014 for different colours.InputThe input data contains three lines. The first line contains a non-empty string, whose length does not exceed 105, the string consists of lowercase Latin letters \u2014 the flags' colours at the stations on the way from A to B. On the way from B to A the train passes the same stations, but in reverse order. The second line contains the sequence, written by Peter during the first period of wakefulness. The third line contains the sequence, written during the second period of wakefulness. Both sequences are non-empty, consist of lowercase Latin letters, and the length of each does not exceed 100 letters. Each of the sequences is written in chronological order. OutputOutput one of the four words without inverted commas:   \u00abforward\u00bb \u2014 if Peter could see such sequences only on the way from A to B;  \u00abbackward\u00bb \u2014 if Peter could see such sequences on the way from B to A;  \u00abboth\u00bb \u2014 if Peter could see such sequences both on the way from A to B, and on the way from B to A;  \u00abfantasy\u00bb \u2014 if Peter could not see such sequences. ExamplesInputCopyatobabOutputCopyforwardInputCopyaaacaaaacaaaOutputCopybothNoteIt is assumed that the train moves all the time, so one flag cannot be seen twice. There are no flags at stations A and B."], "Running Student": ["https://codeforces.com/problemset/problem/9/B", "B. Running Studenttime limit per test1 secondmemory limit per test64 megabytesinputstandard inputoutputstandard outputAnd again a misfortune fell on Poor Student. He is being late for an exam.Having rushed to a bus stop that is in point (0,\u20090), he got on a minibus and they drove along a straight line, parallel to axis OX, in the direction of increasing x.Poor Student knows the following:   during one run the minibus makes n stops, the i-th stop is in point (xi,\u20090)  coordinates of all the stops are different  the minibus drives at a constant speed, equal to vb  it can be assumed the passengers get on and off the minibus at a bus stop momentarily  Student can get off the minibus only at a bus stop  Student will have to get off the minibus at a terminal stop, if he does not get off earlier  the University, where the exam will be held, is in point (xu,\u2009yu)  Student can run from a bus stop to the University at a constant speed vs as long as needed  a distance between two points can be calculated according to the following formula:   Student is already on the minibus, so, he cannot get off at the first bus stop Poor Student wants to get to the University as soon as possible. Help him to choose the bus stop, where he should get off. If such bus stops are multiple, choose the bus stop closest to the University.InputThe first line contains three integer numbers: 2\u2009\u2264\u2009n\u2009\u2264\u2009100, 1\u2009\u2264\u2009vb,\u2009vs\u2009\u2264\u20091000. The second line contains n non-negative integers in ascending order: coordinates xi of the bus stop with index i. It is guaranteed that x1 equals to zero, and xn\u2009\u2264\u2009105. The third line contains the coordinates of the University, integers xu and yu, not exceeding 105 in absolute value. OutputIn the only line output the answer to the problem \u2014 index of the optimum bus stop.ExamplesInputCopy4 5 20 2 4 64 1OutputCopy3InputCopy2 1 10 100000100000 100000OutputCopy2NoteAs you know, students are a special sort of people, and minibuses usually do not hurry. That's why you should not be surprised, if Student's speed is higher than the speed of the minibus."], "Sereja and Contests": ["https://codeforces.com/problemset/problem/401/B", "B. Sereja and Conteststime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSereja is a coder and he likes to take part in Codesorfes rounds. However, Uzhland doesn't have good internet connection, so Sereja sometimes skips rounds.Codesorfes has rounds of two types: Div1 (for advanced coders) and Div2 (for beginner coders). Two rounds, Div1 and Div2, can go simultaneously, (Div1 round cannot be held without Div2) in all other cases the rounds don't overlap in time. Each round has a unique identifier \u2014 a positive integer. The rounds are sequentially (without gaps) numbered with identifiers by the starting time of the round. The identifiers of rounds that are run simultaneously are different by one, also the identifier of the Div1 round is always greater.Sereja is a beginner coder, so he can take part only in rounds of Div2 type. At the moment he is taking part in a Div2 round, its identifier equals to x. Sereja remembers very well that he has taken part in exactly k rounds before this round. Also, he remembers all identifiers of the rounds he has taken part in and all identifiers of the rounds that went simultaneously with them. Sereja doesn't remember anything about the rounds he missed.Sereja is wondering: what minimum and what maximum number of Div2 rounds could he have missed? Help him find these two numbers.InputThe first line contains two integers: x (1\u2009\u2264\u2009x\u2009\u2264\u20094000) \u2014 the round Sereja is taking part in today, and k (0\u2009\u2264\u2009k\u2009<\u20094000) \u2014 the number of rounds he took part in.Next k lines contain the descriptions of the rounds that Sereja took part in before. If Sereja took part in one of two simultaneous rounds, the corresponding line looks like: \"1 num2 num1\" (where num2 is the identifier of this Div2 round, num1 is the identifier of the Div1 round). It is guaranteed that num1\u2009-\u2009num2\u2009=\u20091. If Sereja took part in a usual Div2 round, then the corresponding line looks like: \"2 num\" (where num is the identifier of this Div2 round). It is guaranteed that the identifiers of all given rounds are less than x.OutputPrint in a single line two integers \u2014 the minimum and the maximum number of rounds that Sereja could have missed.ExamplesInputCopy3 22 12 2OutputCopy0 0InputCopy9 31 2 32 81 4 5OutputCopy2 3InputCopy10 0OutputCopy5 9NoteIn the second sample we have unused identifiers of rounds 1, 6, 7. The minimum number of rounds Sereja could have missed equals to 2. In this case, the round with the identifier 1 will be a usual Div2 round and the round with identifier 6 will be synchronous with the Div1 round. The maximum number of rounds equals 3. In this case all unused identifiers belong to usual Div2 rounds."], "Growing Mushrooms": ["https://codeforces.com/problemset/problem/186/B", "B. Growing Mushroomstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEach year in the castle of Dwarven King there is a competition in growing mushrooms among the dwarves. The competition is one of the most prestigious ones, and the winner gets a wooden salad bowl. This year's event brought together the best mushroom growers from around the world, so we had to slightly change the rules so that the event gets more interesting to watch.Each mushroom grower has a mushroom that he will grow on the competition. Under the new rules, the competition consists of two parts. The first part lasts t1 seconds and the second part lasts t2 seconds. The first and the second part are separated by a little break.After the starting whistle the first part of the contest starts, and all mushroom growers start growing mushrooms at once, each at his individual speed of vi meters per second. After t1 seconds, the mushroom growers stop growing mushrooms and go to have a break. During the break, for unexplained reasons, the growth of all mushrooms is reduced by k percent. After the break the second part of the contest starts and all mushrooms growers at the same time continue to grow mushrooms, each at his individual speed of ui meters per second. After a t2 seconds after the end of the break, the competition ends. Note that the speeds before and after the break may vary.Before the match dwarf Pasha learned from all participants, what two speeds they have chosen. However, the participants did not want to disclose to him all their strategy and therefore, did not say in what order they will be using these speeds. That is, if a participant chose speeds ai and bi, then there are two strategies: he either uses speed ai before the break and speed bi after it, or vice versa.Dwarf Pasha really wants to win the totalizer. He knows that each participant chooses the strategy that maximizes the height of the mushroom. Help Dwarf Pasha make the final table of competition results.The participants are sorted in the result table by the mushroom height (the participants with higher mushrooms follow earlier in the table). In case of equal mushroom heights, the participants are sorted by their numbers (the participants with a smaller number follow earlier).InputThe first input line contains four integer numbers n, t1, t2, k (1\u2009\u2264\u2009n,\u2009t1,\u2009t2\u2009\u2264\u20091000;\u00a01\u2009\u2264\u2009k\u2009\u2264\u2009100) \u2014 the number of participants, the time before the break, the time after the break and the percentage, by which the mushroom growth drops during the break, correspondingly.Each of the following n lines contains two integers. The i-th (1\u2009\u2264\u2009i\u2009\u2264\u2009n) line contains space-separated integers ai, bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u20091000) \u2014 the speeds which the participant number i chose.OutputPrint the final results' table: n lines, each line should contain the number of the corresponding dwarf and the final maximum height of his mushroom with exactly two digits after the decimal point. The answer will be considered correct if it is absolutely accurate.ExamplesInputCopy2 3 3 502 44 2OutputCopy1 15.002 15.00InputCopy4 1 1 1544 397280 101280 101693 970OutputCopy4 1656.071 937.032 379.993 379.99Note  First example: for each contestant it is optimal to use firstly speed 2 and afterwards speed 4, because 2\u00b73\u00b70.5\u2009+\u20094\u00b73\u2009>\u20094\u00b73\u00b70.5\u2009+\u20092\u00b73. "], "Settlers' Training": ["https://codeforces.com/problemset/problem/63/B", "B. Settlers' Trainingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn a strategic computer game \"Settlers II\" one has to build defense structures to expand and protect the territory. Let's take one of these buildings. At the moment the defense structure accommodates exactly n soldiers. Within this task we can assume that the number of soldiers in the defense structure won't either increase or decrease.Every soldier has a rank \u2014 some natural number from 1 to k. 1 stands for a private and k stands for a general. The higher the rank of the soldier is, the better he fights. Therefore, the player profits from having the soldiers of the highest possible rank.To increase the ranks of soldiers they need to train. But the soldiers won't train for free, and each training session requires one golden coin. On each training session all the n soldiers are present.At the end of each training session the soldiers' ranks increase as follows. First all the soldiers are divided into groups with the same rank, so that the least possible number of groups is formed. Then, within each of the groups where the soldiers below the rank k are present, exactly one soldier increases his rank by one.You know the ranks of all n soldiers at the moment. Determine the number of golden coins that are needed to increase the ranks of all the soldiers to the rank k.InputThe first line contains two integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009100). They represent the number of soldiers and the number of different ranks correspondingly. The second line contains n numbers in the non-decreasing order. The i-th of them, ai, represents the rank of the i-th soldier in the defense building (1\u2009\u2264\u2009i\u2009\u2264\u2009n, 1\u2009\u2264\u2009ai\u2009\u2264\u2009k).OutputPrint a single integer \u2014 the number of golden coins needed to raise all the soldiers to the maximal rank.ExamplesInputCopy4 41 2 2 3OutputCopy4InputCopy4 31 1 1 1OutputCopy5NoteIn the first example the ranks will be raised in the following manner:1 2 2 3 \u2009\u2192\u2009 2 2 3 4 \u2009\u2192\u2009 2 3 4 4 \u2009\u2192\u2009 3 4 4 4 \u2009\u2192\u2009 4 4 4 4Thus totals to 4 training sessions that require 4 golden coins."], "Lefthanders and Righthanders": ["https://codeforces.com/problemset/problem/234/A", "A. Lefthanders and Righthanders time limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtOne fine October day a mathematics teacher Vasily Petrov went to a class and saw there n pupils who sat at the  desks, two people at each desk. Vasily quickly realized that number n is even. Like all true mathematicians, Vasily has all students numbered from 1 to n.But Vasily Petrov did not like the way the children were seated at the desks. According to him, the students whose numbers differ by 1, can not sit together, as they talk to each other all the time, distract others and misbehave.On the other hand, if a righthanded student sits at the left end of the desk and a lefthanded student sits at the right end of the desk, they hit elbows all the time and distract each other. In other cases, the students who sit at the same desk, do not interfere with each other.Vasily knows very well which students are lefthanders and which ones are righthanders, and he asks you to come up with any order that meets these two uncomplicated conditions (students do not talk to each other and do not bump their elbows). It is guaranteed that the input is such that at least one way to seat the students always exists.InputThe first input line contains a single even integer n (4\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of students in the class. The second line contains exactly n capital English letters \"L\" and \"R\". If the i-th letter at the second line equals \"L\", then the student number i is a lefthander, otherwise he is a righthander.OutputPrint  integer pairs, one pair per line. In the i-th line print the numbers of students that will sit at the i-th desk. The first number in the pair stands for the student who is sitting to the left, and the second number stands for the student who is sitting to the right. Separate the numbers in the pairs by spaces. If there are multiple solutions, print any of them.ExamplesInputCopy6LLRLLLOutputCopy1 42 56 3InputCopy4RRLLOutputCopy3 14 2"], "Grandma Laura and Apples": ["https://codeforces.com/problemset/problem/632/A", "A. Grandma Laura and Applestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGrandma Laura came to the market to sell some apples. During the day she sold all the apples she had. But grandma is old, so she forgot how many apples she had brought to the market.She precisely remembers she had n buyers and each of them bought exactly half of the apples she had at the moment of the purchase and also she gave a half of an apple to some of them as a gift (if the number of apples at the moment of purchase was odd), until she sold all the apples she had.So each buyer took some integral positive number of apples, but maybe he didn't pay for a half of an apple (if the number of apples at the moment of the purchase was odd).For each buyer grandma remembers if she gave a half of an apple as a gift or not. The cost of an apple is p (the number p is even).Print the total money grandma should have at the end of the day to check if some buyers cheated her.InputThe first line contains two integers n and p (1\u2009\u2264\u2009n\u2009\u2264\u200940,\u20092\u2009\u2264\u2009p\u2009\u2264\u20091000) \u2014 the number of the buyers and the cost of one apple. It is guaranteed that the number p is even.The next n lines contains the description of buyers. Each buyer is described with the string half if he simply bought half of the apples and with the string halfplus if grandma also gave him a half of an apple as a gift.It is guaranteed that grandma has at least one apple at the start of the day and she has no apples at the end of the day.OutputPrint the only integer a \u2014 the total money grandma should have at the end of the day.Note that the answer can be too large, so you should use 64-bit integer type to store it. In C++ you can use the long long integer type and in Java you can use long integer type.ExamplesInputCopy2 10halfhalfplusOutputCopy15InputCopy3 10halfplushalfplushalfplusOutputCopy55NoteIn the first sample at the start of the day the grandma had two apples. First she sold one apple and then she sold a half of the second apple and gave a half of the second apple as a present to the second buyer."], "Taxi drivers and Lyft": ["https://codeforces.com/problemset/problem/1075/B", "B. Taxi drivers and Lyfttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPalo Alto is an unusual city because it is an endless coordinate line. It is also known for the office of Lyft Level 5.Lyft has become so popular so that it is now used by all mm taxi drivers in the city, who every day transport the rest of the city residents\u00a0\u2014 nn riders.Each resident (including taxi drivers) of Palo-Alto lives in its unique location (there is no such pair of residents that their coordinates are the same).The Lyft system is very clever: when a rider calls a taxi, his call does not go to all taxi drivers, but only to the one that is the closest to that person. If there are multiple ones with the same distance, then to taxi driver with a smaller coordinate is selected.But one morning the taxi drivers wondered: how many riders are there that would call the given taxi driver if they were the first to order a taxi on that day? In other words, you need to find for each taxi driver ii the number aiai\u00a0\u2014 the number of riders that would call the ii-th taxi driver when all drivers and riders are at their home?The taxi driver can neither transport himself nor other taxi drivers.InputThe first line contains two integers nn and mm (1\u2264n,m\u22641051\u2264n,m\u2264105)\u00a0\u2014 number of riders and taxi drivers.The second line contains n+mn+m integers x1,x2,\u2026,xn+mx1,x2,\u2026,xn+m (1\u2264x1<x2<\u2026<xn+m\u22641091\u2264x1<x2<\u2026<xn+m\u2264109), where xixi is the coordinate where the ii-th resident lives. The third line contains n+mn+m integers t1,t2,\u2026,tn+mt1,t2,\u2026,tn+m (0\u2264ti\u226410\u2264ti\u22641). If ti=1ti=1, then the ii-th resident is a taxi driver, otherwise ti=0ti=0.It is guaranteed that the number of ii such that ti=1ti=1 is equal to mm.OutputPrint mm integers a1,a2,\u2026,ama1,a2,\u2026,am, where aiai is the answer for the ii-th taxi driver. The taxi driver has the number ii if among all the taxi drivers he lives in the ii-th smallest coordinate (see examples for better understanding).ExamplesInputCopy3 11 2 3 100 0 1 0OutputCopy3 InputCopy3 22 3 4 5 61 0 0 0 1OutputCopy2 1 InputCopy1 42 4 6 10 151 1 1 1 0OutputCopy0 0 0 1 NoteIn the first example, we have only one taxi driver, which means an order from any of nn riders will go to him.In the second example, the first taxi driver lives at the point with the coordinate 22, and the second one lives at the point with the coordinate 66. Obviously, the nearest taxi driver to the rider who lives on the 33 coordinate is the first one, and to the rider who lives on the coordinate 55 is the second one. The rider who lives on the 44 coordinate has the same distance to the first and the second taxi drivers, but since the first taxi driver has a smaller coordinate, the call from this rider will go to the first taxi driver.In the third example, we have one rider and the taxi driver nearest to him is the fourth one."], "You're Given a String...": ["https://codeforces.com/problemset/problem/23/A", "A. You're Given a String...time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're given a string of lower-case Latin letters. Your task is to find the length of its longest substring that can be met in the string at least twice. These occurrences can overlap (see sample test 2).InputThe first input line contains the string. It's guaranteed, that the string is non-empty, consists of lower-case Latin letters, and its length doesn't exceed 100.OutputOutput one number \u2014 length of the longest substring that can be met in the string at least twice.ExamplesInputCopyabcdOutputCopy0InputCopyababaOutputCopy3InputCopyzzzOutputCopy2"], "Two Problems": ["https://codeforces.com/problemset/problem/203/A", "A. Two Problemstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA boy Valera registered on site Codeforces as Valera, and wrote his first Codeforces Round #300. He boasted to a friend Arkady about winning as much as x points for his first contest. But Arkady did not believe his friend's words and decided to check whether Valera could have shown such a result.He knows that the contest number 300 was unusual because there were only two problems. The contest lasted for t minutes, the minutes are numbered starting from zero. The first problem had the initial cost of a points, and every minute its cost reduced by da points. The second problem had the initial cost of b points, and every minute this cost reduced by db points. Thus, as soon as the zero minute of the contest is over, the first problem will cost a\u2009-\u2009da points, and the second problem will cost b\u2009-\u2009db points. It is guaranteed that at any moment of the contest each problem has a non-negative cost.Arkady asks you to find out whether Valera could have got exactly x points for this contest. You should assume that Valera could have solved any number of the offered problems. You should also assume that for each problem Valera made no more than one attempt, besides, he could have submitted both problems at the same minute of the contest, starting with minute 0 and ending with minute number t\u2009-\u20091. Please note that Valera can't submit a solution exactly t minutes after the start of the contest or later.InputThe single line of the input contains six integers x,\u2009t,\u2009a,\u2009b,\u2009da,\u2009db (0\u2009\u2264\u2009x\u2009\u2264\u2009600;\u00a01\u2009\u2264\u2009t,\u2009a,\u2009b,\u2009da,\u2009db\u2009\u2264\u2009300) \u2014 Valera's result, the contest's duration, the initial cost of the first problem, the initial cost of the second problem, the number of points that the first and the second problem lose per minute, correspondingly.It is guaranteed that at each minute of the contest each problem has a non-negative cost, that is, a\u2009-\u2009i\u00b7da\u2009\u2265\u20090 and b\u2009-\u2009i\u00b7db\u2009\u2265\u20090 for all 0\u2009\u2264\u2009i\u2009\u2264\u2009t\u2009-\u20091.OutputIf Valera could have earned exactly x points at a contest, print \"YES\", otherwise print \"NO\" (without the quotes).ExamplesInputCopy30 5 20 20 3 5OutputCopyYESInputCopy10 4 100 5 5 1OutputCopyNONoteIn the first sample Valera could have acted like this: he could have submitted the first problem at minute 0 and the second problem \u2014 at minute 2. Then the first problem brings him 20 points and the second problem brings him 10 points, that in total gives the required 30 points."], "Petya and Square": ["https://codeforces.com/problemset/problem/112/B", "B. Petya and Squaretime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya loves playing with squares. Mum bought him a square 2n\u2009\u00d7\u20092n in size. Petya marked a cell inside the square and now he is solving the following task.The task is to draw a broken line that would go along the grid lines and that would cut the square into two equal parts. The cutting line should not have any common points with the marked cell and the resulting two parts should be equal up to rotation.Petya wants to determine whether it is possible to cut the square in the required manner given the sizes of the square side and the coordinates of the marked cell. Help him.InputThe first line contains three space-separated integers 2n, x and y (2\u2009\u2264\u20092n\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009x,\u2009y\u2009\u2264\u20092n), representing the length of a square's side and the coordinates of the marked cell. It is guaranteed that 2n is even.The coordinates of the marked cell are represented by a pair of numbers x y, where x represents the number of the row and y represents the number of the column. The rows and columns are numbered by consecutive integers from 1 to 2n. The rows are numbered from top to bottom and the columns are numbered from the left to the right.OutputIf the square is possible to cut, print \"YES\", otherwise print \"NO\" (without the quotes).ExamplesInputCopy4 1 1OutputCopyYESInputCopy2 2 2OutputCopyNONoteA sample test from the statement and one of the possible ways of cutting the square are shown in the picture:   "], "Depression": ["https://codeforces.com/problemset/problem/80/B", "B. Depressiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDo you remember a kind cartoon \"Beauty and the Beast\"? No, no, there was no firing from machine guns or radiation mutants time-travels!There was a beauty named Belle. Once she had violated the Beast's order and visited the West Wing. After that she was banished from the castle... Everybody was upset. The beautiful Belle was upset, so was the Beast, so was Lumiere the candlestick. But the worst thing was that Cogsworth was upset. Cogsworth is not a human, but is the mantel clock, which was often used as an alarm clock.Due to Cogsworth's frustration all the inhabitants of the castle were in trouble: now they could not determine when it was time to drink morning tea, and when it was time for an evening stroll. Fortunately, deep in the basement are lying digital clock showing the time in the format HH:MM. Now the residents of the castle face a difficult task. They should turn Cogsworth's hour and minute mustache hands in such a way, that Cogsworth began to show the correct time. Moreover they need to find turn angles in degrees for each mustache hands. The initial time showed by Cogsworth is 12:00.You can only rotate the hands forward, that is, as is shown in the picture:   As since there are many ways too select such angles because of full rotations, choose the smallest angles in the right (non-negative) direction.Note that Cogsworth's hour and minute mustache hands move evenly and continuously. Hands are moving independently, so when turning one hand the other hand remains standing still.InputThe only line of input contains current time according to the digital clock, formatted as HH:MM (00\u2009\u2264\u2009HH\u2009\u2264\u200923, 00\u2009\u2264\u2009MM\u2009\u2264\u200959). The mantel clock initially shows 12:00.Pretests contain times of the beginning of some morning TV programs of the Channel One Russia.OutputPrint two numbers x and y \u2014 the angles of turning the hour and minute hands, respectively (0\u2009\u2264\u2009x,\u2009y\u2009<\u2009360). The absolute or relative error in the answer should not exceed 10\u2009-\u20099.ExamplesInputCopy12:00OutputCopy0 0InputCopy04:30OutputCopy135 180InputCopy08:17OutputCopy248.5 102NoteA note to the second example: the hour hand will be positioned exactly in the middle, between 4 and 5."], "Bus Game": ["https://codeforces.com/problemset/problem/79/A", "A. Bus Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter Fox Ciel won an onsite round of a programming contest, she took a bus to return to her castle. The fee of the bus was 220 yen. She met Rabbit Hanako in the bus. They decided to play the following game because they got bored in the bus.  Initially, there is a pile that contains x 100-yen coins and y 10-yen coins.  They take turns alternatively. Ciel takes the first turn.  In each turn, they must take exactly 220 yen from the pile. In Ciel's turn, if there are multiple ways to take 220 yen, she will choose the way that contains the maximal number of 100-yen coins. In Hanako's turn, if there are multiple ways to take 220 yen, she will choose the way that contains the maximal number of 10-yen coins.  If Ciel or Hanako can't take exactly 220 yen from the pile, she loses.  Determine the winner of the game.InputThe first line contains two integers x (0\u2009\u2264\u2009x\u2009\u2264\u2009106) and y (0\u2009\u2264\u2009y\u2009\u2264\u2009106), separated by a single space.OutputIf Ciel wins, print \"Ciel\". Otherwise, print \"Hanako\".ExamplesInputCopy2 2OutputCopyCielInputCopy3 22OutputCopyHanakoNoteIn the first turn (Ciel's turn), she will choose 2 100-yen coins and 2 10-yen coins. In the second turn (Hanako's turn), she will choose 1 100-yen coin and 12 10-yen coins. In the third turn (Ciel's turn), she can't pay exactly 220 yen, so Ciel will lose."], "Mysterious numbers - 1": ["https://codeforces.com/problemset/problem/171/A", "A. Mysterious numbers - 1time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputInputThe input contains two integers a1,\u2009a2 (0\u2009\u2264\u2009ai\u2009\u2264\u2009109), separated by a single space.OutputOutput a single integer.ExamplesInputCopy3 14OutputCopy44InputCopy27 12OutputCopy48InputCopy100 200OutputCopy102 "], "Potions Homework": ["https://codeforces.com/problemset/problem/717/C", "C. Potions Homeworktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputHarry Water, Ronaldo, Her-my-oh-knee and their friends have started a new school year at their MDCS School of Speechcraft and Misery. At the time, they are very happy to have seen each other after a long time. The sun is shining, birds are singing, flowers are blooming, and their Potions class teacher, professor Snipe is sulky as usual. Due to his angst fueled by disappointment in his own life, he has given them a lot of homework in Potions class. Each of the n students has been assigned a single task. Some students do certain tasks faster than others. Thus, they want to redistribute the tasks so that each student still does exactly one task, and that all tasks are finished. Each student has their own laziness level, and each task has its own difficulty level. Professor Snipe is trying hard to improve their work ethics, so each student\u2019s laziness level is equal to their task\u2019s difficulty level. Both sets of values are given by the sequence a, where ai represents both the laziness level of the i-th student and the difficulty of his task. The time a student needs to finish a task is equal to the product of their laziness level and the task\u2019s difficulty. They are wondering, what is the minimum possible total time they must spend to finish all tasks if they distribute them in the optimal way. Each person should receive one task and each task should be given to one person. Print the answer modulo 10\u2009007.InputThe first line of input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of tasks. The next n lines contain exactly one integer number ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009100\u2009000)\u00a0\u2014 both the difficulty of the initial task and the laziness of the i-th students.OutputPrint the minimum total time to finish all tasks modulo 10\u2009007.ExampleInputCopy213OutputCopy6NoteIn the first sample, if the students switch their tasks, they will be able to finish them in 3\u2009+\u20093\u2009=\u20096 time units."], "Chord": ["https://codeforces.com/problemset/problem/88/A", "A. Chordtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya studies music. He has learned lots of interesting stuff. For example, he knows that there are 12 notes: C, C#, D, D#, E, F, F#, G, G#, A, B, H. He also knows that the notes are repeated cyclically: after H goes C again, and before C stands H. We will consider the C note in the row's beginning and the C note after the H similar and we will identify them with each other. The distance between the notes along the musical scale is measured in tones: between two consecutive notes there's exactly one semitone, that is, 0.5 tone. The distance is taken from the lowest tone to the uppest one, that is, the distance between C and E is 4 semitones and between E and C is 8 semitonesVasya also knows what a chord is. A chord is an unordered set of no less than three notes. However, for now Vasya only works with triads, that is with the chords that consist of exactly three notes. He can already distinguish between two types of triads \u2014 major and minor.Let's define a major triad. Let the triad consist of notes X, Y and Z. If we can order the notes so as the distance along the musical scale between X and Y equals 4 semitones and the distance between Y and Z is 3 semitones, then the triad is major. The distance between X and Z, accordingly, equals 7 semitones.A minor triad is different in that the distance between X and Y should be 3 semitones and between Y and Z \u2014 4 semitones.For example, the triad \"C E G\" is major: between C and E are 4 semitones, and between E and G are 3 semitones. And the triplet \"C# B F\" is minor, because if we order the notes as \"B C# F\", than between B and C# will be 3 semitones, and between C# and F \u2014 4 semitones.Help Vasya classify the triad the teacher has given to him.InputThe only line contains 3 space-separated notes in the above-given notation.OutputPrint \"major\" if the chord is major, \"minor\" if it is minor, and \"strange\" if the teacher gave Vasya some weird chord which is neither major nor minor. Vasya promises you that the answer will always be unambiguous. That is, there are no chords that are both major and minor simultaneously.ExamplesInputCopyC E GOutputCopymajorInputCopyC# B FOutputCopyminorInputCopyA B HOutputCopystrange"], "Homework": ["https://codeforces.com/problemset/problem/101/A", "A. Homeworktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce when Gerald studied in the first year at school, his teacher gave the class the following homework. She offered the students a string consisting of n small Latin letters; the task was to learn the way the letters that the string contains are written. However, as Gerald is too lazy, he has no desire whatsoever to learn those letters. That's why he decided to lose some part of the string (not necessarily a connected part). The lost part can consist of any number of segments of any length, at any distance from each other. However, Gerald knows that if he loses more than k characters, it will be very suspicious. Find the least number of distinct characters that can remain in the string after no more than k characters are deleted. You also have to find any possible way to delete the characters.InputThe first input data line contains a string whose length is equal to n (1\u2009\u2264\u2009n\u2009\u2264\u2009105). The string consists of lowercase Latin letters. The second line contains the number k (0\u2009\u2264\u2009k\u2009\u2264\u2009105).OutputPrint on the first line the only number m \u2014 the least possible number of different characters that could remain in the given string after it loses no more than k characters.Print on the second line the string that Gerald can get after some characters are lost. The string should have exactly m distinct characters. The final string should be the subsequence of the initial string. If Gerald can get several different strings with exactly m distinct characters, print any of them.ExamplesInputCopyaaaaa4OutputCopy1aaaaaInputCopyabacaba4OutputCopy1aaaaInputCopyabcdefgh10OutputCopy0NoteIn the first sample the string consists of five identical letters but you are only allowed to delete 4 of them so that there was at least one letter left. Thus, the right answer is 1 and any string consisting of characters \"a\" from 1 to 5 in length.In the second sample you are allowed to delete 4 characters. You cannot delete all the characters, because the string has length equal to 7. However, you can delete all characters apart from \"a\" (as they are no more than four), which will result in the \"aaaa\" string.In the third sample you are given a line whose length is equal to 8, and k\u2009=\u200910, so that the whole line can be deleted. The correct answer is 0 and an empty string."], "Maximum Number": ["https://codeforces.com/problemset/problem/774/C", "C. Maximum Numbertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputStepan has the newest electronic device with a display. Different digits can be shown on it. Each digit is shown on a seven-section indicator like it is shown on the picture below.  So, for example, to show the digit 3 on the display, 5 sections must be highlighted; and for the digit 6, 6 sections must be highlighted. The battery of the newest device allows to highlight at most n sections on the display. Stepan wants to know the maximum possible integer number which can be shown on the display of his newest device. Your task is to determine this number. Note that this number must not contain leading zeros. Assume that the size of the display is enough to show any integer.InputThe first line contains the integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000) \u2014 the maximum number of sections which can be highlighted on the display.OutputPrint the maximum integer which can be shown on the display of Stepan's newest device.ExamplesInputCopy2OutputCopy1InputCopy3OutputCopy7"], "Pattern": ["https://codeforces.com/problemset/problem/412/C", "C. Patterntime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDevelopers often face with regular expression patterns. A pattern is usually defined as a string consisting of characters and metacharacters that sets the rules for your search. These patterns are most often used to check whether a particular string meets the certain rules.In this task, a pattern will be a string consisting of small English letters and question marks ('?'). The question mark in the pattern is a metacharacter that denotes an arbitrary small letter of the English alphabet. We will assume that a string matches the pattern if we can transform the string into the pattern by replacing the question marks by the appropriate characters. For example, string aba matches patterns: ???, ??a, a?a, aba.Programmers that work for the R1 company love puzzling each other (and themselves) with riddles. One of them is as follows: you are given n patterns of the same length, you need to find a pattern that contains as few question marks as possible, and intersects with each of the given patterns. Two patterns intersect if there is a string that matches both the first and the second pattern. Can you solve this riddle?InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of patterns. Next n lines contain the patterns.It is guaranteed that the patterns can only consist of small English letters and symbols '?'. All patterns are non-empty and have the same length. The total length of all the patterns does not exceed 105 characters.OutputIn a single line print the answer to the problem \u2014 the pattern with the minimal number of signs '?', which intersects with each of the given ones. If there are several answers, print any of them.ExamplesInputCopy2?ab??bOutputCopyxabInputCopy2abOutputCopy?InputCopy1?a?bOutputCopycacbNoteConsider the first example. Pattern xab intersects with each of the given patterns. Pattern ??? also intersects with each of the given patterns, but it contains more question signs, hence it is not an optimal answer. Clearly, xab is the optimal answer, because it doesn't contain any question sign. There are a lot of other optimal answers, for example: aab, bab, cab, dab and so on."], "Login Verification": ["https://codeforces.com/problemset/problem/928/A", "A. Login Verificationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputWhen registering in a social network, users are allowed to create their own convenient login to make it easier to share contacts, print it on business cards, etc.Login is an arbitrary sequence of lower and uppercase latin letters, digits and underline symbols (\u00ab_\u00bb). However, in order to decrease the number of frauds and user-inattention related issues, it is prohibited to register a login if it is similar with an already existing login. More precisely, two logins s and t are considered similar if we can transform s to t via a sequence of operations of the following types:   transform lowercase letters to uppercase and vice versa;  change letter \u00abO\u00bb (uppercase latin letter) to digit \u00ab0\u00bb and vice versa;  change digit \u00ab1\u00bb (one) to any letter among \u00abl\u00bb (lowercase latin \u00abL\u00bb), \u00abI\u00bb (uppercase latin \u00abi\u00bb) and vice versa, or change one of these letters to other. For example, logins \u00abCodeforces\u00bb and \u00abcodef0rces\u00bb as well as \u00abOO0OOO00O0OOO0O00OOO0OO_lol\u00bb and \u00abOO0OOO0O00OOO0O00OO0OOO_1oI\u00bb are considered similar whereas \u00abCodeforces\u00bb and \u00abCode_forces\u00bb are not.You're given a list of existing logins with no two similar amonst and a newly created user login. Check whether this new login is similar with any of the existing ones.InputThe first line contains a non-empty string s consisting of lower and uppercase latin letters, digits and underline symbols (\u00ab_\u00bb) with length not exceeding 50 \u00a0\u2014 the login itself.The second line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091\u2009000)\u00a0\u2014 the number of existing logins.The next n lines describe the existing logins, following the same constraints as the user login (refer to the first line of the input). It's guaranteed that no two existing logins are similar.OutputPrint \u00abYes\u00bb (without quotes), if user can register via this login, i.e. none of the existing logins is similar with it.Otherwise print \u00abNo\u00bb (without quotes).ExamplesInputCopy1_wat22_watwat_1OutputCopyYesInputCopy000300ooAoOoOutputCopyNoInputCopy_i_3__i__1_IOutputCopyNoInputCopyLa032a0La11a0OutputCopyNoInputCopyabc1aBcOutputCopyNoInputCopy0Lil2LIL00RilOutputCopyYesNoteIn the second sample case the user wants to create a login consisting of three zeros. It's impossible due to collision with the third among the existing.In the third sample case the new login is similar with the second one."], "News About Credit": ["https://codeforces.com/problemset/problem/769/B", "B. News About Credittime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp studies at the university in the group which consists of n students (including himself). All they are registrated in the social net \"TheContacnt!\".Not all students are equally sociable. About each student you know the value ai \u2014 the maximum number of messages which the i-th student is agree to send per day. The student can't send messages to himself. In early morning Polycarp knew important news that the programming credit will be tomorrow. For this reason it is necessary to urgently inform all groupmates about this news using private messages. Your task is to make a plan of using private messages, so that:  the student i sends no more than ai messages (for all i from 1 to n);  all students knew the news about the credit (initially only Polycarp knew it);  the student can inform the other student only if he knows it himself. Let's consider that all students are numerated by distinct numbers from 1 to n, and Polycarp always has the number 1.In that task you shouldn't minimize the number of messages, the moment of time, when all knew about credit or some other parameters. Find any way how to use private messages which satisfies requirements above. InputThe first line contains the positive integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of students. The second line contains the sequence a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009100), where ai equals to the maximum number of messages which can the i-th student agree to send. Consider that Polycarp always has the number 1.OutputPrint -1 to the first line if it is impossible to inform all students about credit. Otherwise, in the first line print the integer k \u2014 the number of messages which will be sent. In each of the next k lines print two distinct integers f and t, meaning that the student number f sent the message with news to the student number t. All messages should be printed in chronological order. It means that the student, who is sending the message, must already know this news. It is assumed that students can receive repeated messages with news of the credit. If there are several answers, it is acceptable to print any of them. ExamplesInputCopy41 2 1 0OutputCopy31 22 42 3InputCopy62 0 1 3 2 0OutputCopy61 33 41 24 55 64 6InputCopy30 2 2OutputCopy-1NoteIn the first test Polycarp (the student number 1) can send the message to the student number 2, who after that can send the message to students number 3 and 4. Thus, all students knew about the credit. "], "Mischievous Mess Makers": ["https://codeforces.com/problemset/problem/645/B", "B. Mischievous Mess Makerstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt is a balmy spring afternoon, and Farmer John's n cows are ruminating about link-cut cacti in their stalls. The cows, labeled 1 through n, are arranged so that the i-th cow occupies the i-th stall from the left. However, Elsie, after realizing that she will forever live in the shadows beyond Bessie's limelight, has formed the Mischievous Mess Makers and is plotting to disrupt this beautiful pastoral rhythm. While Farmer John takes his k minute long nap, Elsie and the Mess Makers plan to repeatedly choose two distinct stalls and swap the cows occupying those stalls, making no more than one swap each minute.Being the meticulous pranksters that they are, the Mischievous Mess Makers would like to know the maximum messiness attainable in the k minutes that they have. We denote as pi the label of the cow in the i-th stall. The messiness of an arrangement of cows is defined as the number of pairs (i,\u2009j) such that i\u2009<\u2009j and pi\u2009>\u2009pj.InputThe first line of the input contains two integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of cows and the length of Farmer John's nap, respectively.OutputOutput a single integer, the maximum messiness that the Mischievous Mess Makers can achieve by performing no more than k swaps. ExamplesInputCopy5 2OutputCopy10InputCopy1 10OutputCopy0NoteIn the first sample, the Mischievous Mess Makers can swap the cows in the stalls 1 and 5 during the first minute, then the cows in stalls 2 and 4 during the second minute. This reverses the arrangement of cows, giving us a total messiness of 10.In the second sample, there is only one cow, so the maximum possible messiness is 0."], "Amity Assessment": ["https://codeforces.com/problemset/problem/645/A", "A. Amity Assessmenttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBessie the cow and her best friend Elsie each received a sliding puzzle on Pi Day. Their puzzles consist of a 2\u2009\u00d7\u20092 grid and three tiles labeled 'A', 'B', and 'C'. The three tiles sit on top of the grid, leaving one grid cell empty. To make a move, Bessie or Elsie can slide a tile adjacent to the empty cell into the empty cell as shown below:  In order to determine if they are truly Best Friends For Life (BFFLs), Bessie and Elsie would like to know if there exists a sequence of moves that takes their puzzles to the same configuration (moves can be performed in both puzzles). Two puzzles are considered to be in the same configuration if each tile is on top of the same grid cell in both puzzles. Since the tiles are labeled with letters, rotations and reflections are not allowed.InputThe first two lines of the input consist of a 2\u2009\u00d7\u20092 grid describing the initial configuration of Bessie's puzzle. The next two lines contain a 2\u2009\u00d7\u20092 grid describing the initial configuration of Elsie's puzzle. The positions of the tiles are labeled 'A', 'B', and 'C', while the empty cell is labeled 'X'. It's guaranteed that both puzzles contain exactly one tile with each letter and exactly one empty position.OutputOutput \"YES\"(without quotes) if the puzzles can reach the same configuration (and Bessie and Elsie are truly BFFLs). Otherwise, print \"NO\" (without quotes).ExamplesInputCopyABXCXBACOutputCopyYESInputCopyABXCACBXOutputCopyNONoteThe solution to the first sample is described by the image. All Bessie needs to do is slide her 'A' tile down.In the second sample, the two puzzles can never be in the same configuration. Perhaps Bessie and Elsie are not meant to be friends after all..."], "What is for dinner?": ["https://codeforces.com/problemset/problem/33/A", "A. What is for dinner?time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn one little known, but very beautiful country called Waterland, lives a lovely shark Valerie. Like all the sharks, she has several rows of teeth, and feeds on crucians. One of Valerie's distinguishing features is that while eating one crucian she uses only one row of her teeth, the rest of the teeth are \"relaxing\".For a long time our heroine had been searching the sea for crucians, but a great misfortune happened. Her teeth started to ache, and she had to see the local dentist, lobster Ashot. As a professional, Ashot quickly relieved Valerie from her toothache. Moreover, he managed to determine the cause of Valerie's developing caries (for what he was later nicknamed Cap).It turned that Valerie eats too many crucians. To help Valerie avoid further reoccurrence of toothache, Ashot found for each Valerie's tooth its residual viability. Residual viability of a tooth is a value equal to the amount of crucians that Valerie can eat with this tooth. Every time Valerie eats a crucian, viability of all the teeth used for it will decrease by one. When the viability of at least one tooth becomes negative, the shark will have to see the dentist again. Unhappy, Valerie came back home, where a portion of crucians was waiting for her. For sure, the shark couldn't say no to her favourite meal, but she had no desire to go back to the dentist. That's why she decided to eat the maximum amount of crucians from the portion but so that the viability of no tooth becomes negative. As Valerie is not good at mathematics, she asked you to help her to find out the total amount of crucians that she can consume for dinner.We should remind you that while eating one crucian Valerie uses exactly one row of teeth and the viability of each tooth from this row decreases by one.InputThe first line contains three integers n, m, k (1\u2009\u2264\u2009m\u2009\u2264\u2009n\u2009\u2264\u20091000,\u20090\u2009\u2264\u2009k\u2009\u2264\u2009106) \u2014 total amount of Valerie's teeth, amount of tooth rows and amount of crucians in Valerie's portion for dinner. Then follow n lines, each containing two integers: r (1\u2009\u2264\u2009r\u2009\u2264\u2009m) \u2014 index of the row, where belongs the corresponding tooth, and c (0\u2009\u2264\u2009c\u2009\u2264\u2009106) \u2014 its residual viability.It's guaranteed that each tooth row has positive amount of teeth.OutputIn the first line output the maximum amount of crucians that Valerie can consume for dinner.ExamplesInputCopy4 3 182 31 23 62 3OutputCopy11InputCopy2 2 131 132 12OutputCopy13"], "Square": ["https://codeforces.com/problemset/problem/194/B", "B. Squaretime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a square painted on a piece of paper, the square's side equals n meters. John Doe draws crosses on the square's perimeter. John paints the first cross in the lower left corner of the square. Then John moves along the square's perimeter in the clockwise direction (first upwards, then to the right, then downwards, then to the left and so on). Every time he walks (n\u2009+\u20091) meters, he draws a cross (see picture for clarifications).John Doe stops only when the lower left corner of the square has two crosses. How many crosses will John draw?   The figure shows the order in which John draws crosses for a square with side 4. The lower left square has two crosses. Overall John paints 17 crosses.  InputThe first line contains integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009104) \u2014 the number of test cases. The second line contains t space-separated integers ni (1\u2009\u2264\u2009ni\u2009\u2264\u2009109) \u2014 the sides of the square for each test sample.OutputFor each test sample print on a single line the answer to it, that is, the number of crosses John will draw as he will move along the square of the corresponding size. Print the answers to the samples in the order in which the samples are given in the input.Please do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier. ExamplesInputCopy34 8 100OutputCopy1733401"], "Easy Scheduling": ["https://codeforces.com/problemset/problem/1578/E", "E. Easy Schedulingtime limit per test2 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputEonathan Eostar decided to learn the magic of multiprocessor systems. He has a full binary tree of tasks with height hh. In the beginning, there is only one ready task in the tree\u00a0\u2014 the task in the root. At each moment of time, pp processes choose at most pp ready tasks and perform them. After that, tasks whose parents were performed become ready for the next moment of time. Once the task becomes ready, it stays ready until it is performed. You shall calculate the smallest number of time moments the system needs to perform all the tasks.InputThe first line of the input contains the number of tests tt (1\u2264t\u22645\u22c51051\u2264t\u22645\u22c5105). Each of the next tt lines contains the description of a test. A test is described by two integers hh (1\u2264h\u2264501\u2264h\u226450) and pp (1\u2264p\u22641041\u2264p\u2264104)\u00a0\u2014 the height of the full binary tree and the number of processes. It is guaranteed that all the tests are different.OutputFor each test output one integer on a separate line\u00a0\u2014 the smallest number of time moments the system needs to perform all the tasks.ExampleInputCopy3\n3 1\n3 2\n10 6\nOutputCopy7\n4\n173\nNoteLet us consider the second test from the sample input. There is a full binary tree of height 33 and there are two processes. At the first moment of time, there is only one ready task, 11, and p1p1 performs it. At the second moment of time, there are two ready tasks, 22 and 33, and the processes perform them. At the third moment of time, there are four ready tasks, 44, 55, 66, and 77, and p1p1 performs 66 and p2p2 performs 55. At the fourth moment of time, there are two ready tasks, 44 and 77, and the processes perform them. Thus, the system spends 44 moments of time to perform all the tasks."], "Average Numbers": ["https://codeforces.com/problemset/problem/134/A", "A. Average Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a sequence of positive integers a1,\u2009a2,\u2009...,\u2009an. Find all such indices i, that the i-th element equals the arithmetic mean of all other elements (that is all elements except for this one).InputThe first line contains the integer n (2\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105). The second line contains elements of the sequence a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u20091000). All the elements are positive integers.OutputPrint on the first line the number of the sought indices. Print on the second line the sought indices in the increasing order. All indices are integers from 1 to n.If the sought elements do not exist, then the first output line should contain number 0. In this case you may either not print the second line or print an empty line.ExamplesInputCopy51 2 3 4 5OutputCopy13 InputCopy450 50 50 50OutputCopy41 2 3 4 "], "Chess": ["https://codeforces.com/problemset/problem/38/B", "B. Chesstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTwo chess pieces, a rook and a knight, stand on a standard chessboard 8\u2009\u00d7\u20098 in size. The positions in which they are situated are known. It is guaranteed that none of them beats the other one.Your task is to find the number of ways to place another knight on the board so that none of the three pieces on the board beat another one. A new piece can only be placed on an empty square.InputThe first input line contains the description of the rook's position on the board. This description is a line which is 2 in length. Its first symbol is a lower-case Latin letter from a to h, and its second symbol is a number from 1 to 8. The second line contains the description of the knight's position in a similar way. It is guaranteed that their positions do not coincide.OutputPrint a single number which is the required number of ways.ExamplesInputCopya1b2OutputCopy44InputCopya8d4OutputCopy38"], "Flea travel": ["https://codeforces.com/problemset/problem/55/A", "A. Flea traveltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA flea is sitting at one of the n hassocks, arranged in a circle, at the moment. After minute number k the flea jumps through k\u2009-\u20091 hasso\u0441ks (clockwise). For example, after the first minute the flea jumps to the neighboring hassock. You should answer: will the flea visit all the hassocks or not. We assume that flea has infinitely much time for this jumping.InputThe only line contains single integer: 1\u2009\u2264\u2009n\u2009\u2264\u20091000 \u2014 number of hassocks.OutputOutput \"YES\" if all the hassocks will be visited and \"NO\" otherwise.ExamplesInputCopy1OutputCopyYESInputCopy3OutputCopyNO"], "Bets": ["https://codeforces.com/problemset/problem/69/B", "B. Betstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn Chelyabinsk lives a much respected businessman Nikita with a strange nickname \"Boss\". Once Nikita decided to go with his friend Alex to the Summer Biathlon World Cup. Nikita, as a very important person, received a token which allows to place bets on each section no more than on one competitor.To begin with friends learned the rules: in the race there are n sections of equal length and m participants. The participants numbered from 1 to m. About each participant the following is known: li \u2014 the number of the starting section,  ri \u2014 the number of the finishing section (li\u2009\u2264\u2009ri), ti \u2014 the time a biathlete needs to complete an section of the path, ci \u2014 the profit in roubles. If the i-th sportsman wins on one of the sections, the profit will be given to the man who had placed a bet on that sportsman. The i-th biathlete passes the sections from li to ri inclusive. The competitor runs the whole way in (ri\u2009-\u2009li\u2009+\u20091)\u00b7ti time units. It takes him exactly ti time units to pass each section. In case of the athlete's victory on k sections the man who has betted on him receives k\u00b7ci roubles.In each section the winner is determined independently as follows: if there is at least one biathlete running this in this section, then among all of them the winner is the one who has ran this section in minimum time (spent minimum time passing this section). In case of equality of times the athlete with the smaller index number wins. If there are no participants in this section, then the winner in this section in not determined. We have to say that in the summer biathlon all the participants are moving at a constant speed.We should also add that Nikita can bet on each section and on any contestant running in this section.Help the friends find the maximum possible profit.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100). Then follow m lines, each containing 4 integers li, ri, ti, ci (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009n, 1\u2009\u2264\u2009ti,\u2009ci\u2009\u2264\u20091000).OutputPrint a single integer, the maximal profit in roubles that the friends can get. In each of n sections it is not allowed to place bets on more than one sportsman.ExamplesInputCopy4 41 4 20 51 3 21 103 3 4 303 4 4 20OutputCopy60InputCopy8 41 5 24 102 4 6 154 6 30 506 7 4 20OutputCopy105NoteIn the first test the optimal bet is: in the 1-2 sections on biathlete 1, in section 3 on biathlete 3, in section 4 on biathlete 4. Total: profit of 5 rubles for 1 section, the profit of 5 rubles for 2 section, profit of 30 rubles for a 3 section, profit of 20 rubles for 4 section. Total profit 60 rubles.In the second test the optimal bet is: on 1 and 5 sections on biathlete 1, in the 2-4 sections on biathlete 2, in the 6-7 sections on athlete 4. There is no winner in the 8 section. Total: profit of 10 rubles for 1 section, the profit of 15 rubles for 2,3,4 section, profit of 10 rubles for a 5 section, profit of 20 rubles for 6, 7 section. Total profit 105 rubles."], "Cottage Village": ["https://codeforces.com/problemset/problem/15/A", "A. Cottage Villagetime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputA new cottage village called \u00abFlatville\u00bb is being built in Flatland. By now they have already built in \u00abFlatville\u00bb n square houses with the centres on the \u041ex-axis. The houses' sides are parallel to the coordinate axes. It's known that no two houses overlap, but they can touch each other.The architect bureau, where Peter works, was commissioned to build a new house in \u00abFlatville\u00bb. The customer wants his future house to be on the \u041ex-axis, to be square in shape, have a side t, and touch at least one of the already built houses. For sure, its sides should be parallel to the coordinate axes, its centre should be on the Ox-axis and it shouldn't overlap any of the houses in the village.Peter was given a list of all the houses in \u00abFlatville\u00bb. Would you help him find the amount of possible positions of the new house?InputThe first line of the input data contains numbers n and t (1\u2009\u2264\u2009n,\u2009t\u2009\u2264\u20091000). Then there follow n lines, each of them contains two space-separated integer numbers: xi ai, where xi \u2014 x-coordinate of the centre of the i-th house, and ai \u2014 length of its side (\u2009-\u20091000\u2009\u2264\u2009xi\u2009\u2264\u20091000, 1\u2009\u2264\u2009ai\u2009\u2264\u20091000).OutputOutput the amount of possible positions of the new house.ExamplesInputCopy2 20 46 2OutputCopy4InputCopy2 20 45 2OutputCopy3InputCopy2 30 45 2OutputCopy2NoteIt is possible for the x-coordinate of the new house to have non-integer value."], "Clothes": ["https://codeforces.com/problemset/problem/102/A", "A. Clothestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA little boy Gerald entered a clothes shop and found out something very unpleasant: not all clothes turns out to match. For example, Gerald noticed that he looks rather ridiculous in a smoking suit and a baseball cap.Overall the shop sells n clothing items, and exactly m pairs of clothing items match. Each item has its price, represented by an integer number of rubles. Gerald wants to buy three clothing items so that they matched each other. Besides, he wants to spend as little money as possible. Find the least possible sum he can spend.InputThe first input file line contains integers n and m \u2014 the total number of clothing items in the shop and the total number of matching pairs of clothing items ().Next line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009106) \u2014 the prices of the clothing items in rubles.Next m lines each contain a pair of space-separated integers ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n,\u2009ui\u2009\u2260\u2009vi). Each such pair of numbers means that the ui-th and the vi-th clothing items match each other. It is guaranteed that in each pair ui and vi are distinct and all the unordered pairs (ui,\u2009vi) are different.OutputPrint the only number \u2014 the least possible sum in rubles that Gerald will have to pay in the shop. If the shop has no three clothing items that would match each other, print \"-1\" (without the quotes).ExamplesInputCopy3 31 2 31 22 33 1OutputCopy6InputCopy3 22 3 42 32 1OutputCopy-1InputCopy4 41 1 1 11 22 33 44 1OutputCopy-1NoteIn the first test there only are three pieces of clothing and they all match each other. Thus, there is only one way \u2014 to buy the 3 pieces of clothing; in this case he spends 6 roubles.The second test only has three pieces of clothing as well, yet Gerald can't buy them because the first piece of clothing does not match the third one. Thus, there are no three matching pieces of clothing. The answer is -1.In the third example there are 4 pieces of clothing, but Gerald can't buy any 3 of them simultaneously. The answer is -1."], "Rotate, Flip and Zoom": ["https://codeforces.com/problemset/problem/523/A", "A. Rotate, Flip and Zoomtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp is writing the prototype of a graphic editor. He has already made up his mind that the basic image transformations in his editor will be: rotate the image 90 degrees clockwise, flip the image horizontally (symmetry relative to the vertical line, that is, the right part of the image moves to the left, and vice versa) and zooming on the image. He is sure that that there is a large number of transformations that can be expressed through these three.He has recently stopped implementing all three transformations for monochrome images. To test this feature, he asked you to write a code that will consecutively perform three actions with a monochrome image: first it will rotate the image 90 degrees clockwise, then it will flip the image horizontally and finally, it will zoom in twice on the image (that is, it will double all the linear sizes).Implement this feature to help Polycarp test his editor.InputThe first line contains two integers, w and h (1\u2009\u2264\u2009w,\u2009h\u2009\u2264\u2009100) \u2014 the width and height of an image in pixels. The picture is given in h lines, each line contains w characters \u2014 each character encodes the color of the corresponding pixel of the image. The line consists only of characters \".\" and \"*\", as the image is monochrome.OutputPrint 2w lines, each containing 2h characters \u2014 the result of consecutive implementing of the three transformations, described above.ExamplesInputCopy3 2.*..*.OutputCopy........********........InputCopy9 20**.......****.....******...*******....******.....****.......****.....***************************************....**......****....******..************..******...*****.....***.......*OutputCopypril Fools' Problem (easy)": ["https://codeforces.com/problemset/problem/802/M", "M. April Fools' Problem (easy)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe marmots have prepared a very easy problem for this year's HC2 \u2013 this one. It involves numbers n, k and a sequence of n positive integers a1,\u2009a2,\u2009...,\u2009an. They also came up with a beautiful and riveting story for the problem statement. It explains what the input means, what the program should output, and it also reads like a good criminal.However I, Heidi, will have none of that. As my joke for today, I am removing the story from the statement and replacing it with these two unhelpful paragraphs. Now solve the problem, fools!InputThe first line of the input contains two space-separated integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u20092200). The second line contains n space-separated integers a1,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009104).OutputOutput one number.ExamplesInputCopy8 51 1 1 1 1 1 1 1OutputCopy5InputCopy10 316 8 2 4 512 256 32 128 64 1OutputCopy7InputCopy5 120 10 50 30 46OutputCopy10InputCopy6 66 6 6 6 6 6OutputCopy36InputCopy1 1100OutputCopy100"], "Rectangular Game": ["https://codeforces.com/problemset/problem/177/B2", "B2. Rectangular Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Smart Beaver from ABBYY decided to have a day off. But doing nothing the whole day turned out to be too boring, and he decided to play a game with pebbles. Initially, the Beaver has n pebbles. He arranges them in a equal rows, each row has b pebbles (a\u2009>\u20091). Note that the Beaver must use all the pebbles he has, i. e. n\u2009=\u2009a\u00b7b.   10 pebbles are arranged in two rows, each row has 5 pebbles  Once the Smart Beaver has arranged the pebbles, he takes back any of the resulting rows (that is, b pebbles) and discards all other pebbles. Then he arranges all his pebbles again (possibly choosing other values of a and b) and takes back one row, and so on. The game continues until at some point the Beaver ends up with exactly one pebble. The game process can be represented as a finite sequence of integers c1,\u2009...,\u2009ck, where:   c1\u2009=\u2009n  ci\u2009+\u20091 is the number of pebbles that the Beaver ends up with after the i-th move, that is, the number of pebbles in a row after some arrangement of ci pebbles (1\u2009\u2264\u2009i\u2009<\u2009k). Note that ci\u2009>\u2009ci\u2009+\u20091.  ck\u2009=\u20091 The result of the game is the sum of numbers ci. You are given n. Find the maximum possible result of the game.InputThe single line of the input contains a single integer n \u2014 the initial number of pebbles the Smart Beaver has.The input limitations for getting 30 points are:   2\u2009\u2264\u2009n\u2009\u2264\u200950  The input limitations for getting 100 points are:   2\u2009\u2264\u2009n\u2009\u2264\u2009109  OutputPrint a single number \u2014 the maximum possible result of the game.ExamplesInputCopy10OutputCopy16InputCopy8OutputCopy15NoteConsider the first example (c1\u2009=\u200910). The possible options for the game development are:  Arrange the pebbles in 10 rows, one pebble per row. Then c2\u2009=\u20091, and the game ends after the first move with the result of 11.  Arrange the pebbles in 5 rows, two pebbles per row. Then c2\u2009=\u20092, and the game continues. During the second move we have two pebbles which can be arranged in a unique way (remember that you are not allowed to put all the pebbles in the same row!) \u2014 2 rows, one pebble per row. c3\u2009=\u20091, and the game ends with the result of 13.  Finally, arrange the pebbles in two rows, five pebbles per row. The same logic leads us to c2\u2009=\u20095,\u2009c3\u2009=\u20091, and the game ends with the result of 16 \u2014 the maximum possible result. "], "Pseudorandom Sequence Period": ["https://codeforces.com/problemset/problem/172/B", "B. Pseudorandom Sequence Periodtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarpus has recently got interested in sequences of pseudorandom numbers. He learned that many programming languages generate such sequences in a similar way:  (for i\u2009\u2265\u20091). Here a, b, m are constants, fixed for the given realization of the pseudorandom numbers generator, r0 is the so-called randseed (this value can be set from the program using functions like RandSeed(r) or srand(n)), and  denotes the operation of taking the remainder of division.For example, if a\u2009=\u20092,\u2009b\u2009=\u20096,\u2009m\u2009=\u200912,\u2009r0\u2009=\u200911, the generated sequence will be: 4,\u20092,\u200910,\u20092,\u200910,\u20092,\u200910,\u20092,\u200910,\u20092,\u200910,\u2009....Polycarpus realized that any such sequence will sooner or later form a cycle, but the cycle may occur not in the beginning, so there exist a preperiod and a period. The example above shows a preperiod equal to 1 and a period equal to 2.Your task is to find the period of a sequence defined by the given values of a,\u2009b,\u2009m and r0. Formally, you have to find such minimum positive integer t, for which exists such positive integer k, that for any i\u2009\u2265\u2009k: ri\u2009=\u2009ri\u2009+\u2009t.InputThe single line of the input contains four integers a, b, m and r0 (1\u2009\u2264\u2009m\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009a,\u2009b\u2009\u2264\u20091000,\u20090\u2009\u2264\u2009r0\u2009<\u2009m), separated by single spaces.OutputPrint a single integer \u2014 the period of the sequence.ExamplesInputCopy2 6 12 11OutputCopy2InputCopy2 3 5 1OutputCopy4InputCopy3 6 81 9OutputCopy1NoteThe first sample is described above. In the second sample the sequence is (starting from the first element): 0,\u20093,\u20094,\u20091,\u20090,\u20093,\u20094,\u20091,\u20090,\u2009...In the third sample the sequence is (starting from the first element): 33,\u200924,\u200978,\u200978,\u200978,\u200978,\u2009..."], "Encryption (easy)": ["https://codeforces.com/problemset/problem/958/C1", "C1. Encryption (easy)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRebel spy Heidi has just obtained the plans for the Death Star from the Empire and, now on her way to safety, she is trying to break the encryption of the plans (of course they are encrypted \u2013 the Empire may be evil, but it is not stupid!). The encryption has several levels of security, and here is how the first one looks.Heidi is presented with a screen that shows her a sequence of integers A and a positive integer p. She knows that the encryption code is a single number S, which is defined as follows:Define the score of X to be the sum of the elements of X modulo p.Heidi is given a sequence A that consists of N integers, and also given an integer p. She needs to split A into 2 parts such that:   Each part contains at least 1 element of A, and each part consists of contiguous elements of A.  The two parts do not overlap.  The total sum S of the scores of those two parts is maximized. This is the encryption code. Output the sum S, which is the encryption code.InputThe first line of the input contains two space-separated integer N and p (2\u2009\u2264\u2009N\u2009\u2264\u2009100\u2009000, 2\u2009\u2264\u2009p\u2009\u2264\u200910\u2009000) \u2013 the number of elements in A, and the modulo for computing scores, respectively.The second line contains N space-separated integers which are the elements of A. Each integer is from the interval [1,\u20091\u2009000\u2009000].OutputOutput the number S as described in the problem statement.ExamplesInputCopy4 103 4 7 2OutputCopy16InputCopy10 1216 3 24 13 9 8 7 5 12 12OutputCopy13NoteIn the first example, the score is maximized if the input sequence is split into two parts as (3,\u20094), (7,\u20092). It gives the total score of .In the second example, the score is maximized if the first part consists of the first three elements, and the second part consists of the rest. Then, the score is ."], "Data Recovery": ["https://codeforces.com/problemset/problem/413/A", "A. Data Recoverytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNot so long ago company R2 bought company R1 and consequently, all its developments in the field of multicore processors. Now the R2 laboratory is testing one of the R1 processors.The testing goes in n steps, at each step the processor gets some instructions, and then its temperature is measured. The head engineer in R2 is keeping a report record on the work of the processor: he writes down the minimum and the maximum measured temperature in his notebook. His assistant had to write down all temperatures into his notebook, but (for unknown reasons) he recorded only m.The next day, the engineer's assistant filed in a report with all the m temperatures. However, the chief engineer doubts that the assistant wrote down everything correctly (naturally, the chief engineer doesn't doubt his notes). So he asked you to help him. Given numbers n, m, min, max and the list of m temperatures determine whether you can upgrade the set of m temperatures to the set of n temperatures (that is add n\u2009-\u2009m temperatures), so that the minimum temperature was min and the maximum one was max.InputThe first line contains four integers n,\u2009m,\u2009min,\u2009max (1\u2009\u2264\u2009m\u2009<\u2009n\u2009\u2264\u2009100;\u00a01\u2009\u2264\u2009min\u2009<\u2009max\u2009\u2264\u2009100). The second line contains m space-separated integers ti (1\u2009\u2264\u2009ti\u2009\u2264\u2009100) \u2014 the temperatures reported by the assistant.Note, that the reported temperatures, and the temperatures you want to add can contain equal temperatures.OutputIf the data is consistent, print 'Correct' (without the quotes). Otherwise, print 'Incorrect' (without the quotes).ExamplesInputCopy2 1 1 21OutputCopyCorrectInputCopy3 1 1 32OutputCopyCorrectInputCopy2 1 1 32OutputCopyIncorrectNoteIn the first test sample one of the possible initial configurations of temperatures is [1, 2].In the second test sample one of the possible initial configurations of temperatures is [2, 1, 3].In the third test sample it is impossible to add one temperature to obtain the minimum equal to 1 and the maximum equal to 3."], "The Wall (easy)": ["https://codeforces.com/problemset/problem/690/D1", "D1. The Wall (easy)time limit per test0.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output\"The zombies are lurking outside. Waiting. Moaning. And when they come...\"\"When they come?\"\"I hope the Wall is high enough.\"Zombie attacks have hit the Wall, our line of defense in the North. Its protection is failing, and cracks are showing. In places, gaps have appeared, splitting the wall into multiple segments. We call on you for help. Go forth and explore the wall! Report how many disconnected segments there are.The wall is a two-dimensional structure made of bricks. Each brick is one unit wide and one unit high. Bricks are stacked on top of each other to form columns that are up to R bricks high. Each brick is placed either on the ground or directly on top of another brick. Consecutive non-empty columns form a wall segment. The entire wall, all the segments and empty columns in-between, is C columns wide.InputThe first line of the input consists of two space-separated integers R and C, 1\u2009\u2264\u2009R,\u2009C\u2009\u2264\u2009100. The next R lines provide a description of the columns as follows:   each of the R lines contains a string of length C,  the c-th character of line r is B if there is a brick in column c and row R\u2009-\u2009r\u2009+\u20091, and . otherwise.  The input will contain at least one character B and it will be valid.OutputThe number of wall segments in the input configuration.ExamplesInputCopy3 7...............BB.B..OutputCopy2InputCopy4 5..B....B..B.B.BBBB.BOutputCopy2InputCopy4 6..B...B.B.BBBBB.BBBBBBBBOutputCopy1InputCopy1 1BOutputCopy1InputCopy10 7...........................................................B...B.BB.B.OutputCopy3InputCopy8 8.................................B.......B.....B.B.....B.BB...BBOutputCopy2NoteIn the first sample case, the 2nd and 3rd columns define the first wall segment, and the 5th column defines the second."], "Land Lot": ["https://codeforces.com/problemset/problem/48/B", "B. Land Lottime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has a beautiful garden where wonderful fruit trees grow and yield fantastic harvest every year. But lately thieves started to sneak into the garden at nights and steal the fruit too often. Vasya can\u2019t spend the nights in the garden and guard the fruit because there\u2019s no house in the garden! Vasya had been saving in for some time and finally he decided to build the house. The rest is simple: he should choose in which part of the garden to build the house. In the evening he sat at his table and drew the garden\u2019s plan. On the plan the garden is represented as a rectangular checkered field n\u2009\u00d7\u2009m in size divided into squares whose side length is 1. In some squares Vasya marked the trees growing there (one shouldn\u2019t plant the trees too close to each other that\u2019s why one square contains no more than one tree). Vasya wants to find a rectangular land lot a\u2009\u00d7\u2009b squares in size to build a house on, at that the land lot border should go along the lines of the grid that separates the squares. All the trees that grow on the building lot will have to be chopped off. Vasya loves his garden very much, so help him choose the building land lot location so that the number of chopped trees would be as little as possible.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200950) which represent the garden location. The next n lines contain m numbers 0 or 1, which describe the garden on the scheme. The zero means that a tree doesn\u2019t grow on this square and the 1 means that there is a growing tree. The last line contains two integers a and b (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u200950). Note that Vasya can choose for building an a\u2009\u00d7\u2009b rectangle as well a b\u2009\u00d7\u2009a one, i.e. the side of the lot with the length of a can be located as parallel to the garden side with the length of n, as well as parallel to the garden side with the length of m.OutputPrint the minimum number of trees that needs to be chopped off to select a land lot a\u2009\u00d7\u2009b in size to build a house on. It is guaranteed that at least one lot location can always be found, i. e. either a\u2009\u2264\u2009n and b\u2009\u2264\u2009m, or a\u2009\u2264\u2009m \u0438 b\u2009\u2264\u2009n.ExamplesInputCopy2 21 01 11 1OutputCopy0InputCopy4 50 0 1 0 10 1 1 1 01 0 1 0 11 1 1 1 12 3OutputCopy2NoteIn the second example the upper left square is (1,1) and the lower right is (3,2)."], "Mathematical Analysis Rocks!": ["https://codeforces.com/problemset/problem/180/F", "F. Mathematical Analysis Rocks!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputStudents of group 199 have written their lectures dismally. Now an exam on Mathematical Analysis is approaching and something has to be done asap (that is, quickly). Let's number the students of the group from 1 to n. Each student i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) has a best friend p[i] (1\u2009\u2264\u2009p[i]\u2009\u2264\u2009n). In fact, each student is a best friend of exactly one student. In other words, all p[i] are different. It is possible that the group also has some really \"special individuals\" for who i\u2009=\u2009p[i].Each student wrote exactly one notebook of lecture notes. We know that the students agreed to act by the following algorithm:   on the first day of revising each student studies his own Mathematical Analysis notes,  in the morning of each following day each student gives the notebook to his best friend and takes a notebook from the student who calls him the best friend. Thus, on the second day the student p[i] (1\u2009\u2264\u2009i\u2009\u2264\u2009n) studies the i-th student's notes, on the third day the notes go to student p[p[i]] and so on. Due to some characteristics of the boys' friendship (see paragraph 1), each day each student has exactly one notebook to study.You are given two sequences that describe the situation on the third and fourth days of revising:  a1,\u2009a2,\u2009...,\u2009an, where ai means the student who gets the i-th student's notebook on the third day of revising;  b1,\u2009b2,\u2009...,\u2009bn, where bi means the student who gets the i-th student's notebook on the fourth day of revising. You do not know array p, that is you do not know who is the best friend to who. Write a program that finds p by the given sequences a and b.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of students in the group. The second line contains sequence of different integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009n). The third line contains the sequence of different integers b1,\u2009b2,\u2009...,\u2009bn (1\u2009\u2264\u2009bi\u2009\u2264\u2009n).OutputPrint sequence n of different integers p[1],\u2009p[2],\u2009...,\u2009p[n] (1\u2009\u2264\u2009p[i]\u2009\u2264\u2009n). It is guaranteed that the solution exists and that it is unique.ExamplesInputCopy42 1 4 33 4 2 1OutputCopy4 3 1 2 InputCopy55 2 3 1 41 3 2 4 5OutputCopy4 3 2 5 1 InputCopy21 22 1OutputCopy2 1 "], "Encrypting Messages": ["https://codeforces.com/problemset/problem/177/D1", "D1. Encrypting Messagestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Smart Beaver from ABBYY invented a new message encryption method and now wants to check its performance. Checking it manually is long and tiresome, so he decided to ask the ABBYY Cup contestants for help.A message is a sequence of n integers a1,\u2009a2,\u2009...,\u2009an. Encryption uses a key which is a sequence of m integers b1,\u2009b2,\u2009...,\u2009bm (m\u2009\u2264\u2009n). All numbers from the message and from the key belong to the interval from 0 to c\u2009-\u20091, inclusive, and all the calculations are performed modulo c.Encryption is performed in n\u2009-\u2009m\u2009+\u20091 steps. On the first step we add to each number a1,\u2009a2,\u2009...,\u2009am a corresponding number b1,\u2009b2,\u2009...,\u2009bm. On the second step we add to each number a2,\u2009a3,\u2009...,\u2009am\u2009+\u20091 (changed on the previous step) a corresponding number b1,\u2009b2,\u2009...,\u2009bm. And so on: on step number i we add to each number ai,\u2009ai\u2009+\u20091,\u2009...,\u2009ai\u2009+\u2009m\u2009-\u20091 a corresponding number b1,\u2009b2,\u2009...,\u2009bm. The result of the encryption is the sequence a1,\u2009a2,\u2009...,\u2009an after n\u2009-\u2009m\u2009+\u20091 steps.Help the Beaver to write a program that will encrypt messages in the described manner.InputThe first input line contains three integers n, m and c, separated by single spaces. The second input line contains n integers ai (0\u2009\u2264\u2009ai\u2009<\u2009c), separated by single spaces \u2014 the original message. The third input line contains m integers bi (0\u2009\u2264\u2009bi\u2009<\u2009c), separated by single spaces \u2014 the encryption key.The input limitations for getting 30 points are:   1\u2009\u2264\u2009m\u2009\u2264\u2009n\u2009\u2264\u2009103  1\u2009\u2264\u2009c\u2009\u2264\u2009103  The input limitations for getting 100 points are:   1\u2009\u2264\u2009m\u2009\u2264\u2009n\u2009\u2264\u2009105  1\u2009\u2264\u2009c\u2009\u2264\u2009103  OutputPrint n space-separated integers \u2014 the result of encrypting the original message.ExamplesInputCopy4 3 21 1 1 11 1 1OutputCopy0 1 1 0InputCopy3 1 51 2 34OutputCopy0 1 2NoteIn the first sample the encryption is performed in two steps: after the first step a\u2009=\u2009(0,\u20090,\u20090,\u20091) (remember that the calculations are performed modulo 2), after the second step a\u2009=\u2009(0,\u20091,\u20091,\u20090), and that is the answer. "], "Trading Business": ["https://codeforces.com/problemset/problem/176/A", "A. Trading Businesstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTo get money for a new aeonic blaster, ranger Qwerty decided to engage in trade for a while. He wants to buy some number of items (or probably not to buy anything at all) on one of the planets, and then sell the bought items on another planet. Note that this operation is not repeated, that is, the buying and the selling are made only once. To carry out his plan, Qwerty is going to take a bank loan that covers all expenses and to return the loaned money at the end of the operation (the money is returned without the interest). At the same time, Querty wants to get as much profit as possible.The system has n planets in total. On each of them Qwerty can buy or sell items of m types (such as food, medicine, weapons, alcohol, and so on). For each planet i and each type of items j Qwerty knows the following: aij \u2014 the cost of buying an item;  bij \u2014 the cost of selling an item;  cij \u2014 the number of remaining items.It is not allowed to buy more than cij items of type j on planet i, but it is allowed to sell any number of items of any kind.Knowing that the hold of Qwerty's ship has room for no more than k items, determine the maximum profit which Qwerty can get.InputThe first line contains three space-separated integers n, m and k (2\u2009\u2264\u2009n\u2009\u2264\u200910, 1\u2009\u2264\u2009m,\u2009k\u2009\u2264\u2009100) \u2014 the number of planets, the number of question types and the capacity of Qwerty's ship hold, correspondingly.Then follow n blocks describing each planet.The first line of the i-th block has the planet's name as a string with length from 1 to 10 Latin letters. The first letter of the name is uppercase, the rest are lowercase. Then in the i-th block follow m lines, the j-th of them contains three integers aij, bij and cij (1\u2009\u2264\u2009bij\u2009<\u2009aij\u2009\u2264\u20091000, 0\u2009\u2264\u2009cij\u2009\u2264\u2009100) \u2014 the numbers that describe money operations with the j-th item on the i-th planet. The numbers in the lines are separated by spaces.It is guaranteed that the names of all planets are different.OutputPrint a single number \u2014 the maximum profit Qwerty can get.ExamplesInputCopy3 3 10Venus6 5 37 6 58 6 10Earth10 9 08 6 410 9 3Mars4 3 08 4 127 2 5OutputCopy16NoteIn the first test case you should fly to planet Venus, take a loan on 74 units of money and buy three items of the first type and 7 items of the third type (3\u00b76\u2009+\u20097\u00b78\u2009=\u200974). Then the ranger should fly to planet Earth and sell there all the items he has bought. He gets 3\u00b79\u2009+\u20097\u00b79\u2009=\u200990 units of money for the items, he should give 74 of them for the loan. The resulting profit equals 16 units of money. We cannot get more profit in this case."], "The Check of the Point": ["https://codeforces.com/problemset/problem/683/A", "A. The Check of the Pointtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOn the coordinate plane there is a square with sides parallel to the coordinate axes. The length of the square side is equal to a. The lower left corner of the square coincides with the point (0,\u20090) (the point of the origin). The upper right corner of the square has positive coordinates.You are given a point with coordinates (x, y). Your task is to determine whether this point is located strictly inside the square, on its side, or strictly outside the square.InputThe first line contains three integers a, x and y (1\u2009\u2264\u2009a\u2009\u2264\u20091000, \u2009-\u20091000\u2009\u2264\u2009x,\u2009y\u2009\u2264\u20091000) \u2014 the length of the square side and the coordinates of the point which should be checked.OutputPrint one integer:  0, if the point is located strictly inside the square;  1, if the point is located on the side of the square;  2, if the point is located strictly outside the square. ExamplesInputCopy2 1 1OutputCopy0InputCopy4 4 4OutputCopy1InputCopy10 5 -4OutputCopy2"], "Oracle for f(x) = parity of the number of 1s in x": ["https://codeforces.com/problemset/problem/1001/H", "H. Oracle for f(x) = parity of the number of 1s in xtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a quantum oracle on N qubits which implements the following function: , i.e., the value of the function is 1 if x has odd number of 1s, and 0 otherwise.InputYou have to implement an operation which takes the following inputs: an array of qubits x (input register), a qubit y (output qubit).The operation doesn't have an output; the \"output\" of your solution is the state in which it left the qubits.Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (x : Qubit[], y : Qubit) : ()    {        body        {            // your code here        }    }}"], "Extraordinarily Nice Numbers": ["https://codeforces.com/problemset/problem/72/C", "C. Extraordinarily Nice Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe positive integer a is a divisor of the positive integer b if and only if there exists a positive integer c such that a\u2009\u00d7\u2009c\u2009=\u2009b. King Astyages thinks a positive integer x is extraordinarily nice if the number of its even divisors is equal to the number of its odd divisors.For example 3 has two positive divisors 3 and 1, both of which are odd, so 3 is not extraordinarily nice. On the other hand 2 is only divisible by 2 and 1, so it has one odd and one even divisor. Therefore 2 is extraordinarily nice.Given a positive integer x determine whether it's extraordinarily nice.InputThe input contains only a single integer x (1\u2009\u2264\u2009x\u2009\u2264\u2009103).OutputWrite a single yes or no. Write yes if the number is extraordinarily nice and no otherwise.You don't need to care about capital or small letters. The output is case-insensitive.ExamplesInputCopy2OutputCopyyesInputCopy3OutputCopyno"], "Oracle for f(x) = b * x mod 2": ["https://codeforces.com/problemset/problem/1002/D1", "D1. Oracle for f(x) = b * x mod 2time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a quantum oracle on N qubits which implements the following function: , where  (a vector of N integers, each of which can be 0 or 1).For an explanation on how this type of quantum oracles works, see Introduction to quantum oracles.You have to implement an operation which takes the following inputs: an array of N qubits x in arbitrary state (input register), 1\u2009\u2264\u2009N\u2009\u2264\u20098, a qubit y in arbitrary state (output qubit), an array of N integers b, representing the vector . Each element of b will be 0 or 1.The operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (x : Qubit[], y : Qubit, b : Int[]) : ()    {        body        {            // your code here        }    }}"], "IQ test": ["https://codeforces.com/problemset/problem/25/A", "A. IQ testtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBob is preparing to pass IQ test. The most frequent task in this test is to find out which one of the given n numbers differs from the others. Bob observed that one number usually differs from the others in evenness. Help Bob \u2014 to check his answers, he needs a program that among the given n numbers finds one that is different in evenness.InputThe first line contains integer n (3\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 amount of numbers in the task. The second line contains n space-separated natural numbers, not exceeding 100. It is guaranteed, that exactly one of these numbers differs from the others in evenness.OutputOutput index of number that differs from the others in evenness. Numbers are numbered from 1 in the input order.ExamplesInputCopy52 4 7 8 10OutputCopy3InputCopy41 2 1 1OutputCopy2"], "Registration System": ["https://codeforces.com/problemset/problem/4/C", "C. Registration systemtime limit per test5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputA new e-mail service \"Berlandesk\" is going to be opened in Berland in the near future. The site administration wants to launch their project as soon as possible, that's why they ask you to help. You're suggested to implement the prototype of site registration system. The system should work on the following principle. Each time a new user wants to register, he sends to the system a request with his name. If such a name does not exist in the system database, it is inserted into the database, and the user gets the response OK, confirming the successful registration. If the name already exists in the system database, the system makes up a new user name, sends it to the user as a prompt and also inserts the prompt into the database. The new name is formed by the following rule. Numbers, starting with 1, are appended one after another to name (name1, name2, ...), among these numbers the least i is found so that namei does not yet exist in the database.InputThe first line contains number n (1\u2009\u2264\u2009n\u2009\u2264\u2009105). The following n lines contain the requests to the system. Each request is a non-empty line, and consists of not more than 32 characters, which are all lowercase Latin letters.OutputPrint n lines, which are system responses to the requests: OK in case of successful registration, or a prompt with a new name, if the requested name is already taken.ExamplesInputCopy4abacabaacabaabacabaacabOutputCopyOKOKabacaba1OKInputCopy6firstfirstsecondsecondthirdthirdOutputCopyOKfirst1OKsecond1OKthird1"], "T-primes": ["https://codeforces.com/problemset/problem/230/B", "B. T-primestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWe know that prime numbers are positive integers that have exactly two distinct positive divisors. Similarly, we'll call a positive integer t \u0422-prime, if t has exactly three distinct positive divisors.You are given an array of n positive integers. For each of them determine whether it is \u0422-prime or not.InputThe first line contains a single positive integer, n (1\u2009\u2264\u2009n\u2009\u2264\u2009105), showing how many numbers are in the array. The next line contains n space-separated integers xi (1\u2009\u2264\u2009xi\u2009\u2264\u20091012).Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is advised to use the cin, cout streams or the %I64d specifier.OutputPrint n lines: the i-th line should contain \"YES\" (without the quotes), if number xi is \u0422-prime, and \"NO\" (without the quotes), if it isn't.ExamplesInputCopy34 5 6OutputCopyYESNONONoteThe given test has three numbers. The first number 4 has exactly three divisors \u2014 1, 2 and 4, thus the answer for this number is \"YES\". The second number 5 has two divisors (1 and 5), and the third number 6 has four divisors (1, 2, 3, 6), hence the answer for them is \"NO\"."], "Cut Ribbon": ["https://codeforces.com/problemset/problem/189/A", "A. Cut Ribbontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarpus has a ribbon, its length is n. He wants to cut the ribbon in a way that fulfils the following two conditions:   After the cutting each ribbon piece should have length a, b or c.  After the cutting the number of ribbon pieces should be maximum. Help Polycarpus and find the number of ribbon pieces after the required cutting.InputThe first line contains four space-separated integers n, a, b and c (1\u2009\u2264\u2009n,\u2009a,\u2009b,\u2009c\u2009\u2264\u20094000) \u2014 the length of the original ribbon and the acceptable lengths of the ribbon pieces after the cutting, correspondingly. The numbers a, b and c can coincide.OutputPrint a single number \u2014 the maximum possible number of ribbon pieces. It is guaranteed that at least one correct ribbon cutting exists.ExamplesInputCopy5 5 3 2OutputCopy2InputCopy7 5 5 2OutputCopy2NoteIn the first example Polycarpus can cut the ribbon in such way: the first piece has length 2, the second piece has length 3.In the second example Polycarpus can cut the ribbon in such way: the first piece has length 5, the second piece has length 2."], "Sort the Array": ["https://codeforces.com/problemset/problem/451/B", "B. Sort the Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBeing a programmer, you like arrays a lot. For your birthday, your friends have given you an array a consisting of n distinct integers.Unfortunately, the size of a is too small. You want a bigger array! Your friends agree to give you a bigger array, but only if you are able to answer the following question correctly: is it possible to sort the array a (in increasing order) by reversing exactly one segment of a? See definitions of segment and reversing in the notes.InputThe first line of the input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the size of array a.The second line contains n distinct space-separated integers: a[1],\u2009a[2],\u2009...,\u2009a[n] (1\u2009\u2264\u2009a[i]\u2009\u2264\u2009109).OutputPrint \"yes\" or \"no\" (without quotes), depending on the answer.If your answer is \"yes\", then also print two space-separated integers denoting start and end (start must not be greater than end) indices of the segment to be reversed. If there are multiple ways of selecting these indices, print any of them.ExamplesInputCopy33 2 1OutputCopyyes1 3InputCopy42 1 3 4OutputCopyyes1 2InputCopy43 1 2 4OutputCopynoInputCopy21 2OutputCopyyes1 1NoteSample 1. You can reverse the entire array to get [1,\u20092,\u20093], which is sorted.Sample 3. No segment can be reversed such that the array will be sorted.DefinitionsA segment [l,\u2009r] of array a is the sequence a[l],\u2009a[l\u2009+\u20091],\u2009...,\u2009a[r].If you have an array a of size n and you reverse its segment [l,\u2009r], the array will become:a[1],\u2009a[2],\u2009...,\u2009a[l\u2009-\u20092],\u2009a[l\u2009-\u20091],\u2009a[r],\u2009a[r\u2009-\u20091],\u2009...,\u2009a[l\u2009+\u20091],\u2009a[l],\u2009a[r\u2009+\u20091],\u2009a[r\u2009+\u20092],\u2009...,\u2009a[n\u2009-\u20091],\u2009a[n]."], "Pashmak and Flowers": ["https://codeforces.com/problemset/problem/459/B", "B. Pashmak and Flowerstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPashmak decided to give Parmida a pair of flowers from the garden. There are n flowers in the garden and the i-th of them has a beauty number bi. Parmida is a very strange girl so she doesn't want to have the two most beautiful flowers necessarily. She wants to have those pairs of flowers that their beauty difference is maximal possible!Your task is to write a program which calculates two things:  The maximum beauty difference of flowers that Pashmak can give to Parmida.  The number of ways that Pashmak can pick the flowers. Two ways are considered different if and only if there is at least one flower that is chosen in the first way and not chosen in the second way. InputThe first line of the input contains n (2\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105). In the next line there are n space-separated integers b1, b2, ..., bn (1\u2009\u2264\u2009bi\u2009\u2264\u2009109).OutputThe only line of output should contain two integers. The maximum beauty difference and the number of ways this may happen, respectively.ExamplesInputCopy21 2OutputCopy1 1InputCopy31 4 5OutputCopy4 1InputCopy53 1 2 3 1OutputCopy2 4NoteIn the third sample the maximum beauty difference is 2 and there are 4 ways to do this:  choosing the first and the second flowers;  choosing the first and the fifth flowers;  choosing the fourth and the second flowers;  choosing the fourth and the fifth flowers. "], "Random Teams": ["https://codeforces.com/problemset/problem/478/B", "B. Random Teamstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputn participants of the competition were split into m teams in some manner so that each team has at least one participant. After the competition each pair of participants from the same team became friends.Your task is to write a program that will find the minimum and the maximum number of pairs of friends that could have formed by the end of the competition.InputThe only line of input contains two integers n and m, separated by a single space (1\u2009\u2264\u2009m\u2009\u2264\u2009n\u2009\u2264\u2009109) \u2014 the number of participants and the number of teams respectively. OutputThe only line of the output should contain two integers kmin and kmax \u2014 the minimum possible number of pairs of friends and the maximum possible number of pairs of friends respectively.ExamplesInputCopy5 1OutputCopy10 10InputCopy3 2OutputCopy1 1InputCopy6 3OutputCopy3 6NoteIn the first sample all the participants get into one team, so there will be exactly ten pairs of friends.In the second sample at any possible arrangement one team will always have two participants and the other team will always have one participant. Thus, the number of pairs of friends will always be equal to one.In the third sample minimum number of newly formed friendships can be achieved if participants were split on teams consisting of 2 people, maximum number can be achieved if participants were split on teams of 1, 1 and 4 people."], "K-th Beautiful String": ["https://codeforces.com/problemset/problem/1328/B", "B. K-th Beautiful Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFor the given integer nn (n>2n>2) let's write down all the strings of length nn which contain n\u22122n\u22122 letters 'a' and two letters 'b' in lexicographical (alphabetical) order.Recall that the string ss of length nn is lexicographically less than string tt of length nn, if there exists such ii (1\u2264i\u2264n1\u2264i\u2264n), that si<tisi<ti, and for any jj (1\u2264j<i1\u2264j<i) sj=tjsj=tj. The lexicographic comparison of strings is implemented by the operator < in modern programming languages.For example, if n=5n=5 the strings are (the order does matter):  aaabb  aabab  aabba  abaab  ababa  abbaa  baaab  baaba  babaa  bbaaa It is easy to show that such a list of strings will contain exactly n\u22c5(n\u22121)2n\u22c5(n\u22121)2 strings.You are given nn (n>2n>2) and kk (1\u2264k\u2264n\u22c5(n\u22121)21\u2264k\u2264n\u22c5(n\u22121)2). Print the kk-th string from the list.InputThe input contains one or more test cases.The first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases in the test. Then tt test cases follow.Each test case is written on the the separate line containing two integers nn and kk (3\u2264n\u2264105,1\u2264k\u2264min(2\u22c5109,n\u22c5(n\u22121)2)3\u2264n\u2264105,1\u2264k\u2264min(2\u22c5109,n\u22c5(n\u22121)2).The sum of values nn over all test cases in the test doesn't exceed 105105.OutputFor each test case print the kk-th string from the list of all described above strings of length nn. Strings in the list are sorted lexicographically (alphabetically).ExampleInputCopy7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\nOutputCopyaaabb\naabab\nbaaba\nbbaaa\nabb\nbab\naaaaabaaaaabaaaaaaaa\n"], "Buying Shovels": ["https://codeforces.com/problemset/problem/1360/D", "D. Buying Shovelstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp wants to buy exactly nn shovels. The shop sells packages with shovels. The store has kk types of packages: the package of the ii-th type consists of exactly ii shovels (1\u2264i\u2264k1\u2264i\u2264k). The store has an infinite number of packages of each type.Polycarp wants to choose one type of packages and then buy several (one or more) packages of this type. What is the smallest number of packages Polycarp will have to buy to get exactly nn shovels?For example, if n=8n=8 and k=7k=7, then Polycarp will buy 22 packages of 44 shovels.Help Polycarp find the minimum number of packages that he needs to buy, given that he:   will buy exactly nn shovels in total;  the sizes of all packages he will buy are all the same and the number of shovels in each package is an integer from 11 to kk, inclusive. InputThe first line contains an integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases in the input. Then, tt test cases follow, one per line.Each test case consists of two positive integers nn (1\u2264n\u22641091\u2264n\u2264109) and kk (1\u2264k\u22641091\u2264k\u2264109)\u00a0\u2014 the number of shovels and the number of types of packages.OutputPrint tt answers to the test cases. Each answer is a positive integer\u00a0\u2014 the minimum number of packages.ExampleInputCopy5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\nOutputCopy2\n8\n1\n999999733\n1\nNoteThe answer to the first test case was explained in the statement.In the second test case, there is only one way to buy 88 shovels\u00a0\u2014 88 packages of one shovel.In the third test case, you need to buy a 11 package of 66 shovels."], "Product of Three Numbers": ["https://codeforces.com/problemset/problem/1294/C", "C. Product of Three Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given one integer number nn. Find three distinct integers a,b,ca,b,c such that 2\u2264a,b,c2\u2264a,b,c and a\u22c5b\u22c5c=na\u22c5b\u22c5c=n or say that it is impossible to do it.If there are several answers, you can print any.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.The next nn lines describe test cases. The ii-th test case is given on a new line as one integer nn (2\u2264n\u22641092\u2264n\u2264109).OutputFor each test case, print the answer on it. Print \"NO\" if it is impossible to represent nn as a\u22c5b\u22c5ca\u22c5b\u22c5c for some distinct integers a,b,ca,b,c such that 2\u2264a,b,c2\u2264a,b,c.Otherwise, print \"YES\" and any possible such representation.ExampleInputCopy5\n64\n32\n97\n2\n12345\nOutputCopyYES\n2 4 8 \nNO\nNO\nNO\nYES\n3 5 823 \n"], "Anti-Sudoku": ["https://codeforces.com/problemset/problem/1335/D", "D. Anti-Sudokutime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a correct solution of the sudoku puzzle. If you don't know what is the sudoku, you can read about it here.The picture showing the correct sudoku solution:Blocks are bordered with bold black color.Your task is to change at most 99 elements of this field (i.e. choose some 1\u2264i,j\u226491\u2264i,j\u22649 and change the number at the position (i,j)(i,j) to any other number in range [1;9][1;9]) to make it anti-sudoku. The anti-sudoku is the 9\u00d799\u00d79 field, in which:  Any number in this field is in range [1;9][1;9];  each row contains at least two equal elements;  each column contains at least two equal elements;  each 3\u00d733\u00d73 block (you can read what is the block in the link above) contains at least two equal elements. It is guaranteed that the answer exists.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. Then tt test cases follow.Each test case consists of 99 lines, each line consists of 99 characters from 11 to 99 without any whitespaces \u2014 the correct solution of the sudoku puzzle.OutputFor each test case, print the answer \u2014 the initial field with at most 99 changed elements so that the obtained field is anti-sudoku. If there are several solutions, you can print any. It is guaranteed that the answer exists.ExampleInputCopy1\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\nOutputCopy154873396\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n"], "Dreamoon and WiFi": ["https://codeforces.com/problemset/problem/476/B", "B. Dreamoon and WiFitime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDreamoon is standing at the position 0 on a number line. Drazil is sending a list of commands through Wi-Fi to Dreamoon's smartphone and Dreamoon follows them.Each command is one of the following two types:   Go 1 unit towards the positive direction, denoted as '+'  Go 1 unit towards the negative direction, denoted as '-' But the Wi-Fi condition is so poor that Dreamoon's smartphone reports some of the commands can't be recognized and Dreamoon knows that some of them might even be wrong though successfully recognized. Dreamoon decides to follow every recognized command and toss a fair coin to decide those unrecognized ones (that means, he moves to the 1 unit to the negative or positive direction with the same probability 0.5). You are given an original list of commands sent by Drazil and list received by Dreamoon. What is the probability that Dreamoon ends in the position originally supposed to be final by Drazil's commands?InputThe first line contains a string s1 \u2014 the commands Drazil sends to Dreamoon, this string consists of only the characters in the set {'+', '-'}. The second line contains a string s2 \u2014 the commands Dreamoon's smartphone recognizes, this string consists of only the characters in the set {'+', '-', '?'}. '?' denotes an unrecognized command.Lengths of two strings are equal and do not exceed 10.OutputOutput a single real number corresponding to the probability. The answer will be considered correct if its relative or absolute error doesn't exceed 10\u2009-\u20099.ExamplesInputCopy++-+-+-+-+OutputCopy1.000000000000InputCopy+-+-+-??OutputCopy0.500000000000InputCopy+++??-OutputCopy0.000000000000NoteFor the first sample, both s1 and s2 will lead Dreamoon to finish at the same position \u2009+\u20091. For the second sample, s1 will lead Dreamoon to finish at position 0, while there are four possibilites for s2: {\"+-++\", \"+-+-\", \"+--+\", \"+---\"} with ending position {+2, 0, 0, -2} respectively. So there are 2 correct cases out of 4, so the probability of finishing at the correct position is 0.5. For the third sample, s2 could only lead us to finish at positions {+1, -1, -3}, so the probability to finish at the correct position \u2009+\u20093 is 0."], "Trouble Sort": ["https://codeforces.com/problemset/problem/1365/B", "B. Trouble Sorttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAshish has nn elements arranged in a line. These elements are represented by two integers aiai\u00a0\u2014 the value of the element and bibi\u00a0\u2014 the type of the element (there are only two possible types: 00 and 11). He wants to sort the elements in non-decreasing values of aiai.He can perform the following operation any number of times:  Select any two elements ii and jj such that bi\u2260bjbi\u2260bj and swap them. That is, he can only swap two elements of different types in one move. Tell him if he can sort the elements in non-decreasing values of aiai after performing any number of operations.InputThe first line contains one integer tt (1\u2264t\u2264100)(1\u2264t\u2264100)\u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains one integer nn (1\u2264n\u2264500)(1\u2264n\u2264500)\u00a0\u2014 the size of the arrays.The second line contains nn integers aiai (1\u2264ai\u2264105)(1\u2264ai\u2264105) \u00a0\u2014 the value of the ii-th element.The third line containts nn integers bibi (bi\u2208{0,1})(bi\u2208{0,1}) \u00a0\u2014 the type of the ii-th element.OutputFor each test case, print \"Yes\" or \"No\" (without quotes) depending on whether it is possible to sort elements in non-decreasing order of their value.You may print each letter in any case (upper or lower).ExampleInputCopy5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\nOutputCopyYes\nYes\nYes\nNo\nYes\nNoteFor the first case: The elements are already in sorted order.For the second case: Ashish may first swap elements at positions 11 and 22, then swap elements at positions 22 and 33.For the third case: The elements are already in sorted order.For the fourth case: No swap operations may be performed as there is no pair of elements ii and jj such that bi\u2260bjbi\u2260bj. The elements cannot be sorted.For the fifth case: Ashish may swap elements at positions 33 and 44, then elements at positions 11 and 22."], "Omkar and Last Class of Math": ["https://codeforces.com/problemset/problem/1372/B", "B. Omkar and Last Class of Mathtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn Omkar's last class of math, he learned about the least common multiple, or LCMLCM. LCM(a,b)LCM(a,b) is the smallest positive integer xx which is divisible by both aa and bb.Omkar, having a laudably curious mind, immediately thought of a problem involving the LCMLCM operation: given an integer nn, find positive integers aa and bb such that a+b=na+b=n and LCM(a,b)LCM(a,b) is the minimum value possible.Can you help Omkar solve his ludicrously challenging math problem?InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u2264101\u2264t\u226410). Description of the test cases follows.Each test case consists of a single integer nn (2\u2264n\u22641092\u2264n\u2264109).OutputFor each test case, output two positive integers aa and bb, such that a+b=na+b=n and LCM(a,b)LCM(a,b) is the minimum possible.ExampleInputCopy3\n4\n6\n9\nOutputCopy2 2\n3 3\n3 6\nNoteFor the first test case, the numbers we can choose are 1,31,3 or 2,22,2. LCM(1,3)=3LCM(1,3)=3 and LCM(2,2)=2LCM(2,2)=2, so we output 2\u00a022\u00a02.For the second test case, the numbers we can choose are 1,51,5, 2,42,4, or 3,33,3. LCM(1,5)=5LCM(1,5)=5, LCM(2,4)=4LCM(2,4)=4, and LCM(3,3)=3LCM(3,3)=3, so we output 3\u00a033\u00a03.For the third test case, LCM(3,6)=6LCM(3,6)=6. It can be shown that there are no other pairs of numbers which sum to 99 that have a lower LCMLCM."], "Polygon": ["https://codeforces.com/problemset/problem/1360/E", "E. Polygontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolygon is not only the best platform for developing problems but also a square matrix with side nn, initially filled with the character 0.On the polygon, military training was held. The soldiers placed a cannon above each cell in the first row and a cannon to the left of each cell in the first column. Thus, exactly 2n2n cannons were placed.  Initial polygon for n=4n=4. Cannons shoot character 1. At any moment of time, no more than one cannon is shooting. When a 1 flies out of a cannon, it flies forward (in the direction of the shot) until it collides with a polygon border or another 1. After that, it takes the cell in which it was before the collision and remains there. Take a look at the examples for better understanding.More formally:   if a cannon stands in the row ii, to the left of the first column, and shoots with a 1, then the 1 starts its flight from the cell (i,1i,1) and ends in some cell (i,ji,j);  if a cannon stands in the column jj, above the first row, and shoots with a 1, then the 1 starts its flight from the cell (1,j1,j) and ends in some cell (i,ji,j). For example, consider the following sequence of shots:   1. Shoot the cannon in the row 22. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 2. Shoot the cannon in the row 22. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 3. Shoot the cannon in column 33. You have a report from the military training on your desk. This report is a square matrix with side length nn consisting of 0 and 1. You wonder if the training actually happened. In other words, is there a sequence of shots such that, after the training, you get the given matrix?Each cannon can make an arbitrary number of shots. Before the training, each cell of the polygon contains 0.InputThe first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases. Then tt test cases follow.Each test case starts with a line containing an integer nn (1\u2264n\u2264501\u2264n\u226450)\u00a0\u2014 the size of the polygon.This is followed by nn lines of length nn, consisting of 0 and 1\u00a0\u2014 the polygon matrix after the training.The total area of the matrices in all test cases in one test does not exceed 105105.OutputFor each test case print:  YES if there is a sequence of shots leading to a given matrix;  NO if such a sequence does not exist. The letters in the words YES and NO can be printed in any case.ExampleInputCopy5\n4\n0010\n0011\n0000\n0000\n2\n10\n01\n2\n00\n00\n4\n0101\n1111\n0101\n0111\n4\n0100\n1110\n0101\n0111\nOutputCopyYES\nNO\nYES\nYES\nNO\nNoteThe first test case was explained in the statement.The answer to the second test case is NO, since a 1 in a cell (1,11,1) flying out of any cannon would continue its flight further."], "Little Girl and Game": ["https://codeforces.com/problemset/problem/276/B", "B. Little Girl and Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Little Girl loves problems on games very much. Here's one of them.Two players have got a string s, consisting of lowercase English letters. They play a game that is described by the following rules:  The players move in turns; In one move the player can remove an arbitrary letter from string s.  If the player before his turn can reorder the letters in string s so as to get a palindrome, this player wins. A palindrome is a string that reads the same both ways (from left to right, and vice versa). For example, string \"abba\" is a palindrome and string \"abc\" isn't. Determine which player will win, provided that both sides play optimally well \u2014 the one who moves first or the one who moves second.InputThe input contains a single line, containing string s (1\u2009\u2264\u2009|s|\u2009\u2009\u2264\u2009\u2009103). String s consists of lowercase English letters.OutputIn a single line print word \"First\" if the first player wins (provided that both players play optimally well). Otherwise, print word \"Second\". Print the words without the quotes.ExamplesInputCopyabaOutputCopyFirstInputCopyabcaOutputCopySecond"], "Jzzhu and Sequences": ["https://codeforces.com/problemset/problem/450/B", "B. Jzzhu and Sequencestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputJzzhu has invented a kind of sequences, they meet the following property:You are given x and y, please calculate fn modulo 1000000007 (109\u2009+\u20097).InputThe first line contains two integers x and y (|x|,\u2009|y|\u2009\u2264\u2009109). The second line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7109).OutputOutput a single integer representing fn modulo 1000000007 (109\u2009+\u20097).ExamplesInputCopy2 33OutputCopy1InputCopy0 -12OutputCopy1000000006NoteIn the first sample, f2\u2009=\u2009f1\u2009+\u2009f3, 3\u2009=\u20092\u2009+\u2009f3, f3\u2009=\u20091.In the second sample, f2\u2009=\u2009\u2009-\u20091; \u2009-\u20091 modulo (109\u2009+\u20097) equals (109\u2009+\u20096)."], "Social Distance": ["https://codeforces.com/problemset/problem/1367/C", "C. Social Distancetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp and his friends want to visit a new restaurant. The restaurant has nn tables arranged along a straight line. People are already sitting at some tables. The tables are numbered from 11 to nn in the order from left to right. The state of the restaurant is described by a string of length nn which contains characters \"1\" (the table is occupied) and \"0\" (the table is empty).Restaurant rules prohibit people to sit at a distance of kk or less from each other. That is, if a person sits at the table number ii, then all tables with numbers from i\u2212ki\u2212k to i+ki+k (except for the ii-th) should be free. In other words, the absolute difference of the numbers of any two occupied tables must be strictly greater than kk.For example, if n=8n=8 and k=2k=2, then:  strings \"10010001\", \"10000010\", \"00000000\", \"00100000\" satisfy the rules of the restaurant;  strings \"10100100\", \"10011001\", \"11111111\" do not satisfy to the rules of the restaurant, since each of them has a pair of \"1\" with a distance less than or equal to k=2k=2. In particular, if the state of the restaurant is described by a string without \"1\" or a string with one \"1\", then the requirement of the restaurant is satisfied.You are given a binary string ss that describes the current state of the restaurant. It is guaranteed that the rules of the restaurant are satisfied for the string ss.Find the maximum number of free tables that you can occupy so as not to violate the rules of the restaurant. Formally, what is the maximum number of \"0\" that can be replaced by \"1\" such that the requirement will still be satisfied?For example, if n=6n=6, k=1k=1, s=s=\u00a0\"100010\", then the answer to the problem will be 11, since only the table at position 33 can be occupied such that the rules are still satisfied.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases in the test. Then tt test cases follow.Each test case starts with a line containing two integers nn and kk (1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105)\u00a0\u2014 the number of tables in the restaurant and the minimum allowed distance between two people.The second line of each test case contains a binary string ss of length nn consisting of \"0\" and \"1\"\u00a0\u2014 a description of the free and occupied tables in the restaurant. The given string satisfy to the rules of the restaurant\u00a0\u2014 the difference between indices of any two \"1\" is more than kk.The sum of nn for all test cases in one test does not exceed 2\u22c51052\u22c5105.OutputFor each test case output one integer\u00a0\u2014 the number of tables that you can occupy so as not to violate the rules of the restaurant. If additional tables cannot be taken, then, obviously, you need to output 00.ExampleInputCopy6\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\nOutputCopy1\n2\n0\n1\n1\n1\nNoteThe first test case is explained in the statement.In the second test case, the answer is 22, since you can choose the first and the sixth table.In the third test case, you cannot take any free table without violating the rules of the restaurant."], "Alice, Bob and Candies": ["https://codeforces.com/problemset/problem/1352/D", "D. Alice, Bob and Candiestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn candies in a row, they are numbered from left to right from 11 to nn. The size of the ii-th candy is aiai.Alice and Bob play an interesting and tasty game: they eat candy. Alice will eat candy from left to right, and Bob \u2014 from right to left. The game ends if all the candies are eaten.The process consists of moves. During a move, the player eats one or more sweets from her/his side (Alice eats from the left, Bob \u2014 from the right).Alice makes the first move. During the first move, she will eat 11 candy (its size is a1a1). Then, each successive move the players alternate \u2014 that is, Bob makes the second move, then Alice, then again Bob and so on.On each move, a player counts the total size of candies eaten during the current move. Once this number becomes strictly greater than the total size of candies eaten by the other player on their previous move, the current player stops eating and the move ends. In other words, on a move, a player eats the smallest possible number of candies such that the sum of the sizes of candies eaten on this move is strictly greater than the sum of the sizes of candies that the other player ate on the previous move. If there are not enough candies to make a move this way, then the player eats up all the remaining candies and the game ends.For example, if n=11n=11 and a=[3,1,4,1,5,9,2,6,5,3,5]a=[3,1,4,1,5,9,2,6,5,3,5], then:  move 1: Alice eats one candy of size 33 and the sequence of candies becomes [1,4,1,5,9,2,6,5,3,5][1,4,1,5,9,2,6,5,3,5].  move 2: Alice ate 33 on the previous move, which means Bob must eat 44 or more. Bob eats one candy of size 55 and the sequence of candies becomes [1,4,1,5,9,2,6,5,3][1,4,1,5,9,2,6,5,3].  move 3: Bob ate 55 on the previous move, which means Alice must eat 66 or more. Alice eats three candies with the total size of 1+4+1=61+4+1=6 and the sequence of candies becomes [5,9,2,6,5,3][5,9,2,6,5,3].  move 4: Alice ate 66 on the previous move, which means Bob must eat 77 or more. Bob eats two candies with the total size of 3+5=83+5=8 and the sequence of candies becomes [5,9,2,6][5,9,2,6].  move 5: Bob ate 88 on the previous move, which means Alice must eat 99 or more. Alice eats two candies with the total size of 5+9=145+9=14 and the sequence of candies becomes [2,6][2,6].  move 6 (the last): Alice ate 1414 on the previous move, which means Bob must eat 1515 or more. It is impossible, so Bob eats the two remaining candies and the game ends. Print the number of moves in the game and two numbers:  aa \u2014 the total size of all sweets eaten by Alice during the game;  bb \u2014 the total size of all sweets eaten by Bob during the game. InputThe first line contains an integer tt (1\u2264t\u226450001\u2264t\u22645000) \u2014 the number of test cases in the input. The following are descriptions of the tt test cases.Each test case consists of two lines. The first line contains an integer nn (1\u2264n\u226410001\u2264n\u22641000) \u2014 the number of candies. The second line contains a sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u226410001\u2264ai\u22641000) \u2014 the sizes of candies in the order they are arranged from left to right.It is guaranteed that the sum of the values of nn for all sets of input data in a test does not exceed 2\u22c51052\u22c5105.OutputFor each set of input data print three integers \u2014 the number of moves in the game and the required values aa and bb.ExampleInputCopy7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1 1 1 1\n7\n1 1 1 1 1 1 1\nOutputCopy6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n"], "Number of Pairs": ["https://codeforces.com/problemset/problem/1538/C", "C. Number of Pairstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of nn integers. Find the number of pairs (i,j)(i,j) (1\u2264i<j\u2264n1\u2264i<j\u2264n) where the sum of ai+ajai+aj is greater than or equal to ll and less than or equal to rr (that is, l\u2264ai+aj\u2264rl\u2264ai+aj\u2264r).For example, if n=3n=3, a=[5,1,2]a=[5,1,2], l=4l=4 and r=7r=7, then two pairs are suitable:   i=1i=1 and j=2j=2 (4\u22645+1\u226474\u22645+1\u22647);  i=1i=1 and j=3j=3 (4\u22645+2\u226474\u22645+2\u22647). InputThe first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104). Then tt test cases follow.The first line of each test case contains three integers n,l,rn,l,r (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 1\u2264l\u2264r\u22641091\u2264l\u2264r\u2264109)\u00a0\u2014 the length of the array and the limits on the sum in the pair.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).It is guaranteed that the sum of nn overall test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output a single integer\u00a0\u2014 the number of index pairs (i,j)(i,j) (i<ji<j), such that l\u2264ai+aj\u2264rl\u2264ai+aj\u2264r.ExampleInputCopy4\n3 4 7\n5 1 2\n5 5 8\n5 1 2 4 3\n4 100 1000\n1 1 1 1\n5 9 13\n2 5 5 1 1\nOutputCopy2\n7\n0\n1\n"], "Mere Array": ["https://codeforces.com/problemset/problem/1401/C", "C. Mere Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output You are given an array a1,a2,\u2026,ana1,a2,\u2026,an where all aiai are integers and greater than 00. In one operation, you can choose two different indices ii and jj (1\u2264i,j\u2264n1\u2264i,j\u2264n). If gcd(ai,aj)gcd(ai,aj) is equal to the minimum element of the whole array aa, you can swap aiai and ajaj. gcd(x,y)gcd(x,y) denotes the greatest common divisor (GCD) of integers xx and yy. Now you'd like to make aa non-decreasing using the operation any number of times (possibly zero). Determine if you can do this. An array aa is non-decreasing if and only if a1\u2264a2\u2264\u2026\u2264ana1\u2264a2\u2264\u2026\u2264an.Input The first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. The first line of each test case contains one integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the length of array aa. The second line of each test case contains nn positive integers a1,a2,\u2026ana1,a2,\u2026an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the array itself. It is guaranteed that the sum of nn over all test cases doesn't exceed 105105.Output For each test case, output \"YES\" if it is possible to make the array aa non-decreasing using the described operation, or \"NO\" if it is impossible to do so.ExampleInputCopy4\n1\n8\n6\n4 3 6 6 2 9\n4\n4 5 6 7\n5\n7 5 2 2 4\nOutputCopyYES\nYES\nYES\nNO\nNote In the first and third sample, the array is already non-decreasing. In the second sample, we can swap a1a1 and a3a3 first, and swap a1a1 and a5a5 second to make the array non-decreasing. In the forth sample, we cannot the array non-decreasing using the operation."], "Queue": ["https://codeforces.com/problemset/problem/545/D", "D. Queuetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle girl Susie went shopping with her mom and she wondered how to improve service quality. There are n people in the queue. For each person we know time ti needed to serve him. A person will be disappointed if the time he waits is more than the time needed to serve him. The time a person waits is the total time when all the people who stand in the queue in front of him are served. Susie thought that if we swap some people in the queue, then we can decrease the number of people who are disappointed. Help Susie find out what is the maximum number of not disappointed people can be achieved by swapping people in the queue.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105).The next line contains n integers ti (1\u2009\u2264\u2009ti\u2009\u2264\u2009109), separated by spaces.OutputPrint a single number \u2014 the maximum number of not disappointed people in the queue.ExamplesInputCopy515 2 1 5 3OutputCopy4NoteValue 4 is achieved at such an arrangement, for example: 1,\u20092,\u20093,\u20095,\u200915. Thus, you can make everything feel not disappointed except for the person with time 5."], "Queries about less or equal elements": ["https://codeforces.com/problemset/problem/600/B", "B. Queries about less or equal elementstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays of integers a and b. For each element of the second array bj you should find the number of elements in array a that are less than or equal to the value bj.InputThe first line contains two integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20092\u00b7105) \u2014 the sizes of arrays a and b.The second line contains n integers \u2014 the elements of array a (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109).The third line contains m integers \u2014 the elements of array b (\u2009-\u2009109\u2009\u2264\u2009bj\u2009\u2264\u2009109).OutputPrint m integers, separated by spaces: the j-th of which is equal to the number of such elements in array a that are less than or equal to the value bj.ExamplesInputCopy5 41 3 5 7 96 4 2 8OutputCopy3 2 1 4InputCopy5 51 2 1 2 53 1 4 1 5OutputCopy4 2 4 2 5"], "Anton and currency you all know": ["https://codeforces.com/problemset/problem/508/B", "B. Anton and currency you all knowtime limit per test0.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBerland, 2016. The exchange rate of currency you all know against the burle has increased so much that to simplify the calculations, its fractional part was neglected and the exchange rate is now assumed to be an integer.Reliable sources have informed the financier Anton of some information about the exchange rate of currency you all know against the burle for tomorrow. Now Anton knows that tomorrow the exchange rate will be an even number, which can be obtained from the present rate by swapping exactly two distinct digits in it. Of all the possible values that meet these conditions, the exchange rate for tomorrow will be the maximum possible. It is guaranteed that today the exchange rate is an odd positive integer n. Help Anton to determine the exchange rate of currency you all know for tomorrow!InputThe first line contains an odd positive integer n\u00a0\u2014 the exchange rate of currency you all know for today. The length of number n's representation is within range from 2 to 105, inclusive. The representation of n doesn't contain any leading zeroes.OutputIf the information about tomorrow's exchange rate is inconsistent, that is, there is no integer that meets the condition, print \u2009-\u20091.Otherwise, print the exchange rate of currency you all know against the burle for tomorrow. This should be the maximum possible number of those that are even and that are obtained from today's exchange rate by swapping exactly two digits. Exchange rate representation should not contain leading zeroes.ExamplesInputCopy527OutputCopy572InputCopy4573OutputCopy3574InputCopy1357997531OutputCopy-1"], "A Cookie for You": ["https://codeforces.com/problemset/problem/1371/C", "C. A Cookie for Youtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnna is a girl so brave that she is loved by everyone in the city and citizens love her cookies. She is planning to hold a party with cookies. Now she has aa vanilla cookies and bb chocolate cookies for the party.She invited nn guests of the first type and mm guests of the second type to the party. They will come to the party in some order. After coming to the party, each guest will choose the type of cookie (vanilla or chocolate) to eat. There is a difference in the way how they choose that type:If there are vv vanilla cookies and cc chocolate cookies at the moment, when the guest comes, then  if the guest of the first type: if v>cv>c the guest selects a vanilla cookie. Otherwise, the guest selects a chocolate cookie.  if the guest of the second type: if v>cv>c the guest selects a chocolate cookie. Otherwise, the guest selects a vanilla cookie. After that:  If there is at least one cookie of the selected type, the guest eats one.  Otherwise (there are no cookies of the selected type), the guest gets angry and returns to home. Anna wants to know if there exists some order of guests, such that no one guest gets angry. Your task is to answer her question.InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases. Next tt lines contain descriptions of test cases.For each test case, the only line contains four integers aa, bb, nn, mm (0\u2264a,b,n,m\u22641018,n+m\u226000\u2264a,b,n,m\u22641018,n+m\u22600).OutputFor each test case, print the answer in one line. If there exists at least one valid order, print \"Yes\". Otherwise, print \"No\".You can print each letter in any case (upper or lower).ExampleInputCopy6\n2 2 1 2\n0 100 0 1\n12 13 25 1\n27 83 14 25\n0 0 1 0\n1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\nOutputCopyYes\nNo\nNo\nYes\nNo\nYes\nNoteIn the first test case, let's consider the order {1,2,2}{1,2,2} of types of guests. Then:  The first guest eats a chocolate cookie. After that, there are 22 vanilla cookies and 11 chocolate cookie.  The second guest eats a chocolate cookie. After that, there are 22 vanilla cookies and 00 chocolate cookies.  The last guest selects a chocolate cookie, but there are no chocolate cookies. So, the guest gets angry. So, this order can't be chosen by Anna.Let's consider the order {2,2,1}{2,2,1} of types of guests. Then:  The first guest eats a vanilla cookie. After that, there is 11 vanilla cookie and 22 chocolate cookies.  The second guest eats a vanilla cookie. After that, there are 00 vanilla cookies and 22 chocolate cookies.  The last guest eats a chocolate cookie. After that, there are 00 vanilla cookies and 11 chocolate cookie. So, the answer to this test case is \"Yes\".In the fifth test case, it is illustrated, that the number of cookies (a+ba+b) can be equal to zero, but the number of guests (n+mn+m) can't be equal to zero.In the sixth test case, be careful about the overflow of 3232-bit integer type."], "Prefix Flip (Easy Version)": ["https://codeforces.com/problemset/problem/1381/A1", "A1. Prefix Flip (Easy Version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The difference between the versions is the constraint on nn and the required number of operations. You can make hacks only if all versions of the problem are solved.There are two binary strings aa and bb of length nn (a binary string is a string consisting of symbols 00 and 11). In an operation, you select a prefix of aa, and simultaneously invert the bits in the prefix (00 changes to 11 and 11 changes to 00) and reverse the order of the bits in the prefix.For example, if a=001011a=001011 and you select the prefix of length 33, it becomes 011011011011. Then if you select the entire string, it becomes 001001001001.Your task is to transform the string aa into bb in at most 3n3n operations. It can be proved that it is always possible.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000) \u00a0\u2014 the number of test cases. Next 3t3t lines contain descriptions of test cases.The first line of each test case contains a single integer nn (1\u2264n\u226410001\u2264n\u22641000) \u00a0\u2014 the length of the binary strings.The next two lines contain two binary strings aa and bb of length nn.It is guaranteed that the sum of nn across all test cases does not exceed 10001000.OutputFor each test case, output an integer kk (0\u2264k\u22643n0\u2264k\u22643n), followed by kk integers p1,\u2026,pkp1,\u2026,pk (1\u2264pi\u2264n1\u2264pi\u2264n). Here kk is the number of operations you use and pipi is the length of the prefix you flip in the ii-th operation.ExampleInputCopy5\n2\n01\n10\n5\n01011\n11100\n2\n01\n01\n10\n0110011011\n1000110100\n1\n0\n1\nOutputCopy3 1 2 1\n6 5 2 5 3 1 2\n0\n9 4 1 2 10 4 1 2 1 5\n1 1\nNoteIn the first test case, we have 01\u219211\u219200\u21921001\u219211\u219200\u219210.In the second test case, we have 01011\u219200101\u219211101\u219201000\u219210100\u219200100\u21921110001011\u219200101\u219211101\u219201000\u219210100\u219200100\u219211100.In the third test case, the strings are already the same. Another solution is to flip the prefix of length 22, which will leave aa unchanged."], "Nastya and Door": ["https://codeforces.com/problemset/problem/1341/B", "B. Nastya and Doortime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOn February 14 Denis decided to give Valentine to Nastya and did not come up with anything better than to draw a huge red heart on the door of the length kk (k\u22653k\u22653). Nastya was very confused by this present, so she decided to break the door, throwing it on the mountains.Mountains are described by a sequence of heights a1,a2,\u2026,ana1,a2,\u2026,an in order from left to right (k\u2264nk\u2264n). It is guaranteed that neighboring heights are not equal to each other (that is, ai\u2260ai+1ai\u2260ai+1 for all ii from 11 to n\u22121n\u22121).Peaks of mountains on the segment [l,r][l,r] (from ll to rr) are called indexes ii such that l<i<rl<i<r, ai\u22121<aiai\u22121<ai and ai>ai+1ai>ai+1. It is worth noting that the boundary indexes ll and rr for the segment are not peaks. For example, if n=8n=8 and a=[3,1,4,1,5,9,2,6]a=[3,1,4,1,5,9,2,6], then the segment [1,8][1,8] has only two peaks (with indexes 33 and 66), and there are no peaks on the segment [3,6][3,6].To break the door, Nastya throws it to a segment [l,l+k\u22121][l,l+k\u22121] of consecutive mountains of length kk (1\u2264l\u2264n\u2212k+11\u2264l\u2264n\u2212k+1). When the door touches the peaks of the mountains, it breaks into two parts, after that these parts will continue to fall in different halves and also break into pieces when touching the peaks of the mountains, and so on. Formally, the number of parts that the door will break into will be equal to p+1p+1, where pp is the number of peaks on the segment [l,l+k\u22121][l,l+k\u22121].Nastya wants to break it into as many pieces as possible. Help her choose such a segment of mountains [l,l+k\u22121][l,l+k\u22121] that the number of peaks on it is maximum. If there are several optimal segments, Nastya wants to find one for which the value ll is minimal.Formally, you need to choose a segment of mountains [l,l+k\u22121][l,l+k\u22121] that has the maximum number of peaks. Among all such segments, you need to find the segment that has the minimum possible value ll.InputThe first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104) \u00a0\u2014 the number of test cases. Then the descriptions of the test cases follow.The first line of each test case contains two integers nn and kk (3\u2264k\u2264n\u22642\u22c51053\u2264k\u2264n\u22642\u22c5105) \u00a0\u2014 the number of mountains and the length of the door.The second line of the input data set contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109, ai\u2260ai+1ai\u2260ai+1) \u00a0\u2014 the heights of mountains.It is guaranteed that the sum of nn over all the test cases will not exceed 2\u22c51052\u22c5105.OutputFor each test case, output two integers tt and ll \u00a0\u2014 the maximum number of parts that the door can split into, and the left border of the segment of length kk that the door should be reset to.ExampleInputCopy5\n8 6\n1 2 4 1 2 4 1 2\n5 3\n3 2 3 2 1\n10 4\n4 3 4 3 2 3 2 1 0 1\n15 7\n3 7 4 8 2 3 4 5 21 2 3 4 2 1 3\n7 5\n1 2 3 4 5 6 1\nOutputCopy3 2\n2 2\n2 1\n3 1\n2 3\nNoteIn the first example, you need to select a segment of mountains from 22 to 77. In this segment, the indexes 33 and 66 are peaks, so the answer is 33 (only 22 peaks, so the door will break into 33 parts). It is not difficult to notice that the mountain segments [1,6][1,6] and [3,8][3,8] are not suitable since they only have a 11 peak (for the first segment, the 66 index is not a peak, and for the second segment, the 33 index is not a peak).In the second example, you need to select a segment of mountains from 22 to 44. In this segment, the index 33 is a peak, so the answer is 22 (only 11 peak, so the door will break into 22 parts).In the third example, you need to select a segment of mountains from 11 to 44. In this segment, the index 33 is a peak, so the answer is 22 (only 11 peak, so the door will break into 22 parts). You can see that on the segments [2,5][2,5], [4,7][4,7] and [5,8][5,8] the number of peaks is also 11, but these segments have a left border greater than the segment [1,4][1,4], so they are not the correct answer."], "Strange Birthday Party": ["https://codeforces.com/problemset/problem/1470/A", "A. Strange Birthday Partytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya organized a strange birthday party. He invited nn friends and assigned an integer kiki to the ii-th of them. Now Petya would like to give a present to each of them. In the nearby shop there are mm unique presents available, the jj-th present costs cjcj dollars (1\u2264c1\u2264c2\u2264\u2026\u2264cm1\u2264c1\u2264c2\u2264\u2026\u2264cm). It's not allowed to buy a single present more than once.For the ii-th friend Petya can either buy them a present j\u2264kij\u2264ki, which costs cjcj dollars, or just give them ckicki dollars directly.Help Petya determine the minimum total cost of hosting his party.InputThe first input line contains a single integer tt (1\u2264t\u22641031\u2264t\u2264103)\u00a0\u2014 the number of test cases.The first line of each test case contains two integers nn and mm (1\u2264n,m\u22643\u22c51051\u2264n,m\u22643\u22c5105)\u00a0\u2014 the number of friends, and the number of unique presents available.The following line contains nn integers k1,k2,\u2026,knk1,k2,\u2026,kn (1\u2264ki\u2264m1\u2264ki\u2264m), assigned by Petya to his friends. The next line contains mm integers c1,c2,\u2026,cmc1,c2,\u2026,cm (1\u2264c1\u2264c2\u2264\u2026\u2264cm\u22641091\u2264c1\u2264c2\u2264\u2026\u2264cm\u2264109)\u00a0\u2014 the prices of the presents.It is guaranteed that sum of values nn over all test cases does not exceed 3\u22c51053\u22c5105, and the sum of values mm over all test cases does not exceed 3\u22c51053\u22c5105.OutputFor each test case output a single integer\u00a0\u2014 the minimum cost of the party.ExamplesInputCopy2\n5 4\n2 3 4 3 2\n3 5 12 20\n5 5\n5 4 3 2 1\n10 40 90 160 250\nOutputCopy30\n190\nInputCopy1\n1 1\n1\n1\nOutputCopy1\nNoteIn the first example, there are two test cases. In the first one, Petya has 55 friends and 44 available presents. Petya can spend only 3030 dollars if he gives  55 dollars to the first friend.  A present that costs 1212 dollars to the second friend.  A present that costs 55 dollars to the third friend.  A present that costs 33 dollars to the fourth friend.  55 dollars to the fifth friend. In the second one, Petya has 55 and 55 available presents. Petya can spend only 190190 dollars if he gives  A present that costs 1010 dollars to the first friend.  A present that costs 4040 dollars to the second friend.  9090 dollars to the third friend.  4040 dollars to the fourth friend.  1010 dollars to the fifth friend. "], "A and B and Team Training": ["https://codeforces.com/problemset/problem/519/C", "C. A and B and Team Trainingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA and B are preparing themselves for programming contests.An important part of preparing for a competition is sharing programming knowledge from the experienced members to those who are just beginning to deal with the contests. Therefore, during the next team training A decided to make teams so that newbies are solving problems together with experienced participants.A believes that the optimal team of three people should consist of one experienced participant and two newbies. Thus, each experienced participant can share the experience with a large number of people.However, B believes that the optimal team should have two experienced members plus one newbie. Thus, each newbie can gain more knowledge and experience.As a result, A and B have decided that all the teams during the training session should belong to one of the two types described above. Furthermore, they agree that the total number of teams should be as much as possible.There are n experienced members and m newbies on the training session. Can you calculate what maximum number of teams can be formed?InputThe first line contains two integers n and m (0\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20095\u00b7105) \u2014 the number of experienced participants and newbies that are present at the training session. OutputPrint the maximum number of teams that can be formed.ExamplesInputCopy2 6OutputCopy2InputCopy4 5OutputCopy3NoteLet's represent the experienced players as XP and newbies as NB.In the first test the teams look as follows: (XP, NB, NB), (XP, NB, NB).In the second test sample the teams look as follows: (XP, NB, NB), (XP, NB, NB), (XP, XP, NB)."], "Shuffle": ["https://codeforces.com/problemset/problem/1366/B", "B. Shuffletime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array consisting of nn integers a1a1, a2a2, ..., anan. Initially ax=1ax=1, all other elements are equal to 00.You have to perform mm operations. During the ii-th operation, you choose two indices cc and dd such that li\u2264c,d\u2264rili\u2264c,d\u2264ri, and swap acac and adad.Calculate the number of indices kk such that it is possible to choose the operations so that ak=1ak=1 in the end.InputThe first line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of test cases. Then the description of tt testcases follow.The first line of each test case contains three integers nn, xx and mm (1\u2264n\u22641091\u2264n\u2264109; 1\u2264m\u22641001\u2264m\u2264100; 1\u2264x\u2264n1\u2264x\u2264n).Each of next mm lines contains the descriptions of the operations; the ii-th line contains two integers lili and riri (1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n).OutputFor each test case print one integer \u2014 the number of indices kk such that it is possible to choose the operations so that ak=1ak=1 in the end.ExampleInputCopy3\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\nOutputCopy6\n2\n3\nNoteIn the first test case, it is possible to achieve ak=1ak=1 for every kk. To do so, you may use the following operations:  swap akak and a4a4;  swap a2a2 and a2a2;  swap a5a5 and a5a5. In the second test case, only k=1k=1 and k=2k=2 are possible answers. To achieve a1=1a1=1, you have to swap a1a1 and a1a1 during the second operation. To achieve a2=1a2=1, you have to swap a1a1 and a2a2 during the second operation."], "Just Eat It!": ["https://codeforces.com/problemset/problem/1285/B", "B. Just Eat It!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputToday, Yasser and Adel are at the shop buying cupcakes. There are nn cupcake types, arranged from 11 to nn on the shelf, and there are infinitely many of each type. The tastiness of a cupcake of type ii is an integer aiai. There are both tasty and nasty cupcakes, so the tastiness can be positive, zero or negative.Yasser, of course, wants to try them all, so he will buy exactly one cupcake of each type.On the other hand, Adel will choose some segment [l,r][l,r] (1\u2264l\u2264r\u2264n)(1\u2264l\u2264r\u2264n) that does not include all of cupcakes (he can't choose [l,r]=[1,n][l,r]=[1,n]) and buy exactly one cupcake of each of types l,l+1,\u2026,rl,l+1,\u2026,r.After that they will compare the total tastiness of the cupcakes each of them have bought. Yasser will be happy if the total tastiness of cupcakes he buys is strictly greater than the total tastiness of cupcakes Adel buys regardless of Adel's choice.For example, let the tastinesses of the cupcakes be [7,4,\u22121][7,4,\u22121]. Yasser will buy all of them, the total tastiness will be 7+4\u22121=107+4\u22121=10. Adel can choose segments [7],[4],[\u22121],[7,4][7],[4],[\u22121],[7,4] or [4,\u22121][4,\u22121], their total tastinesses are 7,4,\u22121,117,4,\u22121,11 and 33, respectively. Adel can choose segment with tastiness 1111, and as 1010 is not strictly greater than 1111, Yasser won't be happy :(Find out if Yasser will be happy after visiting the shop.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104). The description of the test cases follows.The first line of each test case contains nn (2\u2264n\u22641052\u2264n\u2264105).The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109), where aiai represents the tastiness of the ii-th type of cupcake.It is guaranteed that the sum of nn over all test cases doesn't exceed 105105.OutputFor each test case, print \"YES\", if the total tastiness of cupcakes Yasser buys will always be strictly greater than the total tastiness of cupcakes Adel buys regardless of Adel's choice. Otherwise, print \"NO\".ExampleInputCopy3\n4\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\nOutputCopyYES\nNO\nNO\nNoteIn the first example, the total tastiness of any segment Adel can choose is less than the total tastiness of all cupcakes.In the second example, Adel will choose the segment [1,2][1,2] with total tastiness 1111, which is not less than the total tastiness of all cupcakes, which is 1010.In the third example, Adel can choose the segment [3,3][3,3] with total tastiness of 55. Note that Yasser's cupcakes' total tastiness is also 55, so in that case, the total tastiness of Yasser's cupcakes isn't strictly greater than the total tastiness of Adel's cupcakes."], "Nastia and a Good Array": ["https://codeforces.com/problemset/problem/1521/B", "B. Nastia and a Good Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputNastia has received an array of nn positive integers as a gift.She calls such an array aa good that for all ii (2\u2264i\u2264n2\u2264i\u2264n) takes place gcd(ai\u22121,ai)=1gcd(ai\u22121,ai)=1, where gcd(u,v)gcd(u,v) denotes the greatest common divisor (GCD) of integers uu and vv.You can perform the operation: select two different indices i,ji,j (1\u2264i,j\u2264n1\u2264i,j\u2264n, i\u2260ji\u2260j) and two integers x,yx,y (1\u2264x,y\u22642\u22c51091\u2264x,y\u22642\u22c5109) so that min(ai,aj)=min(x,y)min(ai,aj)=min(x,y). Then change aiai to xx and ajaj to yy.The girl asks you to make the array good using at most nn operations.It can be proven that this is always possible.InputThe first line contains a single integer tt (1\u2264t\u2264100001\u2264t\u226410000)\u00a0\u2014 the number of test cases.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the length of the array.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the array which Nastia has received as a gift.It's guaranteed that the sum of nn in one test doesn't exceed 2\u22c51052\u22c5105.OutputFor each of tt test cases print a single integer kk (0\u2264k\u2264n0\u2264k\u2264n)\u00a0\u2014 the number of operations. You don't need to minimize this number.In each of the next kk lines print 44 integers ii, jj, xx, yy (1\u2264i\u2260j\u2264n1\u2264i\u2260j\u2264n, 1\u2264x,y\u22642\u22c51091\u2264x,y\u22642\u22c5109) so that min(ai,aj)=min(x,y)min(ai,aj)=min(x,y)\u00a0\u2014 in this manner you replace aiai with xx and ajaj with yy.If there are multiple answers, print any.ExampleInputCopy2\n5\n9 6 3 11 15\n3\n7 5 13\nOutputCopy2\n1 5 11 9\n2 5 7 6\n0NoteConsider the first test case.Initially a=[9,6,3,11,15]a=[9,6,3,11,15].In the first operation replace a1a1 with 1111 and a5a5 with 99. It's valid, because min(a1,a5)=min(11,9)=9min(a1,a5)=min(11,9)=9.After this a=[11,6,3,11,9]a=[11,6,3,11,9].In the second operation replace a2a2 with 77 and a5a5 with 66. It's valid, because min(a2,a5)=min(7,6)=6min(a2,a5)=min(7,6)=6.After this a=[11,7,3,11,6]a=[11,7,3,11,6]\u00a0\u2014 a good array.In the second test case, the initial array is already good."], "Most socially-distanced subsequence": ["https://codeforces.com/problemset/problem/1364/B", "B. Most socially-distanced subsequencetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiven a permutation pp of length nn, find its subsequence s1s1, s2s2, \u2026\u2026, sksk of length at least 22 such that:  |s1\u2212s2|+|s2\u2212s3|+\u2026+|sk\u22121\u2212sk||s1\u2212s2|+|s2\u2212s3|+\u2026+|sk\u22121\u2212sk| is as big as possible over all subsequences of pp with length at least 22.  Among all such subsequences, choose the one whose length, kk, is as small as possible. If multiple subsequences satisfy these conditions, you are allowed to find any of them.A sequence aa is a subsequence of an array bb if aa can be obtained from bb by deleting some (possibly, zero or all) elements.A permutation of length nn is an array of length nn in which every element from 11 to nn occurs exactly once.InputThe first line contains an integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104)\u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains an integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the length of the permutation pp.The second line of each test case contains nn integers p1p1, p2p2, \u2026\u2026, pnpn (1\u2264pi\u2264n1\u2264pi\u2264n, pipi are distinct)\u00a0\u2014 the elements of the permutation pp.The sum of nn across the test cases doesn't exceed 105105.OutputFor each test case, the first line should contain the length of the found subsequence, kk. The second line should contain s1s1, s2s2, \u2026\u2026, sksk\u00a0\u2014 its elements.If multiple subsequences satisfy these conditions, you are allowed to find any of them.ExampleInputCopy2\n3\n3 2 1\n4\n1 3 4 2\nOutputCopy2\n3 1 \n3\n1 4 2 \nNoteIn the first test case, there are 44 subsequences of length at least 22:  [3,2][3,2] which gives us |3\u22122|=1|3\u22122|=1.  [3,1][3,1] which gives us |3\u22121|=2|3\u22121|=2.  [2,1][2,1] which gives us |2\u22121|=1|2\u22121|=1.  [3,2,1][3,2,1] which gives us |3\u22122|+|2\u22121|=2|3\u22122|+|2\u22121|=2. So the answer is either [3,1][3,1] or [3,2,1][3,2,1]. Since we want the subsequence to be as short as possible, the answer is [3,1][3,1]."], "Pluses and Minuses": ["https://codeforces.com/problemset/problem/1373/C", "C. Pluses and Minusestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string ss consisting only of characters + and -. You perform some process with this string. This process can be described by the following pseudocode: res = 0for init = 0 to inf    cur = init    ok = true    for i = 1 to |s|        res = res + 1        if s[i] == '+'            cur = cur + 1        else            cur = cur - 1        if cur < 0            ok = false            break    if ok        breakNote that the infinf denotes infinity, and the characters of the string are numbered from 11 to |s||s|.You have to calculate the value of the resres after the process ends.InputThe first line contains one integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases.The only lines of each test case contains string ss (1\u2264|s|\u22641061\u2264|s|\u2264106) consisting only of characters + and -.It's guaranteed that sum of |s||s| over all test cases doesn't exceed 106106.OutputFor each test case print one integer \u2014 the value of the resres after the process ends.ExampleInputCopy3\n--+-\n---\n++--+-\nOutputCopy7\n9\n6\n"], "Inflation": ["https://codeforces.com/problemset/problem/1476/B", "B. Inflationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a statistic of price changes for one product represented as an array of nn positive integers p0,p1,\u2026,pn\u22121p0,p1,\u2026,pn\u22121, where p0p0 is the initial price of the product and pipi is how the price was increased during the ii-th month.Using these price changes you are asked to calculate the inflation coefficients for each month as the ratio of current price increase pipi to the price at the start of this month (p0+p1+\u22ef+pi\u22121)(p0+p1+\u22ef+pi\u22121).Your boss said you clearly that the inflation coefficients must not exceed kk %, so you decided to increase some values pipi in such a way, that all pipi remain integers and the inflation coefficients for each month don't exceed kk %.You know, that the bigger changes\u00a0\u2014 the more obvious cheating. That's why you need to minimize the total sum of changes.What's the minimum total sum of changes you need to make all inflation coefficients not more than kk %?InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains two integers nn and kk (2\u2264n\u22641002\u2264n\u2264100; 1\u2264k\u22641001\u2264k\u2264100)\u00a0\u2014 the length of array pp and coefficient kk.The second line of each test case contains nn integers p0,p1,\u2026,pn\u22121p0,p1,\u2026,pn\u22121 (1\u2264pi\u22641091\u2264pi\u2264109)\u00a0\u2014 the array pp.OutputFor each test case, print the minimum total sum of changes you need to make all inflation coefficients not more than kk %.ExampleInputCopy2\n4 1\n20100 1 202 202\n3 100\n1 1 1\nOutputCopy99\n0\nNoteIn the first test case, you can, for example, increase p0p0 by 5050 and p1p1 by 4949 and get array [20150,50,202,202][20150,50,202,202]. Then you get the next inflation coefficients:   5020150\u226411005020150\u22641100;  20220150+50\u2264110020220150+50\u22641100;  20220200+202\u2264110020220200+202\u22641100; In the second test case, you don't need to modify array pp, since the inflation coefficients are already good:   11\u226410010011\u2264100100;  11+1\u226410010011+1\u2264100100; "], "Number into Sequence": ["https://codeforces.com/problemset/problem/1454/D", "D. Number into Sequencetime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an integer nn (n>1n>1).Your task is to find a sequence of integers a1,a2,\u2026,aka1,a2,\u2026,ak such that:  each aiai is strictly greater than 11;  a1\u22c5a2\u22c5\u2026\u22c5ak=na1\u22c5a2\u22c5\u2026\u22c5ak=n (i.\u00a0e. the product of this sequence is nn);  ai+1ai+1 is divisible by aiai for each ii from 11 to k\u22121k\u22121;  kk is the maximum possible (i.\u00a0e. the length of this sequence is the maximum possible). If there are several such sequences, any of them is acceptable. It can be proven that at least one valid sequence always exists for any integer n>1n>1.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u226450001\u2264t\u22645000) \u2014 the number of test cases. Then tt test cases follow.The only line of the test case contains one integer nn (2\u2264n\u226410102\u2264n\u22641010).It is guaranteed that the sum of nn does not exceed 10101010 (\u2211n\u22641010\u2211n\u22641010).OutputFor each test case, print the answer: in the first line, print one positive integer kk \u2014 the maximum possible length of aa. In the second line, print kk integers a1,a2,\u2026,aka1,a2,\u2026,ak \u2014 the sequence of length kk satisfying the conditions from the problem statement.If there are several answers, you can print any. It can be proven that at least one valid sequence always exists for any integer n>1n>1.ExampleInputCopy4\n2\n360\n4999999937\n4998207083\nOutputCopy1\n2 \n3\n2 2 90 \n1\n4999999937 \n1\n4998207083 \n"], "Coin Rows": ["https://codeforces.com/problemset/problem/1555/C", "C. Coin Rowstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice and Bob are playing a game on a matrix, consisting of 22 rows and mm columns. The cell in the ii-th row in the jj-th column contains ai,jai,j coins in it.Initially, both Alice and Bob are standing in a cell (1,1)(1,1). They are going to perform a sequence of moves to reach a cell (2,m)(2,m).The possible moves are:   Move right\u00a0\u2014 from some cell (x,y)(x,y) to (x,y+1)(x,y+1);  Move down\u00a0\u2014 from some cell (x,y)(x,y) to (x+1,y)(x+1,y). First, Alice makes all her moves until she reaches (2,m)(2,m). She collects the coins in all cells she visit (including the starting cell).When Alice finishes, Bob starts his journey. He also performs the moves to reach (2,m)(2,m) and collects the coins in all cells that he visited, but Alice didn't.The score of the game is the total number of coins Bob collects.Alice wants to minimize the score. Bob wants to maximize the score. What will the score of the game be if both players play optimally?InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of testcases.Then the descriptions of tt testcases follow.The first line of the testcase contains a single integer mm (1\u2264m\u22641051\u2264m\u2264105)\u00a0\u2014 the number of columns of the matrix.The ii-th of the next 22 lines contain mm integers ai,1,ai,2,\u2026,ai,mai,1,ai,2,\u2026,ai,m (1\u2264ai,j\u22641041\u2264ai,j\u2264104)\u00a0\u2014 the number of coins in the cell in the ii-th row in the jj-th column of the matrix.The sum of mm over all testcases doesn't exceed 105105.OutputFor each testcase print a single integer\u00a0\u2014 the score of the game if both players play optimally.ExampleInputCopy3\n3\n1 3 7\n3 5 1\n3\n1 3 9\n3 5 1\n1\n4\n7\nOutputCopy7\n8\n0\nNoteThe paths for the testcases are shown on the following pictures. Alice's path is depicted in red and Bob's path is depicted in blue.  "], "Equalize": ["https://codeforces.com/problemset/problem/1037/C", "C. Equalizetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two binary strings aa and bb of the same length. You can perform the following two operations on the string aa:  Swap any two bits at indices ii and jj respectively (1\u2264i,j\u2264n1\u2264i,j\u2264n), the cost of this operation is |i\u2212j||i\u2212j|, that is, the absolute difference between ii and jj.  Select any arbitrary index ii (1\u2264i\u2264n1\u2264i\u2264n) and flip (change 00 to 11 or 11 to 00) the bit at this index. The cost of this operation is 11. Find the minimum cost to make the string aa equal to bb. It is not allowed to modify string bb.InputThe first line contains a single integer nn (1\u2264n\u22641061\u2264n\u2264106)\u00a0\u2014 the length of the strings aa and bb.The second and third lines contain strings aa and bb respectively.Both strings aa and bb have length nn and contain only '0' and '1'.OutputOutput the minimum cost to make the string aa equal to bb.ExamplesInputCopy3100001OutputCopy2InputCopy401010011OutputCopy1NoteIn the first example, one of the optimal solutions is to flip index 11 and index 33, the string aa changes in the following way: \"100\" \u2192\u2192 \"000\" \u2192\u2192 \"001\". The cost is 1+1=21+1=2.The other optimal solution is to swap bits and indices 11 and 33, the string aa changes then \"100\" \u2192\u2192 \"001\", the cost is also |1\u22123|=2|1\u22123|=2.In the second example, the optimal solution is to swap bits at indices 22 and 33, the string aa changes as \"0101\" \u2192\u2192 \"0011\". The cost is |2\u22123|=1|2\u22123|=1."], "Two Round Dances": ["https://codeforces.com/problemset/problem/1433/E", "E. Two Round Dancestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day, nn people (nn is an even number) met on a plaza and made two round dances, each round dance consists of exactly n2n2 people. Your task is to find the number of ways nn people can make two round dances if each round dance consists of exactly n2n2 people. Each person should belong to exactly one of these two round dances.Round dance is a dance circle consisting of 11 or more people. Two round dances are indistinguishable (equal) if one can be transformed to another by choosing the first participant. For example, round dances [1,3,4,2][1,3,4,2], [4,2,1,3][4,2,1,3] and [2,1,3,4][2,1,3,4] are indistinguishable.For example, if n=2n=2 then the number of ways is 11: one round dance consists of the first person and the second one of the second person.For example, if n=4n=4 then the number of ways is 33. Possible options:  one round dance \u2014 [1,2][1,2], another \u2014 [3,4][3,4];  one round dance \u2014 [2,4][2,4], another \u2014 [3,1][3,1];  one round dance \u2014 [4,1][4,1], another \u2014 [3,2][3,2]. Your task is to find the number of ways nn people can make two round dances if each round dance consists of exactly n2n2 people.InputThe input contains one integer nn (2\u2264n\u2264202\u2264n\u226420), nn is an even number.OutputPrint one integer \u2014 the number of ways to make two round dances. It is guaranteed that the answer fits in the 6464-bit integer data type.ExamplesInputCopy2OutputCopy1InputCopy4OutputCopy3InputCopy8OutputCopy1260InputCopy20OutputCopy12164510040883200"], "Rumor": ["https://codeforces.com/problemset/problem/893/C", "C. Rumortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVova promised himself that he would never play computer games... But recently Firestorm \u2014 a well-known game developing company \u2014 published their newest game, World of Farcraft, and it became really popular. Of course, Vova started playing it.Now he tries to solve a quest. The task is to come to a settlement named Overcity and spread a rumor in it.Vova knows that there are n characters in Overcity. Some characters are friends to each other, and they share information they got. Also Vova knows that he can bribe each character so he or she starts spreading the rumor; i-th character wants ci gold in exchange for spreading the rumor. When a character hears the rumor, he tells it to all his friends, and they start spreading the rumor to their friends (for free), and so on.The quest is finished when all n characters know the rumor. What is the minimum amount of gold Vova needs to spend in order to finish the quest?Take a look at the notes if you think you haven't understood the problem completely.InputThe first line contains two integer numbers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009m\u2009\u2264\u2009105) \u2014 the number of characters in Overcity and the number of pairs of friends.The second line contains n integer numbers ci (0\u2009\u2264\u2009ci\u2009\u2264\u2009109) \u2014 the amount of gold i-th character asks to start spreading the rumor.Then m lines follow, each containing a pair of numbers (xi,\u2009yi) which represent that characters xi and yi are friends (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n, xi\u2009\u2260\u2009yi). It is guaranteed that each pair is listed at most once.OutputPrint one number \u2014 the minimum amount of gold Vova has to spend in order to finish the quest.ExamplesInputCopy5 22 5 3 4 81 44 5OutputCopy10InputCopy10 01 2 3 4 5 6 7 8 9 10OutputCopy55InputCopy10 51 6 2 7 3 8 4 9 5 101 23 45 67 89 10OutputCopy15NoteIn the first example the best decision is to bribe the first character (he will spread the rumor to fourth character, and the fourth one will spread it to fifth). Also Vova has to bribe the second and the third characters, so they know the rumor.In the second example Vova has to bribe everyone.In the third example the optimal decision is to bribe the first, the third, the fifth, the seventh and the ninth characters."], "Canine poetry": ["https://codeforces.com/problemset/problem/1466/C", "C. Canine poetrytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter his wife's tragic death, Eurydice, Orpheus descended to the realm of death to see her. Reaching its gates was uneasy, but passing through them proved to be even more challenging. Mostly because of Cerberus, the three-headed hound of Hades. Orpheus, a famous poet, and musician plans to calm Cerberus with his poetry and safely walk past him. He created a very peculiar poem for Cerberus. It consists only of lowercase English letters. We call a poem's substring a palindrome if and only if it reads the same backwards and forwards. A string aa is a substring of a string bb if aa can be obtained from bb by deleting several (possibly zero or all) characters from the beginning and several (possibly zero or all) characters from the end.Unfortunately, Cerberus dislikes palindromes of length greater than 11. For example in the poem abaa the hound of Hades wouldn't like substrings aba and aa.Orpheus can only calm Cerberus if the hound likes his poetry. That's why he wants to change his poem so that it does not contain any palindrome substrings of length greater than 11.Orpheus can modify the poem by replacing a letter at any position with any lowercase English letter. He can use this operation arbitrarily many times (possibly zero). Since there can be many palindromes in his poem, he may have to make some corrections. But how many, exactly? Given the poem, determine the minimal number of letters that have to be changed so that the poem does not contain any palindromes of length greater than 11.InputThe first line of the input contains a single integer tt (1\u2264t\u22641051\u2264t\u2264105) denoting the number of test cases, then tt test cases follow.The first and only line of each test case contains a non-empty string of lowercase English letters, Orpheus' poem.The sum of the length of Orpheus' poems in all test cases will not exceed 105105.OutputYou should output tt lines, ii-th line should contain a single integer, answer to the ii-th test case.ExampleInputCopy7\nbabba\nabaac\ncodeforces\nzeroorez\nabcdcba\nbbbbbbb\na\nOutputCopy1\n1\n0\n1\n1\n4\n0\nNoteIn the first test case, we can replace the third character with c and obtain a palindrome-less poem bacba.In the second test case, we can replace the third character with d and obtain a palindrome-less poem abdac.In the third test case, the initial poem already doesn't contain any palindromes, so Orpheus doesn't need to change anything there."], "Big Vova": ["https://codeforces.com/problemset/problem/1407/B", "B. Big Vovatime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlexander is a well-known programmer. Today he decided to finally go out and play football, but with the first hit he left a dent on the new Rolls-Royce of the wealthy businessman Big Vova. Vladimir has recently opened a store on the popular online marketplace \"Zmey-Gorynych\", and offers Alex a job: if he shows his programming skills by solving a task, he'll work as a cybersecurity specialist. Otherwise, he'll be delivering some doubtful products for the next two years.You're given nn positive integers a1,a2,\u2026,ana1,a2,\u2026,an. Using each of them exactly at once, you're to make such sequence b1,b2,\u2026,bnb1,b2,\u2026,bn that sequence c1,c2,\u2026,cnc1,c2,\u2026,cn is lexicographically maximal, where ci=GCD(b1,\u2026,bi)ci=GCD(b1,\u2026,bi) - the greatest common divisor of the first ii elements of bb. Alexander is really afraid of the conditions of this simple task, so he asks you to solve it.A sequence aa is lexicographically smaller than a sequence bb if and only if one of the following holds: aa is a prefix of bb, but a\u2260ba\u2260b; in the first position where aa and bb differ, the sequence aa has a smaller element than the corresponding element in bb.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641031\u2264t\u2264103). Description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22641031\u2264n\u2264103) \u00a0\u2014 the length of the sequence aa.The second line of each test case contains nn integers a1,\u2026,ana1,\u2026,an (1\u2264ai\u22641031\u2264ai\u2264103) \u00a0\u2014 the sequence aa.It is guaranteed that the sum of nn over all test cases does not exceed 103103.OutputFor each test case output the answer in a single line \u00a0\u2014 the desired sequence bb. If there are multiple answers, print any.ExampleInputCopy7\n2\n2 5\n4\n1 8 2 3\n3\n3 8 9\n5\n64 25 75 100 50\n1\n42\n6\n96 128 88 80 52 7\n5\n2 4 8 16 17\nOutputCopy5 2 \n8 2 1 3 \n9 3 8 \n100 50 25 75 64 \n42 \n128 96 80 88 52 7 \n17 2 4 8 16 \nNoteIn the first test case of the example, there are only two possible permutations bb \u00a0\u2014 [2,5][2,5] and [5,2][5,2]: for the first one c=[2,1]c=[2,1], for the second one c=[5,1]c=[5,1].In the third test case of the example, number 99 should be the first in bb, and GCD(9,3)=3GCD(9,3)=3, GCD(9,8)=1GCD(9,8)=1, so the second number of bb should be 33.In the seventh test case of the example, first four numbers pairwise have a common divisor (a power of two), but none of them can be the first in the optimal permutation bb."], "Negative Prefixes": ["https://codeforces.com/problemset/problem/1418/B", "B. Negative Prefixestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa, consisting of nn integers.Each position ii (1\u2264i\u2264n1\u2264i\u2264n) of the array is either locked or unlocked. You can take the values on the unlocked positions, rearrange them in any order and place them back into the unlocked positions. You are not allowed to remove any values, add the new ones or rearrange the values on the locked positions. You are allowed to leave the values in the same order as they were.For example, let a=[\u22121,1,3\u2013,2,\u22122\u2013\u2013\u2013,1,\u22124,0\u2013]a=[\u22121,1,3_,2,\u22122_,1,\u22124,0_], the underlined positions are locked. You can obtain the following arrays:   [\u22121,1,3\u2013,2,\u22122\u2013\u2013\u2013,1,\u22124,0\u2013][\u22121,1,3_,2,\u22122_,1,\u22124,0_];  [\u22124,\u22121,3\u2013,2,\u22122\u2013\u2013\u2013,1,1,0\u2013][\u22124,\u22121,3_,2,\u22122_,1,1,0_];  [1,\u22121,3\u2013,2,\u22122\u2013\u2013\u2013,1,\u22124,0\u2013][1,\u22121,3_,2,\u22122_,1,\u22124,0_];  [1,2,3\u2013,\u22121,\u22122\u2013\u2013\u2013,\u22124,1,0\u2013][1,2,3_,\u22121,\u22122_,\u22124,1,0_];  and some others. Let pp be a sequence of prefix sums of the array aa after the rearrangement. So p1=a1p1=a1, p2=a1+a2p2=a1+a2, p3=a1+a2+a3p3=a1+a2+a3, \u2026\u2026, pn=a1+a2+\u22ef+anpn=a1+a2+\u22ef+an.Let kk be the maximum jj (1\u2264j\u2264n1\u2264j\u2264n) such that pj<0pj<0. If there are no jj such that pj<0pj<0, then k=0k=0.Your goal is to rearrange the values in such a way that kk is minimum possible.Output the array aa after the rearrangement such that the value kk for it is minimum possible. If there are multiple answers then print any of them.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of testcases.Then tt testcases follow.The first line of each testcase contains a single integer nn (1\u2264n\u22641001\u2264n\u2264100)\u00a0\u2014 the number of elements in the array aa.The second line of each testcase contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212105\u2264ai\u2264105\u2212105\u2264ai\u2264105)\u00a0\u2014 the initial array aa.The third line of each testcase contains nn integers l1,l2,\u2026,lnl1,l2,\u2026,ln (0\u2264li\u226410\u2264li\u22641), where li=0li=0 means that the position ii is unlocked and li=1li=1 means that the position ii is locked.OutputPrint nn integers\u00a0\u2014 the array aa after the rearrangement. Value kk (the maximum jj such that pj<0pj<0 (or 00 if there are no such jj)) should be minimum possible. For each locked position the printed value should be equal to the initial one. The values on the unlocked positions should be an arrangement of the initial ones.If there are multiple answers then print any of them.ExampleInputCopy5\n3\n1 3 2\n0 0 0\n4\n2 -3 4 -1\n1 1 1 1\n7\n-8 4 -2 -6 4 7 1\n1 0 0 0 1 1 0\n5\n0 1 -4 6 3\n0 0 0 1 1\n6\n-1 7 10 4 -8 -1\n1 0 0 0 0 1\nOutputCopy1 2 3\n2 -3 4 -1\n-8 -6 1 4 4 7 -2\n-4 0 1 6 3\n-1 4 7 -8 10 -1NoteIn the first testcase you can rearrange all values however you want but any arrangement will result in k=0k=0. For example, for an arrangement [1,2,3][1,2,3], p=[1,3,6]p=[1,3,6], so there are no jj such that pj<0pj<0. Thus, k=0k=0.In the second testcase you are not allowed to rearrange any elements. Thus, the printed array should be exactly the same as the initial one.In the third testcase the prefix sums for the printed array are p=[\u22128,\u221214,\u221213,\u22129,\u22125,2,0]p=[\u22128,\u221214,\u221213,\u22129,\u22125,2,0]. The maximum jj is 55, thus k=5k=5. There are no arrangements such that k<5k<5.In the fourth testcase p=[\u22124,\u22124,\u22123,3,6]p=[\u22124,\u22124,\u22123,3,6].In the fifth testcase p=[\u22121,3,10,2,12,11]p=[\u22121,3,10,2,12,11]."], "Social Network (hard version)": ["https://codeforces.com/problemset/problem/1234/B2", "B2. Social Network (hard version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions are constraints on nn and kk.You are messaging in one of the popular social networks via your smartphone. Your smartphone can show at most kk most recent conversations with your friends. Initially, the screen is empty (i.e. the number of displayed conversations equals 00).Each conversation is between you and some of your friends. There is at most one conversation with any of your friends. So each conversation is uniquely defined by your friend.You (suddenly!) have the ability to see the future. You know that during the day you will receive nn messages, the ii-th message will be received from the friend with ID idiidi (1\u2264idi\u22641091\u2264idi\u2264109).If you receive a message from idiidi in the conversation which is currently displayed on the smartphone then nothing happens: the conversations of the screen do not change and do not change their order, you read the message and continue waiting for new messages.Otherwise (i.e. if there is no conversation with idiidi on the screen):  Firstly, if the number of conversations displayed on the screen is kk, the last conversation (which has the position kk) is removed from the screen.  Now the number of conversations on the screen is guaranteed to be less than kk and the conversation with the friend idiidi is not displayed on the screen.  The conversation with the friend idiidi appears on the first (the topmost) position on the screen and all the other displayed conversations are shifted one position down. Your task is to find the list of conversations (in the order they are displayed on the screen) after processing all nn messages.InputThe first line of the input contains two integers nn and kk (1\u2264n,k\u22642\u22c5105)1\u2264n,k\u22642\u22c5105) \u2014 the number of messages and the number of conversations your smartphone can show.The second line of the input contains nn integers id1,id2,\u2026,idnid1,id2,\u2026,idn (1\u2264idi\u22641091\u2264idi\u2264109), where idiidi is the ID of the friend which sends you the ii-th message.OutputIn the first line of the output print one integer mm (1\u2264m\u2264min(n,k)1\u2264m\u2264min(n,k)) \u2014 the number of conversations shown after receiving all nn messages.In the second line print mm integers ids1,ids2,\u2026,idsmids1,ids2,\u2026,idsm, where idsiidsi should be equal to the ID of the friend corresponding to the conversation displayed on the position ii after receiving all nn messages.ExamplesInputCopy7 2\n1 2 3 2 1 3 2\nOutputCopy2\n2 1 \nInputCopy10 4\n2 3 3 1 1 2 1 2 3 3\nOutputCopy3\n1 3 2 \nNoteIn the first example the list of conversations will change in the following way (in order from the first to last message):  [][];  [1][1];  [2,1][2,1];  [3,2][3,2];  [3,2][3,2];  [1,3][1,3];  [1,3][1,3];  [2,1][2,1]. In the second example the list of conversations will change in the following way:  [][];  [2][2];  [3,2][3,2];  [3,2][3,2];  [1,3,2][1,3,2];  and then the list will not change till the end. "], "Pok\u00e9mon Army (easy version)": ["https://codeforces.com/problemset/problem/1420/C1", "C1. Pok\u00e9mon Army (easy version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The difference between the versions is that the easy version has no swap operations. You can make hacks only if all versions of the problem are solved.Pikachu is a cute and friendly pok\u00e9mon living in the wild pikachu herd.But it has become known recently that infamous team R wanted to steal all these pok\u00e9mon! Pok\u00e9mon trainer Andrew decided to help Pikachu to build a pok\u00e9mon army to resist.First, Andrew counted all the pok\u00e9mon\u00a0\u2014 there were exactly nn pikachu. The strength of the ii-th pok\u00e9mon is equal to aiai, and all these numbers are distinct.As an army, Andrew can choose any non-empty subsequence of pokemons. In other words, Andrew chooses some array bb from kk indices such that 1\u2264b1<b2<\u22ef<bk\u2264n1\u2264b1<b2<\u22ef<bk\u2264n, and his army will consist of pok\u00e9mons with forces ab1,ab2,\u2026,abkab1,ab2,\u2026,abk.The strength of the army is equal to the alternating sum of elements of the subsequence; that is, ab1\u2212ab2+ab3\u2212ab4+\u2026ab1\u2212ab2+ab3\u2212ab4+\u2026.Andrew is experimenting with pok\u00e9mon order. He performs qq operations. In ii-th operation Andrew swaps lili-th and riri-th pok\u00e9mon.Note: q=0q=0 in this version of the task.Andrew wants to know the maximal stregth of the army he can achieve with the initial pok\u00e9mon placement. He also needs to know the maximal strength after each operation.Help Andrew and the pok\u00e9mon, or team R will realize their tricky plan!InputEach test contains multiple test cases.The first line contains one positive integer tt (1\u2264t\u22641031\u2264t\u2264103) denoting the number of test cases. Description of the test cases follows.The first line of each test case contains two integers nn and qq (1\u2264n\u22643\u22c5105,q=01\u2264n\u22643\u22c5105,q=0) denoting the number of pok\u00e9mon and number of operations respectively.The second line contains nn distinct positive integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n) denoting the strengths of the pok\u00e9mon.ii-th of the last qq lines contains two positive integers lili and riri (1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n) denoting the indices of pok\u00e9mon that were swapped in the ii-th operation.It is guaranteed that the sum of nn over all test cases does not exceed 3\u22c51053\u22c5105, and the sum of qq over all test cases does not exceed 3\u22c51053\u22c5105. OutputFor each test case, print q+1q+1 integers: the maximal strength of army before the swaps and after each swap.ExampleInputCopy3\n3 0\n1 3 2\n2 0\n1 2\n7 0\n1 2 5 4 3 6 7\nOutputCopy3\n2\n9\nNoteIn third test case we can build an army in such way: [1 2 5 4 3 6 7], its strength will be 5\u22123+7=95\u22123+7=9."], "Make a Power of Two": ["https://codeforces.com/problemset/problem/1560/D", "D. Make a Power of Twotime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an integer nn. In 11 move, you can do one of the following actions:  erase any digit of the number (it's acceptable that the number before the operation has exactly one digit and after the operation, it is \"empty\");  add one digit to the right. The actions may be performed in any order any number of times.Note that if, after deleting some digit from a number, it will contain leading zeroes, they will not be deleted. E.g. if you delete from the number 301301 the digit 33, the result is the number 0101 (not 11).You need to perform the minimum number of actions to make the number any power of 22 (i.e. there's an integer kk (k\u22650k\u22650) such that the resulting number is equal to 2k2k). The resulting number must not have leading zeroes.E.g. consider n=1052n=1052. The answer is equal to 22. First, let's add to the right one digit 44 (the result will be 1052410524). Then let's erase the digit 55, so the result will be 10241024 which is a power of 22.E.g. consider n=8888n=8888. The answer is equal to 33. Let's erase any of the digits 88 three times. The result will be 88 which is a power of 22.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. Then tt test cases follow.Each test case consists of one line containing one integer nn (1\u2264n\u22641091\u2264n\u2264109).OutputFor each test case, output in a separate line one integer mm \u2014 the minimum number of moves to transform the number into any power of 22.ExampleInputCopy12\n1052\n8888\n6\n75\n128\n1\n301\n12048\n1504\n6656\n1000000000\n687194767\nOutputCopy2\n3\n1\n3\n0\n0\n2\n1\n3\n4\n9\n2\nNoteThe answer for the first test case was considered above.The answer for the second test case was considered above.In the third test case, it's enough to add to the right the digit 44 \u2014 the number 66 will turn into 6464.In the fourth test case, let's add to the right the digit 88 and then erase 77 and 55 \u2014 the taken number will turn into 88.The numbers of the fifth and the sixth test cases are already powers of two so there's no need to make any move.In the seventh test case, you can delete first of all the digit 33 (the result is 0101) and then the digit 00 (the result is 11)."], "Perform the Combo": ["https://codeforces.com/problemset/problem/1311/C", "C. Perform the Combotime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou want to perform the combo on your opponent in one popular fighting game. The combo is the string ss consisting of nn lowercase Latin letters. To perform the combo, you have to press all buttons in the order they appear in ss. I.e. if s=s=\"abca\" then you have to press 'a', then 'b', 'c' and 'a' again.You know that you will spend mm wrong tries to perform the combo and during the ii-th try you will make a mistake right after pipi-th button (1\u2264pi<n1\u2264pi<n) (i.e. you will press first pipi buttons right and start performing the combo from the beginning). It is guaranteed that during the m+1m+1-th try you press all buttons right and finally perform the combo.I.e. if s=s=\"abca\", m=2m=2 and p=[1,3]p=[1,3] then the sequence of pressed buttons will be 'a' (here you're making a mistake and start performing the combo from the beginning), 'a', 'b', 'c', (here you're making a mistake and start performing the combo from the beginning), 'a' (note that at this point you will not perform the combo because of the mistake), 'b', 'c', 'a'.Your task is to calculate for each button (letter) the number of times you'll press it.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases.Then tt test cases follow.The first line of each test case contains two integers nn and mm (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105, 1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105) \u2014 the length of ss and the number of tries correspondingly.The second line of each test case contains the string ss consisting of nn lowercase Latin letters.The third line of each test case contains mm integers p1,p2,\u2026,pmp1,p2,\u2026,pm (1\u2264pi<n1\u2264pi<n) \u2014 the number of characters pressed right during the ii-th try.It is guaranteed that the sum of nn and the sum of mm both does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105, \u2211m\u22642\u22c5105\u2211m\u22642\u22c5105).It is guaranteed that the answer for each letter does not exceed 2\u22c51092\u22c5109.OutputFor each test case, print the answer \u2014 2626 integers: the number of times you press the button 'a', the number of times you press the button 'b', \u2026\u2026, the number of times you press the button 'z'.ExampleInputCopy3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\nOutputCopy4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \nNoteThe first test case is described in the problem statement. Wrong tries are \"a\", \"abc\" and the final try is \"abca\". The number of times you press 'a' is 44, 'b' is 22 and 'c' is 22.In the second test case, there are five wrong tries: \"co\", \"codeforc\", \"cod\", \"co\", \"codeforce\" and the final try is \"codeforces\". The number of times you press 'c' is 99, 'd' is 44, 'e' is 55, 'f' is 33, 'o' is 99, 'r' is 33 and 's' is 11."], "Bear and Poker": ["https://codeforces.com/problemset/problem/573/A", "A. Bear and Pokertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLimak is an old brown bear. He often plays poker with his friends. Today they went to a casino. There are n players (including Limak himself) and right now all of them have bids on the table. i-th of them has bid with size ai dollars.Each player can double his bid any number of times and triple his bid any number of times. The casino has a great jackpot for making all bids equal. Is it possible that Limak and his friends will win a jackpot?InputFirst line of input contains an integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105), the number of players.The second line contains n integer numbers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the bids of players.OutputPrint \"Yes\" (without the quotes) if players can make their bids become equal, or \"No\" otherwise.ExamplesInputCopy475 150 75 50OutputCopyYesInputCopy3100 150 250OutputCopyNoNoteIn the first sample test first and third players should double their bids twice, second player should double his bid once and fourth player should both double and triple his bid.It can be shown that in the second sample test there is no way to make all bids equal."], "Simple Game": ["https://codeforces.com/problemset/problem/570/B", "B. Simple Gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Misha and Andrew were playing a very simple game. First, each player chooses an integer in the range from 1 to n. Let's assume that Misha chose number m, and Andrew chose number a.Then, by using a random generator they choose a random integer c in the range between 1 and n (any integer from 1 to n is chosen with the same probability), after which the winner is the player, whose number was closer to c. The boys agreed that if m and a are located on the same distance from c, Misha wins.Andrew wants to win very much, so he asks you to help him. You know the number selected by Misha, and number n. You need to determine which value of a Andrew must choose, so that the probability of his victory is the highest possible.More formally, you need to find such integer a (1\u2009\u2264\u2009a\u2009\u2264\u2009n), that the probability that  is maximal, where c is the equiprobably chosen integer from 1 to n (inclusive).InputThe first line contains two integers n and m (1\u2009\u2264\u2009m\u2009\u2264\u2009n\u2009\u2264\u2009109) \u2014 the range of numbers in the game, and the number selected by Misha respectively.OutputPrint a single number \u2014 such value a, that probability that Andrew wins is the highest. If there are multiple such values, print the minimum of them.ExamplesInputCopy3 1OutputCopy2InputCopy4 3OutputCopy2NoteIn the first sample test: Andrew wins if c is equal to 2 or 3. The probability that Andrew wins is 2\u2009/\u20093. If Andrew chooses a\u2009=\u20093, the probability of winning will be 1\u2009/\u20093. If a\u2009=\u20091, the probability of winning is 0.In the second sample test: Andrew wins if c is equal to 1 and 2. The probability that Andrew wins is 1\u2009/\u20092. For other choices of a the probability of winning is less."], "Permutation Partitions": ["https://codeforces.com/problemset/problem/1326/C", "C. Permutation Partitionstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a permutation p1,p2,\u2026,pnp1,p2,\u2026,pn of integers from 11 to nn and an integer kk, such that 1\u2264k\u2264n1\u2264k\u2264n. A permutation means that every number from 11 to nn is contained in pp exactly once.Let's consider all partitions of this permutation into kk disjoint segments. Formally, a partition is a set of segments {[l1,r1],[l2,r2],\u2026,[lk,rk]}{[l1,r1],[l2,r2],\u2026,[lk,rk]}, such that:  1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n for all 1\u2264i\u2264k1\u2264i\u2264k;  For all 1\u2264j\u2264n1\u2264j\u2264n there exists exactly one segment [li,ri][li,ri], such that li\u2264j\u2264rili\u2264j\u2264ri. Two partitions are different if there exists a segment that lies in one partition but not the other.Let's calculate the partition value, defined as \u2211i=1kmaxli\u2264j\u2264ripj\u2211i=1kmaxli\u2264j\u2264ripj, for all possible partitions of the permutation into kk disjoint segments. Find the maximum possible partition value over all such partitions, and the number of partitions with this value. As the second value can be very large, you should find its remainder when divided by 998244353998244353.InputThe first line contains two integers, nn and kk (1\u2264k\u2264n\u22642000001\u2264k\u2264n\u2264200000)\u00a0\u2014 the size of the given permutation and the number of segments in a partition.The second line contains nn different integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n)\u00a0\u2014 the given permutation.OutputPrint two integers\u00a0\u2014 the maximum possible partition value over all partitions of the permutation into kk disjoint segments and the number of such partitions for which the partition value is equal to the maximum possible value, modulo 998244353998244353.Please note that you should only find the second value modulo 998244353998244353.ExamplesInputCopy3 2\n2 1 3\nOutputCopy5 2\nInputCopy5 5\n2 1 5 3 4\nOutputCopy15 1\nInputCopy7 3\n2 7 3 1 5 4 6\nOutputCopy18 6\nNoteIn the first test, for k=2k=2, there exists only two valid partitions: {[1,1],[2,3]}{[1,1],[2,3]} and {[1,2],[3,3]}{[1,2],[3,3]}. For each partition, the partition value is equal to 2+3=52+3=5. So, the maximum possible value is 55 and the number of partitions is 22.In the third test, for k=3k=3, the partitions with the maximum possible partition value are {[1,2],[3,5],[6,7]}{[1,2],[3,5],[6,7]}, {[1,3],[4,5],[6,7]}{[1,3],[4,5],[6,7]}, {[1,4],[5,5],[6,7]}{[1,4],[5,5],[6,7]}, {[1,2],[3,6],[7,7]}{[1,2],[3,6],[7,7]}, {[1,3],[4,6],[7,7]}{[1,3],[4,6],[7,7]}, {[1,4],[5,6],[7,7]}{[1,4],[5,6],[7,7]}. For all of them, the partition value is equal to 7+5+6=187+5+6=18. The partition {[1,2],[3,4],[5,7]}{[1,2],[3,4],[5,7]}, however, has the partition value 7+3+6=167+3+6=16. This is not the maximum possible value, so we don't count it."], "Books Exchange (hard version)": ["https://codeforces.com/problemset/problem/1249/B2", "B2. Books Exchange (hard version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is constraints.There are nn kids, each of them is reading a unique book. At the end of any day, the ii-th kid will give his book to the pipi-th kid (in case of i=pii=pi the kid will give his book to himself). It is guaranteed that all values of pipi are distinct integers from 11 to nn (i.e. pp is a permutation). The sequence pp doesn't change from day to day, it is fixed.For example, if n=6n=6 and p=[4,6,1,3,5,2]p=[4,6,1,3,5,2] then at the end of the first day the book of the 11-st kid will belong to the 44-th kid, the 22-nd kid will belong to the 66-th kid and so on. At the end of the second day the book of the 11-st kid will belong to the 33-th kid, the 22-nd kid will belong to the 22-th kid and so on.Your task is to determine the number of the day the book of the ii-th child is returned back to him for the first time for every ii from 11 to nn.Consider the following example: p=[5,1,2,4,3]p=[5,1,2,4,3]. The book of the 11-st kid will be passed to the following kids:  after the 11-st day it will belong to the 55-th kid,  after the 22-nd day it will belong to the 33-rd kid,  after the 33-rd day it will belong to the 22-nd kid,  after the 44-th day it will belong to the 11-st kid. So after the fourth day, the book of the first kid will return to its owner. The book of the fourth kid will return to him for the first time after exactly one day.You have to answer qq independent queries.InputThe first line of the input contains one integer qq (1\u2264q\u226410001\u2264q\u22641000) \u2014 the number of queries. Then qq queries follow.The first line of the query contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of kids in the query. The second line of the query contains nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n, all pipi are distinct, i.e. pp is a permutation), where pipi is the kid which will get the book of the ii-th kid.It is guaranteed that \u2211n\u22642\u22c5105\u2211n\u22642\u22c5105 (sum of nn over all queries does not exceed 2\u22c51052\u22c5105).OutputFor each query, print the answer on it: nn integers a1,a2,\u2026,ana1,a2,\u2026,an, where aiai is the number of the day the book of the ii-th child is returned back to him for the first time in this query.ExampleInputCopy6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\nOutputCopy1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4 \n"], "Chocolate": ["https://codeforces.com/problemset/problem/617/B", "B. Chocolatetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBob loves everything sweet. His favorite chocolate bar consists of pieces, each piece may contain a nut. Bob wants to break the bar of chocolate into multiple pieces so that each part would contain exactly one nut and any break line goes between two adjacent pieces.You are asked to calculate the number of ways he can do it. Two ways to break chocolate are considered distinct if one of them contains a break between some two adjacent pieces and the other one doesn't. Please note, that if Bob doesn't make any breaks, all the bar will form one piece and it still has to have exactly one nut.InputThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 the number of pieces in the chocolate bar.The second line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u20091), where 0 represents a piece without the nut and 1 stands for a piece with the nut.OutputPrint the number of ways to break the chocolate into multiple parts so that each part would contain exactly one nut.ExamplesInputCopy30 1 0OutputCopy1InputCopy51 0 1 0 1OutputCopy4NoteIn the first sample there is exactly one nut, so the number of ways equals 1\u00a0\u2014 Bob shouldn't make any breaks.In the second sample you can break the bar in four ways:10|10|11|010|110|1|011|01|01"], "OR in Matrix": ["https://codeforces.com/problemset/problem/486/B", "B. OR in Matrixtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's define logical OR as an operation on two logical values (i. e. values that belong to the set {0,\u20091}) that is equal to 1 if either or both of the logical values is set to 1, otherwise it is 0. We can define logical OR of three or more logical values in the same manner: where  is equal to 1 if some ai\u2009=\u20091, otherwise it is equal to 0.Nam has a matrix A consisting of m rows and n columns. The rows are numbered from 1 to m, columns are numbered from 1 to n. Element at row i (1\u2009\u2264\u2009i\u2009\u2264\u2009m) and column j (1\u2009\u2264\u2009j\u2009\u2264\u2009n) is denoted as Aij. All elements of A are either 0 or 1. From matrix A, Nam creates another matrix B of the same size using formula:.(Bij is OR of all elements in row i and column j of matrix A)Nam gives you matrix B and challenges you to guess matrix A. Although Nam is smart, he could probably make a mistake while calculating matrix B, since size of A can be large.InputThe first line contains two integer m and n (1\u2009\u2264\u2009m,\u2009n\u2009\u2264\u2009100), number of rows and number of columns of matrices respectively.The next m lines each contain n integers separated by spaces describing rows of matrix B (each element of B is either 0 or 1).OutputIn the first line, print \"NO\" if Nam has made a mistake when calculating B, otherwise print \"YES\". If the first line is \"YES\", then also print m rows consisting of n integers representing matrix A that can produce given matrix B. If there are several solutions print any one.ExamplesInputCopy2 21 00 0OutputCopyNOInputCopy2 31 1 11 1 1OutputCopyYES1 1 11 1 1InputCopy2 30 1 01 1 1OutputCopyYES0 0 00 1 0"], "Saving the City": ["https://codeforces.com/problemset/problem/1443/B", "B. Saving the Citytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBertown is a city with nn buildings in a straight line.The city's security service discovered that some buildings were mined. A map was compiled, which is a string of length nn, where the ii-th character is \"1\" if there is a mine under the building number ii and \"0\" otherwise.Bertown's best sapper knows how to activate mines so that the buildings above them are not damaged. When a mine under the building numbered xx is activated, it explodes and activates two adjacent mines under the buildings numbered x\u22121x\u22121 and x+1x+1 (if there were no mines under the building, then nothing happens). Thus, it is enough to activate any one mine on a continuous segment of mines to activate all the mines of this segment. For manual activation of one mine, the sapper takes aa coins. He can repeat this operation as many times as you want.Also, a sapper can place a mine under a building if it wasn't there. For such an operation, he takes bb coins. He can also repeat this operation as many times as you want.The sapper can carry out operations in any order.You want to blow up all the mines in the city to make it safe. Find the minimum number of coins that the sapper will have to pay so that after his actions there are no mines left in the city.InputThe first line contains one positive integer tt (1\u2264t\u22641051\u2264t\u2264105)\u00a0\u2014 the number of test cases. Then tt test cases follow.Each test case begins with a line containing two integers aa and bb (1\u2264a,b\u226410001\u2264a,b\u22641000)\u00a0\u2014 the cost of activating and placing one mine, respectively.The next line contains a map of mines in the city\u00a0\u2014 a string consisting of zeros and ones.The sum of the string lengths for all test cases does not exceed 105105.OutputFor each test case, output one integer\u00a0\u2014 the minimum number of coins that the sapper will have to pay.ExampleInputCopy2\n1 1\n01000010\n5 1\n01101110\nOutputCopy2\n6\nNoteIn the second test case, if we place a mine under the fourth building and then activate it, then all mines on the field are activated. The cost of such operations is six, b=1b=1 coin for placing a mine and a=5a=5 coins for activating."], "Not Sitting": ["https://codeforces.com/problemset/problem/1627/B", "B. Not Sittingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRahul and Tina are looking forward to starting their new year at college. As they enter their new classroom, they observe the seats of students are arranged in a n\u00d7mn\u00d7m grid. The seat in row rr and column cc is denoted by (r,c)(r,c), and the distance between two seats (a,b)(a,b) and (c,d)(c,d) is |a\u2212c|+|b\u2212d||a\u2212c|+|b\u2212d|. As the class president, Tina has access to exactly kk buckets of pink paint. The following process occurs.   First, Tina chooses exactly kk seats in the classroom to paint with pink paint. One bucket of paint can paint exactly one seat.  After Tina has painted kk seats in the previous step, Rahul chooses where he sits. He will not choose a seat that has been painted pink due to his hatred of the colour pink.  After Rahul has chosen his seat, Tina chooses a seat for herself. She can choose any of the seats, painted or not, other than the one chosen by Rahul. Rahul wants to choose a seat such that he sits as close to Tina as possible. However, Tina wants to sit as far away from Rahul as possible due to some complicated relationship history that we couldn't fit into the statement!Now, Rahul wonders for k=0,1,\u2026,n\u22c5m\u22121k=0,1,\u2026,n\u22c5m\u22121, if Tina has kk buckets of paint, how close can Rahul sit to Tina, if both Rahul and Tina are aware of each other's intentions and they both act as strategically as possible? Please help satisfy Rahul's curiosity! InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u22645\u22c51041\u2264t\u22645\u22c5104)\u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains two integers nn, mm (2\u2264n\u22c5m\u22641052\u2264n\u22c5m\u2264105)\u00a0\u2014 the number of rows and columns of seats in the classroom.The sum of n\u22c5mn\u22c5m across all test cases does not exceed 105105.OutputFor each test case, output n\u22c5mn\u22c5m ordered integers\u00a0\u2014 the distance between Rahul and Tina if both of them act optimally for every k\u2208[0,n\u22c5m\u22121]k\u2208[0,n\u22c5m\u22121].ExampleInputCopy2\n4 3\n1 2\nOutputCopy3 3 4 4 4 4 4 4 5 5 5 5 \n1 1 \nNoteOne possible sequence of choices for the first testcase where Tina has k=3k=3 buckets of paints is as follows.Tina paints the seats at positions (1,2)(1,2), (2,2)(2,2), (3,2)(3,2) with pink paint. Rahul chooses the seat at (3,1)(3,1) after which Tina chooses to sit at (1,3)(1,3). Therefore, the distance between Tina and Rahul is |3\u22121|+|1\u22123|=4|3\u22121|+|1\u22123|=4, and we can prove that this is indeed the minimum possible distance under the given constraints. There may be other choices of seats which lead to the same answer as well.For k=0k=0 in the first test case, Rahul can decide to sit at (2,2)(2,2) and Tina can decide to sit at (4,3)(4,3) so the distance between them would be |2\u22124|+|2\u22123|=3|2\u22124|+|2\u22123|=3.Below are pictorial representations of the k=3k=3 and k=0k=0 cases for the first test case.  A possible seating arrangement for k=3k=3.  A possible seating arrangement for k=0k=0. "], "Array and Operations": ["https://codeforces.com/problemset/problem/1618/D", "D. Array and Operationstime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given an array aa of nn integers, and another integer kk such that 2k\u2264n2k\u2264n.You have to perform exactly kk operations with this array. In one operation, you have to choose two elements of the array (let them be aiai and ajaj; they can be equal or different, but their positions in the array must not be the same), remove them from the array, and add \u230aaiaj\u230b\u230aaiaj\u230b to your score, where \u230axy\u230b\u230axy\u230b is the maximum integer not exceeding xyxy.Initially, your score is 00. After you perform exactly kk operations, you add all the remaining elements of the array to the score.Calculate the minimum possible score you can get.InputThe first line of the input contains one integer tt (1\u2264t\u22645001\u2264t\u2264500) \u2014 the number of test cases.Each test case consists of two lines. The first line contains two integers nn and kk (1\u2264n\u22641001\u2264n\u2264100; 0\u2264k\u2264\u230an2\u230b0\u2264k\u2264\u230an2\u230b).The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22642\u22c51051\u2264ai\u22642\u22c5105).OutputPrint one integer \u2014 the minimum possible score you can get.ExampleInputCopy5\n7 3\n1 1 1 2 1 3 1\n5 1\n5 5 5 5 5\n4 2\n1 3 3 7\n2 0\n4 2\n9 2\n1 10 10 1 10 2 7 10 3\nOutputCopy2\n16\n0\n6\n16\nNoteLet's consider the example test.In the first test case, one way to obtain a score of 22 is the following one:  choose a7=1a7=1 and a4=2a4=2 for the operation; the score becomes 0+\u230a12\u230b=00+\u230a12\u230b=0, the array becomes [1,1,1,1,3][1,1,1,1,3];  choose a1=1a1=1 and a5=3a5=3 for the operation; the score becomes 0+\u230a13\u230b=00+\u230a13\u230b=0, the array becomes [1,1,1][1,1,1];  choose a1=1a1=1 and a2=1a2=1 for the operation; the score becomes 0+\u230a11\u230b=10+\u230a11\u230b=1, the array becomes [1][1];  add the remaining element 11 to the score, so the resulting score is 22. In the second test case, no matter which operations you choose, the resulting score is 1616.In the third test case, one way to obtain a score of 00 is the following one:  choose a1=1a1=1 and a2=3a2=3 for the operation; the score becomes 0+\u230a13\u230b=00+\u230a13\u230b=0, the array becomes [3,7][3,7];  choose a1=3a1=3 and a2=7a2=7 for the operation; the score becomes 0+\u230a37\u230b=00+\u230a37\u230b=0, the array becomes empty;  the array is empty, so the score doesn't change anymore. In the fourth test case, no operations can be performed, so the score is the sum of the elements of the array: 4+2=64+2=6."], "Obtain Two Zeroes": ["https://codeforces.com/problemset/problem/1260/B", "B. Obtain Two Zeroestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two integers aa and bb. You may perform any number of operations on them (possibly zero).During each operation you should choose any positive integer xx and set a:=a\u2212xa:=a\u2212x, b:=b\u22122xb:=b\u22122x or a:=a\u22122xa:=a\u22122x, b:=b\u2212xb:=b\u2212x. Note that you may choose different values of xx in different operations.Is it possible to make aa and bb equal to 00 simultaneously?Your program should answer tt independent test cases.InputThe first line contains one integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.Then the test cases follow, each test case is represented by one line containing two integers aa and bb for this test case (0\u2264a,b\u22641090\u2264a,b\u2264109).OutputFor each test case print the answer to it \u2014 YES if it is possible to make aa and bb equal to 00 simultaneously, and NO otherwise.You may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).ExampleInputCopy3\n6 9\n1 1\n1 2\nOutputCopyYES\nNO\nYES\nNoteIn the first test case of the example two operations can be used to make both aa and bb equal to zero:  choose x=4x=4 and set a:=a\u2212xa:=a\u2212x, b:=b\u22122xb:=b\u22122x. Then a=6\u22124=2a=6\u22124=2, b=9\u22128=1b=9\u22128=1;  choose x=1x=1 and set a:=a\u22122xa:=a\u22122x, b:=b\u2212xb:=b\u2212x. Then a=2\u22122=0a=2\u22122=0, b=1\u22121=0b=1\u22121=0. "], "Creating a Character": ["https://codeforces.com/problemset/problem/1217/A", "A. Creating a Charactertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou play your favourite game yet another time. You chose the character you didn't play before. It has strstr points of strength and intint points of intelligence. Also, at start, the character has expexp free experience points you can invest either in strength or in intelligence (by investing one point you can either raise strength by 11 or raise intelligence by 11).Since you'd like to make some fun you want to create a jock character, so it has more strength than intelligence points (resulting strength is strictly greater than the resulting intelligence).Calculate the number of different character builds you can create (for the purpose of replayability) if you must invest all free points. Two character builds are different if their strength and/or intellect are different.InputThe first line contains the single integer TT (1\u2264T\u22641001\u2264T\u2264100) \u2014 the number of queries. Next TT lines contain descriptions of queries \u2014 one per line.This line contains three integers strstr, intint and expexp (1\u2264str,int\u22641081\u2264str,int\u2264108, 0\u2264exp\u22641080\u2264exp\u2264108) \u2014 the initial strength and intelligence of the character and the number of free points, respectively.OutputPrint TT integers \u2014 one per query. For each query print the number of different character builds you can create.ExampleInputCopy4\n5 3 4\n2 1 0\n3 5 5\n4 10 6\nOutputCopy3\n1\n2\n0\nNoteIn the first query there are only three appropriate character builds: (str=7,int=5)(str=7,int=5), (8,4)(8,4) and (9,3)(9,3). All other builds are either too smart or don't use all free points.In the second query there is only one possible build: (2,1)(2,1).In the third query there are two appropriate builds: (7,6)(7,6), (8,5)(8,5).In the fourth query all builds have too much brains."], "Box Fitting": ["https://codeforces.com/problemset/problem/1498/B", "B. Box Fittingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given nn rectangles, each of height 11. Each rectangle's width is a power of 22 (i.\u2009e. it can be represented as 2x2x for some non-negative integer xx). You are also given a two-dimensional box of width WW. Note that WW may or may not be a power of 22. Moreover, WW is at least as large as the width of the largest rectangle.You have to find the smallest height of this box, such that it is able to fit all the given rectangles. It is allowed to have some empty space left in this box after fitting all the rectangles.You cannot rotate the given rectangles to make them fit into the box. Moreover, any two distinct rectangles must not overlap, i.\u2009e., any two distinct rectangles must have zero intersection area.See notes for visual explanation of sample input.InputThe first line of input contains one integer tt (1\u2264t\u22645\u22c51031\u2264t\u22645\u22c5103) \u2014 the number of test cases. Each test case consists of two lines.For each test case: the first line contains two integers nn (1\u2264n\u22641051\u2264n\u2264105) and WW (1\u2264W\u22641091\u2264W\u2264109); the second line contains nn integers w1,w2,\u2026,wnw1,w2,\u2026,wn (1\u2264wi\u22641061\u2264wi\u2264106), where wiwi is the width of the ii-th rectangle. Each wiwi is a power of 22; additionally, maxi=1nwi\u2264Wmaxi=1nwi\u2264W. The sum of nn over all test cases does not exceed 105105.OutputOutput tt integers. The ii-th integer should be equal to the answer to the ii-th test case \u2014 the smallest height of the box.ExampleInputCopy2\n5 16\n1 2 8 4 8\n6 10\n2 8 8 2 2 8\nOutputCopy2\n3\nNoteFor the first test case in the sample input, the following figure shows one way to fit the given five rectangles into the 2D box with minimum height:  In the figure above, the number inside each rectangle is its width. The width of the 2D box is 1616 (indicated with arrow below). The minimum height required for the 2D box in this case is 22 (indicated on the left).In the second test case, you can have a minimum height of three by keeping two blocks (one each of widths eight and two) on each of the three levels."], "Co-growing Sequence": ["https://codeforces.com/problemset/problem/1547/D", "D. Co-growing Sequencetime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputA sequence of non-negative integers a1,a2,\u2026,ana1,a2,\u2026,an is called growing if for all ii from 11 to n\u22121n\u22121 all ones (of binary representation) in aiai are in the places of ones (of binary representation) in ai+1ai+1 (in other words, ai&ai+1=aiai&ai+1=ai, where && denotes bitwise AND). If n=1n=1 then the sequence is considered growing as well.For example, the following four sequences are growing:   [2,3,15,175][2,3,15,175] \u2014 in binary it's [102,112,11112,101011112][102,112,11112,101011112];  [5][5] \u2014 in binary it's [1012][1012];  [1,3,7,15][1,3,7,15] \u2014 in binary it's [12,112,1112,11112][12,112,1112,11112];  [0,0,0][0,0,0] \u2014 in binary it's [02,02,02][02,02,02]. The following three sequences are non-growing:   [3,4,5][3,4,5] \u2014 in binary it's [112,1002,1012][112,1002,1012];  [5,4,3][5,4,3] \u2014 in binary it's [1012,1002,0112][1012,1002,0112];  [1,2,4,8][1,2,4,8] \u2014 in binary it's [00012,00102,01002,10002][00012,00102,01002,10002]. Consider two sequences of non-negative integers x1,x2,\u2026,xnx1,x2,\u2026,xn and y1,y2,\u2026,yny1,y2,\u2026,yn. Let's call this pair of sequences co-growing if the sequence x1\u2295y1,x2\u2295y2,\u2026,xn\u2295ynx1\u2295y1,x2\u2295y2,\u2026,xn\u2295yn is growing where \u2295\u2295 denotes bitwise XOR.You are given a sequence of integers x1,x2,\u2026,xnx1,x2,\u2026,xn. Find the lexicographically minimal sequence y1,y2,\u2026,yny1,y2,\u2026,yn such that sequences xixi and yiyi are co-growing.The sequence a1,a2,\u2026,ana1,a2,\u2026,an is lexicographically smaller than the sequence b1,b2,\u2026,bnb1,b2,\u2026,bn if there exists 1\u2264k\u2264n1\u2264k\u2264n such that ai=biai=bi for any 1\u2264i<k1\u2264i<k but ak<bkak<bk.InputThe first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104). Then tt test cases follow.The first line of each test case contains an integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 length of the sequence xixi.The second line contains nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn (0\u2264xi<2300\u2264xi<230) \u2014 elements of the sequence xixi.It is guaranteed that the sum of nn overall all test cases doesn't exceed 2\u22c51052\u22c5105.OutputFor each test case, print nn integers y1,y2,\u2026,yny1,y2,\u2026,yn (0\u2264yi<2300\u2264yi<230) \u2014 lexicographically minimal sequence such that such that it's co-growing with given sequence xixi.ExampleInputCopy5\n4\n1 3 7 15\n4\n1 2 4 8\n5\n1 2 3 4 5\n4\n11 13 15 1\n1\n0\nOutputCopy0 0 0 0 \n0 1 3 7 \n0 1 0 3 2 \n0 2 0 14 \n0 \n"], "Two Tables": ["https://codeforces.com/problemset/problem/228/B", "B. Two Tablestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou've got two rectangular tables with sizes na\u2009\u00d7\u2009ma and nb\u2009\u00d7\u2009mb cells. The tables consist of zeroes and ones. We will consider the rows and columns of both tables indexed starting from 1. Then we will define the element of the first table, located at the intersection of the i-th row and the j-th column, as ai,\u2009j; we will define the element of the second table, located at the intersection of the i-th row and the j-th column, as bi,\u2009j. We will call the pair of integers (x,\u2009y) a shift of the second table relative to the first one. We'll call the overlap factor of the shift (x,\u2009y) value:where the variables i,\u2009j take only such values, in which the expression ai,\u2009j\u00b7bi\u2009+\u2009x,\u2009j\u2009+\u2009y makes sense. More formally, inequalities 1\u2009\u2264\u2009i\u2009\u2264\u2009na,\u20091\u2009\u2264\u2009j\u2009\u2264\u2009ma,\u20091\u2009\u2264\u2009i\u2009+\u2009x\u2009\u2264\u2009nb,\u20091\u2009\u2264\u2009j\u2009+\u2009y\u2009\u2264\u2009mb must hold. If there are no values of variables i,\u2009j, that satisfy the given inequalities, the value of the sum is considered equal to 0. Your task is to find the shift with the maximum overlap factor among all possible shifts.InputThe first line contains two space-separated integers na,\u2009ma (1\u2009\u2264\u2009na,\u2009ma\u2009\u2264\u200950) \u2014 the number of rows and columns in the first table. Then na lines contain ma characters each \u2014 the elements of the first table. Each character is either a \"0\", or a \"1\".The next line contains two space-separated integers nb,\u2009mb (1\u2009\u2264\u2009nb,\u2009mb\u2009\u2264\u200950) \u2014 the number of rows and columns in the second table. Then follow the elements of the second table in the format, similar to the first table.It is guaranteed that the first table has at least one number \"1\". It is guaranteed that the second table has at least one number \"1\".OutputPrint two space-separated integers x,\u2009y (|x|,\u2009|y|\u2009\u2264\u2009109) \u2014 a shift with maximum overlap factor. If there are multiple solutions, print any of them.ExamplesInputCopy3 20110002 3001111OutputCopy0 1InputCopy3 30000100001 11OutputCopy-1 -1"], "Good Numbers (easy version)": ["https://codeforces.com/problemset/problem/1249/C1", "C1. Good Numbers (easy version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is the maximum value of nn.You are given a positive integer number nn. You really love good numbers so you want to find the smallest good number greater than or equal to nn.The positive integer is called good if it can be represented as a sum of distinct powers of 33 (i.e. no duplicates of powers of 33 are allowed).For example:  3030 is a good number: 30=33+3130=33+31,  11 is a good number: 1=301=30,  1212 is a good number: 12=32+3112=32+31,  but 22 is not a good number: you can't represent it as a sum of distinct powers of 33 (2=30+302=30+30),  1919 is not a good number: you can't represent it as a sum of distinct powers of 33 (for example, the representations 19=32+32+30=32+31+31+31+3019=32+32+30=32+31+31+31+30 are invalid),  2020 is also not a good number: you can't represent it as a sum of distinct powers of 33 (for example, the representation 20=32+32+30+3020=32+32+30+30 is invalid). Note, that there exist other representations of 1919 and 2020 as sums of powers of 33 but none of them consists of distinct powers of 33.For the given positive integer nn find such smallest mm (n\u2264mn\u2264m) that mm is a good number.You have to answer qq independent queries.InputThe first line of the input contains one integer qq (1\u2264q\u22645001\u2264q\u2264500) \u2014 the number of queries. Then qq queries follow.The only line of the query contains one integer nn (1\u2264n\u22641041\u2264n\u2264104).OutputFor each query, print such smallest integer mm (where n\u2264mn\u2264m) that mm is a good number.ExampleInputCopy7\n1\n2\n6\n13\n14\n3620\n10000\nOutputCopy1\n3\n9\n13\n27\n6561\n19683\n"], "Blue-Red Permutation": ["https://codeforces.com/problemset/problem/1607/D", "D. Blue-Red Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array of integers aa of length nn. The elements of the array can be either different or the same. Each element of the array is colored either blue or red. There are no unpainted elements in the array. One of the two operations described below can be applied to an array in a single step:  either you can select any blue element and decrease its value by 11;  or you can select any red element and increase its value by 11. Situations in which there are no elements of some color at all are also possible. For example, if the whole array is colored blue or red, one of the operations becomes unavailable.Determine whether it is possible to make 00 or more steps such that the resulting array is a permutation of numbers from 11 to nn?In other words, check whether there exists a sequence of steps (possibly empty) such that after applying it, the array aa contains in some order all numbers from 11 to nn (inclusive), each exactly once.InputThe first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of input data sets in the test.The description of each set of input data consists of three lines. The first line contains an integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the length of the original array aa. The second line contains nn integers a1a1, a2a2, ..., anan (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109)\u00a0\u2014 the array elements themselves.The third line has length nn and consists exclusively of the letters 'B' and/or 'R': iith character is 'B' if aiai is colored blue, and is 'R' if colored red.It is guaranteed that the sum of nn over all input sets does not exceed 2\u22c51052\u22c5105.OutputPrint tt lines, each of which contains the answer to the corresponding test case of the input. Print YES as an answer if the corresponding array can be transformed into a permutation, and NO otherwise.You can print the answer in any case (for example, the strings yEs, yes, Yes, and YES will be recognized as a positive answer).ExampleInputCopy8\n4\n1 2 5 2\nBRBR\n2\n1 1\nBB\n5\n3 1 4 2 5\nRBRRB\n5\n3 1 3 1 3\nRBRRB\n5\n5 1 5 1 5\nRBRRB\n4\n2 2 2 2\nBRBR\n2\n1 -2\nBR\n4\n-2 -1 4 0\nRRRR\nOutputCopyYES\nNO\nYES\nYES\nNO\nYES\nYES\nYES\nNoteIn the first test case of the example, the following sequence of moves can be performed:  choose i=3i=3, element a3=5a3=5 is blue, so we decrease it, we get a=[1,2,4,2]a=[1,2,4,2];  choose i=2i=2, element a2=2a2=2 is red, so we increase it, we get a=[1,3,4,2]a=[1,3,4,2];  choose i=3i=3, element a3=4a3=4 is blue, so we decrease it, we get a=[1,3,3,2]a=[1,3,3,2];  choose i=2i=2, element a2=2a2=2 is red, so we increase it, we get a=[1,4,3,2]a=[1,4,3,2]. We got that aa is a permutation. Hence the answer is YES."], "Get an Even String": ["https://codeforces.com/problemset/problem/1660/C", "C. Get an Even Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA string a=a1a2\u2026ana=a1a2\u2026an is called even if it consists of a concatenation (joining) of strings of length 22 consisting of the same characters. In other words, a string aa is even if two conditions are satisfied at the same time:  its length nn is even;  for all odd ii (1\u2264i\u2264n\u221211\u2264i\u2264n\u22121), ai=ai+1ai=ai+1 is satisfied. For example, the following strings are even: \"\" (empty string), \"tt\", \"aabb\", \"oooo\", and \"ttrrrroouuuuuuuukk\". The following strings are not even: \"aaa\", \"abab\" and \"abba\".Given a string ss consisting of lowercase Latin letters. Find the minimum number of characters to remove from the string ss to make it even. The deleted characters do not have to be consecutive.InputThe first line of input data contains an integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014the number of test cases in the test.The descriptions of the test cases follow.Each test case consists of one string ss (1\u2264|s|\u22642\u22c51051\u2264|s|\u22642\u22c5105), where |s||s|\u00a0\u2014 the length of the string ss. The string consists of lowercase Latin letters.It is guaranteed that the sum of |s||s| on all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print a single number\u00a0\u2014 the minimum number of characters that must be removed to make ss even.ExampleInputCopy6\naabbdabdccc\nzyx\naaababbb\naabbcc\noaoaaaoo\nbmefbmuyw\nOutputCopy3\n3\n2\n0\n2\n7\nNoteIn the first test case you can remove the characters with indices 66, 77, and 99 to get an even string \"aabbddcc\".In the second test case, each character occurs exactly once, so in order to get an even string, you must remove all characters from the string.In the third test case, you can get an even string \"aaaabb\" by removing, for example, 44-th and 66-th characters, or a string \"aabbbb\" by removing the 55-th character and any of the first three."], "Slay the Dragon": ["https://codeforces.com/problemset/problem/1574/C", "C. Slay the Dragontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently, Petya learned about a new game \"Slay the Dragon\". As the name suggests, the player will have to fight with dragons. To defeat a dragon, you have to kill it and defend your castle. To do this, the player has a squad of nn heroes, the strength of the ii-th hero is equal to aiai.According to the rules of the game, exactly one hero should go kill the dragon, all the others will defend the castle. If the dragon's defense is equal to xx, then you have to send a hero with a strength of at least xx to kill it. If the dragon's attack power is yy, then the total strength of the heroes defending the castle should be at least yy.The player can increase the strength of any hero by 11 for one gold coin. This operation can be done any number of times.There are mm dragons in the game, the ii-th of them has defense equal to xixi and attack power equal to yiyi. Petya was wondering what is the minimum number of coins he needs to spend to defeat the ii-th dragon.Note that the task is solved independently for each dragon (improvements are not saved).InputThe first line contains a single integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105)\u00a0\u2014 number of heroes.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u226410121\u2264ai\u22641012), where aiai is the strength of the ii-th hero.The third line contains a single integer mm (1\u2264m\u22642\u22c51051\u2264m\u22642\u22c5105)\u00a0\u2014 the number of dragons.The next mm lines contain two integers each, xixi and yiyi (1\u2264xi\u22641012;1\u2264yi\u226410181\u2264xi\u22641012;1\u2264yi\u22641018)\u00a0\u2014 defense and attack power of the ii-th dragon.OutputPrint mm lines, ii-th of which contains a single integer\u00a0\u2014 the minimum number of coins that should be spent to defeat the ii-th dragon.ExampleInputCopy4\n3 6 2 3\n5\n3 12\n7 9\n4 14\n1 10\n8 7\nOutputCopy1\n2\n4\n0\n2\nNoteTo defeat the first dragon, you can increase the strength of the third hero by 11, then the strength of the heroes will be equal to [3,6,3,3][3,6,3,3]. To kill the dragon, you can choose the first hero.To defeat the second dragon, you can increase the forces of the second and third heroes by 11, then the strength of the heroes will be equal to [3,7,3,3][3,7,3,3]. To kill the dragon, you can choose a second hero.To defeat the third dragon, you can increase the strength of all the heroes by 11, then the strength of the heroes will be equal to [4,7,3,4][4,7,3,4]. To kill the dragon, you can choose a fourth hero.To defeat the fourth dragon, you don't need to improve the heroes and choose a third hero to kill the dragon.To defeat the fifth dragon, you can increase the strength of the second hero by 22, then the strength of the heroes will be equal to [3,8,2,3][3,8,2,3]. To kill the dragon, you can choose a second hero."], "Di-visible Confusion": ["https://codeforces.com/problemset/problem/1603/A", "A. Di-visible Confusiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYouKn0wWho has an integer sequence a1,a2,\u2026,ana1,a2,\u2026,an. He will perform the following operation until the sequence becomes empty: select an index ii such that 1\u2264i\u2264|a|1\u2264i\u2264|a| and aiai is not divisible by (i+1)(i+1), and erase this element from the sequence. Here |a||a| is the length of sequence aa at the moment of operation. Note that the sequence aa changes and the next operation is performed on this changed sequence.For example, if a=[3,5,4,5]a=[3,5,4,5], then he can select i=2i=2, because a2=5a2=5 is not divisible by i+1=3i+1=3. After this operation the sequence is [3,4,5][3,4,5].Help YouKn0wWho determine if it is possible to erase the whole sequence using the aforementioned operation.InputThe first line contains a single integer tt (1\u2264t\u2264100001\u2264t\u226410000) \u00a0\u2014 the number of test cases.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105).The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases doesn't exceed 3\u22c51053\u22c5105.OutputFor each test case, print \"YES\" (without quotes) if it is possible to erase the whole sequence using the aforementioned operation, print \"NO\" (without quotes) otherwise. You can print each letter in any register (upper or lower).ExampleInputCopy5\n3\n1 2 3\n1\n2\n2\n7 7\n10\n384836991 191890310 576823355 782177068 404011431 818008580 954291757 160449218 155374934 840594328\n8\n6 69 696 69696 696969 6969696 69696969 696969696\nOutputCopyYES\nNO\nYES\nYES\nNO\nNoteIn the first test case, YouKn0wWho can perform the following operations (the erased elements are underlined): [1,2\u2013,3]\u2192[1\u2013,3]\u2192[3\u2013]\u2192[].[1,2_,3]\u2192[1_,3]\u2192[3_]\u2192[].In the second test case, it is impossible to erase the sequence as ii can only be 11, and when i=1i=1, a1=2a1=2 is divisible by i+1=2i+1=2."], "Nice Matrix": ["https://codeforces.com/problemset/problem/1422/B", "B. Nice Matrixtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA matrix of size n\u00d7mn\u00d7m is called nice, if all rows and columns of the matrix are palindromes. A sequence of integers (a1,a2,\u2026,ak)(a1,a2,\u2026,ak) is a palindrome, if for any integer ii (1\u2264i\u2264k1\u2264i\u2264k) the equality ai=ak\u2212i+1ai=ak\u2212i+1 holds.Sasha owns a matrix aa of size n\u00d7mn\u00d7m. In one operation he can increase or decrease any number in the matrix by one. Sasha wants to make the matrix nice. He is interested what is the minimum number of operations he needs.Help him!InputThe first line contains a single integer tt\u00a0\u2014 the number of test cases (1\u2264t\u2264101\u2264t\u226410). The tt tests follow.The first line of each test contains two integers nn and mm (1\u2264n,m\u22641001\u2264n,m\u2264100)\u00a0\u2014 the size of the matrix.Each of the next nn lines contains mm integers ai,jai,j (0\u2264ai,j\u22641090\u2264ai,j\u2264109)\u00a0\u2014 the elements of the matrix.OutputFor each test output the smallest number of operations required to make the matrix nice.ExampleInputCopy2\n4 2\n4 2\n2 4\n4 2\n2 4\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 18\nOutputCopy8\n42\nNoteIn the first test case we can, for example, obtain the following nice matrix in 88 operations:2 24 44 42 2In the second test case we can, for example, obtain the following nice matrix in 4242 operations:5 6 6 56 6 6 65 6 6 5"], "Points on Line": ["https://codeforces.com/problemset/problem/251/A", "A. Points on Linetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya likes points a lot. Recently his mom has presented him n points lying on the line OX. Now Petya is wondering in how many ways he can choose three distinct points so that the distance between the two farthest of them doesn't exceed d.Note that the order of the points inside the group of three chosen points doesn't matter.InputThe first line contains two integers: n and d (1\u2009\u2264\u2009n\u2009\u2264\u2009105;\u00a01\u2009\u2264\u2009d\u2009\u2264\u2009109). The next line contains n integers x1,\u2009x2,\u2009...,\u2009xn, their absolute value doesn't exceed 109 \u2014 the x-coordinates of the points that Petya has got.It is guaranteed that the coordinates of the points in the input strictly increase.OutputPrint a single integer \u2014 the number of groups of three points, where the distance between two farthest points doesn't exceed d.Please do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.ExamplesInputCopy4 31 2 3 4OutputCopy4InputCopy4 2-3 -2 -1 0OutputCopy2InputCopy5 191 10 20 30 50OutputCopy1NoteIn the first sample any group of three points meets our conditions.In the seconds sample only 2 groups of three points meet our conditions: {-3, -2, -1} and {-2, -1, 0}.In the third sample only one group does: {1, 10, 20}."], "Jeff and Periods": ["https://codeforces.com/problemset/problem/352/B", "B. Jeff and Periodstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Jeff got hold of an integer sequence a1, a2, ..., an of length n. The boy immediately decided to analyze the sequence. For that, he needs to find all values of x, for which these conditions hold:  x occurs in sequence a.  Consider all positions of numbers x in the sequence a (such i, that ai\u2009=\u2009x). These numbers, sorted in the increasing order, must form an arithmetic progression. Help Jeff, find all x that meet the problem conditions.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105). The next line contains integers a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105). The numbers are separated by spaces.OutputIn the first line print integer t \u2014 the number of valid x. On each of the next t lines print two integers x and px, where x is current suitable value, px is the common difference between numbers in the progression (if x occurs exactly once in the sequence, px must equal 0). Print the pairs in the order of increasing x.ExamplesInputCopy12OutputCopy12 0InputCopy81 2 1 3 1 2 1 5OutputCopy41 22 43 05 0NoteIn the first test 2 occurs exactly once in the sequence, ergo p2\u2009=\u20090."], "Array Sharpening": ["https://codeforces.com/problemset/problem/1291/B", "B. Array Sharpeningtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're given an array a1,\u2026,ana1,\u2026,an of nn non-negative integers.Let's call it sharpened if and only if there exists an integer 1\u2264k\u2264n1\u2264k\u2264n such that a1<a2<\u2026<aka1<a2<\u2026<ak and ak>ak+1>\u2026>anak>ak+1>\u2026>an. In particular, any strictly increasing or strictly decreasing array is sharpened. For example:  The arrays [4][4], [0,1][0,1], [12,10,8][12,10,8] and [3,11,15,9,7,4][3,11,15,9,7,4] are sharpened;  The arrays [2,8,2,8,6,5][2,8,2,8,6,5], [0,1,1,0][0,1,1,0] and [2,5,6,9,8,8][2,5,6,9,8,8] are not sharpened. You can do the following operation as many times as you want: choose any strictly positive element of the array, and decrease it by one. Formally, you can choose any ii (1\u2264i\u2264n1\u2264i\u2264n) such that ai>0ai>0 and assign ai:=ai\u22121ai:=ai\u22121.Tell if it's possible to make the given array sharpened using some number (possibly zero) of these operations.InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u226415\u00a00001\u2264t\u226415\u00a0000) \u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22643\u22c51051\u2264n\u22643\u22c5105).The second line of each test case contains a sequence of nn non-negative integers a1,\u2026,ana1,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases does not exceed 3\u22c51053\u22c5105.OutputFor each test case, output a single line containing \"Yes\" (without quotes) if it's possible to make the given array sharpened using the described operations, or \"No\" (without quotes) otherwise.ExampleInputCopy10\n1\n248618\n3\n12 10 8\n6\n100 11 15 9 7 8\n4\n0 1 1 0\n2\n0 0\n2\n0 1\n2\n1 0\n2\n1 1\n3\n0 1 0\n3\n1 0 1\nOutputCopyYes\nYes\nYes\nNo\nNo\nYes\nYes\nYes\nYes\nNo\nNoteIn the first and the second test case of the first test, the given array is already sharpened.In the third test case of the first test, we can transform the array into [3,11,15,9,7,4][3,11,15,9,7,4] (decrease the first element 9797 times and decrease the last element 44 times). It is sharpened because 3<11<153<11<15 and 15>9>7>415>9>7>4.In the fourth test case of the first test, it's impossible to make the given array sharpened."], "Knapsack": ["https://codeforces.com/problemset/problem/1446/A", "A. Knapsacktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a knapsack with the capacity of WW. There are also nn items, the ii-th one has weight wiwi. You want to put some of these items into the knapsack in such a way that their total weight CC is at least half of its size, but (obviously) does not exceed it. Formally, CC should satisfy: \u2308W2\u2309\u2264C\u2264W\u2308W2\u2309\u2264C\u2264W. Output the list of items you will put into the knapsack or determine that fulfilling the conditions is impossible. If there are several possible lists of items satisfying the conditions, you can output any. Note that you don't have to maximize the sum of weights of items in the knapsack.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104). Description of the test cases follows.The first line of each test case contains integers nn and WW (1\u2264n\u22642000001\u2264n\u2264200000, 1\u2264W\u226410181\u2264W\u22641018). The second line of each test case contains nn integers w1,w2,\u2026,wnw1,w2,\u2026,wn (1\u2264wi\u22641091\u2264wi\u2264109)\u00a0\u2014 weights of the items.The sum of nn over all test cases does not exceed 200000200000.OutputFor each test case, if there is no solution, print a single integer \u22121\u22121. If there exists a solution consisting of mm items, print mm in the first line of the output and mm integers j1j1, j2j2, ..., jmjm (1\u2264ji\u2264n1\u2264ji\u2264n, all jiji are distinct) in the second line of the output \u00a0\u2014 indices of the items you would like to pack into the knapsack.If there are several possible lists of items satisfying the conditions, you can output any. Note that you don't have to maximize the sum of weights items in the knapsack.ExampleInputCopy3\n1 3\n3\n6 2\n19 8 19 69 9 4\n7 12\n1 1 1 17 1 1 1\nOutputCopy1\n1\n-1\n6\n1 2 3 5 6 7NoteIn the first test case, you can take the item of weight 33 and fill the knapsack just right.In the second test case, all the items are larger than the knapsack's capacity. Therefore, the answer is \u22121\u22121.In the third test case, you fill the knapsack exactly in half."], "Long Number": ["https://codeforces.com/problemset/problem/1157/B", "B. Long Numbertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a long decimal number aa consisting of nn digits from 11 to 99. You also have a function ff that maps every digit from 11 to 99 to some (possibly the same) digit from 11 to 99.You can perform the following operation no more than once: choose a non-empty contiguous subsegment of digits in aa, and replace each digit xx from this segment with f(x)f(x). For example, if a=1337a=1337, f(1)=1f(1)=1, f(3)=5f(3)=5, f(7)=3f(7)=3, and you choose the segment consisting of three rightmost digits, you get 15531553 as the result.What is the maximum possible number you can obtain applying this operation no more than once?InputThe first line contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of digits in aa.The second line contains a string of nn characters, denoting the number aa. Each character is a decimal digit from 11 to 99.The third line contains exactly 99 integers f(1)f(1), f(2)f(2), ..., f(9)f(9) (1\u2264f(i)\u226491\u2264f(i)\u22649).OutputPrint the maximum number you can get after applying the operation described in the statement no more than once.ExamplesInputCopy4\n1337\n1 2 5 4 6 6 3 1 9\nOutputCopy1557\nInputCopy5\n11111\n9 8 7 6 5 4 3 2 1\nOutputCopy99999\nInputCopy2\n33\n1 1 1 1 1 1 1 1 1\nOutputCopy33\n"], "Lose it!": ["https://codeforces.com/problemset/problem/1176/C", "C. Lose it!time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn integers. Each aiai is one of the six following numbers: 4,8,15,16,23,424,8,15,16,23,42.Your task is to remove the minimum number of elements to make this array good.An array of length kk is called good if kk is divisible by 66 and it is possible to split it into k6k6 subsequences 4,8,15,16,23,424,8,15,16,23,42.Examples of good arrays:  [4,8,15,16,23,42][4,8,15,16,23,42] (the whole array is a required sequence);  [4,8,4,15,16,8,23,15,16,42,23,42][4,8,4,15,16,8,23,15,16,42,23,42] (the first sequence is formed from first, second, fourth, fifth, seventh and tenth elements and the second one is formed from remaining elements);  [][] (the empty array is good). Examples of bad arrays:   [4,8,15,16,42,23][4,8,15,16,42,23] (the order of elements should be exactly 4,8,15,16,23,424,8,15,16,23,42);  [4,8,15,16,23,42,4][4,8,15,16,23,42,4] (the length of the array is not divisible by 66);  [4,8,15,16,23,42,4,8,15,16,23,23][4,8,15,16,23,42,4,8,15,16,23,23] (the first sequence can be formed from first six elements but the remaining array cannot form the required sequence). InputThe first line of the input contains one integer nn (1\u2264n\u22645\u22c51051\u2264n\u22645\u22c5105) \u2014 the number of elements in aa.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (each aiai is one of the following numbers: 4,8,15,16,23,424,8,15,16,23,42), where aiai is the ii-th element of aa.OutputPrint one integer \u2014 the minimum number of elements you have to remove to obtain a good array.ExamplesInputCopy5\n4 8 15 16 23\nOutputCopy5\nInputCopy12\n4 8 4 15 16 8 23 15 16 42 23 42\nOutputCopy0\nInputCopy15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\nOutputCopy3\n"], "Good Array": ["https://codeforces.com/problemset/problem/1077/C", "C. Good Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call an array good if there is an element in the array that equals to the sum of all other elements. For example, the array a=[1,3,3,7]a=[1,3,3,7] is good because there is the element a4=7a4=7 which equals to the sum 1+3+31+3+3.You are given an array aa consisting of nn integers. Your task is to print all indices jj of this array such that after removing the jj-th element from the array it will be good (let's call such indices nice).For example, if a=[8,3,5,2]a=[8,3,5,2], the nice indices are 11 and 44:   if you remove a1a1, the array will look like [3,5,2][3,5,2] and it is good;  if you remove a4a4, the array will look like [8,3,5][8,3,5] and it is good. You have to consider all removals independently, i.\u2009e. remove the element, check if the resulting array is good, and return the element into the array.InputThe first line of the input contains one integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the number of elements in the array aa.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641061\u2264ai\u2264106) \u2014 elements of the array aa.OutputIn the first line print one integer kk \u2014 the number of indices jj of the array aa such that after removing the jj-th element from the array it will be good (i.e. print the number of the nice indices).In the second line print kk distinct integers j1,j2,\u2026,jkj1,j2,\u2026,jk in any order \u2014 nice indices of the array aa.If there are no such indices in the array aa, just print 00 in the first line and leave the second line empty or do not print it at all.ExamplesInputCopy5\n2 5 1 2 2\nOutputCopy3\n4 1 5InputCopy4\n8 3 5 2\nOutputCopy2\n1 4 \nInputCopy5\n2 1 2 4 3\nOutputCopy0\n\nNoteIn the first example you can remove any element with the value 22 so the array will look like [5,1,2,2][5,1,2,2]. The sum of this array is 1010 and there is an element equals to the sum of remaining elements (5=1+2+25=1+2+2).In the second example you can remove 88 so the array will look like [3,5,2][3,5,2]. The sum of this array is 1010 and there is an element equals to the sum of remaining elements (5=3+25=3+2). You can also remove 22 so the array will look like [8,3,5][8,3,5]. The sum of this array is 1616 and there is an element equals to the sum of remaining elements (8=3+58=3+5).In the third example you cannot make the given array good by removing exactly one element."], "Verse For Santa": ["https://codeforces.com/problemset/problem/1279/B", "B. Verse For Santatime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNew Year is coming! Vasya has prepared a New Year's verse and wants to recite it in front of Santa Claus.Vasya's verse contains nn parts. It takes aiai seconds to recite the ii-th part. Vasya can't change the order of parts in the verse: firstly he recites the part which takes a1a1 seconds, secondly \u2014 the part which takes a2a2 seconds, and so on. After reciting the verse, Vasya will get the number of presents equal to the number of parts he fully recited.Vasya can skip at most one part of the verse while reciting it (if he skips more than one part, then Santa will definitely notice it).Santa will listen to Vasya's verse for no more than ss seconds. For example, if s=10s=10, a=[100,9,1,1]a=[100,9,1,1], and Vasya skips the first part of verse, then he gets two presents.Note that it is possible to recite the whole verse (if there is enough time). Determine which part Vasya needs to skip to obtain the maximum possible number of gifts. If Vasya shouldn't skip anything, print 0. If there are multiple answers, print any of them.You have to process tt test cases.InputThe first line contains one integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.The first line of each test case contains two integers nn and ss (1\u2264n\u2264105,1\u2264s\u22641091\u2264n\u2264105,1\u2264s\u2264109) \u2014 the number of parts in the verse and the maximum number of seconds Santa will listen to Vasya, respectively.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 the time it takes to recite each part of the verse.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case print one integer \u2014 the number of the part that Vasya needs to skip to obtain the maximum number of gifts. If Vasya shouldn't skip any parts, print 0.ExampleInputCopy3\n7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5\nOutputCopy2\n1\n0\nNoteIn the first test case if Vasya skips the second part then he gets three gifts.In the second test case no matter what part of the verse Vasya skips.In the third test case Vasya can recite the whole verse."], "Balanced Tunnel": ["https://codeforces.com/problemset/problem/1237/B", "B. Balanced Tunneltime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputConsider a tunnel on a one-way road. During a particular day, nn cars numbered from 11 to nn entered and exited the tunnel exactly once. All the cars passed through the tunnel at constant speeds.A traffic enforcement camera is mounted at the tunnel entrance. Another traffic enforcement camera is mounted at the tunnel exit. Perfectly balanced.Thanks to the cameras, the order in which the cars entered and exited the tunnel is known. No two cars entered or exited at the same time.Traffic regulations prohibit overtaking inside the tunnel. If car ii overtakes any other car jj inside the tunnel, car ii must be fined. However, each car can be fined at most once.Formally, let's say that car ii definitely overtook car jj if car ii entered the tunnel later than car jj and exited the tunnel earlier than car jj. Then, car ii must be fined if and only if it definitely overtook at least one other car.Find the number of cars that must be fined. InputThe first line contains a single integer nn (2\u2264n\u22641052\u2264n\u2264105), denoting the number of cars.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n), denoting the ids of cars in order of entering the tunnel. All aiai are pairwise distinct.The third line contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u2264n1\u2264bi\u2264n), denoting the ids of cars in order of exiting the tunnel. All bibi are pairwise distinct.OutputOutput the number of cars to be fined.ExamplesInputCopy5\n3 5 2 1 4\n4 3 2 5 1\nOutputCopy2\nInputCopy7\n5 2 3 6 7 1 4\n2 3 6 7 1 4 5\nOutputCopy6\nInputCopy2\n1 2\n1 2\nOutputCopy0\nNoteThe first example is depicted below:Car 22 definitely overtook car 55, while car 44 definitely overtook cars 11, 22, 33 and 55. Cars 22 and 44 must be fined.In the second example car 55 was definitely overtaken by all other cars.In the third example no car must be fined."], "Cow and Friend": ["https://codeforces.com/problemset/problem/1307/B", "B. Cow and Friendtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBessie has way too many friends because she is everyone's favorite cow! Her new friend Rabbit is trying to hop over so they can play! More specifically, he wants to get from (0,0)(0,0) to (x,0)(x,0) by making multiple hops. He is only willing to hop from one point to another point on the 2D plane if the Euclidean distance between the endpoints of a hop is one of its nn favorite numbers: a1,a2,\u2026,ana1,a2,\u2026,an. What is the minimum number of hops Rabbit needs to get from (0,0)(0,0) to (x,0)(x,0)? Rabbit may land on points with non-integer coordinates. It can be proved that Rabbit can always reach his destination.Recall that the Euclidean distance between points (xi,yi)(xi,yi) and (xj,yj)(xj,yj) is (xi\u2212xj)2+(yi\u2212yj)2\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u221a(xi\u2212xj)2+(yi\u2212yj)2.For example, if Rabbit has favorite numbers 11 and 33 he could hop from (0,0)(0,0) to (4,0)(4,0) in two hops as shown below. Note that there also exists other valid ways to hop to (4,0)(4,0) in 22 hops (e.g. (0,0)(0,0) \u2192\u2192 (2,\u22125\u2013\u221a)(2,\u22125) \u2192\u2192 (4,0)(4,0)).  Here is a graphic for the first example. Both hops have distance 33, one of Rabbit's favorite numbers. In other words, each time Rabbit chooses some number aiai and hops with distance equal to aiai in any direction he wants. The same number can be used multiple times.InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000) \u00a0\u2014 the number of test cases. Next 2t2t lines contain test cases \u2014 two lines per test case.The first line of each test case contains two integers nn and xx (1\u2264n\u22641051\u2264n\u2264105, 1\u2264x\u22641091\u2264x\u2264109) \u00a0\u2014 the number of favorite numbers and the distance Rabbit wants to travel, respectively.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u00a0\u2014 Rabbit's favorite numbers. It is guaranteed that the favorite numbers are distinct.It is guaranteed that the sum of nn over all the test cases will not exceed 105105.OutputFor each test case, print a single integer\u00a0\u2014 the minimum number of hops needed.ExampleInputCopy4\n2 4\n1 3\n3 12\n3 4 5\n1 5\n5\n2 10\n15 4\nOutputCopy2\n3\n1\n2\nNoteThe first test case of the sample is shown in the picture above. Rabbit can hop to (2,5\u2013\u221a)(2,5), then to (4,0)(4,0) for a total of two hops. Each hop has a distance of 33, which is one of his favorite numbers.In the second test case of the sample, one way for Rabbit to hop 33 times is: (0,0)(0,0) \u2192\u2192 (4,0)(4,0) \u2192\u2192 (8,0)(8,0) \u2192\u2192 (12,0)(12,0).In the third test case of the sample, Rabbit can hop from (0,0)(0,0) to (5,0)(5,0).In the fourth test case of the sample, Rabbit can hop: (0,0)(0,0) \u2192\u2192 (5,102\u2013\u221a)(5,102) \u2192\u2192 (10,0)(10,0)."], "Move and Turn": ["https://codeforces.com/problemset/problem/1459/B", "B. Move and Turntime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputA robot is standing at the origin of the infinite two-dimensional plane. Each second the robot moves exactly 11 meter in one of the four cardinal directions: north, south, west, and east. For the first step the robot can choose any of the four directions, but then at the end of every second it has to turn 90 degrees left or right with respect to the direction it just moved in. For example, if the robot has just moved north or south, the next step it takes has to be either west or east, and vice versa.The robot makes exactly nn steps from its starting position according to the rules above. How many different points can the robot arrive to at the end? The final orientation of the robot can be ignored.InputThe only line contains a single integer nn (1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the number of steps the robot makes.OutputPrint a single integer\u00a0\u2014 the number of different possible locations after exactly nn steps.ExamplesInputCopy1\nOutputCopy4\nInputCopy2\nOutputCopy4\nInputCopy3\nOutputCopy12\nNoteIn the first sample case, the robot will end up 1 meter north, south, west, or east depending on its initial direction.In the second sample case, the robot will always end up 2\u2013\u221a2 meters north-west, north-east, south-west, or south-east."], "Kill `Em All": ["https://codeforces.com/problemset/problem/1238/B", "B. Kill 'Em Alltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIvan plays an old action game called Heretic. He's stuck on one of the final levels of this game, so he needs some help with killing the monsters.The main part of the level is a large corridor (so large and narrow that it can be represented as an infinite coordinate line). The corridor is divided into two parts; let's assume that the point x=0x=0 is where these parts meet.The right part of the corridor is filled with nn monsters \u2014 for each monster, its initial coordinate xixi is given (and since all monsters are in the right part, every xixi is positive).The left part of the corridor is filled with crusher traps. If some monster enters the left part of the corridor or the origin (so, its current coordinate becomes less than or equal to 00), it gets instantly killed by a trap.The main weapon Ivan uses to kill the monsters is the Phoenix Rod. It can launch a missile that explodes upon impact, obliterating every monster caught in the explosion and throwing all other monsters away from the epicenter. Formally, suppose that Ivan launches a missile so that it explodes in the point cc. Then every monster is either killed by explosion or pushed away. Let some monster's current coordinate be yy, then:  if c=yc=y, then the monster is killed;  if y<cy<c, then the monster is pushed rr units to the left, so its current coordinate becomes y\u2212ry\u2212r;  if y>cy>c, then the monster is pushed rr units to the right, so its current coordinate becomes y+ry+r. Ivan is going to kill the monsters as follows: choose some integer point dd and launch a missile into that point, then wait until it explodes and all the monsters which are pushed to the left part of the corridor are killed by crusher traps, then, if at least one monster is still alive, choose another integer point (probably the one that was already used) and launch a missile there, and so on.What is the minimum number of missiles Ivan has to launch in order to kill all of the monsters? You may assume that every time Ivan fires the Phoenix Rod, he chooses the impact point optimally.You have to answer qq independent queries.InputThe first line contains one integer qq (1\u2264q\u22641051\u2264q\u2264105) \u2014 the number of queries.The first line of each query contains two integers nn and rr (1\u2264n,r\u22641051\u2264n,r\u2264105)\u00a0\u2014 the number of enemies and the distance that the enemies are thrown away from the epicenter of the explosion.The second line of each query contains nn integers xixi (1\u2264xi\u22641051\u2264xi\u2264105)\u00a0\u2014 the initial positions of the monsters.It is guaranteed that sum of all nn over all queries does not exceed 105105.OutputFor each query print one integer\u00a0\u2014 the minimum number of shots from the Phoenix Rod required to kill all monsters.ExampleInputCopy2\n3 2\n1 3 5\n4 1\n5 2 3 5\nOutputCopy2\n2\nNoteIn the first test case, Ivan acts as follows:   choose the point 33, the first monster dies from a crusher trap at the point \u22121\u22121, the second monster dies from the explosion, the third monster is pushed to the point 77;  choose the point 77, the third monster dies from the explosion. In the second test case, Ivan acts as follows:   choose the point 55, the first and fourth monsters die from the explosion, the second monster is pushed to the point 11, the third monster is pushed to the point 22;  choose the point 22, the first monster dies from a crusher trap at the point 00, the second monster dies from the explosion. "], "Duff in Love": ["https://codeforces.com/problemset/problem/588/B", "B. Duff in Lovetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDuff is in love with lovely numbers! A positive integer x is called lovely if and only if there is no such positive integer a\u2009>\u20091 such that a2 is a divisor of x.  Malek has a number store! In his store, he has only divisors of positive integer n (and he has all of them). As a birthday present, Malek wants to give her a lovely number from his store. He wants this number to be as big as possible.Malek always had issues in math, so he asked for your help. Please tell him what is the biggest lovely number in his store.InputThe first and only line of input contains one integer, n (1\u2009\u2264\u2009n\u2009\u2264\u20091012).OutputPrint the answer in one line.ExamplesInputCopy10OutputCopy10InputCopy12OutputCopy6NoteIn first sample case, there are numbers 1, 2, 5 and 10 in the shop. 10 isn't divisible by any perfect square, so 10 is lovely.In second sample case, there are numbers 1, 2, 3, 4, 6 and 12 in the shop. 12 is divisible by 4\u2009=\u200922, so 12 is not lovely, while 6 is indeed lovely."], "And It's Non-Zero": ["https://codeforces.com/problemset/problem/1615/B", "B. And It's Non-Zerotime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array consisting of all integers from [l,r][l,r] inclusive. For example, if l=2l=2 and r=5r=5, the array would be [2,3,4,5][2,3,4,5]. What's the minimum number of elements you can delete to make the bitwise AND of the array non-zero?A bitwise AND is a binary operation that takes two equal-length binary representations and performs the AND operation on each pair of the corresponding bits.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Then tt cases follow.The first line of each test case contains two integers ll and rr (1\u2264l\u2264r\u22642\u22c51051\u2264l\u2264r\u22642\u22c5105)\u00a0\u2014 the description of the array.OutputFor each test case, output a single integer\u00a0\u2014 the answer to the problem.ExampleInputCopy5\n1 2\n2 8\n4 5\n1 5\n100000 200000\nOutputCopy1\n3\n0\n2\n31072\nNoteIn the first test case, the array is [1,2][1,2]. Currently, the bitwise AND is 00, as 1\u00a0&\u00a02=01\u00a0&\u00a02=0. However, after deleting 11 (or 22), the array becomes [2][2] (or [1][1]), and the bitwise AND becomes 22 (or 11). This can be proven to be the optimal, so the answer is 11.In the second test case, the array is [2,3,4,5,6,7,8][2,3,4,5,6,7,8]. Currently, the bitwise AND is 00. However, after deleting 44, 55, and 88, the array becomes [2,3,6,7][2,3,6,7], and the bitwise AND becomes 22. This can be proven to be the optimal, so the answer is 33. Note that there may be other ways to delete 33 elements."], "Mahmoud and Ehab and the bipartiteness": ["https://codeforces.com/problemset/problem/862/B", "B. Mahmoud and Ehab and the bipartitenesstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMahmoud and Ehab continue their adventures! As everybody in the evil land knows, Dr. Evil likes bipartite graphs, especially trees.A tree is a connected acyclic graph. A bipartite graph is a graph, whose vertices can be partitioned into 2 sets in such a way, that for each edge (u,\u2009v) that belongs to the graph, u and v belong to different sets. You can find more formal definitions of a tree and a bipartite graph in the notes section below.Dr. Evil gave Mahmoud and Ehab a tree consisting of n nodes and asked them to add edges to it in such a way, that the graph is still bipartite. Besides, after adding these edges the graph should be simple (doesn't contain loops or multiple edges). What is the maximum number of edges they can add?A loop is an edge, which connects a node with itself. Graph doesn't contain multiple edges when for each pair of nodes there is no more than one edge between them. A cycle and a loop aren't the same .InputThe first line of input contains an integer n\u00a0\u2014 the number of nodes in the tree (1\u2009\u2264\u2009n\u2009\u2264\u2009105).The next n\u2009-\u20091 lines contain integers u and v (1\u2009\u2264\u2009u,\u2009v\u2009\u2264\u2009n, u\u2009\u2260\u2009v)\u00a0\u2014 the description of the edges of the tree.It's guaranteed that the given graph is a tree. OutputOutput one integer\u00a0\u2014 the maximum number of edges that Mahmoud and Ehab can add to the tree while fulfilling the conditions.ExamplesInputCopy31 21 3OutputCopy0InputCopy51 22 33 44 5OutputCopy2NoteTree definition: https://en.wikipedia.org/wiki/Tree_(graph_theory)Bipartite graph definition: https://en.wikipedia.org/wiki/Bipartite_graphIn the first test case the only edge that can be added in such a way, that graph won't contain loops or multiple edges is (2,\u20093), but adding this edge will make the graph non-bipartite so the answer is 0.In the second test case Mahmoud and Ehab can add edges (1,\u20094) and (2,\u20095). "], "Inversion Graph": ["https://codeforces.com/problemset/problem/1638/C", "C. Inversion Graphtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a permutation p1,p2,\u2026,pnp1,p2,\u2026,pn. Then, an undirected graph is constructed in the following way: add an edge between vertices ii, jj such that i<ji<j if and only if pi>pjpi>pj. Your task is to count the number of connected components in this graph.Two vertices uu and vv belong to the same connected component if and only if there is at least one path along edges connecting uu and vv.A permutation is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array) and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u22641051\u2264t\u2264105)\u00a0\u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the length of the permutation.The second line of each test case contains nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n)\u00a0\u2014 the elements of the permutation.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print one integer kk\u00a0\u2014 the number of connected components.ExampleInputCopy6\n3\n1 2 3\n5\n2 1 4 3 5\n6\n6 1 4 2 5 3\n1\n1\n6\n3 2 1 6 5 4\n5\n3 1 5 2 4\nOutputCopy3\n3\n1\n1\n2\n1\nNoteEach separate test case is depicted in the image below. The colored squares represent the elements of the permutation. For one permutation, each color represents some connected component. The number of distinct colors is the answer.  "], "Bakery": ["https://codeforces.com/problemset/problem/707/B", "B. Bakerytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMasha wants to open her own bakery and bake muffins in one of the n cities numbered from 1 to n. There are m bidirectional roads, each of whose connects some pair of cities.To bake muffins in her bakery, Masha needs to establish flour supply from some storage. There are only k storages, located in different cities numbered a1,\u2009a2,\u2009...,\u2009ak.Unforunately the law of the country Masha lives in prohibits opening bakery in any of the cities which has storage located in it. She can open it only in one of another n\u2009-\u2009k cities, and, of course, flour delivery should be paid\u00a0\u2014 for every kilometer of path between storage and bakery Masha should pay 1 ruble.Formally, Masha will pay x roubles, if she will open the bakery in some city b (ai\u2009\u2260\u2009b for every 1\u2009\u2264\u2009i\u2009\u2264\u2009k) and choose a storage in some city s (s\u2009=\u2009aj for some 1\u2009\u2264\u2009j\u2009\u2264\u2009k) and b and s are connected by some path of roads of summary length x (if there are more than one path, Masha is able to choose which of them should be used).Masha is very thrifty and rational. She is interested in a city, where she can open her bakery (and choose one of k storages and one of the paths between city with bakery and city with storage) and pay minimum possible amount of rubles for flour delivery. Please help Masha find this amount.InputThe first line of the input contains three integers n, m and k (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105, 0\u2009\u2264\u2009k\u2009\u2264\u2009n)\u00a0\u2014 the number of cities in country Masha lives in, the number of roads between them and the number of flour storages respectively.Then m lines follow. Each of them contains three integers u, v and l (1\u2009\u2264\u2009u,\u2009v\u2009\u2264\u2009n, 1\u2009\u2264\u2009l\u2009\u2264\u2009109, u\u2009\u2260\u2009v) meaning that there is a road between cities u and v of length of l kilometers .If k\u2009>\u20090, then the last line of the input contains k distinct integers a1,\u2009a2,\u2009...,\u2009ak (1\u2009\u2264\u2009ai\u2009\u2264\u2009n)\u00a0\u2014 the number of cities having flour storage located in. If k\u2009=\u20090 then this line is not presented in the input.OutputPrint the minimum possible amount of rubles Masha should pay for flour delivery in the only line.If the bakery can not be opened (while satisfying conditions) in any of the n cities, print \u2009-\u20091 in the only line.ExamplesInputCopy5 4 21 2 51 2 32 3 41 4 101 5OutputCopy3InputCopy3 1 11 2 33OutputCopy-1NoteImage illustrates the first sample case. Cities with storage located in and the road representing the answer are darkened. "], "Equator": ["https://codeforces.com/problemset/problem/962/A", "A. Equatortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has created his own training plan to prepare for the programming contests. He will train for nn days, all days are numbered from 11 to nn, beginning from the first.On the ii-th day Polycarp will necessarily solve aiai problems. One evening Polycarp plans to celebrate the equator. He will celebrate it on the first evening of such a day that from the beginning of the training and to this day inclusive he will solve half or more of all the problems.Determine the index of day when Polycarp will celebrate the equator.InputThe first line contains a single integer nn (1\u2264n\u22642000001\u2264n\u2264200000) \u2014 the number of days to prepare for the programming contests.The second line contains a sequence a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264100001\u2264ai\u226410000), where aiai equals to the number of problems, which Polycarp will solve on the ii-th day.OutputPrint the index of the day when Polycarp will celebrate the equator.ExamplesInputCopy41 3 2 1OutputCopy2InputCopy62 2 2 2 2 2OutputCopy3NoteIn the first example Polycarp will celebrate the equator on the evening of the second day, because up to this day (inclusive) he will solve 44 out of 77 scheduled problems on four days of the training.In the second example Polycarp will celebrate the equator on the evening of the third day, because up to this day (inclusive) he will solve 66 out of 1212 scheduled problems on six days of the training."], "Reverse String": ["https://codeforces.com/problemset/problem/1553/B", "B. Reverse Stringtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a string ss and a chip, which you can place onto any character of this string. After placing the chip, you move it to the right several (maybe zero) times, i.\u00a0e. you perform the following operation several times: if the current position of the chip is ii, you move it to the position i+1i+1. Of course, moving the chip to the right is impossible if it is already in the last position.After moving the chip to the right, you move it to the left several (maybe zero) times, i.\u00a0e. you perform the following operation several times: if the current position of the chip is ii, you move it to the position i\u22121i\u22121. Of course, moving the chip to the left is impossible if it is already in the first position.When you place a chip or move it, you write down the character where the chip ends up after your action. For example, if ss is abcdef, you place the chip onto the 33-rd character, move it to the right 22 times and then move it to the left 33 times, you write down the string cdedcb.You are given two strings ss and tt. Your task is to determine whether it's possible to perform the described operations with ss so that you write down the string tt as a result.InputThe first line contains one integer qq (1\u2264q\u22645001\u2264q\u2264500) \u2014 the number of test cases.Each test case consists of two lines. The first line contains the string ss (1\u2264|s|\u22645001\u2264|s|\u2264500), the second line contains the string tt (1\u2264|t|\u22642\u22c5|s|\u221211\u2264|t|\u22642\u22c5|s|\u22121). Both strings consist of lowercase English characters.It is guaranteed that the sum of |s||s| over all test cases does not exceed 500500.OutputFor each test case, print \"YES\" if you can obtain the string tt by performing the process mentioned in the statement with the string ss, or \"NO\" if you cannot.You may print each letter in any case (YES, yes, Yes will all be recognized as positive answer, NO, no and nO will all be recognized as negative answer).ExampleInputCopy6\nabcdef\ncdedcb\naaa\naaaaa\naab\nbaaa\nab\nb\nabcdef\nabcdef\nba\nbaa\nOutputCopyYES\nYES\nNO\nYES\nYES\nNO\nNoteConsider the examples.The first test case is described in the statement.In the second test case, you can place the chip on the 11-st position, move it twice to the right, and then move it twice to the left.In the fourth test case, you can place the chip on the 22-nd position, and then don't move it at all.In the fifth test case, you can place the chip on the 11-st position, move it 55 times to the right, and then finish the process."], "Unusual Competitions": ["https://codeforces.com/problemset/problem/1322/A", "A. Unusual Competitionstime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputA bracketed sequence is called correct (regular) if by inserting \"+\" and \"1\" you can get a well-formed mathematical expression from it. For example, sequences \"(())()\", \"()\" and \"(()(()))\" are correct, while \")(\", \"(()\" and \"(()))(\" are not.The teacher gave Dmitry's class a very strange task\u00a0\u2014 she asked every student to come up with a sequence of arbitrary length, consisting only of opening and closing brackets. After that all the students took turns naming the sequences they had invented. When Dima's turn came, he suddenly realized that all his classmates got the correct bracketed sequence, and whether he got the correct bracketed sequence, he did not know.Dima suspects now that he simply missed the word \"correct\" in the task statement, so now he wants to save the situation by modifying his sequence slightly. More precisely, he can the arbitrary number of times (possibly zero) perform the reorder operation.The reorder operation consists of choosing an arbitrary consecutive subsegment (substring) of the sequence and then reordering all the characters in it in an arbitrary way. Such operation takes ll nanoseconds, where ll is the length of the subsegment being reordered. It's easy to see that reorder operation doesn't change the number of opening and closing brackets. For example for \"))((\" he can choose the substring \")(\" and do reorder \")()(\" (this operation will take 22 nanoseconds).Since Dima will soon have to answer, he wants to make his sequence correct as fast as possible. Help him to do this, or determine that it's impossible.InputThe first line contains a single integer nn (1\u2264n\u22641061\u2264n\u2264106)\u00a0\u2014 the length of Dima's sequence.The second line contains string of length nn, consisting of characters \"(\" and \")\" only.OutputPrint a single integer\u00a0\u2014 the minimum number of nanoseconds to make the sequence correct or \"-1\" if it is impossible to do so.ExamplesInputCopy8\n))((())(\nOutputCopy6\nInputCopy3\n(()\nOutputCopy-1\nNoteIn the first example we can firstly reorder the segment from first to the fourth character, replacing it with \"()()\", the whole sequence will be \"()()())(\". And then reorder the segment from the seventh to eighth character, replacing it with \"()\". In the end the sequence will be \"()()()()\", while the total time spent is 4+2=64+2=6 nanoseconds."], "WOW Factor": ["https://codeforces.com/problemset/problem/1178/B", "B. WOW Factortime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecall that string aa is a subsequence of a string bb if aa can be obtained from bb by deletion of several (possibly zero or all) characters. For example, for the string aa=\"wowwo\", the following strings are subsequences: \"wowwo\", \"wowo\", \"oo\", \"wow\", \"\", and others, but the following are not subsequences: \"owoo\", \"owwwo\", \"ooo\".The wow factor of a string is the number of its subsequences equal to the word \"wow\". Bob wants to write a string that has a large wow factor. However, the \"w\" key on his keyboard is broken, so he types two \"v\"s instead. Little did he realise that he may have introduced more \"w\"s than he thought. Consider for instance the string \"ww\". Bob would type it as \"vvvv\", but this string actually contains three occurrences of \"w\":   \"vvvv\"  \"vvvv\"  \"vvvv\" For example, the wow factor of the word \"vvvovvv\" equals to four because there are four wows:  \"vvvovvv\"  \"vvvovvv\"  \"vvvovvv\"  \"vvvovvv\" Note that the subsequence \"vvvovvv\" does not count towards the wow factor, as the \"v\"s have to be consecutive.For a given string ss, compute and output its wow factor. Note that it is not guaranteed that it is possible to get ss from another string replacing \"w\" with \"vv\". For example, ss can be equal to \"vov\".InputThe input contains a single non-empty string ss, consisting only of characters \"v\" and \"o\". The length of ss is at most 106106.OutputOutput a single integer, the wow factor of ss.ExamplesInputCopyvvvovvv\nOutputCopy4\nInputCopyvvovooovovvovoovoovvvvovovvvov\nOutputCopy100\nNoteThe first example is explained in the legend."], "From S To T": ["https://codeforces.com/problemset/problem/1194/C", "C. From S To Ttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given three strings ss, tt and pp consisting of lowercase Latin letters. You may perform any number (possibly, zero) operations on these strings.During each operation you choose any character from pp, erase it from pp and insert it into string ss (you may insert this character anywhere you want: in the beginning of ss, in the end or between any two consecutive characters). For example, if pp is aba, and ss is de, then the following outcomes are possible (the character we erase from pp and insert into ss is highlighted):  aba \u2192\u2192 ba, de \u2192\u2192 ade;  aba \u2192\u2192 ba, de \u2192\u2192 dae;  aba \u2192\u2192 ba, de \u2192\u2192 dea;  aba \u2192\u2192 aa, de \u2192\u2192 bde;  aba \u2192\u2192 aa, de \u2192\u2192 dbe;  aba \u2192\u2192 aa, de \u2192\u2192 deb;  aba \u2192\u2192 ab, de \u2192\u2192 ade;  aba \u2192\u2192 ab, de \u2192\u2192 dae;  aba \u2192\u2192 ab, de \u2192\u2192 dea; Your goal is to perform several (maybe zero) operations so that ss becomes equal to tt. Please determine whether it is possible.Note that you have to answer qq independent queries.InputThe first line contains one integer qq (1\u2264q\u22641001\u2264q\u2264100) \u2014 the number of queries. Each query is represented by three consecutive lines.The first line of each query contains the string ss (1\u2264|s|\u22641001\u2264|s|\u2264100) consisting of lowercase Latin letters.The second line of each query contains the string tt (1\u2264|t|\u22641001\u2264|t|\u2264100) consisting of lowercase Latin letters.The third line of each query contains the string pp (1\u2264|p|\u22641001\u2264|p|\u2264100) consisting of lowercase Latin letters.OutputFor each query print YES if it is possible to make ss equal to tt, and NO otherwise.You may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).ExampleInputCopy4\nab\nacxb\ncax\na\naaaa\naaabbcc\na\naaaa\naabbcc\nab\nbaaa\naaaaa\nOutputCopyYES\nYES\nNO\nNO\nNoteIn the first test case there is the following sequence of operation:   s=s= ab, t=t= acxb, p=p= cax;  s=s= acb, t=t= acxb, p=p= ax;  s=s= acxb, t=t= acxb, p=p= a. In the second test case there is the following sequence of operation:   s=s= a, t=t= aaaa, p=p= aaabbcc;  s=s= aa, t=t= aaaa, p=p= aabbcc;  s=s= aaa, t=t= aaaa, p=p= abbcc;  s=s= aaaa, t=t= aaaa, p=p= bbcc. "], "Appleman and Card Game": ["https://codeforces.com/problemset/problem/462/B", "B. Appleman and Card Gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAppleman has n cards. Each card has an uppercase letter written on it. Toastman must choose k cards from Appleman's cards. Then Appleman should give Toastman some coins depending on the chosen cards. Formally, for each Toastman's card i you should calculate how much Toastman's cards have the letter equal to letter on ith, then sum up all these quantities, such a number of coins Appleman should give to Toastman.Given the description of Appleman's cards. What is the maximum number of coins Toastman can get?InputThe first line contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009105). The next line contains n uppercase letters without spaces \u2014 the i-th letter describes the i-th card of the Appleman.OutputPrint a single integer \u2013 the answer to the problem.ExamplesInputCopy15 10DZFDFZDFDDDDDDFOutputCopy82InputCopy6 4YJSNPIOutputCopy4NoteIn the first test example Toastman can choose nine cards with letter D and one additional card with any letter. For each card with D he will get 9 coins and for the additional card he will get 1 coin."], "Getting Zero": ["https://codeforces.com/problemset/problem/1661/B", "B. Getting Zerotime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSuppose you have an integer vv. In one operation, you can:   either set v=(v+1)mod32768v=(v+1)mod32768  or set v=(2\u22c5v)mod32768v=(2\u22c5v)mod32768. You are given nn integers a1,a2,\u2026,ana1,a2,\u2026,an. What is the minimum number of operations you need to make each aiai equal to 00?InputThe first line contains the single integer nn (1\u2264n\u2264327681\u2264n\u226432768)\u00a0\u2014 the number of integers.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai<327680\u2264ai<32768).OutputPrint nn integers. The ii-th integer should be equal to the minimum number of operations required to make aiai equal to 00.ExampleInputCopy4\n19 32764 10240 49\nOutputCopy14 4 4 15 NoteLet's consider each aiai:   a1=19a1=19. You can, firstly, increase it by one to get 2020 and then multiply it by two 1313 times. You'll get 00 in 1+13=141+13=14 steps.  a2=32764a2=32764. You can increase it by one 44 times: 32764\u219232765\u219232766\u219232767\u2192032764\u219232765\u219232766\u219232767\u21920.  a3=10240a3=10240. You can multiply it by two 44 times: 10240\u219220480\u21928192\u219216384\u2192010240\u219220480\u21928192\u219216384\u21920.  a4=49a4=49. You can multiply it by two 1515 times. "], "Beautiful Numbers": ["https://codeforces.com/problemset/problem/1265/B", "B. Beautiful Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a permutation p=[p1,p2,\u2026,pn]p=[p1,p2,\u2026,pn] of integers from 11 to nn. Let's call the number mm (1\u2264m\u2264n1\u2264m\u2264n) beautiful, if there exists two indices l,rl,r (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n), such that the numbers [pl,pl+1,\u2026,pr][pl,pl+1,\u2026,pr] is a permutation of numbers 1,2,\u2026,m1,2,\u2026,m.For example, let p=[4,5,1,3,2,6]p=[4,5,1,3,2,6]. In this case, the numbers 1,3,5,61,3,5,6 are beautiful and 2,42,4 are not. It is because:  if l=3l=3 and r=3r=3 we will have a permutation [1][1] for m=1m=1;  if l=3l=3 and r=5r=5 we will have a permutation [1,3,2][1,3,2] for m=3m=3;  if l=1l=1 and r=5r=5 we will have a permutation [4,5,1,3,2][4,5,1,3,2] for m=5m=5;  if l=1l=1 and r=6r=6 we will have a permutation [4,5,1,3,2,6][4,5,1,3,2,6] for m=6m=6;  it is impossible to take some ll and rr, such that [pl,pl+1,\u2026,pr][pl,pl+1,\u2026,pr] is a permutation of numbers 1,2,\u2026,m1,2,\u2026,m for m=2m=2 and for m=4m=4. You are given a permutation p=[p1,p2,\u2026,pn]p=[p1,p2,\u2026,pn]. For all mm (1\u2264m\u2264n1\u2264m\u2264n) determine if it is a beautiful number or not.InputThe first line contains the only integer tt (1\u2264t\u226410001\u2264t\u22641000) \u00a0\u2014 the number of test cases in the input. The next lines contain the description of test cases.The first line of a test case contains a number nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the length of the given permutation pp. The next line contains nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n, all pipi are different)\u00a0\u2014 the given permutation pp.It is guaranteed, that the sum of nn from all test cases in the input doesn't exceed 2\u22c51052\u22c5105.OutputPrint tt lines\u00a0\u2014 the answers to test cases in the order they are given in the input. The answer to a test case is the string of length nn, there the ii-th character is equal to 11 if ii is a beautiful number and is equal to 00 if ii is not a beautiful number.ExampleInputCopy3\n6\n4 5 1 3 2 6\n5\n5 3 1 2 4\n4\n1 4 3 2\nOutputCopy101011\n11111\n1001\nNoteThe first test case is described in the problem statement.In the second test case all numbers from 11 to 55 are beautiful:  if l=3l=3 and r=3r=3 we will have a permutation [1][1] for m=1m=1;  if l=3l=3 and r=4r=4 we will have a permutation [1,2][1,2] for m=2m=2;  if l=2l=2 and r=4r=4 we will have a permutation [3,1,2][3,1,2] for m=3m=3;  if l=2l=2 and r=5r=5 we will have a permutation [3,1,2,4][3,1,2,4] for m=4m=4;  if l=1l=1 and r=5r=5 we will have a permutation [5,3,1,2,4][5,3,1,2,4] for m=5m=5. "], "Take Your Places!": ["https://codeforces.com/problemset/problem/1556/B", "B. Take Your Places!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard output  William has an array of nn integers a1,a2,\u2026,ana1,a2,\u2026,an. In one move he can swap two neighboring items. Two items aiai and ajaj are considered neighboring if the condition |i\u2212j|=1|i\u2212j|=1 is satisfied.William wants you to calculate the minimal number of swaps he would need to perform to make it so that the array does not contain two neighboring items with the same parity.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104). Description of the test cases follows.The first line of each test case contains an integer nn (1\u2264n\u2264105)(1\u2264n\u2264105) which is the total number of items in William's array.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264109)(1\u2264ai\u2264109) which are William's array.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case output the minimal number of operations needed or \u22121\u22121 if it is impossible to get the array to a state when no neighboring numbers have the same parity.ExampleInputCopy5\n3\n6 6 1\n1\n9\n6\n1 1 1 2 2 2\n2\n8 6\n6\n6 2 3 4 5 1\nOutputCopy1\n0\n3\n-1\n2\nNoteIn the first test case the following sequence of operations would satisfy the requirements:   swap(2, 3). Array after performing the operation: [6,1,6][6,1,6] In the second test case the array initially does not contain two neighboring items of the same parity.In the third test case the following sequence of operations would satisfy the requirements:   swap(3, 4). Array after performing the operation: [1,1,2,1,2,2][1,1,2,1,2,2]  swap(2, 3). Array after performing the operation: [1,2,1,1,2,2][1,2,1,1,2,2]  swap(4, 5). Array after performing the operation: [1,2,1,2,1,2][1,2,1,2,1,2] In the fourth test case it is impossible to satisfy the requirements.In the fifth test case the following sequence of operations would satisfy the requirements:   swap(2, 3). Array after performing the operation: [6,3,2,4,5,1][6,3,2,4,5,1]  swap(4, 5). Array after performing the operation: [6,3,2,5,4,1][6,3,2,5,4,1] "], "Deep Down Below": ["https://codeforces.com/problemset/problem/1561/C", "C. Deep Down Belowtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputIn a certain video game, the player controls a hero characterized by a single integer value: power. The hero will have to beat monsters that are also characterized by a single integer value: armor.On the current level, the hero is facing nn caves. To pass the level, the hero must enter all the caves in some order, each cave exactly once, and exit every cave safe and sound. When the hero enters cave ii, he will have to fight kiki monsters in a row: first a monster with armor ai,1ai,1, then a monster with armor ai,2ai,2 and so on, finally, a monster with armor ai,kiai,ki.The hero can beat a monster if and only if the hero's power is strictly greater than the monster's armor. If the hero can't beat the monster he's fighting, the game ends and the player loses. Note that once the hero enters a cave, he can't exit it before he fights all the monsters in it, strictly in the given order.Each time the hero beats a monster, the hero's power increases by 11.Find the smallest possible power the hero must start the level with to be able to enter all the caves in some order and beat all the monsters.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641051\u2264t\u2264105). Description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of caves.The ii-th of the next nn lines contains an integer kiki (1\u2264ki\u22641051\u2264ki\u2264105)\u00a0\u2014 the number of monsters in the ii-th cave, followed by kiki integers ai,1,ai,2,\u2026,ai,kiai,1,ai,2,\u2026,ai,ki (1\u2264ai,j\u22641091\u2264ai,j\u2264109)\u00a0\u2014 armor levels of the monsters in cave ii in order the hero has to fight them.It is guaranteed that the sum of kiki over all test cases does not exceed 105105.OutputFor each test case print a single integer\u00a0\u2014 the smallest possible power the hero must start the level with to be able to enter all the caves in some order and beat all the monsters.ExampleInputCopy2\n1\n1 42\n2\n3 10 15 8\n2 12 11\nOutputCopy43\n13\nNoteIn the first test case, the hero has to beat a single monster with armor 4242, it's enough to have power 4343 to achieve that.In the second test case, the hero can pass the level with initial power 1313 as follows:   enter cave 22:   beat a monster with armor 1212, power increases to 1414;  beat a monster with armor 1111, power increases to 1515;   enter cave 11:   beat a monster with armor 1010, power increases to 1616;  beat a monster with armor 1515, power increases to 1717;  beat a monster with armor 88, power increases to 1818.  "], "Reorder the Array": ["https://codeforces.com/problemset/problem/1007/A", "A. Reorder the Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array of integers. Vasya can permute (change order) its integers. He wants to do it so that as many as possible integers will become on a place where a smaller integer used to stand. Help Vasya find the maximal number of such integers.For instance, if we are given an array [10,20,30,40][10,20,30,40], we can permute it so that it becomes [20,40,10,30][20,40,10,30]. Then on the first and the second positions the integers became larger (20>1020>10, 40>2040>20) and did not on the third and the fourth, so for this permutation, the number that Vasya wants to maximize equals 22. Read the note for the first example, there is one more demonstrative test case.Help Vasya to permute integers in such way that the number of positions in a new array, where integers are greater than in the original one, is maximal.InputThe first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the length of the array.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the elements of the array.OutputPrint a single integer\u00a0\u2014 the maximal number of the array's elements which after a permutation will stand on the position where a smaller element stood in the initial array.ExamplesInputCopy710 1 1 1 5 5 3OutputCopy4InputCopy51 1 1 1 1OutputCopy0NoteIn the first sample, one of the best permutations is [1,5,5,3,10,1,1][1,5,5,3,10,1,1]. On the positions from second to fifth the elements became larger, so the answer for this permutation is 4.In the second sample, there is no way to increase any element with a permutation, so the answer is 0."], "Paprika and Permutation": ["https://codeforces.com/problemset/problem/1617/C", "C. Paprika and Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPaprika loves permutations. She has an array a1,a2,\u2026,ana1,a2,\u2026,an. She wants to make the array a permutation of integers 11 to nn.In order to achieve this goal, she can perform operations on the array. In each operation she can choose two integers ii (1\u2264i\u2264n1\u2264i\u2264n) and xx (x>0x>0), then perform ai:=aimodxai:=aimodx (that is, replace aiai by the remainder of aiai divided by xx). In different operations, the chosen ii and xx can be different.Determine the minimum number of operations needed to make the array a permutation of integers 11 to nn. If it is impossible, output \u22121\u22121.A permutation is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array) and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains an integer nn (1\u2264n\u22641051\u2264n\u2264105).The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an. (1\u2264ai\u22641091\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output the minimum number of operations needed to make the array a permutation of integers 11 to nn, or \u22121\u22121 if it is impossible.ExampleInputCopy4\n2\n1 7\n3\n1 5 4\n4\n12345678 87654321 20211218 23571113\n9\n1 2 3 4 18 19 5 6 7\nOutputCopy1\n-1\n4\n2\nNoteFor the first test, the only possible sequence of operations which minimizes the number of operations is:   Choose i=2i=2, x=5x=5. Perform a2:=a2mod5=2a2:=a2mod5=2. For the second test, it is impossible to obtain a permutation of integers from 11 to nn."], "Planet Lapituletti": ["https://codeforces.com/problemset/problem/1493/B", "B. Planet Lapitulettitime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe time on the planet Lapituletti goes the same way it goes on Earth but a day lasts hh hours and each hour lasts mm minutes. The inhabitants of that planet use digital clocks similar to earth ones. Clocks display time in a format HH:MM (the number of hours in decimal is displayed first, then (after the colon) follows the number of minutes in decimal; the number of minutes and hours is written with leading zeros if needed to form a two-digit number). Hours are numbered from 00 to h\u22121h\u22121 and minutes are numbered from 00 to m\u22121m\u22121.  That's how the digits are displayed on the clock. Please note that digit 11 is placed in the middle of its position. A standard mirror is in use on the planet Lapituletti. Inhabitants often look at the reflection of the digital clocks in the mirror and feel happy when what you see on the reflected clocks is a valid time (that means that you see valid digits in the reflection and this time can be seen on the normal clocks at some moment of a day).The image of the clocks in the mirror is reflected against a vertical axis.  The reflection is not a valid time.The reflection is a valid time with h=24h=24, m=60m=60. However, for example, if h=10h=10, m=60m=60, then the reflection is not a valid time. An inhabitant of the planet Lapituletti begins to look at a mirrored image of the clocks at some time moment ss and wants to know the nearest future time moment (which can possibly happen on the next day), when the reflected clock time is valid.It can be shown that with any hh, mm, ss such a moment exists. If the reflected time is correct at the moment the inhabitant began to look at the clock, that moment is considered the nearest.You are asked to solve the problem for several test cases.InputThe first line contains a single integer TT (1\u2264T\u22641001\u2264T\u2264100) \u2014 the number of test cases.The next 2\u22c5T2\u22c5T lines contain the description of test cases. The description of each test case consists of two lines.The first line of a test case contains two integers hh, mm (1\u2264h,m\u22641001\u2264h,m\u2264100).The second line contains the start time ss in the described format HH:MM.OutputFor each test case output in a separate line the nearest moment in format HH:MM when the reflected time is correct.ExampleInputCopy5\n24 60\n12:21\n24 60\n23:59\n90 80\n52:26\n1 100\n00:01\n10 10\n04:04\nOutputCopy12:21\n00:00\n52:28\n00:00\n00:00\nNoteIn the second test case it is not hard to show that the reflection of 23:59 is incorrect, while the reflection of the moment 00:00 on the next day is correct.   "], "Chat Ban": ["https://codeforces.com/problemset/problem/1612/C", "C. Chat Bantime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are a usual chat user on the most famous streaming platform. Of course, there are some moments when you just want to chill and spam something.More precisely, you want to spam the emote triangle of size kk. It consists of 2k\u221212k\u22121 messages. The first message consists of one emote, the second one \u2014 of two emotes, ..., the kk-th one \u2014 of kk emotes, the k+1k+1-th one \u2014 of k\u22121k\u22121 emotes, ..., and the last one \u2014 of one emote.For example, the emote triangle for k=3k=3 consists of 55 messages:  Of course, most of the channels have auto moderation. Auto moderator of the current chat will ban you right after you spam at least xx emotes in succession (you can assume you are the only user in the chat). Now you are interested \u2014 how many messages will you write before getting banned? Or maybe you will not get banned at all (i.e. will write all 2k\u221212k\u22121 messages and complete your emote triangle successfully)? Note that if you get banned as a result of writing a message, this message is also counted.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases. The next tt lines describe test cases.The only line of the test case contains integers kk and xx (1\u2264k\u2264109;1\u2264x\u226410181\u2264k\u2264109;1\u2264x\u22641018).OutputFor each test case, print the number of messages you will write before getting banned for the corresponding values kk and xx.ExampleInputCopy7\n4 6\n4 7\n1 2\n3 7\n2 5\n100 1\n1000000000 923456789987654321\nOutputCopy3\n4\n1\n4\n3\n1\n1608737403\nNoteLet's analyze the test cases of the example.  In the first test case, you write three messages containing 11, 22 and 33 emotes respectively, and since 1+2+3\u226561+2+3\u22656, you get banned after that.  In the second test case, you write four messages containing 11, 22, 33 and 44 emotes respectively, and since 1+2+3+4\u226571+2+3+4\u22657, you get banned after that.  In the third test case, you write one message containing exactly 11 emote. It doesn't get you banned, since 1<21<2, but you have already finished posting your emote triangle. So you wrote one message successfully.  In the fourth test case, you write four messages containing 11, 22, 33 and 22 emotes respectively, and since 1+2+3+2\u226571+2+3+2\u22657, you get banned after that.  In the fifth test case, you write three messages containing 11, 22 and 11 emote respectively. It doesn't get you banned, since 1+2+1<51+2+1<5, but you have already finished posting your emote triangle. So you wrote three messages successfully.  In the sixth test case, since x=1x=1, you get banned as soon as you send your first message.  The seventh test case is too large to analyze, so we'll skip it. "], "Nice Garland": ["https://codeforces.com/problemset/problem/1108/C", "C. Nice Garlandtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a garland consisting of nn lamps. Each lamp is colored red, green or blue. The color of the ii-th lamp is sisi ('R', 'G' and 'B' \u2014 colors of lamps in the garland).You have to recolor some lamps in this garland (recoloring a lamp means changing its initial color to another) in such a way that the obtained garland is nice.A garland is called nice if any two lamps of the same color have distance divisible by three between them. I.e. if the obtained garland is tt, then for each i,ji,j such that ti=tjti=tj should be satisfied |i\u2212j|\u00a0mod\u00a03=0|i\u2212j|\u00a0mod\u00a03=0. The value |x||x| means absolute value of xx, the operation x\u00a0mod\u00a0yx\u00a0mod\u00a0y means remainder of xx when divided by yy.For example, the following garlands are nice: \"RGBRGBRG\", \"GB\", \"R\", \"GRBGRBG\", \"BRGBRGB\". The following garlands are not nice: \"RR\", \"RGBG\".Among all ways to recolor the initial garland to make it nice you have to choose one with the minimum number of recolored lamps. If there are multiple optimal solutions, print any of them.InputThe first line of the input contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of lamps.The second line of the input contains the string ss consisting of nn characters 'R', 'G' and 'B' \u2014 colors of lamps in the garland.OutputIn the first line of the output print one integer rr \u2014 the minimum number of recolors needed to obtain a nice garland from the given one.In the second line of the output print one string tt of length nn \u2014 a nice garland obtained from the initial one with minimum number of recolors. If there are multiple optimal solutions, print any of them.ExamplesInputCopy3\nBRB\nOutputCopy1\nGRB\nInputCopy7\nRGBGRBB\nOutputCopy3\nRGBRGBR\n"], "Lucky Numbers (easy)": ["https://codeforces.com/problemset/problem/96/B", "B. Lucky Numbers (easy)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya loves lucky numbers. Everybody knows that positive integers are lucky if their decimal representation doesn't contain digits other than 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.Lucky number is super lucky if it's decimal representation contains equal amount of digits 4 and 7. For example, numbers 47, 7744, 474477 are super lucky and 4, 744, 467 are not.One day Petya came across a positive integer n. Help him to find the least super lucky number which is not less than n.InputThe only line contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009109). This number doesn't have leading zeroes.OutputOutput the least super lucky number that is more than or equal to n.Please, do not use the %lld specificator to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specificator.ExamplesInputCopy4500OutputCopy4747InputCopy47OutputCopy47"], "Letters Shop": ["https://codeforces.com/problemset/problem/1187/B", "B. Letters Shoptime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe letters shop showcase is a string ss, consisting of nn lowercase Latin letters. As the name tells, letters are sold in the shop.Letters are sold one by one from the leftmost to the rightmost. Any customer can only buy some prefix of letters from the string ss.There are mm friends, the ii-th of them is named titi. Each of them is planning to estimate the following value: how many letters (the length of the shortest prefix) would s/he need to buy if s/he wanted to construct her/his name of bought letters. The name can be constructed if each letter is presented in the equal or greater amount.  For example, for ss=\"arrayhead\" and titi=\"arya\" 55 letters have to be bought (\"arrayhead\").  For example, for ss=\"arrayhead\" and titi=\"harry\" 66 letters have to be bought (\"arrayhead\").  For example, for ss=\"arrayhead\" and titi=\"ray\" 55 letters have to be bought (\"arrayhead\").  For example, for ss=\"arrayhead\" and titi=\"r\" 22 letters have to be bought (\"arrayhead\").  For example, for ss=\"arrayhead\" and titi=\"areahydra\" all 99 letters have to be bought (\"arrayhead\"). It is guaranteed that every friend can construct her/his name using the letters from the string ss.Note that the values for friends are independent, friends are only estimating them but not actually buying the letters.InputThe first line contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the length of showcase string ss.The second line contains string ss, consisting of exactly nn lowercase Latin letters.The third line contains one integer mm (1\u2264m\u22645\u22c51041\u2264m\u22645\u22c5104) \u2014 the number of friends.The ii-th of the next mm lines contains titi (1\u2264|ti|\u22642\u22c51051\u2264|ti|\u22642\u22c5105) \u2014 the name of the ii-th friend.It is guaranteed that \u2211i=1m|ti|\u22642\u22c5105\u2211i=1m|ti|\u22642\u22c5105.OutputFor each friend print the length of the shortest prefix of letters from ss s/he would need to buy to be able to construct her/his name of them. The name can be constructed if each letter is presented in the equal or greater amount.It is guaranteed that every friend can construct her/his name using the letters from the string ss.ExampleInputCopy9\narrayhead\n5\narya\nharry\nray\nr\nareahydra\nOutputCopy5\n6\n5\n2\n9\n"], "Ehab and a Special Coloring Problem": ["https://codeforces.com/problemset/problem/1174/C", "C. Ehab and a Special Coloring Problemtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're given an integer nn. For every integer ii from 22 to nn, assign a positive integer aiai such that the following conditions hold:  For any pair of integers (i,j)(i,j), if ii and jj are coprime, ai\u2260ajai\u2260aj.  The maximal value of all aiai should be minimized (that is, as small as possible). A pair of integers is called coprime if their greatest common divisor is 11.InputThe only line contains the integer nn (2\u2264n\u22641052\u2264n\u2264105).OutputPrint n\u22121n\u22121 integers, a2a2, a3a3, \u2026\u2026, anan (1\u2264ai\u2264n1\u2264ai\u2264n). If there are multiple solutions, print any of them.ExamplesInputCopy4\nOutputCopy1 2 1 InputCopy3\nOutputCopy2 1NoteIn the first example, notice that 33 and 44 are coprime, so a3\u2260a4a3\u2260a4. Also, notice that a=[1,2,3]a=[1,2,3] satisfies the first condition, but it's not a correct answer because its maximal value is 33."], "Increasing Subsequence (easy version)": ["https://codeforces.com/problemset/problem/1157/C1", "C1. Increasing Subsequence (easy version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between problems C1 and C2 is that all values in input of problem C1 are distinct (this condition may be false for problem C2).You are given a sequence aa consisting of nn integers. All these integers are distinct, each value from 11 to nn appears in the sequence exactly once.You are making a sequence of moves. During each move you must take either the leftmost element of the sequence or the rightmost element of the sequence, write it down and remove it from the sequence. Your task is to write down a strictly increasing sequence, and among all such sequences you should take the longest (the length of the sequence is the number of elements in it).For example, for the sequence [2,1,5,4,3][2,1,5,4,3] the answer is 44 (you take 22 and the sequence becomes [1,5,4,3][1,5,4,3], then you take the rightmost element 33 and the sequence becomes [1,5,4][1,5,4], then you take 44 and the sequence becomes [1,5][1,5] and then you take 55 and the sequence becomes [1][1], the obtained increasing sequence is [2,3,4,5][2,3,4,5]).InputThe first line of the input contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of elements in aa.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n), where aiai is the ii-th element of aa. All these integers are pairwise distinct.OutputIn the first line of the output print kk \u2014 the maximum number of elements in a strictly increasing sequence you can obtain.In the second line print a string ss of length kk, where the jj-th character of this string sjsj should be 'L' if you take the leftmost element during the jj-th move and 'R' otherwise. If there are multiple answers, you can print any.ExamplesInputCopy5\n2 1 5 4 3\nOutputCopy4\nLRRR\nInputCopy7\n1 3 5 6 7 4 2\nOutputCopy7\nLRLRLLL\nInputCopy3\n1 2 3\nOutputCopy3\nLLL\nInputCopy4\n1 2 4 3\nOutputCopy4\nLLRL\nNoteThe first example is described in the problem statement."], "Many Equal Substrings": ["https://codeforces.com/problemset/problem/1029/A", "A. Many Equal Substringstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string tt consisting of nn lowercase Latin letters and an integer number kk.Let's define a substring of some string ss with indices from ll to rr as s[l\u2026r]s[l\u2026r].Your task is to construct such string ss of minimum possible length that there are exactly kk positions ii such that s[i\u2026i+n\u22121]=ts[i\u2026i+n\u22121]=t. In other words, your task is to construct such string ss of minimum possible length that there are exactly kk substrings of ss equal to tt.It is guaranteed that the answer is always unique.InputThe first line of the input contains two integers nn and kk (1\u2264n,k\u2264501\u2264n,k\u226450) \u2014 the length of the string tt and the number of substrings.The second line of the input contains the string tt consisting of exactly nn lowercase Latin letters.OutputPrint such string ss of minimum possible length that there are exactly kk substrings of ss equal to tt.It is guaranteed that the answer is always unique.ExamplesInputCopy3 4abaOutputCopyababababaInputCopy3 2catOutputCopycatcat"], "Chat Online": ["https://codeforces.com/problemset/problem/469/B", "B. Chat Onlinetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle X and Little Z are good friends. They always chat online. But both of them have schedules.Little Z has fixed schedule. He always online at any moment of time between a1 and b1, between a2 and b2, ..., between ap and bp (all borders inclusive). But the schedule of Little X is quite strange, it depends on the time when he gets up. If he gets up at time 0, he will be online at any moment of time between c1 and d1, between c2 and d2, ..., between cq and dq (all borders inclusive). But if he gets up at time t, these segments will be shifted by t. They become [ci\u2009+\u2009t,\u2009di\u2009+\u2009t] (for all i).If at a moment of time, both Little X and Little Z are online simultaneosly, they can chat online happily. You know that Little X can get up at an integer moment of time between l and r (both borders inclusive). Also you know that Little X wants to get up at the moment of time, that is suitable for chatting with Little Z (they must have at least one common moment of time in schedules). How many integer moments of time from the segment [l,\u2009r] suit for that?InputThe first line contains four space-separated integers p,\u2009q,\u2009l,\u2009r (1\u2009\u2264\u2009\u2009p,\u2009q\u2009\u2264\u200950;\u00a00\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u20091000).Each of the next p lines contains two space-separated integers ai,\u2009bi (0\u2009\u2264\u2009ai\u2009<\u2009bi\u2009\u2264\u20091000). Each of the next q lines contains two space-separated integers cj,\u2009dj (0\u2009\u2264\u2009cj\u2009<\u2009dj\u2009\u2264\u20091000).It's guaranteed that bi\u2009<\u2009ai\u2009+\u20091 and dj\u2009<\u2009cj\u2009+\u20091 for all valid i and j.OutputOutput a single integer \u2014 the number of moments of time from the segment [l,\u2009r] which suit for online conversation.ExamplesInputCopy1 1 0 42 30 1OutputCopy3InputCopy2 3 0 2015 1723 261 47 1115 17OutputCopy20"], "Meme Problem": ["https://codeforces.com/problemset/problem/1076/C", "C. Meme Problemtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTry guessing the statement from this picture:   You are given a non-negative integer dd. You have to find two non-negative real numbers aa and bb such that a+b=da+b=d and a\u22c5b=da\u22c5b=d.InputThe first line contains tt (1\u2264t\u22641031\u2264t\u2264103) \u2014 the number of test cases.Each test case contains one integer dd (0\u2264d\u2264103)(0\u2264d\u2264103).OutputFor each test print one line.If there is an answer for the ii-th test, print \"Y\", and then the numbers aa and bb.If there is no answer for the ii-th test, print \"N\".Your answer will be considered correct if |(a+b)\u2212a\u22c5b|\u226410\u22126|(a+b)\u2212a\u22c5b|\u226410\u22126 and |(a+b)\u2212d|\u226410\u22126|(a+b)\u2212d|\u226410\u22126.ExampleInputCopy7\n69\n0\n1\n4\n5\n999\n1000\nOutputCopyY 67.985071301 1.014928699\nY 0.000000000 0.000000000\nN\nY 2.000000000 2.000000000\nY 3.618033989 1.381966011\nY 997.998996990 1.001003010\nY 998.998997995 1.001002005\n"], "Little Elephant and Problem": ["https://codeforces.com/problemset/problem/220/A", "A. Little Elephant and Problemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Little Elephant has got a problem \u2014 somebody has been touching his sorted by non-decreasing array a of length n and possibly swapped some elements of the array.The Little Elephant doesn't want to call the police until he understands if he could have accidentally changed the array himself. He thinks that he could have accidentally changed array a, only if array a can be sorted in no more than one operation of swapping elements (not necessarily adjacent). That is, the Little Elephant could have accidentally swapped some two elements.Help the Little Elephant, determine if he could have accidentally changed the array a, sorted by non-decreasing, himself.InputThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the size of array a. The next line contains n positive integers, separated by single spaces and not exceeding 109, \u2014 array a.Note that the elements of the array are not necessarily distinct numbers.OutputIn a single line print \"YES\" (without the quotes) if the Little Elephant could have accidentally changed the array himself, and \"NO\" (without the quotes) otherwise.ExamplesInputCopy21 2OutputCopyYESInputCopy33 2 1OutputCopyYESInputCopy44 3 2 1OutputCopyNONoteIn the first sample the array has already been sorted, so to sort it, we need 0 swap operations, that is not more than 1. Thus, the answer is \"YES\".In the second sample we can sort the array if we swap elements 1 and 3, so we need 1 swap operation to sort the array. Thus, the answer is \"YES\".In the third sample we can't sort the array in more than one swap operation, so the answer is \"NO\"."], "Little Alawn's Puzzle": ["https://codeforces.com/problemset/problem/1534/C", "C. Little Alawn's Puzzletime limit per test2.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWhen he's not training for IOI, Little Alawn enjoys playing with puzzles of various types to stimulate his brain. Today, he's playing with a puzzle that consists of a 2\u00d7n2\u00d7n grid where each row is a permutation of the numbers 1,2,3,\u2026,n1,2,3,\u2026,n.The goal of Little Alawn's puzzle is to make sure no numbers on the same column or row are the same (we'll call this state of the puzzle as solved), and to achieve this he is able to swap the numbers in any column. However, after solving the puzzle many times, Little Alawn got bored and began wondering about the number of possible solved configurations of the puzzle he could achieve from an initial solved configuration only by swapping numbers in a column.Unfortunately, Little Alawn got stuck while trying to solve this harder problem, so he was wondering if you could help him with it. Find the answer modulo 109+7109+7.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104). Description of the test cases follows.The first line of each test case contains a single integer nn (2\u2264n\u22644\u22c51052\u2264n\u22644\u22c5105).The next two lines of each test case describe the initial state of the puzzle grid. Each line will be a permutation of the numbers 1,2,3,\u2026,n1,2,3,\u2026,n and the numbers in each column and row will be pairwise distinct.It is guaranteed that the sum of nn over all test cases does not exceed 4\u22c51054\u22c5105.OutputFor each test case output a single integer, the number of possible solved configurations of the puzzle Little Alawn can achieve from an initial solved configuration only by swapping numbers in a column. As the answer can be very large, please output it modulo 109+7109+7.The answer for each test case should be on a separate line.ExampleInputCopy2\n4\n1 4 2 3\n3 2 1 4\n8\n2 6 5 1 4 3 7 8\n3 8 7 5 1 2 4 6\nOutputCopy2\n8\nNoteThe two possible puzzle configurations for example 11 are:  [1,4,2,3][1,4,2,3] in the first row and [3,2,1,4][3,2,1,4] in the second;  [3,2,1,4][3,2,1,4] in the first row and [1,4,2,3][1,4,2,3] in the second. "], "Complete the Word": ["https://codeforces.com/problemset/problem/716/B", "B. Complete the Wordtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputZS the Coder loves to read the dictionary. He thinks that a word is nice if there exists a substring (contiguous segment of letters) of it of length 26 where each letter of English alphabet appears exactly once. In particular, if the string has length strictly less than 26, no such substring exists and thus it is not nice.Now, ZS the Coder tells you a word, where some of its letters are missing as he forgot them. He wants to determine if it is possible to fill in the missing letters so that the resulting word is nice. If it is possible, he needs you to find an example of such a word as well. Can you help him?InputThe first and only line of the input contains a single string s (1\u2009\u2264\u2009|s|\u2009\u2264\u200950\u2009000), the word that ZS the Coder remembers. Each character of the string is the uppercase letter of English alphabet ('A'-'Z') or is a question mark ('?'), where the question marks denotes the letters that ZS the Coder can't remember.OutputIf there is no way to replace all the question marks with uppercase letters such that the resulting word is nice, then print \u2009-\u20091 in the only line.Otherwise, print a string which denotes a possible nice word that ZS the Coder learned. This string should match the string from the input, except for the question marks replaced with uppercase English letters.If there are multiple solutions, you may print any of them.ExamplesInputCopyABC??FGHIJK???OPQR?TUVWXY?OutputCopyABCDEFGHIJKLMNOPQRZTUVWXYSInputCopyWELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWOOutputCopy-1InputCopy??????????????????????????OutputCopyMNBVCXZLKJHGFDSAQPWOEIRUYTInputCopyAABCDEFGHIJKLMNOPQRSTUVW??MOutputCopy-1NoteIn the first sample case, ABCDEFGHIJKLMNOPQRZTUVWXYS is a valid answer beacuse it contains a substring of length 26 (the whole string in this case) which contains all the letters of the English alphabet exactly once. Note that there are many possible solutions, such as ABCDEFGHIJKLMNOPQRSTUVWXYZ or ABCEDFGHIJKLMNOPQRZTUVWXYS.In the second sample case, there are no missing letters. In addition, the given string does not have a substring of length 26 that contains all the letters of the alphabet, so the answer is \u2009-\u20091.In the third sample case, any string of length 26 that contains all letters of the English alphabet fits as an answer."], "Blocks": ["https://codeforces.com/problemset/problem/1271/B", "B. Blockstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn blocks arranged in a row and numbered from left to right, starting from one. Each block is either black or white. You may perform the following operation zero or more times: choose two adjacent blocks and invert their colors (white block becomes black, and vice versa). You want to find a sequence of operations, such that they make all the blocks having the same color. You don't have to minimize the number of operations, but it should not exceed 3\u22c5n3\u22c5n. If it is impossible to find such a sequence of operations, you need to report it.InputThe first line contains one integer nn (2\u2264n\u22642002\u2264n\u2264200) \u2014 the number of blocks.The second line contains one string ss consisting of nn characters, each character is either \"W\" or \"B\". If the ii-th character is \"W\", then the ii-th block is white. If the ii-th character is \"B\", then the ii-th block is black. OutputIf it is impossible to make all the blocks having the same color, print \u22121\u22121.Otherwise, print an integer kk (0\u2264k\u22643\u22c5n0\u2264k\u22643\u22c5n) \u2014 the number of operations. Then print kk integers p1,p2,\u2026,pkp1,p2,\u2026,pk (1\u2264pj\u2264n\u22121)(1\u2264pj\u2264n\u22121), where pjpj is the position of the left block in the pair of blocks that should be affected by the jj-th operation.If there are multiple answers, print any of them.ExamplesInputCopy8\nBWWWWWWB\nOutputCopy3\n6 2 4\nInputCopy4\nBWBB\nOutputCopy-1\nInputCopy5\nWWWWW\nOutputCopy0\nInputCopy3\nBWB\nOutputCopy2\n2 1 \nNoteIn the first example, it is possible to make all blocks black in 33 operations. Start with changing blocks 66 and 77, so the sequence is \"BWWWWBBB\". Then change blocks 22 and 33, so the sequence is \"BBBWWBB\". And finally, change blocks 44 and 55, so all blocks are black.It is impossible to make all colors equal in the second example.All blocks are already white in the third example.In the fourth example it is possible to make all blocks white in two operations: first operation is to change blocks 22 and 33 (so the sequence is \"BBW\"), and then change blocks 11 and 22 (so all blocks are white)."], "Easy Number Challenge": ["https://codeforces.com/problemset/problem/236/B", "B. Easy Number Challengetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's denote d(n) as the number of divisors of a positive integer n. You are given three integers a, b and c. Your task is to calculate the following sum:Find the sum modulo 1073741824 (230).InputThe first line contains three space-separated integers a, b and c (1\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u2009100).OutputPrint a single integer \u2014 the required sum modulo 1073741824 (230).ExamplesInputCopy2 2 2OutputCopy20InputCopy5 6 7OutputCopy1520NoteFor the first example.  d(1\u00b71\u00b71)\u2009=\u2009d(1)\u2009=\u20091;  d(1\u00b71\u00b72)\u2009=\u2009d(2)\u2009=\u20092;  d(1\u00b72\u00b71)\u2009=\u2009d(2)\u2009=\u20092;  d(1\u00b72\u00b72)\u2009=\u2009d(4)\u2009=\u20093;  d(2\u00b71\u00b71)\u2009=\u2009d(2)\u2009=\u20092;  d(2\u00b71\u00b72)\u2009=\u2009d(4)\u2009=\u20093;  d(2\u00b72\u00b71)\u2009=\u2009d(4)\u2009=\u20093;  d(2\u00b72\u00b72)\u2009=\u2009d(8)\u2009=\u20094. So the result is 1\u2009+\u20092\u2009+\u20092\u2009+\u20093\u2009+\u20092\u2009+\u20093\u2009+\u20093\u2009+\u20094\u2009=\u200920."], "Packets": ["https://codeforces.com/problemset/problem/1037/A", "A. Packetstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have nn coins, each of the same value of 11.Distribute them into packets such that any amount xx (1\u2264x\u2264n1\u2264x\u2264n) can be formed using some (possibly one or all) number of these packets.Each packet may only be used entirely or not used at all. No packet may be used more than once in the formation of the single xx, however it may be reused for the formation of other xx's.Find the minimum number of packets in such a distribution.InputThe only line contains a single integer nn (1\u2264n\u22641091\u2264n\u2264109)\u00a0\u2014 the number of coins you have.OutputOutput a single integer\u00a0\u2014 the minimum possible number of packets, satisfying the condition above.ExamplesInputCopy6OutputCopy3InputCopy2OutputCopy2NoteIn the first example, three packets with 11, 22 and 33 coins can be made to get any amount xx (1\u2264x\u226461\u2264x\u22646).  To get 11 use the packet with 11 coin.  To get 22 use the packet with 22 coins.  To get 33 use the packet with 33 coins.  To get 44 use packets with 11 and 33 coins.  To get 55 use packets with 22 and 33 coins  To get 66 use all packets. In the second example, two packets with 11 and 11 coins can be made to get any amount xx (1\u2264x\u226421\u2264x\u22642)."], "Prime Matrix": ["https://codeforces.com/problemset/problem/271/B", "B. Prime Matrixtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou've got an n\u2009\u00d7\u2009m matrix. The matrix consists of integers. In one move, you can apply a single transformation to the matrix: choose an arbitrary element of the matrix and increase it by 1. Each element can be increased an arbitrary number of times.You are really curious about prime numbers. Let us remind you that a prime number is a positive integer that has exactly two distinct positive integer divisors: itself and number one. For example, numbers 2, 3, 5 are prime and numbers 1, 4, 6 are not. A matrix is prime if at least one of the two following conditions fulfills:  the matrix has a row with prime numbers only;  the matrix has a column with prime numbers only; Your task is to count the minimum number of moves needed to get a prime matrix from the one you've got.InputThe first line contains two integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009500) \u2014 the number of rows and columns in the matrix, correspondingly.Each of the following n lines contains m integers \u2014 the initial matrix. All matrix elements are positive integers. All numbers in the initial matrix do not exceed 105.The numbers in the lines are separated by single spaces.OutputPrint a single integer \u2014 the minimum number of moves needed to get a prime matrix from the one you've got. If you've got a prime matrix, print 0.ExamplesInputCopy3 31 2 35 6 14 4 1OutputCopy1InputCopy2 34 8 89 2 9OutputCopy3InputCopy2 21 34 2OutputCopy0NoteIn the first sample you need to increase number 1 in cell (1, 1). Thus, the first row will consist of prime numbers: 2, 2, 3.In the second sample you need to increase number 8 in cell (1, 2) three times. Thus, the second column will consist of prime numbers: 11, 2.In the third sample you don't have to do anything as the second column already consists of prime numbers: 3, 2. "], "Build a Contest": ["https://codeforces.com/problemset/problem/1100/B", "B. Build a Contesttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputArkady coordinates rounds on some not really famous competitive programming platform. Each round features nn problems of distinct difficulty, the difficulties are numbered from 11 to nn.To hold a round Arkady needs nn new (not used previously) problems, one for each difficulty. As for now, Arkady creates all the problems himself, but unfortunately, he can't just create a problem of a desired difficulty. Instead, when he creates a problem, he evaluates its difficulty from 11 to nn and puts it into the problems pool.At each moment when Arkady can choose a set of nn new problems of distinct difficulties from the pool, he holds a round with these problems and removes them from the pool. Arkady always creates one problem at a time, so if he can hold a round after creating a problem, he immediately does it.You are given a sequence of problems' difficulties in the order Arkady created them. For each problem, determine whether Arkady held the round right after creating this problem, or not. Initially the problems pool is empty.InputThe first line contains two integers nn and mm (1\u2264n,m\u22641051\u2264n,m\u2264105)\u00a0\u2014 the number of difficulty levels and the number of problems Arkady created.The second line contains mm integers a1,a2,\u2026,ama1,a2,\u2026,am (1\u2264ai\u2264n1\u2264ai\u2264n)\u00a0\u2014 the problems' difficulties in the order Arkady created them.OutputPrint a line containing mm digits. The ii-th digit should be 11 if Arkady held the round after creation of the ii-th problem, and 00 otherwise.ExamplesInputCopy3 11\n2 3 1 2 2 2 3 2 2 3 1\nOutputCopy00100000001\nInputCopy4 8\n4 1 3 3 2 3 3 3\nOutputCopy00001000\nNoteIn the first example Arkady held the round after the first three problems, because they are of distinct difficulties, and then only after the last problem."], "Madoka and Childish Pranks": ["https://codeforces.com/problemset/problem/1647/C", "C. Madoka and Childish Prankstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMadoka as a child was an extremely capricious girl, and one of her favorite pranks was drawing on her wall. According to Madoka's memories, the wall was a table of nn rows and mm columns, consisting only of zeroes and ones. The coordinate of the cell in the ii-th row and the jj-th column (1\u2264i\u2264n1\u2264i\u2264n, 1\u2264j\u2264m1\u2264j\u2264m) is (i,j)(i,j).One day she saw a picture \"Mahou Shoujo Madoka Magica\" and decided to draw it on her wall. Initially, the Madoka's table is a table of size n\u00d7mn\u00d7m filled with zeroes. Then she applies the following operation any number of times:Madoka selects any rectangular subtable of the table and paints it in a chess coloring (the upper left corner of the subtable always has the color 00). Note that some cells may be colored several times. In this case, the final color of the cell is equal to the color obtained during the last repainting.  White color means 00, black means 11. So, for example, the table in the first picture is painted in a chess coloring, and the others are not. For better understanding of the statement, we recommend you to read the explanation of the first test.Help Madoka and find some sequence of no more than n\u22c5mn\u22c5m operations that allows you to obtain the picture she wants, or determine that this is impossible.InputEach test contains multiple test cases. The first line contains a single integer tt (1\u2264t\u2264101\u2264t\u226410)\u00a0\u2014 the number of test cases. Description of the test cases follows.The first line of each test case contains two integers nn and mm (1\u2264n,m\u22641001\u2264n,m\u2264100)\u00a0\u2014 the size of the table. Each of the following nn lines contains a string of length mm consisting only of 11 and 00\u00a0\u2014 description of the picture that Madoka wants to obtain.OutputIf it is impossible to obtain the given picture, print \u22121\u22121.Otherwise, print in the first line a single integer qq (0\u2264q\u2264n\u22c5m0\u2264q\u2264n\u22c5m)\u00a0\u2014 the number of operations you need to obtain the picture. Note that you do not need to minimize the number of operations.Then for each operation (in the order of execution) print a single line containing four numbers\u00a0\u2014 the coordinates of the upper-left corner and the lower-right corner of the rectangle.ExampleInputCopy4\n4 5\n01000\n10100\n01010\n00110\n2 3\n001\n010\n3 3\n110\n101\n000\n1 1\n0\nOutputCopy4\n1 1 3 3\n3 3 4 4\n4 3 4 4\n4 2 4 3\n1\n1 2 2 3\n-1\n0\nNoteThe description of the first test case is below.  In the third test case, it is impossible to paint the desired picture.In the fourth test case, the initial table is already the desired picture."], "Charmed by the Game": ["https://codeforces.com/problemset/problem/1558/A", "A. Charmed by the Gametime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputAlice and Borys are playing tennis.A tennis match consists of games. In each game, one of the players is serving and the other one is receiving.Players serve in turns: after a game where Alice is serving follows a game where Borys is serving, and vice versa.Each game ends with a victory of one of the players. If a game is won by the serving player, it's said that this player holds serve. If a game is won by the receiving player, it's said that this player breaks serve.It is known that Alice won aa games and Borys won bb games during the match. It is unknown who served first and who won which games.Find all values of kk such that exactly kk breaks could happen during the match between Alice and Borys in total.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641031\u2264t\u2264103). Description of the test cases follows.Each of the next tt lines describes one test case and contains two integers aa and bb (0\u2264a,b\u22641050\u2264a,b\u2264105; a+b>0a+b>0)\u00a0\u2014 the number of games won by Alice and Borys, respectively.It is guaranteed that the sum of a+ba+b over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case print two lines.In the first line, print a single integer mm\u00a0(1\u2264m\u2264a+b+11\u2264m\u2264a+b+1)\u00a0\u2014 the number of values of kk such that exactly kk breaks could happen during the match.In the second line, print mm distinct integers k1,k2,\u2026,kmk1,k2,\u2026,km (0\u2264k1<k2<\u2026<km\u2264a+b0\u2264k1<k2<\u2026<km\u2264a+b)\u00a0\u2014 the sought values of kk in increasing order.ExampleInputCopy3\n2 1\n1 1\n0 5\nOutputCopy4\n0 1 2 3\n2\n0 2\n2\n2 3\nNoteIn the first test case, any number of breaks between 00 and 33 could happen during the match:   Alice holds serve, Borys holds serve, Alice holds serve: 00 breaks;  Borys holds serve, Alice holds serve, Alice breaks serve: 11 break;  Borys breaks serve, Alice breaks serve, Alice holds serve: 22 breaks;  Alice breaks serve, Borys breaks serve, Alice breaks serve: 33 breaks. In the second test case, the players could either both hold serves (00 breaks) or both break serves (22 breaks).In the third test case, either 22 or 33 breaks could happen:   Borys holds serve, Borys breaks serve, Borys holds serve, Borys breaks serve, Borys holds serve: 22 breaks;  Borys breaks serve, Borys holds serve, Borys breaks serve, Borys holds serve, Borys breaks serve: 33 breaks. "], "Plus from Picture": ["https://codeforces.com/problemset/problem/1182/B", "B. Plus from Picturetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a given picture with size w\u00d7hw\u00d7h. Determine if the given picture has a single \"+\" shape or not. A \"+\" shape is described below:  A \"+\" shape has one center nonempty cell.  There should be some (at least one) consecutive non-empty cells in each direction (left, right, up, down) from the center. In other words, there should be a ray in each direction.  All other cells are empty. Find out if the given picture has single \"+\" shape.InputThe first line contains two integers hh and ww (1\u2264h1\u2264h, w\u2264500w\u2264500)\u00a0\u2014 the height and width of the picture.The ii-th of the next hh lines contains string sisi of length ww consisting \".\" and \"*\" where \".\" denotes the empty space and \"*\" denotes the non-empty space.OutputIf the given picture satisfies all conditions, print \"YES\". Otherwise, print \"NO\".You can output each letter in any case (upper or lower).ExamplesInputCopy5 6\n......\n..*...\n.****.\n..*...\n..*...\nOutputCopyYES\nInputCopy3 5\n..*..\n****.\n.*...\nOutputCopyNO\nInputCopy7 7\n.......\n...*...\n..****.\n...*...\n...*...\n.......\n.*.....\nOutputCopyNO\nInputCopy5 6\n..**..\n..**..\n******\n..**..\n..**..\nOutputCopyNO\nInputCopy3 7\n.*...*.\n***.***\n.*...*.\nOutputCopyNO\nInputCopy5 10\n..........\n..*.......\n.*.******.\n..*.......\n..........\nOutputCopyNO\nNoteIn the first example, the given picture contains one \"+\".In the second example, two vertical branches are located in a different column.In the third example, there is a dot outside of the shape.In the fourth example, the width of the two vertical branches is 22.In the fifth example, there are two shapes.In the sixth example, there is an empty space inside of the shape."], "Vasya and Isolated Vertices": ["https://codeforces.com/problemset/problem/1065/B", "B. Vasya and Isolated Verticestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has got an undirected graph consisting of nn vertices and mm edges. This graph doesn't contain any self-loops or multiple edges. Self-loop is an edge connecting a vertex to itself. Multiple edges are a pair of edges such that they connect the same pair of vertices. Since the graph is undirected, the pair of edges (1,2)(1,2) and (2,1)(2,1) is considered to be multiple edges. Isolated vertex of the graph is a vertex such that there is no edge connecting this vertex to any other vertex.Vasya wants to know the minimum and maximum possible number of isolated vertices in an undirected graph consisting of nn vertices and mm edges. InputThe only line contains two integers nn and m\u00a0(1\u2264n\u2264105,0\u2264m\u2264n(n\u22121)2)m\u00a0(1\u2264n\u2264105,0\u2264m\u2264n(n\u22121)2).It is guaranteed that there exists a graph without any self-loops or multiple edges with such number of vertices and edges.OutputIn the only line print two numbers minmin and maxmax \u2014 the minimum and maximum number of isolated vertices, respectively.ExamplesInputCopy4 2OutputCopy0 1InputCopy3 1OutputCopy1 1NoteIn the first example it is possible to construct a graph with 00 isolated vertices: for example, it should contain edges (1,2)(1,2) and (3,4)(3,4). To get one isolated vertex, we may construct a graph with edges (1,2)(1,2) and (1,3)(1,3). In the second example the graph will always contain exactly one isolated vertex."], "Array Elimination": ["https://codeforces.com/problemset/problem/1601/A", "A. Array Eliminationtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given array a1,a2,\u2026,ana1,a2,\u2026,an, consisting of non-negative integers.Let's define operation of \"elimination\" with integer parameter kk (1\u2264k\u2264n1\u2264k\u2264n) as follows:  Choose kk distinct array indices 1\u2264i1<i2<\u2026<ik\u2264n1\u2264i1<i2<\u2026<ik\u2264n.  Calculate x=ai1\u00a0&\u00a0ai2\u00a0&\u00a0\u2026\u00a0&\u00a0aikx=ai1\u00a0&\u00a0ai2\u00a0&\u00a0\u2026\u00a0&\u00a0aik, where && denotes the bitwise AND operation (notes section contains formal definition).  Subtract xx from each of ai1,ai2,\u2026,aikai1,ai2,\u2026,aik; all other elements remain untouched. Find all possible values of kk, such that it's possible to make all elements of array aa equal to 00 using a finite number of elimination operations with parameter kk. It can be proven that exists at least one possible kk for any array aa.Note that you firstly choose kk and only after that perform elimination operations with value kk you've chosen initially.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104). Description of the test cases follows.The first line of each test case contains one integer nn (1\u2264n\u22642000001\u2264n\u2264200000)\u00a0\u2014 the length of array aa.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai<2300\u2264ai<230)\u00a0\u2014 array aa itself.It's guaranteed that the sum of nn over all test cases doesn't exceed 200000200000.OutputFor each test case, print all values kk, such that it's possible to make all elements of aa equal to 00 in a finite number of elimination operations with the given parameter kk.Print them in increasing order.ExampleInputCopy5\n4\n4 4 4 4\n4\n13 7 25 19\n6\n3 5 3 1 7 1\n1\n1\n5\n0 0 0 0 0\nOutputCopy1 2 4\n1 2\n1\n1\n1 2 3 4 5\nNoteIn the first test case:  If k=1k=1, we can make four elimination operations with sets of indices {1}{1}, {2}{2}, {3}{3}, {4}{4}. Since && of one element is equal to the element itself, then for each operation x=aix=ai, so ai\u2212x=ai\u2212ai=0ai\u2212x=ai\u2212ai=0.  If k=2k=2, we can make two elimination operations with, for example, sets of indices {1,3}{1,3} and {2,4}{2,4}: x=a1\u00a0&\u00a0a3x=a1\u00a0&\u00a0a3 == a2\u00a0&\u00a0a4a2\u00a0&\u00a0a4 == 4\u00a0&\u00a04=44\u00a0&\u00a04=4. For both operations x=4x=4, so after the first operation a1\u2212x=0a1\u2212x=0 and a3\u2212x=0a3\u2212x=0, and after the second operation\u00a0\u2014 a2\u2212x=0a2\u2212x=0 and a4\u2212x=0a4\u2212x=0.  If k=3k=3, it's impossible to make all aiai equal to 00. After performing the first operation, we'll get three elements equal to 00 and one equal to 44. After that, all elimination operations won't change anything, since at least one chosen element will always be equal to 00.  If k=4k=4, we can make one operation with set {1,2,3,4}{1,2,3,4}, because x=a1\u00a0&\u00a0a2\u00a0&\u00a0a3\u00a0&\u00a0a4x=a1\u00a0&\u00a0a2\u00a0&\u00a0a3\u00a0&\u00a0a4 =4=4. In the second test case, if k=2k=2 then we can make the following elimination operations:  Operation with indices {1,3}{1,3}: x=a1\u00a0&\u00a0a3x=a1\u00a0&\u00a0a3 == 13\u00a0&\u00a025=913\u00a0&\u00a025=9. a1\u2212x=13\u22129=4a1\u2212x=13\u22129=4 and a3\u2212x=25\u22129=16a3\u2212x=25\u22129=16. Array aa will become equal to [4,7,16,19][4,7,16,19].  Operation with indices {3,4}{3,4}: x=a3\u00a0&\u00a0a4x=a3\u00a0&\u00a0a4 == 16\u00a0&\u00a019=1616\u00a0&\u00a019=16. a3\u2212x=16\u221216=0a3\u2212x=16\u221216=0 and a4\u2212x=19\u221216=3a4\u2212x=19\u221216=3. Array aa will become equal to [4,7,0,3][4,7,0,3].  Operation with indices {2,4}{2,4}: x=a2\u00a0&\u00a0a4x=a2\u00a0&\u00a0a4 == 7\u00a0&\u00a03=37\u00a0&\u00a03=3. a2\u2212x=7\u22123=4a2\u2212x=7\u22123=4 and a4\u2212x=3\u22123=0a4\u2212x=3\u22123=0. Array aa will become equal to [4,4,0,0][4,4,0,0].  Operation with indices {1,2}{1,2}: x=a1\u00a0&\u00a0a2x=a1\u00a0&\u00a0a2 == 4\u00a0&\u00a04=44\u00a0&\u00a04=4. a1\u2212x=4\u22124=0a1\u2212x=4\u22124=0 and a2\u2212x=4\u22124=0a2\u2212x=4\u22124=0. Array aa will become equal to [0,0,0,0][0,0,0,0]. Formal definition of bitwise AND:Let's define bitwise AND (&&) as follows. Suppose we have two non-negative integers xx and yy, let's look at their binary representations (possibly, with leading zeroes): xk\u2026x2x1x0xk\u2026x2x1x0 and yk\u2026y2y1y0yk\u2026y2y1y0. Here, xixi is the ii-th bit of number xx, and yiyi is the ii-th bit of number yy. Let r=x\u00a0&\u00a0yr=x\u00a0&\u00a0y is a result of operation && on number xx and yy. Then binary representation of rr will be rk\u2026r2r1r0rk\u2026r2r1r0, where:ri={1,\u00a0if\u00a0xi=1\u00a0and\u00a0yi=10,\u00a0if\u00a0xi=0\u00a0or\u00a0yi=0ri={1,\u00a0if\u00a0xi=1\u00a0and\u00a0yi=10,\u00a0if\u00a0xi=0\u00a0or\u00a0yi=0"], "Swords": ["https://codeforces.com/problemset/problem/1216/D", "D. Swordstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere were nn types of swords in the theater basement which had been used during the plays. Moreover there were exactly xx swords of each type. yy people have broken into the theater basement and each of them has taken exactly zz swords of some single type. Note that different people might have taken different types of swords. Note that the values x,yx,y and zz are unknown for you.The next morning the director of the theater discovers the loss. He counts all swords \u2014 exactly aiai swords of the ii-th type are left untouched.The director has no clue about the initial number of swords of each type in the basement, the number of people who have broken into the basement and how many swords each of them have taken.For example, if n=3n=3, a=[3,12,6]a=[3,12,6] then one of the possible situations is x=12x=12, y=5y=5 and z=3z=3. Then the first three people took swords of the first type and the other two people took swords of the third type. Note that you don't know values x,yx,y and zz beforehand but know values of nn and aa.Thus he seeks for your help. Determine the minimum number of people yy, which could have broken into the theater basement, and the number of swords zz each of them has taken.InputThe first line of the input contains one integer nn (2\u2264n\u22642\u22c5105)(2\u2264n\u22642\u22c5105) \u2014 the number of types of swords.The second line of the input contains the sequence a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u2264109)(0\u2264ai\u2264109), where aiai equals to the number of swords of the ii-th type, which have remained in the basement after the theft. It is guaranteed that there exists at least one such pair of indices (j,k)(j,k) that aj\u2260akaj\u2260ak.OutputPrint two integers yy and zz \u2014 the minimum number of people which could have broken into the basement and the number of swords each of them has taken.ExamplesInputCopy3\n3 12 6\nOutputCopy5 3\nInputCopy2\n2 9\nOutputCopy1 7\nInputCopy7\n2 1000000000 4 6 8 4 2\nOutputCopy2999999987 2\nInputCopy6\n13 52 0 13 26 52\nOutputCopy12 13\nNoteIn the first example the minimum value of yy equals to 55, i.e. the minimum number of people who could have broken into the basement, is 55. Each of them has taken 33 swords: three of them have taken 33 swords of the first type, and two others have taken 33 swords of the third type.In the second example the minimum value of yy is 11, i.e. the minimum number of people who could have broken into the basement, equals to 11. He has taken 77 swords of the first type."], "Make it Increasing": ["https://codeforces.com/problemset/problem/1667/A", "A. Make it Increasingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn positive integers, and an array bb, with length nn. Initially bi=0bi=0 for each 1\u2264i\u2264n1\u2264i\u2264n.In one move you can choose an integer ii (1\u2264i\u2264n1\u2264i\u2264n), and add aiai to bibi or subtract aiai from bibi. What is the minimum number of moves needed to make bb increasing (that is, every element is strictly greater than every element before it)?InputThe first line contains a single integer nn (2\u2264n\u226450002\u2264n\u22645000).The second line contains nn integers, a1a1, a2a2, ..., anan (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 the elements of the array aa.OutputPrint a single integer, the minimum number of moves to make bb increasing.ExamplesInputCopy5\n1 2 3 4 5\nOutputCopy4\nInputCopy7\n1 2 1 2 1 2 1\nOutputCopy10\nInputCopy8\n1 8 2 7 3 6 4 5\nOutputCopy16\nNoteExample 11: you can subtract a1a1 from b1b1, and add a3a3, a4a4, and a5a5 to b3b3, b4b4, and b5b5 respectively. The final array will be [\u22121\u22121, 00, 33, 44, 55] after 44 moves.Example 22: you can reach [\u22123\u22123, \u22122\u22122, \u22121\u22121, 00, 11, 22, 33] in 1010 moves."], "Cloning Toys": ["https://codeforces.com/problemset/problem/922/A", "A. Cloning Toystime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImp likes his plush toy a lot.  Recently, he found a machine that can clone plush toys. Imp knows that if he applies the machine to an original toy, he additionally gets one more original toy and one copy, and if he applies the machine to a copied toy, he gets two additional copies.Initially, Imp has only one original toy. He wants to know if it is possible to use machine to get exactly x copied toys and y original toys? He can't throw toys away, and he can't apply the machine to a copy if he doesn't currently have any copies.InputThe only line contains two integers x and y (0\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009109)\u00a0\u2014 the number of copies and the number of original toys Imp wants to get (including the initial one).OutputPrint \"Yes\", if the desired configuration is possible, and \"No\" otherwise.You can print each letter in arbitrary case (upper or lower).ExamplesInputCopy6 3OutputCopyYesInputCopy4 2OutputCopyNoInputCopy1000 1001OutputCopyYesNoteIn the first example, Imp has to apply the machine twice to original toys and then twice to copies."], "Twist the Permutation": ["https://codeforces.com/problemset/problem/1650/D", "D. Twist the Permutationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya got an array aa of numbers from 11 to nn, where a[i]=ia[i]=i.He performed nn operations sequentially. In the end, he received a new state of the aa array.At the ii-th operation, Petya chose the first ii elements of the array and cyclically shifted them to the right an arbitrary number of times (elements with indexes i+1i+1 and more remain in their places). One cyclic shift to the right is such a transformation that the array a=[a1,a2,\u2026,an]a=[a1,a2,\u2026,an] becomes equal to the array a=[ai,a1,a2,\u2026,ai\u22122,ai\u22121,ai+1,ai+2,\u2026,an]a=[ai,a1,a2,\u2026,ai\u22122,ai\u22121,ai+1,ai+2,\u2026,an].For example, if a=[5,4,2,1,3]a=[5,4,2,1,3] and i=3i=3 (that is, this is the third operation), then as a result of this operation, he could get any of these three arrays:  a=[5,4,2,1,3]a=[5,4,2,1,3] (makes 00 cyclic shifts, or any number that is divisible by 33);  a=[2,5,4,1,3]a=[2,5,4,1,3] (makes 11 cyclic shift, or any number that has a remainder of 11 when divided by 33);  a=[4,2,5,1,3]a=[4,2,5,1,3] (makes 22 cyclic shifts, or any number that has a remainder of 22 when divided by 33). Let's look at an example. Let n=6n=6, i.e. initially a=[1,2,3,4,5,6]a=[1,2,3,4,5,6]. A possible scenario is described below.  i=1i=1: no matter how many cyclic shifts Petya makes, the array aa does not change.  i=2i=2: let's say Petya decided to make a 11 cyclic shift, then the array will look like a=[2,1,3,4,5,6]a=[2,1,3,4,5,6].  i=3i=3: let's say Petya decided to make 11 cyclic shift, then the array will look like a=[3,2,1,4,5,6]a=[3,2,1,4,5,6].  i=4i=4: let's say Petya decided to make 22 cyclic shifts, the original array will look like a=[1,4,3,2,5,6]a=[1,4,3,2,5,6].  i=5i=5: let's say Petya decided to make 00 cyclic shifts, then the array won't change.  i=6i=6: let's say Petya decided to make 44 cyclic shifts, the array will look like a=[3,2,5,6,1,4]a=[3,2,5,6,1,4]. You are given a final array state aa after all nn operations. Determine if there is a way to perform the operation that produces this result. In this case, if an answer exists, print the numbers of cyclical shifts that occurred during each of the nn operations.InputThe first line of the input contains an integer tt (1\u2264t\u22645001\u2264t\u2264500)\u00a0\u2014 the number of test cases in the test.The descriptions of the test cases follow.The first line of the description of each test case contains one integer nn (2\u2264n\u22642\u22c51032\u2264n\u22642\u22c5103)\u00a0\u2014 the length of the array aa.The next line contains the final state of the array aa: nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n) are written. All aiai are distinct.It is guaranteed that the sum of nn values over all test cases does not exceed 2\u22c51032\u22c5103.OutputFor each test case, print the answer on a separate line.Print -1 if the given final value aa cannot be obtained by performing an arbitrary number of cyclic shifts on each operation. Otherwise, print nn non-negative integers d1,d2,\u2026,dnd1,d2,\u2026,dn (di\u22650di\u22650), where didi means that during the ii-th operation the first ii elements of the array were cyclic shifted to the right didi times.If there are several possible answers, print the one where the total number of shifts is minimal (that is, the sum of didi values is the smallest). If there are several such answers, print any of them.ExampleInputCopy3\n6\n3 2 5 6 1 4\n3\n3 1 2\n8\n5 8 1 3 2 6 4 7\nOutputCopy0 1 1 2 0 4 \n0 0 1 \n0 1 2 0 2 5 6 2 \nNoteThe first test case matches the example from the statement.The second set of input data is simple. Note that the answer [3,2,1][3,2,1] also gives the same permutation, but since the total number of shifts 3+2+13+2+1 is greater than 0+0+10+0+1, this answer is not correct."], "Game of Ball Passing": ["https://codeforces.com/problemset/problem/1649/B", "B. Game of Ball Passingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDaniel is watching a football team playing a game during their training session. They want to improve their passing skills during that session.The game involves nn players, making multiple passes towards each other. Unfortunately, since the balls were moving too fast, after the session Daniel is unable to know how many balls were involved during the game. The only thing he knows is the number of passes delivered by each player during all the session.Find the minimum possible amount of balls that were involved in the game.InputThere are several test cases in the input data. The first line contains a single integer tt (1\u2264t\u22645\u22c51041\u2264t\u22645\u22c5104)\u00a0\u2014 the number of test cases. This is followed by the test cases description.The first line of each test case contains one integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the number of players.The second line of the test case contains a sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109), where aiai is the number of passes delivered by the ii-th player.It is guaranteed that the sum of nn over all test cases doesn't exceed 105105.OutputFor each test case print a single integer\u00a0\u2014 the answer to the problem.ExampleInputCopy4\n4\n2 3 3 2\n3\n1 5 2\n2\n0 0\n4\n1000000000 1000000000 1000000000 1000000000\nOutputCopy1\n2\n0\n1\nNoteIn the first test case, with the only ball, the game can go like this:2\u21921\u21923\u21924\u21921\u21922\u21923\u21924\u21922\u21923\u219222\u21921\u21923\u21924\u21921\u21922\u21923\u21924\u21922\u21923\u21922.In the second test case, there is no possible way to play the game with only one ball. One possible way to play with two balls:2\u21921\u21922\u21923\u21922\u219212\u21921\u21922\u21923\u21922\u21921.2\u21923\u21922\u219212\u21923\u21922\u21921In the third example, there were no passes, so 00 balls are possible."], "Accordion": ["https://codeforces.com/problemset/problem/1101/B", "B. Accordiontime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn accordion is a string (yes, in the real world accordions are musical instruments, but let's forget about it for a while) which can be represented as a concatenation of: an opening bracket (ASCII code 091091), a colon (ASCII code 058058), some (possibly zero) vertical line characters (ASCII code 124124), another colon, and a closing bracket (ASCII code 093093). The length of the accordion is the number of characters in it.For example, [::], [:||:] and [:|||:] are accordions having length 44, 66 and 77. (:|:), {:||:}, [:], ]:||:[ are not accordions. You are given a string ss. You want to transform it into an accordion by removing some (possibly zero) characters from it. Note that you may not insert new characters or reorder existing ones. Is it possible to obtain an accordion by removing characters from ss, and if so, what is the maximum possible length of the result?InputThe only line contains one string ss (1\u2264|s|\u22645000001\u2264|s|\u2264500000). It consists of lowercase Latin letters and characters [, ], : and |.OutputIf it is not possible to obtain an accordion by removing some characters from ss, print \u22121\u22121. Otherwise print maximum possible length of the resulting accordion.ExamplesInputCopy|[a:b:|]\nOutputCopy4\nInputCopy|]:[|:]\nOutputCopy-1\n"], "Tiles": ["https://codeforces.com/problemset/problem/1178/C", "C. Tilestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBob is decorating his kitchen, more precisely, the floor. He has found a prime candidate for the tiles he will use. They come in a simple form factor\u00a0\u2014\u00a0a square tile that is diagonally split into white and black part as depicted in the figure below.  The dimension of this tile is perfect for this kitchen, as he will need exactly w\u00d7hw\u00d7h tiles without any scraps. That is, the width of the kitchen is ww tiles, and the height is hh tiles. As each tile can be rotated in one of four ways, he still needs to decide on how exactly he will tile the floor. There is a single aesthetic criterion that he wants to fulfil: two adjacent tiles must not share a colour on the edge\u00a0\u2014\u00a0i.e. one of the tiles must have a white colour on the shared border, and the second one must be black.  The picture on the left shows one valid tiling of a 3\u00d723\u00d72 kitchen. The picture on the right shows an invalid arrangement, as the bottom two tiles touch with their white parts. Find the number of possible tilings. As this number may be large, output its remainder when divided by 998244353998244353 (a prime number). InputThe only line contains two space separated integers ww, hh\u00a0(1\u2264w,h\u226410001\u2264w,h\u22641000)\u00a0\u2014\u00a0the width and height of the kitchen, measured in tiles.OutputOutput a single integer nn\u00a0\u2014\u00a0the remainder of the number of tilings when divided by 998244353998244353.ExamplesInputCopy2 2\nOutputCopy16\nInputCopy2 4\nOutputCopy64\n"], "Yet Another Crosses Problem": ["https://codeforces.com/problemset/problem/1194/B", "B. Yet Another Crosses Problemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a picture consisting of nn rows and mm columns. Rows are numbered from 11 to nn from the top to the bottom, columns are numbered from 11 to mm from the left to the right. Each cell is painted either black or white. You think that this picture is not interesting enough. You consider a picture to be interesting if there is at least one cross in it. A cross is represented by a pair of numbers xx and yy, where 1\u2264x\u2264n1\u2264x\u2264n and 1\u2264y\u2264m1\u2264y\u2264m, such that all cells in row xx and all cells in column yy are painted black.For examples, each of these pictures contain crosses:  The fourth picture contains 4 crosses: at (1,3)(1,3), (1,5)(1,5), (3,3)(3,3) and (3,5)(3,5).Following images don't contain crosses:  You have a brush and a can of black paint, so you can make this picture interesting. Each minute you may choose a white cell and paint it black.What is the minimum number of minutes you have to spend so the resulting picture contains at least one cross?You are also asked to answer multiple independent queries.InputThe first line contains an integer qq (1\u2264q\u22645\u22c51041\u2264q\u22645\u22c5104) \u2014 the number of queries.The first line of each query contains two integers nn and mm (1\u2264n,m\u22645\u22c51041\u2264n,m\u22645\u22c5104, n\u22c5m\u22644\u22c5105n\u22c5m\u22644\u22c5105) \u2014 the number of rows and the number of columns in the picture.Each of the next nn lines contains mm characters \u2014 '.' if the cell is painted white and '*' if the cell is painted black.It is guaranteed that \u2211n\u22645\u22c5104\u2211n\u22645\u22c5104 and \u2211n\u22c5m\u22644\u22c5105\u2211n\u22c5m\u22644\u22c5105.OutputPrint qq lines, the ii-th line should contain a single integer \u2014 the answer to the ii-th query, which is the minimum number of minutes you have to spend so the resulting picture contains at least one cross.ExampleInputCopy9\n5 5\n..*..\n..*..\n*****\n..*..\n..*..\n3 4\n****\n.*..\n.*..\n4 3\n***\n*..\n*..\n*..\n5 5\n*****\n*.*.*\n*****\n..*.*\n..***\n1 4\n****\n5 5\n.....\n..*..\n.***.\n..*..\n.....\n5 3\n...\n.*.\n.*.\n***\n.*.\n3 3\n.*.\n*.*\n.*.\n4 4\n*.**\n....\n*.**\n*.**\nOutputCopy0\n0\n0\n0\n0\n4\n1\n1\n2\nNoteThe example contains all the pictures from above in the same order.The first 5 pictures already contain a cross, thus you don't have to paint anything.You can paint (1,3)(1,3), (3,1)(3,1), (5,3)(5,3) and (3,5)(3,5) on the 66-th picture to get a cross in (3,3)(3,3). That'll take you 44 minutes.You can paint (1,2)(1,2) on the 77-th picture to get a cross in (4,2)(4,2).You can paint (2,2)(2,2) on the 88-th picture to get a cross in (2,2)(2,2). You can, for example, paint (1,3)(1,3), (3,1)(3,1) and (3,3)(3,3) to get a cross in (3,3)(3,3) but that will take you 33 minutes instead of 11.There are 9 possible crosses you can get in minimum time on the 99-th picture. One of them is in (1,1)(1,1): paint (1,2)(1,2) and (2,1)(2,1)."], "Oh Those Palindromes": ["https://codeforces.com/problemset/problem/1063/A", "A. Oh Those Palindromestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA non-empty string is called palindrome, if it reads the same from the left to the right and from the right to the left. For example, \"abcba\", \"a\", and \"abba\" are palindromes, while \"abab\" and \"xy\" are not.A string is called a substring of another string, if it can be obtained from that string by dropping some (possibly zero) number of characters from the beginning and from the end of it. For example, \"abc\", \"ab\", and \"c\" are substrings of the string \"abc\", while \"ac\" and \"d\" are not.Let's define a palindromic count of the string as the number of its substrings that are palindromes. For example, the palindromic count of the string \"aaa\" is 66 because all its substrings are palindromes, and the palindromic count of the string \"abc\" is 33 because only its substrings of length 11 are palindromes.You are given a string ss. You can arbitrarily rearrange its characters. You goal is to obtain a string with the maximum possible value of palindromic count.InputThe first line contains an integer nn (1\u2264n\u22641000001\u2264n\u2264100000)\u00a0\u2014 the length of string ss.The second line contains string ss that consists of exactly nn lowercase characters of Latin alphabet.OutputPrint string tt, which consists of the same set of characters (and each characters appears exactly the same number of times) as string ss. Moreover, tt should have the maximum possible value of palindromic count among all such strings strings.If there are multiple such strings, print any of them.ExamplesInputCopy5oololOutputCopyololoInputCopy16gagadbcgghhchbdfOutputCopyabccbaghghghgdfdNoteIn the first example, string \"ololo\" has 99 palindromic substrings: \"o\", \"l\", \"o\", \"l\", \"o\", \"olo\", \"lol\", \"olo\", \"ololo\". Note, that even though some substrings coincide, they are counted as many times as they appear in the resulting string.In the second example, the palindromic count of string \"abccbaghghghgdfd\" is 2929."], "Reach Median": ["https://codeforces.com/problemset/problem/1037/B", "B. Reach Mediantime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of nn integers and an integer ss. It is guaranteed that nn is odd.In one operation you can either increase or decrease any single element by one. Calculate the minimum number of operations required to make the median of the array being equal to ss.The median of the array with odd length is the value of the element which is located on the middle position after the array is sorted. For example, the median of the array 6,5,86,5,8 is equal to 66, since if we sort this array we will get 5,6,85,6,8, and 66 is located on the middle position.InputThe first line contains two integers nn and ss (1\u2264n\u22642\u22c5105\u221211\u2264n\u22642\u22c5105\u22121, 1\u2264s\u22641091\u2264s\u2264109)\u00a0\u2014 the length of the array and the required value of median.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the elements of the array aa.It is guaranteed that nn is odd.OutputIn a single line output the minimum number of operations to make the median being equal to ss.ExamplesInputCopy3 86 5 8OutputCopy2InputCopy7 2021 15 12 11 20 19 12OutputCopy6NoteIn the first sample, 66 can be increased twice. The array will transform to 8,5,88,5,8, which becomes 5,8,85,8,8 after sorting, hence the median is equal to 88.In the second sample, 1919 can be increased once and 1515 can be increased five times. The array will become equal to 21,20,12,11,20,20,1221,20,12,11,20,20,12. If we sort this array we get 11,12,12,20,20,20,2111,12,12,20,20,20,21, this way the median is 2020."], "Binary String Constructing": ["https://codeforces.com/problemset/problem/1003/B", "B. Binary String Constructingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given three integers aa, bb and xx. Your task is to construct a binary string ss of length n=a+bn=a+b such that there are exactly aa zeroes, exactly bb ones and exactly xx indices ii (where 1\u2264i<n1\u2264i<n) such that si\u2260si+1si\u2260si+1. It is guaranteed that the answer always exists.For example, for the string \"01010\" there are four indices ii such that 1\u2264i<n1\u2264i<n and si\u2260si+1si\u2260si+1 (i=1,2,3,4i=1,2,3,4). For the string \"111001\" there are two such indices ii (i=3,5i=3,5).Recall that binary string is a non-empty sequence of characters where each character is either 0 or 1.InputThe first line of the input contains three integers aa, bb and xx (1\u2264a,b\u2264100,1\u2264x<a+b)1\u2264a,b\u2264100,1\u2264x<a+b).OutputPrint only one string ss, where ss is any binary string satisfying conditions described above. It is guaranteed that the answer always exists.ExamplesInputCopy2 2 1OutputCopy1100InputCopy3 3 3OutputCopy101100InputCopy5 3 6OutputCopy01010100NoteAll possible answers for the first example:   1100;  0011. All possible answers for the second example:   110100;  101100;  110010;  100110;  011001;  001101;  010011;  001011. "], "Wet Shark and Bishops": ["https://codeforces.com/problemset/problem/621/B", "B. Wet Shark and Bishopstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputToday, Wet Shark is given n bishops on a 1000 by 1000 grid. Both rows and columns of the grid are numbered from 1 to 1000. Rows are numbered from top to bottom, while columns are numbered from left to right.Wet Shark thinks that two bishops attack each other if they share the same diagonal. Note, that this is the only criteria, so two bishops may attack each other (according to Wet Shark) even if there is another bishop located between them. Now Wet Shark wants to count the number of pairs of bishops that attack each other.InputThe first line of the input contains n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of bishops.Each of next n lines contains two space separated integers xi and yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u20091000)\u00a0\u2014 the number of row and the number of column where i-th bishop is positioned. It's guaranteed that no two bishops share the same position.OutputOutput one integer\u00a0\u2014 the number of pairs of bishops which attack each other. ExamplesInputCopy51 11 53 35 15 5OutputCopy6InputCopy31 12 33 5OutputCopy0NoteIn the first sample following pairs of bishops attack each other: (1,\u20093), (1,\u20095), (2,\u20093), (2,\u20094), (3,\u20094) and (3,\u20095). Pairs (1,\u20092), (1,\u20094), (2,\u20095) and (4,\u20095) do not attack each other because they do not share the same diagonal."], "Summarize to the Power of Two": ["https://codeforces.com/problemset/problem/1005/C", "C. Summarize to the Power of Twotime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA sequence a1,a2,\u2026,ana1,a2,\u2026,an is called good if, for each element aiai, there exists an element ajaj (i\u2260ji\u2260j) such that ai+ajai+aj is a power of two (that is, 2d2d for some non-negative integer dd).For example, the following sequences are good:  [5,3,11][5,3,11] (for example, for a1=5a1=5 we can choose a2=3a2=3. Note that their sum is a power of two. Similarly, such an element can be found for a2a2 and a3a3),  [1,1,1,1023][1,1,1,1023],  [7,39,89,25,89][7,39,89,25,89],  [][]. Note that, by definition, an empty sequence (with a length of 00) is good.For example, the following sequences are not good:  [16][16] (for a1=16a1=16, it is impossible to find another element ajaj such that their sum is a power of two),  [4,16][4,16] (for a1=4a1=4, it is impossible to find another element ajaj such that their sum is a power of two),  [1,3,2,8,8,8][1,3,2,8,8,8] (for a3=2a3=2, it is impossible to find another element ajaj such that their sum is a power of two). You are given a sequence a1,a2,\u2026,ana1,a2,\u2026,an. What is the minimum number of elements you need to remove to make it good? You can delete an arbitrary set of elements.InputThe first line contains the integer nn (1\u2264n\u22641200001\u2264n\u2264120000) \u2014 the length of the given sequence.The second line contains the sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).OutputPrint the minimum number of elements needed to be removed from the given sequence in order to make it good. It is possible that you need to delete all nn elements, make it empty, and thus get a good sequence.ExamplesInputCopy64 7 1 5 4 9OutputCopy1InputCopy51 2 3 4 5OutputCopy2InputCopy116OutputCopy1InputCopy41 1 1 1023OutputCopy0NoteIn the first example, it is enough to delete one element a4=5a4=5. The remaining elements form the sequence [4,7,1,4,9][4,7,1,4,9], which is good."], "Shawarma Tent": ["https://codeforces.com/problemset/problem/1271/C", "C. Shawarma Tenttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe map of the capital of Berland can be viewed on the infinite coordinate plane. Each point with integer coordinates contains a building, and there are streets connecting every building to four neighbouring buildings. All streets are parallel to the coordinate axes.The main school of the capital is located in (sx,sy)(sx,sy). There are nn students attending this school, the ii-th of them lives in the house located in (xi,yi)(xi,yi). It is possible that some students live in the same house, but no student lives in (sx,sy)(sx,sy).After classes end, each student walks from the school to his house along one of the shortest paths. So the distance the ii-th student goes from the school to his house is |sx\u2212xi|+|sy\u2212yi||sx\u2212xi|+|sy\u2212yi|.The Provision Department of Berland has decided to open a shawarma tent somewhere in the capital (at some point with integer coordinates). It is considered that the ii-th student will buy a shawarma if at least one of the shortest paths from the school to the ii-th student's house goes through the point where the shawarma tent is located. It is forbidden to place the shawarma tent at the point where the school is located, but the coordinates of the shawarma tent may coincide with the coordinates of the house of some student (or even multiple students).You want to find the maximum possible number of students buying shawarma and the optimal location for the tent itself.InputThe first line contains three integers nn, sxsx, sysy (1\u2264n\u22642000001\u2264n\u2264200000, 0\u2264sx,sy\u22641090\u2264sx,sy\u2264109) \u2014 the number of students and the coordinates of the school, respectively.Then nn lines follow. The ii-th of them contains two integers xixi, yiyi (0\u2264xi,yi\u22641090\u2264xi,yi\u2264109) \u2014 the location of the house where the ii-th student lives. Some locations of houses may coincide, but no student lives in the same location where the school is situated.OutputThe output should consist of two lines. The first of them should contain one integer cc \u2014 the maximum number of students that will buy shawarmas at the tent. The second line should contain two integers pxpx and pypy \u2014 the coordinates where the tent should be located. If there are multiple answers, print any of them. Note that each of pxpx and pypy should be not less than 00 and not greater than 109109.ExamplesInputCopy4 3 2\n1 3\n4 2\n5 1\n4 1\nOutputCopy3\n4 2\nInputCopy3 100 100\n0 0\n0 0\n100 200\nOutputCopy2\n99 100\nInputCopy7 10 12\n5 6\n20 23\n15 4\n16 5\n4 54\n12 1\n4 15\nOutputCopy4\n10 11\nNoteIn the first example, If we build the shawarma tent in (4,2)(4,2), then the students living in (4,2)(4,2), (4,1)(4,1) and (5,1)(5,1) will visit it.In the second example, it is possible to build the shawarma tent in (1,1)(1,1), then both students living in (0,0)(0,0) will visit it."], "Archer": ["https://codeforces.com/problemset/problem/312/B", "B. Archertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSmallR is an archer. SmallR is taking a match of archer with Zanoes. They try to shoot in the target in turns, and SmallR shoots first. The probability of shooting the target each time is  for SmallR while  for Zanoes. The one who shoots in the target first should be the winner.Output the probability that SmallR will win the match.InputA single line contains four integers .OutputPrint a single real number, the probability that SmallR will win the match.The answer will be considered correct if the absolute or relative error doesn't exceed 10\u2009-\u20096.ExamplesInputCopy1 2 1 2OutputCopy0.666666666667"], "Substring Removal": ["https://codeforces.com/problemset/problem/1096/B", "B. Substring Removaltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string ss of length nn consisting only of lowercase Latin letters.A substring of a string is a contiguous subsequence of that string. So, string \"forces\" is substring of string \"codeforces\", but string \"coder\" is not.Your task is to calculate the number of ways to remove exactly one substring from this string in such a way that all remaining characters are equal (the number of distinct characters either zero or one).It is guaranteed that there is at least two different characters in ss.Note that you can remove the whole string and it is correct. Also note that you should remove at least one character.Since the answer can be rather large (not very large though) print it modulo 998244353998244353.If you are Python programmer, consider using PyPy instead of Python when you submit your code.InputThe first line of the input contains one integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the length of the string ss.The second line of the input contains the string ss of length nn consisting only of lowercase Latin letters.It is guaranteed that there is at least two different characters in ss.OutputPrint one integer \u2014 the number of ways modulo 998244353998244353 to remove exactly one substring from ss in such way that all remaining characters are equal.ExamplesInputCopy4\nabaa\nOutputCopy6\nInputCopy7\naacdeee\nOutputCopy6InputCopy2\naz\nOutputCopy3NoteLet s[l;r]s[l;r] be the substring of ss from the position ll to the position rr inclusive.Then in the first example you can remove the following substrings:   s[1;2]s[1;2];  s[1;3]s[1;3];  s[1;4]s[1;4];  s[2;2]s[2;2];  s[2;3]s[2;3];  s[2;4]s[2;4]. In the second example you can remove the following substrings:   s[1;4]s[1;4];  s[1;5]s[1;5];  s[1;6]s[1;6];  s[1;7]s[1;7];  s[2;7]s[2;7];  s[3;7]s[3;7]. In the third example you can remove the following substrings:   s[1;1]s[1;1];  s[1;2]s[1;2];  s[2;2]s[2;2]. "], "Rubik's Cube Coloring (easy version)": ["https://codeforces.com/problemset/problem/1594/E1", "E1. Rubik's Cube Coloring (easy version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt is the easy version of the problem. The difference is that in this version, there are no nodes with already chosen colors.Theofanis is starving, and he wants to eat his favorite food, sheftalia. However, he should first finish his homework. Can you help him with this problem?You have a perfect binary tree of 2k\u221212k\u22121 nodes\u00a0\u2014 a binary tree where all vertices ii from 11 to 2k\u22121\u221212k\u22121\u22121 have exactly two children: vertices 2i2i and 2i+12i+1. Vertices from 2k\u221212k\u22121 to 2k\u221212k\u22121 don't have any children. You want to color its vertices with the 66 Rubik's cube colors (White, Green, Red, Blue, Orange and Yellow).Let's call a coloring good when all edges connect nodes with colors that are neighboring sides in the Rubik's cube.  A picture of Rubik's cube and its 2D map. More formally:   a white node can not be neighboring with white and yellow nodes;  a yellow node can not be neighboring with white and yellow nodes;  a green node can not be neighboring with green and blue nodes;  a blue node can not be neighboring with green and blue nodes;  a red node can not be neighboring with red and orange nodes;  an orange node can not be neighboring with red and orange nodes; You want to calculate the number of the good colorings of the binary tree. Two colorings are considered different if at least one node is colored with a different color.The answer may be too large, so output the answer modulo 109+7109+7.InputThe first and only line contains the integers kk (1\u2264k\u2264601\u2264k\u226460)\u00a0\u2014 the number of levels in the perfect binary tree you need to color.OutputPrint one integer\u00a0\u2014 the number of the different colorings modulo 109+7109+7.ExamplesInputCopy3\nOutputCopy24576\nInputCopy14\nOutputCopy934234\nNoteIn the picture below, you can see one of the correct colorings of the first example.  "], "Increase and Decrease": ["https://codeforces.com/problemset/problem/246/B", "B. Increase and Decreasetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarpus has an array, consisting of n integers a1,\u2009a2,\u2009...,\u2009an. Polycarpus likes it when numbers in an array match. That's why he wants the array to have as many equal numbers as possible. For that Polycarpus performs the following operation multiple times:  he chooses two elements of the array ai, aj (i\u2009\u2260\u2009j);  he simultaneously increases number ai by 1 and decreases number aj by 1, that is, executes ai\u2009=\u2009ai\u2009+\u20091 and aj\u2009=\u2009aj\u2009-\u20091. The given operation changes exactly two distinct array elements. Polycarpus can apply the described operation an infinite number of times. Now he wants to know what maximum number of equal array elements he can get if he performs an arbitrary number of such operation. Help Polycarpus.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the array size. The second line contains space-separated integers a1,\u2009a2,\u2009...,\u2009an (|ai|\u2009\u2264\u2009104) \u2014 the original array.OutputPrint a single integer \u2014 the maximum number of equal array elements he can get if he performs an arbitrary number of the given operation.ExamplesInputCopy22 1OutputCopy1InputCopy31 4 1OutputCopy3"], "New Year's Eve": ["https://codeforces.com/problemset/problem/912/B", "B. New Year's Evetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSince Grisha behaved well last year, at New Year's Eve he was visited by Ded Moroz who brought an enormous bag of gifts with him! The bag contains n sweet candies from the good ol' bakery, each labeled from 1 to n corresponding to its tastiness. No two candies have the same tastiness.The choice of candies has a direct effect on Grisha's happiness. One can assume that he should take the tastiest ones\u00a0\u2014 but no, the holiday magic turns things upside down. It is the xor-sum of tastinesses that matters, not the ordinary sum!A xor-sum of a sequence of integers a1,\u2009a2,\u2009...,\u2009am is defined as the bitwise XOR of all its elements: , here  denotes the bitwise XOR operation; more about bitwise XOR can be found here.Ded Moroz warned Grisha he has more houses to visit, so Grisha can take no more than k candies from the bag. Help Grisha determine the largest xor-sum (largest xor-sum means maximum happiness!) he can obtain.InputThe sole string contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u20091018).OutputOutput one number\u00a0\u2014 the largest possible xor-sum.ExamplesInputCopy4 3OutputCopy7InputCopy6 6OutputCopy7NoteIn the first sample case, one optimal answer is 1, 2 and 4, giving the xor-sum of 7.In the second sample case, one can, for example, take all six candies and obtain the xor-sum of 7."], "PolandBall and Forest": ["https://codeforces.com/problemset/problem/755/C", "C. PolandBall and Foresttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolandBall lives in a forest with his family. There are some trees in the forest. Trees are undirected acyclic graphs with k vertices and k\u2009-\u20091 edges, where k is some integer. Note that one vertex is a valid tree.There is exactly one relative living in each vertex of each tree, they have unique ids from 1 to n. For each Ball i we know the id of its most distant relative living on the same tree. If there are several such vertices, we only know the value of the one with smallest id among those.How many trees are there in the forest?InputThe first line contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009104)\u00a0\u2014 the number of Balls living in the forest.The second line contains a sequence p1,\u2009p2,\u2009...,\u2009pn of length n, where (1\u2009\u2264\u2009pi\u2009\u2264\u2009n) holds and pi denotes the most distant from Ball i relative living on the same tree. If there are several most distant relatives living on the same tree, pi is the id of one with the smallest id.It's guaranteed that the sequence p corresponds to some valid forest.Hacking: To hack someone, you should provide a correct forest as a test. The sequence p will be calculated according to the forest and given to the solution you try to hack as input. Use the following format:In the first line, output the integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009104)\u00a0\u2014 the number of Balls and the integer m (0\u2009\u2264\u2009m\u2009<\u2009n)\u00a0\u2014 the total number of edges in the forest. Then m lines should follow. The i-th of them should contain two integers ai and bi and represent an edge between vertices in which relatives ai and bi live. For example, the first sample is written as follows:5 31 23 44 5OutputYou should output the number of trees in the forest where PolandBall lives.InteractionFrom the technical side, this problem is interactive. However, it should not affect you (except hacking) since there is no interaction.ExamplesInputCopy52 1 5 3 3OutputCopy2InputCopy11OutputCopy1NoteIn the first sample testcase, possible forest is: 1-2 3-4-5. There are 2 trees overall.In the second sample testcase, the only possible graph is one vertex and no edges. Therefore, there is only one tree."], "TV Subscriptions (Hard Version)": ["https://codeforces.com/problemset/problem/1225/B2", "B2. TV Subscriptions (Hard Version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is constraints.The BerTV channel every day broadcasts one episode of one of the kk TV shows. You know the schedule for the next nn days: a sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264k1\u2264ai\u2264k), where aiai is the show, the episode of which will be shown in ii-th day.The subscription to the show is bought for the entire show (i.e. for all its episodes), for each show the subscription is bought separately.How many minimum subscriptions do you need to buy in order to have the opportunity to watch episodes of purchased shows dd (1\u2264d\u2264n1\u2264d\u2264n) days in a row? In other words, you want to buy the minimum number of TV shows so that there is some segment of dd consecutive days in which all episodes belong to the purchased shows.InputThe first line contains an integer tt (1\u2264t\u2264100001\u2264t\u226410000) \u2014 the number of test cases in the input. Then tt test case descriptions follow.The first line of each test case contains three integers n,kn,k and dd (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 1\u2264k\u22641061\u2264k\u2264106, 1\u2264d\u2264n1\u2264d\u2264n). The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264k1\u2264ai\u2264k), where aiai is the show that is broadcasted on the ii-th day.It is guaranteed that the sum of the values \u200b\u200bof nn for all test cases in the input does not exceed 2\u22c51052\u22c5105.OutputPrint tt integers \u2014 the answers to the test cases in the input in the order they follow. The answer to a test case is the minimum number of TV shows for which you need to purchase a subscription so that you can watch episodes of the purchased TV shows on BerTV for dd consecutive days. Please note that it is permissible that you will be able to watch more than dd days in a row.ExampleInputCopy4\n5 2 2\n1 2 1 2 1\n9 3 3\n3 3 3 2 2 2 1 1 1\n4 10 4\n10 8 6 4\n16 9 8\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\nOutputCopy2\n1\n4\n5\nNoteIn the first test case to have an opportunity to watch shows for two consecutive days, you need to buy a subscription on show 11 and on show 22. So the answer is two.In the second test case, you can buy a subscription to any show because for each show you can find a segment of three consecutive days, consisting only of episodes of this show.In the third test case in the unique segment of four days, you have four different shows, so you need to buy a subscription to all these four shows.In the fourth test case, you can buy subscriptions to shows 3,5,7,8,93,5,7,8,9, and you will be able to watch shows for the last eight days."], "Labs": ["https://codeforces.com/problemset/problem/1236/C", "C. Labstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn order to do some research, n2n2 labs are built on different heights of a mountain. Let's enumerate them with integers from 11 to n2n2, such that the lab with the number 11 is at the lowest place, the lab with the number 22 is at the second-lowest place, \u2026\u2026, the lab with the number n2n2 is at the highest place.To transport water between the labs, pipes are built between every pair of labs. A pipe can transport at most one unit of water at a time from the lab with the number uu to the lab with the number vv if u>vu>v.Now the labs need to be divided into nn groups, each group should contain exactly nn labs. The labs from different groups can transport water to each other. The sum of units of water that can be sent from a group AA to a group BB is equal to the number of pairs of labs (u,vu,v) such that the lab with the number uu is from the group AA, the lab with the number vv is from the group BB and u>vu>v. Let's denote this value as f(A,B)f(A,B) (i.e. f(A,B)f(A,B) is the sum of units of water that can be sent from a group AA to a group BB).For example, if n=3n=3 and there are 33 groups XX, YY and ZZ: X={1,5,6},Y={2,4,9}X={1,5,6},Y={2,4,9} and Z={3,7,8}Z={3,7,8}. In this case, the values of ff are equal to:  f(X,Y)=4f(X,Y)=4 because of 5\u219225\u21922, 5\u219245\u21924, 6\u219226\u21922, 6\u219246\u21924,  f(X,Z)=2f(X,Z)=2 because of 5\u219235\u21923, 6\u219236\u21923,  f(Y,X)=5f(Y,X)=5 because of 2\u219212\u21921, 4\u219214\u21921, 9\u219219\u21921, 9\u219259\u21925, 9\u219269\u21926,  f(Y,Z)=4f(Y,Z)=4 because of 4\u219234\u21923, 9\u219239\u21923, 9\u219279\u21927, 9\u219289\u21928,  f(Z,X)=7f(Z,X)=7 because of 3\u219213\u21921, 7\u219217\u21921, 7\u219257\u21925, 7\u219267\u21926, 8\u219218\u21921, 8\u219258\u21925, 8\u219268\u21926,  f(Z,Y)=5f(Z,Y)=5 because of 3\u219223\u21922, 7\u219227\u21922, 7\u219247\u21924, 8\u219228\u21922, 8\u219248\u21924. Please, divide labs into nn groups with size nn, such that the value minf(A,B)minf(A,B) over all possible pairs of groups AA and BB (A\u2260BA\u2260B) is maximal.In other words, divide labs into nn groups with size nn, such that minimum number of the sum of units of water that can be transported from a group AA to a group BB for every pair of different groups AA and BB (A\u2260BA\u2260B) as big as possible.Note, that the example above doesn't demonstrate an optimal division, but it demonstrates how to calculate the values ff for some division.If there are many optimal divisions, you can find any.InputThe only line contains one number nn (2\u2264n\u22643002\u2264n\u2264300).OutputOutput nn lines:In the ii-th line print nn numbers, the numbers of labs of the ii-th group, in any order you want.If there are multiple answers, that maximize the minimum number of the sum of units of water that can be transported from one group the another, you can print any.ExampleInputCopy3\nOutputCopy2 8 5\n9 3 4\n7 6 1\nNoteIn the first test we can divide 99 labs into groups {2,8,5},{9,3,4},{7,6,1}{2,8,5},{9,3,4},{7,6,1}.From the first group to the second group we can transport 44 units of water (8\u21923,8\u21924,5\u21923,5\u219248\u21923,8\u21924,5\u21923,5\u21924).From the first group to the third group we can transport 55 units of water (2\u21921,8\u21927,8\u21926,8\u21921,5\u219212\u21921,8\u21927,8\u21926,8\u21921,5\u21921).From the second group to the first group we can transport 55 units of water (9\u21922,9\u21928,9\u21925,3\u21922,4\u219229\u21922,9\u21928,9\u21925,3\u21922,4\u21922).From the second group to the third group we can transport 55 units of water (9\u21927,9\u21926,9\u21921,3\u21921,4\u219219\u21927,9\u21926,9\u21921,3\u21921,4\u21921).From the third group to the first group we can transport 44 units of water (7\u21922,7\u21925,6\u21922,6\u219257\u21922,7\u21925,6\u21922,6\u21925).From the third group to the second group we can transport 44 units of water (7\u21923,7\u21924,6\u21923,6\u219247\u21923,7\u21924,6\u21923,6\u21924).The minimal number of the sum of units of water, that can be transported from one group to another is equal to 44. It can be proved, that it is impossible to make a better division."], "Maximal AND": ["https://codeforces.com/problemset/problem/1669/H", "H. Maximal ANDtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet ANDAND denote the bitwise AND operation, and OROR denote the bitwise OR operation.You are given an array aa of length nn and a non-negative integer kk. You can perform at most kk operations on the array of the following type:  Select an index ii (1\u2264i\u2264n1\u2264i\u2264n) and replace aiai with aiai OROR 2j2j where jj is any integer between 00 and 3030 inclusive. In other words, in an operation you can choose an index ii (1\u2264i\u2264n1\u2264i\u2264n) and set the jj-th bit of aiai to 11 (0\u2264j\u2264300\u2264j\u226430). Output the maximum possible value of a1a1 ANDAND a2a2 ANDAND \u2026\u2026 ANDAND anan after performing at most kk operations. InputThe first line of the input contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases. The description of test cases follows.The first line of each test case contains the integers nn and kk (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 0\u2264k\u22641090\u2264k\u2264109).Then a single line follows, containing nn integers describing the arrays aa (0\u2264ai<2310\u2264ai<231).It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output a single line containing the maximum possible ANDAND value of a1a1 ANDAND a2a2 ANDAND \u2026\u2026 ANDAND anan after performing at most kk operations.ExampleInputCopy4\n3 2\n2 1 1\n7 0\n4 6 6 28 6 6 12\n1 30\n0\n4 4\n3 1 3 1\nOutputCopy2\n4\n2147483646\n1073741825\nNoteFor the first test case, we can set the bit 11 (2121) of the last 22 elements using the 22 operations, thus obtaining the array [22, 33, 33], which has ANDAND value equal to 22.For the second test case, we can't perform any operations so the answer is just the ANDAND of the whole array which is 44."], "Substring Game in the Lesson": ["https://codeforces.com/problemset/problem/1220/C", "C. Substring Game in the Lessontime limit per test2 secondsmemory limit per test256 mebibytesinputstandard inputoutputstandard outputMike and Ann are sitting in the classroom. The lesson is boring, so they decided to play an interesting game. Fortunately, all they need to play this game is a string ss and a number kk (0\u2264k<|s|0\u2264k<|s|).At the beginning of the game, players are given a substring of ss with left border ll and right border rr, both equal to kk (i.e. initially l=r=kl=r=k). Then players start to make moves one by one, according to the following rules: A player chooses l\u2032l\u2032 and r\u2032r\u2032 so that l\u2032\u2264ll\u2032\u2264l, r\u2032\u2265rr\u2032\u2265r and s[l\u2032,r\u2032]s[l\u2032,r\u2032] is lexicographically less than s[l,r]s[l,r]. Then the player changes ll and rr in this way: l:=l\u2032l:=l\u2032, r:=r\u2032r:=r\u2032. Ann moves first. The player, that can't make a move loses.Recall that a substring s[l,r]s[l,r] (l\u2264rl\u2264r) of a string ss is a continuous segment of letters from s that starts at position ll and ends at position rr. For example, \"ehn\" is a substring (s[3,5]s[3,5]) of \"aaaehnsvz\" and \"ahz\" is not.Mike and Ann were playing so enthusiastically that they did not notice the teacher approached them. Surprisingly, the teacher didn't scold them, instead of that he said, that he can figure out the winner of the game before it starts, even if he knows only ss and kk.Unfortunately, Mike and Ann are not so keen in the game theory, so they ask you to write a program, that takes ss and determines the winner for all possible kk.InputThe first line of the input contains a single string ss (1\u2264|s|\u22645\u22c51051\u2264|s|\u22645\u22c5105) consisting of lowercase English letters.OutputPrint |s||s| lines.In the line ii write the name of the winner (print Mike or Ann) in the game with string ss and k=ik=i, if both play optimallyExamplesInputCopyabba\nOutputCopyMike\nAnn\nAnn\nMike\nInputCopycba\nOutputCopyMike\nMike\nMike\n"], "Minimize Distance": ["https://codeforces.com/problemset/problem/1585/C", "C. Minimize Distancetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA total of nn depots are located on a number line. Depot ii lies at the point xixi for 1\u2264i\u2264n1\u2264i\u2264n.You are a salesman with nn bags of goods, attempting to deliver one bag to each of the nn depots. You and the nn bags are initially at the origin 00. You can carry up to kk bags at a time. You must collect the required number of goods from the origin, deliver them to the respective depots, and then return to the origin to collect your next batch of goods.Calculate the minimum distance you need to cover to deliver all the bags of goods to the depots. You do not have to return to the origin after you have delivered all the bags.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u2264105001\u2264t\u226410500). Description of the test cases follows.The first line of each test case contains two integers nn and kk (1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105).The second line of each test case contains nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn (\u2212109\u2264xi\u2264109\u2212109\u2264xi\u2264109). It is possible that some depots share the same position.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output a single integer denoting the minimum distance you need to cover to deliver all the bags of goods to the depots. ExampleInputCopy4\n5 1\n1 2 3 4 5\n9 3\n-5 -10 -15 6 5 8 3 7 4\n5 3\n2 2 3 3 3\n4 2\n1000000000 1000000000 1000000000 1000000000\nOutputCopy25\n41\n7\n3000000000\nNoteIn the first test case, you can carry only one bag at a time. Thus, the following is a solution sequence that gives a minimum travel distance: 0\u21922\u21920\u21924\u21920\u21923\u21920\u21921\u21920\u219250\u21922\u21920\u21924\u21920\u21923\u21920\u21921\u21920\u21925, where each 00 means you go the origin and grab one bag, and each positive integer means you deliver the bag to a depot at this coordinate, giving a total distance of 2525 units. It must be noted that there are other sequences that give the same distance.In the second test case, you can follow the following sequence, among multiple such sequences, to travel minimum distance: 0\u21926\u21928\u21927\u21920\u21925\u21924\u21923\u21920\u2192(\u22125)\u2192(\u221210)\u2192(\u221215)0\u21926\u21928\u21927\u21920\u21925\u21924\u21923\u21920\u2192(\u22125)\u2192(\u221210)\u2192(\u221215), with distance 4141. It can be shown that 4141 is the optimal distance for this test case."], "Queries on a String": ["https://codeforces.com/problemset/problem/598/B", "B. Queries on a Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string s and should process m queries. Each query is described by two 1-based indices li, ri and integer ki. It means that you should cyclically shift the substring s[li... ri] ki times. The queries should be processed one after another in the order they are given.One operation of a cyclic shift (rotation) is equivalent to moving the last character to the position of the first character and shifting all other characters one position to the right.For example, if the string s is abacaba and the query is l1\u2009=\u20093,\u2009r1\u2009=\u20096,\u2009k1\u2009=\u20091 then the answer is abbacaa. If after that we would process the query l2\u2009=\u20091,\u2009r2\u2009=\u20094,\u2009k2\u2009=\u20092 then we would get the string baabcaa.InputThe first line of the input contains the string s (1\u2009\u2264\u2009|s|\u2009\u2264\u200910\u2009000) in its initial state, where |s| stands for the length of s. It contains only lowercase English letters.Second line contains a single integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009300)\u00a0\u2014 the number of queries.The i-th of the next m lines contains three integers li, ri and ki (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009|s|,\u20091\u2009\u2264\u2009ki\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the description of the i-th query.OutputPrint the resulting string s after processing all m queries.ExamplesInputCopyabacaba23 6 11 4 2OutputCopybaabcaaNoteThe sample is described in problem statement."], "Gambling": ["https://codeforces.com/problemset/problem/1038/C", "C. Gamblingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTwo players A and B have a list of nn integers each. They both want to maximize the subtraction between their score and their opponent's score. In one turn, a player can either add to his score any element from his list (assuming his list is not empty), the element is removed from the list afterward. Or remove an element from his opponent's list (assuming his opponent's list is not empty).Note, that in case there are equal elements in the list only one of them will be affected in the operations above. For example, if there are elements {1,2,2,3}{1,2,2,3} in a list and you decided to choose 22 for the next turn, only a single instance of 22 will be deleted (and added to the score, if necessary). The player A starts the game and the game stops when both lists are empty. Find the difference between A's score and B's score at the end of the game, if both of the players are playing optimally.Optimal play between two players means that both players choose the best possible strategy to achieve the best possible outcome for themselves. In this problem, it means that each player, each time makes a move, which maximizes the final difference between his score and his opponent's score, knowing that the opponent is doing the same.InputThe first line of input contains an integer nn (1\u2264n\u22641000001\u2264n\u2264100000)\u00a0\u2014 the sizes of the list.The second line contains nn integers aiai (1\u2264ai\u22641061\u2264ai\u2264106), describing the list of the player A, who starts the game.The third line contains nn integers bibi (1\u2264bi\u22641061\u2264bi\u2264106), describing the list of the player B.OutputOutput the difference between A's score and B's score (A\u2212BA\u2212B) if both of them are playing optimally.ExamplesInputCopy21 45 1OutputCopy0InputCopy3100 100 100100 100 100OutputCopy0InputCopy22 15 6OutputCopy-3NoteIn the first example, the game could have gone as follows:   A removes 55 from B's list.  B removes 44 from A's list.  A takes his 11.  B takes his 11. Hence, A's score is 11, B's score is 11 and difference is 00.There is also another optimal way of playing:  A removes 55 from B's list.  B removes 44 from A's list.  A removes 11 from B's list.  B removes 11 from A's list. The difference in the scores is still 00.In the second example, irrespective of the moves the players make, they will end up with the same number of numbers added to their score, so the difference will be 00."], "Brutality": ["https://codeforces.com/problemset/problem/1107/C", "C. Brutalitytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are playing a new famous fighting game: Kortal Mombat XII. You have to perform a brutality on your opponent's character.You are playing the game on the new generation console so your gamepad have 2626 buttons. Each button has a single lowercase Latin letter from 'a' to 'z' written on it. All the letters on buttons are pairwise distinct.You are given a sequence of hits, the ii-th hit deals aiai units of damage to the opponent's character. To perform the ii-th hit you have to press the button sisi on your gamepad. Hits are numbered from 11 to nn.You know that if you press some button more than kk times in a row then it'll break. You cherish your gamepad and don't want to break any of its buttons.To perform a brutality you have to land some of the hits of the given sequence. You are allowed to skip any of them, however changing the initial order of the sequence is prohibited. The total damage dealt is the sum of aiai over all ii for the hits which weren't skipped.Note that if you skip the hit then the counter of consecutive presses the button won't reset.Your task is to skip some hits to deal the maximum possible total damage to the opponent's character and not break your gamepad buttons.InputThe first line of the input contains two integers nn and kk (1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105) \u2014 the number of hits and the maximum number of times you can push the same button in a row.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is the damage of the ii-th hit.The third line of the input contains the string ss consisting of exactly nn lowercase Latin letters \u2014 the sequence of hits (each character is the letter on the button you need to press to perform the corresponding hit).OutputPrint one integer dmgdmg \u2014 the maximum possible damage to the opponent's character you can deal without breaking your gamepad buttons.ExamplesInputCopy7 3\n1 5 16 18 7 2 10\nbaaaaca\nOutputCopy54\nInputCopy5 5\n2 4 1 3 1000\naaaaa\nOutputCopy1010\nInputCopy5 4\n2 4 1 3 1000\naaaaa\nOutputCopy1009\nInputCopy8 1\n10 15 2 1 4 8 15 16\nqqwweerr\nOutputCopy41\nInputCopy6 3\n14 18 9 19 2 15\ncccccc\nOutputCopy52\nInputCopy2 1\n10 10\nqq\nOutputCopy10\nNoteIn the first example you can choose hits with numbers [1,3,4,5,6,7][1,3,4,5,6,7] with the total damage 1+16+18+7+2+10=541+16+18+7+2+10=54.In the second example you can choose all hits so the total damage is 2+4+1+3+1000=10102+4+1+3+1000=1010.In the third example you can choose all hits expect the third one so the total damage is 2+4+3+1000=10092+4+3+1000=1009.In the fourth example you can choose hits with numbers [2,3,6,8][2,3,6,8]. Only this way you can reach the maximum total damage 15+2+8+16=4115+2+8+16=41.In the fifth example you can choose only hits with numbers [2,4,6][2,4,6] with the total damage 18+19+15=5218+19+15=52.In the sixth example you can change either first hit or the second hit (it does not matter) with the total damage 1010."], "Intense Heat": ["https://codeforces.com/problemset/problem/1003/C", "C. Intense Heattime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe heat during the last few days has been really intense. Scientists from all over the Berland study how the temperatures and weather change, and they claim that this summer is abnormally hot. But any scientific claim sounds a lot more reasonable if there are some numbers involved, so they have decided to actually calculate some value which would represent how high the temperatures are.Mathematicians of Berland State University came up with a special heat intensity value. This value is calculated as follows:Suppose we want to analyze the segment of nn consecutive days. We have measured the temperatures during these nn days; the temperature during ii-th day equals aiai.We denote the average temperature of a segment of some consecutive days as the arithmetic mean of the temperature measures during this segment of days. So, if we want to analyze the average temperature from day xx to day yy, we calculate it as \u2211i=xyaiy\u2212x+1\u2211i=xyaiy\u2212x+1 (note that division is performed without any rounding). The heat intensity value is the maximum of average temperatures over all segments of not less than kk consecutive days. For example, if analyzing the measures [3,4,1,2][3,4,1,2] and k=3k=3, we are interested in segments [3,4,1][3,4,1], [4,1,2][4,1,2] and [3,4,1,2][3,4,1,2] (we want to find the maximum value of average temperature over these segments).You have been hired by Berland State University to write a program that would compute the heat intensity value of a given period of days. Are you up to this task?InputThe first line contains two integers nn and kk (1\u2264k\u2264n\u226450001\u2264k\u2264n\u22645000) \u2014 the number of days in the given period, and the minimum number of days in a segment we consider when calculating heat intensity value, respectively.The second line contains nn integers a1a1, a2a2, ..., anan (1\u2264ai\u226450001\u2264ai\u22645000) \u2014 the temperature measures during given nn days.OutputPrint one real number \u2014 the heat intensity value, i. e., the maximum of average temperatures over all segments of not less than kk consecutive days.Your answer will be considered correct if the following condition holds: |res\u2212res0|<10\u22126|res\u2212res0|<10\u22126, where resres is your answer, and res0res0 is the answer given by the jury's solution.ExampleInputCopy4 33 4 1 2OutputCopy2.666666666666667"], "Painting Pebbles": ["https://codeforces.com/problemset/problem/509/B", "B. Painting Pebblestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n piles of pebbles on the table, the i-th pile contains ai pebbles. Your task is to paint each pebble using one of the k given colors so that for each color c and any two piles i and j the difference between the number of pebbles of color c in pile i and number of pebbles of color c in pile j is at most one.In other words, let's say that bi,\u2009c is the number of pebbles of color c in the i-th pile. Then for any 1\u2009\u2264\u2009c\u2009\u2264\u2009k, 1\u2009\u2264\u2009i,\u2009j\u2009\u2264\u2009n the following condition must be satisfied |bi,\u2009c\u2009-\u2009bj,\u2009c|\u2009\u2264\u20091. It isn't necessary to use all k colors: if color c hasn't been used in pile i, then bi,\u2009c is considered to be zero.InputThe first line of the input contains positive integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009100), separated by a space \u2014 the number of piles and the number of colors respectively.The second line contains n positive integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009100) denoting number of pebbles in each of the piles.OutputIf there is no way to paint the pebbles satisfying the given condition, output \"NO\" (without quotes) .Otherwise in the first line output \"YES\" (without quotes). Then n lines should follow, the i-th of them should contain ai space-separated integers. j-th (1\u2009\u2264\u2009j\u2009\u2264\u2009ai) of these integers should be equal to the color of the j-th pebble in the i-th pile. If there are several possible answers, you may output any of them.ExamplesInputCopy4 41 2 3 4OutputCopyYES11 41 2 41 2 3 4InputCopy5 23 2 4 1 3OutputCopyNOInputCopy5 43 2 4 3 5OutputCopyYES1 2 31 31 2 3 41 3 41 1 2 3 4"], "Game of Credit Cards": ["https://codeforces.com/problemset/problem/777/B", "B. Game of Credit Cardstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter the fourth season Sherlock and Moriary have realized the whole foolishness of the battle between them and decided to continue their competitions in peaceful game of Credit Cards.Rules of this game are simple: each player bring his favourite n-digit credit card. Then both players name the digits written on their cards one by one. If two digits are not equal, then the player, whose digit is smaller gets a flick (knock in the forehead usually made with a forefinger) from the other player. For example, if n\u2009=\u20093, Sherlock's card is 123 and Moriarty's card has number 321, first Sherlock names 1 and Moriarty names 3 so Sherlock gets a flick. Then they both digit 2 so no one gets a flick. Finally, Sherlock names 3, while Moriarty names 1 and gets a flick.Of course, Sherlock will play honestly naming digits one by one in the order they are given, while Moriary, as a true villain, plans to cheat. He is going to name his digits in some other order (however, he is not going to change the overall number of occurences of each digit). For example, in case above Moriarty could name 1, 2, 3 and get no flicks at all, or he can name 2, 3 and 1 to give Sherlock two flicks.Your goal is to find out the minimum possible number of flicks Moriarty will get (no one likes flicks) and the maximum possible number of flicks Sherlock can get from Moriarty. Note, that these two goals are different and the optimal result may be obtained by using different strategies.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000)\u00a0\u2014 the number of digits in the cards Sherlock and Moriarty are going to use.The second line contains n digits\u00a0\u2014 Sherlock's credit card number.The third line contains n digits\u00a0\u2014 Moriarty's credit card number.OutputFirst print the minimum possible number of flicks Moriarty will get. Then print the maximum possible number of flicks that Sherlock can get from Moriarty.ExamplesInputCopy3123321OutputCopy02InputCopy28800OutputCopy20NoteFirst sample is elaborated in the problem statement. In the second sample, there is no way Moriarty can avoid getting two flicks."], "Vasya and Golden Ticket": ["https://codeforces.com/problemset/problem/1030/C", "C. Vasya and Golden Tickettime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently Vasya found a golden ticket \u2014 a sequence which consists of nn digits a1a2\u2026ana1a2\u2026an. Vasya considers a ticket to be lucky if it can be divided into two or more non-intersecting segments with equal sums. For example, ticket 350178350178 is lucky since it can be divided into three segments 350350, 1717 and 88: 3+5+0=1+7=83+5+0=1+7=8. Note that each digit of sequence should belong to exactly one segment.Help Vasya! Tell him if the golden ticket he found is lucky or not.InputThe first line contains one integer nn (2\u2264n\u22641002\u2264n\u2264100) \u2014 the number of digits in the ticket.The second line contains nn digits a1a2\u2026ana1a2\u2026an (0\u2264ai\u226490\u2264ai\u22649) \u2014 the golden ticket. Digits are printed without spaces.OutputIf the golden ticket is lucky then print \"YES\", otherwise print \"NO\" (both case insensitive).ExamplesInputCopy573452OutputCopyYESInputCopy41248OutputCopyNONoteIn the first example the ticket can be divided into 77, 3434 and 5252: 7=3+4=5+27=3+4=5+2.In the second example it is impossible to divide ticket into segments with equal sum."], "Fox Dividing Cheese": ["https://codeforces.com/problemset/problem/371/B", "B. Fox Dividing Cheesetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTwo little greedy bears have found two pieces of cheese in the forest of weight a and b grams, correspondingly. The bears are so greedy that they are ready to fight for the larger piece. That's where the fox comes in and starts the dialog: \"Little bears, wait a little, I want to make your pieces equal\" \"Come off it fox, how are you going to do that?\", the curious bears asked. \"It's easy\", said the fox. \"If the mass of a certain piece is divisible by two, then I can eat exactly a half of the piece. If the mass of a certain piece is divisible by three, then I can eat exactly two-thirds, and if the mass is divisible by five, then I can eat four-fifths. I'll eat a little here and there and make the pieces equal\". The little bears realize that the fox's proposal contains a catch. But at the same time they realize that they can not make the two pieces equal themselves. So they agreed to her proposal, but on one condition: the fox should make the pieces equal as quickly as possible. Find the minimum number of operations the fox needs to make pieces equal.InputThe first line contains two space-separated integers a and b (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009109). OutputIf the fox is lying to the little bears and it is impossible to make the pieces equal, print -1. Otherwise, print the required minimum number of operations. If the pieces of the cheese are initially equal, the required number is 0.ExamplesInputCopy15 20OutputCopy3InputCopy14 8OutputCopy-1InputCopy6 6OutputCopy0"], "New Year and North Pole": ["https://codeforces.com/problemset/problem/750/B", "B. New Year and North Poletime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn this problem we assume the Earth to be a completely round ball and its surface a perfect sphere. The length of the equator and any meridian is considered to be exactly 40\u2009000 kilometers. Thus, travelling from North Pole to South Pole or vice versa takes exactly 20\u2009000 kilometers.Limak, a polar bear, lives on the North Pole. Close to the New Year, he helps somebody with delivering packages all around the world. Instead of coordinates of places to visit, Limak got a description how he should move, assuming that he starts from the North Pole. The description consists of n parts. In the i-th part of his journey, Limak should move ti kilometers in the direction represented by a string diri that is one of: \"North\", \"South\", \"West\", \"East\".Limak isn\u2019t sure whether the description is valid. You must help him to check the following conditions:  If at any moment of time (before any of the instructions or while performing one of them) Limak is on the North Pole, he can move only to the South.  If at any moment of time (before any of the instructions or while performing one of them) Limak is on the South Pole, he can move only to the North.  The journey must end on the North Pole. Check if the above conditions are satisfied and print \"YES\" or \"NO\" on a single line.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950).The i-th of next n lines contains an integer ti and a string diri (1\u2009\u2264\u2009ti\u2009\u2264\u2009106, )\u00a0\u2014 the length and the direction of the i-th part of the journey, according to the description Limak got.OutputPrint \"YES\" if the description satisfies the three conditions, otherwise print \"NO\", both without the quotes.ExamplesInputCopy57500 South10000 East3500 North4444 West4000 NorthOutputCopyYESInputCopy215000 South4000 EastOutputCopyNOInputCopy520000 South1000 North1000000 West9000 North10000 NorthOutputCopyYESInputCopy320000 South10 East20000 NorthOutputCopyNOInputCopy21000 North1000 SouthOutputCopyNOInputCopy450 South50 North15000 South15000 NorthOutputCopyYESNoteDrawings below show how Limak's journey would look like in first two samples. In the second sample the answer is \"NO\" because he doesn't end on the North Pole.  "], "New Skateboard": ["https://codeforces.com/problemset/problem/628/B", "B. New Skateboardtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMax wants to buy a new skateboard. He has calculated the amount of money that is needed to buy a new skateboard. He left a calculator on the floor and went to ask some money from his parents. Meanwhile his little brother Yusuf came and started to press the keys randomly. Unfortunately Max has forgotten the number which he had calculated. The only thing he knows is that the number is divisible by 4.You are given a string s consisting of digits (the number on the display of the calculator after Yusuf randomly pressed the keys). Your task is to find the number of substrings which are divisible by 4. A substring can start with a zero.A substring of a string is a nonempty sequence of consecutive characters.For example if string s is 124 then we have four substrings that are divisible by 4: 12, 4, 24 and 124. For the string 04 the answer is three: 0, 4, 04.As input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to use gets/scanf/printf instead of getline/cin/cout in C++, prefer to use BufferedReader/PrintWriter instead of Scanner/System.out in Java.InputThe only line contains string s (1\u2009\u2264\u2009|s|\u2009\u2264\u20093\u00b7105). The string s contains only digits from 0 to 9.OutputPrint integer a \u2014 the number of substrings of the string s that are divisible by 4.Note that the answer can be huge, so you should use 64-bit integer type to store it. In C++ you can use the long long integer type and in Java you can use long integer type.ExamplesInputCopy124OutputCopy4InputCopy04OutputCopy3InputCopy5810438174OutputCopy9"], "Alyona and a Narrow Fridge": ["https://codeforces.com/problemset/problem/1119/B", "B. Alyona and a Narrow Fridgetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlyona has recently bought a miniature fridge that can be represented as a matrix with hh rows and 22 columns. Initially there is only one shelf at the bottom of the fridge, but Alyona can install arbitrary number of shelves inside the fridge between any two rows. A shelf is two cells wide, does not occupy any space but separates the inside of the fridge to the lower and upper part.  An example of a fridge with h=7h=7 and two shelves. The shelves are shown in black. The picture corresponds to the first example. Alyona has nn bottles of milk that she wants to put in the fridge. The ii-th bottle is aiai cells tall and 11 cell wide. She can put a bottle on some shelf if the corresponding space above the shelf is at least as tall as the bottle. She can not put a bottle on top of another bottle (if there is no shelf between them). Two bottles can not share a cell.Alyona is interested in the largest integer kk such that she can put bottles 11, 22, ..., kk in the fridge at the same time. Find this largest kk.InputThe first line contains two integers nn and hh (1\u2264n\u22641031\u2264n\u2264103, 1\u2264h\u22641091\u2264h\u2264109)\u00a0\u2014 the number of bottles and the height of the fridge.The second line contains nn integers a1a1, a2a2, ..., anan (1\u2264ai\u2264h1\u2264ai\u2264h)\u00a0\u2014 the heights of the bottles.OutputPrint the single integer kk\u00a0\u2014 the maximum integer such that Alyona can put the bottles 11, 22, ..., kk in the fridge at the same time. If Alyona can put all bottles in the fridge, print nn. It is easy to see that Alyona can always put at least one bottle in the fridge.ExamplesInputCopy5 7\n2 3 5 4 1\nOutputCopy3\nInputCopy10 10\n9 1 1 1 1 1 1 1 1 1\nOutputCopy4\nInputCopy5 10\n3 1 4 2 4\nOutputCopy5\nNoteOne of optimal locations in the first example is shown on the picture in the statement.One of optimal locations in the second example is shown on the picture below.  One of optimal locations in the third example is shown on the picture below.  "], "Summer sell-off": ["https://codeforces.com/problemset/problem/810/B", "B. Summer sell-offtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSummer holidays! Someone is going on trips, someone is visiting grandparents, but someone is trying to get a part-time job. This summer Noora decided that she wants to earn some money, and took a job in a shop as an assistant.Shop, where Noora is working, has a plan on the following n days. For each day sales manager knows exactly, that in i-th day ki products will be put up for sale and exactly li clients will come to the shop that day. Also, the manager is sure, that everyone, who comes to the shop, buys exactly one product or, if there aren't any left, leaves the shop without buying anything. Moreover, due to the short shelf-life of the products, manager established the following rule: if some part of the products left on the shelves at the end of the day, that products aren't kept on the next day and are sent to the dump.For advertising purposes manager offered to start a sell-out in the shop. He asked Noora to choose any f days from n next for sell-outs. On each of f chosen days the number of products were put up for sale would be doubled. Thus, if on i-th day shop planned to put up for sale ki products and Noora has chosen this day for sell-out, shelves of the shop would keep 2\u00b7ki products. Consequently, there is an opportunity to sell two times more products on days of sell-out.Noora's task is to choose f days to maximize total number of sold products. She asks you to help her with such a difficult problem.InputThe first line contains two integers n and f (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009f\u2009\u2264\u2009n) denoting the number of days in shop's plan and the number of days that Noora has to choose for sell-out.Each line of the following n subsequent lines contains two integers ki,\u2009li (0\u2009\u2264\u2009ki,\u2009li\u2009\u2264\u2009109) denoting the number of products on the shelves of the shop on the i-th day and the number of clients that will come to the shop on i-th day.OutputPrint a single integer denoting the maximal number of products that shop can sell.ExamplesInputCopy4 22 13 52 31 5OutputCopy10InputCopy4 10 20 33 50 6OutputCopy5NoteIn the first example we can choose days with numbers 2 and 4 for sell-out. In this case new numbers of products for sale would be equal to [2,\u20096,\u20092,\u20092] respectively. So on the first day shop will sell 1 product, on the second\u00a0\u2014 5, on the third\u00a0\u2014 2, on the fourth\u00a0\u2014 2. In total 1\u2009+\u20095\u2009+\u20092\u2009+\u20092\u2009=\u200910 product units.In the second example it is possible to sell 5 products, if you choose third day for sell-out."], "Sonya and Exhibition": ["https://codeforces.com/problemset/problem/1004/B", "B. Sonya and Exhibitiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSonya decided to organize an exhibition of flowers. Since the girl likes only roses and lilies, she decided that only these two kinds of flowers should be in this exhibition.There are nn flowers in a row in the exhibition. Sonya can put either a rose or a lily in the ii-th position. Thus each of nn positions should contain exactly one flower: a rose or a lily.She knows that exactly mm people will visit this exhibition. The ii-th visitor will visit all flowers from lili to riri inclusive. The girl knows that each segment has its own beauty that is equal to the product of the number of roses and the number of lilies.Sonya wants her exhibition to be liked by a lot of people. That is why she wants to put the flowers in such way that the sum of beauties of all segments would be maximum possible.InputThe first line contains two integers nn and mm (1\u2264n,m\u22641031\u2264n,m\u2264103)\u00a0\u2014 the number of flowers and visitors respectively.Each of the next mm lines contains two integers lili and riri (1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n), meaning that ii-th visitor will visit all flowers from lili to riri inclusive.OutputPrint the string of nn characters. The ii-th symbol should be \u00ab0\u00bb if you want to put a rose in the ii-th position, otherwise \u00ab1\u00bb if you want to put a lily.If there are multiple answers, print any.ExamplesInputCopy5 31 32 42 5OutputCopy01100InputCopy6 35 61 44 6OutputCopy110010NoteIn the first example, Sonya can put roses in the first, fourth, and fifth positions, and lilies in the second and third positions;  in the segment [1\u20263][1\u20263], there are one rose and two lilies, so the beauty is equal to 1\u22c52=21\u22c52=2;  in the segment [2\u20264][2\u20264], there are one rose and two lilies, so the beauty is equal to 1\u22c52=21\u22c52=2;  in the segment [2\u20265][2\u20265], there are two roses and two lilies, so the beauty is equal to 2\u22c52=42\u22c52=4. The total beauty is equal to 2+2+4=82+2+4=8.In the second example, Sonya can put roses in the third, fourth, and sixth positions, and lilies in the first, second, and fifth positions;  in the segment [5\u20266][5\u20266], there are one rose and one lily, so the beauty is equal to 1\u22c51=11\u22c51=1;  in the segment [1\u20264][1\u20264], there are two roses and two lilies, so the beauty is equal to 2\u22c52=42\u22c52=4;  in the segment [4\u20266][4\u20266], there are two roses and one lily, so the beauty is equal to 2\u22c51=22\u22c51=2. The total beauty is equal to 1+4+2=71+4+2=7."], "Mishka and the Last Exam": ["https://codeforces.com/problemset/problem/1093/C", "C. Mishka and the Last Examtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMishka is trying really hard to avoid being kicked out of the university. In particular, he was doing absolutely nothing for the whole semester, miraculously passed some exams so that just one is left.There were nn classes of that subject during the semester and on ii-th class professor mentioned some non-negative integer aiai to the students. It turned out, the exam was to tell the whole sequence back to the professor. Sounds easy enough for those who attended every class, doesn't it?Obviously Mishka didn't attend any classes. However, professor left some clues on the values of aa to help out students like Mishka:   aa was sorted in non-decreasing order (a1\u2264a2\u2264\u22ef\u2264ana1\u2264a2\u2264\u22ef\u2264an);  nn was even;  the following sequence bb, consisting of n2n2 elements, was formed and given out to students: bi=ai+an\u2212i+1bi=ai+an\u2212i+1. Professor also mentioned that any sequence aa, which produces sequence bb with the presented technique, will be acceptable.Help Mishka to pass that last exam. Restore any sorted sequence aa of non-negative integers, which produces sequence bb with the presented technique. It is guaranteed that there exists at least one correct sequence aa, which produces the given sequence bb.InputThe first line contains a single integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the length of sequence aa. nn is always even.The second line contains n2n2 integers b1,b2,\u2026,bn2b1,b2,\u2026,bn2 (0\u2264bi\u226410180\u2264bi\u22641018) \u2014 sequence bb, where bi=ai+an\u2212i+1bi=ai+an\u2212i+1.It is guaranteed that there exists at least one correct sequence aa, which produces the given sequence bb.OutputPrint nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u226410180\u2264ai\u22641018) in a single line.a1\u2264a2\u2264\u22ef\u2264ana1\u2264a2\u2264\u22ef\u2264an should be satisfied.bi=ai+an\u2212i+1bi=ai+an\u2212i+1 should be satisfied for all valid ii.ExamplesInputCopy4\n5 6\nOutputCopy2 3 3 3\nInputCopy6\n2 1 2\nOutputCopy0 0 1 1 1 2 \n"], "Funky Numbers": ["https://codeforces.com/problemset/problem/192/A", "A. Funky Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAs you very well know, this year's funkiest numbers are so called triangular numbers (that is, integers that are representable as , where k is some positive integer), and the coolest numbers are those that are representable as a sum of two triangular numbers.A well-known hipster Andrew adores everything funky and cool but unfortunately, he isn't good at maths. Given number n, help him define whether this number can be represented by a sum of two triangular numbers (not necessarily different)!InputThe first input line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009109).OutputPrint \"YES\" (without the quotes), if n can be represented as a sum of two triangular numbers, otherwise print \"NO\" (without the quotes).ExamplesInputCopy256OutputCopyYESInputCopy512OutputCopyNONoteIn the first sample number .In the second sample number 512 can not be represented as a sum of two triangular numbers."], "Segment Occurrences": ["https://codeforces.com/problemset/problem/1016/B", "B. Segment Occurrencestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two strings ss and tt, both consisting only of lowercase Latin letters.The substring s[l..r]s[l..r] is the string which is obtained by taking characters sl,sl+1,\u2026,srsl,sl+1,\u2026,sr without changing the order.Each of the occurrences of string aa in a string bb is a position ii (1\u2264i\u2264|b|\u2212|a|+11\u2264i\u2264|b|\u2212|a|+1) such that b[i..i+|a|\u22121]=ab[i..i+|a|\u22121]=a (|a||a| is the length of string aa).You are asked qq queries: for the ii-th query you are required to calculate the number of occurrences of string tt in a substring s[li..ri]s[li..ri].InputThe first line contains three integer numbers nn, mm and qq (1\u2264n,m\u22641031\u2264n,m\u2264103, 1\u2264q\u22641051\u2264q\u2264105) \u2014 the length of string ss, the length of string tt and the number of queries, respectively.The second line is a string ss (|s|=n|s|=n), consisting only of lowercase Latin letters.The third line is a string tt (|t|=m|t|=m), consisting only of lowercase Latin letters.Each of the next qq lines contains two integer numbers lili and riri (1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n) \u2014 the arguments for the ii-th query.OutputPrint qq lines \u2014 the ii-th line should contain the answer to the ii-th query, that is the number of occurrences of string tt in a substring s[li..ri]s[li..ri].ExamplesInputCopy10 3 4codeforcesfor1 33 105 65 7OutputCopy0101InputCopy15 2 3abacabadabacababa1 153 42 14OutputCopy403InputCopy3 5 2aaabaaab1 31 1OutputCopy00NoteIn the first example the queries are substrings: \"cod\", \"deforces\", \"fo\" and \"for\", respectively."], "Xor-tree": ["https://codeforces.com/problemset/problem/429/A", "A. Xor-treetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIahub is very proud of his recent discovery, propagating trees. Right now, he invented a new tree, called xor-tree. After this new revolutionary discovery, he invented a game for kids which uses xor-trees.The game is played on a tree having n nodes, numbered from 1 to n. Each node i has an initial value initi, which is either 0 or 1. The root of the tree is node 1.One can perform several (possibly, zero) operations on the tree during the game. The only available type of operation is to pick a node x. Right after someone has picked node x, the value of node x flips, the values of sons of x remain the same, the values of sons of sons of x flips, the values of sons of sons of sons of x remain the same and so on.The goal of the game is to get each node i to have value goali, which can also be only 0 or 1. You need to reach the goal of the game by using minimum number of operations.InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105). Each of the next n\u2009-\u20091 lines contains two integers ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n; ui\u2009\u2260\u2009vi) meaning there is an edge between nodes ui and vi. The next line contains n integer numbers, the i-th of them corresponds to initi (initi is either 0 or 1). The following line also contains n integer numbers, the i-th number corresponds to goali (goali is either 0 or 1).OutputIn the first line output an integer number cnt, representing the minimal number of operations you perform. Each of the next cnt lines should contain an integer xi, representing that you pick a node xi.ExamplesInputCopy102 13 14 25 16 27 58 69 810 51 0 1 1 0 1 0 1 0 11 0 1 0 0 1 1 1 0 1OutputCopy247"], "Maximum splitting": ["https://codeforces.com/problemset/problem/870/C", "C. Maximum splittingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given several queries. In the i-th query you are given a single positive integer ni. You are to represent ni as a sum of maximum possible number of composite summands and print this maximum number, or print -1, if there are no such splittings.An integer greater than 1 is composite, if it is not prime, i.e. if it has positive divisors not equal to 1 and the integer itself.InputThe first line contains single integer q (1\u2009\u2264\u2009q\u2009\u2264\u2009105)\u00a0\u2014 the number of queries.q lines follow. The (i\u2009+\u20091)-th line contains single integer ni (1\u2009\u2264\u2009ni\u2009\u2264\u2009109)\u00a0\u2014 the i-th query.OutputFor each query print the maximum possible number of summands in a valid splitting to composite summands, or -1, if there are no such splittings.ExamplesInputCopy112OutputCopy3InputCopy268OutputCopy12InputCopy3123OutputCopy-1-1-1Note12\u2009=\u20094\u2009+\u20094\u2009+\u20094\u2009=\u20094\u2009+\u20098\u2009=\u20096\u2009+\u20096\u2009=\u200912, but the first splitting has the maximum possible number of summands.8\u2009=\u20094\u2009+\u20094, 6 can't be split into several composite summands.1,\u20092,\u20093 are less than any composite number, so they do not have valid splittings."], "Find The Bone": ["https://codeforces.com/problemset/problem/796/B", "B. Find The Bonetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputZane the wizard is going to perform a magic show shuffling the cups.There are n cups, numbered from 1 to n, placed along the x-axis on a table that has m holes on it. More precisely, cup i is on the table at the position x\u2009=\u2009i.The problematic bone is initially at the position x\u2009=\u20091. Zane will confuse the audience by swapping the cups k times, the i-th time of which involves the cups at the positions x\u2009=\u2009ui and x\u2009=\u2009vi. If the bone happens to be at the position where there is a hole at any time, it will fall into the hole onto the ground and will not be affected by future swapping operations.Do not forget that Zane is a wizard. When he swaps the cups, he does not move them ordinarily. Instead, he teleports the cups (along with the bone, if it is inside) to the intended positions. Therefore, for example, when he swaps the cup at x\u2009=\u20094 and the one at x\u2009=\u20096, they will not be at the position x\u2009=\u20095 at any moment during the operation.  Zane\u2019s puppy, Inzane, is in trouble. Zane is away on his vacation, and Inzane cannot find his beloved bone, as it would be too exhausting to try opening all the cups. Inzane knows that the Codeforces community has successfully helped Zane, so he wants to see if it could help him solve his problem too. Help Inzane determine the final position of the bone.InputThe first line contains three integers n, m, and k (2\u2009\u2264\u2009n\u2009\u2264\u2009106, 1\u2009\u2264\u2009m\u2009\u2264\u2009n, 1\u2009\u2264\u2009k\u2009\u2264\u20093\u00b7105)\u00a0\u2014 the number of cups, the number of holes on the table, and the number of swapping operations, respectively.The second line contains m distinct integers h1,\u2009h2,\u2009...,\u2009hm (1\u2009\u2264\u2009hi\u2009\u2264\u2009n)\u00a0\u2014 the positions along the x-axis where there is a hole on the table.Each of the next k lines contains two integers ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n, ui\u2009\u2260\u2009vi)\u00a0\u2014 the positions of the cups to be swapped.OutputPrint one integer\u00a0\u2014 the final position along the x-axis of the bone.ExamplesInputCopy7 3 43 4 61 22 55 77 1OutputCopy1InputCopy5 1 221 22 4OutputCopy2NoteIn the first sample, after the operations, the bone becomes at x\u2009=\u20092, x\u2009=\u20095, x\u2009=\u20097, and x\u2009=\u20091, respectively.In the second sample, after the first operation, the bone becomes at x\u2009=\u20092, and falls into the hole onto the ground."], "Homecoming": ["https://codeforces.com/problemset/problem/1315/B", "B. Homecomingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter a long party Petya decided to return home, but he turned out to be at the opposite end of the town from his home. There are nn crossroads in the line in the town, and there is either the bus or the tram station at each crossroad.The crossroads are represented as a string ss of length nn, where si=Asi=A, if there is a bus station at ii-th crossroad, and si=Bsi=B, if there is a tram station at ii-th crossroad. Currently Petya is at the first crossroad (which corresponds to s1s1) and his goal is to get to the last crossroad (which corresponds to snsn).If for two crossroads ii and jj for all crossroads i,i+1,\u2026,j\u22121i,i+1,\u2026,j\u22121 there is a bus station, one can pay aa roubles for the bus ticket, and go from ii-th crossroad to the jj-th crossroad by the bus (it is not necessary to have a bus station at the jj-th crossroad). Formally, paying aa roubles Petya can go from ii to jj if st=Ast=A for all i\u2264t<ji\u2264t<j. If for two crossroads ii and jj for all crossroads i,i+1,\u2026,j\u22121i,i+1,\u2026,j\u22121 there is a tram station, one can pay bb roubles for the tram ticket, and go from ii-th crossroad to the jj-th crossroad by the tram (it is not necessary to have a tram station at the jj-th crossroad). Formally, paying bb roubles Petya can go from ii to jj if st=Bst=B for all i\u2264t<ji\u2264t<j.For example, if ss=\"AABBBAB\", a=4a=4 and b=3b=3 then Petya needs:  buy one bus ticket to get from 11 to 33,  buy one tram ticket to get from 33 to 66,  buy one bus ticket to get from 66 to 77. Thus, in total he needs to spend 4+3+4=114+3+4=11 roubles. Please note that the type of the stop at the last crossroad (i.e. the character snsn) does not affect the final expense.Now Petya is at the first crossroad, and he wants to get to the nn-th crossroad. After the party he has left with pp roubles. He's decided to go to some station on foot, and then go to home using only public transport.Help him to choose the closest crossroad ii to go on foot the first, so he has enough money to get from the ii-th crossroad to the nn-th, using only tram and bus tickets.InputEach test contains one or more test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104).The first line of each test case consists of three integers a,b,pa,b,p (1\u2264a,b,p\u22641051\u2264a,b,p\u2264105)\u00a0\u2014 the cost of bus ticket, the cost of tram ticket and the amount of money Petya has.The second line of each test case consists of one string ss, where si=Asi=A, if there is a bus station at ii-th crossroad, and si=Bsi=B, if there is a tram station at ii-th crossroad (2\u2264|s|\u22641052\u2264|s|\u2264105).It is guaranteed, that the sum of the length of strings ss by all test cases in one test doesn't exceed 105105.OutputFor each test case print one number\u00a0\u2014 the minimal index ii of a crossroad Petya should go on foot. The rest of the path (i.e. from ii to nn he should use public transport).ExampleInputCopy5\n2 2 1\nBB\n1 1 1\nAB\n3 2 8\nAABBBBAABB\n5 3 4\nBBBBB\n2 1 1\nABABAB\nOutputCopy2\n1\n3\n1\n6\n"], "Snow Footprints": ["https://codeforces.com/problemset/problem/298/A", "A. Snow Footprintstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a straight snowy road, divided into n blocks. The blocks are numbered from 1 to n from left to right. If one moves from the i-th block to the (i\u2009+\u20091)-th block, he will leave a right footprint on the i-th block. Similarly, if one moves from the i-th block to the (i\u2009-\u20091)-th block, he will leave a left footprint on the i-th block. If there already is a footprint on the i-th block, the new footprint will cover the old one.  At the beginning, there were no footprints. Then polar bear Alice starts from the s-th block, makes a sequence of moves and ends in the t-th block. It is known that Alice never moves outside of the road. You are given the description of Alice's footprints. Your task is to find a pair of possible values of s,\u2009t by looking at the footprints.InputThe first line of the input contains integer n (3\u2009\u2264\u2009n\u2009\u2264\u20091000).The second line contains the description of the road \u2014 the string that consists of n characters. Each character will be either \".\" (a block without footprint), or \"L\" (a block with a left footprint), \"R\" (a block with a right footprint).It's guaranteed that the given string contains at least one character not equal to \".\". Also, the first and the last character will always be \".\". It's guaranteed that a solution exists.OutputPrint two space-separated integers \u2014 the values of s and t. If there are several possible solutions you can print any of them.ExamplesInputCopy9..RRLL...OutputCopy3 4InputCopy11.RRRLLLLL..OutputCopy7 5NoteThe first test sample is the one in the picture."], "Alarm Clocks Everywhere": ["https://codeforces.com/problemset/problem/1155/C", "C. Alarm Clocks Everywheretime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIvan is going to sleep now and wants to set his alarm clock. There will be many necessary events tomorrow, the ii-th of them will start during the xixi-th minute. Ivan doesn't want to skip any of the events, so he has to set his alarm clock in such a way that it rings during minutes x1,x2,\u2026,xnx1,x2,\u2026,xn, so he will be awake during each of these minutes (note that it does not matter if his alarm clock will ring during any other minute).Ivan can choose two properties for the alarm clock \u2014 the first minute it will ring (let's denote it as yy) and the interval between two consecutive signals (let's denote it by pp). After the clock is set, it will ring during minutes y,y+p,y+2p,y+3py,y+p,y+2p,y+3p and so on.Ivan can choose any minute as the first one, but he cannot choose any arbitrary value of pp. He has to pick it among the given values p1,p2,\u2026,pmp1,p2,\u2026,pm (his phone does not support any other options for this setting).So Ivan has to choose the first minute yy when the alarm clock should start ringing and the interval between two consecutive signals pjpj in such a way that it will ring during all given minutes x1,x2,\u2026,xnx1,x2,\u2026,xn (and it does not matter if his alarm clock will ring in any other minutes).Your task is to tell the first minute yy and the index jj such that if Ivan sets his alarm clock with properties yy and pjpj it will ring during all given minutes x1,x2,\u2026,xnx1,x2,\u2026,xn or say that it is impossible to choose such values of the given properties. If there are multiple answers, you can print any.InputThe first line of the input contains two integers nn and mm (2\u2264n\u22643\u22c5105,1\u2264m\u22643\u22c51052\u2264n\u22643\u22c5105,1\u2264m\u22643\u22c5105) \u2014 the number of events and the number of possible settings for the interval between signals.The second line of the input contains nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn (1\u2264xi\u226410181\u2264xi\u22641018), where xixi is the minute when ii-th event starts. It is guaranteed that all xixi are given in increasing order (i.\u2009e. the condition x1<x2<\u22ef<xnx1<x2<\u22ef<xn holds).The third line of the input contains mm integers p1,p2,\u2026,pmp1,p2,\u2026,pm (1\u2264pj\u226410181\u2264pj\u22641018), where pjpj is the jj-th option for the interval between two consecutive signals.OutputIf it's impossible to choose such values yy and jj so all constraints are satisfied, print \"NO\" in the first line.Otherwise print \"YES\" in the first line. Then print two integers yy (1\u2264y\u226410181\u2264y\u22641018) and jj (1\u2264j\u2264m1\u2264j\u2264m) in the second line, where yy is the first minute Ivan's alarm clock should start ringing and jj is the index of the option for the interval between two consecutive signals (options are numbered from 11 to mm in the order they are given input). These values should be chosen in such a way that the alarm clock will ring during all given minutes x1,x2,\u2026,xnx1,x2,\u2026,xn. If there are multiple answers, you can print any.ExamplesInputCopy3 5\n3 12 18\n2 6 5 3 3\nOutputCopyYES\n3 4\nInputCopy4 2\n1 5 17 19\n4 5\nOutputCopyNO\nInputCopy4 2\n1 5 17 19\n2 1\nOutputCopyYES\n1 1\n"], "New Year and Old Property": ["https://codeforces.com/problemset/problem/611/B", "B. New Year and Old Propertytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe year 2015 is almost over.Limak is a little polar bear. He has recently learnt about the binary system. He noticed that the passing year has exactly one zero in its representation in the binary system\u00a0\u2014 201510\u2009=\u2009111110111112. Note that he doesn't care about the number of zeros in the decimal representation.Limak chose some interval of years. He is going to count all years from this interval that have exactly one zero in the binary representation. Can you do it faster?Assume that all positive integers are always written without leading zeros.InputThe only line of the input contains two integers a and b (1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u20091018)\u00a0\u2014 the first year and the last year in Limak's interval respectively.OutputPrint one integer\u00a0\u2013 the number of years Limak will count in his chosen interval.ExamplesInputCopy5 10OutputCopy2InputCopy2015 2015OutputCopy1InputCopy100 105OutputCopy0InputCopy72057594000000000 72057595000000000OutputCopy26NoteIn the first sample Limak's interval contains numbers 510\u2009=\u20091012, 610\u2009=\u20091102, 710\u2009=\u20091112, 810\u2009=\u200910002, 910\u2009=\u200910012 and 1010\u2009=\u200910102. Two of them (1012 and 1102) have the described property."], "The Child and Homework": ["https://codeforces.com/problemset/problem/437/A", "A. The Child and Homeworktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce upon a time a child got a test consisting of multiple-choice questions as homework. A multiple-choice question consists of four choices: A, B, C and D. Each choice has a description, and the child should find out the only one that is correct.Fortunately the child knows how to solve such complicated test. The child will follow the algorithm:  If there is some choice whose description at least twice shorter than all other descriptions, or at least twice longer than all other descriptions, then the child thinks the choice is great.  If there is exactly one great choice then the child chooses it. Otherwise the child chooses C (the child think it is the luckiest choice). You are given a multiple-choice questions, can you predict child's choose?InputThe first line starts with \"A.\" (without quotes), then followed the description of choice A. The next three lines contains the descriptions of the other choices in the same format. They are given in order: B, C, D. Please note, that the description goes after prefix \"X.\", so the prefix mustn't be counted in description's length.Each description is non-empty and consists of at most 100 characters. Each character can be either uppercase English letter or lowercase English letter, or \"_\". OutputPrint a single line with the child's choice: \"A\", \"B\", \"C\" or \"D\" (without quotes).ExamplesInputCopyA.VFleaKing_is_the_author_of_this_problemB.Picks_is_the_author_of_this_problemC.Picking_is_the_author_of_this_problemD.Ftiasch_is_cuteOutputCopyDInputCopyA.abB.abcdeC.abD.abcOutputCopyCInputCopyA.cB.ccC.cD.cOutputCopyBNoteIn the first sample, the first choice has length 39, the second one has length 35, the third one has length 37, and the last one has length 15. The choice D (length 15) is twice shorter than all other choices', so it is great choice. There is no other great choices so the child will choose D.In the second sample, no choice is great, so the child will choose the luckiest choice C.In the third sample, the choice B (length 2) is twice longer than all other choices', so it is great choice. There is no other great choices so the child will choose B."], "Neko Performs Cat Furrier Transform": ["https://codeforces.com/problemset/problem/1152/B", "B. Neko Performs Cat Furrier Transformtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputCat Furrier Transform is a popular algorithm among cat programmers to create longcats. As one of the greatest cat programmers ever exist, Neko wants to utilize this algorithm to create the perfect longcat.Assume that we have a cat with a number xx. A perfect longcat is a cat with a number equal 2m\u221212m\u22121 for some non-negative integer mm. For example, the numbers 00, 11, 33, 77, 1515 and so on are suitable for the perfect longcats.In the Cat Furrier Transform, the following operations can be performed on xx:  (Operation A): you select any non-negative integer nn and replace xx with x\u2295(2n\u22121)x\u2295(2n\u22121), with \u2295\u2295 being a bitwise XOR operator. (Operation B): replace xx with x+1x+1. The first applied operation must be of type A, the second of type B, the third of type A again, and so on. Formally, if we number operations from one in the order they are executed, then odd-numbered operations must be of type A and the even-numbered operations must be of type B.Neko wants to produce perfect longcats at industrial scale, thus for each cat Neko only wants to perform at most 4040 operations. Can you help Neko writing a transformation plan?Note that it is not required to minimize the number of operations. You just need to use no more than 4040 operations.InputThe only line contains a single integer xx (1\u2264x\u22641061\u2264x\u2264106).OutputThe first line should contain a single integer tt (0\u2264t\u2264400\u2264t\u226440)\u00a0\u2014 the number of operations to apply.Then for each odd-numbered operation print the corresponding number nini in it. That is, print \u2308t2\u2309\u2308t2\u2309 integers nini (0\u2264ni\u2264300\u2264ni\u226430), denoting the replacement xx with x\u2295(2ni\u22121)x\u2295(2ni\u22121) in the corresponding step.If there are multiple possible answers, you can print any of them. It is possible to show, that there is at least one answer in the constraints of this problem.ExamplesInputCopy39\nOutputCopy4\n5 3 InputCopy1\nOutputCopy0\nInputCopy7\nOutputCopy0\nNoteIn the first test, one of the transforms might be as follows: 39\u219256\u219257\u219262\u21926339\u219256\u219257\u219262\u219263. Or more precisely: Pick n=5n=5. xx is transformed into 39\u22953139\u229531, or 5656.  Increase xx by 11, changing its value to 5757.  Pick n=3n=3. xx is transformed into 57\u2295757\u22957, or 6262.  Increase xx by 11, changing its value to 63=26\u2212163=26\u22121. In the second and third test, the number already satisfies the goal requirement."], "Alyona and copybooks": ["https://codeforces.com/problemset/problem/740/A", "A. Alyona and copybookstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle girl Alyona is in a shop to buy some copybooks for school. She study four subjects so she wants to have equal number of copybooks for each of the subjects. There are three types of copybook's packs in the shop: it is possible to buy one copybook for a rubles, a pack of two copybooks for b rubles, and a pack of three copybooks for c rubles. Alyona already has n copybooks.What is the minimum amount of rubles she should pay to buy such number of copybooks k that n\u2009+\u2009k is divisible by 4? There are infinitely many packs of any type in the shop. Alyona can buy packs of different type in the same purchase.InputThe only line contains 4 integers n, a, b, c (1\u2009\u2264\u2009n,\u2009a,\u2009b,\u2009c\u2009\u2264\u2009109).OutputPrint the minimum amount of rubles she should pay to buy such number of copybooks k that n\u2009+\u2009k is divisible by 4.ExamplesInputCopy1 1 3 4OutputCopy3InputCopy6 2 1 1OutputCopy1InputCopy4 4 4 4OutputCopy0InputCopy999999999 1000000000 1000000000 1000000000OutputCopy1000000000NoteIn the first example Alyona can buy 3 packs of 1 copybook for 3a\u2009=\u20093 rubles in total. After that she will have 4 copybooks which she can split between the subjects equally. In the second example Alyuna can buy a pack of 2 copybooks for b\u2009=\u20091 ruble. She will have 8 copybooks in total.In the third example Alyona can split the copybooks she already has between the 4 subject equally, so she doesn't need to buy anything.In the fourth example Alyona should buy one pack of one copybook."], "String Transformation": ["https://codeforces.com/problemset/problem/946/C", "C. String Transformationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string s consisting of |s| small english letters.In one move you can replace any character of this string to the next character in alphabetical order (a will be replaced with b, s will be replaced with t, etc.). You cannot replace letter z with any other letter.Your target is to make some number of moves (not necessary minimal) to get string abcdefghijklmnopqrstuvwxyz (english alphabet) as a subsequence. Subsequence of the string is the string that is obtained by deleting characters at some positions. You need to print the string that will be obtained from the given string and will be contain english alphabet as a subsequence or say that it is impossible.InputThe only one line of the input consisting of the string s consisting of |s| (1\u2009\u2264\u2009|s|\u2009\u2264\u2009105) small english letters.OutputIf you can get a string that can be obtained from the given string and will contain english alphabet as a subsequence, print it. Otherwise print \u00ab-1\u00bb (without quotes).ExamplesInputCopyaacceeggiikkmmooqqssuuwwyyOutputCopyabcdefghijklmnopqrstuvwxyzInputCopythereisnoanswerOutputCopy-1"], "Seat Arrangements": ["https://codeforces.com/problemset/problem/919/C", "C. Seat Arrangementstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSuppose that you are in a campus and have to go for classes day by day. As you may see, when you hurry to a classroom, you surprisingly find that many seats there are already occupied. Today you and your friends went for class, and found out that some of the seats were occupied.The classroom contains nn rows of seats and there are mm seats in each row. Then the classroom can be represented as an n\u00d7mn\u00d7m matrix. The character '.' represents an empty seat, while '*' means that the seat is occupied. You need to find kk consecutive empty seats in the same row or column and arrange those seats for you and your friends. Your task is to find the number of ways to arrange the seats. Two ways are considered different if sets of places that students occupy differs.InputThe first line contains three positive integers n,m,kn,m,k (1\u2264n,m,k\u226420001\u2264n,m,k\u22642000), where n,mn,m represent the sizes of the classroom and kk is the number of consecutive seats you need to find.Each of the next nn lines contains mm characters '.' or '*'. They form a matrix representing the classroom, '.' denotes an empty seat, and '*' denotes an occupied seat.OutputA single number, denoting the number of ways to find kk empty seats in the same row or column.ExamplesInputCopy2 3 2**....OutputCopy3InputCopy1 2 2..OutputCopy1InputCopy3 3 4.*.*.*.*.OutputCopy0NoteIn the first sample, there are three ways to arrange those seats. You can take the following seats for your arrangement.   (1,3)(1,3), (2,3)(2,3)  (2,2)(2,2), (2,3)(2,3)  (2,1)(2,1), (2,2)(2,2) "], "A Prank": ["https://codeforces.com/problemset/problem/1062/A", "A. A Pranktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputJATC and his friend Giraffe are currently in their room, solving some problems. Giraffe has written on the board an array a1a1, a2a2, ..., anan of integers, such that 1\u2264a1<a2<\u2026<an\u22641031\u2264a1<a2<\u2026<an\u2264103, and then went to the bathroom.JATC decided to prank his friend by erasing some consecutive elements in the array. Since he doesn't want for the prank to go too far, he will only erase in a way, such that Giraffe can still restore the array using the information from the remaining elements. Because Giraffe has created the array, he's also aware that it's an increasing array and all the elements are integers in the range [1,103][1,103].JATC wonders what is the greatest number of elements he can erase?InputThe first line of the input contains a single integer nn (1\u2264n\u22641001\u2264n\u2264100)\u00a0\u2014 the number of elements in the array.The second line of the input contains nn integers aiai (1\u2264a1<a2<\u22ef<an\u22641031\u2264a1<a2<\u22ef<an\u2264103)\u00a0\u2014 the array written by Giraffe.OutputPrint a single integer\u00a0\u2014 the maximum number of consecutive elements in the array that JATC can erase.If it is impossible to erase even a single element, print 00.ExamplesInputCopy61 3 4 5 6 9OutputCopy2InputCopy3998 999 1000OutputCopy2InputCopy51 2 3 4 5OutputCopy4NoteIn the first example, JATC can erase the third and fourth elements, leaving the array [1,3,_,_,6,9][1,3,_,_,6,9]. As you can see, there is only one way to fill in the blanks.In the second example, JATC can erase the second and the third elements. The array will become [998,_,_][998,_,_]. Because all the elements are less than or equal to 10001000, the array is still can be restored. Note, that he can't erase the first 22 elements.In the third example, JATC can erase the first 44 elements. Since all the elements are greater than or equal to 11, Giraffe can still restore the array. Note, that he can't erase the last 44 elements."], "Divisiblity of Differences": ["https://codeforces.com/problemset/problem/876/B", "B. Divisiblity of Differencestime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given a multiset of n integers. You should select exactly k of them in a such way that the difference between any two of them is divisible by m, or tell that it is impossible.Numbers can be repeated in the original multiset and in the multiset of selected numbers, but number of occurrences of any number in multiset of selected numbers should not exceed the number of its occurrences in the original multiset. InputFirst line contains three integers n, k and m (2\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009m\u2009\u2264\u2009100\u2009000)\u00a0\u2014 number of integers in the multiset, number of integers you should select and the required divisor of any pair of selected integers.Second line contains n integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 the numbers in the multiset.OutputIf it is not possible to select k numbers in the desired way, output \u00abNo\u00bb (without the quotes).Otherwise, in the first line of output print \u00abYes\u00bb (without the quotes). In the second line print k integers b1,\u2009b2,\u2009...,\u2009bk\u00a0\u2014 the selected numbers. If there are multiple possible solutions, print any of them. ExamplesInputCopy3 2 31 8 4OutputCopyYes1 4 InputCopy3 3 31 8 4OutputCopyNoInputCopy4 3 52 7 7 7OutputCopyYes2 7 7 "], "Cinema": ["https://codeforces.com/problemset/problem/670/C", "C. Cinematime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMoscow is hosting a major international conference, which is attended by n scientists from different countries. Each of the scientists knows exactly one language. For convenience, we enumerate all languages of the world with integers from 1 to 109.In the evening after the conference, all n scientists decided to go to the cinema. There are m movies in the cinema they came to. Each of the movies is characterized by two distinct numbers\u00a0\u2014 the index of audio language and the index of subtitles language. The scientist, who came to the movie, will be very pleased if he knows the audio language of the movie, will be almost satisfied if he knows the language of subtitles and will be not satisfied if he does not know neither one nor the other (note that the audio language and the subtitles language for each movie are always different). Scientists decided to go together to the same movie. You have to help them choose the movie, such that the number of very pleased scientists is maximum possible. If there are several such movies, select among them one that will maximize the number of almost satisfied scientists.InputThe first line of the input contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of scientists.The second line contains n positive integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109), where ai is the index of a language, which the i-th scientist knows.The third line contains a positive integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of movies in the cinema. The fourth line contains m positive integers b1,\u2009b2,\u2009...,\u2009bm (1\u2009\u2264\u2009bj\u2009\u2264\u2009109), where bj is the index of the audio language of the j-th movie.The fifth line contains m positive integers c1,\u2009c2,\u2009...,\u2009cm (1\u2009\u2264\u2009cj\u2009\u2264\u2009109), where cj is the index of subtitles language of the j-th movie.It is guaranteed that audio languages and subtitles language are different for each movie, that is bj\u2009\u2260\u2009cj. OutputPrint the single integer\u00a0\u2014 the index of a movie to which scientists should go. After viewing this movie the number of very pleased scientists should be maximum possible. If in the cinema there are several such movies, you need to choose among them one, after viewing which there will be the maximum possible number of almost satisfied scientists. If there are several possible answers print any of them.ExamplesInputCopy32 3 223 22 3OutputCopy2InputCopy66 3 1 1 3 751 2 3 4 52 3 4 5 1OutputCopy1NoteIn the first sample, scientists must go to the movie with the index 2, as in such case the 1-th and the 3-rd scientists will be very pleased and the 2-nd scientist will be almost satisfied.In the second test case scientists can go either to the movie with the index 1 or the index 3. After viewing any of these movies exactly two scientists will be very pleased and all the others will be not satisfied. "], "Mike and strings": ["https://codeforces.com/problemset/problem/798/B", "B. Mike and stringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMike has n strings s1,\u2009s2,\u2009...,\u2009sn each consisting of lowercase English letters. In one move he can choose a string si, erase the first character and append it to the end of the string. For example, if he has the string \"coolmike\", in one move he can transform it into the string \"oolmikec\".Now Mike asks himself: what is minimal number of moves that he needs to do in order to make all the strings equal?InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950) \u2014 the number of strings.This is followed by n lines which contain a string each. The i-th line corresponding to string si. Lengths of strings are equal. Lengths of each string is positive and don't exceed 50.OutputPrint the minimal number of moves Mike needs in order to make all the strings equal or print \u2009-\u20091 if there is no solution.ExamplesInputCopy4xzzwozwoxzzzwoxxzzwoOutputCopy5InputCopy2molzvlzvmoOutputCopy2InputCopy3kckckcOutputCopy0InputCopy3aaaaabOutputCopy-1NoteIn the first sample testcase the optimal scenario is to perform operations in such a way as to transform all strings into \"zwoxz\"."], "Economy Game": ["https://codeforces.com/problemset/problem/681/B", "B. Economy Gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputKolya is developing an economy simulator game. His most favourite part of the development process is in-game testing. Once he was entertained by the testing so much, that he found out his game-coin score become equal to 0.Kolya remembers that at the beginning of the game his game-coin score was equal to n and that he have bought only some houses (for 1\u2009234\u2009567 game-coins each), cars (for 123\u2009456 game-coins each) and computers (for 1\u2009234 game-coins each).Kolya is now interested, whether he could have spent all of his initial n game-coins buying only houses, cars and computers or there is a bug in the game. Formally, is there a triple of non-negative integers a, b and c such that a\u2009\u00d7\u20091\u2009234\u2009567\u2009+\u2009b\u2009\u00d7\u2009123\u2009456\u2009+\u2009c\u2009\u00d7\u20091\u2009234\u2009=\u2009n?Please help Kolya answer this question.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009109)\u00a0\u2014 Kolya's initial game-coin score.OutputPrint \"YES\" (without quotes) if it's possible that Kolya spent all of his initial n coins buying only houses, cars and computers. Otherwise print \"NO\" (without quotes).ExamplesInputCopy1359257OutputCopyYESInputCopy17851817OutputCopyNONoteIn the first sample, one of the possible solutions is to buy one house, one car and one computer, spending 1\u2009234\u2009567\u2009+\u2009123\u2009456\u2009+\u20091234\u2009=\u20091\u2009359\u2009257 game-coins in total."], "Magic Forest": ["https://codeforces.com/problemset/problem/922/B", "B. Magic Foresttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImp is in a magic forest, where xorangles grow (wut?)  A xorangle of order n is such a non-degenerate triangle, that lengths of its sides are integers not exceeding n, and the xor-sum of the lengths is equal to zero. Imp has to count the number of distinct xorangles of order n to get out of the forest. Formally, for a given integer n you have to find the number of such triples (a,\u2009b,\u2009c), that:  1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u2009c\u2009\u2264\u2009n;  , where  denotes the bitwise xor of integers x and y.  (a,\u2009b,\u2009c) form a non-degenerate (with strictly positive area) triangle. InputThe only line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092500).OutputPrint the number of xorangles of order n.ExamplesInputCopy6OutputCopy1InputCopy10OutputCopy2NoteThe only xorangle in the first sample is (3,\u20095,\u20096)."], "Koala and Lights": ["https://codeforces.com/problemset/problem/1209/B", "B. Koala and Lightstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt is a holiday season, and Koala is decorating his house with cool lights! He owns nn lights, all of which flash periodically.After taking a quick glance at them, Koala realizes that each of his lights can be described with two parameters aiai and bibi. Light with parameters aiai and bibi will toggle (on to off, or off to on) every aiai seconds starting from the bibi-th second. In other words, it will toggle at the moments bibi, bi+aibi+ai, bi+2\u22c5aibi+2\u22c5ai and so on.You know for each light whether it's initially on or off and its corresponding parameters aiai and bibi. Koala is wondering what is the maximum number of lights that will ever be on at the same time. So you need to find that out.  Here is a graphic for the first example. InputThe first line contains a single integer nn (1\u2264n\u22641001\u2264n\u2264100), the number of lights.The next line contains a string ss of nn characters. The ii-th character is \"1\", if the ii-th lamp is initially on. Otherwise, ii-th character is \"0\".The ii-th of the following nn lines contains two integers aiai and bibi (1\u2264ai,bi\u226451\u2264ai,bi\u22645) \u00a0\u2014 the parameters of the ii-th light.OutputPrint a single integer\u00a0\u2014 the maximum number of lights that will ever be on at the same time.ExamplesInputCopy3\n101\n3 3\n3 2\n3 1\nOutputCopy2\nInputCopy4\n1111\n3 4\n5 2\n3 1\n3 2\nOutputCopy4\nInputCopy6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\nOutputCopy6\nNoteFor first example, the lamps' states are shown in the picture above. The largest number of simultaneously on lamps is 22 (e.g. at the moment 22).In the second example, all lights are initially on. So the answer is 44."], "Art Union": ["https://codeforces.com/problemset/problem/416/B", "B. Art Uniontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA well-known art union called \"Kalevich is Alive!\" manufactures objects d'art (pictures). The union consists of n painters who decided to organize their work as follows.Each painter uses only the color that was assigned to him. The colors are distinct for all painters. Let's assume that the first painter uses color 1, the second one uses color 2, and so on. Each picture will contain all these n colors. Adding the j-th color to the i-th picture takes the j-th painter tij units of time.Order is important everywhere, so the painters' work is ordered by the following rules:  Each picture is first painted by the first painter, then by the second one, and so on. That is, after the j-th painter finishes working on the picture, it must go to the (j\u2009+\u20091)-th painter (if j\u2009<\u2009n);  each painter works on the pictures in some order: first, he paints the first picture, then he paints the second picture and so on;  each painter can simultaneously work on at most one picture. However, the painters don't need any time to have a rest;  as soon as the j-th painter finishes his part of working on the picture, the picture immediately becomes available to the next painter. Given that the painters start working at time 0, find for each picture the time when it is ready for sale.InputThe first line of the input contains integers m,\u2009n (1\u2009\u2264\u2009m\u2009\u2264\u200950000,\u20091\u2009\u2264\u2009n\u2009\u2264\u20095), where m is the number of pictures and n is the number of painters. Then follow the descriptions of the pictures, one per line. Each line contains n integers ti1,\u2009ti2,\u2009...,\u2009tin (1\u2009\u2264\u2009tij\u2009\u2264\u20091000), where tij is the time the j-th painter needs to work on the i-th picture.OutputPrint the sequence of m integers r1,\u2009r2,\u2009...,\u2009rm, where ri is the moment when the n-th painter stopped working on the i-th picture.ExamplesInputCopy5 112345OutputCopy1 3 6 10 15 InputCopy4 22 53 15 310 1OutputCopy7 8 13 21 "], "Simple Strings": ["https://codeforces.com/problemset/problem/665/C", "C. Simple Stringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputzscoder loves simple strings! A string t is called simple if every pair of adjacent characters are distinct. For example ab, aba, zscoder are simple whereas aa, add are not simple.zscoder is given a string s. He wants to change a minimum number of characters so that the string s becomes simple. Help him with this task!InputThe only line contains the string s (1\u2009\u2264\u2009|s|\u2009\u2264\u20092\u00b7105) \u2014 the string given to zscoder. The string s consists of only lowercase English letters.OutputPrint the simple string s' \u2014 the string s after the minimal number of changes. If there are multiple solutions, you may output any of them.Note that the string s' should also consist of only lowercase English letters.ExamplesInputCopyaabOutputCopybabInputCopycaaabOutputCopycababInputCopyzscoderOutputCopyzscoder"], "Longest Strike": ["https://codeforces.com/problemset/problem/1676/F", "F. Longest Striketime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGiven an array aa of length nn and an integer kk, you are tasked to find any two numbers ll and rr (l\u2264rl\u2264r) such that:   For each xx (l\u2264x\u2264r)(l\u2264x\u2264r), xx appears in aa at least kk times (i.e. kk or more array elements are equal to xx).  The value r\u2212lr\u2212l is maximized. If no numbers satisfy the conditions, output -1.For example, if a=[11,11,12,13,13,14,14]a=[11,11,12,13,13,14,14] and k=2k=2, then:   for l=12l=12, r=14r=14 the first condition fails because 1212 does not appear at least k=2k=2 times.  for l=13l=13, r=14r=14 the first condition holds, because 1313 occurs at least k=2k=2 times in aa and 1414 occurs at least k=2k=2 times in aa.  for l=11l=11, r=11r=11 the first condition holds, because 1111 occurs at least k=2k=2 times in aa. A pair of ll and rr for which the first condition holds and r\u2212lr\u2212l is maximal is l=13l=13, r=14r=14.InputThe first line of the input contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases. The description of test cases follows.The first line of each test case contains the integers nn and kk (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 1\u2264k\u2264n1\u2264k\u2264n) \u2014 the length of the array aa and the minimum amount of times each number in the range [l,r][l,r] should appear respectively.Then a single line follows, containing nn integers describing the array aa (1\u2264ai\u22641091\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case output 22 numbers, ll and rr that satisfy the conditions, or \"-1\" if no numbers satisfy the conditions.If multiple answers exist, you can output any.ExampleInputCopy4\n7 2\n11 11 12 13 13 14 14\n5 1\n6 3 5 2 1\n6 4\n4 3 4 3 3 4\n14 2\n1 1 2 2 2 3 3 3 3 4 4 4 4 4\nOutputCopy13 14\n1 3\n-1\n1 4\n"], "Berland National Library": ["https://codeforces.com/problemset/problem/567/B", "B. Berland National Librarytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBerland National Library has recently been built in the capital of Berland. In addition, in the library you can take any of the collected works of Berland leaders, the library has a reading room.Today was the pilot launch of an automated reading room visitors' accounting system! The scanner of the system is installed at the entrance to the reading room. It records the events of the form \"reader entered room\", \"reader left room\". Every reader is assigned a registration number during the registration procedure at the library \u2014 it's a unique integer from 1 to 106. Thus, the system logs events of two forms:  \"+ ri\" \u2014 the reader with registration number ri entered the room;  \"- ri\" \u2014 the reader with registration number ri left the room. The first launch of the system was a success, it functioned for some period of time, and, at the time of its launch and at the time of its shutdown, the reading room may already have visitors.Significant funds of the budget of Berland have been spent on the design and installation of the system. Therefore, some of the citizens of the capital now demand to explain the need for this system and the benefits that its implementation will bring. Now, the developers of the system need to urgently come up with reasons for its existence.Help the system developers to find the minimum possible capacity of the reading room (in visitors) using the log of the system available to you.InputThe first line contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of records in the system log. Next follow n events from the system journal in the order in which the were made. Each event was written on a single line and looks as \"+ ri\" or \"- ri\", where ri is an integer from 1 to 106, the registration number of the visitor (that is, distinct visitors always have distinct registration numbers).It is guaranteed that the log is not contradictory, that is, for every visitor the types of any of his two consecutive events are distinct. Before starting the system, and after stopping the room may possibly contain visitors.OutputPrint a single integer \u2014 the minimum possible capacity of the reading room.ExamplesInputCopy6+ 12001- 12001- 1- 1200+ 1+ 7OutputCopy3InputCopy2- 1- 2OutputCopy2InputCopy2+ 1- 1OutputCopy1NoteIn the first sample test, the system log will ensure that at some point in the reading room were visitors with registration numbers 1, 1200 and 12001. More people were not in the room at the same time based on the log. Therefore, the answer to the test is 3."], "Difference Row": ["https://codeforces.com/problemset/problem/347/A", "A. Difference Rowtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou want to arrange n integers a1,\u2009a2,\u2009...,\u2009an in some order in a row. Let's define the value of an arrangement as the sum of differences between all pairs of adjacent integers.More formally, let's denote some arrangement as a sequence of integers x1,\u2009x2,\u2009...,\u2009xn, where sequence x is a permutation of sequence a. The value of such an arrangement is (x1\u2009-\u2009x2)\u2009+\u2009(x2\u2009-\u2009x3)\u2009+\u2009...\u2009+\u2009(xn\u2009-\u20091\u2009-\u2009xn).Find the largest possible value of an arrangement. Then, output the lexicographically smallest sequence x that corresponds to an arrangement of the largest possible value.InputThe first line of the input contains integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100). The second line contains n space-separated integers a1, a2, ..., an (|ai|\u2009\u2264\u20091000).OutputPrint the required sequence x1,\u2009x2,\u2009...,\u2009xn. Sequence x should be the lexicographically smallest permutation of a that corresponds to an arrangement of the largest possible value.ExamplesInputCopy5100 -100 50 0 -50OutputCopy100 -50 0 50 -100 NoteIn the sample test case, the value of the output arrangement is (100\u2009-\u2009(\u2009-\u200950))\u2009+\u2009((\u2009-\u200950)\u2009-\u20090)\u2009+\u2009(0\u2009-\u200950)\u2009+\u2009(50\u2009-\u2009(\u2009-\u2009100))\u2009=\u2009200. No other arrangement has a larger value, and among all arrangements with the value of 200, the output arrangement is the lexicographically smallest one.Sequence x1,\u2009x2,\u2009... ,\u2009xp is lexicographically smaller than sequence y1,\u2009y2,\u2009... ,\u2009yp if there exists an integer r (0\u2009\u2264\u2009r\u2009<\u2009p) such that x1\u2009=\u2009y1,\u2009x2\u2009=\u2009y2,\u2009... ,\u2009xr\u2009=\u2009yr and xr\u2009+\u20091\u2009<\u2009yr\u2009+\u20091."], "Bus of Characters": ["https://codeforces.com/problemset/problem/982/B", "B. Bus of Characterstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn the Bus of Characters there are nn rows of seat, each having 22 seats. The width of both seats in the ii-th row is wiwi centimeters. All integers wiwi are distinct.Initially the bus is empty. On each of 2n2n stops one passenger enters the bus. There are two types of passengers:   an introvert always chooses a row where both seats are empty. Among these rows he chooses the one with the smallest seats width and takes one of the seats in it;  an extrovert always chooses a row where exactly one seat is occupied (by an introvert). Among these rows he chooses the one with the largest seats width and takes the vacant place in it. You are given the seats width in each row and the order the passengers enter the bus. Determine which row each passenger will take.InputThe first line contains a single integer nn (1\u2264n\u22642000001\u2264n\u2264200000) \u2014 the number of rows in the bus.The second line contains the sequence of integers w1,w2,\u2026,wnw1,w2,\u2026,wn (1\u2264wi\u22641091\u2264wi\u2264109), where wiwi is the width of each of the seats in the ii-th row. It is guaranteed that all wiwi are distinct.The third line contains a string of length 2n2n, consisting of digits '0' and '1' \u2014 the description of the order the passengers enter the bus. If the jj-th character is '0', then the passenger that enters the bus on the jj-th stop is an introvert. If the jj-th character is '1', the the passenger that enters the bus on the jj-th stop is an extrovert. It is guaranteed that the number of extroverts equals the number of introverts (i.\u00a0e. both numbers equal nn), and for each extrovert there always is a suitable row.OutputPrint 2n2n integers \u2014 the rows the passengers will take. The order of passengers should be the same as in input.ExamplesInputCopy23 10011OutputCopy2 1 1 2 InputCopy610 8 9 11 13 5010010011101OutputCopy6 6 2 3 3 1 4 4 1 2 5 5 NoteIn the first example the first passenger (introvert) chooses the row 22, because it has the seats with smallest width. The second passenger (introvert) chooses the row 11, because it is the only empty row now. The third passenger (extrovert) chooses the row 11, because it has exactly one occupied seat and the seat width is the largest among such rows. The fourth passenger (extrovert) chooses the row 22, because it is the only row with an empty place."], "Browser": ["https://codeforces.com/problemset/problem/915/B", "B. Browsertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLuba is surfing the Internet. She currently has n opened tabs in her browser, indexed from 1 to n from left to right. The mouse cursor is currently located at the pos-th tab. Luba needs to use the tabs with indices from l to r (inclusive) for her studies, and she wants to close all the tabs that don't belong to this segment as fast as possible.Each second Luba can either try moving the cursor to the left or to the right (if the cursor is currently at the tab i, then she can move it to the tab max(i\u2009-\u20091,\u2009a) or to the tab min(i\u2009+\u20091,\u2009b)) or try closing all the tabs to the left or to the right of the cursor (if the cursor is currently at the tab i, she can close all the tabs with indices from segment [a,\u2009i\u2009-\u20091] or from segment [i\u2009+\u20091,\u2009b]). In the aforementioned expressions a and b denote the minimum and maximum index of an unclosed tab, respectively. For example, if there were 7 tabs initially and tabs 1, 2 and 7 are closed, then a\u2009=\u20093, b\u2009=\u20096.What is the minimum number of seconds Luba has to spend in order to leave only the tabs with initial indices from l to r inclusive opened?InputThe only line of input contains four integer numbers n, pos, l, r (1\u2009\u2264\u2009n\u2009\u2264\u2009100, 1\u2009\u2264\u2009pos\u2009\u2264\u2009n, 1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009n) \u2014 the number of the tabs, the cursor position and the segment which Luba needs to leave opened.OutputPrint one integer equal to the minimum number of seconds required to close all the tabs outside the segment [l,\u2009r].ExamplesInputCopy6 3 2 4OutputCopy5InputCopy6 3 1 3OutputCopy1InputCopy5 2 1 5OutputCopy0NoteIn the first test Luba can do the following operations: shift the mouse cursor to the tab 2, close all the tabs to the left of it, shift the mouse cursor to the tab 3, then to the tab 4, and then close all the tabs to the right of it.In the second test she only needs to close all the tabs to the right of the current position of the cursor.In the third test Luba doesn't need to do anything."], "Sasha and Magnetic Machines": ["https://codeforces.com/problemset/problem/1113/B", "B. Sasha and Magnetic Machinestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Sasha visited the farmer 2D and his famous magnetic farm. On this farm, the crop grows due to the influence of a special magnetic field. Maintaining of the magnetic field is provided by nn machines, and the power of the ii-th machine is aiai. This year 2D decided to cultivate a new culture, but what exactly he didn't say. For the successful growth of the new culture, it is necessary to slightly change the powers of the machines. 2D can at most once choose an arbitrary integer xx, then choose one machine and reduce the power of its machine by xx times, and at the same time increase the power of one another machine by xx times (powers of all the machines must stay positive integers). Note that he may not do that if he wants. More formally, 2D can choose two such indices ii and jj, and one integer xx such that xx is a divisor of aiai, and change powers as following: ai=aixai=aix, aj=aj\u22c5xaj=aj\u22c5xSasha is very curious, that's why he wants to calculate the minimum total power the farmer can reach. There are too many machines, and Sasha can't cope with computations, help him!InputThe first line contains one integer nn (2\u2264n\u22645\u22c51042\u2264n\u22645\u22c5104)\u00a0\u2014 the number of machines.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641001\u2264ai\u2264100)\u00a0\u2014 the powers of the machines.OutputPrint one integer\u00a0\u2014 minimum total power.ExamplesInputCopy5\n1 2 3 4 5\nOutputCopy14\nInputCopy4\n4 2 4 4\nOutputCopy14\nInputCopy5\n2 4 2 3 7\nOutputCopy18\nNoteIn the first example, the farmer can reduce the power of the 44-th machine by 22 times, and increase the power of the 11-st machine by 22 times, then the powers will be: [2,2,3,2,5][2,2,3,2,5].In the second example, the farmer can reduce the power of the 33-rd machine by 22 times, and increase the power of the 22-nd machine by 22 times. At the same time, the farmer can leave is be as it is and the total power won't change.In the third example, it is optimal to leave it be as it is."], "Dividing the numbers": ["https://codeforces.com/problemset/problem/899/C", "C. Dividing the numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya has n integers: 1,\u20092,\u20093,\u2009...,\u2009n. He wants to split these integers in two non-empty groups in such a way that the absolute difference of sums of integers in each group is as small as possible. Help Petya to split the integers. Each of n integers should be exactly in one group.InputThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u200960\u2009000) \u2014 the number of integers Petya has.OutputPrint the smallest possible absolute difference in the first line.In the second line print the size of the first group, followed by the integers in that group. You can print these integers in arbitrary order. If there are multiple answers, print any of them.ExamplesInputCopy4OutputCopy02 1 4 InputCopy2OutputCopy11 1 NoteIn the first example you have to put integers 1 and 4 in the first group, and 2 and 3 in the second. This way the sum in each group is 5, and the absolute difference is 0.In the second example there are only two integers, and since both groups should be non-empty, you have to put one integer in the first group and one in the second. This way the absolute difference of sums of integers in each group is 1."], "Bit Flipping": ["https://codeforces.com/problemset/problem/1659/B", "B. Bit Flippingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a binary string of length nn. You have exactly kk moves. In one move, you must select a single bit. The state of all bits except that bit will get flipped (00 becomes 11, 11 becomes 00). You need to output the lexicographically largest string that you can get after using all kk moves. Also, output the number of times you will select each bit. If there are multiple ways to do this, you may output any of them.A binary string aa is lexicographically larger than a binary string bb of the same length, if and only if the following holds:   in the first position where aa and bb differ, the string aa contains a 11, and the string bb contains a 00. InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000) \u00a0\u2014 the number of test cases.Each test case has two lines. The first line has two integers nn and kk (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105; 0\u2264k\u22641090\u2264k\u2264109).The second line has a binary string of length nn, each character is either 00 or 11.The sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output two lines.The first line should contain the lexicographically largest string you can obtain.The second line should contain nn integers f1,f2,\u2026,fnf1,f2,\u2026,fn, where fifi is the number of times the ii-th bit is selected. The sum of all the integers must be equal to kk.ExampleInputCopy6\n6 3\n100001\n6 4\n100011\n6 0\n000000\n6 1\n111001\n6 11\n101100\n6 12\n001110\nOutputCopy111110\n1 0 0 2 0 0 \n111110\n0 1 1 1 0 1 \n000000\n0 0 0 0 0 0 \n100110\n1 0 0 0 0 0 \n111111\n1 2 1 3 0 4 \n111110\n1 1 4 2 0 4NoteHere is the explanation for the first testcase. Each step shows how the binary string changes in a move.  Choose bit 11: 1\u201300001\u21921\u2013111101_00001\u21921_11110.  Choose bit 44: 1111\u201310\u21920001\u2013011111_10\u21920001_01.  Choose bit 44: 0001\u201301\u21921111\u2013100001_01\u21921111_10.  The final string is 111110111110 and this is the lexicographically largest string we can get."], "Position in Fraction": ["https://codeforces.com/problemset/problem/900/B", "B. Position in Fractiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a fraction . You need to find the first occurrence of digit c into decimal notation of the fraction after decimal point.InputThe first contains three single positive integers a, b, c (1\u2009\u2264\u2009a\u2009<\u2009b\u2009\u2264\u2009105, 0\u2009\u2264\u2009c\u2009\u2264\u20099).OutputPrint position of the first occurrence of digit c into the fraction. Positions are numbered from 1 after decimal point. It there is no such position, print -1.ExamplesInputCopy1 2 0OutputCopy2InputCopy2 3 7OutputCopy-1NoteThe fraction in the first example has the following decimal notation: . The first zero stands on second position.The fraction in the second example has the following decimal notation: . There is no digit 7 in decimal notation of the fraction. "], "Vertical Paths": ["https://codeforces.com/problemset/problem/1675/D", "D. Vertical Pathstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree consisting of nn vertices. Vertices are numbered from 11 to nn. Any vertex can be the root of a tree.A tree is a connected undirected graph without cycles. A rooted tree is a tree with a selected vertex, which is called the root.The tree is specified by an array of parents pp containing nn numbers: pipi is a parent of the vertex with the index ii. The parent of a vertex uu is a vertex that is the next vertex on the shortest path from uu to the root. For example, on the simple path from 55 to 33 (the root), the next vertex would be 11, so the parent of 55 is 11.The root has no parent, so for it, the value of pipi is ii (the root is the only vertex for which pi=ipi=i).Find such a set of paths that:  each vertex belongs to exactly one path, each path can contain one or more vertices;  in each path each next vertex\u00a0\u2014 is a son of the current vertex (that is, paths always lead down\u00a0\u2014 from parent to son);  number of paths is minimal. For example, if n=5n=5 and p=[3,1,3,3,1]p=[3,1,3,3,1], then the tree can be divided into three paths:   3\u21921\u219253\u21921\u21925 (path of 33 vertices),  44 (path of 11 vertices).  22 (path of 11 vertices).   Example of splitting a root tree into three paths for n=5n=5, the root of the tree\u00a0\u2014 node 33. InputThe first line of input data contains an integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases in the test.Each test case consists of two lines.The first of them contains an integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105). It is the number of vertices in the tree.The second line contains nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n). It is guaranteed that the pp array encodes some rooted tree.It is guaranteed that the sum of the values nn over all test cases in the test does not exceed 2\u22c51052\u22c5105.OutputFor each test case on the first line, output an integer mm \u2014 the minimum number of non-intersecting leading down paths that can cover all vertices of the tree.Then print mm pairs of lines containing path descriptions. In the first of them print the length of the path, in the second \u2014 the sequence of vertices specifying that path in the order from top to bottom. You can output the paths in any order.If there are several answers, output any of them.ExampleInputCopy6\n5\n3 1 3 3 1\n4\n1 1 4 1\n7\n1 1 2 3 4 5 6\n1\n1\n6\n4 4 4 4 1 2\n4\n2 2 2 2\nOutputCopy3\n3\n3 1 5\n1\n2\n1\n4\n\n2\n2\n1 2\n2\n4 3\n\n1\n7\n1 2 3 4 5 6 7\n\n1\n1\n1\n\n3\n3\n4 1 5\n2\n2 6\n1\n3\n\n3\n2\n2 1\n1\n3\n1\n4\n"], "Students in Railway Carriage": ["https://codeforces.com/problemset/problem/962/B", "B. Students in Railway Carriagetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn consecutive seat places in a railway carriage. Each place is either empty or occupied by a passenger.The university team for the Olympiad consists of aa student-programmers and bb student-athletes. Determine the largest number of students from all a+ba+b students, which you can put in the railway carriage so that:  no student-programmer is sitting next to the student-programmer;  and no student-athlete is sitting next to the student-athlete. In the other words, there should not be two consecutive (adjacent) places where two student-athletes or two student-programmers are sitting.Consider that initially occupied seat places are occupied by jury members (who obviously are not students at all).InputThe first line contain three integers nn, aa and bb (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 0\u2264a,b\u22642\u22c51050\u2264a,b\u22642\u22c5105, a+b>0a+b>0) \u2014 total number of seat places in the railway carriage, the number of student-programmers and the number of student-athletes.The second line contains a string with length nn, consisting of characters \".\" and \"*\". The dot means that the corresponding place is empty. The asterisk means that the corresponding place is occupied by the jury member.OutputPrint the largest number of students, which you can put in the railway carriage so that no student-programmer is sitting next to a student-programmer and no student-athlete is sitting next to a student-athlete.ExamplesInputCopy5 1 1*...*OutputCopy2InputCopy6 2 3*...*.OutputCopy4InputCopy11 3 10.*....**.*.OutputCopy7InputCopy3 2 3***OutputCopy0NoteIn the first example you can put all student, for example, in the following way: *.AB*In the second example you can put four students, for example, in the following way: *BAB*BIn the third example you can put seven students, for example, in the following way: B*ABAB**A*BThe letter A means a student-programmer, and the letter B \u2014 student-athlete."], "Drazil and His Happy Friends": ["https://codeforces.com/problemset/problem/515/B", "B. Drazil and His Happy Friendstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDrazil has many friends. Some of them are happy and some of them are unhappy. Drazil wants to make all his friends become happy. So he invented the following plan.There are n boys and m girls among his friends. Let's number them from 0 to n\u2009-\u20091 and 0 to m\u2009-\u20091 separately. In i-th day, Drazil invites -th boy and -th girl to have dinner together (as Drazil is programmer, i starts from 0). If one of those two people is happy, the other one will also become happy. Otherwise, those two people remain in their states. Once a person becomes happy (or if he/she was happy originally), he stays happy forever.Drazil wants to know whether he can use this plan to make all his friends become happy at some moment.InputThe first line contains two integer n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100).The second line contains integer b (0\u2009\u2264\u2009b\u2009\u2264\u2009n), denoting the number of happy boys among friends of Drazil, and then follow b distinct integers x1,\u2009x2,\u2009...,\u2009xb (0\u2009\u2264\u2009xi\u2009<\u2009n), denoting the list of indices of happy boys.The third line conatins integer g (0\u2009\u2264\u2009g\u2009\u2264\u2009m), denoting the number of happy girls among friends of Drazil, and then follow g distinct integers y1,\u2009y2,\u2009... ,\u2009yg (0\u2009\u2264\u2009yj\u2009<\u2009m), denoting the list of indices of happy girls.It is guaranteed that there is at least one person that is unhappy among his friends.OutputIf Drazil can make all his friends become happy by this plan, print \"Yes\". Otherwise, print \"No\".ExamplesInputCopy2 301 0OutputCopyYesInputCopy2 41 01 2OutputCopyNoInputCopy2 31 01 1OutputCopyYesNoteBy  we define the remainder of integer division of i by k.In first sample case:   On the 0-th day, Drazil invites 0-th boy and 0-th girl. Because 0-th girl is happy at the beginning, 0-th boy become happy at this day.  On the 1-st day, Drazil invites 1-st boy and 1-st girl. They are both unhappy, so nothing changes at this day.  On the 2-nd day, Drazil invites 0-th boy and 2-nd girl. Because 0-th boy is already happy he makes 2-nd girl become happy at this day.  On the 3-rd day, Drazil invites 1-st boy and 0-th girl. 0-th girl is happy, so she makes 1-st boy happy.  On the 4-th day, Drazil invites 0-th boy and 1-st girl. 0-th boy is happy, so he makes the 1-st girl happy. So, all friends become happy at this moment. "], "Recursive Queries": ["https://codeforces.com/problemset/problem/932/B", "B. Recursive Queriestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet us define two functions f and g on positive integer numbers.   You need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x)\u2009=\u2009k. InputThe first line of the input contains an integer Q (1\u2009\u2264\u2009Q\u2009\u2264\u20092\u2009\u00d7\u2009105) representing the number of queries. Q lines follow, each of which contains 3 integers l, r and k (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009106,\u20091\u2009\u2264\u2009k\u2009\u2264\u20099).OutputFor each query, print a single line containing the answer for that query.ExamplesInputCopy422 73 945 64 647 55 72 62 4OutputCopy1408InputCopy482 94 656 67 428 59 939 74 4OutputCopy3115NoteIn the first example:  g(33)\u2009=\u20099 as g(33)\u2009=\u2009g(3\u2009\u00d7\u20093)\u2009=\u2009g(9)\u2009=\u20099  g(47)\u2009=\u2009g(48)\u2009=\u2009g(60)\u2009=\u2009g(61)\u2009=\u20096  There are no such integers between 47 and 55.  g(4)\u2009=\u2009g(14)\u2009=\u2009g(22)\u2009=\u2009g(27)\u2009=\u2009g(39)\u2009=\u2009g(40)\u2009=\u2009g(41)\u2009=\u2009g(58)\u2009=\u20094 "], "Amr and The Large Array": ["https://codeforces.com/problemset/problem/558/B", "B. Amr and The Large Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAmr has got a large array of size n. Amr doesn't like large arrays so he intends to make it smaller.Amr doesn't care about anything in the array except the beauty of it. The beauty of the array is defined to be the maximum number of times that some number occurs in this array. He wants to choose the smallest subsegment of this array such that the beauty of it will be the same as the original array.Help Amr by choosing the smallest subsegment possible.InputThe first line contains one number n (1\u2009\u2264\u2009n\u2009\u2264\u2009105), the size of the array.The second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009106), representing elements of the array.OutputOutput two integers l,\u2009r (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009n), the beginning and the end of the subsegment chosen respectively.If there are several possible answers you may output any of them. ExamplesInputCopy51 1 2 2 1OutputCopy1 5InputCopy51 2 2 3 1OutputCopy2 3InputCopy61 2 2 1 1 2OutputCopy1 5NoteA subsegment B of an array A from l to r is an array of size r\u2009-\u2009l\u2009+\u20091 where Bi\u2009=\u2009Al\u2009+\u2009i\u2009-\u20091 for all 1\u2009\u2264\u2009i\u2009\u2264\u2009r\u2009-\u2009l\u2009+\u20091"], "Design Tutorial: Learn from Life": ["https://codeforces.com/problemset/problem/472/B", "B. Design Tutorial: Learn from Lifetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne way to create a task is to learn from life. You can choose some experience in real life, formalize it and then you will get a new task.Let's think about a scene in real life: there are lots of people waiting in front of the elevator, each person wants to go to a certain floor. We can formalize it in the following way. We have n people standing on the first floor, the i-th person wants to go to the fi-th floor. Unfortunately, there is only one elevator and its capacity equal to k (that is at most k people can use it simultaneously). Initially the elevator is located on the first floor. The elevator needs |a\u2009-\u2009b| seconds to move from the a-th floor to the b-th floor (we don't count the time the people need to get on and off the elevator).What is the minimal number of seconds that is needed to transport all the people to the corresponding floors and then return the elevator to the first floor?InputThe first line contains two integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u20092000) \u2014 the number of people and the maximal capacity of the elevator.The next line contains n integers: f1,\u2009f2,\u2009...,\u2009fn (2\u2009\u2264\u2009fi\u2009\u2264\u20092000), where fi denotes the target floor of the i-th person.OutputOutput a single integer \u2014 the minimal time needed to achieve the goal.ExamplesInputCopy3 22 3 4OutputCopy8InputCopy4 250 100 50 100OutputCopy296InputCopy10 32 2 2 2 2 2 2 2 2 2OutputCopy8NoteIn first sample, an optimal solution is:   The elevator takes up person #1 and person #2.  It goes to the 2nd floor.  Both people go out of the elevator.  The elevator goes back to the 1st floor.  Then the elevator takes up person #3.  And it goes to the 2nd floor.  It picks up person #2.  Then it goes to the 3rd floor.  Person #2 goes out.  Then it goes to the 4th floor, where person #3 goes out.  The elevator goes back to the 1st floor. "], "Leha and Function": ["https://codeforces.com/problemset/problem/840/A", "A. Leha and Functiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLeha like all kinds of strange things. Recently he liked the function F(n,\u2009k). Consider all possible k-element subsets of the set [1,\u20092,\u2009...,\u2009n]. For subset find minimal element in it. F(n,\u2009k) \u2014 mathematical expectation of the minimal element among all k-element subsets.But only function does not interest him. He wants to do interesting things with it. Mom brought him two arrays A and B, each consists of m integers. For all i,\u2009j such that 1\u2009\u2264\u2009i,\u2009j\u2009\u2264\u2009m the condition Ai\u2009\u2265\u2009Bj holds. Help Leha rearrange the numbers in the array A so that the sum  is maximally possible, where A' is already rearranged array.InputFirst line of input data contains single integer m (1\u2009\u2264\u2009m\u2009\u2264\u20092\u00b7105) \u2014 length of arrays A and B.Next line contains m integers a1,\u2009a2,\u2009...,\u2009am (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 array A.Next line contains m integers b1,\u2009b2,\u2009...,\u2009bm (1\u2009\u2264\u2009bi\u2009\u2264\u2009109) \u2014 array B.OutputOutput m integers a'1,\u2009a'2,\u2009...,\u2009a'm \u2014 array A' which is permutation of the array A.ExamplesInputCopy57 3 5 3 42 1 3 2 3OutputCopy4 7 3 5 3InputCopy74 6 5 8 8 2 62 1 2 2 1 1 2OutputCopy2 6 4 5 8 8 6"], "Shashlik Cooking": ["https://codeforces.com/problemset/problem/1040/B", "B. Shashlik Cookingtime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputLong story short, shashlik is Miroslav's favorite food. Shashlik is prepared on several skewers simultaneously. There are two states for each skewer: initial and turned over.This time Miroslav laid out nn skewers parallel to each other, and enumerated them with consecutive integers from 11 to nn in order from left to right. For better cooking, he puts them quite close to each other, so when he turns skewer number ii, it leads to turning kk closest skewers from each side of the skewer ii, that is, skewers number i\u2212ki\u2212k, i\u2212k+1i\u2212k+1, ..., i\u22121i\u22121, i+1i+1, ..., i+k\u22121i+k\u22121, i+ki+k (if they exist). For example, let n=6n=6 and k=1k=1. When Miroslav turns skewer number 33, then skewers with numbers 22, 33, and 44 will come up turned over. If after that he turns skewer number 11, then skewers number 11, 33, and 44 will be turned over, while skewer number 22 will be in the initial position (because it is turned again).As we said before, the art of cooking requires perfect timing, so Miroslav wants to turn over all nn skewers with the minimal possible number of actions. For example, for the above example n=6n=6 and k=1k=1, two turnings are sufficient: he can turn over skewers number 22 and 55.Help Miroslav turn over all nn skewers.InputThe first line contains two integers nn and kk (1\u2264n\u226410001\u2264n\u22641000, 0\u2264k\u226410000\u2264k\u22641000)\u00a0\u2014 the number of skewers and the number of skewers from each side that are turned in one step.OutputThe first line should contain integer ll\u00a0\u2014 the minimum number of actions needed by Miroslav to turn over all nn skewers. After than print ll integers from 11 to nn denoting the number of the skewer that is to be turned over at the corresponding step.ExamplesInputCopy7 2OutputCopy21 6 InputCopy5 1OutputCopy21 4 NoteIn the first example the first operation turns over skewers 11, 22 and 33, the second operation turns over skewers 44, 55, 66 and 77.In the second example it is also correct to turn over skewers 22 and 55, but turning skewers 22 and 44, or 11 and 55 are incorrect solutions because the skewer 33 is in the initial state after these operations."], "Replacement": ["https://codeforces.com/problemset/problem/135/A", "A. Replacementtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya very much likes arrays consisting of n integers, where each of them is in the range from 1 to 109, inclusive. Recently he has received one such array as a gift from his mother. Petya didn't like it at once. He decided to choose exactly one element from the array and replace it with another integer that also lies in the range from 1 to 109, inclusive. It is not allowed to replace a number with itself or to change no number at all. After the replacement Petya sorted the array by the numbers' non-decreasing. Now he wants to know for each position: what minimum number could occupy it after the replacement and the sorting.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105), which represents how many numbers the array has. The next line contains n space-separated integers \u2014 the array's description. All elements of the array lie in the range from 1 to 109, inclusive.OutputPrint n space-separated integers \u2014 the minimum possible values of each array element after one replacement and the sorting are performed.ExamplesInputCopy51 2 3 4 5OutputCopy1 1 2 3 4InputCopy52 3 4 5 6OutputCopy1 2 3 4 5InputCopy32 2 2OutputCopy1 2 2"], "Strings of Power": ["https://codeforces.com/problemset/problem/318/B", "B. Strings of Powertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVolodya likes listening to heavy metal and (occasionally) reading. No wonder Volodya is especially interested in texts concerning his favourite music style.Volodya calls a string powerful if it starts with \"heavy\" and ends with \"metal\". Finding all powerful substrings (by substring Volodya means a subsequence of consecutive characters in a string) in a given text makes our hero especially joyful. Recently he felt an enormous fit of energy while reading a certain text. So Volodya decided to count all powerful substrings in this text and brag about it all day long. Help him in this difficult task. Two substrings are considered different if they appear at the different positions in the text.For simplicity, let us assume that Volodya's text can be represented as a single string.InputInput contains a single non-empty string consisting of the lowercase Latin alphabet letters. Length of this string will not be greater than 106 characters.OutputPrint exactly one number \u2014 the number of powerful substrings of the given string.Please, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.ExamplesInputCopyheavymetalisheavymetalOutputCopy3InputCopyheavymetalismetalOutputCopy2InputCopytrueheavymetalissotruewellitisalsosoheavythatyoucanalmostfeeltheweightofmetalonyouOutputCopy3NoteIn the first sample the string \"heavymetalisheavymetal\" contains powerful substring \"heavymetal\" twice, also the whole string \"heavymetalisheavymetal\" is certainly powerful.In the second sample the string \"heavymetalismetal\" contains two powerful substrings: \"heavymetal\" and \"heavymetalismetal\"."], "Expansion coefficient of the array": ["https://codeforces.com/problemset/problem/1159/B", "B. Expansion coefficient of the arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call an array of non-negative integers a1,a2,\u2026,ana1,a2,\u2026,an a kk-extension for some non-negative integer kk if for all possible pairs of indices 1\u2264i,j\u2264n1\u2264i,j\u2264n the inequality k\u22c5|i\u2212j|\u2264min(ai,aj)k\u22c5|i\u2212j|\u2264min(ai,aj) is satisfied. The expansion coefficient of the array aa is the maximal integer kk such that the array aa is a kk-extension. Any array is a 0-expansion, so the expansion coefficient always exists.You are given an array of non-negative integers a1,a2,\u2026,ana1,a2,\u2026,an. Find its expansion coefficient.InputThe first line contains one positive integer nn\u00a0\u2014 the number of elements in the array aa (2\u2264n\u22643000002\u2264n\u2264300000). The next line contains nn non-negative integers a1,a2,\u2026,ana1,a2,\u2026,an, separated by spaces (0\u2264ai\u22641090\u2264ai\u2264109).OutputPrint one non-negative integer\u00a0\u2014 expansion coefficient of the array a1,a2,\u2026,ana1,a2,\u2026,an.ExamplesInputCopy4\n6 4 5 5\nOutputCopy1InputCopy3\n0 1 2\nOutputCopy0InputCopy4\n821 500 479 717\nOutputCopy239NoteIn the first test, the expansion coefficient of the array [6,4,5,5][6,4,5,5] is equal to 11 because |i\u2212j|\u2264min(ai,aj)|i\u2212j|\u2264min(ai,aj), because all elements of the array satisfy ai\u22653ai\u22653. On the other hand, this array isn't a 22-extension, because 6=2\u22c5|1\u22124|\u2264min(a1,a4)=56=2\u22c5|1\u22124|\u2264min(a1,a4)=5 is false.In the second test, the expansion coefficient of the array [0,1,2][0,1,2] is equal to 00 because this array is not a 11-extension, but it is 00-extension."], "Chtholly's request": ["https://codeforces.com/problemset/problem/897/B", "B. Chtholly's requesttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output \u2014 Thanks a lot for today.\u2014 I experienced so many great things.\u2014 You gave me memories like dreams... But I have to leave now...\u2014 One last request, can you...\u2014 Help me solve a Codeforces problem?\u2014 ......\u2014 What?Chtholly has been thinking about a problem for days:If a number is palindrome and length of its decimal representation without leading zeros is even, we call it a zcy number. A number is palindrome means when written in decimal representation, it contains no leading zeros and reads the same forwards and backwards. For example 12321 and 1221 are palindromes and 123 and 12451 are not. Moreover, 1221 is zcy number and 12321 is not.Given integers k and p, calculate the sum of the k smallest zcy numbers and output this sum modulo p.Unfortunately, Willem isn't good at solving this kind of problems, so he asks you for help!InputThe first line contains two integers k and p (1\u2009\u2264\u2009k\u2009\u2264\u2009105,\u20091\u2009\u2264\u2009p\u2009\u2264\u2009109).OutputOutput single integer\u00a0\u2014 answer to the problem.ExamplesInputCopy2 100OutputCopy33InputCopy5 30OutputCopy15NoteIn the first example, the smallest zcy number is 11, and the second smallest zcy number is 22.In the second example, ."], "Forgery": ["https://codeforces.com/problemset/problem/1059/B", "B. Forgerytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputStudent Andrey has been skipping physical education lessons for the whole term, and now he must somehow get a passing grade on this subject. Obviously, it is impossible to do this by legal means, but Andrey doesn't give up. Having obtained an empty certificate from a local hospital, he is going to use his knowledge of local doctor's handwriting to make a counterfeit certificate of illness. However, after writing most of the certificate, Andrey suddenly discovered that doctor's signature is impossible to forge. Or is it?For simplicity, the signature is represented as an n\u00d7mn\u00d7m grid, where every cell is either filled with ink or empty. Andrey's pen can fill a 3\u00d733\u00d73 square without its central cell if it is completely contained inside the grid, as shown below. xxxx.xxxx Determine whether is it possible to forge the signature on an empty n\u00d7mn\u00d7m grid.InputThe first line of input contains two integers nn and mm (3\u2264n,m\u226410003\u2264n,m\u22641000).Then nn lines follow, each contains mm characters. Each of the characters is either '.', representing an empty cell, or '#', representing an ink filled cell.OutputIf Andrey can forge the signature, output \"YES\". Otherwise output \"NO\".You can print each letter in any case (upper or lower).ExamplesInputCopy3 3####.####OutputCopyYESInputCopy3 3#########OutputCopyNOInputCopy4 3############OutputCopyYESInputCopy5 7........#####..#.#.#..#####........OutputCopyYESNoteIn the first sample Andrey can paint the border of the square with the center in (2,2)(2,2).In the second sample the signature is impossible to forge.In the third sample Andrey can paint the borders of the squares with the centers in (2,2)(2,2) and (3,2)(3,2):   we have a clear paper: ............  use the pen with center at (2,2)(2,2). ####.####...  use the pen with center at (3,2)(3,2). ############ In the fourth sample Andrey can paint the borders of the squares with the centers in (3,3)(3,3) and (3,5)(3,5)."], "Lucky Permutation Triple": ["https://codeforces.com/problemset/problem/303/A", "A. Lucky Permutation Tripletime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBike is interested in permutations. A permutation of length n is an integer sequence such that each integer from 0 to (n\u2009-\u20091) appears exactly once in it. For example, [0,\u20092,\u20091] is a permutation of length 3 while both [0,\u20092,\u20092] and [1,\u20092,\u20093] is not.A permutation triple of permutations of length n (a,\u2009b,\u2009c) is called a Lucky Permutation Triple if and only if . The sign ai denotes the i-th element of permutation a. The modular equality described above denotes that the remainders after dividing ai\u2009+\u2009bi by n and dividing ci by n are equal.Now, he has an integer n and wants to find a Lucky Permutation Triple. Could you please help him?InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105).OutputIf no Lucky Permutation Triple of length n exists print -1.Otherwise, you need to print three lines. Each line contains n space-seperated integers. The first line must contain permutation a, the second line \u2014 permutation b, the third \u2014 permutation c.If there are multiple solutions, print any of them.ExamplesInputCopy5OutputCopy1 4 3 2 01 0 2 4 32 4 0 1 3InputCopy2OutputCopy-1NoteIn Sample 1, the permutation triple ([1,\u20094,\u20093,\u20092,\u20090],\u2009[1,\u20090,\u20092,\u20094,\u20093],\u2009[2,\u20094,\u20090,\u20091,\u20093]) is Lucky Permutation Triple, as following holds:  ;  ;  ;  ;  . In Sample 2, you can easily notice that no lucky permutation triple exists."], "K-special Tables": ["https://codeforces.com/problemset/problem/625/C", "C. K-special Tablestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPeople do many crazy things to stand out in a crowd. Some of them dance, some learn by heart rules of Russian language, some try to become an outstanding competitive programmers, while others collect funny math objects.Alis is among these collectors. Right now she wants to get one of k-special tables. In case you forget, the table n\u2009\u00d7\u2009n is called k-special if the following three conditions are satisfied:  every integer from 1 to n2 appears in the table exactly once;  in each row numbers are situated in increasing order;  the sum of numbers in the k-th column is maximum possible. Your goal is to help Alice and find at least one k-special table of size n\u2009\u00d7\u2009n. Both rows and columns are numbered from 1 to n, with rows numbered from top to bottom and columns numbered from left to right.InputThe first line of the input contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009500,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009n)\u00a0\u2014 the size of the table Alice is looking for and the column that should have maximum possible sum.OutputFirst print the sum of the integers in the k-th column of the required table.Next n lines should contain the description of the table itself: first line should contains n elements of the first row, second line should contain n elements of the second row and so on.If there are multiple suitable table, you are allowed to print any.ExamplesInputCopy4 1OutputCopy281 2 3 45 6 7 89 10 11 1213 14 15 16InputCopy5 3OutputCopy855 6 17 18 199 10 23 24 257 8 20 21 223 4 14 15 161 2 11 12 13"], "Valuable Resources": ["https://codeforces.com/problemset/problem/485/B", "B. Valuable Resourcestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMany computer strategy games require building cities, recruiting army, conquering tribes, collecting resources. Sometimes it leads to interesting problems. Let's suppose that your task is to build a square city. The world map uses the Cartesian coordinates. The sides of the city should be parallel to coordinate axes. The map contains mines with valuable resources, located at some points with integer coordinates. The sizes of mines are relatively small, i.e. they can be treated as points. The city should be built in such a way that all the mines are inside or on the border of the city square. Building a city takes large amount of money depending on the size of the city, so you have to build the city with the minimum area. Given the positions of the mines find the minimum possible area of the city.InputThe first line of the input contains number n\u00a0\u2014 the number of mines on the map (2\u2009\u2264\u2009n\u2009\u2264\u20091000). Each of the next n lines contains a pair of integers xi and yi\u00a0\u2014 the coordinates of the corresponding mine (\u2009-\u2009109\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009109). All points are pairwise distinct.OutputPrint the minimum area of the city that can cover all the mines with valuable resources.ExamplesInputCopy20 02 2OutputCopy4InputCopy20 00 3OutputCopy9"], "Dasha and friends": ["https://codeforces.com/problemset/problem/761/B", "B. Dasha and friendstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRunning with barriers on the circle track is very popular in the country where Dasha lives, so no wonder that on her way to classes she saw the following situation:The track is the circle with length L, in distinct points of which there are n barriers. Athlete always run the track in counterclockwise direction if you look on him from above. All barriers are located at integer distance from each other along the track. Her friends the parrot Kefa and the leopard Sasha participated in competitions and each of them ran one lap. Each of the friends started from some integral point on the track. Both friends wrote the distance from their start along the track to each of the n barriers. Thus, each of them wrote n integers in the ascending order, each of them was between 0 and L\u2009-\u20091, inclusively.  Consider an example. Let L\u2009=\u20098, blue points are barriers, and green points are Kefa's start (A) and Sasha's start (B). Then Kefa writes down the sequence [2,\u20094,\u20096], and Sasha writes down [1,\u20095,\u20097]. There are several tracks in the country, all of them have same length and same number of barriers, but the positions of the barriers can differ among different tracks. Now Dasha is interested if it is possible that Kefa and Sasha ran the same track or they participated on different tracks. Write the program which will check that Kefa's and Sasha's tracks coincide (it means that one can be obtained from the other by changing the start position). Note that they always run the track in one direction \u2014 counterclockwise, if you look on a track from above. InputThe first line contains two integers n and L (1\u2009\u2264\u2009n\u2009\u2264\u200950, n\u2009\u2264\u2009L\u2009\u2264\u2009100) \u2014 the number of barriers on a track and its length. The second line contains n distinct integers in the ascending order \u2014 the distance from Kefa's start to each barrier in the order of its appearance. All integers are in the range from 0 to L\u2009-\u20091 inclusively.The second line contains n distinct integers in the ascending order \u2014 the distance from Sasha's start to each barrier in the order of its overcoming. All integers are in the range from 0 to L\u2009-\u20091 inclusively.OutputPrint \"YES\" (without quotes), if Kefa and Sasha ran the coinciding tracks (it means that the position of all barriers coincides, if they start running from the same points on the track). Otherwise print \"NO\" (without quotes).ExamplesInputCopy3 82 4 61 5 7OutputCopyYESInputCopy4 92 3 5 80 1 3 6OutputCopyYESInputCopy2 41 31 2OutputCopyNONoteThe first test is analyzed in the statement."], "Vika and Squares": ["https://codeforces.com/problemset/problem/610/B", "B. Vika and Squarestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVika has n jars with paints of distinct colors. All the jars are numbered from 1 to n and the i-th jar contains ai liters of paint of color i.Vika also has an infinitely long rectangular piece of paper of width 1, consisting of squares of size 1\u2009\u00d7\u20091. Squares are numbered 1, 2, 3 and so on. Vika decided that she will start painting squares one by one from left to right, starting from the square number 1 and some arbitrary color. If the square was painted in color x, then the next square will be painted in color x\u2009+\u20091. In case of x\u2009=\u2009n, next square is painted in color 1. If there is no more paint of the color Vika wants to use now, then she stops.Square is always painted in only one color, and it takes exactly 1 liter of paint. Your task is to calculate the maximum number of squares that might be painted, if Vika chooses right color to paint the first square.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of jars with colors Vika has.The second line of the input contains a sequence of integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109), where ai is equal to the number of liters of paint in the i-th jar, i.e. the number of liters of color i that Vika has.OutputThe only line of the output should contain a single integer\u00a0\u2014 the maximum number of squares that Vika can paint if she follows the rules described above.ExamplesInputCopy52 4 2 3 3OutputCopy12InputCopy35 5 5OutputCopy15InputCopy610 10 10 1 10 10OutputCopy11NoteIn the first sample the best strategy is to start painting using color 4. Then the squares will be painted in the following colors (from left to right): 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5.In the second sample Vika can start to paint using any color.In the third sample Vika should start painting using color number 5."], "Cards": ["https://codeforces.com/problemset/problem/626/B", "B. Cardstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputCatherine has a deck of n cards, each of which is either red, green, or blue. As long as there are at least two cards left, she can do one of two actions:   take any two (not necessarily adjacent) cards with different colors and exchange them for a new card of the third color;  take any two (not necessarily adjacent) cards with the same color and exchange them for a new card with that color. She repeats this process until there is only one card left. What are the possible colors for the final card?InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200)\u00a0\u2014 the total number of cards.The next line contains a string s of length n \u2014 the colors of the cards. s contains only the characters 'B', 'G', and 'R', representing blue, green, and red, respectively.OutputPrint a single string of up to three characters\u00a0\u2014 the possible colors of the final card (using the same symbols as the input) in alphabetical order.ExamplesInputCopy2RBOutputCopyGInputCopy3GRGOutputCopyBRInputCopy5BBBBBOutputCopyBNoteIn the first sample, Catherine has one red card and one blue card, which she must exchange for a green card.In the second sample, Catherine has two green cards and one red card. She has two options: she can exchange the two green cards for a green card, then exchange the new green card and the red card for a blue card. Alternatively, she can exchange a green and a red card for a blue card, then exchange the blue card and remaining green card for a red card.In the third sample, Catherine only has blue cards, so she can only exchange them for more blue cards."], "The Text Splitting": ["https://codeforces.com/problemset/problem/612/A", "A. The Text Splittingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given the string s of length n and the numbers p,\u2009q. Split the string s to pieces of length p and q.For example, the string \"Hello\" for p\u2009=\u20092, q\u2009=\u20093 can be split to the two strings \"Hel\" and \"lo\" or to the two strings \"He\" and \"llo\".Note it is allowed to split the string s to the strings only of length p or to the strings only of length q (see the second sample test).InputThe first line contains three positive integers n,\u2009p,\u2009q (1\u2009\u2264\u2009p,\u2009q\u2009\u2264\u2009n\u2009\u2264\u2009100).The second line contains the string s consists of lowercase and uppercase latin letters and digits.OutputIf it's impossible to split the string s to the strings of length p and q print the only number \"-1\".Otherwise in the first line print integer k \u2014 the number of strings in partition of s.Each of the next k lines should contain the strings in partition. Each string should be of the length p or q. The string should be in order of their appearing in string s \u2014 from left to right.If there are several solutions print any of them.ExamplesInputCopy5 2 3HelloOutputCopy2HelloInputCopy10 9 5CodeforcesOutputCopy2CodeforcesInputCopy6 4 5PrivetOutputCopy-1InputCopy8 1 1abacabacOutputCopy8abacabac"], "Ice Sculptures": ["https://codeforces.com/problemset/problem/158/D", "D. Ice Sculpturestime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Berland University is preparing to celebrate the 256-th anniversary of its founding! A specially appointed Vice Rector for the celebration prepares to decorate the campus. In the center of the campus n ice sculptures were erected. The sculptures are arranged in a circle at equal distances from each other, so they form a regular n-gon. They are numbered in clockwise order with numbers from 1 to n.The site of the University has already conducted a voting that estimated each sculpture's characteristic of ti \u2014 the degree of the sculpture's attractiveness. The values of ti can be positive, negative or zero.When the university rector came to evaluate the work, he said that this might be not the perfect arrangement. He suggested to melt some of the sculptures so that:   the remaining sculptures form a regular polygon (the number of vertices should be between 3 and n),  the sum of the ti values of the remaining sculptures is maximized. Help the Vice Rector to analyze the criticism \u2014 find the maximum value of ti sum which can be obtained in this way. It is allowed not to melt any sculptures at all. The sculptures can not be moved.InputThe first input line contains an integer n (3\u2009\u2264\u2009n\u2009\u2264\u200920000) \u2014 the initial number of sculptures. The second line contains a sequence of integers t1,\u2009t2,\u2009...,\u2009tn, ti \u2014 the degree of the i-th sculpture's attractiveness (\u2009-\u20091000\u2009\u2264\u2009ti\u2009\u2264\u20091000). The numbers on the line are separated by spaces.OutputPrint the required maximum sum of the sculptures' attractiveness.ExamplesInputCopy81 2 -3 4 -5 5 2 3OutputCopy14InputCopy61 -2 3 -4 5 -6OutputCopy9InputCopy61 2 3 4 5 6OutputCopy21NoteIn the first sample it is best to leave every second sculpture, that is, leave sculptures with attractivenesses: 2, 4, 5 \u0438 3."], "Polo the Penguin and Strings": ["https://codeforces.com/problemset/problem/288/A", "A. Polo the Penguin and Stringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle penguin Polo adores strings. But most of all he adores strings of length n.One day he wanted to find a string that meets the following conditions:  The string consists of n lowercase English letters (that is, the string's length equals n), exactly k of these letters are distinct.  No two neighbouring letters of a string coincide; that is, if we represent a string as s\u2009=\u2009s1s2... sn, then the following inequality holds, si\u2009\u2260\u2009si\u2009+\u20091(1\u2009\u2264\u2009i\u2009<\u2009n).  Among all strings that meet points 1 and 2, the required string is lexicographically smallest. Help him find such string or state that such string doesn't exist.String x\u2009=\u2009x1x2... xp is lexicographically less than string y\u2009=\u2009y1y2... yq, if either p\u2009<\u2009q and x1\u2009=\u2009y1,\u2009x2\u2009=\u2009y2,\u2009... ,\u2009xp\u2009=\u2009yp, or there is such number r (r\u2009<\u2009p,\u2009r\u2009<\u2009q), that x1\u2009=\u2009y1,\u2009x2\u2009=\u2009y2,\u2009... ,\u2009xr\u2009=\u2009yr and xr\u2009+\u20091\u2009<\u2009yr\u2009+\u20091. The characters of the strings are compared by their ASCII codes.InputA single line contains two positive integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009106,\u20091\u2009\u2264\u2009k\u2009\u2264\u200926) \u2014 the string's length and the number of distinct letters.OutputIn a single line print the required string. If there isn't such string, print \"-1\" (without the quotes).ExamplesInputCopy7 4OutputCopyababacdInputCopy4 7OutputCopy-1"], "Broken Clock": ["https://codeforces.com/problemset/problem/722/A", "A. Broken Clocktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a broken clock. You know, that it is supposed to show time in 12- or 24-hours HH:MM format. In 12-hours format hours change from 1 to 12, while in 24-hours it changes from 0 to 23. In both formats minutes change from 0 to 59.You are given a time in format HH:MM that is currently displayed on the broken clock. Your goal is to change minimum number of digits in order to make clocks display the correct time in the given format.For example, if 00:99 is displayed, it is enough to replace the second 9 with 3 in order to get 00:39 that is a correct time in 24-hours format. However, to make 00:99 correct in 12-hours format, one has to change at least two digits. Additionally to the first change one can replace the second 0 with 1 and obtain 01:39.InputThe first line of the input contains one integer 12 or 24, that denote 12-hours or 24-hours format respectively.The second line contains the time in format HH:MM, that is currently displayed on the clock. First two characters stand for the hours, while next two show the minutes.OutputThe only line of the output should contain the time in format HH:MM that is a correct time in the given format. It should differ from the original in as few positions as possible. If there are many optimal solutions you can print any of them.ExamplesInputCopy2417:30OutputCopy17:30InputCopy1217:30OutputCopy07:30InputCopy2499:99OutputCopy09:09"], "A Trivial Problem": ["https://codeforces.com/problemset/problem/633/B", "B. A Trivial Problemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMr. Santa asks all the great programmers of the world to solve a trivial problem. He gives them an integer m and asks for the number of positive integers n, such that the factorial of n ends with exactly m zeroes. Are you among those great programmers who can solve this problem?InputThe only line of input contains an integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the required number of trailing zeroes in factorial.OutputFirst print k\u00a0\u2014 the number of values of n such that the factorial of n ends with m zeroes. Then print these k integers in increasing order.ExamplesInputCopy1OutputCopy55 6 7 8 9 InputCopy5OutputCopy0NoteThe factorial of n is equal to the product of all integers from 1 to n inclusive, that is n!\u2009=\u20091\u00b72\u00b73\u00b7...\u00b7n.In the first sample, 5!\u2009=\u2009120, 6!\u2009=\u2009720, 7!\u2009=\u20095040, 8!\u2009=\u200940320 and 9!\u2009=\u2009362880."], "White-Black Balanced Subtrees": ["https://codeforces.com/problemset/problem/1676/G", "G. White-Black Balanced Subtreestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree consisting of nn vertices numbered from 11 to nn. The root is vertex 11. There is also a string ss denoting the color of each vertex: if si=Bsi=B, then vertex ii is black, and if si=Wsi=W, then vertex ii is white.A subtree of the tree is called balanced if the number of white vertices equals the number of black vertices. Count the number of balanced subtrees.A tree is a connected undirected graph without cycles. A rooted tree is a tree with a selected vertex, which is called the root. In this problem, all trees have root 11.The tree is specified by an array of parents a2,\u2026,ana2,\u2026,an containing n\u22121n\u22121 numbers: aiai is the parent of the vertex with the number ii for all i=2,\u2026,ni=2,\u2026,n. The parent of a vertex uu is a vertex that is the next vertex on a simple path from uu to the root.The subtree of a vertex uu is the set of all vertices that pass through uu on a simple path to the root. For example, in the picture below, 77 is in the subtree of 33 because the simple path 7\u21925\u21923\u219217\u21925\u21923\u21921 passes through 33. Note that a vertex is included in its subtree, and the subtree of the root is the entire tree.  The picture shows the tree for n=7n=7, a=[1,1,2,3,3,5]a=[1,1,2,3,3,5], and s=WBBWWBWs=WBBWWBW. The subtree at the vertex 33 is balanced. InputThe first line of input contains an integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases.The first line of each test case contains an integer nn (2\u2264n\u226440002\u2264n\u22644000)\u00a0\u2014 the number of vertices in the tree.The second line of each test case contains n\u22121n\u22121 integers a2,\u2026,ana2,\u2026,an (1\u2264ai<i1\u2264ai<i)\u00a0\u2014 the parents of the vertices 2,\u2026,n2,\u2026,n.The third line of each test case contains a string ss of length nn consisting of the characters BB and WW\u00a0\u2014 the coloring of the tree.It is guaranteed that the sum of the values nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output a single integer\u00a0\u2014 the number of balanced subtrees.ExampleInputCopy3\n7\n1 1 2 3 3 5\nWBBWWBW\n2\n1\nBW\n8\n1 2 3 4 5 6 7\nBWBWBWBW\nOutputCopy2\n1\n4\nNoteThe first test case is pictured in the statement. Only the subtrees at vertices 22 and 33 are balanced.In the second test case, only the subtree at vertex 11 is balanced.In the third test case, only the subtrees at vertices 11, 33, 55, and 77 are balanced."], "Playing Cubes": ["https://codeforces.com/problemset/problem/257/B", "B. Playing Cubestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya and Vasya decided to play a little. They found n red cubes and m blue cubes. The game goes like that: the players take turns to choose a cube of some color (red or blue) and put it in a line from left to right (overall the line will have n\u2009+\u2009m cubes). Petya moves first. Petya's task is to get as many pairs of neighbouring cubes of the same color as possible. Vasya's task is to get as many pairs of neighbouring cubes of different colors as possible. The number of Petya's points in the game is the number of pairs of neighboring cubes of the same color in the line, the number of Vasya's points in the game is the number of neighbouring cubes of the different color in the line. Your task is to calculate the score at the end of the game (Petya's and Vasya's points, correspondingly), if both boys are playing optimally well. To \"play optimally well\" first of all means to maximize the number of one's points, and second \u2014 to minimize the number of the opponent's points.InputThe only line contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the number of red and blue cubes, correspondingly.OutputOn a single line print two space-separated integers \u2014 the number of Petya's and Vasya's points correspondingly provided that both players play optimally well.ExamplesInputCopy3 1OutputCopy2 1InputCopy2 4OutputCopy3 2NoteIn the first test sample the optimal strategy for Petya is to put the blue cube in the line. After that there will be only red cubes left, so by the end of the game the line of cubes from left to right will look as [blue, red, red, red]. So, Petya gets 2 points and Vasya gets 1 point. If Petya would choose the red cube during his first move, then, provided that both boys play optimally well, Petya would get 1 point and Vasya would get 2 points."], "Qualifying Contest": ["https://codeforces.com/problemset/problem/659/B", "B. Qualifying Contesttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVery soon Berland will hold a School Team Programming Olympiad. From each of the m Berland regions a team of two people is invited to participate in the olympiad. The qualifying contest to form teams was held and it was attended by n Berland students. There were at least two schoolboys participating from each of the m regions of Berland. The result of each of the participants of the qualifying competition is an integer score from 0 to 800 inclusive.The team of each region is formed from two such members of the qualifying competition of the region, that none of them can be replaced by a schoolboy of the same region, not included in the team and who received a greater number of points. There may be a situation where a team of some region can not be formed uniquely, that is, there is more than one school team that meets the properties described above. In this case, the region needs to undertake an additional contest. The two teams in the region are considered to be different if there is at least one schoolboy who is included in one team and is not included in the other team. It is guaranteed that for each region at least two its representatives participated in the qualifying contest.Your task is, given the results of the qualifying competition, to identify the team from each region, or to announce that in this region its formation requires additional contests.InputThe first line of the input contains two integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009m\u2009\u2264\u200910\u2009000, n\u2009\u2265\u20092m)\u00a0\u2014 the number of participants of the qualifying contest and the number of regions in Berland.Next n lines contain the description of the participants of the qualifying contest in the following format: Surname (a string of length from 1 to 10 characters and consisting of large and small English letters), region number (integer from 1 to m) and the number of points scored by the participant (integer from 0 to 800, inclusive).It is guaranteed that all surnames of all the participants are distinct and at least two people participated from each of the m regions. The surnames that only differ in letter cases, should be considered distinct.OutputPrint m lines. On the i-th line print the team of the i-th region\u00a0\u2014 the surnames of the two team members in an arbitrary order, or a single character \"?\" (without the quotes) if you need to spend further qualifying contests in the region.ExamplesInputCopy5 2Ivanov 1 763Andreev 2 800Petrov 1 595Sidorov 1 790Semenov 2 503OutputCopySidorov IvanovAndreev SemenovInputCopy5 2Ivanov 1 800Andreev 2 763Petrov 1 800Sidorov 1 800Semenov 2 503OutputCopy?Andreev SemenovNoteIn the first sample region teams are uniquely determined.In the second sample the team from region 2 is uniquely determined and the team from region 1 can have three teams: \"Petrov\"-\"Sidorov\", \"Ivanov\"-\"Sidorov\", \"Ivanov\" -\"Petrov\", so it is impossible to determine a team uniquely."], "Order Book": ["https://codeforces.com/problemset/problem/572/B", "B. Order Booktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn this task you need to process a set of stock exchange orders and use them to create order book.An order is an instruction of some participant to buy or sell stocks on stock exchange. The order number i has price pi, direction di \u2014 buy or sell, and integer qi. This means that the participant is ready to buy or sell qi stocks at price pi for one stock. A value qi is also known as a volume of an order.All orders with the same price p and direction d are merged into one aggregated order with price p and direction d. The volume of such order is a sum of volumes of the initial orders.An order book is a list of aggregated orders, the first part of which contains sell orders sorted by price in descending order, the second contains buy orders also sorted by price in descending order.An order book of depth s contains s best aggregated orders for each direction. A buy order is better if it has higher price and a sell order is better if it has lower price. If there are less than s aggregated orders for some direction then all of them will be in the final order book.You are given n stock exhange orders. Your task is to print order book of depth s for these orders.InputThe input starts with two positive integers n and s (1\u2009\u2264\u2009n\u2009\u2264\u20091000,\u20091\u2009\u2264\u2009s\u2009\u2264\u200950), the number of orders and the book depth.Next n lines contains a letter di (either 'B' or 'S'), an integer pi (0\u2009\u2264\u2009pi\u2009\u2264\u2009105) and an integer qi (1\u2009\u2264\u2009qi\u2009\u2264\u2009104) \u2014 direction, price and volume respectively. The letter 'B' means buy, 'S' means sell. The price of any sell order is higher than the price of any buy order.OutputPrint no more than 2s lines with aggregated orders from order book of depth s. The output format for orders should be the same as in input.ExamplesInputCopy6 2B 10 3S 50 2S 40 1S 50 6B 20 4B 25 10OutputCopyS 50 8S 40 1B 25 10B 20 4NoteDenote (x, y) an order with price x and volume y. There are 3 aggregated buy orders (10, 3), (20, 4), (25, 10) and two sell orders (50, 8), (40, 1) in the sample.You need to print no more than two best orders for each direction, so you shouldn't print the order (10 3) having the worst price among buy orders."], "Rectangles": ["https://codeforces.com/problemset/problem/844/B", "B. Rectanglestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given n\u2009\u00d7\u2009m table. Each cell of the table is colored white or black. Find the number of non-empty sets of cells such that:  All cells in a set have the same color.  Every two cells in a set share row or column. InputThe first line of input contains integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200950)\u00a0\u2014 the number of rows and the number of columns correspondingly.The next n lines of input contain descriptions of rows. There are m integers, separated by spaces, in each line. The number equals 0 if the corresponding cell is colored white and equals 1 if the corresponding cell is colored black.OutputOutput single integer \u00a0\u2014 the number of non-empty sets from the problem description.ExamplesInputCopy1 10OutputCopy1InputCopy2 31 0 10 1 0OutputCopy8NoteIn the second example, there are six one-element sets. Additionally, there are two two-element sets, the first one consists of the first and the third cells of the first row, the second one consists of the first and the third cells of the second row. To sum up, there are 8 sets."], "Segments": ["https://codeforces.com/problemset/problem/909/B", "B. Segmentstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an integer N. Consider all possible segments on the coordinate axis with endpoints at integer points with coordinates between 0 and N, inclusive; there will be  of them.You want to draw these segments in several layers so that in each layer the segments don't overlap (they might touch at the endpoints though). You can not move the segments to a different location on the coordinate axis. Find the minimal number of layers you have to use for the given N.InputThe only input line contains a single integer N (1\u2009\u2264\u2009N\u2009\u2264\u2009100).OutputOutput a single integer - the minimal number of layers required to draw the segments for the given N.ExamplesInputCopy2OutputCopy2InputCopy3OutputCopy4InputCopy4OutputCopy6NoteAs an example, here are the segments and their optimal arrangement into layers for N\u2009=\u20094.  "], "Vasya and Football": ["https://codeforces.com/problemset/problem/493/A", "A. Vasya and Footballtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has started watching football games. He has learned that for some fouls the players receive yellow cards, and for some fouls they receive red cards. A player who receives the second yellow card automatically receives a red card.Vasya is watching a recorded football match now and makes notes of all the fouls that he would give a card for. Help Vasya determine all the moments in time when players would be given red cards if Vasya were the judge. For each player, Vasya wants to know only the first moment of time when he would receive a red card from Vasya.InputThe first line contains the name of the team playing at home. The second line contains the name of the team playing away. Both lines are not empty. The lengths of both lines do not exceed 20. Each line contains only of large English letters. The names of the teams are distinct.Next follows number n (1\u2009\u2264\u2009n\u2009\u2264\u200990) \u2014 the number of fouls. Each of the following n lines contains information about a foul in the following form:   first goes number t (1\u2009\u2264\u2009t\u2009\u2264\u200990) \u2014 the minute when the foul occurs;  then goes letter \"h\" or letter \"a\" \u2014 if the letter is \"h\", then the card was given to a home team player, otherwise the card was given to an away team player;  then goes the player's number m (1\u2009\u2264\u2009m\u2009\u2264\u200999);  then goes letter \"y\" or letter \"r\" \u2014 if the letter is \"y\", that means that the yellow card was given, otherwise the red card was given. The players from different teams can have the same number. The players within one team have distinct numbers. The fouls go chronologically, no two fouls happened at the same minute.OutputFor each event when a player received his first red card in a chronological order print a string containing the following information:  The name of the team to which the player belongs;  the player's number in his team;  the minute when he received the card. If no player received a card, then you do not need to print anything.It is possible case that the program will not print anything to the output (if there were no red cards).ExamplesInputCopyMCCSKA928 a 3 y62 h 25 y66 h 42 y70 h 25 y77 a 4 y79 a 25 y82 h 42 r89 h 16 y90 a 13 rOutputCopyMC 25 70MC 42 82CSKA 13 90"], "MUH and Important Things": ["https://codeforces.com/problemset/problem/471/B", "B. MUH and Important Thingstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt's time polar bears Menshykov and Uslada from the zoo of St. Petersburg and elephant Horace from the zoo of Kiev got down to business. In total, there are n tasks for the day and each animal should do each of these tasks. For each task, they have evaluated its difficulty. Also animals decided to do the tasks in order of their difficulty. Unfortunately, some tasks can have the same difficulty, so the order in which one can perform the tasks may vary.Menshykov, Uslada and Horace ask you to deal with this nuisance and come up with individual plans for each of them. The plan is a sequence describing the order in which an animal should do all the n tasks. Besides, each of them wants to have its own unique plan. Therefore three plans must form three different sequences. You are to find the required plans, or otherwise deliver the sad news to them by stating that it is impossible to come up with three distinct plans for the given tasks.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092000) \u2014 the number of tasks. The second line contains n integers h1,\u2009h2,\u2009...,\u2009hn (1\u2009\u2264\u2009hi\u2009\u2264\u20092000), where hi is the difficulty of the i-th task. The larger number hi is, the more difficult the i-th task is.OutputIn the first line print \"YES\" (without the quotes), if it is possible to come up with three distinct plans of doing the tasks. Otherwise print in the first line \"NO\" (without the quotes). If three desired plans do exist, print in the second line n distinct integers that represent the numbers of the tasks in the order they are done according to the first plan. In the third and fourth line print two remaining plans in the same form.If there are multiple possible answers, you can print any of them.ExamplesInputCopy41 3 3 1OutputCopyYES1 4 2 3 4 1 2 3 4 1 3 2 InputCopy52 4 1 4 8OutputCopyNONoteIn the first sample the difficulty of the tasks sets one limit: tasks 1 and 4 must be done before tasks 2 and 3. That gives the total of four possible sequences of doing tasks : [1, 4, 2, 3], [4, 1, 2, 3], [1, 4, 3, 2], [4, 1, 3, 2]. You can print any three of them in the answer.In the second sample there are only two sequences of tasks that meet the conditions \u2014 [3, 1, 2, 4, 5] and [3, 1, 4, 2, 5]. Consequently, it is impossible to make three distinct sequences of tasks."], "Average Sleep Time": ["https://codeforces.com/problemset/problem/808/B", "B. Average Sleep Timetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt's been almost a week since Polycarp couldn't get rid of insomnia. And as you may already know, one week in Berland lasts k days!When Polycarp went to a doctor with his problem, the doctor asked him about his sleeping schedule (more specifically, the average amount of hours of sleep per week). Luckily, Polycarp kept records of sleep times for the last n days. So now he has a sequence a1,\u2009a2,\u2009...,\u2009an, where ai is the sleep time on the i-th day.The number of records is so large that Polycarp is unable to calculate the average value by himself. Thus he is asking you to help him with the calculations. To get the average Polycarp is going to consider k consecutive days as a week. So there will be n\u2009-\u2009k\u2009+\u20091 weeks to take into consideration. For example, if k\u2009=\u20092, n\u2009=\u20093 and a\u2009=\u2009[3,\u20094,\u20097], then the result is .You should write a program which will calculate average sleep times of Polycarp over all weeks.InputThe first line contains two integer numbers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105).The second line contains n integer numbers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105).OutputOutput average sleeping time over all weeks. The answer is considered to be correct if its absolute or relative error does not exceed 10\u2009-\u20096. In particular, it is enough to output real number with at least 6 digits after the decimal point.ExamplesInputCopy3 23 4 7OutputCopy9.0000000000InputCopy1 110OutputCopy10.0000000000InputCopy8 21 2 4 100000 123 456 789 1OutputCopy28964.2857142857NoteIn the third example there are n\u2009-\u2009k\u2009+\u20091\u2009=\u20097 weeks, so the answer is sums of all weeks divided by 7."], "Okabe and Banana Trees": ["https://codeforces.com/problemset/problem/821/B", "B. Okabe and Banana Treestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOkabe needs bananas for one of his experiments for some strange reason. So he decides to go to the forest and cut banana trees.Consider the point (x,\u2009y) in the 2D plane such that x and y are integers and 0\u2009\u2264\u2009x,\u2009y. There is a tree in such a point, and it has x\u2009+\u2009y bananas. There are no trees nor bananas in other points. Now, Okabe draws a line with equation . Okabe can select a single rectangle with axis aligned sides with all points on or under the line and cut all the trees in all points that are inside or on the border of this rectangle and take their bananas. Okabe's rectangle can be degenerate; that is, it can be a line segment or even a point.Help Okabe and find the maximum number of bananas he can get if he chooses the rectangle wisely.Okabe is sure that the answer does not exceed 1018. You can trust him.InputThe first line of input contains two space-separated integers m and b (1\u2009\u2264\u2009m\u2009\u2264\u20091000, 1\u2009\u2264\u2009b\u2009\u2264\u200910000).OutputPrint the maximum number of bananas Okabe can get from the trees he cuts.ExamplesInputCopy1 5OutputCopy30InputCopy2 3OutputCopy25Note  The graph above corresponds to sample test 1. The optimal rectangle is shown in red and has 30 bananas."], "Black Square": ["https://codeforces.com/problemset/problem/828/B", "B. Black Squaretime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has a checkered sheet of paper of size n\u2009\u00d7\u2009m. Polycarp painted some of cells with black, the others remained white. Inspired by Malevich's \"Black Square\", Polycarp wants to paint minimum possible number of white cells with black so that all black cells form a square.You are to determine the minimum possible number of cells needed to be painted black so that the black cells form a black square with sides parallel to the painting's sides. All the cells that do not belong to the square should be white. The square's side should have positive length.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the sizes of the sheet.The next n lines contain m letters 'B' or 'W' each \u2014 the description of initial cells' colors. If a letter is 'B', then the corresponding cell is painted black, otherwise it is painted white.OutputPrint the minimum number of cells needed to be painted black so that the black cells form a black square with sides parallel to the painting's sides. All the cells that do not belong to the square should be white. If it is impossible, print -1.ExamplesInputCopy5 4WWWWWWWBWWWBWWBBWWWWOutputCopy5InputCopy1 2BBOutputCopy-1InputCopy3 3WWWWWWWWWOutputCopy1NoteIn the first example it is needed to paint 5 cells \u2014 (2,\u20092), (2,\u20093), (3,\u20092), (3,\u20093) and (4,\u20092). Then there will be a square with side equal to three, and the upper left corner in (2,\u20092).In the second example all the cells are painted black and form a rectangle, so it's impossible to get a square.In the third example all cells are colored white, so it's sufficient to color any cell black."], "Lara Croft and the New Game": ["https://codeforces.com/problemset/problem/976/B", "B. Lara Croft and the New Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou might have heard about the next game in Lara Croft series coming out this year. You also might have watched its trailer. Though you definitely missed the main idea about its plot, so let me lift the veil of secrecy.Lara is going to explore yet another dangerous dungeon. Game designers decided to use good old 2D environment. The dungeon can be represented as a rectangle matrix of n rows and m columns. Cell (x,\u2009y) is the cell in the x-th row in the y-th column. Lara can move between the neighbouring by side cells in all four directions.Moreover, she has even chosen the path for herself to avoid all the traps. She enters the dungeon in cell (1,\u20091), that is top left corner of the matrix. Then she goes down all the way to cell (n,\u20091) \u2014 the bottom left corner. Then she starts moving in the snake fashion \u2014 all the way to the right, one cell up, then to the left to the cell in 2-nd column, one cell up. She moves until she runs out of non-visited cells. n and m given are such that she always end up in cell (1,\u20092).Lara has already moved to a neighbouring cell k times. Can you determine her current position?InputThe only line contains three integers n, m and k (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009109, n is always even, 0\u2009\u2264\u2009k\u2009<\u2009n\u00b7m). Note that k doesn't fit into 32-bit integer type!OutputPrint the cell (the row and the column where the cell is situated) where Lara ends up after she moves k times.ExamplesInputCopy4 3 0OutputCopy1 1InputCopy4 3 11OutputCopy1 2InputCopy4 3 7OutputCopy3 2NoteHere is her path on matrix 4 by 3:  "], "Cosmic Tables": ["https://codeforces.com/problemset/problem/222/B", "B. Cosmic Tablestime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Free Meteor Association (FMA) has got a problem: as meteors are moving, the Universal Cosmic Descriptive Humorous Program (UCDHP) needs to add a special module that would analyze this movement. UCDHP stores some secret information about meteors as an n\u2009\u00d7\u2009m table with integers in its cells. The order of meteors in the Universe is changing. That's why the main UCDHP module receives the following queries:  The query to swap two table rows;  The query to swap two table columns;  The query to obtain a secret number in a particular table cell. As the main UCDHP module is critical, writing the functional of working with the table has been commissioned to you.InputThe first line contains three space-separated integers n, m and k (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000, 1\u2009\u2264\u2009k\u2009\u2264\u2009500000) \u2014 the number of table columns and rows and the number of queries, correspondingly.Next n lines contain m space-separated numbers each \u2014 the initial state of the table. Each number p in the table is an integer and satisfies the inequality 0\u2009\u2264\u2009p\u2009\u2264\u2009106.Next k lines contain queries in the format \"si xi yi\", where si is one of the characters \"\u0441\", \"r\" or \"g\", and xi, yi are two integers.  If si = \"c\", then the current query is the query to swap columns with indexes xi and yi (1\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009m,\u2009x\u2009\u2260\u2009y);  If si = \"r\", then the current query is the query to swap rows with indexes xi and yi (1\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009n,\u2009x\u2009\u2260\u2009y);  If si = \"g\", then the current query is the query to obtain the number that located in the xi-th row and in the yi-th column (1\u2009\u2264\u2009x\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009y\u2009\u2264\u2009m). The table rows are considered to be indexed from top to bottom from 1 to n, and the table columns \u2014 from left to right from 1 to m.OutputFor each query to obtain a number (si = \"g\") print the required number. Print the answers to the queries in the order of the queries in the input.ExamplesInputCopy3 3 51 2 34 5 67 8 9g 3 2r 3 2c 2 3g 2 2g 3 2OutputCopy896InputCopy2 3 31 2 43 1 5c 2 1r 1 2g 1 3OutputCopy5NoteLet's see how the table changes in the second test case.After the first operation is fulfilled, the table looks like that:2 1 41 3 5After the second operation is fulfilled, the table looks like that:1 3 52 1 4So the answer to the third query (the number located in the first row and in the third column) will be 5."], "Petya and Java": ["https://codeforces.com/problemset/problem/66/A", "A. Petya and Javatime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya has recently started attending a programming club. Naturally he is facing the problem of choosing a programming language. After long considerations he realized that Java is the best choice. The main argument in favor of choosing Java was that it has a very large integer data type, called BigInteger.But having attended several classes of the club, Petya realized that not all tasks require using the BigInteger type. It turned out that in some tasks it is much easier to use small data types. That's why a question arises: \"Which integer type to use if one wants to store a positive integer n?\"Petya knows only 5 integer types:1) byte occupies 1 byte and allows you to store numbers from \u2009-\u2009128 to 1272) short occupies 2 bytes and allows you to store numbers from \u2009-\u200932768 to 327673) int occupies 4 bytes and allows you to store numbers from \u2009-\u20092147483648 to 21474836474) long occupies 8 bytes and allows you to store numbers from \u2009-\u20099223372036854775808 to 92233720368547758075) BigInteger can store any integer number, but at that it is not a primitive type, and operations with it are much slower.For all the types given above the boundary values are included in the value range.From this list, Petya wants to choose the smallest type that can store a positive integer n. Since BigInteger works much slower, Peter regards it last. Help him.InputThe first line contains a positive number n. It consists of no more than 100 digits and doesn't contain any leading zeros. The number n can't be represented as an empty string.Please, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d).OutputPrint the first type from the list \"byte, short, int, long, BigInteger\", that can store the natural number n, in accordance with the data given above.ExamplesInputCopy127OutputCopybyteInputCopy130OutputCopyshortInputCopy123456789101112131415161718192021222324OutputCopyBigInteger"], "Not Afraid": ["https://codeforces.com/problemset/problem/787/B", "B. Not Afraidtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSince the giant heads have appeared in the sky all humanity is in danger, so all Ricks and Mortys from all parallel universes are gathering in groups to find a solution to get rid of them. There are n parallel universes participating in this event (n Ricks and n Mortys). I. e. each of n universes has one Rick and one Morty. They're gathering in m groups. Each person can be in many groups and a group can contain an arbitrary number of members.Ricks and Mortys have registered online in these groups. So, a person can have joined a group more than once (developer of this website hadn't considered this possibility).  Summer from universe #1 knows that in each parallel universe (including hers) exactly one of Rick and Morty from that universe is a traitor and is loyal, but no one knows which one. She knows that we are doomed if there's a group such that every member in that group is a traitor (they will plan and destroy the world). Summer knows that if there's a possibility that world ends (there's a group where all members are traitors) she should immediately cancel this event. So she wants to know if she should cancel the event. You have to tell her yes if and only if there's at least one scenario (among all 2n possible scenarios, 2 possible scenarios for who a traitor in each universe) such that in that scenario the world will end.InputThe first line of input contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009104) \u2014 number of universes and number of groups respectively.The next m lines contain the information about the groups. i-th of them first contains an integer k (number of times someone joined i-th group, k\u2009>\u20090) followed by k integers vi,\u20091,\u2009vi,\u20092,\u2009...,\u2009vi,\u2009k. If vi,\u2009j is negative, it means that Rick from universe number \u2009-\u2009vi,\u2009j has joined this group and otherwise it means that Morty from universe number vi,\u2009j has joined it.Sum of k for all groups does not exceed 104.OutputIn a single line print the answer to Summer's question. Print \"YES\" if she should cancel the event and \"NO\" otherwise.ExamplesInputCopy4 21 -34 -2 3 2 -3OutputCopyYESInputCopy5 25 3 -2 1 -1 53 -5 2 5OutputCopyNOInputCopy7 23 -1 6 77 -5 4 2 4 7 -3 4OutputCopyYESNoteIn the first sample testcase, 1st group only contains the Rick from universe number 3, so in case he's a traitor, then all members of this group are traitors and so Summer should cancel the event."], "Selection of Personnel": ["https://codeforces.com/problemset/problem/630/F", "F. Selection of Personneltime limit per test0.5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputOne company of IT City decided to create a group of innovative developments consisting from 5 to 7 people and hire new employees for it. After placing an advertisment the company received n resumes. Now the HR department has to evaluate each possible group composition and select one of them. Your task is to count the number of variants of group composition to evaluate.InputThe only line of the input contains one integer n (7\u2009\u2264\u2009n\u2009\u2264\u2009777) \u2014 the number of potential employees that sent resumes.OutputOutput one integer \u2014 the number of different variants of group composition.ExamplesInputCopy7OutputCopy29"], "An express train to reveries": ["https://codeforces.com/problemset/problem/814/B", "B. An express train to reveriestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSengoku still remembers the mysterious \"colourful meteoroids\" she discovered with Lala-chan when they were little. In particular, one of the nights impressed her deeply, giving her the illusion that all her fancies would be realized.On that night, Sengoku constructed a permutation p1,\u2009p2,\u2009...,\u2009pn of integers from 1 to n inclusive, with each integer representing a colour, wishing for the colours to see in the coming meteor outburst. Two incredible outbursts then arrived, each with n meteorids, colours of which being integer sequences a1,\u2009a2,\u2009...,\u2009an and b1,\u2009b2,\u2009...,\u2009bn respectively. Meteoroids' colours were also between 1 and n inclusive, and the two sequences were not identical, that is, at least one i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) exists, such that ai\u2009\u2260\u2009bi holds.Well, she almost had it all \u2014 each of the sequences a and b matched exactly n\u2009-\u20091 elements in Sengoku's permutation. In other words, there is exactly one i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) such that ai\u2009\u2260\u2009pi, and exactly one j (1\u2009\u2264\u2009j\u2009\u2264\u2009n) such that bj\u2009\u2260\u2009pj.For now, Sengoku is able to recover the actual colour sequences a and b through astronomical records, but her wishes have been long forgotten. You are to reconstruct any possible permutation Sengoku could have had on that night.InputThe first line of input contains a positive integer n (2\u2009\u2264\u2009n\u2009\u2264\u20091\u2009000) \u2014 the length of Sengoku's permutation, being the length of both meteor outbursts at the same time.The second line contains n space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009n) \u2014 the sequence of colours in the first meteor outburst.The third line contains n space-separated integers b1,\u2009b2,\u2009...,\u2009bn (1\u2009\u2264\u2009bi\u2009\u2264\u2009n) \u2014 the sequence of colours in the second meteor outburst. At least one i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) exists, such that ai\u2009\u2260\u2009bi holds.OutputOutput n space-separated integers p1,\u2009p2,\u2009...,\u2009pn, denoting a possible permutation Sengoku could have had. If there are more than one possible answer, output any one of them.Input guarantees that such permutation exists.ExamplesInputCopy51 2 3 4 31 2 5 4 5OutputCopy1 2 5 4 3InputCopy54 4 2 3 15 4 5 3 1OutputCopy5 4 2 3 1InputCopy41 1 3 41 4 3 4OutputCopy1 2 3 4NoteIn the first sample, both 1,\u20092,\u20095,\u20094,\u20093 and 1,\u20092,\u20093,\u20094,\u20095 are acceptable outputs.In the second sample, 5,\u20094,\u20092,\u20093,\u20091 is the only permutation to satisfy the constraints."], "Masha and Bears": ["https://codeforces.com/problemset/problem/907/A", "A. Masha and Bearstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA family consisting of father bear, mother bear and son bear owns three cars. Father bear can climb into the largest car and he likes it. Also, mother bear can climb into the middle car and she likes it. Moreover, son bear can climb into the smallest car and he likes it. It's known that the largest car is strictly larger than the middle car, and the middle car is strictly larger than the smallest car. Masha came to test these cars. She could climb into all cars, but she liked only the smallest car. It's known that a character with size a can climb into some car with size b if and only if a\u2009\u2264\u2009b, he or she likes it if and only if he can climb into this car and 2a\u2009\u2265\u2009b.You are given sizes of bears and Masha. Find out some possible integer non-negative sizes of cars.InputYou are given four integers V1, V2, V3, Vm(1\u2009\u2264\u2009Vi\u2009\u2264\u2009100)\u00a0\u2014 sizes of father bear, mother bear, son bear and Masha, respectively. It's guaranteed that V1\u2009>\u2009V2\u2009>\u2009V3.OutputOutput three integers\u00a0\u2014 sizes of father bear's car, mother bear's car and son bear's car, respectively.If there are multiple possible solutions, print any.If there is no solution, print \"-1\" (without quotes).ExamplesInputCopy50 30 10 10OutputCopy503010InputCopy100 50 10 21OutputCopy-1NoteIn first test case all conditions for cars' sizes are satisfied.In second test case there is no answer, because Masha should be able to climb into smallest car (so size of smallest car in not less than 21), but son bear should like it, so maximum possible size of it is 20."], "Counting-out Rhyme": ["https://codeforces.com/problemset/problem/792/B", "B. Counting-out Rhymetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputn children are standing in a circle and playing the counting-out game. Children are numbered clockwise from 1 to n. In the beginning, the first child is considered the leader. The game is played in k steps. In the i-th step the leader counts out ai people in clockwise order, starting from the next person. The last one to be pointed at by the leader is eliminated, and the next player after him becomes the new leader.For example, if there are children with numbers [8,\u200910,\u200913,\u200914,\u200916] currently in the circle, the leader is child 13 and ai\u2009=\u200912, then counting-out rhyme ends on child 16, who is eliminated. Child 8 becomes the leader.You have to write a program which prints the number of the child to be eliminated on every step.InputThe first line contains two integer numbers n and k (2\u2009\u2264\u2009n\u2009\u2264\u2009100, 1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009-\u20091).The next line contains k integer numbers a1,\u2009a2,\u2009...,\u2009ak (1\u2009\u2264\u2009ai\u2009\u2264\u2009109).OutputPrint k numbers, the i-th one corresponds to the number of child to be eliminated at the i-th step.ExamplesInputCopy7 510 4 11 4 1OutputCopy4 2 5 6 1 InputCopy3 22 5OutputCopy3 2 NoteLet's consider first example:   In the first step child 4 is eliminated, child 5 becomes the leader.  In the second step child 2 is eliminated, child 3 becomes the leader.  In the third step child 5 is eliminated, child 6 becomes the leader.  In the fourth step child 6 is eliminated, child 7 becomes the leader.  In the final step child 1 is eliminated, child 3 becomes the leader. "], "Petya and Catacombs": ["https://codeforces.com/problemset/problem/886/C", "C. Petya and Catacombstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA very brave explorer Petya once decided to explore Paris catacombs. Since Petya is not really experienced, his exploration is just walking through the catacombs.Catacombs consist of several rooms and bidirectional passages between some pairs of them. Some passages can connect a room to itself and since the passages are built on different depths they do not intersect each other. Every minute Petya arbitrary chooses a passage from the room he is currently in and then reaches the room on the other end of the passage in exactly one minute. When he enters a room at minute i, he makes a note in his logbook with number ti:   If Petya has visited this room before, he writes down the minute he was in this room last time;  Otherwise, Petya writes down an arbitrary non-negative integer strictly less than current minute i. Initially, Petya was in one of the rooms at minute 0, he didn't write down number t0.At some point during his wandering Petya got tired, threw out his logbook and went home. Vasya found his logbook and now he is curious: what is the minimum possible number of rooms in Paris catacombs according to Petya's logbook?InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) \u2014 then number of notes in Petya's logbook.The second line contains n non-negative integers t1,\u2009t2,\u2009...,\u2009tn (0\u2009\u2264\u2009ti\u2009<\u2009i) \u2014 notes in the logbook.OutputIn the only line print a single integer \u2014 the minimum possible number of rooms in Paris catacombs.ExamplesInputCopy20 0OutputCopy2InputCopy50 1 0 1 3OutputCopy3NoteIn the first sample, sequence of rooms Petya visited could be, for example 1\u2009\u2192\u20091\u2009\u2192\u20092, 1\u2009\u2192\u20092\u2009\u2192\u20091 or 1\u2009\u2192\u20092\u2009\u2192\u20093. The minimum possible number of rooms is 2.In the second sample, the sequence could be 1\u2009\u2192\u20092\u2009\u2192\u20093\u2009\u2192\u20091\u2009\u2192\u20092\u2009\u2192\u20091."], "Magical Array": ["https://codeforces.com/problemset/problem/83/A", "A. Magical Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputValery is very interested in magic. Magic attracts him so much that he sees it everywhere. He explains any strange and weird phenomenon through intervention of supernatural forces. But who would have thought that even in a regular array of numbers Valera manages to see something beautiful and magical.Valera absolutely accidentally got a piece of ancient parchment on which an array of numbers was written. He immediately thought that the numbers in this array were not random. As a result of extensive research Valera worked out a wonderful property that a magical array should have: an array is defined as magic if its minimum and maximum coincide.He decided to share this outstanding discovery with you, but he asks you for help in return. Despite the tremendous intelligence and wit, Valera counts very badly and so you will have to complete his work. All you have to do is count the number of magical subarrays of the original array of numbers, written on the parchment. Subarray is defined as non-empty sequence of consecutive elements.InputThe first line of the input data contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105). The second line contains an array of original integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109). OutputPrint on the single line the answer to the problem: the amount of subarrays, which are magical.Please do not use the %lld specificator to read or write 64-bit numbers in C++. It is recommended to use cin, cout streams (you can also use the %I64d specificator).ExamplesInputCopy42 1 1 4OutputCopy5InputCopy5-2 -2 -2 0 1OutputCopy8NoteNotes to sample tests:Magical subarrays are shown with pairs of indices [a;b] of the beginning and the end.In the first sample: [1;1], [2;2], [3;3], [4;4], [2;3].In the second sample: [1;1], [2;2], [3;3], [4;4], [5;5], [1;2], [2;3], [1;3]. "], "Tritonic Iridescence": ["https://codeforces.com/problemset/problem/957/A", "A. Tritonic Iridescencetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOverlooking the captivating blend of myriads of vernal hues, Arkady the painter lays out a long, long canvas.Arkady has a sufficiently large amount of paint of three colours: cyan, magenta, and yellow. On the one-dimensional canvas split into n consecutive segments, each segment needs to be painted in one of the colours.Arkady has already painted some (possibly none or all) segments and passes the paintbrush to you. You are to determine whether there are at least two ways of colouring all the unpainted segments so that no two adjacent segments are of the same colour. Two ways are considered different if and only if a segment is painted in different colours in them.InputThe first line contains a single positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 the length of the canvas.The second line contains a string s of n characters, the i-th of which is either 'C' (denoting a segment painted in cyan), 'M' (denoting one painted in magenta), 'Y' (one painted in yellow), or '?' (an unpainted one).OutputIf there are at least two different ways of painting, output \"Yes\"; otherwise output \"No\" (both without quotes).You can print each character in any case (upper or lower).ExamplesInputCopy5CY??YOutputCopyYesInputCopy5C?C?YOutputCopyYesInputCopy5?CYC?OutputCopyYesInputCopy5C??MMOutputCopyNoInputCopy3MMYOutputCopyNoNoteFor the first example, there are exactly two different ways of colouring: CYCMY and CYMCY.For the second example, there are also exactly two different ways of colouring: CMCMY and CYCMY.For the third example, there are four ways of colouring: MCYCM, MCYCY, YCYCM, and YCYCY.For the fourth example, no matter how the unpainted segments are coloured, the existing magenta segments will prevent the painting from satisfying the requirements. The similar is true for the fifth example."], "Finding Team Member": ["https://codeforces.com/problemset/problem/579/B", "B. Finding Team Membertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a programing contest named SnakeUp, 2n people want to compete for it. In order to attend this contest, people need to form teams of exactly two people. You are given the strength of each possible combination of two people. All the values of the strengths are distinct.Every contestant hopes that he can find a teammate so that their team\u2019s strength is as high as possible. That is, a contestant will form a team with highest strength possible by choosing a teammate from ones who are willing to be a teammate with him/her. More formally, two people A and B may form a team if each of them is the best possible teammate (among the contestants that remain unpaired) for the other one. Can you determine who will be each person\u2019s teammate?InputThere are 2n lines in the input. The first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009400) \u2014 the number of teams to be formed.The i-th line (i\u2009>\u20091) contains i\u2009-\u20091 numbers ai1, ai2, ... , ai(i\u2009-\u20091). Here aij (1\u2009\u2264\u2009aij\u2009\u2264\u2009106, all aij are distinct) denotes the strength of a team consisting of person i and person j (people are numbered starting from 1.)OutputOutput a line containing 2n numbers. The i-th number should represent the number of teammate of i-th person.ExamplesInputCopy261 23 4 5OutputCopy2 1 4 3InputCopy34870603831 161856845957 794650 97697783847 50566 691206 498447698377 156232 59015 382455 626960OutputCopy6 5 4 3 2 1NoteIn the first sample, contestant 1 and 2 will be teammates and so do contestant 3 and 4, so the teammate of contestant 1, 2, 3, 4 will be 2, 1, 4, 3 respectively."], "Laurenty and Shop": ["https://codeforces.com/problemset/problem/586/B", "B. Laurenty and Shoptime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA little boy Laurenty has been playing his favourite game Nota for quite a while and is now very hungry. The boy wants to make sausage and cheese sandwiches, but first, he needs to buy a sausage and some cheese.The town where Laurenty lives in is not large. The houses in it are located in two rows, n houses in each row. Laurenty lives in the very last house of the second row. The only shop in town is placed in the first house of the first row.The first and second rows are separated with the main avenue of the city. The adjacent houses of one row are separated by streets.Each crosswalk of a street or an avenue has some traffic lights. In order to cross the street, you need to press a button on the traffic light, wait for a while for the green light and cross the street. Different traffic lights can have different waiting time.The traffic light on the crosswalk from the j-th house of the i-th row to the (j\u2009+\u20091)-th house of the same row has waiting time equal to aij (1\u2009\u2264\u2009i\u2009\u2264\u20092,\u20091\u2009\u2264\u2009j\u2009\u2264\u2009n\u2009-\u20091). For the traffic light on the crossing from the j-th house of one row to the j-th house of another row the waiting time equals bj (1\u2009\u2264\u2009j\u2009\u2264\u2009n). The city doesn't have any other crossings.The boy wants to get to the store, buy the products and go back. The main avenue of the city is wide enough, so the boy wants to cross it exactly once on the way to the store and exactly once on the way back home. The boy would get bored if he had to walk the same way again, so he wants the way home to be different from the way to the store in at least one crossing.  Figure to the first sample. Help Laurenty determine the minimum total time he needs to wait at the crossroads.InputThe first line of the input contains integer n (2\u2009\u2264\u2009n\u2009\u2264\u200950) \u2014 the number of houses in each row. Each of the next two lines contains n\u2009-\u20091 space-separated integer \u2014 values aij (1\u2009\u2264\u2009aij\u2009\u2264\u2009100). The last line contains n space-separated integers bj (1\u2009\u2264\u2009bj\u2009\u2264\u2009100).OutputPrint a single integer \u2014 the least total time Laurenty needs to wait at the crossroads, given that he crosses the avenue only once both on his way to the store and on his way back home.ExamplesInputCopy41 2 33 2 13 2 2 3OutputCopy12InputCopy31 23 32 1 3OutputCopy11InputCopy2111 1OutputCopy4NoteThe first sample is shown on the figure above. In the second sample, Laurenty's path can look as follows:   Laurenty crosses the avenue, the waiting time is 3;  Laurenty uses the second crossing in the first row, the waiting time is 2;  Laurenty uses the first crossing in the first row, the waiting time is 1;  Laurenty uses the first crossing in the first row, the waiting time is 1;  Laurenty crosses the avenue, the waiting time is 1;  Laurenty uses the second crossing in the second row, the waiting time is 3.  In total we get that the answer equals 11.In the last sample Laurenty visits all the crossings, so the answer is 4."], "I.O.U.": ["https://codeforces.com/problemset/problem/376/B", "B. I.O.U.time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImagine that there is a group of three friends: A, B and \u0421. A owes B 20 rubles and B owes C 20 rubles. The total sum of the debts is 40 rubles. You can see that the debts are not organized in a very optimal manner. Let's rearrange them like that: assume that A owes C 20 rubles and B doesn't owe anything to anybody. The debts still mean the same but the total sum of the debts now equals 20 rubles.This task is a generalisation of a described example. Imagine that your group of friends has n people and you know the debts between the people. Optimize the given debts without changing their meaning. In other words, finally for each friend the difference between the total money he should give and the total money he should take must be the same. Print the minimum sum of all debts in the optimal rearrangement of the debts. See the notes to the test samples to better understand the problem.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009100;\u00a00\u2009\u2264\u2009m\u2009\u2264\u2009104). The next m lines contain the debts. The i-th line contains three integers ai,\u2009bi,\u2009ci (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n;\u00a0ai\u2009\u2260\u2009bi;\u00a01\u2009\u2264\u2009ci\u2009\u2264\u2009100), which mean that person ai owes person bi ci rubles.Assume that the people are numbered by integers from 1 to n.It is guaranteed that the same pair of people occurs at most once in the input. The input doesn't simultaneously contain pair of people (x,\u2009y) and pair of people (y,\u2009x).OutputPrint a single integer \u2014 the minimum sum of debts in the optimal rearrangement.ExamplesInputCopy5 31 2 102 3 12 4 1OutputCopy10InputCopy3 0OutputCopy0InputCopy4 31 2 12 3 13 1 1OutputCopy0NoteIn the first sample, you can assume that person number 1 owes 8 rubles to person number 2, 1 ruble to person number 3 and 1 ruble to person number 4. He doesn't owe anybody else anything. In the end, the total debt equals 10.In the second sample, there are no debts.In the third sample, you can annul all the debts."], "Steps": ["https://codeforces.com/problemset/problem/152/B", "B. Stepstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Vasya went out for a walk in the yard but there weren't any of his friends outside and he had no one to play touch and run. But the boy didn't lose the high spirits and decided to play touch and run with himself. You may ask: \"How did he do that?\" The answer is simple.Vasya noticed that the yard is a rectangular n\u2009\u00d7\u2009m field. The squares have coordinates (x,\u2009y) (1\u2009\u2264\u2009x\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009y\u2009\u2264\u2009m), where x is the index of the row and y is the index of the column.Initially Vasya stands in the square with coordinates (xc,\u2009yc). To play, he has got a list of k vectors (dxi,\u2009dyi) of non-zero length. The game goes like this. The boy considers all vectors in the order from 1 to k, and consecutively chooses each vector as the current one. After the boy has chosen a current vector, he makes the maximally possible number of valid steps in the vector's direction (it is possible that he makes zero steps).A step is defined as one movement from the square where the boy is standing now, in the direction of the current vector. That is, if Vasya is positioned in square (x,\u2009y), and the current vector is (dx,\u2009dy), one step moves Vasya to square (x\u2009+\u2009dx,\u2009y\u2009+\u2009dy). A step is considered valid, if the boy does not go out of the yard if he performs the step.Vasya stepped on and on, on and on until he ran out of vectors in his list. Ha had been stepping for so long that he completely forgot how many steps he had made. Help the boy and count how many steps he had made.InputThe first input line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009109) \u2014 the yard's sizes. The second line contains integers xc and yc \u2014 the initial square's coordinates (1\u2009\u2264\u2009xc\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009yc\u2009\u2264\u2009m).The third line contains an integer k (1\u2009\u2264\u2009k\u2009\u2264\u2009104) \u2014 the number of vectors. Then follow k lines, each of them contains two integers dxi and dyi (|dxi|,\u2009|dyi|\u2009\u2264\u2009109,\u2009|dx|\u2009+\u2009|dy|\u2009\u2265\u20091).OutputPrint the single number \u2014 the number of steps Vasya had made.Please do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specificator.ExamplesInputCopy4 51 131 11 10 -2OutputCopy4InputCopy10 101 21-1 0OutputCopy0NoteIn the first sample Vasya is initially positioned at square (1,\u20091) and makes 3 steps by the first vector (1,\u20091). So, he consecutively visits the squares (2,\u20092),\u2009(3,\u20093),\u2009(4,\u20094). Then he makes 0 steps by the second vector (1,\u20091). He makes 1 more step by the third vector (0,\u2009\u2009-\u20092) and he ends up in square (4,\u20092). Overall, Vasya makes 4 steps.In the second sample Vasya is initially positioned in square (1,\u20092) and makes 0 steps by vector (\u2009-\u20091,\u20090), as the square with coordinates (0,\u20092) is located outside the yard."], "Plant": ["https://codeforces.com/problemset/problem/185/A", "A. Planttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDwarfs have planted a very interesting plant, which is a triangle directed \"upwards\". This plant has an amusing feature. After one year a triangle plant directed \"upwards\" divides into four triangle plants: three of them will point \"upwards\" and one will point \"downwards\". After another year, each triangle plant divides into four triangle plants: three of them will be directed in the same direction as the parent plant, and one of them will be directed in the opposite direction. Then each year the process repeats. The figure below illustrates this process.  Help the dwarfs find out how many triangle plants that point \"upwards\" will be in n years.InputThe first line contains a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u20091018) \u2014 the number of full years when the plant grew.Please do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.OutputPrint a single integer \u2014 the remainder of dividing the number of plants that will point \"upwards\" in n years by 1000000007 (109\u2009+\u20097).ExamplesInputCopy1OutputCopy3InputCopy2OutputCopy10NoteThe first test sample corresponds to the second triangle on the figure in the statement. The second test sample corresponds to the third one."], "Mister B and Angle in Polygon": ["https://codeforces.com/problemset/problem/820/B", "B. Mister B and Angle in Polygontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOn one quiet day all of sudden Mister B decided to draw angle a on his field. Aliens have already visited his field and left many different geometric figures on it. One of the figures is regular convex n-gon (regular convex polygon with n sides).That's why Mister B decided to use this polygon. Now Mister B must find three distinct vertices v1, v2, v3 such that the angle  (where v2 is the vertex of the angle, and v1 and v3 lie on its sides) is as close as possible to a. In other words, the value  should be minimum possible.If there are many optimal solutions, Mister B should be satisfied with any of them.InputFirst and only line contains two space-separated integers n and a (3\u2009\u2264\u2009n\u2009\u2264\u2009105, 1\u2009\u2264\u2009a\u2009\u2264\u2009180)\u00a0\u2014 the number of vertices in the polygon and the needed angle, in degrees.OutputPrint three space-separated integers: the vertices v1, v2, v3, which form . If there are multiple optimal solutions, print any of them. The vertices are numbered from 1 to n in clockwise order.ExamplesInputCopy3 15OutputCopy1 2 3InputCopy4 67OutputCopy2 1 3InputCopy4 68OutputCopy4 1 2NoteIn first sample test vertices of regular triangle can create only angle of 60 degrees, that's why every possible angle is correct.Vertices of square can create 45 or 90 degrees angles only. That's why in second sample test the angle of 45 degrees was chosen, since |45\u2009-\u200967|\u2009<\u2009|90\u2009-\u200967|. Other correct answers are: \"3 1 2\", \"3 2 4\", \"4 2 3\", \"4 3 1\", \"1 3 4\", \"1 4 2\", \"2 4 1\", \"4 1 3\", \"3 1 4\", \"3 4 2\", \"2 4 3\", \"2 3 1\", \"1 3 2\", \"1 2 4\", \"4 2 1\".In third sample test, on the contrary, the angle of 90 degrees was chosen, since |90\u2009-\u200968|\u2009<\u2009|45\u2009-\u200968|. Other correct answers are: \"2 1 4\", \"3 2 1\", \"1 2 3\", \"4 3 2\", \"2 3 4\", \"1 4 3\", \"3 4 1\"."], "Mystical Mosaic": ["https://codeforces.com/problemset/problem/924/A", "A. Mystical Mosaictime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a rectangular grid of n rows of m initially-white cells each.Arkady performed a certain number (possibly zero) of operations on it. In the i-th operation, a non-empty subset of rows Ri and a non-empty subset of columns Ci are chosen. For each row r in Ri and each column c in Ci, the intersection of row r and column c is coloured black.There's another constraint: a row or a column can only be chosen at most once among all operations. In other words, it means that no pair of (i,\u2009j) (i\u2009<\u2009j) exists such that  or , where  denotes intersection of sets, and  denotes the empty set.You are to determine whether a valid sequence of operations exists that produces a given final grid.InputThe first line contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200950)\u00a0\u2014 the number of rows and columns of the grid, respectively.Each of the following n lines contains a string of m characters, each being either '.' (denoting a white cell) or '#' (denoting a black cell), representing the desired setup.OutputIf the given grid can be achieved by any valid sequence of operations, output \"Yes\"; otherwise output \"No\" (both without quotes).You can print each character in any case (upper or lower).ExamplesInputCopy5 8.#.#..#......#...#.#..#.#.#....#.....#..OutputCopyYesInputCopy5 5..#....#..#####..#....#..OutputCopyNoInputCopy5 9........##..........##.#..........#.....#.#.#OutputCopyNoNoteFor the first example, the desired setup can be produced by 3 operations, as is shown below.  For the second example, the desired setup cannot be produced, since in order to colour the center row, the third row and all columns must be selected in one operation, but after that no column can be selected again, hence it won't be possible to colour the other cells in the center column."], "Cubes for Masha": ["https://codeforces.com/problemset/problem/887/B", "B. Cubes for Mashatime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAbsent-minded Masha got set of n cubes for her birthday.At each of 6 faces of each cube, there is exactly one digit from 0 to 9. Masha became interested what is the largest natural x such she can make using her new cubes all integers from 1 to x.To make a number Masha can rotate her cubes and put them in a row. After that, she looks at upper faces of cubes from left to right and reads the number.The number can't contain leading zeros. It's not required to use all cubes to build a number.Pay attention: Masha can't make digit 6 from digit 9 and vice-versa using cube rotations.InputIn first line integer n is given (1\u2009\u2264\u2009n\u2009\u2264\u20093)\u00a0\u2014 the number of cubes, Masha got for her birthday.Each of next n lines contains 6 integers aij (0\u2009\u2264\u2009aij\u2009\u2264\u20099)\u00a0\u2014 number on j-th face of i-th cube.OutputPrint single integer\u00a0\u2014 maximum number x such Masha can make any integers from 1 to x using her cubes or 0 if Masha can't make even 1.ExamplesInputCopy30 1 2 3 4 56 7 8 9 0 12 3 4 5 6 7OutputCopy87InputCopy30 1 3 5 6 81 2 4 5 7 82 3 4 6 7 9OutputCopy98NoteIn the first test case, Masha can build all numbers from 1 to 87, but she can't make 88 because there are no two cubes with digit 8."], "Bear and String Distance": ["https://codeforces.com/problemset/problem/628/C", "C. Bear and String Distancetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLimak is a little polar bear. He likes nice strings \u2014 strings of length n, consisting of lowercase English letters only.The distance between two letters is defined as the difference between their positions in the alphabet. For example, , and .Also, the distance between two nice strings is defined as the sum of distances of corresponding letters. For example, , and .Limak gives you a nice string s and an integer k. He challenges you to find any nice string s' that . Find any s' satisfying the given conditions, or print \"-1\" if it's impossible to do so.As input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to use gets/scanf/printf instead of getline/cin/cout in C++, prefer to use BufferedReader/PrintWriter instead of Scanner/System.out in Java.InputThe first line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009105, 0\u2009\u2264\u2009k\u2009\u2264\u2009106).The second line contains a string s of length n, consisting of lowercase English letters.OutputIf there is no string satisfying the given conditions then print \"-1\" (without the quotes).Otherwise, print any nice string s' that .ExamplesInputCopy4 26bearOutputCopyroarInputCopy2 7afOutputCopydbInputCopy3 1000heyOutputCopy-1"], "Weather": ["https://codeforces.com/problemset/problem/234/C", "C. Weathertime limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtScientists say a lot about the problems of global warming and cooling of the Earth. Indeed, such natural phenomena strongly influence all life on our planet.Our hero Vasya is quite concerned about the problems. He decided to try a little experiment and observe how outside daily temperature changes. He hung out a thermometer on the balcony every morning and recorded the temperature. He had been measuring the temperature for the last n days. Thus, he got a sequence of numbers t1,\u2009t2,\u2009...,\u2009tn, where the i-th number is the temperature on the i-th day.Vasya analyzed the temperature statistics in other cities, and came to the conclusion that the city has no environmental problems, if first the temperature outside is negative for some non-zero number of days, and then the temperature is positive for some non-zero number of days. More formally, there must be a positive integer k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009-\u20091) such that t1\u2009<\u20090,\u2009t2\u2009<\u20090,\u2009...,\u2009tk\u2009<\u20090 and tk\u2009+\u20091\u2009>\u20090,\u2009tk\u2009+\u20092\u2009>\u20090,\u2009...,\u2009tn\u2009>\u20090. In particular, the temperature should never be zero. If this condition is not met, Vasya decides that his city has environmental problems, and gets upset.You do not want to upset Vasya. Therefore, you want to select multiple values of temperature and modify them to satisfy Vasya's condition. You need to know what the least number of temperature values needs to be changed for that.InputThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of days for which Vasya has been measuring the temperature. The second line contains a sequence of n integers t1,\u2009t2,\u2009...,\u2009tn (|ti|\u2009\u2264\u2009109) \u2014 the sequence of temperature values. Numbers ti are separated by single spaces.OutputPrint a single integer \u2014 the answer to the given task.ExamplesInputCopy4-1 1 -2 1OutputCopy1InputCopy50 -1 1 2 -5OutputCopy2NoteNote to the first sample: there are two ways to change exactly one number so that the sequence met Vasya's condition. You can either replace the first number 1 by any negative number or replace the number -2 by any positive number."], "Bear and Compressing": ["https://codeforces.com/problemset/problem/653/B", "B. Bear and Compressingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLimak is a little polar bear. Polar bears hate long strings and thus they like to compress them. You should also know that Limak is so young that he knows only first six letters of the English alphabet: 'a', 'b', 'c', 'd', 'e' and 'f'.You are given a set of q possible operations. Limak can perform them in any order, any operation may be applied any number of times. The i-th operation is described by a string ai of length two and a string bi of length one. No two of q possible operations have the same string ai.When Limak has a string s he can perform the i-th operation on s if the first two letters of s match a two-letter string ai. Performing the i-th operation removes first two letters of s and inserts there a string bi. See the notes section for further clarification.You may note that performing an operation decreases the length of a string s exactly by 1. Also, for some sets of operations there may be a string that cannot be compressed any further, because the first two letters don't match any ai.Limak wants to start with a string of length n and perform n\u2009-\u20091 operations to finally get a one-letter string \"a\". In how many ways can he choose the starting string to be able to get \"a\"? Remember that Limak can use only letters he knows.InputThe first line contains two integers n and q (2\u2009\u2264\u2009n\u2009\u2264\u20096, 1\u2009\u2264\u2009q\u2009\u2264\u200936)\u00a0\u2014 the length of the initial string and the number of available operations.The next q lines describe the possible operations. The i-th of them contains two strings ai and bi (|ai|\u2009=\u20092,\u2009|bi|\u2009=\u20091). It's guaranteed that ai\u2009\u2260\u2009aj for i\u2009\u2260\u2009j and that all ai and bi consist of only first six lowercase English letters.OutputPrint the number of strings of length n that Limak will be able to transform to string \"a\" by applying only operations given in the input.ExamplesInputCopy3 5ab acc cca aee cff dOutputCopy4InputCopy2 8af edc dcc fbc bda beb abb bff cOutputCopy1InputCopy6 2bb aba aOutputCopy0NoteIn the first sample, we count initial strings of length 3 from which Limak can get a required string \"a\". There are 4 such strings: \"abb\", \"cab\", \"cca\", \"eea\". The first one Limak can compress using operation 1 two times (changing \"ab\" to a single \"a\"). The first operation would change \"abb\" to \"ab\" and the second operation would change \"ab\" to \"a\".Other three strings may be compressed as follows:   \"cab\"  \"ab\"  \"a\"  \"cca\"  \"ca\"  \"a\"  \"eea\"  \"ca\"  \"a\" In the second sample, the only correct initial string is \"eb\" because it can be immediately compressed to \"a\"."], "Garbage Disposal": ["https://codeforces.com/problemset/problem/1070/D", "D. Garbage Disposaltime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEnough is enough. Too many times it happened that Vasya forgot to dispose of garbage and his apartment stank afterwards. Now he wants to create a garbage disposal plan and stick to it.For each of next nn days Vasya knows aiai \u2014 number of units of garbage he will produce on the ii-th day. Each unit of garbage must be disposed of either on the day it was produced or on the next day. Vasya disposes of garbage by putting it inside a bag and dropping the bag into a garbage container. Each bag can contain up to kk units of garbage. It is allowed to compose and drop multiple bags into a garbage container in a single day.Being economical, Vasya wants to use as few bags as possible. You are to compute the minimum number of bags Vasya needs to dispose of all of his garbage for the given nn days. No garbage should be left after the nn-th day.InputThe first line of the input contains two integers nn and kk (1\u2264n\u22642\u22c5105,1\u2264k\u22641091\u2264n\u22642\u22c5105,1\u2264k\u2264109) \u2014 number of days to consider and bag's capacity. The second line contains nn space separated integers aiai (0\u2264ai\u22641090\u2264ai\u2264109) \u2014 the number of units of garbage produced on the ii-th day.OutputOutput a single integer \u2014 the minimum number of bags Vasya needs to dispose of all garbage. Each unit of garbage should be disposed on the day it was produced or on the next day. No garbage can be left after the nn-th day. In a day it is allowed to compose and drop multiple bags.ExamplesInputCopy3 23 2 1OutputCopy3InputCopy5 11000000000 1000000000 1000000000 1000000000 1000000000OutputCopy5000000000InputCopy3 21 0 1OutputCopy2InputCopy4 42 8 4 1OutputCopy4"], "King of Thieves": ["https://codeforces.com/problemset/problem/526/A", "A. King of Thievestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn this problem you will meet the simplified model of game King of Thieves.In a new ZeptoLab game called \"King of Thieves\" your aim is to reach a chest with gold by controlling your character, avoiding traps and obstacles on your way.  An interesting feature of the game is that you can design your own levels that will be available to other players. Let's consider the following simple design of a level.A dungeon consists of n segments located at a same vertical level, each segment is either a platform that character can stand on, or a pit with a trap that makes player lose if he falls into it. All segments have the same length, platforms on the scheme of the level are represented as '*' and pits are represented as '.'. One of things that affects speedrun characteristics of the level is a possibility to perform a series of consecutive jumps of the same length. More formally, when the character is on the platform number i1, he can make a sequence of jumps through the platforms i1\u2009<\u2009i2\u2009<\u2009...\u2009<\u2009ik, if i2\u2009-\u2009i1\u2009=\u2009i3\u2009-\u2009i2\u2009=\u2009...\u2009=\u2009ik\u2009-\u2009ik\u2009-\u20091. Of course, all segments i1,\u2009i2,\u2009... ik should be exactly the platforms, not pits. Let's call a level to be good if you can perform a sequence of four jumps of the same length or in the other words there must be a sequence i1,\u2009i2,\u2009...,\u2009i5, consisting of five platforms so that the intervals between consecutive platforms are of the same length. Given the scheme of the level, check if it is good.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of segments on the level.Next line contains the scheme of the level represented as a string of n characters '*' and '.'.OutputIf the level is good, print the word \"yes\" (without the quotes), otherwise print the word \"no\" (without the quotes).ExamplesInputCopy16.**.*..*.***.**.OutputCopyyesInputCopy11.*.*...*.*.OutputCopynoNoteIn the first sample test you may perform a sequence of jumps through platforms 2,\u20095,\u20098,\u200911,\u200914."], "After Training": ["https://codeforces.com/problemset/problem/195/B", "B. After Trainingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter a team finished their training session on Euro football championship, Valeric was commissioned to gather the balls and sort them into baskets. Overall the stadium has n balls and m baskets. The baskets are positioned in a row from left to right and they are numbered with numbers from 1 to m, correspondingly. The balls are numbered with numbers from 1 to n.Valeric decided to sort the balls in the order of increasing of their numbers by the following scheme. He will put each new ball in the basket with the least number of balls. And if he's got several variants, he chooses the basket which stands closer to the middle. That means that he chooses the basket for which  is minimum, where i is the number of the basket. If in this case Valeric still has multiple variants, he chooses the basket with the minimum number.For every ball print the number of the basket where it will go according to Valeric's scheme.Note that the balls are sorted into baskets in the order of increasing numbers, that is, the first ball goes first, then goes the second ball and so on.InputThe first line contains two space-separated integers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the number of balls and baskets, correspondingly.OutputPrint n numbers, one per line. The i-th line must contain the number of the basket for the i-th ball.ExamplesInputCopy4 3OutputCopy2132InputCopy3 1OutputCopy111"], "Olympic Medal": ["https://codeforces.com/problemset/problem/215/B", "B. Olympic Medaltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe World Programming Olympics Medal is a metal disk, consisting of two parts: the first part is a ring with outer radius of r1 cm, inner radius of r2 cm, (0\u2009<\u2009r2\u2009<\u2009r1) made of metal with density p1 g/cm3. The second part is an inner disk with radius r2 cm, it is made of metal with density p2 g/cm3. The disk is nested inside the ring.The Olympic jury decided that r1 will take one of possible values of x1,\u2009x2,\u2009...,\u2009xn. It is up to jury to decide which particular value r1 will take. Similarly, the Olympic jury decided that p1 will take one of possible value of y1,\u2009y2,\u2009...,\u2009ym, and p2 will take a value from list z1,\u2009z2,\u2009...,\u2009zk.According to most ancient traditions the ratio between the outer ring mass mout and the inner disk mass min must equal , where A,\u2009B are constants taken from ancient books. Now, to start making medals, the jury needs to take values for r1, p1, p2 and calculate the suitable value of r2.The jury wants to choose the value that would maximize radius r2. Help the jury find the sought value of r2. Value r2 doesn't have to be an integer.Medal has a uniform thickness throughout the area, the thickness of the inner disk is the same as the thickness of the outer ring.InputThe first input line contains an integer n and a sequence of integers x1,\u2009x2,\u2009...,\u2009xn. The second input line contains an integer m and a sequence of integers y1,\u2009y2,\u2009...,\u2009ym. The third input line contains an integer k and a sequence of integers z1,\u2009z2,\u2009...,\u2009zk. The last line contains two integers A and B.All numbers given in the input are positive and do not exceed 5000. Each of the three sequences contains distinct numbers. The numbers in the lines are separated by spaces.OutputPrint a single real number \u2014 the sought value r2 with absolute or relative error of at most 10\u2009-\u20096. It is guaranteed that the solution that meets the problem requirements exists.ExamplesInputCopy3 1 2 31 23 3 2 11 2OutputCopy2.683281573000InputCopy4 2 3 6 42 1 23 10 6 82 1OutputCopy2.267786838055NoteIn the first sample the jury should choose the following values: r1\u2009=\u20093, p1\u2009=\u20092, p2\u2009=\u20091."], "Semifinals": ["https://codeforces.com/problemset/problem/378/B", "B. Semifinalstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTwo semifinals have just been in the running tournament. Each semifinal had n participants. There are n participants advancing to the finals, they are chosen as follows: from each semifinal, we choose k people (0\u2009\u2264\u20092k\u2009\u2264\u2009n) who showed the best result in their semifinals and all other places in the finals go to the people who haven't ranked in the top k in their semifinal but got to the n\u2009-\u20092k of the best among the others.The tournament organizers hasn't yet determined the k value, so the participants want to know who else has any chance to get to the finals and who can go home.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of participants in each semifinal.Each of the next n lines contains two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009109)\u00a0\u2014 the results of the i-th participant (the number of milliseconds he needs to cover the semifinals distance) of the first and second semifinals, correspondingly. All results are distinct. Sequences a1, a2, ..., an and b1, b2, ..., bn are sorted in ascending order, i.e. in the order the participants finished in the corresponding semifinal.OutputPrint two strings consisting of n characters, each equals either \"0\" or \"1\". The first line should correspond to the participants of the first semifinal, the second line should correspond to the participants of the second semifinal. The i-th character in the j-th line should equal \"1\" if the i-th participant of the j-th semifinal has any chances to advance to the finals, otherwise it should equal a \"0\".ExamplesInputCopy49840 99209860 99809930 1002010040 10090OutputCopy11101100InputCopy49900 98509940 993010000 1002010060 10110OutputCopy11001100NoteConsider the first sample. Each semifinal has 4 participants. The results of the first semifinal are 9840, 9860, 9930, 10040. The results of the second semifinal are 9920, 9980, 10020, 10090.  If k\u2009=\u20090, the finalists are determined by the time only, so players 9840, 9860, 9920 and 9930 advance to the finals.  If k\u2009=\u20091, the winners from both semifinals move to the finals (with results 9840 and 9920), and the other places are determined by the time (these places go to the sportsmen who run the distance in 9860 and 9930 milliseconds).  If k\u2009=\u20092, then first and second places advance from each seminfial, these are participants with results 9840, 9860, 9920 and 9980 milliseconds. "], "Alice and Hairdresser": ["https://codeforces.com/problemset/problem/1055/B", "B. Alice and Hairdressertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice's hair is growing by leaps and bounds. Maybe the cause of it is the excess of vitamins, or maybe it is some black magic...To prevent this, Alice decided to go to the hairdresser. She wants for her hair length to be at most ll centimeters after haircut, where ll is her favorite number. Suppose, that the Alice's head is a straight line on which nn hairlines grow. Let's number them from 11 to nn. With one swing of the scissors the hairdresser can shorten all hairlines on any segment to the length ll, given that all hairlines on that segment had length strictly greater than ll. The hairdresser wants to complete his job as fast as possible, so he will make the least possible number of swings of scissors, since each swing of scissors takes one second.Alice hasn't decided yet when she would go to the hairdresser, so she asked you to calculate how much time the haircut would take depending on the time she would go to the hairdresser. In particular, you need to process queries of two types:  00\u00a0\u2014 Alice asks how much time the haircut would take if she would go to the hairdresser now.  11 pp dd\u00a0\u2014 pp-th hairline grows by dd centimeters. Note, that in the request 00 Alice is interested in hypothetical scenario of taking a haircut now, so no hairlines change their length.InputThe first line contains three integers nn, mm and ll (1\u2264n,m\u22641000001\u2264n,m\u2264100000, 1\u2264l\u22641091\u2264l\u2264109)\u00a0\u2014 the number of hairlines, the number of requests and the favorite number of Alice.The second line contains nn integers aiai (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the initial lengths of all hairlines of Alice.Each of the following mm lines contains a request in the format described in the statement.The request description starts with an integer titi. If ti=0ti=0, then you need to find the time the haircut would take. Otherwise, ti=1ti=1 and in this moment one hairline grows. The rest of the line than contains two more integers: pipi and didi (1\u2264pi\u2264n1\u2264pi\u2264n, 1\u2264di\u22641091\u2264di\u2264109)\u00a0\u2014 the number of the hairline and the length it grows by.OutputFor each query of type 00 print the time the haircut would take.ExampleInputCopy4 7 31 2 3 401 2 301 1 301 3 10OutputCopy1221NoteConsider the first example:  Initially lengths of hairlines are equal to 1,2,3,41,2,3,4 and only 44-th hairline is longer l=3l=3, and hairdresser can cut it in 11 second.  Then Alice's second hairline grows, the lengths of hairlines are now equal to 1,5,3,41,5,3,4  Now haircut takes two seonds: two swings are required: for the 44-th hairline and for the 22-nd.  Then Alice's first hairline grows, the lengths of hairlines are now equal to 4,5,3,44,5,3,4  The haircut still takes two seconds: with one swing hairdresser can cut 44-th hairline and with one more swing cut the segment from 11-st to 22-nd hairline.  Then Alice's third hairline grows, the lengths of hairlines are now equal to 4,5,4,44,5,4,4  Now haircut takes only one second: with one swing it is possible to cut the segment from 11-st hairline to the 44-th. "], "Battleship": ["https://codeforces.com/problemset/problem/965/B", "B. Battleshiptime limit per test1.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputArkady is playing Battleship. The rules of this game aren't really important.There is a field of n\u00d7nn\u00d7n cells. There should be exactly one kk-decker on the field, i.\u00a0e. a ship that is kk cells long oriented either horizontally or vertically. However, Arkady doesn't know where it is located. For each cell Arkady knows if it is definitely empty or can contain a part of the ship.Consider all possible locations of the ship. Find such a cell that belongs to the maximum possible number of different locations of the ship.InputThe first line contains two integers nn and kk (1\u2264k\u2264n\u22641001\u2264k\u2264n\u2264100)\u00a0\u2014 the size of the field and the size of the ship.The next nn lines contain the field. Each line contains nn characters, each of which is either '#' (denotes a definitely empty cell) or '.' (denotes a cell that can belong to the ship).OutputOutput two integers\u00a0\u2014 the row and the column of a cell that belongs to the maximum possible number of different locations of the ship.If there are multiple answers, output any of them. In particular, if no ship can be placed on the field, you can output any cell.ExamplesInputCopy4 3#..##.#......###OutputCopy3 2InputCopy10 4#....##....#...#......#..#..#....#.#.....#..##.#.......#...#...#.##....#...#.#.......#..#....#.#...#OutputCopy6 1InputCopy19 6##..............####......#####.....##.....#########.........###########.......#############.....###############...#################..#################..#################..#################.#####....##....########............#######............########...####...####.#####..####..#####...###........###......###########.............##........#.................#OutputCopy1 8NoteThe picture below shows the three possible locations of the ship that contain the cell (3,2)(3,2) in the first sample.  "], "Years": ["https://codeforces.com/problemset/problem/1424/G", "G. Yearstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDuring one of the space missions, humans have found an evidence of previous life at one of the planets. They were lucky enough to find a book with birth and death years of each individual that had been living at this planet. What's interesting is that these years are in the range (1,109)(1,109)! Therefore, the planet was named Longlifer.In order to learn more about Longlifer's previous population, scientists need to determine the year with maximum number of individuals that were alive, as well as the number of alive individuals in that year. Your task is to help scientists solve this problem!InputThe first line contains an integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of people.Each of the following nn lines contain two integers bb and dd (1\u2264b<d\u22641091\u2264b<d\u2264109) representing birth and death year (respectively) of each individual.OutputPrint two integer numbers separated by blank character, yy \u00a0\u2014 the year with a maximum number of people alive and kk \u00a0\u2014 the number of people alive in year yy.In the case of multiple possible solutions, print the solution with minimum year.ExamplesInputCopy3\n1 5\n2 4\n5 6\nOutputCopy2 2\nInputCopy4\n3 4\n4 5\n4 6\n8 10\nOutputCopy4 2\nNoteYou can assume that an individual living from bb to dd has been born at the beginning of bb and died at the beginning of dd, and therefore living for dd - bb years."], "Meeting": ["https://codeforces.com/problemset/problem/144/B", "B. Meetingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Super Duper Secret Meeting of the Super Duper Secret Military Squad takes place in a Super Duper Secret Place. The place is an infinite plane with introduced Cartesian coordinate system. The meeting table is represented as a rectangle whose sides are parallel to the coordinate axes and whose vertexes are located at the integer points of the plane. At each integer point which belongs to the table perimeter there is a chair in which a general sits.Some points on the plane contain radiators for the generals not to freeze in winter. Each radiator is characterized by the number ri \u2014 the radius of the area this radiator can heat. That is, if the distance between some general and the given radiator is less than or equal to ri, than the general feels comfortable and warm. Here distance is defined as Euclidean distance, so the distance between points (x1,\u2009y1) and (x2,\u2009y2) is Each general who is located outside the radiators' heating area can get sick. Thus, you should bring him a warm blanket. Your task is to count the number of warm blankets you should bring to the Super Duper Secret Place.The generals who are already comfortable do not need a blanket. Also the generals never overheat, ever if they are located in the heating area of several radiators. The radiators can be located at any integer points on the plane, even inside the rectangle (under the table) or on the perimeter (directly under some general). Even in this case their radius does not change.InputThe first input line contains coordinates of two opposite table corners xa, ya, xb, yb (xa\u2009\u2260\u2009xb,\u2009ya\u2009\u2260\u2009yb). The second line contains integer n \u2014 the number of radiators (1\u2009\u2264\u2009n\u2009\u2264\u2009103). Then n lines contain the heaters' coordinates as \"xi yi ri\", the numbers are separated by spaces. All input data numbers are integers. The absolute value of all coordinates does not exceed 1000, 1\u2009\u2264\u2009ri\u2009\u2264\u20091000. Several radiators can be located at the same point.OutputPrint the only number \u2014 the number of blankets you should bring.ExamplesInputCopy2 5 4 233 1 25 3 11 3 2OutputCopy4InputCopy5 2 6 326 2 26 5 3OutputCopy0NoteIn the first sample the generals are sitting at points: (2,\u20092), (2,\u20093), (2,\u20094), (2,\u20095), (3,\u20092), (3,\u20095), (4,\u20092), (4,\u20093), (4,\u20094), (4,\u20095). Among them, 4 generals are located outside the heating range. They are the generals at points: (2,\u20095), (3,\u20095), (4,\u20094), (4,\u20095).In the second sample the generals are sitting at points: (5,\u20092), (5,\u20093), (6,\u20092), (6,\u20093). All of them are located inside the heating range."], "Dress'em in Vests!": ["https://codeforces.com/problemset/problem/161/A", "A. Dress'em in Vests!time limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Two-dimensional kingdom is going through hard times... This morning the Three-Dimensional kingdom declared war on the Two-dimensional one. This (possibly armed) conflict will determine the ultimate owner of the straight line.The Two-dimensional kingdom has a regular army of n people. Each soldier registered himself and indicated the desired size of the bulletproof vest: the i-th soldier indicated size ai. The soldiers are known to be unpretentious, so the command staff assumes that the soldiers are comfortable in any vests with sizes from ai\u2009-\u2009x to ai\u2009+\u2009y, inclusive (numbers x,\u2009y\u2009\u2265\u20090 are specified). The Two-dimensional kingdom has m vests at its disposal, the j-th vest's size equals bj. Help mobilize the Two-dimensional kingdom's army: equip with vests as many soldiers as possible. Each vest can be used only once. The i-th soldier can put on the j-th vest, if ai\u2009-\u2009x\u2009\u2264\u2009bj\u2009\u2264\u2009ai\u2009+\u2009y.InputThe first input line contains four integers n, m, x and y (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105, 0\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009109) \u2014 the number of soldiers, the number of vests and two numbers that specify the soldiers' unpretentiousness, correspondingly.The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) in non-decreasing order, separated by single spaces \u2014 the desired sizes of vests. The third line contains m integers b1,\u2009b2,\u2009...,\u2009bm (1\u2009\u2264\u2009bj\u2009\u2264\u2009109) in non-decreasing order, separated by single spaces \u2014 the sizes of the available vests.OutputIn the first line print a single integer k \u2014 the maximum number of soldiers equipped with bulletproof vests. In the next k lines print k pairs, one pair per line, as \"ui vi\" (without the quotes). Pair (ui, vi) means that soldier number ui must wear vest number vi. Soldiers and vests are numbered starting from one in the order in which they are specified in the input. All numbers of soldiers in the pairs should be pairwise different, all numbers of vests in the pairs also should be pairwise different. You can print the pairs in any order.If there are multiple optimal answers, you are allowed to print any of them.ExamplesInputCopy5 3 0 01 2 3 3 41 3 5OutputCopy21 13 2InputCopy3 3 2 21 5 93 5 7OutputCopy31 12 23 3NoteIn the first sample you need the vests' sizes to match perfectly: the first soldier gets the first vest (size 1), the third soldier gets the second vest (size 3). This sample allows another answer, which gives the second vest to the fourth soldier instead of the third one.In the second sample the vest size can differ from the desired size by at most 2 sizes, so all soldiers can be equipped."], "Servers": ["https://codeforces.com/problemset/problem/747/C", "C. Serverstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n servers in a laboratory, each of them can perform tasks. Each server has a unique id\u00a0\u2014 integer from 1 to n.It is known that during the day q tasks will come, the i-th of them is characterized with three integers: ti\u00a0\u2014 the moment in seconds in which the task will come, ki\u00a0\u2014 the number of servers needed to perform it, and di\u00a0\u2014 the time needed to perform this task in seconds. All ti are distinct.To perform the i-th task you need ki servers which are unoccupied in the second ti. After the servers begin to perform the task, each of them will be busy over the next di seconds. Thus, they will be busy in seconds ti,\u2009ti\u2009+\u20091,\u2009...,\u2009ti\u2009+\u2009di\u2009-\u20091. For performing the task, ki servers with the smallest ids will be chosen from all the unoccupied servers. If in the second ti there are not enough unoccupied servers, the task is ignored.Write the program that determines which tasks will be performed and which will be ignored.InputThe first line contains two positive integers n and q (1\u2009\u2264\u2009n\u2009\u2264\u2009100, 1\u2009\u2264\u2009q\u2009\u2264\u2009105) \u2014 the number of servers and the number of tasks. Next q lines contains three integers each, the i-th line contains integers ti, ki and di (1\u2009\u2264\u2009ti\u2009\u2264\u2009106, 1\u2009\u2264\u2009ki\u2009\u2264\u2009n, 1\u2009\u2264\u2009di\u2009\u2264\u20091000)\u00a0\u2014 the moment in seconds in which the i-th task will come, the number of servers needed to perform it, and the time needed to perform this task in seconds. The tasks are given in a chronological order and they will come in distinct seconds. OutputPrint q lines. If the i-th task will be performed by the servers, print in the i-th line the sum of servers' ids on which this task will be performed. Otherwise, print -1.ExamplesInputCopy4 31 3 22 2 13 4 3OutputCopy6-110InputCopy3 23 2 35 1 2OutputCopy33InputCopy8 61 3 204 2 16 5 510 1 115 3 621 8 8OutputCopy6930-11536NoteIn the first example in the second 1 the first task will come, it will be performed on the servers with ids 1, 2 and 3 (the sum of the ids equals 6) during two seconds. In the second 2 the second task will come, it will be ignored, because only the server 4 will be unoccupied at that second. In the second 3 the third task will come. By this time, servers with the ids 1, 2 and 3 will be unoccupied again, so the third task will be done on all the servers with the ids 1, 2, 3 and 4 (the sum of the ids is 10).In the second example in the second 3 the first task will come, it will be performed on the servers with ids 1 and 2 (the sum of the ids is 3) during three seconds. In the second 5 the second task will come, it will be performed on the server 3, because the first two servers will be busy performing the first task."], "Tournament": ["https://codeforces.com/problemset/problem/27/B", "B. Tournamenttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe tournament \u00abSleepyhead-2010\u00bb in the rapid falling asleep has just finished in Berland. n best participants from the country have participated in it. The tournament consists of games, each of them is a match between two participants. n\u00b7(n\u2009-\u20091)\u2009/\u20092 games were played during the tournament, and each participant had a match with each other participant. The rules of the game are quite simple \u2014 the participant who falls asleep first wins. The secretary made a record of each game in the form \u00abxi yi\u00bb, where xi and yi are the numbers of participants. The first number in each pair is a winner (i.e. xi is a winner and yi is a loser). There is no draws.Recently researches form the \u00abInstitute Of Sleep\u00bb have found that every person is characterized by a value pj \u2014 the speed of falling asleep. The person who has lower speed wins. Every person has its own value pj, constant during the life. It is known that all participants of the tournament have distinct speeds of falling asleep. Also it was found that the secretary made records about all the games except one. You are to find the result of the missing game.InputThe first line contains one integer n (3\u2009\u2264\u2009n\u2009\u2264\u200950) \u2014 the number of participants. The following n\u00b7(n\u2009-\u20091)\u2009/\u20092\u2009-\u20091 lines contain the results of the games. Each game is described in a single line by two integers xi,\u2009yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n,\u2009xi\u2009\u2260\u2009yi), where xi \u0438 yi are the numbers of the opponents in this game. It is known that during the tournament each of the n participants played n\u2009-\u20091 games, one game with each other participant.OutputOutput two integers x and y \u2014 the missing record. If there are several solutions, output any of them.ExamplesInputCopy44 24 12 32 13 1OutputCopy4 3"], "Messages": ["https://codeforces.com/problemset/problem/964/B", "B. Messagestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n incoming messages for Vasya. The i-th message is going to be received after ti minutes. Each message has a cost, which equals to A initially. After being received, the cost of a message decreases by B each minute (it can become negative). Vasya can read any message after receiving it at any moment of time. After reading the message, Vasya's bank account receives the current cost of this message. Initially, Vasya's bank account is at 0.Also, each minute Vasya's bank account receives C\u00b7k, where k is the amount of received but unread messages.Vasya's messages are very important to him, and because of that he wants to have all messages read after T minutes.Determine the maximum amount of money Vasya's bank account can hold after T minutes.InputThe first line contains five integers n, A, B, C and T (1\u2009\u2264\u2009n,\u2009A,\u2009B,\u2009C,\u2009T\u2009\u2264\u20091000).The second string contains n integers ti (1\u2009\u2264\u2009ti\u2009\u2264\u2009T).OutputOutput one integer \u00a0\u2014 the answer to the problem.ExamplesInputCopy4 5 5 3 51 5 5 4OutputCopy20InputCopy5 3 1 1 32 2 2 1 1OutputCopy15InputCopy5 5 3 4 51 2 3 4 5OutputCopy35NoteIn the first sample the messages must be read immediately after receiving, Vasya receives A points for each message, n\u00b7A\u2009=\u200920 in total.In the second sample the messages can be read at any integer moment.In the third sample messages must be read at the moment T. This way Vasya has 1, 2, 3, 4 and 0 unread messages at the corresponding minutes, he gets 40 points for them. When reading messages, he receives (5\u2009-\u20094\u00b73)\u2009+\u2009(5\u2009-\u20093\u00b73)\u2009+\u2009(5\u2009-\u20092\u00b73)\u2009+\u2009(5\u2009-\u20091\u00b73)\u2009+\u20095\u2009=\u2009\u2009-\u20095 points. This is 35 in total."], "Little Elephant and Numbers": ["https://codeforces.com/problemset/problem/221/B", "B. Little Elephant and Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Little Elephant loves numbers. He has a positive integer x. The Little Elephant wants to find the number of positive integers d, such that d is the divisor of x, and x and d have at least one common (the same) digit in their decimal representations. Help the Little Elephant to find the described number.InputA single line contains a single integer x (1\u2009\u2264\u2009x\u2009\u2264\u2009109).OutputIn a single line print an integer \u2014 the answer to the problem.ExamplesInputCopy1OutputCopy1InputCopy10OutputCopy2"], "Binary Number": ["https://codeforces.com/problemset/problem/92/B", "B. Binary Numbertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle walrus Fangy loves math very much. That's why when he is bored he plays with a number performing some operations.Fangy takes some positive integer x and wants to get a number one from it. While x is not equal to 1, Fangy repeats the following action: if x is odd, then he adds 1 to it, otherwise he divides x by 2. Fangy knows that for any positive integer number the process ends in finite time.How many actions should Fangy perform to get a number one from number x?InputThe first line contains a positive integer x in a binary system. It is guaranteed that the first digit of x is different from a zero and the number of its digits does not exceed 106.OutputPrint the required number of actions.ExamplesInputCopy1OutputCopy0InputCopy1001001OutputCopy12InputCopy101110OutputCopy8NoteLet's consider the third sample. Number 101110 is even, which means that we should divide it by 2. After the dividing Fangy gets an odd number 10111 and adds one to it. Number 11000 can be divided by 2 three times in a row and get number 11. All that's left is to increase the number by one (we get 100), and then divide it by 2 two times in a row. As a result, we get 1."], "The Closest Pair": ["https://codeforces.com/problemset/problem/311/A", "A. The Closest Pairtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputCurrently Tiny is learning Computational Geometry. When trying to solve a problem called \"The Closest Pair Of Points In The Plane\", he found that a code which gave a wrong time complexity got Accepted instead of Time Limit Exceeded.The problem is the follows. Given n points in the plane, find a pair of points between which the distance is minimized. Distance between (x1,\u2009y1) and (x2,\u2009y2) is .The pseudo code of the unexpected code is as follows:input nfor i from 1 to n    input the i-th point's coordinates into p[i]sort array p[] by increasing of x coordinate first and increasing of y coordinate secondd=INF        //here INF is a number big enoughtot=0for i from 1 to n    for j from (i+1) to n        ++tot        if (p[j].x-p[i].x>=d) then break    //notice that \"break\" is only to be                                            //out of the loop \"for j\"        d=min(d,distance(p[i],p[j]))output dHere, tot can be regarded as the running time of the code. Due to the fact that a computer can only run a limited number of operations per second, tot should not be more than k in order not to get Time Limit Exceeded.You are a great hacker. Would you please help Tiny generate a test data and let the code get Time Limit Exceeded?InputA single line which contains two space-separated integers n and k (2\u2009\u2264\u2009n\u2009\u2264\u20092000, 1\u2009\u2264\u2009k\u2009\u2264\u2009109).OutputIf there doesn't exist such a data which let the given code get TLE, print \"no solution\" (without quotes); else print n lines, and the i-th line contains two integers xi,\u2009yi (|xi|,\u2009|yi|\u2009\u2264\u2009109) representing the coordinates of the i-th point.The conditions below must be held:  All the points must be distinct.  |xi|,\u2009|yi|\u2009\u2264\u2009109.  After running the given code, the value of tot should be larger than k. ExamplesInputCopy4 3OutputCopy0 00 11 01 1InputCopy2 100OutputCopyno solution"], "Progress Bar": ["https://codeforces.com/problemset/problem/71/B", "B. Progress Bartime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA progress bar is an element of graphical interface that displays the progress of a process for this very moment before it is completed. Let's take a look at the following form of such a bar.A bar is represented as n squares, located in line. To add clarity, let's number them with positive integers from 1 to n from the left to the right. Each square has saturation (ai for the i-th square), which is measured by an integer from 0 to k. When the bar for some i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) is displayed, squares 1,\u20092,\u2009... ,\u2009i\u2009-\u20091 has the saturation k, squares i\u2009+\u20091,\u2009i\u2009+\u20092,\u2009... ,\u2009n has the saturation 0, and the saturation of the square i can have any value from 0 to k.So some first squares of the progress bar always have the saturation k. Some last squares always have the saturation 0. And there is no more than one square that has the saturation different from 0 and k.The degree of the process's completion is measured in percents. Let the process be t% completed. Then the following inequation is fulfilled: An example of such a bar can be seen on the picture.  For the given n, k, t determine the measures of saturation for all the squares ai of the progress bar.InputWe are given 3 space-separated integers n, k, t (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009100, 0\u2009\u2264\u2009t\u2009\u2264\u2009100).OutputPrint n numbers. The i-th of them should be equal to ai.ExamplesInputCopy10 10 54OutputCopy10 10 10 10 10 4 0 0 0 0 InputCopy11 13 37OutputCopy13 13 13 13 0 0 0 0 0 0 0 "], "Forecast": ["https://codeforces.com/problemset/problem/630/N", "N. Forecasttime limit per test0.5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputThe Department of economic development of IT City created a model of city development till year 2100.To prepare report about growth perspectives it is required to get growth estimates from the model.To get the growth estimates it is required to solve a quadratic equation. Since the Department of economic development of IT City creates realistic models only, that quadratic equation has a solution, moreover there are exactly two different real roots.The greater of these roots corresponds to the optimistic scenario, the smaller one corresponds to the pessimistic one. Help to get these estimates, first the optimistic, then the pessimistic one.InputThe only line of the input contains three integers a,\u2009b,\u2009c (\u2009-\u20091000\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u20091000) \u2014 the coefficients of ax2\u2009+\u2009bx\u2009+\u2009c\u2009=\u20090 equation.OutputIn the first line output the greater of the equation roots, in the second line output the smaller one. Absolute or relative error should not be greater than 10\u2009-\u20096.ExamplesInputCopy1 30 200OutputCopy-10.000000000000000-20.000000000000000"], "Lucky Mask": ["https://codeforces.com/problemset/problem/146/B", "B. Lucky Masktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya loves lucky numbers very much. Everybody knows that lucky numbers are positive integers whose decimal record contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.Petya calls a mask of a positive integer n the number that is obtained after successive writing of all lucky digits of number n from the left to the right. For example, the mask of number 72174994 is number 7744, the mask of 7 is 7, the mask of 9999047 is 47. Obviously, mask of any number is always a lucky number.Petya has two numbers \u2014 an arbitrary integer a and a lucky number b. Help him find the minimum number c (c\u2009>\u2009a) such that the mask of number c equals b.InputThe only line contains two integers a and b (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009105). It is guaranteed that number b is lucky.OutputIn the only line print a single number \u2014 the number c that is sought by Petya.ExamplesInputCopy1 7OutputCopy7InputCopy100 47OutputCopy147"], "Friends": ["https://codeforces.com/problemset/problem/94/B", "B. Friendstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Igor K. stopped programming and took up math. One late autumn evening he was sitting at a table reading a book and thinking about something. The following statement caught his attention: \"Among any six people there are either three pairwise acquainted people or three pairwise unacquainted people\"Igor just couldn't get why the required minimum is 6 people. \"Well, that's the same for five people, too!\" \u2014 he kept on repeating in his mind. \u2014 \"Let's take, say, Max, Ilya, Vova \u2014 here, they all know each other! And now let's add Dima and Oleg to Vova \u2014 none of them is acquainted with each other! Now, that math is just rubbish!\"Igor K. took 5 friends of his and wrote down who of them is friends with whom. Now he wants to check whether it is true for the five people that among them there are either three pairwise acquainted or three pairwise not acquainted people.InputThe first line contains an integer m (0\u2009\u2264\u2009m\u2009\u2264\u200910), which is the number of relations of acquaintances among the five friends of Igor's.Each of the following m lines contains two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u20095;ai\u2009\u2260\u2009bi), where (ai,\u2009bi) is a pair of acquainted people. It is guaranteed that each pair of the acquaintances is described exactly once. The acquaintance relation is symmetrical, i.e. if x is acquainted with y, then y is also acquainted with x.OutputPrint \"FAIL\", if among those five people there are no either three pairwise acquainted or three pairwise unacquainted people. Otherwise print \"WIN\".ExamplesInputCopy41 32 31 45 3OutputCopyWINInputCopy51 22 33 44 55 1OutputCopyFAIL"], "Lucky Tickets": ["https://codeforces.com/problemset/problem/43/C", "C. Lucky Ticketstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya thinks that lucky tickets are the tickets whose numbers are divisible by 3. He gathered quite a large collection of such tickets but one day his younger brother Leonid was having a sulk and decided to destroy the collection. First he tore every ticket exactly in two, but he didn\u2019t think it was enough and Leonid also threw part of the pieces away. Having seen this, Vasya got terrified but still tried to restore the collection. He chose several piece pairs and glued each pair together so that each pair formed a lucky ticket. The rest of the pieces Vasya threw away reluctantly. Thus, after the gluing of the 2t pieces he ended up with t tickets, each of which was lucky.When Leonid tore the tickets in two pieces, one piece contained the first several letters of his number and the second piece contained the rest.Vasya can glue every pair of pieces in any way he likes, but it is important that he gets a lucky ticket in the end. For example, pieces 123 and 99 can be glued in two ways: 12399 and 99123.What maximum number of tickets could Vasya get after that?InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009104) \u2014 the number of pieces. The second line contains n space-separated numbers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009108) \u2014 the numbers on the pieces. Vasya can only glue the pieces in pairs. Even if the number of a piece is already lucky, Vasya should glue the piece with some other one for it to count as lucky. Vasya does not have to use all the pieces. The numbers on the pieces an on the resulting tickets may coincide.OutputPrint the single number \u2014 the maximum number of lucky tickets that will be able to be restored. Don't forget that every lucky ticket is made of exactly two pieces glued together.ExamplesInputCopy3123 123 99OutputCopy1InputCopy61 1 1 23 10 3OutputCopy1"], "Huge Boxes of Animal Toys": ["https://codeforces.com/problemset/problem/1425/H", "H. Huge Boxes of Animal Toystime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputChaneka has a hobby of playing with animal toys. Every toy has a different fun value, a real number. Chaneka has four boxes to store the toys with specification:   The first box stores toys with fun values in range of (\u2212\u221e,\u22121](\u2212\u221e,\u22121].  The second box stores toys with fun values in range of (\u22121,0)(\u22121,0).  The third box stores toys with fun values in range of (0,1)(0,1).  The fourth box stores toys with fun value in range of [1,\u221e)[1,\u221e). Chaneka has AA, BB, CC, DD toys in the first, second, third, and fourth box, respectively. One day she decides that she only wants one toy, a super toy. So she begins to create this super toy by sewing all the toys she has.While the number of toys Chaneka has is more than 1, she takes two different toys randomly and then sews them together, creating a new toy. The fun value of this new toy is equal to the multiplication of fun values of the sewn toys. She then puts this new toy in the appropriate box. She repeats this process until she only has one toy. This last toy is the super toy, and the box that stores this toy is the special box.As an observer, you only know the number of toys in each box initially but do not know their fun values. You also don't see the sequence of Chaneka's sewing. Determine which boxes can be the special box after Chaneka found her super toy.InputThe first line has an integer TT (1\u2264T\u22645\u22c5104)(1\u2264T\u22645\u22c5104), the number of test cases.Every case contains a line with four space-separated integers AA BB CC DD (0\u2264A,B,C,D\u2264106,A+B+C+D>0)(0\u2264A,B,C,D\u2264106,A+B+C+D>0), which denotes the number of toys in the first, second, third, and fourth box, respectively.OutputFor each case, print four space-separated strings. Each string represents the possibility that the first, second, third, and fourth box can be the special box from left to right.For each box, print \"Ya\" (Without quotes, Indonesian for yes) if that box can be the special box. Print \"Tidak\" (Without quotes, Indonesian for No) otherwise.ExampleInputCopy2\n1 2 0 1\n0 1 0 0\nOutputCopyYa Ya Tidak Tidak\nTidak Ya Tidak Tidak\nNoteFor the first case, here is a scenario where the first box is the special box:   The first box had toys with fun values {\u22123}{\u22123}.  The second box had toys with fun values {\u22120.5,\u22120.5}{\u22120.5,\u22120.5}  The fourth box had toys with fun values {3}{3} The sewing sequence:   Chaneka sews the toy with fun \u22120.5\u22120.5 and \u22120.5\u22120.5 to a toy with fun 0.250.25 and then put it in the third box.  Chaneka sews the toy with fun \u22123\u22123 and 0.250.25 to a toy with fun \u22120.75\u22120.75 and then put it in the second box.  Chaneka sews the toy with fun \u22120.75\u22120.75 and 33 to a toy with fun \u22121.25\u22121.25 and then put it in the first box, which then became the special box. Here is a scenario where the second box ends up being the special box:   The first box had toys with fun values {\u22123}{\u22123}  The second box had toys with fun values {\u22120.33,\u22120.25}{\u22120.33,\u22120.25}.  The fourth box had toys with fun values {3}{3}. The sewing sequence:   Chaneka sews the toy with fun \u22123\u22123 and \u22120.33\u22120.33 to a toy with fun 0.990.99 and then put it in the third box.  Chaneka sews the toy with fun 0.990.99 and 33 to a toy with fun 2.972.97 and then put in it the fourth box.  Chaneka sews the toy with fun 2.972.97 and \u22120.25\u22120.25 to a toy with fun \u22120.7425\u22120.7425 and then put it in the second box, which then became the special box.  There is only one toy for the second case, so Chaneka does not have to sew anything because that toy, by definition, is the super toy."], "Where do I Turn?": ["https://codeforces.com/problemset/problem/227/A", "A. Where do I Turn?time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTrouble came from the overseas lands: a three-headed dragon Gorynych arrived. The dragon settled at point C and began to terrorize the residents of the surrounding villages.A brave hero decided to put an end to the dragon. He moved from point A to fight with Gorynych. The hero rode from point A along a straight road and met point B on his way. The hero knows that in this land for every pair of roads it is true that they are either parallel to each other, or lie on a straight line, or are perpendicular to each other. He also knows well that points B and C are connected by a road. So the hero must either turn 90 degrees to the left or continue riding straight ahead or turn 90 degrees to the right. But he forgot where the point C is located.Fortunately, a Brave Falcon flew right by. It can see all three points from the sky. The hero asked him what way to go to get to the dragon's lair.If you have not got it, you are the falcon. Help the hero and tell him how to get him to point C: turn left, go straight or turn right.At this moment the hero is believed to stand at point B, turning his back to point A.InputThe first input line contains two space-separated integers xa,\u2009ya (|xa|,\u2009|ya|\u2009\u2264\u2009109) \u2014 the coordinates of point A. The second line contains the coordinates of point B in the same form, the third line contains the coordinates of point C.It is guaranteed that all points are pairwise different. It is also guaranteed that either point B lies on segment AC, or angle ABC is right.OutputPrint a single line. If a hero must turn left, print \"LEFT\" (without the quotes); If he must go straight ahead, print \"TOWARDS\" (without the quotes); if he should turn right, print \"RIGHT\" (without the quotes).ExamplesInputCopy0 00 11 1OutputCopyRIGHTInputCopy-1 -1-3 -3-4 -4OutputCopyTOWARDSInputCopy-4 -6-3 -7-2 -6OutputCopyLEFTNoteThe picture to the first sample: The red color shows points A, B and C. The blue arrow shows the hero's direction. The green color shows the hero's trajectory.The picture to the second sample: "], "Sereja and Mirroring": ["https://codeforces.com/problemset/problem/426/B", "B. Sereja and Mirroringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's assume that we are given a matrix b of size x\u2009\u00d7\u2009y, let's determine the operation of mirroring matrix b. The mirroring of matrix b is a 2x\u2009\u00d7\u2009y matrix c which has the following properties:  the upper half of matrix c (rows with numbers from 1 to x) exactly matches b;  the lower half of matrix c (rows with numbers from x\u2009+\u20091 to 2x) is symmetric to the upper one; the symmetry line is the line that separates two halves (the line that goes in the middle, between rows x and x\u2009+\u20091). Sereja has an n\u2009\u00d7\u2009m matrix a. He wants to find such matrix b, that it can be transformed into matrix a, if we'll perform on it several (possibly zero) mirrorings. What minimum number of rows can such matrix contain?InputThe first line contains two integers, n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100). Each of the next n lines contains m integers \u2014 the elements of matrix a. The i-th line contains integers ai1,\u2009ai2,\u2009...,\u2009aim (0\u2009\u2264\u2009aij\u2009\u2264\u20091) \u2014 the i-th row of the matrix a.OutputIn the single line, print the answer to the problem \u2014 the minimum number of rows of matrix b.ExamplesInputCopy4 30 0 11 1 01 1 00 0 1OutputCopy2InputCopy3 30 0 00 0 00 0 0OutputCopy3InputCopy8 101100110OutputCopy2NoteIn the first test sample the answer is a 2\u2009\u00d7\u20093 matrix b:001110If we perform a mirroring operation with this matrix, we get the matrix a that is given in the input:001110110001"], "T-Shirt Hunt": ["https://codeforces.com/problemset/problem/807/B", "B. T-Shirt Hunttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputNot so long ago the Codecraft-17 contest was held on Codeforces. The top 25 participants, and additionally random 25 participants out of those who got into top 500, will receive a Codeforces T-shirt.Unfortunately, you didn't manage to get into top 25, but you got into top 500, taking place p.Now the elimination round of 8VC Venture Cup 2017 is being held. It has been announced that the Codecraft-17 T-shirt winners will be chosen as follows. Let s be the number of points of the winner of the elimination round of 8VC Venture Cup 2017. Then the following pseudocode will be executed: i := (s div 50) mod 475repeat 25 times:    i := (i * 96 + 42) mod 475    print (26 + i)Here \"div\" is the integer division operator, \"mod\" is the modulo (the remainder of division) operator.As the result of pseudocode execution, 25 integers between 26 and 500, inclusive, will be printed. These will be the numbers of places of the participants who get the Codecraft-17 T-shirts. It is guaranteed that the 25 printed integers will be pairwise distinct for any value of s.You're in the lead of the elimination round of 8VC Venture Cup 2017, having x points. You believe that having at least y points in the current round will be enough for victory.To change your final score, you can make any number of successful and unsuccessful hacks. A successful hack brings you 100 points, an unsuccessful one takes 50 points from you. It's difficult to do successful hacks, though.You want to win the current round and, at the same time, ensure getting a Codecraft-17 T-shirt. What is the smallest number of successful hacks you have to do to achieve that?InputThe only line contains three integers p, x and y (26\u2009\u2264\u2009p\u2009\u2264\u2009500; 1\u2009\u2264\u2009y\u2009\u2264\u2009x\u2009\u2264\u200920000)\u00a0\u2014 your place in Codecraft-17, your current score in the elimination round of 8VC Venture Cup 2017, and the smallest number of points you consider sufficient for winning the current round.OutputOutput a single integer\u00a0\u2014 the smallest number of successful hacks you have to do in order to both win the elimination round of 8VC Venture Cup 2017 and ensure getting a Codecraft-17 T-shirt.It's guaranteed that your goal is achievable for any valid input data.ExamplesInputCopy239 10880 9889OutputCopy0InputCopy26 7258 6123OutputCopy2InputCopy493 8000 8000OutputCopy24InputCopy101 6800 6500OutputCopy0InputCopy329 19913 19900OutputCopy8NoteIn the first example, there is no need to do any hacks since 10880 points already bring the T-shirt to the 239-th place of Codecraft-17 (that is, you). In this case, according to the pseudocode, the T-shirts will be given to the participants at the following places: 475 422 84 411 453 210 157 294 146 188 420 367 29 356 398 155 102 239 91 133 365 312 449 301 343In the second example, you have to do two successful and one unsuccessful hack to make your score equal to 7408.In the third example, you need to do as many as 24 successful hacks to make your score equal to 10400.In the fourth example, it's sufficient to do 6 unsuccessful hacks (and no successful ones) to make your score equal to 6500, which is just enough for winning the current round and also getting the T-shirt."], "Company Merging": ["https://codeforces.com/problemset/problem/1090/A", "A. Company Mergingtime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputA conglomerate consists of nn companies. To make managing easier, their owners have decided to merge all companies into one. By law, it is only possible to merge two companies, so the owners plan to select two companies, merge them into one, and continue doing so until there is only one company left.But anti-monopoly service forbids to merge companies if they suspect unfriendly absorption. The criterion they use is the difference in maximum salaries between two companies. Merging is allowed only if the maximum salaries are equal.To fulfill the anti-monopoly requirements, the owners can change salaries in their companies before merging. But the labor union insists on two conditions: it is only allowed to increase salaries, moreover all the employees in one company must get the same increase.Sure enough, the owners want to minimize the total increase of all salaries in all companies. Help them find the minimal possible increase that will allow them to merge companies into one.InputThe first line contains a single integer nn\u00a0\u2014 the number of companies in the conglomerate (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105). Each of the next nn lines describes a company. A company description start with an integer mimi\u00a0\u2014 the number of its employees (1\u2264mi\u22642\u22c51051\u2264mi\u22642\u22c5105). Then mimi integers follow: the salaries of the employees. All salaries are positive and do not exceed 109109. The total number of employees in all companies does not exceed 2\u22c51052\u22c5105. OutputOutput a single integer \u2014 the minimal total increase of all employees that allows to merge all companies.ExampleInputCopy3\n2 4 3\n2 2 1\n3 1 1 1\nOutputCopy13\nNoteOne of the optimal merging strategies is the following. First increase all salaries in the second company by 22, and merge the first and the second companies. Now the conglomerate consists of two companies with salaries [4,3,4,3][4,3,4,3] and [1,1,1][1,1,1]. To merge them, increase the salaries in the second of those by 33. The total increase is 2+2+3+3+3=132+2+3+3+3=13."], "Counting Rhombi": ["https://codeforces.com/problemset/problem/189/B", "B. Counting Rhombitime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have two positive integers w and h. Your task is to count the number of rhombi which have the following properties:   Have positive area.  With vertices at integer points.  All vertices of the rhombi are located inside or on the border of the rectangle with vertices at points (0,\u20090), (w,\u20090), (w,\u2009h), (0,\u2009h). In other words, for all vertices (xi,\u2009yi) of the rhombus the following conditions should fulfill: 0\u2009\u2264\u2009xi\u2009\u2264\u2009w and 0\u2009\u2264\u2009yi\u2009\u2264\u2009h.  Its diagonals are parallel to the axis.  Count the number of such rhombi.Let us remind you that a rhombus is a quadrilateral whose four sides all have the same length.InputThe first line contains two integers w and h (1\u2009\u2264\u2009w,\u2009h\u2009\u2264\u20094000) \u2014 the rectangle's sizes.OutputPrint a single number \u2014 the number of sought rhombi.Please do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.ExamplesInputCopy2 2OutputCopy1InputCopy1 2OutputCopy0NoteIn the first example there exists only one such rhombus. Its vertices are located at points (1,\u20090), (2,\u20091), (1,\u20092), (0,\u20091)."], "Problems for Round": ["https://codeforces.com/problemset/problem/673/B", "B. Problems for Roundtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n problems prepared for the next Codeforces round. They are arranged in ascending order by their difficulty, and no two problems have the same difficulty. Moreover, there are m pairs of similar problems. Authors want to split problems between two division according to the following rules:   Problemset of each division should be non-empty.  Each problem should be used in exactly one division (yes, it is unusual requirement).  Each problem used in division 1 should be harder than any problem used in division 2.  If two problems are similar, they should be used in different divisions. Your goal is count the number of ways to split problem between two divisions and satisfy all the rules. Two ways to split problems are considered to be different if there is at least one problem that belongs to division 1 in one of them and to division 2 in the other.Note, that the relation of similarity is not transitive. That is, if problem i is similar to problem j and problem j is similar to problem k, it doesn't follow that i is similar to k.InputThe first line of the input contains two integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 0\u2009\u2264\u2009m\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of problems prepared for the round and the number of pairs of similar problems, respectively.Each of the following m lines contains a pair of similar problems ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n,\u2009ui\u2009\u2260\u2009vi). It's guaranteed, that no pair of problems meets twice in the input.OutputPrint one integer\u00a0\u2014 the number of ways to split problems in two divisions.ExamplesInputCopy5 21 45 2OutputCopy2InputCopy3 31 22 31 3OutputCopy0InputCopy3 23 13 2OutputCopy1NoteIn the first sample, problems 1 and 2 should be used in division 2, while problems 4 and 5 in division 1. Problem 3 may be used either in division 1 or in division 2.In the second sample, all pairs of problems are similar and there is no way to split problem between two divisions without breaking any rules.Third sample reminds you that the similarity relation is not transitive. Problem 3 is similar to both 1 and 2, but 1 is not similar to 2, so they may be used together."], "Down the Hatch!": ["https://codeforces.com/problemset/problem/332/A", "A. Down the Hatch!time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEverybody knows that the Berland citizens are keen on health, especially students. Berland students are so tough that all they drink is orange juice!Yesterday one student, Vasya and his mates made some barbecue and they drank this healthy drink only. After they ran out of the first barrel of juice, they decided to play a simple game. All n people who came to the barbecue sat in a circle (thus each person received a unique index bi from 0 to n\u2009-\u20091). The person number 0 started the game (this time it was Vasya). All turns in the game were numbered by integers starting from 1. If the j-th turn was made by the person with index bi, then this person acted like that:  he pointed at the person with index (bi\u2009+\u20091)\u00a0mod\u00a0n either with an elbow or with a nod (x\u00a0mod\u00a0y is the remainder after dividing x by y);  if j\u2009\u2265\u20094 and the players who had turns number j\u2009-\u20091, j\u2009-\u20092, j\u2009-\u20093, made during their turns the same moves as player bi on the current turn, then he had drunk a glass of juice;  the turn went to person number (bi\u2009+\u20091)\u00a0mod\u00a0n. The person who was pointed on the last turn did not make any actions.The problem was, Vasya's drunk too much juice and can't remember the goal of the game. However, Vasya's got the recorded sequence of all the participants' actions (including himself). Now Vasya wants to find out the maximum amount of juice he could drink if he played optimally well (the other players' actions do not change). Help him.You can assume that in any scenario, there is enough juice for everybody.InputThe first line contains a single integer n (4\u2009\u2264\u2009n\u2009\u2264\u20092000) \u2014 the number of participants in the game. The second line describes the actual game: the i-th character of this line equals 'a', if the participant who moved i-th pointed at the next person with his elbow, and 'b', if the participant pointed with a nod. The game continued for at least 1 and at most 2000 turns. OutputPrint a single integer \u2014 the number of glasses of juice Vasya could have drunk if he had played optimally well.ExamplesInputCopy4abbbaOutputCopy1InputCopy4abbabOutputCopy0NoteIn both samples Vasya has got two turns \u2014 1 and 5. In the first sample, Vasya could have drunk a glass of juice during the fifth turn if he had pointed at the next person with a nod. In this case, the sequence of moves would look like \"abbbb\". In the second sample Vasya wouldn't drink a single glass of juice as the moves performed during turns 3 and 4 are different."], "Page Numbers": ["https://codeforces.com/problemset/problem/34/C", "C. Page Numberstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output\u00abBersoft\u00bb company is working on a new version of its most popular text editor \u2014 Bord 2010. Bord, like many other text editors, should be able to print out multipage documents. A user keys a sequence of the document page numbers that he wants to print out (separates them with a comma, without spaces).Your task is to write a part of the program, responsible for \u00abstandardization\u00bb of this sequence. Your program gets the sequence, keyed by the user, as input. The program should output this sequence in format l1-r1,l2-r2,...,lk-rk, where ri\u2009+\u20091\u2009<\u2009li\u2009+\u20091 for all i from 1 to k\u2009-\u20091, and li\u2009\u2264\u2009ri. The new sequence should contain all the page numbers, keyed by the user, and nothing else. If some page number appears in the input sequence several times, its appearances, starting from the second one, should be ignored. If for some element i from the new sequence li\u2009=\u2009ri, this element should be output as li, and not as \u00abli\u2009-\u2009li\u00bb.For example, sequence 1,2,3,1,1,2,6,6,2 should be output as 1-3,6.InputThe only line contains the sequence, keyed by the user. The sequence contains at least one and at most 100 positive integer numbers. It's guaranteed, that this sequence consists of positive integer numbers, not exceeding 1000, separated with a comma, doesn't contain any other characters, apart from digits and commas, can't end with a comma, and the numbers don't contain leading zeroes. Also it doesn't start with a comma or contain more than one comma in a row.OutputOutput the sequence in the required format.ExamplesInputCopy1,2,3,1,1,2,6,6,2OutputCopy1-3,6InputCopy3,2,1OutputCopy1-3InputCopy30,20,10OutputCopy10,20,30"], "Hard Work": ["https://codeforces.com/problemset/problem/61/B", "B. Hard Worktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter the contest in comparing numbers, Shapur's teacher found out that he is a real genius and that no one could possibly do the calculations faster than him even using a super computer!Some days before the contest, the teacher took a very simple-looking exam and all his n students took part in the exam. The teacher gave them 3 strings and asked them to concatenate them. Concatenating strings means to put them in some arbitrary order one after the other. For example from concatenating Alireza and Amir we can get to AlirezaAmir or AmirAlireza depending on the order of concatenation.Unfortunately enough, the teacher forgot to ask students to concatenate their strings in a pre-defined order so each student did it the way he/she liked.Now the teacher knows that Shapur is such a fast-calculating genius boy and asks him to correct the students' papers.Shapur is not good at doing such a time-taking task. He rather likes to finish up with it as soon as possible and take his time to solve 3-SAT in polynomial time. Moreover, the teacher has given some advice that Shapur has to follow. Here's what the teacher said:   As I expect you know, the strings I gave to my students (including you) contained only lowercase and uppercase Persian Mikhi-Script letters. These letters are too much like Latin letters, so to make your task much harder I converted all the initial strings and all of the students' answers to Latin.  As latin alphabet has much less characters than Mikhi-Script, I added three odd-looking characters to the answers, these include \"-\", \";\" and \"_\". These characters are my own invention of course! And I call them Signs.  The length of all initial strings was less than or equal to 100 and the lengths of my students' answers are less than or equal to 600  My son, not all students are genius as you are. It is quite possible that they make minor mistakes changing case of some characters. For example they may write ALiReZaAmIR instead of AlirezaAmir. Don't be picky and ignore these mistakes.  Those signs which I previously talked to you about are not important. You can ignore them, since many students are in the mood for adding extra signs or forgetting about a sign. So something like Iran;;-- is the same as --;IRAN  You should indicate for any of my students if his answer was right or wrong. Do this by writing \"WA\" for Wrong answer or \"ACC\" for a correct answer.  I should remind you that none of the strings (initial strings or answers) are empty.  Finally, do these as soon as possible. You have less than 2 hours to complete this.  InputThe first three lines contain a string each. These are the initial strings. They consists only of lowercase and uppercase Latin letters and signs (\"-\", \";\" and \"_\"). All the initial strings have length from 1 to 100, inclusively.In the fourth line there is a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u20091000), the number of students.Next n lines contain a student's answer each. It is guaranteed that the answer meets what the teacher said. Each answer iconsists only of lowercase and uppercase Latin letters and signs (\"-\", \";\" and \"_\"). Length is from 1 to 600, inclusively.OutputFor each student write in a different line. Print \"WA\" if his answer is wrong or \"ACC\" if his answer is OK.ExamplesInputCopyIran_Persian;W_o;n;d;e;r;f;u;l;7WonderfulPersianIranwonderful_PersIAN_IRAN;;_WONDERFUL___IRAN__PERSIAN__;;Ira__Persiann__WonderfulWonder;;fulPersian___;I;r;a;n;__________IranPersianWonderful__________PersianIran_is_WonderfulOutputCopyACCACCACCWAACCACCWAInputCopyShapur;;is___a_genius3Shapur__a_is___geniUsis___shapur___a__Genius;Shapur;;is;;a;;geni;;us;;OutputCopyWAACCACC"], "Star": ["https://codeforces.com/problemset/problem/171/B", "B. Startime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output  InputThe input contains a single integer a (1\u2009\u2264\u2009a\u2009\u2264\u200918257).OutputPrint a single integer output (1\u2009\u2264\u2009output\u2009\u2264\u20092\u00b7109).ExamplesInputCopy2OutputCopy13"], "Spoilt Permutation": ["https://codeforces.com/problemset/problem/56/B", "B. Spoilt Permutationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya collects coins: he has exactly one coin for every year from 1 to n. Naturally, Vasya keeps all the coins in his collection in the order in which they were released. Once Vasya's younger brother made a change \u2014 he took all the coins whose release year dated from l to r inclusively and put them in the reverse order. That is, he took a certain segment [l,\u2009r] and reversed it. At that the segment's endpoints did not coincide. For example, if n\u2009=\u20098, then initially Vasya's coins were kept in the order 1 2 3 4 5 6 7 8. If Vasya's younger brother chose the segment [2,\u20096], then after the reversal the coin order will change to 1 6 5 4 3 2 7 8. Vasya suspects that someone else could have spoilt the permutation after his brother. Help him to find that out. Check if the given permutation can be obtained from the permutation 1 2 ... n using exactly one segment reversal. If it is possible, find the segment itself.InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000) which is the number of coins in Vasya's collection. The second line contains space-separated n integers which are the spoilt sequence of coins. It is guaranteed that the given sequence is a permutation, i.e. it contains only integers from 1 to n, and every number is used exactly 1 time.OutputIf it is impossible to obtain the given permutation from the original one in exactly one action, print 0 0. Otherwise, print two numbers l r (1\u2009\u2264\u2009l\u2009<\u2009r\u2009\u2264\u2009n) which are the endpoints of the segment that needs to be reversed to obtain from permutation 1 2 ... n the given one.ExamplesInputCopy81 6 5 4 3 2 7 8OutputCopy2 6InputCopy42 3 4 1OutputCopy0 0InputCopy41 2 3 4OutputCopy0 0"], "2-3-numbers": ["https://codeforces.com/problemset/problem/926/A", "A. 2-3-numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA positive integer is called a 2-3-integer, if it is equal to 2x\u00b73y for some non-negative integers x and y. In other words, these integers are such integers that only have 2 and 3 among their prime divisors. For example, integers 1, 6, 9, 16 and 108 \u2014 are 2-3 integers, while 5, 10, 21 and 120 are not.Print the number of 2-3-integers on the given segment [l,\u2009r], i.\u00a0e. the number of sich 2-3-integers t that l\u2009\u2264\u2009t\u2009\u2264\u2009r.InputThe only line contains two integers l and r (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u20092\u00b7109).OutputPrint a single integer the number of 2-3-integers on the segment [l,\u2009r].ExamplesInputCopy1 10OutputCopy7InputCopy100 200OutputCopy5InputCopy1 2000000000OutputCopy326NoteIn the first example the 2-3-integers are 1, 2, 3, 4, 6, 8 and 9.In the second example the 2-3-integers are 108, 128, 144, 162 and 192."], "Prime Permutation": ["https://codeforces.com/problemset/problem/123/A", "A. Prime Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string s, consisting of small Latin letters. Let's denote the length of the string as |s|. The characters in the string are numbered starting from 1. Your task is to find out if it is possible to rearrange characters in string s so that for any prime number p\u2009\u2264\u2009|s| and for any integer i ranging from 1 to |s|\u2009/\u2009p (inclusive) the following condition was fulfilled sp\u2009=\u2009sp\u2009\u00d7\u2009i. If the answer is positive, find one way to rearrange the characters.InputThe only line contains the initial string s, consisting of small Latin letters (1\u2009\u2264\u2009|s|\u2009\u2264\u20091000).OutputIf it is possible to rearrange the characters in the string so that the above-mentioned conditions were fulfilled, then print in the first line \"YES\" (without the quotes) and print on the second line one of the possible resulting strings. If such permutation is impossible to perform, then print the single string \"NO\".ExamplesInputCopyabcOutputCopyYESabcInputCopyabcdOutputCopyNOInputCopyxxxyxxxOutputCopyYESxxxxxxyNoteIn the first sample any of the six possible strings will do: \"abc\", \"acb\", \"bac\", \"bca\", \"cab\" or \"cba\".In the second sample no letter permutation will satisfy the condition at p\u2009=\u20092 (s2\u2009=\u2009s4).In the third test any string where character \"y\" doesn't occupy positions 2, 3, 4, 6 will be valid."], "Punctuation": ["https://codeforces.com/problemset/problem/147/A", "A. Punctuationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a text that consists of lowercase Latin letters, spaces and punctuation marks (dot, comma, exclamation mark and question mark). A word is defined as a sequence of consecutive Latin letters.Your task is to add spaces to the text by the following rules:  if there is no punctuation mark between two words, then they should be separated by exactly one space  there should be no spaces before each punctuation mark  there should be exactly one space after each punctuation mark It is guaranteed that there is at least one word between any two punctuation marks. The text begins and ends with a Latin letter.InputThe input data contains of a single non-empty line \u2014 the text whose length is no more than 10000 characters.OutputPrint the text, edited according to the rules. In this problem you should follow the output format very strictly. For example, extra space at the end of the output line is considered as wrong answer. Note that a newline character at the end of the line doesn't matter.ExamplesInputCopygalileo galilei was an   italian physicist  ,mathematician,astronomerOutputCopygalileo galilei was an italian physicist, mathematician, astronomerInputCopygalileo  was  born  in  pisaOutputCopygalileo was born in pisa"], "Where Are My Flakes?": ["https://codeforces.com/problemset/problem/60/A", "A. Where Are My Flakes?time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output  One morning the Cereal Guy found out that all his cereal flakes were gone. He found a note instead of them. It turned out that his smart roommate hid the flakes in one of n boxes. The boxes stand in one row, they are numbered from 1 to n from the left to the right. The roommate left hints like \"Hidden to the left of the i-th box\" (\"To the left of i\"), \"Hidden to the right of the i-th box\" (\"To the right of i\"). Such hints mean that there are no flakes in the i-th box as well. The Cereal Guy wants to know the minimal number of boxes he necessarily needs to check to find the flakes considering all the hints. Or he wants to find out that the hints are contradictory and the roommate lied to him, that is, no box has the flakes.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u20091000,\u20090\u2009\u2264\u2009m\u2009\u2264\u20091000) which represent the number of boxes and the number of hints correspondingly. Next m lines contain hints like \"To the left of i\" and \"To the right of i\", where i is integer (1\u2009\u2264\u2009i\u2009\u2264\u2009n). The hints may coincide.OutputThe answer should contain exactly one integer \u2014 the number of boxes that should necessarily be checked or \"-1\" if the hints are contradictory.ExamplesInputCopy2 1To the left of 2OutputCopy1InputCopy3 2To the right of 1To the right of 2OutputCopy1InputCopy3 1To the left of 3OutputCopy2InputCopy3 2To the left of 2To the right of 1OutputCopy-1"], "A Student's Dream": ["https://codeforces.com/problemset/problem/62/A", "A. A Student's Dreamtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputStatistics claims that students sleep no more than three hours a day. But even in the world of their dreams, while they are snoring peacefully, the sense of impending doom is still upon them.A poor student is dreaming that he is sitting the mathematical analysis exam. And he is examined by the most formidable professor of all times, a three times Soviet Union Hero, a Noble Prize laureate in student expulsion, venerable Petr Palych.The poor student couldn't answer a single question. Thus, instead of a large spacious office he is going to apply for a job to thorium mines. But wait a minute! Petr Palych decided to give the student the last chance! Yes, that is possible only in dreams. So the professor began: \"Once a Venusian girl and a Marsian boy met on the Earth and decided to take a walk holding hands. But the problem is the girl has al fingers on her left hand and ar fingers on the right one. The boy correspondingly has bl and br fingers. They can only feel comfortable when holding hands, when no pair of the girl's fingers will touch each other. That is, they are comfortable when between any two girl's fingers there is a boy's finger. And in addition, no three fingers of the boy should touch each other. Determine if they can hold hands so that the both were comfortable.\"The boy any the girl don't care who goes to the left and who goes to the right. The difference is only that if the boy goes to the left of the girl, he will take her left hand with his right one, and if he goes to the right of the girl, then it is vice versa.InputThe first line contains two positive integers not exceeding 100. They are the number of fingers on the Venusian girl's left and right hand correspondingly. The second line contains two integers not exceeding 100. They are the number of fingers on the Marsian boy's left and right hands correspondingly.OutputPrint YES or NO, that is, the answer to Petr Palych's question.ExamplesInputCopy5 110 5OutputCopyYESInputCopy4 53 3OutputCopyYESInputCopy1 211 6OutputCopyNONoteThe boy and the girl don't really care who goes to the left."], "Island Puzzle": ["https://codeforces.com/problemset/problem/634/A", "A. Island Puzzletime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA remote island chain contains n islands, labeled 1 through n. Bidirectional bridges connect the islands to form a simple cycle\u00a0\u2014 a bridge connects islands 1 and 2, islands 2 and 3, and so on, and additionally a bridge connects islands n and 1. The center of each island contains an identical pedestal, and all but one of the islands has a fragile, uniquely colored statue currently held on the pedestal. The remaining island holds only an empty pedestal.The islanders want to rearrange the statues in a new order. To do this, they repeat the following process: First, they choose an island directly adjacent to the island containing an empty pedestal. Then, they painstakingly carry the statue on this island across the adjoining bridge and place it on the empty pedestal.Determine if it is possible for the islanders to arrange the statues in the desired order.InputThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the total number of islands.The second line contains n space-separated integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009n\u2009-\u20091)\u00a0\u2014 the statue currently placed on the i-th island. If ai\u2009=\u20090, then the island has no statue. It is guaranteed that the ai are distinct.The third line contains n space-separated integers bi (0\u2009\u2264\u2009bi\u2009\u2264\u2009n\u2009-\u20091) \u2014 the desired statues of the ith island. Once again, bi\u2009=\u20090 indicates the island desires no statue. It is guaranteed that the bi are distinct.OutputPrint \"YES\" (without quotes) if the rearrangement can be done in the existing network, and \"NO\" otherwise.ExamplesInputCopy31 0 22 0 1OutputCopyYESInputCopy21 00 1OutputCopyYESInputCopy41 2 3 00 3 2 1OutputCopyNONoteIn the first sample, the islanders can first move statue 1 from island 1 to island 2, then move statue 2 from island 3 to island 1, and finally move statue 1 from island 2 to island 3.In the second sample, the islanders can simply move statue 1 from island 1 to island 2.In the third sample, no sequence of movements results in the desired position."], "Find Color": ["https://codeforces.com/problemset/problem/40/A", "A. Find Colortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputNot so long ago as a result of combat operations the main Berland place of interest \u2014 the magic clock \u2014 was damaged. The cannon's balls made several holes in the clock, that's why the residents are concerned about the repair. The magic clock can be represented as an infinite Cartesian plane, where the origin corresponds to the clock center. The clock was painted two colors as is shown in the picture:  The picture shows only the central part of the clock. This coloring naturally extends to infinity.The balls can be taken to be points on the plane. Your task is to find the color of the area, damaged by the given ball.All the points located on the border of one of the areas have to be considered painted black.InputThe first and single line contains two integers x and y \u2014 the coordinates of the hole made in the clock by the ball. Each of the numbers x and y has an absolute value that does not exceed 1000.OutputFind the required color.All the points between which and the origin of coordinates the distance is integral-value are painted black.ExamplesInputCopy-2 1OutputCopywhiteInputCopy2 1OutputCopyblackInputCopy4 3OutputCopyblack"], "Email address": ["https://codeforces.com/problemset/problem/41/C", "C. Email addresstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSometimes one has to spell email addresses over the phone. Then one usually pronounces a dot as dot, an at sign as at. As a result, we get something like vasyaatgmaildotcom. Your task is to transform it into a proper email address (vasya@gmail.com). It is known that a proper email address contains only such symbols as . @ and lower-case Latin letters, doesn't start with and doesn't end with a dot. Also, a proper email address doesn't start with and doesn't end with an at sign. Moreover, an email address contains exactly one such symbol as @, yet may contain any number (possible, zero) of dots. You have to carry out a series of replacements so that the length of the result was as short as possible and it was a proper email address. If the lengths are equal, you should print the lexicographically minimal result. Overall, two variants of replacement are possible: dot can be replaced by a dot, at can be replaced by an at. InputThe first line contains the email address description. It is guaranteed that that is a proper email address with all the dots replaced by dot an the at signs replaced by at. The line is not empty and its length does not exceed 100 symbols.OutputPrint the shortest email address, from which the given line could be made by the described above replacements. If there are several solutions to that problem, print the lexicographically minimal one (the lexicographical comparison of the lines are implemented with an operator < in modern programming languages).In the ASCII table the symbols go in this order: . @ ab...zExamplesInputCopyvasyaatgmaildotcomOutputCopyvasya@gmail.comInputCopydotdotdotatdotdotatOutputCopydot..@..atInputCopyaattOutputCopya@t"], "Command Line Arguments": ["https://codeforces.com/problemset/problem/291/B", "B. Command Line Argumentstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe problem describes the properties of a command line. The description somehow resembles the one you usually see in real operating systems. However, there are differences in the behavior. Please make sure you've read the statement attentively and use it as a formal document.In the Pindows operating system a strings are the lexemes of the command line \u2014 the first of them is understood as the name of the program to run and the following lexemes are its arguments. For example, as we execute the command \" run.exe one, two . \", we give four lexemes to the Pindows command line: \"run.exe\", \"one,\", \"two\", \".\". More formally, if we run a command that can be represented as string s (that has no quotes), then the command line lexemes are maximal by inclusion substrings of string s that contain no spaces.To send a string with spaces or an empty string as a command line lexeme, we can use double quotes. The block of characters that should be considered as one lexeme goes inside the quotes. Embedded quotes are prohibited \u2014 that is, for each occurrence of character \"\"\" we should be able to say clearly that the quotes are opening or closing. For example, as we run the command \"\"run.exe o\" \"\" \" ne, \" two . \" \" \", we give six lexemes to the Pindows command line: \"run.exe o\", \"\" (an empty string), \" ne, \", \"two\", \".\", \" \" (a single space).It is guaranteed that each lexeme of the command line is either surrounded by spaces on both sides or touches the corresponding command border. One of its consequences is: the opening brackets are either the first character of the string or there is a space to the left of them.You have a string that consists of uppercase and lowercase English letters, digits, characters \".,?!\"\" and spaces. It is guaranteed that this string is a correct OS Pindows command line string. Print all lexemes of this command line string. Consider the character \"\"\" to be used only in order to denote a single block of characters into one command line lexeme. In particular, the consequence is that the given string has got an even number of such characters.InputThe single line contains a non-empty string s. String s consists of at most 105 characters. Each character is either an uppercase or a lowercase English letter, or a digit, or one of the \".,?!\"\" signs, or a space.It is guaranteed that the given string is some correct command line string of the OS Pindows. It is guaranteed that the given command line string contains at least one lexeme.OutputIn the first line print the first lexeme, in the second line print the second one and so on. To make the output clearer, print the \"<\" (less) character to the left of your lexemes and the \">\" (more) character to the right. Print the lexemes in the order in which they occur in the command.Please, follow the given output format strictly. For more clarifications on the output format see the test samples.ExamplesInputCopy\"RUn.exe O\" \"\" \"   2ne, \" two! . \" \"OutputCopy<RUn.exe O><><   2ne, ><two!><.>< >InputCopy   firstarg   second   \"\"    OutputCopy<firstarg><second><>"], "Cookies": ["https://codeforces.com/problemset/problem/70/A", "A. Cookiestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFangy collects cookies. Once he decided to take a box and put cookies into it in some way. If we take a square k\u2009\u00d7\u2009k in size, divided into blocks 1\u2009\u00d7\u20091 in size and paint there the main diagonal together with cells, which lie above it, then the painted area will be equal to the area occupied by one cookie k in size. Fangy also has a box with a square base 2n\u2009\u00d7\u20092n, divided into blocks 1\u2009\u00d7\u20091 in size. In a box the cookies should not overlap, and they should not be turned over or rotated. See cookies of sizes 2 and 4 respectively on the figure:    To stack the cookies the little walrus uses the following algorithm. He takes out of the repository the largest cookie which can fit in some place in the box and puts it there. Everything could be perfect but alas, in the repository the little walrus has infinitely many cookies of size 2 and larger, and there are no cookies of size 1, therefore, empty cells will remain in the box. Fangy wants to know how many empty cells will be left in the end.InputThe first line contains a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u20091000).OutputPrint the single number, equal to the number of empty cells in the box. The answer should be printed modulo 106\u2009+\u20093.ExamplesInputCopy3OutputCopy9NoteIf the box possesses the base of 23\u2009\u00d7\u200923 (as in the example), then the cookies will be put there in the following manner: "], "Delete Them": ["https://codeforces.com/problemset/problem/730/H", "H. Delete Themtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputPolycarp is a beginner programmer. He is studying how to use a command line.Polycarp faced the following problem. There are n files in a directory and he needs to delete some of them. Polycarp wants to run a single delete command with filename pattern as an argument. All the files to be deleted should match the pattern and all other files shouldn't match the pattern.Polycarp doesn't know about an asterisk '*', the only special character he knows is a question mark '?' which matches any single character. All other characters in the pattern match themselves only.Formally, a pattern matches a filename if and only if they have equal lengths and all characters in the corresponding positions are equal except when the character in the pattern is '?', in which case the corresponding filename character does not matter.For example, the filename pattern \"a?ba?\":  matches filenames \"aabaa\", \"abba.\", \"a.ba9\" and \"a.ba.\";  does not match filenames \"aaba\", \"abaab\", \"aabaaa\" and \"aabaa.\". Help Polycarp find a pattern which matches files to be deleted and only them or report if there is no such pattern.InputThe first line of the input contains two integers n and m (1\u2009\u2264\u2009m\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the total number of files and the number of files to be deleted.The following n lines contain filenames, single filename per line. All filenames are non-empty strings containing only lowercase English letters, digits and dots ('.'). The length of each filename doesn't exceed 100. It is guaranteed that all filenames are distinct.The last line of the input contains m distinct integer numbers in ascending order a1,\u2009a2,\u2009...,\u2009am (1\u2009\u2264\u2009ai\u2009\u2264\u2009n) \u2014 indices of files to be deleted. All files are indexed from 1 to n in order of their appearance in the input.OutputIf the required pattern exists, print \"Yes\" in the first line of the output. The second line should contain the required pattern. If there are multiple solutions, print any of them.If the required pattern doesn't exist, print the only line containing \"No\".ExamplesInputCopy3 2abaccd1 2OutputCopyYesa?InputCopy5 3testtezttest..esttes.1 4 5OutputCopyYes?es?InputCopy4 4abcdd1 2 3 4OutputCopyNoInputCopy6 3.svn.git..........1 2 3OutputCopyYes.???"], "Calendar": ["https://codeforces.com/problemset/problem/304/B", "B. Calendartime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputCalendars in widespread use today include the Gregorian calendar, which is the de facto international standard, and is used almost everywhere in the world for civil purposes. The Gregorian reform modified the Julian calendar's scheme of leap years as follows: Every year that is exactly divisible by four is a leap year, except for years that are exactly divisible by 100; the centurial years that are exactly divisible by 400 are still leap years. For example, the year 1900 is not a leap year; the year 2000 is a leap year.   In this problem, you have been given two dates and your task is to calculate how many days are between them. Note, that leap years have unusual number of days in February.Look at the sample to understand what borders are included in the aswer.InputThe first two lines contain two dates, each date is in the format yyyy:mm:dd (1900\u2009\u2264\u2009yyyy\u2009\u2264\u20092038 and yyyy:mm:dd is a legal date).OutputPrint a single integer \u2014 the answer to the problem.ExamplesInputCopy1900:01:012038:12:31OutputCopy50768InputCopy1996:03:091991:11:12OutputCopy1579"], "Turing Tape": ["https://codeforces.com/problemset/problem/132/A", "A. Turing Tapetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputINTERCAL is the oldest of esoteric programming languages. One of its many weird features is the method of character-based output, known as Turing Tape method. It converts an array of unsigned 8-bit integers into a sequence of characters to print, using the following method.The integers of the array are processed one by one, starting from the first. Processing i-th element of the array is done in three steps:1. The 8-bit binary notation of the ASCII-code of the previous printed character is reversed. When the first element of the array is processed, the result of this step is considered to be 0.2. The i-th element of the array is subtracted from the result of the previous step modulo 256.3. The binary notation of the result of the previous step is reversed again to produce ASCII-code of the i-th character to be printed.You are given the text printed using this method. Restore the array used to produce this text.InputThe input will consist of a single line text which contains the message printed using the described method. String text will contain between 1 and 100 characters, inclusive. ASCII-code of each character of text will be between 32 (space) and 126 (tilde), inclusive.OutputOutput the initial array, which was used to produce text, one integer per line.ExamplesInputCopyHello, World!OutputCopy23810811206419448262441682416162NoteLet's have a closer look at the beginning of the example. The first character is \"H\" with ASCII-code 72\u2009=\u2009010010002. Its reverse is 000100102\u2009=\u200918, and this number should become the result of the second step of processing. The result of the first step is considered to be 0, so the first element of the array has to be (0\u2009-\u200918) mod 256\u2009=\u2009238, where a mod b is the remainder of division of a by b."], "Square Earth?": ["https://codeforces.com/problemset/problem/57/A", "A. Square Earth?time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMeg the Rabbit decided to do something nice, specifically \u2014 to determine the shortest distance between two points on the surface of our planet. But Meg... what can you say, she wants everything simple. So, she already regards our planet as a two-dimensional circle. No, wait, it's even worse \u2014 as a square of side n. Thus, the task has been reduced to finding the shortest path between two dots on a square (the path should go through the square sides). To simplify the task let us consider the vertices of the square to lie at points whose coordinates are: (0,\u20090), (n,\u20090), (0,\u2009n) and (n,\u2009n).InputThe single line contains 5 space-separated integers: n,\u2009x1,\u2009y1,\u2009x2,\u2009y2 (1\u2009\u2264\u2009n\u2009\u2264\u20091000,\u20090\u2009\u2264\u2009x1,\u2009y1,\u2009x2,\u2009y2\u2009\u2264\u2009n) which correspondingly represent a side of the square, the coordinates of the first point and the coordinates of the second point. It is guaranteed that the points lie on the sides of the square.OutputYou must print on a single line the shortest distance between the points.ExamplesInputCopy2 0 0 1 0OutputCopy1InputCopy2 0 1 2 1OutputCopy4InputCopy100 0 0 100 100OutputCopy200"], "Help Chef Gerasim": ["https://codeforces.com/problemset/problem/99/B", "B. Help Chef Gerasimtime limit per test0.5 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn a far away kingdom young pages help to set the table for the King. As they are terribly mischievous, one needs to keep an eye on the control whether they have set everything correctly. This time the royal chef Gerasim had the impression that the pages have played a prank again: they had poured the juice from one cup to another. Now Gerasim wants to check his hypothesis. The good thing is that chef Gerasim always pour the same number of milliliters of juice to all cups in the royal kitchen. Having thoroughly measured the juice in each cup, Gerasim asked you to write a program that will determine from which cup juice was poured to which one; otherwise, the program should determine that this time the pages set the table diligently.To simplify your task we shall consider the cups to be bottomless so that the juice never overfills a cup and pours out, however much it can be. Besides, by some strange reason in a far away kingdom one can only pour to a cup or from one cup to another an integer number of milliliters of juice.InputThe first line contains integer n \u2014 the number of cups on the royal table (1\u2009\u2264\u2009n\u2009\u2264\u20091000). Next n lines contain volumes of juice in each cup \u2014 non-negative integers, not exceeding 104.OutputIf the pages didn't pour the juice, print \"Exemplary pages.\" (without the quotes). If you can determine the volume of juice poured during exactly one juice pouring, print \"v ml. from cup #a to cup #b.\" (without the quotes), where v represents the volume of poured juice, a represents the number of the cup from which the juice was poured (the cups are numbered with consecutive positive integers starting from one in the order in which the cups are described in the input data), b represents the number of the cup into which the juice was poured. Finally, if the given juice's volumes cannot be obtained using no more than one pouring (for example, the pages poured the juice from one cup to another more than once or the royal kitchen maids poured the juice into the cups incorrectly), print \"Unrecoverable configuration.\" (without the quotes).ExamplesInputCopy5270250250230250OutputCopy20 ml. from cup #4 to cup #1.InputCopy5250250250250250OutputCopyExemplary pages.InputCopy5270250249230250OutputCopyUnrecoverable configuration."], "Maximize Sum of Digits": ["https://codeforces.com/problemset/problem/770/B", "B. Maximize Sum of Digitstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnton has the integer x. He is interested what positive integer, which doesn't exceed x, has the maximum sum of digits.Your task is to help Anton and to find the integer that interests him. If there are several such integers, determine the biggest of them. InputThe first line contains the positive integer x (1\u2009\u2264\u2009x\u2009\u2264\u20091018) \u2014 the integer which Anton has. OutputPrint the positive integer which doesn't exceed x and has the maximum sum of digits. If there are several such integers, print the biggest of them. Printed integer must not contain leading zeros.ExamplesInputCopy100OutputCopy99InputCopy48OutputCopy48InputCopy521OutputCopy499"], "Game on Paper": ["https://codeforces.com/problemset/problem/203/B", "B. Game on Papertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne not particularly beautiful evening Valera got very bored. To amuse himself a little bit, he found the following game.He took a checkered white square piece of paper, consisting of n\u2009\u00d7\u2009n cells. After that, he started to paint the white cells black one after the other. In total he painted m different cells on the piece of paper. Since Valera was keen on everything square, he wondered, how many moves (i.e. times the boy paints a square black) he should make till a black square with side 3 can be found on the piece of paper. But Valera does not know the answer to this question, so he asks you to help him.Your task is to find the minimum number of moves, till the checkered piece of paper has at least one black square with side of 3. Otherwise determine that such move does not exist.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u20091000, 1\u2009\u2264\u2009m\u2009\u2264\u2009min(n\u00b7n,\u2009105)) \u2014 the size of the squared piece of paper and the number of moves, correspondingly. Then, m lines contain the description of the moves. The i-th line contains two integers xi, yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n) \u2014 the number of row and column of the square that gets painted on the i-th move. All numbers on the lines are separated by single spaces. It is guaranteed that all moves are different. The moves are numbered starting from 1 in the order, in which they are given in the input. The columns of the squared piece of paper are numbered starting from 1, from the left to the right. The rows of the squared piece of paper are numbered starting from 1, from top to bottom.OutputOn a single line print the answer to the problem \u2014 the minimum number of the move after which the piece of paper has a black square with side 3. If no such move exists, print -1.ExamplesInputCopy4 111 11 21 32 22 31 42 43 43 23 34 1OutputCopy10InputCopy4 121 11 21 32 22 31 42 43 43 24 24 13 1OutputCopy-1"], "Extra-terrestrial Intelligence": ["https://codeforces.com/problemset/problem/36/A", "A. Extra-terrestrial Intelligencetime limit per test2 secondsmemory limit per test64 megabytesinputinput.txtoutputoutput.txtRecently Vasya got interested in finding extra-terrestrial intelligence. He made a simple extra-terrestrial signals\u2019 receiver and was keeping a record of the signals for n days in a row. Each of those n days Vasya wrote a 1 in his notebook if he had received a signal that day and a 0 if he hadn\u2019t. Vasya thinks that he has found extra-terrestrial intelligence if there is a system in the way the signals has been received, i.e. if all the intervals between successive signals are equal. Otherwise, Vasya thinks that the signals were sent by some stupid aliens no one cares about. Help Vasya to deduce from the information given by the receiver if he has found extra-terrestrial intelligence or not.InputThe first line contains integer n (3\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 amount of days during which Vasya checked if there were any signals. The second line contains n characters 1 or 0 \u2014 the record Vasya kept each of those n days. It\u2019s guaranteed that the given record sequence contains at least three 1s.OutputIf Vasya has found extra-terrestrial intelligence, output YES, otherwise output NO.ExamplesInputCopy800111000OutputCopyYESInputCopy71001011OutputCopyNOInputCopy71010100OutputCopyYES"], "Berland Bingo": ["https://codeforces.com/problemset/problem/370/B", "B. Berland Bingotime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLately, a national version of a bingo game has become very popular in Berland. There are n players playing the game, each player has a card with numbers. The numbers on each card are distinct, but distinct cards can have equal numbers. The card of the i-th player contains mi numbers.During the game the host takes numbered balls one by one from a bag. He reads the number aloud in a high and clear voice and then puts the ball away. All participants cross out the number if it occurs on their cards. The person who crosses out all numbers from his card first, wins. If multiple people cross out all numbers from their cards at the same time, there are no winners in the game. At the beginning of the game the bag contains 100 balls numbered 1 through 100, the numbers of all balls are distinct.You are given the cards for each player. Write a program that determines whether a player can win the game at the most favorable for him scenario or not.InputThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of the players. Then follow n lines, each line describes a player's card. The line that describes a card starts from integer mi (1\u2009\u2264\u2009mi\u2009\u2264\u2009100) that shows how many numbers the i-th player's card has. Then follows a sequence of integers ai,\u20091,\u2009ai,\u20092,\u2009...,\u2009ai,\u2009mi (1\u2009\u2264\u2009ai,\u2009k\u2009\u2264\u2009100) \u2014 the numbers on the i-th player's card. The numbers in the lines are separated by single spaces.It is guaranteed that all the numbers on each card are distinct.OutputPrint n lines, the i-th line must contain word \"YES\" (without the quotes), if the i-th player can win, and \"NO\" (without the quotes) otherwise.ExamplesInputCopy31 13 2 4 12 10 11OutputCopyYESNOYESInputCopy21 11 1OutputCopyNONO"], "Number of Triplets": ["https://codeforces.com/problemset/problem/181/B", "B. Number of Tripletstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given n points on a plane. All points are different.Find the number of different groups of three points (A,\u2009B,\u2009C) such that point B is the middle of segment AC. The groups of three points are considered unordered, that is, if point B is the middle of segment AC, then groups (A,\u2009B,\u2009C) and (C,\u2009B,\u2009A) are considered the same.InputThe first line contains a single integer n (3\u2009\u2264\u2009n\u2009\u2264\u20093000) \u2014 the number of points. Next n lines contain the points. The i-th line contains coordinates of the i-th point: two space-separated integers xi,\u2009yi (\u2009-\u20091000\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u20091000).It is guaranteed that all given points are different.OutputPrint the single number \u2014 the answer to the problem. ExamplesInputCopy31 12 23 3OutputCopy1InputCopy30 0-1 00 1OutputCopy0"], "Holidays": ["https://codeforces.com/problemset/problem/44/C", "C. Holidaystime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSchool holidays come in Berland. The holidays are going to continue for n days. The students of school \u2116N are having the time of their lives and the IT teacher Marina Sergeyevna, who has spent all the summer busy checking the BSE (Berland State Examination) results, has finally taken a vacation break! Some people are in charge of the daily watering of flowers in shifts according to the schedule. However when Marina Sergeyevna was making the schedule, she was so tired from work and so lost in dreams of the oncoming vacation that she perhaps made several mistakes. In fact, it is possible that according to the schedule, on some days during the holidays the flowers will not be watered or will be watered multiple times. Help Marina Sergeyevna to find a mistake.InputThe first input line contains two numbers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the number of days in Berland holidays and the number of people in charge of the watering respectively. The next m lines contain the description of the duty schedule. Each line contains two integers ai and bi (1\u2009\u2264\u2009ai\u2009\u2264\u2009bi\u2009\u2264\u2009n), meaning that the i-th person in charge should water the flowers from the ai-th to the bi-th day inclusively, once a day. The duty shifts are described sequentially, i.e. bi\u2009\u2264\u2009ai\u2009+\u20091 for all i from 1 to n\u2009-\u20091 inclusively. OutputPrint \"OK\" (without quotes), if the schedule does not contain mistakes. Otherwise you have to find the minimal number of a day when the flowers will not be watered or will be watered multiple times, and output two integers \u2014 the day number and the number of times the flowers will be watered that day.ExamplesInputCopy10 51 23 34 67 78 10OutputCopyOKInputCopy10 51 22 34 57 89 10OutputCopy2 2InputCopy10 51 23 35 77 77 10OutputCopy4 0NoteKeep in mind that in the second sample the mistake occurs not only on the second day, but also on the sixth day, when nobody waters the flowers. However, you have to print the second day, i.e. the day with the minimal number."], "Brain Network (easy)": ["https://codeforces.com/problemset/problem/690/C1", "C1. Brain Network (easy)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne particularly well-known fact about zombies is that they move and think terribly slowly. While we still don't know why their movements are so sluggish, the problem of laggy thinking has been recently resolved. It turns out that the reason is not (as previously suspected) any kind of brain defect \u2013 it's the opposite! Independent researchers confirmed that the nervous system of a zombie is highly complicated \u2013 it consists of n brains (much like a cow has several stomachs). They are interconnected by brain connectors, which are veins capable of transmitting thoughts between brains. There are two important properties such a brain network should have to function properly:   It should be possible to exchange thoughts between any two pairs of brains (perhaps indirectly, through other brains).  There should be no redundant brain connectors, that is, removing any brain connector would make property 1 false. If both properties are satisfied, we say that the nervous system is valid. Unfortunately (?), if the system is not valid, the zombie stops thinking and becomes (even more) dead. Your task is to analyze a given nervous system of a zombie and find out whether it is valid.InputThe first line of the input contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000) denoting the number of brains (which are conveniently numbered from 1 to n) and the number of brain connectors in the nervous system, respectively. In the next m lines, descriptions of brain connectors follow. Every connector is given as a pair of brains a\u2002b it connects (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009n, a\u2009\u2260\u2009b).OutputThe output consists of one line, containing either yes or no depending on whether the nervous system is valid.ExamplesInputCopy4 41 22 33 14 1OutputCopynoInputCopy6 51 22 33 44 53 6OutputCopyyes"], "Old Peykan": ["https://codeforces.com/problemset/problem/241/A", "A. Old Peykantime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n cities in the country where the Old Peykan lives. These cities are located on a straight line, we'll denote them from left to right as c1,\u2009c2,\u2009...,\u2009cn. The Old Peykan wants to travel from city c1 to cn using roads. There are (n\u2009-\u20091) one way roads, the i-th road goes from city ci to city ci\u2009+\u20091 and is di kilometers long.The Old Peykan travels 1 kilometer in 1 hour and consumes 1 liter of fuel during this time.Each city ci (except for the last city cn) has a supply of si liters of fuel which immediately transfers to the Old Peykan if it passes the city or stays in it. This supply refreshes instantly k hours after it transfers. The Old Peykan can stay in a city for a while and fill its fuel tank many times. Initially (at time zero) the Old Peykan is at city c1 and s1 liters of fuel is transferred to it's empty tank from c1's supply. The Old Peykan's fuel tank capacity is unlimited. Old Peykan can not continue its travel if its tank is emptied strictly between two cities.Find the minimum time the Old Peykan needs to reach city cn.InputThe first line of the input contains two space-separated integers m and k (1\u2009\u2264\u2009m,\u2009k\u2009\u2264\u20091000). The value m specifies the number of roads between cities which is equal to n\u2009-\u20091.The next line contains m space-separated integers d1,\u2009d2,\u2009...,\u2009dm (1\u2009\u2264\u2009di\u2009\u2264\u20091000) and the following line contains m space-separated integers s1,\u2009s2,\u2009...,\u2009sm (1\u2009\u2264\u2009si\u2009\u2264\u20091000).OutputIn the only line of the output print a single integer \u2014 the minimum time required for The Old Peykan to reach city cn from city c1.ExamplesInputCopy4 61 2 5 22 3 3 4OutputCopy10InputCopy2 35 65 5OutputCopy14NoteIn the second sample above, the Old Peykan stays in c1 for 3 hours."], "Broken checker": ["https://codeforces.com/problemset/problem/171/D", "D. Broken checkertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output\"This problem is rubbish! There is not statement, and there are only 5 test cases. The problemsetter took liberties with this problem!\" \u2014 people complained in the comments to one round on Codeforces. And even more... No, wait, the checker for the problem was alright, that's a mercy.InputThe only line of the input contains an integer between 1 and 5, inclusive. All tests for this problem are different. The contents of the test case doesn't need to be equal to its index.OutputThe only line of the output contains an integer between 1 and 3, inclusive.ExamplesNoteThis problem has no samples, since there so few test cases. "], "Company Income Growth": ["https://codeforces.com/problemset/problem/39/B", "B. Company Income Growthtime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputPetya works as a PR manager for a successful Berland company BerSoft. He needs to prepare a presentation on the company income growth since 2001 (the year of its founding) till now. Petya knows that in 2001 the company income amounted to a1 billion bourles, in 2002 \u2014 to a2 billion, ..., and in the current (2000\u2009+\u2009n)-th year \u2014 an billion bourles. On the base of the information Petya decided to show in his presentation the linear progress history which is in his opinion perfect. According to a graph Petya has already made, in the first year BerSoft company income must amount to 1 billion bourles, in the second year \u2014 2 billion bourles etc., each following year the income increases by 1 billion bourles. Unfortunately, the real numbers are different from the perfect ones. Among the numbers ai can even occur negative ones that are a sign of the company\u2019s losses in some years. That is why Petya wants to ignore some data, in other words, cross some numbers ai from the sequence and leave only some subsequence that has perfect growth.Thus Petya has to choose a sequence of years y1, y2, ..., yk,so that in the year y1 the company income amounted to 1 billion bourles, in the year y2 \u2014 2 billion bourles etc., in accordance with the perfect growth dynamics. Help him to choose the longest such sequence.InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100). The next line contains n integers ai (\u2009-\u2009100\u2009\u2264\u2009ai\u2009\u2264\u2009100). The number ai determines the income of BerSoft company in the (2000\u2009+\u2009i)-th year. The numbers in the line are separated by spaces.OutputOutput k \u2014 the maximum possible length of a perfect sequence. In the next line output the sequence of years y1, y2, ..., yk. Separate the numbers by spaces. If the answer is not unique, output any. If no solution exist, output one number 0.ExamplesInputCopy10-2 1 1 3 2 3 4 -10 -2 5OutputCopy52002 2005 2006 2007 2010InputCopy3-1 -2 -3OutputCopy0"], "\u041c\u0435\u0441\u0442\u0430 \u0432 \u0441\u0430\u043c\u043e\u043b\u0451\u0442\u0435": ["https://codeforces.com/problemset/problem/929/B", "B. \u041c\u0435\u0441\u0442\u0430 \u0432 \u0441\u0430\u043c\u043e\u043b\u0451\u0442\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0430 \u0442\u0435\u0441\u04421 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u043f\u0430\u043c\u044f\u0442\u0438 \u043d\u0430 \u0442\u0435\u0441\u0442256 \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0432\u0432\u043e\u0434\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0432\u0432\u043e\u0434\u0432\u044b\u0432\u043e\u0434\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434\u0412 \u0441\u0430\u043c\u043e\u043b\u0451\u0442\u0435 \u0435\u0441\u0442\u044c n \u0440\u044f\u0434\u043e\u0432 \u043c\u0435\u0441\u0442. \u0415\u0441\u043b\u0438 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u0440\u044f\u0434\u044b \u0441\u0432\u0435\u0440\u0445\u0443, \u0442\u043e \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0440\u044f\u0434\u0443 \u0435\u0441\u0442\u044c 3 \u043c\u0435\u0441\u0442\u0430 \u0441\u043b\u0435\u0432\u0430, \u0437\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0445\u043e\u0434 \u043c\u0435\u0436\u0434\u0443 \u0440\u044f\u0434\u0430\u043c\u0438, \u0437\u0430\u0442\u0435\u043c 4 \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\u0430, \u0437\u0430\u0442\u0435\u043c \u0435\u0449\u0451 \u043e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043c\u0435\u0436\u0434\u0443 \u0440\u044f\u0434\u0430\u043c\u0438, \u0430 \u0437\u0430\u0442\u0435\u043c \u0435\u0449\u0451 3 \u043c\u0435\u0441\u0442\u0430 \u0441\u043f\u0440\u0430\u0432\u0430.\u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u0435\u0441\u0442\u0430 \u0443\u0436\u0435 \u0437\u0430\u043d\u044f\u0442\u044b \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430\u043c\u0438. \u0412\u0441\u0435\u0433\u043e \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u0432\u0438\u0434\u0430 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u2014 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0435 (\u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0447\u0430\u0441\u0442\u043e \u043b\u0435\u0442\u0430\u044e\u0442) \u0438 \u043e\u0431\u044b\u0447\u043d\u044b\u0435. \u041f\u0435\u0440\u0435\u0434 \u0432\u0430\u043c\u0438 \u0441\u0442\u043e\u0438\u0442 \u0437\u0430\u0434\u0430\u0447\u0430 \u0440\u0430\u0441\u0441\u0430\u0434\u0438\u0442\u044c \u0435\u0449\u0451 k \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u0443 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0431\u044b\u043b\u043e \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c. \u0414\u0432\u0430 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430 \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u0441\u043e\u0441\u0435\u0434\u044f\u043c\u0438, \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0441\u0438\u0434\u044f\u0442 \u0432 \u043e\u0434\u043d\u043e\u043c \u0440\u044f\u0434\u0443 \u0438 \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438 \u043d\u0435\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u043c\u0435\u0441\u0442 \u0438 \u043f\u0440\u043e\u0445\u043e\u0434\u0430 \u043c\u0435\u0436\u0434\u0443 \u0440\u044f\u0434\u0430\u043c\u0438. \u0415\u0441\u043b\u0438 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u043c \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u043c \u0434\u043b\u044f \u0434\u0432\u0443\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432, \u0442\u043e \u0435\u0433\u043e \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0432 \u0441\u0443\u043c\u043c\u0435 \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u0434\u0432\u0430\u0436\u0434\u044b.\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0442 \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 n \u0438 k (1\u2009\u2264\u2009n\u2009\u2264\u2009100, 1\u2009\u2264\u2009k\u2009\u2264\u200910\u00b7n) \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u044f\u0434\u043e\u0432 \u043c\u0435\u0441\u0442 \u0432 \u0441\u0430\u043c\u043e\u043b\u0451\u0442\u0435 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0441\u0441\u0430\u0434\u0438\u0442\u044c.\u0414\u0430\u043b\u0435\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u044f\u0434\u043e\u0432 \u043c\u0435\u0441\u0442 \u0441\u0430\u043c\u043e\u043b\u0451\u0442\u0430 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0440\u044f\u0434\u0443 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435. \u0415\u0441\u043b\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0440\u0430\u0432\u0435\u043d '-', \u0442\u043e \u044d\u0442\u043e \u043f\u0440\u043e\u0445\u043e\u0434 \u043c\u0435\u0436\u0434\u0443 \u0440\u044f\u0434\u0430\u043c\u0438. \u0415\u0441\u043b\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0440\u0430\u0432\u0435\u043d '.', \u0442\u043e \u044d\u0442\u043e \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e. \u0415\u0441\u043b\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0440\u0430\u0432\u0435\u043d 'S', \u0442\u043e \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043c\u0435\u0441\u0442\u0435 \u0431\u0443\u0434\u0435\u0442 \u0441\u0438\u0434\u0435\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0439 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440. \u0415\u0441\u043b\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0440\u0430\u0432\u0435\u043d 'P', \u0442\u043e \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043c\u0435\u0441\u0442\u0435 \u0431\u0443\u0434\u0435\u0442 \u0441\u0438\u0434\u0435\u0442\u044c \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440. \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043c\u0435\u0441\u0442 \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435 k. \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0432\u0441\u0435 \u0440\u044f\u0434\u044b \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u043c\u0443 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0443.\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\u0412 \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u0443 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432.\u0414\u0430\u043b\u0435\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u043b\u0430\u043d \u0440\u0430\u0441\u0441\u0430\u0434\u043a\u0438 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u0443 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432, \u0432 \u0442\u043e\u043c \u0436\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u0435, \u0447\u0442\u043e \u0438 \u0432\u043e \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \u0415\u0441\u043b\u0438 \u0432 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0441\u0430\u0434\u0438\u0442\u044c \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u0437 k \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u0447\u043d\u0443\u044e \u0431\u0443\u043a\u0432\u0443 'x' \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 '.'. \u041f\u0440\u0438\u043c\u0435\u0440\u044b\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy1 2SP.-SS.S-S.S\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy5SPx-SSxS-S.S\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy4 9PP.-PPPS-S.SPSP-PPSP-.S..S.-S..P-SS.P.S-P.PP-PSP\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy15PPx-PPPS-S.SPSP-PPSP-xSxxSx-SxxP-SSxP.S-PxPP-PSP\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0441\u0430\u0434\u0438\u0442\u044c \u0435\u0449\u0451 \u0434\u0432\u0443\u0445 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432. \u0414\u043b\u044f \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u0443 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432, \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0441\u0430\u0434\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438\u0437 \u043d\u0438\u0445 \u043d\u0430 \u0442\u0440\u0435\u0442\u044c\u0435 \u0441\u043b\u0435\u0432\u0430 \u043c\u0435\u0441\u0442\u043e, \u0430 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0430 \u043b\u044e\u0431\u043e\u0435 \u0438\u0437 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f \u0434\u0432\u0443\u0445 \u043c\u0435\u0441\u0442, \u0442\u0430\u043a \u043a\u0430\u043a \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0432\u044b\u0431\u043e\u0440\u0430 \u043c\u0435\u0441\u0442\u0430 \u043e\u043d \u0441\u0442\u0430\u043d\u0435\u0442 \u0441\u043e\u0441\u0435\u0434\u043e\u043c \u0434\u0432\u0443\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e, \u0443 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u043e\u0433\u043e \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0438\u0434\u0438\u0442 \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u043b\u0435\u0432\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u0441\u043e\u0441\u0435\u0434. \u0422\u0430\u043a\u0436\u0435 \u043d\u0430 \u0447\u0435\u0442\u0432\u0451\u0440\u0442\u043e\u043c \u0438 \u043f\u044f\u0442\u043e\u043c \u043c\u0435\u0441\u0442\u0430\u0445 \u0441\u043b\u0435\u0432\u0430 \u0441\u0438\u0434\u044f\u0442 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0435 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u044b, \u044f\u0432\u043b\u044f\u044e\u0449\u0438\u0435\u0441\u044f \u0441\u043e\u0441\u0435\u0434\u044f\u043c\u0438 \u0434\u0440\u0443\u0433 \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u0430 (\u0447\u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a \u0441\u0443\u043c\u043c\u0435 2).\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0441\u0430\u0434\u043a\u0438 \u0435\u0449\u0451 \u0434\u0432\u0443\u0445 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432, \u0438\u0442\u043e\u0433\u043e\u0432\u043e\u0435 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u0443 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u044b\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0441\u0442\u0430\u043d\u0435\u0442 \u0440\u0430\u0432\u043d\u043e \u043f\u044f\u0442\u0438."], "Rock-Paper-Scissors": ["https://codeforces.com/problemset/problem/173/A", "A. Rock-Paper-Scissorstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputNikephoros and Polycarpus play rock-paper-scissors. The loser gets pinched (not too severely!).Let us remind you the rules of this game. Rock-paper-scissors is played by two players. In each round the players choose one of three items independently from each other. They show the items with their hands: a rock, scissors or paper. The winner is determined by the following rules: the rock beats the scissors, the scissors beat the paper and the paper beats the rock. If the players choose the same item, the round finishes with a draw.Nikephoros and Polycarpus have played n rounds. In each round the winner gave the loser a friendly pinch and the loser ended up with a fresh and new red spot on his body. If the round finished in a draw, the players did nothing and just played on.Nikephoros turned out to have worked out the following strategy: before the game began, he chose some sequence of items A\u2009=\u2009(a1,\u2009a2,\u2009...,\u2009am), and then he cyclically showed the items from this sequence, starting from the first one. Cyclically means that Nikephoros shows signs in the following order: a1, a2, ..., am, a1, a2, ..., am, a1, ... and so on. Polycarpus had a similar strategy, only he had his own sequence of items B\u2009=\u2009(b1,\u2009b2,\u2009...,\u2009bk).Determine the number of red spots on both players after they've played n rounds of the game. You can consider that when the game began, the boys had no red spots on them.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7109) \u2014 the number of the game's rounds.The second line contains sequence A as a string of m characters and the third line contains sequence B as a string of k characters (1\u2009\u2264\u2009m,\u2009k\u2009\u2264\u20091000). The given lines only contain characters \"R\", \"S\" and \"P\". Character \"R\" stands for the rock, character \"S\" represents the scissors and \"P\" represents the paper.OutputPrint two space-separated integers: the numbers of red spots Nikephoros and Polycarpus have.ExamplesInputCopy7RPSRSPPOutputCopy3 2InputCopy5RRRRRRRRROutputCopy0 0NoteIn the first sample the game went like this:  R - R. Draw.  P - S. Nikephoros loses.  S - P. Polycarpus loses.  R - P. Nikephoros loses.  P - R. Polycarpus loses.  S - S. Draw.  R - P. Nikephoros loses. Thus, in total Nikephoros has 3 losses (and 3 red spots), and Polycarpus only has 2."], "Lost in Transliteration": ["https://codeforces.com/problemset/problem/883/F", "F. Lost in Transliterationtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are some ambiguities when one writes Berland names with the letters of the Latin alphabet.For example, the Berland sound u can be written in the Latin alphabet as \"u\", and can be written as \"oo\". For this reason, two words \"ulyana\" and \"oolyana\" denote the same name.The second ambiguity is about the Berland sound h: one can use both \"h\" and \"kh\" to write it. For example, the words \"mihail\" and \"mikhail\" denote the same name.There are n users registered on the Polycarp's website. Each of them indicated a name represented by the Latin letters. How many distinct names are there among them, if two ambiguities described above are taken into account?Formally, we assume that two words denote the same name, if using the replacements \"u\"\u00a0\u00a0\"oo\" and \"h\"\u00a0\u00a0\"kh\", you can make the words equal. One can make replacements in both directions, in any of the two words an arbitrary number of times. A letter that resulted from the previous replacement can participate in the next replacements.For example, the following pairs of words denote the same name:  \"koouper\" and \"kuooper\". Making the replacements described above, you can make both words to be equal: \"koouper\"  \"kuuper\" and \"kuooper\"  \"kuuper\".  \"khun\" and \"kkkhoon\". With the replacements described above you can make both words to be equal: \"khun\"  \"khoon\" and \"kkkhoon\"  \"kkhoon\"  \"khoon\". For a given list of words, find the minimal number of groups where the words in each group denote the same name.InputThe first line contains integer number n (2\u2009\u2264\u2009n\u2009\u2264\u2009400) \u2014 number of the words in the list.The following n lines contain words, one word per line. Each word consists of only lowercase Latin letters. The length of each word is between 1 and 20 letters inclusive.OutputPrint the minimal number of groups where the words in each group denote the same name.ExamplesInputCopy10mihailoolyanakooooperhoonulyanakooupermikhailkhunkuooperkkkhoonOutputCopy4InputCopy9haritonhkaritonbuoikkkharitonboooibuikharitonbouiboiOutputCopy5InputCopy2alexalexOutputCopy1NoteThere are four groups of words in the first example. Words in each group denote same name:  \"mihail\", \"mikhail\"  \"oolyana\", \"ulyana\"  \"kooooper\", \"koouper\"  \"hoon\", \"khun\", \"kkkhoon\" There are five groups of words in the second example. Words in each group denote same name:  \"hariton\", \"kkkhariton\", \"khariton\"  \"hkariton\"  \"buoi\", \"boooi\", \"boui\"  \"bui\"  \"boi\" In the third example the words are equal, so they denote the same name."], "Not Wool Sequences": ["https://codeforces.com/problemset/problem/238/A", "A. Not Wool Sequencestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA sequence of non-negative integers a1,\u2009a2,\u2009...,\u2009an of length n is called a wool sequence if and only if there exists two integers l and r (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009n) such that . In other words each wool sequence contains a subsequence of consecutive elements with xor equal to 0.The expression  means applying the operation of a bitwise xor to numbers x and y. The given operation exists in all modern programming languages, for example, in languages C++ and Java it is marked as \"^\", in Pascal \u2014 as \"xor\".In this problem you are asked to compute the number of sequences made of n integers from 0 to 2m\u2009-\u20091 that are not a wool sequence. You should print this number modulo 1000000009 (109\u2009+\u20099).InputThe only line of input contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105).OutputPrint the required number of sequences modulo 1000000009 (109\u2009+\u20099) on the only line of output.ExamplesInputCopy3 2OutputCopy6NoteSequences of length 3 made of integers 0, 1, 2 and 3 that are not a wool sequence are (1, 3, 1), (1, 2, 1), (2, 1, 2), (2, 3, 2), (3, 1, 3) and (3, 2, 3)."], "Tree of Life (easy)": ["https://codeforces.com/problemset/problem/690/F1", "F1. Tree of Life (easy)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHeidi has finally found the mythical Tree of Life \u2013 a legendary combinatorial structure which is said to contain a prophecy crucially needed to defeat the undead armies.On the surface, the Tree of Life is just a regular undirected tree well-known from computer science. This means that it is a collection of n points (called vertices), some of which are connected using n\u2009-\u20091 line segments (edges) so that each pair of vertices is connected by a path (a sequence of one or more edges).To decipher the prophecy, Heidi needs to perform a number of steps. The first is counting the number of lifelines in the tree \u2013 these are paths of length 2, i.e., consisting of two edges. Help her!InputThe first line of the input contains a single integer n \u2013 the number of vertices in the tree (1\u2009\u2264\u2009n\u2009\u2264\u200910000). The vertices are labeled with the numbers from 1 to n. Then n\u2009-\u20091 lines follow, each describing one edge using two space-separated numbers a\u2002b \u2013 the labels of the vertices connected by the edge (1\u2009\u2264\u2009a\u2009<\u2009b\u2009\u2264\u2009n). It is guaranteed that the input represents a tree.OutputPrint one integer \u2013 the number of lifelines in the tree.ExamplesInputCopy41 21 31 4OutputCopy3InputCopy51 22 33 43 5OutputCopy4NoteIn the second sample, there are four lifelines: paths between vertices 1 and 3, 2 and 4, 2 and 5, and 4 and 5."], "Elevator": ["https://codeforces.com/problemset/problem/117/A", "A. Elevatortime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnd now the numerous qualifying tournaments for one of the most prestigious Russian contests Russian Codec Cup are over. All n participants who have made it to the finals found themselves in a huge m-floored 108-star hotel. Of course the first thought to come in a place like this is \"How about checking out the elevator?\".The hotel's elevator moves between floors according to one never changing scheme. Initially (at the moment of time 0) the elevator is located on the 1-st floor, then it moves to the 2-nd floor, then \u2014 to the 3-rd floor and so on until it reaches the m-th floor. After that the elevator moves to floor m\u2009-\u20091, then to floor m\u2009-\u20092, and so on until it reaches the first floor. This process is repeated infinitely. We know that the elevator has infinite capacity; we also know that on every floor people get on the elevator immediately. Moving between the floors takes a unit of time.For each of the n participant you are given si, which represents the floor where the i-th participant starts, fi, which represents the floor the i-th participant wants to reach, and ti, which represents the time when the i-th participant starts on the floor si.For each participant print the minimum time of his/her arrival to the floor fi. If the elevator stops on the floor si at the time ti, then the i-th participant can enter the elevator immediately. If the participant starts on the floor si and that's the floor he wanted to reach initially (si\u2009=\u2009fi), then the time of arrival to the floor fi for this participant is considered equal to ti.InputThe first line contains two space-separated integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20092\u2009\u2264\u2009m\u2009\u2264\u2009108). Next n lines contain information about the participants in the form of three space-separated integers si fi ti (1\u2009\u2264\u2009si,\u2009fi\u2009\u2264\u2009m,\u20090\u2009\u2264\u2009ti\u2009\u2264\u2009108), described in the problem statement.OutputPrint n lines each containing one integer \u2014 the time of the arrival for each participant to the required floor.ExamplesInputCopy7 42 4 31 2 02 2 01 2 14 3 51 2 24 2 0OutputCopy91071075InputCopy5 51 5 41 3 11 3 43 1 54 2 5OutputCopy12101087NoteLet's consider the first sample. The first participant starts at floor s\u2009=\u20092 by the time equal to t\u2009=\u20093. To get to the floor f\u2009=\u20094, he has to wait until the time equals 7, that's the time when the elevator will go upwards for the second time. Then the first participant should get on the elevator and go two floors up. In this case the first participant gets to the floor f at time equal to 9. The second participant starts at the time t\u2009=\u20090 on the floor s\u2009=\u20091, enters the elevator immediately, and arrives to the floor f\u2009=\u20092. The third participant doesn't wait for the elevator, because he needs to arrive to the same floor where he starts."], "Presents": ["https://codeforces.com/problemset/problem/54/A", "A. Presentstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Hedgehog likes to give presents to his friend, but no less he likes to receive them.Having received another present today, the Hedgehog suddenly understood that he has no place to put it as there was no room left on the special shelf in the cupboard. He will have to choose another shelf, but which one should he choose, how large should it be?In order to get to know this, the Hedgehog asks you to write him a program that will count the estimated number of presents that he will receive during the following N days. Besides, he is guided by the principle:   on each holiday day the Hedgehog will necessarily receive a present,  he receives presents at least every K days (i.e., if he received a present on the i-th day, he will receive the next present no later than on the i\u2009+\u2009K-th day).  For the given N and K, as well as the list of holidays among the following N days count the minimal number of presents that could be given to the Hedgehog. The number of today's day is zero, and you should regard today's present as already given (i.e., you shouldn't count it in the answer).InputThe first line contains integers N and K (1\u2009\u2264\u2009N\u2009\u2264\u2009365, 1\u2009\u2264\u2009K\u2009\u2264\u2009N).The second line contains a number C which represents the number of holidays (0\u2009\u2264\u2009C\u2009\u2264\u2009N). Then in the same line follow C numbers ranging from 1 to N which are the numbers of holiday days. The numbers are given in the increasing order, without repeating numbers among them.OutputPrint a single number \u2014 the minimal number of presents the Hedgehog will receive over the following N days.ExamplesInputCopy5 21 3OutputCopy3InputCopy10 13 6 7 8OutputCopy10"], "Spyke Chatting": ["https://codeforces.com/problemset/problem/413/B", "B. Spyke Chattingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe R2 company has n employees working for it. The work involves constant exchange of ideas, sharing the stories of success and upcoming challenging. For that, R2 uses a famous instant messaging program Spyke.R2 has m Spyke chats just to discuss all sorts of issues. In each chat, some group of employees exchanges messages daily. An employee can simultaneously talk in multiple chats. If some employee is in the k-th chat, he can write messages to this chat and receive notifications about messages from this chat. If an employee writes a message in the chat, all other participants of the chat receive a message notification.The R2 company is conducting an audit. Now the specialists study effective communication between the employees. For this purpose, they have a chat log and the description of chat structure. You, as one of audit specialists, are commissioned to write a program that will use this data to determine the total number of message notifications received by each employee.InputThe first line contains three space-separated integers n, m and k (2\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7104;\u00a01\u2009\u2264\u2009m\u2009\u2264\u200910;\u00a01\u2009\u2264\u2009k\u2009\u2264\u20092\u00b7105) \u2014 the number of the employees, the number of chats and the number of events in the log, correspondingly. Next n lines contain matrix a of size n\u2009\u00d7\u2009m, consisting of numbers zero and one. The element of this matrix, recorded in the j-th column of the i-th line, (let's denote it as aij) equals 1, if the i-th employee is the participant of the j-th chat, otherwise the element equals 0. Assume that the employees are numbered from 1 to n and the chats are numbered from 1 to m.Next k lines contain the description of the log events. The i-th line contains two space-separated integers xi and yi (1\u2009\u2264\u2009xi\u2009\u2264\u2009n;\u00a01\u2009\u2264\u2009yi\u2009\u2264\u2009m) which mean that the employee number xi sent one message to chat number yi. It is guaranteed that employee number xi is a participant of chat yi. It is guaranteed that each chat contains at least two employees.OutputPrint in the single line n space-separated integers, where the i-th integer shows the number of message notifications the i-th employee receives.ExamplesInputCopy3 4 51 1 1 11 0 1 11 1 0 01 13 11 32 43 2OutputCopy3 3 1 InputCopy4 3 40 1 11 0 11 1 10 0 01 22 13 11 3OutputCopy0 2 3 0 "], "Cheaterius's Problem": ["https://codeforces.com/problemset/problem/51/A", "A. Cheaterius's Problemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputCheaterius is a famous in all the Berland astrologist, magician and wizard, and he also is a liar and a cheater. One of his latest inventions is Cheaterius' amulets! They bring luck and wealth, but are rather expensive. Cheaterius makes them himself. The technology of their making is kept secret. But we know that throughout long nights Cheaterius glues together domino pairs with super glue to get squares 2\u2009\u00d7\u20092 which are the Cheaterius' magic amulets!   That's what one of Cheaterius's amulets looks like After a hard night Cheaterius made n amulets. Everyone of them represents a square 2\u2009\u00d7\u20092, every quarter contains 1 to 6 dots. Now he wants sort them into piles, every pile must contain similar amulets. Two amulets are called similar if they can be rotated by 90, 180 or 270 degrees so that the following condition is met: the numbers of dots in the corresponding quarters should be the same. It is forbidden to turn over the amulets.Write a program that by the given amulets will find the number of piles on Cheaterius' desk.InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000), where n is the number of amulets. Then the amulet's descriptions are contained. Every description occupies two lines and contains two numbers (from 1 to 6) in each line. Between every pair of amulets the line \"**\" is located.OutputPrint the required number of piles.ExamplesInputCopy43123**3123**1332**3213OutputCopy1InputCopy45126**5435**2561**4553OutputCopy2"], "Pacifist frogs": ["https://codeforces.com/problemset/problem/39/F", "F. Pacifist frogstime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputThumbelina has had an accident. She has found herself on a little island in the middle of a swamp and wants to get to the shore very much.One can get to the shore only by hills that are situated along a straight line that connects the little island with the shore. Let us assume that the hills are numbered from 1 to n and the number of a hill is equal to the distance in meters between it and the island. The distance between the n-th hill and the shore is also 1 meter.Thumbelina is too small to make such jumps. Fortunately, a family of frogs living in the swamp suggests to help her. Each frog agrees to give Thumbelina a ride but Thumbelina should choose only one frog. Each frog has a certain jump length. If Thumbelina agrees to accept help from a frog whose jump length is d, the frog will jump from the island on the hill d, then \u2014 on the hill 2d, then 3d and so on until they get to the shore (i.e. find itself beyond the hill n).However, there is one more problem: mosquitoes also live in the swamp. At the moment they have a siesta, and they are having a nap on some hills. If the frog jumps on a hill with a mosquito the frog will smash it. The frogs Thumbelina has met are pacifists, so they will find the death of each mosquito very much sad. Help Thumbelina choose a frog that will bring her to the shore and smash as small number of mosquitoes as possible.InputThe first line contains three integers n, m and k (1\u2009\u2264\u2009n\u2009\u2264\u2009109, 1\u2009\u2264\u2009m,\u2009k\u2009\u2264\u2009100) \u2014 the number of hills, frogs and mosquitoes respectively. The second line contains m integers di (1\u2009\u2264\u2009di\u2009\u2264\u2009109) \u2014 the lengths of the frogs\u2019 jumps. The third line contains k integers \u2014 the numbers of the hills on which each mosquito is sleeping. No more than one mosquito can sleep on each hill. The numbers in the lines are separated by single spaces.OutputIn the first line output the number of frogs that smash the minimal number of mosquitoes, in the second line \u2014 their numbers in increasing order separated by spaces. The frogs are numbered from 1 to m in the order of the jump length given in the input data.ExamplesInputCopy5 3 52 3 41 2 3 4 5OutputCopy22 3InputCopy1000000000 2 32 5999999995 999999998 999999996OutputCopy12"], "Factorial": ["https://codeforces.com/problemset/problem/64/A", "A. Factorialtime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputPrint the factorial of the given integer number n. The factorial of n is equal to 1\u00b72\u00b7...\u00b7n.InputThe only line contains n (1\u2009\u2264\u2009n\u2009\u2264\u200910).OutputPrint the factorial of n.ExamplesInputCopy3OutputCopy6InputCopy5OutputCopy120"], "Lazy Caterer Sequence": ["https://codeforces.com/problemset/problem/661/A", "A. Lazy Caterer Sequencetime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputLazy caterer sequence is defined as the maximum number of pieces formed when slicing a convex pancake with n cuts (each cut is a straight line). The formula is Cn\u2009=\u2009n\u00b7(n\u2009+\u20091)\u2009/\u20092\u2009+\u20091. You are given n; calculate n-th element of the sequence.InputThe only line of the input contains an integer n (0\u2009\u2264\u2009n\u2009\u2264\u2009100).OutputOutput the n-th element of lazy caterer sequence.ExamplesInputCopy2OutputCopy4InputCopy5OutputCopy16"], "Generate superposition of zero state and a basis state": ["https://codeforces.com/problemset/problem/1002/A2", "A2. Generate superposition of zero state and a basis statetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given N qubits (1\u2009\u2264\u2009N\u2009\u2264\u20098) in zero state . You are also given a bitstring bits which describes a non-zero basis state on N qubits .Your task is to generate a state which is an equal superposition of  and the given basis state:You have to implement an operation which takes the following inputs: an array of qubits qs, an arrays of boolean values bits representing the basis state . This array will have the same length as the array of qubits. The first element of this array bits[0] will be true.The operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.An array of boolean values represents a basis state as follows: the i-th element of the array is true if the i-th qubit is in state , and false if it is in state . For example, array [true; false] describes 2-qubit state , and in this case the resulting state should be .Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (qs : Qubit[], bits : Bool[]) : ()    {        body        {            // your code here        }    }}"], "Distinguish multi-qubit basis states": ["https://codeforces.com/problemset/problem/1001/F", "F. Distinguish multi-qubit basis statestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given N qubits which are guaranteed to be in one of two basis states on N qubits. You are also given two bitstrings bits0 and bits1 which describe these basis states.Your task is to perform necessary operations and measurements to figure out which state it was and to return 0 if it was the state described with bits0 or 1 if it was the state described with bits1. The state of the qubits after the operations does not matter.InputYou have to implement an operation which takes the following inputs: an array of qubits qs, two arrays of boolean values bits0 and bits1, representing the basis states in which the qubits can be. These arrays will have the same length as the array of qubits. bits0 and bits1 will differ in at least one position.An array of boolean values represents a basis state as follows: the i-th element of the array is true if the i-th qubit is in state , and false if it is in state . For example, array [true; false] describes 2-qubit state .Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (qs : Qubit[], bits0 : Bool[], bits1 : Bool[]) : Int    {        body        {            // your code here        }    }}"], "Epic Novel": ["https://codeforces.com/problemset/problem/1571/B", "B. Epic Noveltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlex has bought a new novel that was published in nn volumes. He has read these volumes one by one, and each volume has taken him several (maybe one) full days to read. So, on the first day, he was reading the first volume, and on each of the following days, he was reading either the same volume he had been reading on the previous day, or the next volume.Let vivi be the number of the volume Alex was reading on the ii-th day. Here are some examples:  one of the possible situations is v1=1v1=1, v2=1v2=1, v3=2v3=2, v4=3v4=3, v5=3v5=3\u00a0\u2014 this situation means that Alex has spent two days (11-st and 22-nd) on the first volume, one day (33-rd) on the second volume, and two days (44-th and 55-th) on the third volume;  a situation v1=2v1=2, v2=2v2=2, v3=3v3=3 is impossible, since Alex started with the first volume (so v1v1 cannot be anything but 11);  a situation v1=1v1=1, v2=2v2=2, v3=3v3=3, v4=1v4=1 is impossible, since Alex won't return to the first volume after reading the third one;  a situation v1=1v1=1, v2=3v2=3 is impossible, since Alex doesn't skip volumes. You know that Alex was reading the volume vava on the day aa, and the volume vcvc on the day cc. Now you want to guess which volume was he reading on the day bb, which is between the days aa and cc (so a<b<ca<b<c). There may be some ambiguity, so you want to make any valid guess (i.\u2009e. choose some volume number vbvb so it's possible that Alex was reading volume vava on day aa, volume vbvb on day bb, and volume vcvc on day cc).InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641001\u2264t\u2264100). Description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22641001\u2264n\u2264100)\u00a0\u2014 the number of volumes the novel consists of.The second line of each test case contains two integers aa and vava (1\u2264a\u2264981\u2264a\u226498; 1\u2264va\u2264a1\u2264va\u2264a) denoting that Alex was reading volume vava at day aa.The third line of each test case contains two integers cc and vcvc (a+2\u2264c\u2264100a+2\u2264c\u2264100; va\u2264vc\u2264cva\u2264vc\u2264c) denoting that Alex was reading volume vcvc at day cc.The fourth line of each test case contains one integer bb (a<b<ca<b<c)\u00a0\u2014 the day you are interested in.It's guaranteed that the input is not controversial, in other words, Alex could read volume vava at day aa and volume vcvc at day cc.OutputFor each test case, print the possible index of volume Alex could read at day bb. If there are multiple answers, print any.ExampleInputCopy4\n1\n1 1\n100 1\n99\n4\n10 1\n20 4\n16\n100\n1 1\n100 100\n42\n100\n1 1\n100 2\n99\nOutputCopy1\n2\n42\n1NoteIn the first test case, since Alex was reading volume 11 both at day 11 and at day 100100 then he was reading volume 11 at any day between them.In the second test case, Alex could read any volume from 11 to 44 at day 1616. For example, he could read volume 11 from day 11 to day 1515, volume 22 at days 1616 and 1717, volume 33 at day 1818 and volume 44 at days 1919 and 2020.In the third test case, there is only one possible situation: Alex read one volume per day, so at day 4242 he read volume 4242."], "Distinguish zero state and W state": ["https://codeforces.com/problemset/problem/1002/B1", "B1. Distinguish zero state and W statetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given N qubits (2\u2009\u2264\u2009N\u2009\u2264\u20098) which are guaranteed to be in one of the two states:   state, or  state. Your task is to perform necessary operations and measurements to figure out which state it was and to return 0 if it was  state or 1 if it was W state. The state of the qubits after the operations does not matter.You have to implement an operation which takes an array of N qubits as an input and returns an integer. Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (qs : Qubit[]) : Int    {        body        {            // your code here        }    }}"], "A + Reverse B": ["https://codeforces.com/problemset/problem/188/B", "B. A + Reverse Btime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given numbers a and b. Calculate the sum of a and reverse of b. A reverse of a number is a number which contains the same digits in reverse order. For example, reverse of 230 is 32, and reverse of 0 is 0.InputThe input contains two integers a and b (0\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009109), separated by a single space. The numbers are given without leading zeros.OutputOutput the sum of a and reverse of b.ExamplesInputCopy5 15OutputCopy56InputCopy73 9180OutputCopy892"], "Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2": ["https://codeforces.com/problemset/problem/1002/D2", "D2. Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a quantum oracle on N qubits which implements the following function: Here  (a vector of N integers, each of which can be 0 or 1), and  is a vector of N 1s.For an explanation on how this type of quantum oracles works, see Introduction to quantum oracles.You have to implement an operation which takes the following inputs: an array of N qubits x in arbitrary state (input register), 1\u2009\u2264\u2009N\u2009\u2264\u20098, a qubit y in arbitrary state (output qubit), an array of N integers b, representing the vector . Each element of b will be 0 or 1.The operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (x : Qubit[], y : Qubit, b : Int[]) : ()    {        body        {            // your code here        }    }}"], "Given Length and Sum of Digits...": ["https://codeforces.com/problemset/problem/489/C", "C. Given Length and Sum of Digits...time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a positive integer m and a non-negative integer s. Your task is to find the smallest and the largest of the numbers that have length m and sum of digits s. The required numbers should be non-negative integers written in the decimal base without leading zeroes.InputThe single line of the input contains a pair of integers m, s (1\u2009\u2264\u2009m\u2009\u2264\u2009100,\u20090\u2009\u2264\u2009s\u2009\u2264\u2009900) \u2014 the length and the sum of the digits of the required numbers.OutputIn the output print the pair of the required non-negative integer numbers \u2014 first the minimum possible number, then \u2014 the maximum possible number. If no numbers satisfying conditions required exist, print the pair of numbers \"-1 -1\" (without the quotes).ExamplesInputCopy2 15OutputCopy69 96InputCopy3 0OutputCopy-1 -1"], "Two Buttons": ["https://codeforces.com/problemset/problem/520/B", "B. Two Buttonstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has found a strange device. On the front panel of a device there are: a red button, a blue button and a display showing some positive integer. After clicking the red button, device multiplies the displayed number by two. After clicking the blue button, device subtracts one from the number on the display. If at some point the number stops being positive, the device breaks down. The display can show arbitrarily large numbers. Initially, the display shows number n.Bob wants to get number m on the display. What minimum number of clicks he has to make in order to achieve this result?InputThe first and the only line of the input contains two distinct integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009104), separated by a space .OutputPrint a single number \u2014 the minimum number of times one needs to push the button required to get the number m out of number n.ExamplesInputCopy4 6OutputCopy2InputCopy10 1OutputCopy9NoteIn the first example you need to push the blue button once, and then push the red button once.In the second example, doubling the number is unnecessary, so we need to push the blue button nine times."], "Books": ["https://codeforces.com/problemset/problem/279/B", "B. Bookstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWhen Valera has got some free time, he goes to the library to read some books. Today he's got t free minutes to read. That's why Valera took n books in the library and for each book he estimated the time he is going to need to read it. Let's number the books by integers from 1 to n. Valera needs ai minutes to read the i-th book.Valera decided to choose an arbitrary book with number i and read the books one by one, starting from this book. In other words, he will first read book number i, then book number i\u2009+\u20091, then book number i\u2009+\u20092 and so on. He continues the process until he either runs out of the free time or finishes reading the n-th book. Valera reads each book up to the end, that is, he doesn't start reading the book if he doesn't have enough free time to finish reading it. Print the maximum number of books Valera can read.InputThe first line contains two integers n and t (1\u2009\u2264\u2009n\u2009\u2264\u2009105;\u00a01\u2009\u2264\u2009t\u2009\u2264\u2009109) \u2014 the number of books and the number of free minutes Valera's got. The second line contains a sequence of n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009104), where number ai shows the number of minutes that the boy needs to read the i-th book.OutputPrint a single integer \u2014 the maximum number of books Valera can read.ExamplesInputCopy4 53 1 2 1OutputCopy3InputCopy3 32 2 3OutputCopy1"], "Exams": ["https://codeforces.com/problemset/problem/479/C", "C. Examstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputStudent Valera is an undergraduate student at the University. His end of term exams are approaching and he is to pass exactly n exams. Valera is a smart guy, so he will be able to pass any exam he takes on his first try. Besides, he can take several exams on one day, and in any order.According to the schedule, a student can take the exam for the i-th subject on the day number ai. However, Valera has made an arrangement with each teacher and the teacher of the i-th subject allowed him to take an exam before the schedule time on day bi (bi\u2009<\u2009ai). Thus, Valera can take an exam for the i-th subject either on day ai, or on day bi. All the teachers put the record of the exam in the student's record book on the day of the actual exam and write down the date of the mark as number ai.Valera believes that it would be rather strange if the entries in the record book did not go in the order of non-decreasing date. Therefore Valera asks you to help him. Find the minimum possible value of the day when Valera can take the final exam if he takes exams so that all the records in his record book go in the order of non-decreasing date.InputThe first line contains a single positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095000) \u2014 the number of exams Valera will take.Each of the next n lines contains two positive space-separated integers ai and bi (1\u2009\u2264\u2009bi\u2009<\u2009ai\u2009\u2264\u2009109) \u2014 the date of the exam in the schedule and the early date of passing the i-th exam, correspondingly.OutputPrint a single integer \u2014 the minimum possible number of the day when Valera can take the last exam if he takes all the exams so that all the records in his record book go in the order of non-decreasing date.ExamplesInputCopy35 23 14 2OutputCopy2InputCopy36 15 24 3OutputCopy6NoteIn the first sample Valera first takes an exam in the second subject on the first day (the teacher writes down the schedule date that is 3). On the next day he takes an exam in the third subject (the teacher writes down the schedule date, 4), then he takes an exam in the first subject (the teacher writes down the mark with date 5). Thus, Valera takes the last exam on the second day and the dates will go in the non-decreasing order: 3, 4, 5.In the second sample Valera first takes an exam in the third subject on the fourth day. Then he takes an exam in the second subject on the fifth day. After that on the sixth day Valera takes an exam in the first subject."], "Vacations": ["https://codeforces.com/problemset/problem/698/A", "A. Vacationstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has n days of vacations! So he decided to improve his IT skills and do sport. Vasya knows the following information about each of this n days: whether that gym opened and whether a contest was carried out in the Internet on that day. For the i-th day there are four options:  on this day the gym is closed and the contest is not carried out;  on this day the gym is closed and the contest is carried out;  on this day the gym is open and the contest is not carried out;  on this day the gym is open and the contest is carried out. On each of days Vasya can either have a rest or write the contest (if it is carried out on this day), or do sport (if the gym is open on this day).Find the minimum number of days on which Vasya will have a rest (it means, he will not do sport and write the contest at the same time). The only limitation that Vasya has \u2014 he does not want to do the same activity on two consecutive days: it means, he will not do sport on two consecutive days, and write the contest on two consecutive days.InputThe first line contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of days of Vasya's vacations.The second line contains the sequence of integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u20093) separated by space, where:   ai equals 0, if on the i-th day of vacations the gym is closed and the contest is not carried out;  ai equals 1, if on the i-th day of vacations the gym is closed, but the contest is carried out;  ai equals 2, if on the i-th day of vacations the gym is open and the contest is not carried out;  ai equals 3, if on the i-th day of vacations the gym is open and the contest is carried out.OutputPrint the minimum possible number of days on which Vasya will have a rest. Remember that Vasya refuses:  to do sport on any two consecutive days,  to write the contest on any two consecutive days. ExamplesInputCopy41 3 2 0OutputCopy2InputCopy71 3 3 2 1 2 3OutputCopy0InputCopy22 2OutputCopy1NoteIn the first test Vasya can write the contest on the day number 1 and do sport on the day number 3. Thus, he will have a rest for only 2 days.In the second test Vasya should write contests on days number 1, 3, 5 and 7, in other days do sport. Thus, he will not have a rest for a single day.In the third test Vasya can do sport either on a day number 1 or number 2. He can not do sport in two days, because it will be contrary to the his limitation. Thus, he will have a rest for only one day."], "Phoenix and Beauty": ["https://codeforces.com/problemset/problem/1348/B", "B. Phoenix and Beautytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPhoenix loves beautiful arrays. An array is beautiful if all its subarrays of length\u00a0kk have the same sum. A subarray of an array is any sequence of consecutive elements.Phoenix currently has an array aa of length nn. He wants to insert some number of integers, possibly zero, into his array such that it becomes beautiful. The inserted integers must be between 11 and nn inclusive. Integers may be inserted anywhere (even before the first or after the last element), and he is not trying to minimize the number of inserted integers.InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u2264501\u2264t\u226450)\u00a0\u2014 the number of test cases.The first line of each test case contains two integers nn and kk (1\u2264k\u2264n\u22641001\u2264k\u2264n\u2264100).The second line of each test case contains nn space-separated integers (1\u2264ai\u2264n1\u2264ai\u2264n)\u00a0\u2014 the array that Phoenix currently has. This array may or may not be already beautiful.OutputFor each test case, if it is impossible to create a beautiful array, print -1. Otherwise, print two lines.The first line should contain the length of the beautiful array mm (n\u2264m\u2264104n\u2264m\u2264104). You don't need to minimize mm.The second line should contain mm space-separated integers (1\u2264bi\u2264n1\u2264bi\u2264n)\u00a0\u2014 a beautiful array that Phoenix can obtain after inserting some, possibly zero, integers into his array aa. You may print integers that weren't originally in array aa.If there are multiple solutions, print any. It's guaranteed that if we can make array aa beautiful, we can always make it with resulting length no more than 104104.ExampleInputCopy4\n4 2\n1 2 2 1\n4 3\n1 2 2 1\n3 2\n1 2 3\n4 4\n4 3 4 2\nOutputCopy5\n1 2 1 2 1\n4\n1 2 2 1\n-1\n7\n4 3 2 1 4 3 2NoteIn the first test case, we can make array aa beautiful by inserting the integer 11 at index 33 (in between the two existing 22s). Now, all subarrays of length k=2k=2 have the same sum 33. There exists many other possible solutions, for example:   2,1,2,1,2,12,1,2,1,2,1  1,2,1,2,1,21,2,1,2,1,2 In the second test case, the array is already beautiful: all subarrays of length k=3k=3 have the same sum 55.In the third test case, it can be shown that we cannot insert numbers to make array aa beautiful.In the fourth test case, the array bb shown is beautiful and all subarrays of length k=4k=4 have the same sum 1010. There exist other solutions also."], "Drazil and Factorial": ["https://codeforces.com/problemset/problem/515/C", "C. Drazil and Factorialtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDrazil is playing a math game with Varda.Let's define  for positive integer x as a product of factorials of its digits. For example, .First, they choose a decimal number a consisting of n digits that contains at least one digit larger than 1. This number may possibly start with leading zeroes. Then they should find maximum positive number x satisfying following two conditions:1. x doesn't contain neither digit 0 nor digit 1.2.  = .Help friends find such number.InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u200915) \u2014 the number of digits in a.The second line contains n digits of a. There is at least one digit in a that is larger than 1. Number a may possibly contain leading zeroes.OutputOutput a maximum possible integer satisfying the conditions above. There should be no zeroes and ones in this number decimal representation.ExamplesInputCopy41234OutputCopy33222InputCopy3555OutputCopy555NoteIn the first case, "], "Amr and Pins": ["https://codeforces.com/problemset/problem/507/B", "B. Amr and Pinstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAmr loves Geometry. One day he came up with a very interesting problem.Amr has a circle of radius r and center in point (x,\u2009y). He wants the circle center to be in new position (x',\u2009y').In one step Amr can put a pin to the border of the circle in a certain point, then rotate the circle around that pin by any angle and finally remove the pin.Help Amr to achieve his goal in minimum number of steps.InputInput consists of 5 space-separated integers r, x, y, x' y' (1\u2009\u2264\u2009r\u2009\u2264\u2009105, \u2009-\u2009105\u2009\u2264\u2009x,\u2009y,\u2009x',\u2009y'\u2009\u2264\u2009105), circle radius, coordinates of original center of the circle and coordinates of destination center of the circle respectively.OutputOutput a single integer \u2014 minimum number of steps required to move the center of the circle to the destination point.ExamplesInputCopy2 0 0 0 4OutputCopy1InputCopy1 1 1 4 4OutputCopy3InputCopy4 5 6 5 6OutputCopy0NoteIn the first sample test the optimal way is to put a pin at point (0,\u20092) and rotate the circle by 180 degrees counter-clockwise (or clockwise, no matter)."], "Pair of Topics": ["https://codeforces.com/problemset/problem/1324/D", "D. Pair of Topicstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe next lecture in a high school requires two topics to be discussed. The ii-th topic is interesting by aiai units for the teacher and by bibi units for the students.The pair of topics ii and jj (i<ji<j) is called good if ai+aj>bi+bjai+aj>bi+bj (i.e. it is more interesting for the teacher).Your task is to find the number of good pairs of topics.InputThe first line of the input contains one integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the number of topics.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is the interestingness of the ii-th topic for the teacher.The third line of the input contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u22641091\u2264bi\u2264109), where bibi is the interestingness of the ii-th topic for the students.OutputPrint one integer \u2014 the number of good pairs of topic.ExamplesInputCopy5\n4 8 2 6 2\n4 5 4 1 3\nOutputCopy7\nInputCopy4\n1 3 2 4\n1 3 2 4\nOutputCopy0\n"], "I Hate 1111": ["https://codeforces.com/problemset/problem/1526/B", "B. I Hate 1111time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an integer xx. Can you make xx by summing up some number of 11,111,1111,11111,\u202611,111,1111,11111,\u2026? (You can use any number among them any number of times).For instance,   33=11+11+1133=11+11+11  144=111+11+11+11144=111+11+11+11 InputThe first line of input contains a single integer tt (1\u2264t\u226410000)(1\u2264t\u226410000) \u2014 the number of testcases.The first and only line of each testcase contains a single integer xx (1\u2264x\u2264109)(1\u2264x\u2264109) \u2014 the number you have to make.OutputFor each testcase, you should output a single string. If you can make xx, output \"YES\" (without quotes). Otherwise, output \"NO\".You can print each letter of \"YES\" and \"NO\" in any case (upper or lower).ExampleInputCopy3\n33\n144\n69\nOutputCopyYES\nYES\nNO\nNoteWays to make 3333 and 144144 were presented in the statement. It can be proved that we can't present 6969 this way."], "Number Game": ["https://codeforces.com/problemset/problem/1370/C", "C. Number Gametime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAshishgup and FastestFinger play a game. They start with a number nn and play in turns. In each turn, a player can make any one of the following moves:  Divide nn by any of its odd divisors greater than 11.  Subtract 11 from nn if nn is greater than 11. Divisors of a number include the number itself.The player who is unable to make a move loses the game.Ashishgup moves first. Determine the winner of the game if both of them play optimally.InputThe first line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100) \u00a0\u2014 the number of test cases. The description of the test cases follows.The only line of each test case contains a single integer \u00a0\u2014 nn (1\u2264n\u22641091\u2264n\u2264109).OutputFor each test case, print \"Ashishgup\" if he wins, and \"FastestFinger\" otherwise (without quotes).ExampleInputCopy7\n1\n2\n3\n4\n5\n6\n12\nOutputCopyFastestFinger\nAshishgup\nAshishgup\nFastestFinger\nAshishgup\nFastestFinger\nAshishgup\nNoteIn the first test case, n=1n=1, Ashishgup cannot make a move. He loses.In the second test case, n=2n=2, Ashishgup subtracts 11 on the first move. Now n=1n=1, FastestFinger cannot make a move, so he loses.In the third test case, n=3n=3, Ashishgup divides by 33 on the first move. Now n=1n=1, FastestFinger cannot make a move, so he loses.In the last test case, n=12n=12, Ashishgup divides it by 33. Now n=4n=4, FastestFinger is forced to subtract 11, and Ashishgup gets 33, so he wins by dividing it by 33."], "Subsequence Hate": ["https://codeforces.com/problemset/problem/1363/B", "B. Subsequence Hatetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputShubham has a binary string ss. A binary string is a string containing only characters \"0\" and \"1\".He can perform the following operation on the string any amount of times:   Select an index of the string, and flip the character at that index. This means, if the character was \"0\", it becomes \"1\", and vice versa. A string is called good if it does not contain \"010\" or \"101\" as a subsequence \u00a0\u2014 for instance, \"1001\" contains \"101\" as a subsequence, hence it is not a good string, while \"1000\" doesn't contain neither \"010\" nor \"101\" as subsequences, so it is a good string.What is the minimum number of operations he will have to perform, so that the string becomes good? It can be shown that with these operations we can make any string good.A string aa is a subsequence of a string bb if aa can be obtained from bb by deletion of several (possibly, zero or all) characters.InputThe first line of the input contains a single integer tt (1\u2264t\u2264100)(1\u2264t\u2264100)\u00a0\u2014 the number of test cases.Each of the next tt lines contains a binary string ss (1\u2264|s|\u22641000)(1\u2264|s|\u22641000).OutputFor every string, output the minimum number of operations required to make it good.ExampleInputCopy7\n001\n100\n101\n010\n0\n1\n001100\nOutputCopy0\n0\n1\n1\n0\n0\n2\nNoteIn test cases 11, 22, 55, 66 no operations are required since they are already good strings.For the 33rd test case: \"001\" can be achieved by flipping the first character \u00a0\u2014 and is one of the possible ways to get a good string.For the 44th test case: \"000\" can be achieved by flipping the second character \u00a0\u2014 and is one of the possible ways to get a good string.For the 77th test case: \"000000\" can be achieved by flipping the third and fourth characters \u00a0\u2014 and is one of the possible ways to get a good string."], "Rotation Matching": ["https://codeforces.com/problemset/problem/1365/C", "C. Rotation Matchingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter the mysterious disappearance of Ashish, his two favourite disciples Ishika and Hriday, were each left with one half of a secret message. These messages can each be represented by a permutation of size nn. Let's call them aa and bb.Note that a permutation of nn elements is a sequence of numbers a1,a2,\u2026,ana1,a2,\u2026,an, in which every number from 11 to nn appears exactly once. The message can be decoded by an arrangement of sequence aa and bb, such that the number of matching pairs of elements between them is maximum. A pair of elements aiai and bjbj is said to match if:   i=ji=j, that is, they are at the same index.  ai=bjai=bj His two disciples are allowed to perform the following operation any number of times:   choose a number kk and cyclically shift one of the permutations to the left or right kk times. A single cyclic shift to the left on any permutation cc is an operation that sets c1:=c2,c2:=c3,\u2026,cn:=c1c1:=c2,c2:=c3,\u2026,cn:=c1 simultaneously. Likewise, a single cyclic shift to the right on any permutation cc is an operation that sets c1:=cn,c2:=c1,\u2026,cn:=cn\u22121c1:=cn,c2:=c1,\u2026,cn:=cn\u22121 simultaneously.Help Ishika and Hriday find the maximum number of pairs of elements that match after performing the operation any (possibly zero) number of times.InputThe first line of the input contains a single integer nn (1\u2264n\u22642\u22c5105)(1\u2264n\u22642\u22c5105)\u00a0\u2014 the size of the arrays.The second line contains nn integers a1a1, a2a2, ..., anan (1\u2264ai\u2264n)(1\u2264ai\u2264n) \u2014 the elements of the first permutation.The third line contains nn integers b1b1, b2b2, ..., bnbn (1\u2264bi\u2264n)(1\u2264bi\u2264n) \u2014 the elements of the second permutation.OutputPrint the maximum number of matching pairs of elements after performing the above operations some (possibly zero) times.ExamplesInputCopy5\n1 2 3 4 5\n2 3 4 5 1\nOutputCopy5InputCopy5\n5 4 3 2 1\n1 2 3 4 5\nOutputCopy1InputCopy4\n1 3 2 4\n4 2 3 1\nOutputCopy2NoteFor the first case: bb can be shifted to the right by k=1k=1. The resulting permutations will be {1,2,3,4,5}{1,2,3,4,5} and {1,2,3,4,5}{1,2,3,4,5}.For the second case: The operation is not required. For all possible rotations of aa and bb, the number of matching pairs won't exceed 11.For the third case: bb can be shifted to the left by k=1k=1. The resulting permutations will be {1,3,2,4}{1,3,2,4} and {2,3,1,4}{2,3,1,4}. Positions 22 and 44 have matching pairs of elements. For all possible rotations of aa and bb, the number of matching pairs won't exceed 22."], "Zero Remainder Array": ["https://codeforces.com/problemset/problem/1374/D", "D. Zero Remainder Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn positive integers.Initially, you have an integer x=0x=0. During one move, you can do one of the following two operations:  Choose exactly one ii from 11 to nn and increase aiai by xx (ai:=ai+xai:=ai+x), then increase xx by 11 (x:=x+1x:=x+1).  Just increase xx by 11 (x:=x+1x:=x+1). The first operation can be applied no more than once to each ii from 11 to nn.Your task is to find the minimum number of moves required to obtain such an array that each its element is divisible by kk (the value kk is given).You have to answer tt independent test cases. InputThe first line of the input contains one integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u2014 the number of test cases. Then tt test cases follow.The first line of the test case contains two integers nn and kk (1\u2264n\u22642\u22c5105;1\u2264k\u22641091\u2264n\u22642\u22c5105;1\u2264k\u2264109) \u2014 the length of aa and the required divisior. The second line of the test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is the ii-th element of aa.It is guaranteed that the sum of nn does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105).OutputFor each test case, print the answer \u2014 the minimum number of moves required to obtain such an array that each its element is divisible by kk.ExampleInputCopy5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\nOutputCopy6\n18\n0\n227\n8\nNoteConsider the first test case of the example:  x=0x=0, a=[1,2,1,3]a=[1,2,1,3]. Just increase xx;  x=1x=1, a=[1,2,1,3]a=[1,2,1,3]. Add xx to the second element and increase xx;  x=2x=2, a=[1,3,1,3]a=[1,3,1,3]. Add xx to the third element and increase xx;  x=3x=3, a=[1,3,3,3]a=[1,3,3,3]. Add xx to the fourth element and increase xx;  x=4x=4, a=[1,3,3,6]a=[1,3,3,6]. Just increase xx;  x=5x=5, a=[1,3,3,6]a=[1,3,3,6]. Add xx to the first element and increase xx;  x=6x=6, a=[6,3,3,6]a=[6,3,3,6]. We obtained the required array. Note that you can't add xx to the same element more than once."], "Basketball Exercise": ["https://codeforces.com/problemset/problem/1195/C", "C. Basketball Exercisetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputFinally, a basketball court has been opened in SIS, so Demid has decided to hold a basketball exercise session. 2\u22c5n2\u22c5n students have come to Demid's exercise session, and he lined up them into two rows of the same size (there are exactly nn people in each row). Students are numbered from 11 to nn in each row in order from left to right.  Now Demid wants to choose a team to play basketball. He will choose players from left to right, and the index of each chosen player (excluding the first one taken) will be strictly greater than the index of the previously chosen player. To avoid giving preference to one of the rows, Demid chooses students in such a way that no consecutive chosen students belong to the same row. The first student can be chosen among all 2n2n students (there are no additional constraints), and a team can consist of any number of students. Demid thinks, that in order to compose a perfect team, he should choose students in such a way, that the total height of all chosen students is maximum possible. Help Demid to find the maximum possible total height of players in a team he can choose.InputThe first line of the input contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of students in each row.The second line of the input contains nn integers h1,1,h1,2,\u2026,h1,nh1,1,h1,2,\u2026,h1,n (1\u2264h1,i\u22641091\u2264h1,i\u2264109), where h1,ih1,i is the height of the ii-th student in the first row.The third line of the input contains nn integers h2,1,h2,2,\u2026,h2,nh2,1,h2,2,\u2026,h2,n (1\u2264h2,i\u22641091\u2264h2,i\u2264109), where h2,ih2,i is the height of the ii-th student in the second row.OutputPrint a single integer \u2014 the maximum possible total height of players in a team Demid can choose.ExamplesInputCopy5\n9 3 5 7 3\n5 8 1 4 5\nOutputCopy29\nInputCopy3\n1 2 9\n10 1 1\nOutputCopy19\nInputCopy1\n7\n4\nOutputCopy7\nNoteIn the first example Demid can choose the following team as follows:   In the second example Demid can choose the following team as follows:   "], "Element Extermination": ["https://codeforces.com/problemset/problem/1375/C", "C. Element Exterminationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of length nn, which initially is a permutation of numbers from 11 to nn. In one operation, you can choose an index ii (1\u2264i<n1\u2264i<n) such that ai<ai+1ai<ai+1, and remove either aiai or ai+1ai+1 from the array (after the removal, the remaining parts are concatenated). For example, if you have the array [1,3,2][1,3,2], you can choose i=1i=1 (since a1=1<a2=3a1=1<a2=3), then either remove a1a1 which gives the new array [3,2][3,2], or remove a2a2 which gives the new array [1,2][1,2].Is it possible to make the length of this array equal to 11 with these operations?InputThe first line contains a single integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains a single integer nn (2\u2264n\u22643\u22c51052\u2264n\u22643\u22c5105) \u00a0\u2014 the length of the array.The second line of each test case contains nn integers a1a1, a2a2, ..., anan (1\u2264ai\u2264n1\u2264ai\u2264n, aiai are pairwise distinct)\u00a0\u2014 elements of the array.It is guaranteed that the sum of nn over all test cases doesn't exceed 3\u22c51053\u22c5105.OutputFor each test case, output on a single line the word \"YES\" if it is possible to reduce the array to a single element using the aforementioned operation, or \"NO\" if it is impossible to do so.ExampleInputCopy4\n3\n1 2 3\n4\n3 1 2 4\n3\n2 3 1\n6\n2 4 6 1 3 5\nOutputCopyYES\nYES\nNO\nYES\nNoteFor the first two test cases and the fourth test case, we can operate as follow (the bolded elements are the pair chosen for that operation):[1,2,3]\u2192[1,2]\u2192[1][1,2,3]\u2192[1,2]\u2192[1][3,1,2,4]\u2192[3,1,4]\u2192[3,4]\u2192[4][3,1,2,4]\u2192[3,1,4]\u2192[3,4]\u2192[4][2,4,6,1,3,5]\u2192[4,6,1,3,5]\u2192[4,1,3,5]\u2192[4,1,5]\u2192[4,5]\u2192[4][2,4,6,1,3,5]\u2192[4,6,1,3,5]\u2192[4,1,3,5]\u2192[4,1,5]\u2192[4,5]\u2192[4]"], "Fadi and LCM": ["https://codeforces.com/problemset/problem/1285/C", "C. Fadi and LCMtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputToday, Osama gave Fadi an integer XX, and Fadi was wondering about the minimum possible value of max(a,b)max(a,b) such that LCM(a,b)LCM(a,b) equals XX. Both aa and bb should be positive integers.LCM(a,b)LCM(a,b) is the smallest positive integer that is divisible by both aa and bb. For example, LCM(6,8)=24LCM(6,8)=24, LCM(4,12)=12LCM(4,12)=12, LCM(2,3)=6LCM(2,3)=6.Of course, Fadi immediately knew the answer. Can you be just like Fadi and find any such pair?InputThe first and only line contains an integer XX (1\u2264X\u226410121\u2264X\u22641012).OutputPrint two positive integers, aa and bb, such that the value of max(a,b)max(a,b) is minimum possible and LCM(a,b)LCM(a,b) equals XX. If there are several possible such pairs, you can print any.ExamplesInputCopy2\nOutputCopy1 2\nInputCopy6\nOutputCopy2 3\nInputCopy4\nOutputCopy1 4\nInputCopy1\nOutputCopy1 1\n"], "Orac and Models": ["https://codeforces.com/problemset/problem/1350/B", "B. Orac and Modelstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn models in the shop numbered from 11 to nn, with sizes s1,s2,\u2026,sns1,s2,\u2026,sn.Orac will buy some of the models and will arrange them in the order of increasing numbers (i.e. indices, but not sizes).Orac thinks that the obtained arrangement is beatiful, if for any two adjacent models with indices ijij and ij+1ij+1 (note that ij<ij+1ij<ij+1, because Orac arranged them properly), ij+1ij+1 is divisible by ijij and sij<sij+1sij<sij+1.For example, for 66 models with sizes {3,6,7,7,7,7}{3,6,7,7,7,7}, he can buy models with indices 11, 22, and 66, and the obtained arrangement will be beautiful. Also, note that the arrangement with exactly one model is also considered beautiful.Orac wants to know the maximum number of models that he can buy, and he may ask you these queries many times.InputThe first line contains one integer t\u00a0(1\u2264t\u2264100)t\u00a0(1\u2264t\u2264100): the number of queries.Each query contains two lines. The first line contains one integer n\u00a0(1\u2264n\u2264100000)n\u00a0(1\u2264n\u2264100000): the number of models in the shop, and the second line contains nn integers s1,\u2026,sn\u00a0(1\u2264si\u2264109)s1,\u2026,sn\u00a0(1\u2264si\u2264109): the sizes of models.It is guaranteed that the total sum of nn is at most 100000100000.OutputPrint tt lines, the ii-th of them should contain the maximum number of models that Orac can buy for the ii-th query.ExampleInputCopy4\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\nOutputCopy2\n3\n1\n1\nNoteIn the first query, for example, Orac can buy models with indices 22 and 44, the arrangement will be beautiful because 44 is divisible by 22 and 66 is more than 33. By enumerating, we can easily find that there are no beautiful arrangements with more than two models. In the second query, Orac can buy models with indices 11, 33, and 66. By enumerating, we can easily find that there are no beautiful arrangements with more than three models. In the third query, there are no beautiful arrangements with more than one model."], "Han Solo and Lazer Gun": ["https://codeforces.com/problemset/problem/514/B", "B. Han Solo and Lazer Guntime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n Imperial stormtroopers on the field. The battle field is a plane with Cartesian coordinate system. Each stormtrooper is associated with his coordinates (x,\u2009y) on this plane. Han Solo has the newest duplex lazer gun to fight these stormtroopers. It is situated at the point (x0,\u2009y0). In one shot it can can destroy all the stormtroopers, situated on some line that crosses point (x0,\u2009y0).Your task is to determine what minimum number of shots Han Solo needs to defeat all the stormtroopers.The gun is the newest invention, it shoots very quickly and even after a very large number of shots the stormtroopers don't have enough time to realize what's happening and change their location. InputThe first line contains three integers n, x0 \u0438 y0 (1\u2009\u2264\u2009n\u2009\u2264\u20091000, \u2009-\u2009104\u2009\u2264\u2009x0,\u2009y0\u2009\u2264\u2009104) \u2014 the number of stormtroopers on the battle field and the coordinates of your gun.Next n lines contain two integers each xi, yi (\u2009-\u2009104\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009104) \u2014 the coordinates of the stormtroopers on the battlefield. It is guaranteed that no stormtrooper stands at the same point with the gun. Multiple stormtroopers can stand at the same point.OutputPrint a single integer \u2014 the minimum number of shots Han Solo needs to destroy all the stormtroopers. ExamplesInputCopy4 0 01 12 22 0-1 -1OutputCopy2InputCopy2 1 21 11 0OutputCopy1NoteExplanation to the first and second samples from the statement, respectively:   "], "RationalLee": ["https://codeforces.com/problemset/problem/1369/C", "C. RationalLeetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLee just became Master in Codeforces, and so, he went out to buy some gifts for his friends. He bought nn integers, now it's time to distribute them between his friends rationally...Lee has nn integers a1,a2,\u2026,ana1,a2,\u2026,an in his backpack and he has kk friends. Lee would like to distribute all integers in his backpack between his friends, such that the ii-th friend will get exactly wiwi integers and each integer will be handed over to exactly one friend.Let's define the happiness of a friend as the sum of the maximum and the minimum integer he'll get.Lee would like to make his friends as happy as possible, in other words, he'd like to maximize the sum of friends' happiness. Now he asks you to calculate the maximum sum of friends' happiness.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.Next 3t3t lines contain test cases\u00a0\u2014 one per three lines.The first line of each test case contains two integers nn and kk (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105; 1\u2264k\u2264n1\u2264k\u2264n)\u00a0\u2014 the number of integers Lee has and the number of Lee's friends.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109)\u00a0\u2014 the integers Lee has.The third line contains kk integers w1,w2,\u2026,wkw1,w2,\u2026,wk (1\u2264wi\u2264n1\u2264wi\u2264n; w1+w2+\u2026+wk=nw1+w2+\u2026+wk=n)\u00a0\u2014 the number of integers Lee wants to give to each friend. It's guaranteed that the sum of nn over test cases is less than or equal to 2\u22c51052\u22c5105.OutputFor each test case, print a single integer\u00a0\u2014 the maximum sum of happiness Lee can achieve.ExampleInputCopy3\n4 2\n1 13 7 17\n1 3\n6 2\n10 10 10 10 11 11\n3 3\n4 4\n1000000000 1000000000 1000000000 1000000000\n1 1 1 1\nOutputCopy48\n42\n8000000000\nNoteIn the first test case, Lee should give the greatest integer to the first friend (his happiness will be 17+1717+17) and remaining integers to the second friend (his happiness will be 13+113+1).In the second test case, Lee should give {10,10,11}{10,10,11} to the first friend and to the second friend, so the total happiness will be equal to (11+10)+(11+10)(11+10)+(11+10)In the third test case, Lee has four friends and four integers, it doesn't matter how he distributes the integers between his friends."], "Ball in Berland": ["https://codeforces.com/problemset/problem/1475/C", "C. Ball in Berlandtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAt the school where Vasya is studying, preparations are underway for the graduation ceremony. One of the planned performances is a ball, which will be attended by pairs of boys and girls.Each class must present two couples to the ball. In Vasya's class, aa boys and bb girls wish to participate. But not all boys and not all girls are ready to dance in pairs.Formally, you know kk possible one-boy-one-girl pairs. You need to choose two of these pairs so that no person is in more than one pair.For example, if a=3a=3, b=4b=4, k=4k=4 and the couples (1,2)(1,2), (1,3)(1,3), (2,2)(2,2), (3,4)(3,4) are ready to dance together (in each pair, the boy's number comes first, then the girl's number), then the following combinations of two pairs are possible (not all possible options are listed below):   (1,3)(1,3) and (2,2)(2,2);  (3,4)(3,4) and (1,3)(1,3); But the following combinations are not possible:   (1,3)(1,3) and (1,2)(1,2)\u00a0\u2014 the first boy enters two pairs;  (1,2)(1,2) and (2,2)(2,2)\u00a0\u2014 the second girl enters two pairs; Find the number of ways to select two pairs that match the condition above. Two ways are considered different if they consist of different pairs.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains three integers aa, bb and kk (1\u2264a,b,k\u22642\u22c51051\u2264a,b,k\u22642\u22c5105)\u00a0\u2014 the number of boys and girls in the class and the number of couples ready to dance together.The second line of each test case contains kk integers a1,a2,\u2026aka1,a2,\u2026ak. (1\u2264ai\u2264a1\u2264ai\u2264a), where aiai is the number of the boy in the pair with the number ii.The third line of each test case contains kk integers b1,b2,\u2026bkb1,b2,\u2026bk. (1\u2264bi\u2264b1\u2264bi\u2264b), where bibi is the number of the girl in the pair with the number ii.It is guaranteed that the sums of aa, bb, and kk over all test cases do not exceed 2\u22c51052\u22c5105.It is guaranteed that each pair is specified at most once in one test case.OutputFor each test case, on a separate line print one integer\u00a0\u2014 the number of ways to choose two pairs that match the condition above.ExampleInputCopy3\n3 4 4\n1 1 2 3\n2 3 2 4\n1 1 1\n1\n1\n2 2 4\n1 1 2 2\n1 2 1 2\nOutputCopy4\n0\n2\nNoteIn the first test case, the following combinations of pairs fit:   (1,2)(1,2) and (3,4)(3,4);  (1,3)(1,3) and (2,2)(2,2);  (1,3)(1,3) and (3,4)(3,4);  (2,2)(2,2) and (3,4)(3,4). There is only one pair in the second test case.In the third test case, the following combinations of pairs fit:   (1,1)(1,1) and (2,2)(2,2);  (1,2)(1,2) and (2,1)(2,1). "], "Mashmokh and ACM": ["https://codeforces.com/problemset/problem/414/B", "B. Mashmokh and ACMtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMashmokh's boss, Bimokh, didn't like Mashmokh. So he fired him. Mashmokh decided to go to university and participate in ACM instead of finding a new job. He wants to become a member of Bamokh's team. In order to join he was given some programming tasks and one week to solve them. Mashmokh is not a very experienced programmer. Actually he is not a programmer at all. So he wasn't able to solve them. That's why he asked you to help him with these tasks. One of these tasks is the following.A sequence of l integers b1,\u2009b2,\u2009...,\u2009bl (1\u2009\u2264\u2009b1\u2009\u2264\u2009b2\u2009\u2264\u2009...\u2009\u2264\u2009bl\u2009\u2264\u2009n) is called good if each number divides (without a remainder) by the next number in the sequence. More formally  for all i (1\u2009\u2264\u2009i\u2009\u2264\u2009l\u2009-\u20091).Given n and k find the number of good sequences of length k. As the answer can be rather large print it modulo 1000000007 (109\u2009+\u20097).InputThe first line of input contains two space-separated integers n,\u2009k\u00a0(1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u20092000).OutputOutput a single integer \u2014 the number of good sequences of length k modulo 1000000007 (109\u2009+\u20097).ExamplesInputCopy3 2OutputCopy5InputCopy6 4OutputCopy39InputCopy2 1OutputCopy2NoteIn the first sample the good sequences are: [1,\u20091],\u2009[2,\u20092],\u2009[3,\u20093],\u2009[1,\u20092],\u2009[1,\u20093]."], "Create The Teams": ["https://codeforces.com/problemset/problem/1380/C", "C. Create The Teamstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn programmers that you want to split into several non-empty teams. The skill of the ii-th programmer is aiai. You want to assemble the maximum number of teams from them. There is a restriction for each team: the number of programmers in the team multiplied by the minimum skill among all programmers in the team must be at least xx.Each programmer should belong to at most one team. Some programmers may be left without a team.Calculate the maximum number of teams that you can assemble.InputThe first line contains the integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains two integers nn and xx (1\u2264n\u2264105;1\u2264x\u22641091\u2264n\u2264105;1\u2264x\u2264109)\u00a0\u2014 the number of programmers and the restriction of team skill respectively.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is the skill of the ii-th programmer.The sum of nn over all inputs does not exceed 105105.OutputFor each test case print one integer \u2014 the maximum number of teams that you can assemble. ExampleInputCopy3\n5 10\n7 11 2 9 5\n4 8\n2 4 2 3\n4 11\n1 3 3 7\nOutputCopy2\n1\n0\n"], "Team": ["https://codeforces.com/problemset/problem/401/C", "C. Teamtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNow it's time of Olympiads. Vanya and Egor decided to make his own team to take part in a programming Olympiad. They've been best friends ever since primary school and hopefully, that can somehow help them in teamwork.For each team Olympiad, Vanya takes his play cards with numbers. He takes only the cards containing numbers 1 and 0. The boys are very superstitious. They think that they can do well at the Olympiad if they begin with laying all the cards in a row so that:  there wouldn't be a pair of any side-adjacent cards with zeroes in a row;  there wouldn't be a group of three consecutive cards containing numbers one. Today Vanya brought n cards with zeroes and m cards with numbers one. The number of cards was so much that the friends do not know how to put all those cards in the described way. Help them find the required arrangement of the cards or else tell the guys that it is impossible to arrange cards in such a way.InputThe first line contains two integers: n (1\u2009\u2264\u2009n\u2009\u2264\u2009106) \u2014 the number of cards containing number 0; m (1\u2009\u2264\u2009m\u2009\u2264\u2009106) \u2014 the number of cards containing number 1.OutputIn a single line print the required sequence of zeroes and ones without any spaces. If such sequence is impossible to obtain, print -1.ExamplesInputCopy1 2OutputCopy101InputCopy4 8OutputCopy110110110101InputCopy4 10OutputCopy11011011011011InputCopy1 5OutputCopy-1"], "Epic Transformation": ["https://codeforces.com/problemset/problem/1506/D", "D. Epic Transformationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of length nn consisting of integers. You can apply the following operation, consisting of several steps, on the array aa zero or more times:   you select two different numbers in the array aiai and ajaj;  you remove ii-th and jj-th elements from the array. For example, if n=6n=6 and a=[1,6,1,1,4,4]a=[1,6,1,1,4,4], then you can perform the following sequence of operations:   select i=1,j=5i=1,j=5. The array aa becomes equal to [6,1,1,4][6,1,1,4];  select i=1,j=2i=1,j=2. The array aa becomes equal to [1,4][1,4]. What can be the minimum size of the array after applying some sequence of operations to it?InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104). Then tt test cases follow.The first line of each test case contains a single integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) is length of the array aa.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output the minimum possible size of the array after applying some sequence of operations to it.ExampleInputCopy5\n6\n1 6 1 1 4 4\n2\n1 2\n2\n1 1\n5\n4 5 4 5 4\n6\n2 3 2 1 3 1\nOutputCopy0\n0\n2\n1\n0\n"], "Composite Coloring": ["https://codeforces.com/problemset/problem/1332/B", "B. Composite Coloringtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputA positive integer is called composite if it can be represented as a product of two positive integers, both greater than 11. For example, the following numbers are composite: 66, 44, 120120, 2727. The following numbers aren't: 11, 22, 33, 1717, 9797.Alice is given a sequence of nn composite numbers a1,a2,\u2026,ana1,a2,\u2026,an.She wants to choose an integer m\u226411m\u226411 and color each element one of mm colors from 11 to mm so that:  for each color from 11 to mm there is at least one element of this color;  each element is colored and colored exactly one color;  the greatest common divisor of any two elements that are colored the same color is greater than 11, i.e. gcd(ai,aj)>1gcd(ai,aj)>1 for each pair i,ji,j if these elements are colored the same color. Note that equal elements can be colored different colors\u00a0\u2014 you just have to choose one of mm colors for each of the indices from 11 to nn.Alice showed already that if all ai\u22641000ai\u22641000 then she can always solve the task by choosing some m\u226411m\u226411.Help Alice to find the required coloring. Note that you don't have to minimize or maximize the number of colors, you just have to find the solution with some mm from 11 to 1111.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases. Then the descriptions of the test cases follow.The first line of the test case contains a single integer nn (1\u2264n\u226410001\u2264n\u22641000) \u2014 the amount of numbers in a sequence aa.The second line of the test case contains nn composite integers a1,a2,\u2026,ana1,a2,\u2026,an (4\u2264ai\u226410004\u2264ai\u22641000).It is guaranteed that the sum of nn over all test cases doesn't exceed 104104.OutputFor each test case print 22 lines. The first line should contain a single integer mm (1\u2264m\u2264111\u2264m\u226411) \u2014 the number of used colors. Consider colors to be numbered from 11 to mm. The second line should contain any coloring that satisfies the above conditions. Print nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn (1\u2264ci\u2264m1\u2264ci\u2264m), where cici is the color of the ii-th element. If there are multiple solutions then you can print any of them. Note that you don't have to minimize or maximize the number of colors, you just have to find the solution with some mm from 11 to 1111.Remember that each color from 11 to mm should be used at least once. Any two elements of the same color should not be coprime (i.e. their GCD should be greater than 11).ExampleInputCopy3\n3\n6 10 15\n2\n4 9\n23\n437 519 865 808 909 391 194 291 237 395 323 365 511 497 781 737 871 559 731 697 779 841 961\nOutputCopy1\n1 1 1\n2\n2 1\n11\n4 7 8 10 7 3 10 7 7 8 3 1 1 5 5 9 2 2 3 3 4 11 6\nNoteIn the first test case, gcd(6,10)=2gcd(6,10)=2, gcd(6,15)=3gcd(6,15)=3 and gcd(10,15)=5gcd(10,15)=5. Therefore, it's valid to color all elements the same color. Note that there are other colorings which satisfy Alice's requirement in this test case.In the second test case there is only one element of each color, so the coloring definitely satisfies Alice's requirement."], "Game With Array": ["https://codeforces.com/problemset/problem/1355/D", "D. Game With Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya and Vasya are competing with each other in a new interesting game as they always do.At the beginning of the game Petya has to come up with an array of NN positive integers. Sum of all elements in his array should be equal to SS. Then Petya has to select an integer KK such that 0\u2264K\u2264S0\u2264K\u2264S.In order to win, Vasya has to find a non-empty subarray in Petya's array such that the sum of all selected elements equals to either KK or S\u2212KS\u2212K. Otherwise Vasya loses.You are given integers NN and SS. You should determine if Petya can win, considering Vasya plays optimally. If Petya can win, help him to do that.InputThe first line contains two integers NN and SS (1\u2264N\u2264S\u22641061\u2264N\u2264S\u2264106)\u00a0\u2014 the required length of the array and the required sum of its elements.OutputIf Petya can win, print \"YES\" (without quotes) in the first line. Then print Petya's array in the second line. The array should contain NN positive integers with sum equal to SS. In the third line print KK. If there are many correct answers, you can print any of them.If Petya can't win, print \"NO\" (without quotes).You can print each letter in any register (lowercase or uppercase).ExamplesInputCopy1 4\nOutputCopyYES\n4\n2InputCopy3 4\nOutputCopyNOInputCopy3 8\nOutputCopyYES\n2 1 5\n4"], "Quasi Binary": ["https://codeforces.com/problemset/problem/538/B", "B. Quasi Binarytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA number is called quasibinary if its decimal representation contains only digits 0 or 1. For example, numbers 0, 1, 101, 110011\u00a0\u2014 are quasibinary and numbers 2, 12, 900 are not.You are given a positive integer n. Represent it as a sum of minimum number of quasibinary numbers.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009106).OutputIn the first line print a single integer k\u00a0\u2014 the minimum number of numbers in the representation of number n as a sum of quasibinary numbers.In the second line print k numbers \u2014 the elements of the sum. All these numbers should be quasibinary according to the definition above, their sum should equal n. Do not have to print the leading zeroes in the numbers. The order of numbers doesn't matter. If there are multiple possible representations, you are allowed to print any of them.ExamplesInputCopy9OutputCopy91 1 1 1 1 1 1 1 1 InputCopy32OutputCopy310 11 11 "], "Johnny and Another Rating Drop": ["https://codeforces.com/problemset/problem/1362/C", "C. Johnny and Another Rating Droptime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe last contest held on Johnny's favorite competitive programming platform has been received rather positively. However, Johnny's rating has dropped again! He thinks that the presented tasks are lovely, but don't show the truth about competitors' skills.The boy is now looking at the ratings of consecutive participants written in a binary system. He thinks that the more such ratings differ, the more unfair is that such people are next to each other. He defines the difference between two numbers as the number of bit positions, where one number has zero, and another has one (we suppose that numbers are padded with leading zeros to the same length). For example, the difference of 5=10125=1012 and 14=1110214=11102 equals to 33, since 01010101 and 11101110 differ in 33 positions. Johnny defines the unfairness of the contest as the sum of such differences counted for neighboring participants.Johnny has just sent you the rating sequence and wants you to find the unfairness of the competition. You have noticed that you've got a sequence of consecutive integers from 00 to nn. That's strange, but the boy stubbornly says that everything is right. So help him and find the desired unfairness for received numbers.InputThe input consists of multiple test cases. The first line contains one integer tt (1\u2264t\u2264100001\u2264t\u226410000)\u00a0\u2014 the number of test cases. The following tt lines contain a description of test cases.The first and only line in each test case contains a single integer nn (1\u2264n\u22641018)1\u2264n\u22641018).OutputOutput tt lines. For each test case, you should output a single line with one integer\u00a0\u2014 the unfairness of the contest if the rating sequence equals to 00, 11, ..., n\u22121n\u22121, nn.ExampleInputCopy5\n5\n7\n11\n1\n2000000000000\nOutputCopy8\n11\n19\n1\n3999999999987\nNoteFor n=5n=5 we calculate unfairness of the following sequence (numbers from 00 to 55 written in binary with extra leading zeroes, so they all have the same length):   000000  001001  010010  011011  100100  101101 The differences are equal to 11, 22, 11, 33, 11 respectively, so unfairness is equal to 1+2+1+3+1=81+2+1+3+1=8."], "Arranging The Sheep": ["https://codeforces.com/problemset/problem/1520/E", "E. Arranging The Sheeptime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are playing the game \"Arranging The Sheep\". The goal of this game is to make the sheep line up. The level in the game is described by a string of length nn, consisting of the characters '.' (empty space) and '*' (sheep). In one move, you can move any sheep one square to the left or one square to the right, if the corresponding square exists and is empty. The game ends as soon as the sheep are lined up, that is, there should be no empty cells between any sheep.For example, if n=6n=6 and the level is described by the string \"**.*..\", then the following game scenario is possible:   the sheep at the 44 position moves to the right, the state of the level: \"**..*.\";  the sheep at the 22 position moves to the right, the state of the level: \"*.*.*.\";  the sheep at the 11 position moves to the right, the state of the level: \".**.*.\";  the sheep at the 33 position moves to the right, the state of the level: \".*.**.\";  the sheep at the 22 position moves to the right, the state of the level: \"..***.\";  the sheep are lined up and the game ends. For a given level, determine the minimum number of moves you need to make to complete the level.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104). Then tt test cases follow.The first line of each test case contains one integer nn (1\u2264n\u22641061\u2264n\u2264106).The second line of each test case contains a string of length nn, consisting of the characters '.' (empty space) and '*' (sheep)\u00a0\u2014 the description of the level.It is guaranteed that the sum of nn over all test cases does not exceed 106106.OutputFor each test case output the minimum number of moves you need to make to complete the level.ExampleInputCopy5\n6\n**.*..\n5\n*****\n3\n.*.\n3\n...\n10\n*.*...*.**\nOutputCopy1\n0\n0\n0\n9\n"], "Find The Array": ["https://codeforces.com/problemset/problem/1463/B", "B. Find The Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array [a1,a2,\u2026,an][a1,a2,\u2026,an] such that 1\u2264ai\u22641091\u2264ai\u2264109. Let SS be the sum of all elements of the array aa.Let's call an array bb of nn integers beautiful if:  1\u2264bi\u22641091\u2264bi\u2264109 for each ii from 11 to nn;  for every pair of adjacent integers from the array (bi,bi+1)(bi,bi+1), either bibi divides bi+1bi+1, or bi+1bi+1 divides bibi (or both);  2\u2211i=1n|ai\u2212bi|\u2264S2\u2211i=1n|ai\u2212bi|\u2264S. Your task is to find any beautiful array. It can be shown that at least one beautiful array always exists.InputThe first line contains one integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases.Each test case consists of two lines. The first line contains one integer nn (2\u2264n\u2264502\u2264n\u226450).The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).OutputFor each test case, print the beautiful array b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u22641091\u2264bi\u2264109) on a separate line. It can be shown that at least one beautiful array exists under these circumstances. If there are multiple answers, print any of them.ExampleInputCopy4\n5\n1 2 3 4 5\n2\n4 6\n2\n1 1000000000\n6\n3 4 8 1 2 3\nOutputCopy3 3 3 3 3\n3 6\n1 1000000000\n4 4 8 1 3 3\n"], "Applejack and Storages": ["https://codeforces.com/problemset/problem/1393/B", "B. Applejack and Storagestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis year in Equestria was a year of plenty, so Applejack has decided to build some new apple storages. According to the advice of the farm designers, she chose to build two storages with non-zero area: one in the shape of a square and another one in the shape of a rectangle (which possibly can be a square as well).Applejack will build the storages using planks, she is going to spend exactly one plank on each side of the storage. She can get planks from her friend's company. Initially, the company storehouse has nn planks, Applejack knows their lengths. The company keeps working so it receives orders and orders the planks itself. Applejack's friend can provide her with information about each operation. For convenience, he will give her information according to the following format:  ++ xx: the storehouse received a plank with length xx  \u2212\u2212 xx: one plank with length xx was removed from the storehouse (it is guaranteed that the storehouse had some planks with length xx). Applejack is still unsure about when she is going to order the planks so she wants to know if she can order the planks to build rectangular and square storages out of them after every event at the storehouse. Applejack is busy collecting apples and she has completely no time to do the calculations so she asked you for help!We remind you that all four sides of a square are equal, and a rectangle has two pairs of equal sides.InputThe first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105): the initial amount of planks at the company's storehouse, the second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641051\u2264ai\u2264105): the lengths of the planks.The third line contains a single integer qq (1\u2264q\u22641051\u2264q\u2264105): the number of events in the company. Each of the next qq lines contains a description of the events in a given format: the type of the event (a symbol ++ or \u2212\u2212) is given first, then goes the integer xx (1\u2264x\u22641051\u2264x\u2264105).OutputAfter every event in the company, print \"YES\" if two storages of the required shape can be built from the planks of that company's set, and print \"NO\" otherwise. You can print each letter in any case (upper or lower).ExampleInputCopy6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2\nOutputCopyNO\nYES\nNO\nNO\nNO\nYES\nNoteAfter the second event Applejack can build a rectangular storage using planks with lengths 11, 22, 11, 22 and a square storage using planks with lengths 11, 11, 11, 11.After the sixth event Applejack can build a rectangular storage using planks with lengths 22, 22, 22, 22 and a square storage using planks with lengths 11, 11, 11, 11."], "Soldier and Cards": ["https://codeforces.com/problemset/problem/546/C", "C. Soldier and Cardstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTwo bored soldiers are playing card war. Their card deck consists of exactly n cards, numbered from 1 to n, all values are different. They divide cards between them in some manner, it's possible that they have different number of cards. Then they play a \"war\"-like card game. The rules are following. On each turn a fight happens. Each of them picks card from the top of his stack and puts on the table. The one whose card value is bigger wins this fight and takes both cards from the table to the bottom of his stack. More precisely, he first takes his opponent's card and puts to the bottom of his stack, and then he puts his card to the bottom of his stack. If after some turn one of the player's stack becomes empty, he loses and the other one wins. You have to calculate how many fights will happen and who will win the game, or state that game won't end.InputFirst line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u200910), the number of cards.Second line contains integer k1 (1\u2009\u2264\u2009k1\u2009\u2264\u2009n\u2009-\u20091), the number of the first soldier's cards. Then follow k1 integers that are the values on the first soldier's cards, from top to bottom of his stack.Third line contains integer k2 (k1\u2009+\u2009k2\u2009=\u2009n), the number of the second soldier's cards. Then follow k2 integers that are the values on the second soldier's cards, from top to bottom of his stack.All card values are different.OutputIf somebody wins in this game, print 2 integers where the first one stands for the number of fights before end of game and the second one is 1 or 2 showing which player has won.If the game won't end and will continue forever output \u2009-\u20091.ExamplesInputCopy42 1 32 4 2OutputCopy6 2InputCopy31 22 1 3OutputCopy-1NoteFirst sample:   Second sample:   "], "Learning Languages": ["https://codeforces.com/problemset/problem/277/A", "A. Learning Languagestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe \"BerCorp\" company has got n employees. These employees can use m approved official languages for the formal correspondence. The languages are numbered with integers from 1 to m. For each employee we have the list of languages, which he knows. This list could be empty, i. e. an employee may know no official languages. But the employees are willing to learn any number of official languages, as long as the company pays their lessons. A study course in one language for one employee costs 1 berdollar.Find the minimum sum of money the company needs to spend so as any employee could correspond to any other one (their correspondence can be indirect, i. e. other employees can help out translating).InputThe first line contains two integers n and m (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the number of employees and the number of languages.Then n lines follow \u2014 each employee's language list. At the beginning of the i-th line is integer ki (0\u2009\u2264\u2009ki\u2009\u2264\u2009m) \u2014 the number of languages the i-th employee knows. Next, the i-th line contains ki integers \u2014 aij (1\u2009\u2264\u2009aij\u2009\u2264\u2009m) \u2014 the identifiers of languages the i-th employee knows. It is guaranteed that all the identifiers in one list are distinct. Note that an employee may know zero languages.The numbers in the lines are separated by single spaces.OutputPrint a single integer \u2014 the minimum amount of money to pay so that in the end every employee could write a letter to every other one (other employees can help out translating).ExamplesInputCopy5 51 22 2 32 3 42 4 51 5OutputCopy0InputCopy8 703 1 2 31 12 5 42 6 71 32 7 41 1OutputCopy2InputCopy2 21 20OutputCopy1NoteIn the second sample the employee 1 can learn language 2, and employee 8 can learn language 4.In the third sample employee 2 must learn language 2."], "Simple Polygon Embedding": ["https://codeforces.com/problemset/problem/1354/C1", "C1. Simple Polygon Embeddingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe statement of this problem is the same as the statement of problem C2. The only difference is that, in problem C1, nn is always even, and in C2, nn is always odd.You are given a regular polygon with 2\u22c5n2\u22c5n vertices (it's convex and has equal sides and equal angles) and all its sides have length 11. Let's name it as 2n2n-gon.Your task is to find the square of the minimum size such that you can embed 2n2n-gon in the square. Embedding 2n2n-gon in the square means that you need to place 2n2n-gon in the square in such way that each point which lies inside or on a border of 2n2n-gon should also lie inside or on a border of the square.You can rotate 2n2n-gon and/or the square.InputThe first line contains a single integer TT (1\u2264T\u22642001\u2264T\u2264200)\u00a0\u2014 the number of test cases.Next TT lines contain descriptions of test cases\u00a0\u2014 one per line. Each line contains single even integer nn (2\u2264n\u22642002\u2264n\u2264200). Don't forget you need to embed 2n2n-gon, not an nn-gon.OutputPrint TT real numbers\u00a0\u2014 one per test case. For each test case, print the minimum length of a side of the square 2n2n-gon can be embedded in. Your answer will be considered correct if its absolute or relative error doesn't exceed 10\u2212610\u22126.ExampleInputCopy3\n2\n4\n200\nOutputCopy1.000000000\n2.414213562\n127.321336469\n"], "Maximum Median": ["https://codeforces.com/problemset/problem/1201/C", "C. Maximum Mediantime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa of nn integers, where nn is odd. You can make the following operation with it:  Choose one of the elements of the array (for example aiai) and increase it by 11 (that is, replace it with ai+1ai+1). You want to make the median of the array the largest possible using at most kk operations.The median of the odd-sized array is the middle element after the array is sorted in non-decreasing order. For example, the median of the array [1,5,2,3,5][1,5,2,3,5] is 33.InputThe first line contains two integers nn and kk (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, nn is odd, 1\u2264k\u22641091\u2264k\u2264109)\u00a0\u2014 the number of elements in the array and the largest number of operations you can make.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).OutputPrint a single integer\u00a0\u2014 the maximum possible median after the operations.ExamplesInputCopy3 2\n1 3 5\nOutputCopy5InputCopy5 5\n1 2 1 1 1\nOutputCopy3InputCopy7 7\n4 1 2 4 3 4 4\nOutputCopy5NoteIn the first example, you can increase the second element twice. Than array will be [1,5,5][1,5,5] and it's median is 55.In the second example, it is optimal to increase the second number and than increase third and fifth. This way the answer is 33.In the third example, you can make four operations: increase first, fourth, sixth, seventh element. This way the array will be [5,1,2,5,3,5,5][5,1,2,5,3,5,5] and the median will be 55."], "Divide by three, multiply by two": ["https://codeforces.com/problemset/problem/977/D", "D. Divide by three, multiply by twotime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp likes to play with numbers. He takes some integer number xx, writes it down on the board, and then performs with it n\u22121n\u22121 operations of the two kinds:   divide the number xx by 33 (xx must be divisible by 33);  multiply the number xx by 22. After each operation, Polycarp writes down the result on the board and replaces xx by the result. So there will be nn numbers on the board after all.You are given a sequence of length nn \u2014 the numbers that Polycarp wrote down. This sequence is given in arbitrary order, i.e. the order of the sequence can mismatch the order of the numbers written on the board.Your problem is to rearrange (reorder) elements of this sequence in such a way that it can match possible Polycarp's game in the order of the numbers written on the board. I.e. each next number will be exactly two times of the previous number or exactly one third of previous number.It is guaranteed that the answer exists.InputThe first line of the input contatins an integer number nn (2\u2264n\u22641002\u2264n\u2264100) \u2014 the number of the elements in the sequence. The second line of the input contains nn integer numbers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22643\u22c510181\u2264ai\u22643\u22c51018) \u2014 rearranged (reordered) sequence that Polycarp can wrote down on the board.OutputPrint nn integer numbers \u2014 rearranged (reordered) input sequence that can be the sequence that Polycarp could write down on the board.It is guaranteed that the answer exists.ExamplesInputCopy64 8 6 3 12 9OutputCopy9 3 6 12 4 8 InputCopy442 28 84 126OutputCopy126 42 84 28 InputCopy21000000000000000000 3000000000000000000OutputCopy3000000000000000000 1000000000000000000 NoteIn the first example the given sequence can be rearranged in the following way: [9,3,6,12,4,8][9,3,6,12,4,8]. It can match possible Polycarp's game which started with x=9x=9."], "Preparing Olympiad": ["https://codeforces.com/problemset/problem/550/B", "B. Preparing Olympiadtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have n problems. You have estimated the difficulty of the i-th one as integer ci. Now you want to prepare a problemset for a contest, using some of the problems you've made.A problemset for the contest must consist of at least two problems. You think that the total difficulty of the problems of the contest must be at least l and at most r. Also, you think that the difference between difficulties of the easiest and the hardest of the chosen problems must be at least x.Find the number of ways to choose a problemset for the contest.InputThe first line contains four integers n, l, r, x (1\u2009\u2264\u2009n\u2009\u2264\u200915, 1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009109, 1\u2009\u2264\u2009x\u2009\u2264\u2009106) \u2014 the number of problems you have, the minimum and maximum value of total difficulty of the problemset and the minimum difference in difficulty between the hardest problem in the pack and the easiest one, respectively.The second line contains n integers c1,\u2009c2,\u2009...,\u2009cn (1\u2009\u2264\u2009ci\u2009\u2264\u2009106) \u2014 the difficulty of each problem.OutputPrint the number of ways to choose a suitable problemset for the contest. ExamplesInputCopy3 5 6 11 2 3OutputCopy2InputCopy4 40 50 1010 20 30 25OutputCopy2InputCopy5 25 35 1010 10 20 10 20OutputCopy6NoteIn the first example two sets are suitable, one consisting of the second and third problem, another one consisting of all three problems.In the second example, two sets of problems are suitable \u2014 the set of problems with difficulties 10 and 30 as well as the set of problems with difficulties 20 and 30.In the third example any set consisting of one problem of difficulty 10 and one problem of difficulty 20 is suitable."], "National Project": ["https://codeforces.com/problemset/problem/1303/B", "B. National Projecttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYour company was appointed to lay new asphalt on the highway of length nn. You know that every day you can either repair one unit of the highway (lay new asphalt over one unit of the highway) or skip repairing.Skipping the repair is necessary because of the climate. The climate in your region is periodical: there are gg days when the weather is good and if you lay new asphalt these days it becomes high-quality pavement; after that, the weather during the next bb days is bad, and if you lay new asphalt these days it becomes low-quality pavement; again gg good days, bb bad days and so on.You can be sure that you start repairing at the start of a good season, in other words, days 1,2,\u2026,g1,2,\u2026,g are good.You don't really care about the quality of the highway, you just want to make sure that at least half of the highway will have high-quality pavement. For example, if the n=5n=5 then at least 33 units of the highway should have high quality; if n=4n=4 then at least 22 units should have high quality.What is the minimum number of days is needed to finish the repair of the whole highway?InputThe first line contains a single integer TT (1\u2264T\u22641041\u2264T\u2264104) \u2014 the number of test cases.Next TT lines contain test cases \u2014 one per line. Each line contains three integers nn, gg and bb (1\u2264n,g,b\u22641091\u2264n,g,b\u2264109) \u2014 the length of the highway and the number of good and bad days respectively.OutputPrint TT integers \u2014 one per test case. For each test case, print the minimum number of days required to repair the whole highway if at least half of it should have high quality.ExampleInputCopy3\n5 1 1\n8 10 10\n1000000 1 1000000\nOutputCopy5\n8\n499999500000\nNoteIn the first test case, you can just lay new asphalt each day, since days 1,3,51,3,5 are good.In the second test case, you can also lay new asphalt each day, since days 11-88 are good."], "Polo the Penguin and Matrix": ["https://codeforces.com/problemset/problem/289/B", "B. Polo the Penguin and Matrixtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle penguin Polo has an n\u2009\u00d7\u2009m matrix, consisting of integers. Let's index the matrix rows from 1 to n from top to bottom and let's index the columns from 1 to m from left to right. Let's represent the matrix element on the intersection of row i and column j as aij.In one move the penguin can add or subtract number d from some matrix element. Find the minimum number of moves needed to make all matrix elements equal. If the described plan is impossible to carry out, say so.InputThe first line contains three integers n, m and d (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009d\u2009\u2264\u2009104) \u2014 the matrix sizes and the d parameter. Next n lines contain the matrix: the j-th integer in the i-th row is the matrix element aij (1\u2009\u2264\u2009aij\u2009\u2264\u2009104).OutputIn a single line print a single integer \u2014 the minimum number of moves the penguin needs to make all matrix elements equal. If that is impossible, print \"-1\" (without the quotes).ExamplesInputCopy2 2 22 46 8OutputCopy4InputCopy1 2 76 7OutputCopy-1"], "Adding Powers": ["https://codeforces.com/problemset/problem/1312/C", "C. Adding Powerstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSuppose you are performing the following algorithm. There is an array v1,v2,\u2026,vnv1,v2,\u2026,vn filled with zeroes at start. The following operation is applied to the array several times \u2014 at ii-th step (00-indexed) you can:   either choose position pospos (1\u2264pos\u2264n1\u2264pos\u2264n) and increase vposvpos by kiki;  or not choose any position and skip this step. You can choose how the algorithm would behave on each step and when to stop it. The question is: can you make array vv equal to the given array aa (vj=ajvj=aj for each jj) after some step?InputThe first line contains one integer TT (1\u2264T\u226410001\u2264T\u22641000) \u2014 the number of test cases. Next 2T2T lines contain test cases \u2014 two lines per test case.The first line of each test case contains two integers nn and kk (1\u2264n\u2264301\u2264n\u226430, 2\u2264k\u22641002\u2264k\u2264100) \u2014 the size of arrays vv and aa and value kk used in the algorithm.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u226410160\u2264ai\u22641016) \u2014 the array you'd like to achieve.OutputFor each test case print YES (case insensitive) if you can achieve the array aa after some step or NO (case insensitive) otherwise.ExampleInputCopy5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\nOutputCopyYES\nYES\nNO\nNO\nYES\nNoteIn the first test case, you can stop the algorithm before the 00-th step, or don't choose any position several times and stop the algorithm.In the second test case, you can add k0k0 to v1v1 and stop the algorithm.In the third test case, you can't make two 11 in the array vv.In the fifth test case, you can skip 9090 and 9191, then add 9292 and 9393 to v3v3, skip 9494 and finally, add 9595 to v2v2."], "Accidental Victory": ["https://codeforces.com/problemset/problem/1490/E", "E. Accidental Victorytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA championship is held in Berland, in which nn players participate. The player with the number ii has aiai (ai\u22651ai\u22651) tokens.The championship consists of n\u22121n\u22121 games, which are played according to the following rules:  in each game, two random players with non-zero tokens are selected;  the player with more tokens is considered the winner of the game (in case of a tie, the winner is chosen randomly);  the winning player takes all of the loser's tokens; The last player with non-zero tokens is the winner of the championship.All random decisions that are made during the championship are made equally probable and independently.For example, if n=4n=4, a=[1,2,4,3]a=[1,2,4,3], then one of the options for the game (there could be other options) is:   during the first game, the first and fourth players were selected. The fourth player has more tokens, so he takes the first player's tokens. Now a=[0,2,4,4]a=[0,2,4,4];  during the second game, the fourth and third players were selected. They have the same number of tokens, but in a random way, the third player is the winner. Now a=[0,2,8,0]a=[0,2,8,0];  during the third game, the second and third players were selected. The third player has more tokens, so he takes the second player's tokens. Now a=[0,0,10,0]a=[0,0,10,0];  the third player is declared the winner of the championship. Championship winners will receive personalized prizes. Therefore, the judges want to know in advance which players have a chance of winning, i.e have a non-zero probability of winning the championship. You have been asked to find all such players. InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Then tt test cases follow.The first line of each test case consists of one positive integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the number of players in the championship.The second line of each test case contains nn positive integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the number of tokens the players have.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105. OutputFor each test case, print the number of players who have a nonzero probability of winning the championship. On the next line print the numbers of these players in increasing order. Players are numbered starting from one in the order in which they appear in the input. ExampleInputCopy2\n4\n1 2 4 3\n5\n1 1 1 1 1\nOutputCopy3\n2 3 4 \n5\n1 2 3 4 5 \n"], "Journey Planning": ["https://codeforces.com/problemset/problem/1320/A", "A. Journey Planningtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTanya wants to go on a journey across the cities of Berland. There are nn cities situated along the main railroad line of Berland, and these cities are numbered from 11 to nn. Tanya plans her journey as follows. First of all, she will choose some city c1c1 to start her journey. She will visit it, and after that go to some other city c2>c1c2>c1, then to some other city c3>c2c3>c2, and so on, until she chooses to end her journey in some city ck>ck\u22121ck>ck\u22121. So, the sequence of visited cities [c1,c2,\u2026,ck][c1,c2,\u2026,ck] should be strictly increasing.There are some additional constraints on the sequence of cities Tanya visits. Each city ii has a beauty value bibi associated with it. If there is only one city in Tanya's journey, these beauty values imply no additional constraints. But if there are multiple cities in the sequence, then for any pair of adjacent cities cici and ci+1ci+1, the condition ci+1\u2212ci=bci+1\u2212bcici+1\u2212ci=bci+1\u2212bci must hold.For example, if n=8n=8 and b=[3,4,4,6,6,7,8,9]b=[3,4,4,6,6,7,8,9], there are several three possible ways to plan a journey:  c=[1,2,4]c=[1,2,4];  c=[3,5,6,8]c=[3,5,6,8];  c=[7]c=[7] (a journey consisting of one city is also valid). There are some additional ways to plan a journey that are not listed above.Tanya wants her journey to be as beautiful as possible. The beauty value of the whole journey is the sum of beauty values over all visited cities. Can you help her to choose the optimal plan, that is, to maximize the beauty value of the journey?InputThe first line contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of cities in Berland.The second line contains nn integers b1b1, b2b2, ..., bnbn (1\u2264bi\u22644\u22c51051\u2264bi\u22644\u22c5105), where bibi is the beauty value of the ii-th city.OutputPrint one integer \u2014 the maximum beauty of a journey Tanya can choose.ExamplesInputCopy6\n10 7 1 9 10 15\nOutputCopy26\nInputCopy1\n400000\nOutputCopy400000\nInputCopy7\n8 9 26 11 12 29 14\nOutputCopy55\nNoteThe optimal journey plan in the first example is c=[2,4,5]c=[2,4,5].The optimal journey plan in the second example is c=[1]c=[1].The optimal journey plan in the third example is c=[3,6]c=[3,6]."], "Web of Lies": ["https://codeforces.com/problemset/problem/1548/A", "A. Web of Liestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWhen you play the game of thrones, you win, or you die. There is no middle ground.Cersei Lannister, A Game of Thrones by George R.\u00a0R. MartinThere are nn nobles, numbered from 11 to nn. Noble ii has a power of ii. There are also mm \"friendships\". A friendship between nobles aa and bb is always mutual.A noble is defined to be vulnerable if both of the following conditions are satisfied:   the noble has at least one friend, and  all of that noble's friends have a higher power. You will have to process the following three types of queries.   Add a friendship between nobles uu and vv.  Remove a friendship between nobles uu and vv.  Calculate the answer to the following process. The process: all vulnerable nobles are simultaneously killed, and all their friendships end. Then, it is possible that new nobles become vulnerable. The process repeats itself until no nobles are vulnerable. It can be proven that the process will end in finite time. After the process is complete, you need to calculate the number of remaining nobles.Note that the results of the process are not carried over between queries, that is, every process starts with all nobles being alive!InputThe first line contains the integers nn and mm (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 0\u2264m\u22642\u22c51050\u2264m\u22642\u22c5105) \u2014 the number of nobles and number of original friendships respectively.The next mm lines each contain the integers uu and vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v), describing a friendship. No friendship is listed twice.The next line contains the integer qq (1\u2264q\u22642\u22c51051\u2264q\u22642\u22c5105) \u2014 the number of queries. The next qq lines contain the queries themselves, each query has one of the following three formats.   11 uu vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v) \u2014 add a friendship between uu and vv. It is guaranteed that uu and vv are not friends at this moment.  22 uu vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v) \u2014 remove a friendship between uu and vv. It is guaranteed that uu and vv are friends at this moment.  33 \u2014 print the answer to the process described in the statement. OutputFor each type 33 query print one integer to a new line. It is guaranteed that there will be at least one type 33 query.ExamplesInputCopy4 3\n2 1\n1 3\n3 4\n4\n3\n1 2 3\n2 3 1\n3\nOutputCopy2\n1\nInputCopy4 3\n2 3\n3 4\n4 1\n1\n3\nOutputCopy1\nNoteConsider the first example. In the first type 3 query, we have the diagram below.In the first round of the process, noble 11 is weaker than all of his friends (22 and 33), and is thus killed. No other noble is vulnerable in round 1. In round 2, noble 33 is weaker than his only friend, noble 44, and is therefore killed. At this point, the process ends, and the answer is 22.  In the second type 3 query, the only surviving noble is 44.\u00a0\u00a0\u00a0\u00a0The second example consists of only one type 33 query. In the first round, two nobles are killed, and in the second round, one noble is killed. The final answer is 11, since only one noble survives.  "], "Constanze's Machine": ["https://codeforces.com/problemset/problem/1245/C", "C. Constanze's Machinetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputConstanze is the smartest girl in her village but she has bad eyesight.One day, she was able to invent an incredible machine! When you pronounce letters, the machine will inscribe them onto a piece of paper. For example, if you pronounce 'c', 'o', 'd', and 'e' in that order, then the machine will inscribe \"code\" onto the paper. Thanks to this machine, she can finally write messages without using her glasses.However, her dumb friend Akko decided to play a prank on her. Akko tinkered with the machine so that if you pronounce 'w', it will inscribe \"uu\" instead of \"w\", and if you pronounce 'm', it will inscribe \"nn\" instead of \"m\"! Since Constanze had bad eyesight, she was not able to realize what Akko did.The rest of the letters behave the same as before: if you pronounce any letter besides 'w' and 'm', the machine will just inscribe it onto a piece of paper.The next day, I received a letter in my mailbox. I can't understand it so I think it's either just some gibberish from Akko, or Constanze made it using her machine. But since I know what Akko did, I can just list down all possible strings that Constanze's machine would have turned into the message I got and see if anything makes sense.But I need to know how much paper I will need, and that's why I'm asking you for help. Tell me the number of strings that Constanze's machine would've turned into the message I got.But since this number can be quite large, tell me instead its remainder when divided by 109+7109+7.If there are no strings that Constanze's machine would've turned into the message I got, then print 00.InputInput consists of a single line containing a string ss (1\u2264|s|\u22641051\u2264|s|\u2264105) \u2014 the received message. ss contains only lowercase Latin letters.OutputPrint a single integer \u2014 the number of strings that Constanze's machine would've turned into the message ss, modulo 109+7109+7.ExamplesInputCopyouuokarinn\nOutputCopy4\nInputCopybanana\nOutputCopy1\nInputCopynnn\nOutputCopy3\nInputCopyamanda\nOutputCopy0\nNoteFor the first example, the candidate strings are the following: \"ouuokarinn\", \"ouuokarim\", \"owokarim\", and \"owokarinn\".For the second example, there is only one: \"banana\".For the third example, the candidate strings are the following: \"nm\", \"mn\" and \"nnn\".For the last example, there are no candidate strings that the machine can turn into \"amanda\", since the machine won't inscribe 'm'."], "Add to Neighbour and Remove": ["https://codeforces.com/problemset/problem/1462/D", "D. Add to Neighbour and Removetime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp was given an array of a[1\u2026n]a[1\u2026n] of nn integers. He can perform the following operation with the array aa no more than nn times:  Polycarp selects the index ii and adds the value aiai to one of his choice of its neighbors. More formally, Polycarp adds the value of aiai to ai\u22121ai\u22121 or to ai+1ai+1 (if such a neighbor does not exist, then it is impossible to add to it).  After adding it, Polycarp removes the ii-th element from the aa array. During this step the length of aa is decreased by 11. The two items above together denote one single operation.For example, if Polycarp has an array a=[3,1,6,6,2]a=[3,1,6,6,2], then it can perform the following sequence of operations with it:   Polycarp selects i=2i=2 and adds the value aiai to (i\u22121)(i\u22121)-th element: a=[4,6,6,2]a=[4,6,6,2].  Polycarp selects i=1i=1 and adds the value aiai to (i+1)(i+1)-th element: a=[10,6,2]a=[10,6,2].  Polycarp selects i=3i=3 and adds the value aiai to (i\u22121)(i\u22121)-th element: a=[10,8]a=[10,8].  Polycarp selects i=2i=2 and adds the value aiai to (i\u22121)(i\u22121)-th element: a=[18]a=[18]. Note that Polycarp could stop performing operations at any time.Polycarp wondered how many minimum operations he would need to perform to make all the elements of aa equal (i.e., he wants all aiai are equal to each other).InputThe first line contains a single integer tt (1\u2264t\u226430001\u2264t\u22643000)\u00a0\u2014 the number of test cases in the test. Then tt test cases follow.The first line of each test case contains a single integer nn (1\u2264n\u226430001\u2264n\u22643000)\u00a0\u2014 the length of the array. The next line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641051\u2264ai\u2264105)\u00a0\u2014 array aa.It is guaranteed that the sum of nn over all test cases does not exceed 30003000.OutputFor each test case, output a single number\u00a0\u2014 the minimum number of operations that Polycarp needs to perform so that all elements of the aa array are the same (equal).ExampleInputCopy4\n5\n3 1 6 6 2\n4\n1 2 2 1\n3\n2 2 2\n4\n6 3 2 1\nOutputCopy4\n2\n0\n2\nNoteIn the first test case of the example, the answer can be constructed like this (just one way among many other ways):[3,1,6,6,2][3,1,6,6,2] \u2212\u2192\u2212\u2212\u2212\u2212\u2212\u2212\u2212i=4,\u00a0add\u00a0to\u00a0left\u2192i=4,\u00a0add\u00a0to\u00a0left [3,1,12,2][3,1,12,2] \u2212\u2192\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212i=2,\u00a0add\u00a0to\u00a0right\u2192i=2,\u00a0add\u00a0to\u00a0right [3,13,2][3,13,2] \u2212\u2192\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212i=1,\u00a0add\u00a0to\u00a0right\u2192i=1,\u00a0add\u00a0to\u00a0right [16,2][16,2] \u2212\u2192\u2212\u2212\u2212\u2212\u2212\u2212\u2212i=2,\u00a0add\u00a0to\u00a0left\u2192i=2,\u00a0add\u00a0to\u00a0left [18][18]. All elements of the array [18][18] are the same.In the second test case of the example, the answer can be constructed like this (just one way among other ways):[1,2,2,1][1,2,2,1] \u2212\u2192\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212i=1,\u00a0add\u00a0to\u00a0right\u2192i=1,\u00a0add\u00a0to\u00a0right [3,2,1][3,2,1] \u2212\u2192\u2212\u2212\u2212\u2212\u2212\u2212\u2212i=3,\u00a0add\u00a0to\u00a0left\u2192i=3,\u00a0add\u00a0to\u00a0left [3,3][3,3]. All elements of the array [3,3][3,3] are the same.In the third test case of the example, Polycarp doesn't need to perform any operations since [2,2,2][2,2,2] contains equal (same) elements only.In the fourth test case of the example, the answer can be constructed like this (just one way among other ways):[6,3,2,1][6,3,2,1] \u2212\u2192\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212i=3,\u00a0add\u00a0to\u00a0right\u2192i=3,\u00a0add\u00a0to\u00a0right [6,3,3][6,3,3] \u2212\u2192\u2212\u2212\u2212\u2212\u2212\u2212\u2212i=3,\u00a0add\u00a0to\u00a0left\u2192i=3,\u00a0add\u00a0to\u00a0left [6,6][6,6]. All elements of the array [6,6][6,6] are the same."], "Phoenix and Towers": ["https://codeforces.com/problemset/problem/1515/C", "C. Phoenix and Towerstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPhoenix has nn blocks of height h1,h2,\u2026,hnh1,h2,\u2026,hn, and all hihi don't exceed some value xx. He plans to stack all nn blocks into mm separate towers. The height of a tower is simply the sum of the heights of its blocks. For the towers to look beautiful, no two towers may have a height difference of strictly more than xx. Please help Phoenix build mm towers that look beautiful. Each tower must have at least one block and all blocks must be used.InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains three integers nn, mm, and xx (1\u2264m\u2264n\u22641051\u2264m\u2264n\u2264105; 1\u2264x\u22641041\u2264x\u2264104)\u00a0\u2014 the number of blocks, the number of towers to build, and the maximum acceptable height difference of any two towers, respectively. The second line of each test case contains nn space-separated integers (1\u2264hi\u2264x1\u2264hi\u2264x)\u00a0\u2014 the heights of the blocks. It is guaranteed that the sum of nn over all the test cases will not exceed 105105.OutputFor each test case, if Phoenix cannot build mm towers that look beautiful, print NO. Otherwise, print YES, followed by nn integers y1,y2,\u2026,yny1,y2,\u2026,yn, where yiyi (1\u2264yi\u2264m1\u2264yi\u2264m) is the index of the tower that the ii-th block is placed in.If there are multiple solutions, print any of them.ExampleInputCopy2\n5 2 3\n1 2 3 1 2\n4 3 3\n1 1 2 3\nOutputCopyYES\n1 1 1 2 2\nYES\n1 2 2 3NoteIn the first test case, the first tower has height 1+2+3=61+2+3=6 and the second tower has height 1+2=31+2=3. Their difference is 6\u22123=36\u22123=3 which doesn't exceed x=3x=3, so the towers are beautiful.In the second test case, the first tower has height 11, the second tower has height 1+2=31+2=3, and the third tower has height 33. The maximum height difference of any two towers is 3\u22121=23\u22121=2 which doesn't exceed x=3x=3, so the towers are beautiful."], "Suffix Structures": ["https://codeforces.com/problemset/problem/448/B", "B. Suffix Structurestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBizon the Champion isn't just a bison. He also is a favorite of the \"Bizons\" team.At a competition the \"Bizons\" got the following problem: \"You are given two distinct words (strings of English letters), s and t. You need to transform word s into word t\". The task looked simple to the guys because they know the suffix data structures well. Bizon Senior loves suffix automaton. By applying it once to a string, he can remove from this string any single character. Bizon Middle knows suffix array well. By applying it once to a string, he can swap any two characters of this string. The guys do not know anything about the suffix tree, but it can help them do much more. Bizon the Champion wonders whether the \"Bizons\" can solve the problem. Perhaps, the solution do not require both data structures. Find out whether the guys can solve the problem and if they can, how do they do it? Can they solve it either only with use of suffix automaton or only with use of suffix array or they need both structures? Note that any structure may be used an unlimited number of times, the structures may be used in any order.InputThe first line contains a non-empty word s. The second line contains a non-empty word t. Words s and t are different. Each word consists only of lowercase English letters. Each word contains at most 100 letters.OutputIn the single line print the answer to the problem. Print \"need tree\" (without the quotes) if word s cannot be transformed into word t even with use of both suffix array and suffix automaton. Print \"automaton\" (without the quotes) if you need only the suffix automaton to solve the problem. Print \"array\" (without the quotes) if you need only the suffix array to solve the problem. Print \"both\" (without the quotes), if you need both data structures to solve the problem.It's guaranteed that if you can solve the problem only with use of suffix array, then it is impossible to solve it only with use of suffix automaton. This is also true for suffix automaton.ExamplesInputCopyautomatontomatOutputCopyautomatonInputCopyarrayararyOutputCopyarrayInputCopybothhotOutputCopybothInputCopyneedtreeOutputCopyneed treeNoteIn the third sample you can act like that: first transform \"both\" into \"oth\" by removing the first character using the suffix automaton and then make two swaps of the string using the suffix array and get \"hot\"."], "Diverse Garland": ["https://codeforces.com/problemset/problem/1108/D", "D. Diverse Garlandtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a garland consisting of nn lamps. Each lamp is colored red, green or blue. The color of the ii-th lamp is sisi ('R', 'G' and 'B' \u2014 colors of lamps in the garland).You have to recolor some lamps in this garland (recoloring a lamp means changing its initial color to another) in such a way that the obtained garland is diverse.A garland is called diverse if any two adjacent (consecutive) lamps (i.\u2009e. such lamps that the distance between their positions is 11) have distinct colors.In other words, if the obtained garland is tt then for each ii from 11 to n\u22121n\u22121 the condition ti\u2260ti+1ti\u2260ti+1 should be satisfied.Among all ways to recolor the initial garland to make it diverse you have to choose one with the minimum number of recolored lamps. If there are multiple optimal solutions, print any of them.InputThe first line of the input contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of lamps.The second line of the input contains the string ss consisting of nn characters 'R', 'G' and 'B' \u2014 colors of lamps in the garland.OutputIn the first line of the output print one integer rr \u2014 the minimum number of recolors needed to obtain a diverse garland from the given one.In the second line of the output print one string tt of length nn \u2014 a diverse garland obtained from the initial one with minimum number of recolors. If there are multiple optimal solutions, print any of them.ExamplesInputCopy9\nRBGRRBRGG\nOutputCopy2\nRBGRGBRGR\nInputCopy8\nBBBGBRRR\nOutputCopy2\nBRBGBRGR\nInputCopy13\nBBRRRRGGGGGRR\nOutputCopy6\nBGRBRBGBGBGRG\n"], "Berland Regional": ["https://codeforces.com/problemset/problem/1519/C", "C. Berland Regionaltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp is an organizer of a Berland ICPC regional event. There are nn universities in Berland numbered from 11 to nn. Polycarp knows all competitive programmers in the region. There are nn students: the ii-th student is enrolled at a university uiui and has a programming skill sisi.Polycarp has to decide on the rules now. In particular, the number of members in the team.Polycarp knows that if he chooses the size of the team to be some integer kk, each university will send their kk strongest (with the highest programming skill ss) students in the first team, the next kk strongest students in the second team and so on. If there are fewer than kk students left, then the team can't be formed. Note that there might be universities that send zero teams.The strength of the region is the total skill of the members of all present teams. If there are no teams present, then the strength is 00.Help Polycarp to find the strength of the region for each choice of kk from 11 to nn.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of testcases.The first line of each testcase contains a single integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the number of universities and the number of students.The second line of each testcase contains nn integers u1,u2,\u2026,unu1,u2,\u2026,un (1\u2264ui\u2264n1\u2264ui\u2264n)\u00a0\u2014 the university the ii-th student is enrolled at.The third line of each testcase contains nn integers s1,s2,\u2026,sns1,s2,\u2026,sn (1\u2264si\u22641091\u2264si\u2264109)\u00a0\u2014 the programming skill of the ii-th student.The sum of nn over all testcases doesn't exceed 2\u22c51052\u22c5105.OutputFor each testcase print nn integers: the strength of the region\u00a0\u2014 the total skill of the members of the present teams\u00a0\u2014 for each choice of team size kk.ExampleInputCopy4\n7\n1 2 1 2 1 2 1\n6 8 3 1 5 1 5\n10\n1 1 1 2 2 2 2 3 3 3\n3435 3014 2241 2233 2893 2102 2286 2175 1961 2567\n6\n3 3 3 3 3 3\n5 9 6 7 9 7\n1\n1\n3083\nOutputCopy29 28 26 19 0 0 0 \n24907 20705 22805 9514 0 0 0 0 0 0 \n43 43 43 32 38 43 \n3083 \nNoteIn the first testcase the teams from each university for each kk are:   k=1k=1:   university 11: [6],[5],[5],[3][6],[5],[5],[3];  university 22: [8],[1],[1][8],[1],[1];   k=2k=2:   university 11: [6,5],[5,3][6,5],[5,3];  university 22: [8,1][8,1];   k=3k=3:   university 11: [6,5,5][6,5,5];  university 22: [8,1,1][8,1,1];   k=4k=4:   university 11: [6,5,5,3][6,5,5,3];  "], "Unstable String": ["https://codeforces.com/problemset/problem/1535/C", "C. Unstable Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string ss consisting of the characters 0, 1, and ?.Let's call a string unstable if it consists of the characters 0 and 1 and any two adjacent characters are different (i.\u00a0e. it has the form 010101... or 101010...).Let's call a string beautiful if it consists of the characters 0, 1, and ?, and you can replace the characters ? to 0 or 1 (for each character, the choice is independent), so that the string becomes unstable.For example, the strings 0??10, 0, and ??? are beautiful, and the strings 00 and ?1??1 are not.Calculate the number of beautiful contiguous substrings of the string ss.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 number of test cases.The first and only line of each test case contains the string ss (1\u2264|s|\u22642\u22c51051\u2264|s|\u22642\u22c5105) consisting of characters 0, 1, and ?.It is guaranteed that the sum of the string lengths over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output a single integer\u00a0\u2014 the number of beautiful substrings of the string ss.ExampleInputCopy3\n0?10\n???\n?10??1100\nOutputCopy8\n6\n25\n"], "String Equality": ["https://codeforces.com/problemset/problem/1451/C", "C. String Equalitytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAshish has two strings aa and bb, each of length nn, and an integer kk. The strings only contain lowercase English letters.He wants to convert string aa into string bb by performing some (possibly zero) operations on aa.In one move, he can either   choose an index ii (1\u2264i\u2264n\u221211\u2264i\u2264n\u22121) and swap aiai and ai+1ai+1, or  choose an index ii (1\u2264i\u2264n\u2212k+11\u2264i\u2264n\u2212k+1) and if ai,ai+1,\u2026,ai+k\u22121ai,ai+1,\u2026,ai+k\u22121 are all equal to some character cc (c\u2260c\u2260 'z'), replace each one with the next character (c+1)(c+1), that is, 'a' is replaced by 'b', 'b' is replaced by 'c' and so on. Note that he can perform any number of operations, and the operations can only be performed on string aa. Help Ashish determine if it is possible to convert string aa into bb after performing some (possibly zero) operations on it.InputThe first line contains a single integer tt (1\u2264t\u22641051\u2264t\u2264105)\u00a0\u2014 the number of test cases. The description of each test case is as follows.The first line of each test case contains two integers nn (2\u2264n\u22641062\u2264n\u2264106) and kk (1\u2264k\u2264n1\u2264k\u2264n).The second line of each test case contains the string aa of length nn consisting of lowercase English letters.The third line of each test case contains the string bb of length nn consisting of lowercase English letters.It is guaranteed that the sum of values nn among all test cases does not exceed 106106.OutputFor each test case, print \"Yes\" if Ashish can convert aa into bb after some moves, else print \"No\".You may print the letters of the answer in any case (upper or lower).ExampleInputCopy4\n3 3\nabc\nbcd\n4 2\nabba\nazza\n2 1\nzz\naa\n6 2\naaabba\nddddcc\nOutputCopyNo\nYes\nNo\nYes\nNoteIn the first test case it can be shown that it is impossible to convert aa into bb.In the second test case,\"abba\" \u2212\u2192inc\u2192inc \"acca\" \u2212\u2192inc\u2192inc \u2026\u2026 \u2212\u2192inc\u2192inc \"azza\".Here \"swap\" denotes an operation of the first type, and \"inc\" denotes an operation of the second type.In the fourth test case,\"aaabba\" \u2212\u2192\u2212\u2212swap\u2192swap \"aaabab\" \u2212\u2192\u2212\u2212swap\u2192swap \"aaaabb\" \u2212\u2192inc\u2192inc \u2026\u2026 \u2212\u2192inc\u2192inc \"ddaabb\" \u2212\u2192inc\u2192inc \u2026\u2026 \u2212\u2192inc\u2192inc \"ddddbb\" \u2212\u2192inc\u2192inc \u2026\u2026 \u2212\u2192inc\u2192inc \"ddddcc\"."], "Dreamoon Likes Permutations": ["https://codeforces.com/problemset/problem/1330/B", "B. Dreamoon Likes Permutationstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe sequence of mm integers is called the permutation if it contains all integers from 11 to mm exactly once. The number mm is called the length of the permutation.Dreamoon has two permutations p1p1 and p2p2 of non-zero lengths l1l1 and l2l2.Now Dreamoon concatenates these two permutations into another sequence aa of length l1+l2l1+l2. First l1l1 elements of aa is the permutation p1p1 and next l2l2 elements of aa is the permutation p2p2. You are given the sequence aa, and you need to find two permutations p1p1 and p2p2. If there are several possible ways to restore them, you should find all of them. (Note that it is also possible that there will be no ways.)InputThe first line contains an integer tt (1\u2264t\u2264100001\u2264t\u226410000) denoting the number of test cases in the input.Each test case contains two lines. The first line contains one integer nn (2\u2264n\u22642000002\u2264n\u2264200000): the length of aa. The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n\u221211\u2264ai\u2264n\u22121).The total sum of nn is less than 200000200000.OutputFor each test case, the first line of output should contain one integer kk: the number of ways to divide aa into permutations p1p1 and p2p2.Each of the next kk lines should contain two integers l1l1 and l2l2 (1\u2264l1,l2\u2264n,l1+l2=n1\u2264l1,l2\u2264n,l1+l2=n), denoting, that it is possible to divide aa into two permutations of length l1l1 and l2l2 (p1p1 is the first l1l1 elements of aa, and p2p2 is the last l2l2 elements of aa). You can print solutions in any order.ExampleInputCopy6\n5\n1 4 3 2 1\n6\n2 4 1 3 2 1\n4\n2 1 1 3\n4\n1 3 3 1\n12\n2 1 3 4 5 6 7 8 9 1 10 2\n3\n1 1 1\nOutputCopy2\n1 4\n4 1\n1\n4 2\n0\n0\n1\n2 10\n0\nNoteIn the first example, two possible ways to divide aa into permutations are {1}+{4,3,2,1}{1}+{4,3,2,1} and {1,4,3,2}+{1}{1,4,3,2}+{1}.In the second example, the only way to divide aa into permutations is {2,4,1,3}+{2,1}{2,4,1,3}+{2,1}.In the third example, there are no possible ways."], "k-th divisor": ["https://codeforces.com/problemset/problem/762/A", "A. k-th divisortime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two integers n and k. Find k-th smallest divisor of n, or report that it doesn't exist.Divisor of n is any such natural number, that n can be divided by it without remainder.InputThe first line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u20091015, 1\u2009\u2264\u2009k\u2009\u2264\u2009109).OutputIf n has less than k divisors, output -1.Otherwise, output the k-th smallest divisor of n.ExamplesInputCopy4 2OutputCopy2InputCopy5 3OutputCopy-1InputCopy12 5OutputCopy6NoteIn the first example, number 4 has three divisors: 1, 2 and 4. The second one is 2.In the second example, number 5 has only two divisors: 1 and 5. The third divisor doesn't exist, so the answer is -1."], "Watchmen": ["https://codeforces.com/problemset/problem/650/A", "A. Watchmentime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWatchmen are in a danger and Doctor Manhattan together with his friend Daniel Dreiberg should warn them as soon as possible. There are n watchmen on a plane, the i-th watchman is located at point (xi,\u2009yi).They need to arrange a plan, but there are some difficulties on their way. As you know, Doctor Manhattan considers the distance between watchmen i and j to be |xi\u2009-\u2009xj|\u2009+\u2009|yi\u2009-\u2009yj|. Daniel, as an ordinary person, calculates the distance using the formula .The success of the operation relies on the number of pairs (i,\u2009j) (1\u2009\u2264\u2009i\u2009<\u2009j\u2009\u2264\u2009n), such that the distance between watchman i and watchmen j calculated by Doctor Manhattan is equal to the distance between them calculated by Daniel. You were asked to compute the number of such pairs.InputThe first line of the input contains the single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of watchmen.Each of the following n lines contains two integers xi and yi (|xi|,\u2009|yi|\u2009\u2264\u2009109).Some positions may coincide.OutputPrint the number of pairs of watchmen such that the distance between them calculated by Doctor Manhattan is equal to the distance calculated by Daniel.ExamplesInputCopy31 17 51 5OutputCopy2InputCopy60 00 10 2-1 10 11 1OutputCopy11NoteIn the first sample, the distance between watchman 1 and watchman 2 is equal to |1\u2009-\u20097|\u2009+\u2009|1\u2009-\u20095|\u2009=\u200910 for Doctor Manhattan and  for Daniel. For pairs (1,\u20091), (1,\u20095) and (7,\u20095), (1,\u20095) Doctor Manhattan and Daniel will calculate the same distances."], "Universal Solution": ["https://codeforces.com/problemset/problem/1380/B", "B. Universal Solutiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently, you found a bot to play \"Rock paper scissors\" with. Unfortunately, the bot uses quite a simple algorithm to play: he has a string s=s1s2\u2026sns=s1s2\u2026sn of length nn where each letter is either R, S or P.While initializing, the bot is choosing a starting index pospos (1\u2264pos\u2264n1\u2264pos\u2264n), and then it can play any number of rounds. In the first round, he chooses \"Rock\", \"Scissors\" or \"Paper\" based on the value of sposspos:   if sposspos is equal to R the bot chooses \"Rock\";  if sposspos is equal to S the bot chooses \"Scissors\";  if sposspos is equal to P the bot chooses \"Paper\"; In the second round, the bot's choice is based on the value of spos+1spos+1. In the third round\u00a0\u2014 on spos+2spos+2 and so on. After snsn the bot returns to s1s1 and continues his game.You plan to play nn rounds and you've already figured out the string ss but still don't know what is the starting index pospos. But since the bot's tactic is so boring, you've decided to find nn choices to each round to maximize the average number of wins.In other words, let's suggest your choices are c1c2\u2026cnc1c2\u2026cn and if the bot starts from index pospos then you'll win in win(pos)win(pos) rounds. Find c1c2\u2026cnc1c2\u2026cn such that win(1)+win(2)+\u22ef+win(n)nwin(1)+win(2)+\u22ef+win(n)n is maximum possible.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.Next tt lines contain test cases\u00a0\u2014 one per line. The first and only line of each test case contains string s=s1s2\u2026sns=s1s2\u2026sn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105; si\u2208{R,S,P}si\u2208{R,S,P})\u00a0\u2014 the string of the bot.It's guaranteed that the total length of all strings in one test doesn't exceed 2\u22c51052\u22c5105.OutputFor each test case, print nn choices c1c2\u2026cnc1c2\u2026cn to maximize the average number of wins. Print them in the same manner as the string ss.If there are multiple optimal answers, print any of them.ExampleInputCopy3\nRRRR\nRSP\nS\nOutputCopyPPPP\nRSP\nRNoteIn the first test case, the bot (wherever it starts) will always choose \"Rock\", so we can always choose \"Paper\". So, in any case, we will win all n=4n=4 rounds, so the average is also equal to 44.In the second test case:   if bot will start from pos=1pos=1, then (s1,c1)(s1,c1) is draw, (s2,c2)(s2,c2) is draw and (s3,c3)(s3,c3) is draw, so win(1)=0win(1)=0;  if bot will start from pos=2pos=2, then (s2,c1)(s2,c1) is win, (s3,c2)(s3,c2) is win and (s1,c3)(s1,c3) is win, so win(2)=3win(2)=3;  if bot will start from pos=3pos=3, then (s3,c1)(s3,c1) is lose, (s1,c2)(s1,c2) is lose and (s2,c3)(s2,c3) is lose, so win(3)=0win(3)=0;  The average is equal to 0+3+03=10+3+03=1 and it can be proven that it's the maximum possible average.A picture from Wikipedia explaining \"Rock paper scissors\" game:   "], "News Distribution": ["https://codeforces.com/problemset/problem/1167/C", "C. News Distributiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn some social network, there are nn users communicating with each other in mm groups of friends. Let's analyze the process of distributing some news between users.Initially, some user xx receives the news from some source. Then he or she sends the news to his or her friends (two users are friends if there is at least one group such that both of them belong to this group). Friends continue sending the news to their friends, and so on. The process ends when there is no pair of friends such that one of them knows the news, and another one doesn't know.For each user xx you have to determine what is the number of users that will know the news if initially only user xx starts distributing it. InputThe first line contains two integers nn and mm (1\u2264n,m\u22645\u22c51051\u2264n,m\u22645\u22c5105) \u2014 the number of users and the number of groups of friends, respectively.Then mm lines follow, each describing a group of friends. The ii-th line begins with integer kiki (0\u2264ki\u2264n0\u2264ki\u2264n) \u2014 the number of users in the ii-th group. Then kiki distinct integers follow, denoting the users belonging to the ii-th group.It is guaranteed that \u2211i=1mki\u22645\u22c5105\u2211i=1mki\u22645\u22c5105.OutputPrint nn integers. The ii-th integer should be equal to the number of users that will know the news if user ii starts distributing it.ExampleInputCopy7 5\n3 2 5 4\n0\n2 1 2\n1 1\n2 6 7\nOutputCopy4 4 1 4 4 2 2 "], "Toy Blocks": ["https://codeforces.com/problemset/problem/1452/B", "B. Toy Blockstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are asked to watch your nephew who likes to play with toy blocks in a strange way.He has nn boxes and the ii-th box has aiai blocks. His game consists of two steps:   he chooses an arbitrary box ii;  he tries to move all blocks from the ii-th box to other boxes.  If he can make the same number of blocks in each of n\u22121n\u22121 other boxes then he will be happy, otherwise, will be sad. Note that your nephew can only move the blocks from the chosen box to the other boxes; he cannot move blocks from the other boxes.You don't want to make your nephew sad, so you decided to put several extra blocks into some boxes in such a way that no matter which box ii he chooses he won't be sad. What is the minimum number of extra blocks you need to put?InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains the integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the number of boxes.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109)\u00a0\u2014 the number of blocks in each box.It's guaranteed that the sum of nn over test cases doesn't exceed 105105.OutputFor each test case, print a single integer\u00a0\u2014 the minimum number of blocks you need to put. It can be proved that the answer always exists, i.\u00a0e. the number of blocks is finite.ExampleInputCopy3\n3\n3 2 2\n4\n2 2 3 2\n3\n0 3 0\nOutputCopy1\n0\n3\nNoteIn the first test case, you can, for example, put one extra block into the first box and make a=[4,2,2]a=[4,2,2]. If your nephew chooses the box with 44 blocks, then we will move two blocks to the second box and two blocks to the third box. If he chooses the box with 22 blocks then he will move these two blocks to the other box with 22 blocks.In the second test case, you don't need to put any extra blocks, since no matter which box your nephew chooses, he can always make other boxes equal.In the third test case, you should put 33 extra blocks. For example, you can put 22 blocks in the first box and 11 block in the third box. You'll get array a=[2,3,1]a=[2,3,1]."], "Wonderful Coloring - 2": ["https://codeforces.com/problemset/problem/1551/B2", "B2. Wonderful Coloring - 2time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis problem is an extension of the problem \"Wonderful Coloring - 1\". It has quite many differences, so you should read this statement completely.Recently, Paul and Mary have found a new favorite sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an. They want to paint it using pieces of chalk of kk colors. The coloring of a sequence is called wonderful if the following conditions are met:  each element of the sequence is either painted in one of kk colors or isn't painted;  each two elements which are painted in the same color are different (i.\u2009e. there's no two equal values painted in the same color);  let's calculate for each of kk colors the number of elements painted in the color \u2014 all calculated numbers must be equal;  the total number of painted elements of the sequence is the maximum among all colorings of the sequence which meet the first three conditions. E.\u2009g. consider a sequence a=[3,1,1,1,1,10,3,10,10,2]a=[3,1,1,1,1,10,3,10,10,2] and k=3k=3. One of the wonderful colorings of the sequence is shown in the figure.  The example of a wonderful coloring of the sequence a=[3,1,1,1,1,10,3,10,10,2]a=[3,1,1,1,1,10,3,10,10,2] and k=3k=3. Note that one of the elements isn't painted. Help Paul and Mary to find a wonderful coloring of a given sequence aa.InputThe first line contains one integer tt (1\u2264t\u2264100001\u2264t\u226410000) \u2014 the number of test cases. Then tt test cases follow.Each test case consists of two lines. The first one contains two integers nn and kk (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 1\u2264k\u2264n1\u2264k\u2264n) \u2014 the length of a given sequence and the number of colors, respectively. The second one contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n).It is guaranteed that the sum of nn over all test cases doesn't exceed 2\u22c51052\u22c5105.OutputOutput tt lines, each of them must contain a description of a wonderful coloring for the corresponding test case.Each wonderful coloring must be printed as a sequence of nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn (0\u2264ci\u2264k0\u2264ci\u2264k) separated by spaces where  ci=0ci=0, if ii-th element isn't painted;  ci>0ci>0, if ii-th element is painted in the cici-th color. Remember that you need to maximize the total count of painted elements for the wonderful coloring. If there are multiple solutions, print any one.ExampleInputCopy6\n10 3\n3 1 1 1 1 10 3 10 10 2\n4 4\n1 1 1 1\n1 1\n1\n13 1\n3 1 4 1 5 9 2 6 5 3 5 8 9\n13 2\n3 1 4 1 5 9 2 6 5 3 5 8 9\n13 3\n3 1 4 1 5 9 2 6 5 3 5 8 9\nOutputCopy1 1 0 2 3 2 2 1 3 3\n4 2 1 3\n1\n0 0 1 1 0 1 1 1 0 1 1 1 0\n2 1 2 2 1 1 1 1 2 1 0 2 2\n1 1 3 2 1 3 3 1 2 2 3 2 0\nNoteIn the first test case, the answer is shown in the figure in the statement. The red color has number 11, the blue color \u2014 22, the green \u2014 33."], "Powers Of Two": ["https://codeforces.com/problemset/problem/1095/C", "C. Powers Of Twotime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA positive integer xx is called a power of two if it can be represented as x=2yx=2y, where yy is a non-negative integer. So, the powers of two are 1,2,4,8,16,\u20261,2,4,8,16,\u2026.You are given two positive integers nn and kk. Your task is to represent nn as the sum of exactly kk powers of two.InputThe only line of the input contains two integers nn and kk (1\u2264n\u22641091\u2264n\u2264109, 1\u2264k\u22642\u22c51051\u2264k\u22642\u22c5105).OutputIf it is impossible to represent nn as the sum of kk powers of two, print NO.Otherwise, print YES, and then print kk positive integers b1,b2,\u2026,bkb1,b2,\u2026,bk such that each of bibi is a power of two, and \u2211i=1kbi=n\u2211i=1kbi=n. If there are multiple answers, you may print any of them.ExamplesInputCopy9 4\nOutputCopyYES\n1 2 2 4 \nInputCopy8 1\nOutputCopyYES\n8 \nInputCopy5 1\nOutputCopyNO\nInputCopy3 7\nOutputCopyNO\n"], "The Delivery Dilemma": ["https://codeforces.com/problemset/problem/1443/C", "C. The Delivery Dilemmatime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya is preparing for his birthday. He decided that there would be nn different dishes on the dinner table, numbered from 11 to nn. Since Petya doesn't like to cook, he wants to order these dishes in restaurants.Unfortunately, all dishes are prepared in different restaurants and therefore Petya needs to pick up his orders from nn different places. To speed up this process, he wants to order courier delivery at some restaurants. Thus, for each dish, there are two options for Petya how he can get it:  the dish will be delivered by a courier from the restaurant ii, in this case the courier will arrive in aiai minutes,  Petya goes to the restaurant ii on his own and picks up the dish, he will spend bibi minutes on this. Each restaurant has its own couriers and they start delivering the order at the moment Petya leaves the house. In other words, all couriers work in parallel. Petya must visit all restaurants in which he has not chosen delivery, he does this consistently.For example, if Petya wants to order n=4n=4 dishes and a=[3,7,4,5]a=[3,7,4,5], and b=[2,1,2,4]b=[2,1,2,4], then he can order delivery from the first and the fourth restaurant, and go to the second and third on your own. Then the courier of the first restaurant will bring the order in 33 minutes, the courier of the fourth restaurant will bring the order in 55 minutes, and Petya will pick up the remaining dishes in 1+2=31+2=3 minutes. Thus, in 55 minutes all the dishes will be at Petya's house.Find the minimum time after which all the dishes can be at Petya's home.InputThe first line contains one positive integer tt (1\u2264t\u22642\u22c51051\u2264t\u22642\u22c5105)\u00a0\u2014 the number of test cases. Then tt test cases follow.Each test case begins with a line containing one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the number of dishes that Petya wants to order.The second line of each test case contains nn integers a1\u2026ana1\u2026an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the time of courier delivery of the dish with the number ii.The third line of each test case contains nn integers b1\u2026bnb1\u2026bn (1\u2264bi\u22641091\u2264bi\u2264109)\u00a0\u2014 the time during which Petya will pick up the dish with the number ii.The sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case output one integer\u00a0\u2014 the minimum time after which all dishes can be at Petya's home.ExampleInputCopy4\n4\n3 7 4 5\n2 1 2 4\n4\n1 2 3 4\n3 3 3 3\n2\n1 2\n10 10\n2\n10 10\n1 2\nOutputCopy5\n3\n2\n3\n"], "Berland Crossword": ["https://codeforces.com/problemset/problem/1494/B", "B. Berland Crosswordtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBerland crossword is a puzzle that is solved on a square grid with nn rows and nn columns. Initially all the cells are white.To solve the puzzle one has to color some cells on the border of the grid black in such a way that:   exactly UU cells in the top row are black;  exactly RR cells in the rightmost column are black;  exactly DD cells in the bottom row are black;  exactly LL cells in the leftmost column are black. Note that you can color zero cells black and leave every cell white.Your task is to check if there exists a solution to the given puzzle.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of testcases.Then the descriptions of tt testcases follow.The only line of each testcase contains 55 integers n,U,R,D,Ln,U,R,D,L (2\u2264n\u22641002\u2264n\u2264100; 0\u2264U,R,D,L\u2264n0\u2264U,R,D,L\u2264n).OutputFor each testcase print \"YES\" if the solution exists and \"NO\" otherwise.You may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES are all recognized as positive answer).ExampleInputCopy4\n5 2 5 3 1\n3 0 0 0 0\n4 4 1 4 0\n2 1 1 1 1\nOutputCopyYES\nYES\nNO\nYES\nNoteHere are possible solutions to testcases 11, 22 and 44:   "], "NEKO's Maze Game": ["https://codeforces.com/problemset/problem/1292/A", "A. NEKO's Maze Gametime limit per test1.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output3R2 as DJ Mashiro - Happiness Breeze Ice - DJ Mashiro is dead or aliveNEKO#\u03a6\u03c9\u03a6 has just got a new maze game on her PC!The game's main puzzle is a maze, in the forms of a 2\u00d7n2\u00d7n rectangle grid. NEKO's task is to lead a Nekomimi girl from cell (1,1)(1,1) to the gate at (2,n)(2,n) and escape the maze. The girl can only move between cells sharing a common side.However, at some moments during the game, some cells may change their state: either from normal ground to lava (which forbids movement into that cell), or vice versa (which makes that cell passable again). Initially all cells are of the ground type.After hours of streaming, NEKO finally figured out there are only qq such moments: the ii-th moment toggles the state of cell (ri,ci)(ri,ci) (either from ground to lava or vice versa).Knowing this, NEKO wonders, after each of the qq moments, whether it is still possible to move from cell (1,1)(1,1) to cell (2,n)(2,n) without going through any lava cells.Although NEKO is a great streamer and gamer, she still can't get through quizzes and problems requiring large amount of Brain Power. Can you help her?InputThe first line contains integers nn, qq (2\u2264n\u22641052\u2264n\u2264105, 1\u2264q\u22641051\u2264q\u2264105).The ii-th of qq following lines contains two integers riri, cici (1\u2264ri\u226421\u2264ri\u22642, 1\u2264ci\u2264n1\u2264ci\u2264n), denoting the coordinates of the cell to be flipped at the ii-th moment.It is guaranteed that cells (1,1)(1,1) and (2,n)(2,n) never appear in the query list.OutputFor each moment, if it is possible to travel from cell (1,1)(1,1) to cell (2,n)(2,n), print \"Yes\", otherwise print \"No\". There should be exactly qq answers, one after every update.You can print the words in any case (either lowercase, uppercase or mixed).ExampleInputCopy5 5\n2 3\n1 4\n2 4\n2 3\n1 4\nOutputCopyYes\nNo\nNo\nNo\nYes\nNoteWe'll crack down the example test here:  After the first query, the girl still able to reach the goal. One of the shortest path ways should be: (1,1)\u2192(1,2)\u2192(1,3)\u2192(1,4)\u2192(1,5)\u2192(2,5)(1,1)\u2192(1,2)\u2192(1,3)\u2192(1,4)\u2192(1,5)\u2192(2,5).  After the second query, it's impossible to move to the goal, since the farthest cell she could reach is (1,3)(1,3).  After the fourth query, the (2,3)(2,3) is not blocked, but now all the 44-th column is blocked, so she still can't reach the goal.  After the fifth query, the column barrier has been lifted, thus she can go to the final goal again. "], "Array Splitting": ["https://codeforces.com/problemset/problem/1197/C", "C. Array Splittingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a sorted array a1,a2,\u2026,ana1,a2,\u2026,an (for each index i>1i>1 condition ai\u2265ai\u22121ai\u2265ai\u22121 holds) and an integer kk.You are asked to divide this array into kk non-empty consecutive subarrays. Every element in the array should be included in exactly one subarray. Let max(i)max(i) be equal to the maximum in the ii-th subarray, and min(i)min(i) be equal to the minimum in the ii-th subarray. The cost of division is equal to \u2211i=1k(max(i)\u2212min(i))\u2211i=1k(max(i)\u2212min(i)). For example, if a=[2,4,5,5,8,11,19]a=[2,4,5,5,8,11,19] and we divide it into 33 subarrays in the following way: [2,4],[5,5],[8,11,19][2,4],[5,5],[8,11,19], then the cost of division is equal to (4\u22122)+(5\u22125)+(19\u22128)=13(4\u22122)+(5\u22125)+(19\u22128)=13.Calculate the minimum cost you can obtain by dividing the array aa into kk non-empty consecutive subarrays. InputThe first line contains two integers nn and kk (1\u2264k\u2264n\u22643\u22c51051\u2264k\u2264n\u22643\u22c5105).The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109, ai\u2265ai\u22121ai\u2265ai\u22121). OutputPrint the minimum cost you can obtain by dividing the array aa into kk nonempty consecutive subarrays. ExamplesInputCopy6 3\n4 8 15 16 23 42\nOutputCopy12\nInputCopy4 4\n1 3 3 7\nOutputCopy0\nInputCopy8 1\n1 1 2 3 5 8 13 21\nOutputCopy20\nNoteIn the first test we can divide array aa in the following way: [4,8,15,16],[23],[42][4,8,15,16],[23],[42]. "], "Meximum Array": ["https://codeforces.com/problemset/problem/1628/A", "A. Meximum Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMihai has just learned about the MEX concept and since he liked it so much, he decided to use it right away.Given an array aa of nn non-negative integers, Mihai wants to create a new array bb that is formed in the following way:While aa is not empty:   Choose an integer kk (1\u2264k\u2264|a|1\u2264k\u2264|a|).  Append the MEX of the first kk numbers of the array aa to the end of array bb and erase them from the array aa, shifting the positions of the remaining numbers in aa. But, since Mihai loves big arrays as much as the MEX concept, he wants the new array bb to be the lexicographically maximum. So, Mihai asks you to tell him what the maximum array bb that can be created by constructing the array optimally is.An array xx is lexicographically greater than an array yy if in the first position where xx and yy differ xi>yixi>yi or if |x|>|y||x|>|y| and yy is a prefix of xx (where |x||x| denotes the size of the array xx).The MEX of a set of non-negative integers is the minimal non-negative integer such that it is not in the set. For example, MEX({1,2,31,2,3}) =0=0 and MEX({0,1,2,4,50,1,2,4,5}) =3=3.InputThe first line of the input contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases. The description of test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of elements in the array aa.The second line of each test case contains nn non-negative integers a1,\u2026,ana1,\u2026,an (0\u2264ai\u2264n0\u2264ai\u2264n), where aiai is the ii-th integer from the array aa.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case print mm \u2014 the length of the maximum array bb Mihai can create, followed by mm integers denoting the elements of the array bb.ExampleInputCopy6\n5\n1 0 2 0 3\n8\n2 2 3 4 0 1 2 0\n1\n1\n5\n0 1 2 3 4\n4\n0 1 1 0\n10\n0 0 2 1 1 1 0 0 1 1\nOutputCopy1\n4 \n2\n5 1 \n1\n0 \n1\n5 \n2\n2 2 \n4\n3 2 2 0 \nNoteIn the first test case, the lexicographically maximum array bb is obtained by selecting k=5k=5, resulting in the MEXMEX of the whole array aa. It is lexicographically maximum because an array starting with a smaller number than 44 is lexicographically smaller, and choosing a k<5k<5 would result in an array starting with a number smaller than 44.In the second test case, there are two ways to obtain the maximum array: first selecting k=6k=6, then k=2k=2, or first selecting k=7k=7 and then k=1k=1."], "Make Good": ["https://codeforces.com/problemset/problem/1270/C", "C. Make Goodtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call an array a1,a2,\u2026,ama1,a2,\u2026,am of nonnegative integer numbers good if a1+a2+\u22ef+am=2\u22c5(a1\u2295a2\u2295\u22ef\u2295am)a1+a2+\u22ef+am=2\u22c5(a1\u2295a2\u2295\u22ef\u2295am), where \u2295\u2295 denotes the bitwise XOR operation.For example, array [1,2,3,6][1,2,3,6] is good, as 1+2+3+6=12=2\u22c56=2\u22c5(1\u22952\u22953\u22956)1+2+3+6=12=2\u22c56=2\u22c5(1\u22952\u22953\u22956). At the same time, array [1,2,1,3][1,2,1,3] isn't good, as 1+2+1+3=7\u22602\u22c51=2\u22c5(1\u22952\u22951\u22953)1+2+1+3=7\u22602\u22c51=2\u22c5(1\u22952\u22951\u22953).You are given an array of length nn: a1,a2,\u2026,ana1,a2,\u2026,an. Append at most 33 elements to it to make it good. Appended elements don't have to be different. It can be shown that the solution always exists under the given constraints. If there are different solutions, you are allowed to output any of them. Note that you don't have to minimize the number of added elements!. So, if an array is good already you are allowed to not append elements.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u2264100001\u2264t\u226410000). The description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u2264105)(1\u2264n\u2264105)\u00a0\u2014 the size of the array.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109)\u00a0\u2014 the elements of the array.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case, output two lines.In the first line, output a single integer ss (0\u2264s\u226430\u2264s\u22643)\u00a0\u2014 the number of elements you want to append.In the second line, output ss integers b1,\u2026,bsb1,\u2026,bs (0\u2264bi\u226410180\u2264bi\u22641018)\u00a0\u2014 the elements you want to append to the array.If there are different solutions, you are allowed to output any of them.ExampleInputCopy3\n4\n1 2 3 6\n1\n8\n2\n1 1\nOutputCopy0\n\n2\n4 4\n3\n2 6 2\nNoteIn the first test case of the example, the sum of all numbers is 1212, and their \u2295\u2295 is 66, so the condition is already satisfied.In the second test case of the example, after adding 4,44,4, the array becomes [8,4,4][8,4,4]. The sum of numbers in it is 1616, \u2295\u2295 of numbers in it is 88."], "Dominant Character": ["https://codeforces.com/problemset/problem/1605/C", "C. Dominant Charactertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAshish has a string ss of length nn containing only characters 'a', 'b' and 'c'.He wants to find the length of the smallest substring, which satisfies the following conditions:   Length of the substring is at least 22  'a' occurs strictly more times in this substring than 'b'  'a' occurs strictly more times in this substring than 'c'  Ashish is busy planning his next Codeforces round. Help him solve the problem.A string aa is a substring of a string bb if aa can be obtained from bb by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.InputThe first line contains a single integer tt (1\u2264t\u2264105)(1\u2264t\u2264105) \u00a0\u2014 the number of test cases. The description of test cases follows.The first line of each test case contains a single integer nn (2\u2264n\u2264106)(2\u2264n\u2264106) \u00a0\u2014 the length of the string ss.The second line of each test case contains a string ss consisting only of characters 'a', 'b' and 'c'.It is guaranteed that the sum of nn over all test cases does not exceed 106106.OutputFor each test case, output the length of the smallest substring which satisfies the given conditions or print \u22121\u22121 if there is no such substring.ExampleInputCopy3\n2\naa\n5\ncbabb\n8\ncacabccc\nOutputCopy2\n-1\n3\nNoteConsider the first test case. In the substring \"aa\", 'a' occurs twice, while 'b' and 'c' occur zero times. Since 'a' occurs strictly more times than 'b' and 'c', the substring \"aa\" satisfies the condition and the answer is 22. The substring \"a\" also satisfies this condition, however its length is not at least 22.In the second test case, it can be shown that in none of the substrings of \"cbabb\" does 'a' occur strictly more times than 'b' and 'c' each.In the third test case, \"cacabccc\", the length of the smallest substring that satisfies the conditions is 33."], "The Child and Toy": ["https://codeforces.com/problemset/problem/437/C", "C. The Child and Toytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOn Children's Day, the child got a toy from Delayyy as a present. However, the child is so naughty that he can't wait to destroy the toy.The toy consists of n parts and m ropes. Each rope links two parts, but every pair of parts is linked by at most one rope. To split the toy, the child must remove all its parts. The child can remove a single part at a time, and each remove consume an energy. Let's define an energy value of part i as vi. The child spend vf1\u2009+\u2009vf2\u2009+\u2009...\u2009+\u2009vfk energy for removing part i where f1,\u2009f2,\u2009...,\u2009fk are the parts that are directly connected to the i-th and haven't been removed.Help the child to find out, what is the minimum total energy he should spend to remove all n parts.InputThe first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u20091000; 0\u2009\u2264\u2009m\u2009\u2264\u20092000). The second line contains n integers: v1,\u2009v2,\u2009...,\u2009vn (0\u2009\u2264\u2009vi\u2009\u2264\u2009105). Then followed m lines, each line contains two integers xi and yi, representing a rope from part xi to part yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n;\u00a0xi\u2009\u2260\u2009yi).Consider all the parts are numbered from 1 to n.OutputOutput the minimum total energy the child should spend to remove all n parts of the toy.ExamplesInputCopy4 310 20 30 401 41 22 3OutputCopy40InputCopy4 4100 100 100 1001 22 32 43 4OutputCopy400InputCopy7 1040 10 20 10 20 80 401 54 74 55 25 76 41 61 34 31 4OutputCopy160NoteOne of the optimal sequence of actions in the first sample is:  First, remove part 3, cost of the action is 20.  Then, remove part 2, cost of the action is 10.  Next, remove part 4, cost of the action is 10.  At last, remove part 1, cost of the action is 0. So the total energy the child paid is 20\u2009+\u200910\u2009+\u200910\u2009+\u20090\u2009=\u200940, which is the minimum.In the second sample, the child will spend 400 no matter in what order he will remove the parts."], "Palindromes Coloring": ["https://codeforces.com/problemset/problem/1624/D", "D. Palindromes Coloringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a string ss consisting of lowercase Latin alphabet letters. You can color some letters in colors from 11 to kk. It is not necessary to paint all the letters. But for each color, there must be a letter painted in that color.Then you can swap any two symbols painted in the same color as many times as you want. After that, kk strings will be created, ii-th of them will contain all the characters colored in the color ii, written in the order of their sequence in the string ss.Your task is to color the characters of the string so that all the resulting kk strings are palindromes, and the length of the shortest of these kk strings is as large as possible.Read the note for the first test case of the example if you need a clarification.Recall that a string is a palindrome if it reads the same way both from left to right and from right to left. For example, the strings abacaba, cccc, z and dxd are palindromes, but the strings abab and aaabaa\u00a0\u2014 are not.InputThe first line of input data contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of input data sets in the test. The descriptions of the input data sets follow.The first line of the description of each input data set contains two integers nn and kk (1\u2264k\u2264n\u22642\u22c51051\u2264k\u2264n\u22642\u22c5105)\u00a0\u2014 the length of the string and the number of colors in which its letters can be painted. The second line of the description of each input data set contains a string ss of length nn consisting of lowercase letters of the Latin alphabet.It is guaranteed that the sum of n over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each set of input data, output a single integer \u00a0\u2014 the maximum length of the shortest palindrome string that can be obtained.ExampleInputCopy10\n8 2\nbxyaxzay\n6 3\naaaaaa\n6 1\nabcdef\n6 6\nabcdef\n3 2\ndxd\n11 2\nabcabcabcac\n6 6\nsipkic\n7 2\neatoohd\n3 1\nllw\n6 2\nbfvfbv\nOutputCopy3\n2\n1\n1\n1\n5\n1\n1\n3\n3\nNote In the first test case, ss=\"bxyaxzay\", k=2k=2. We use indices in the string from 11 to 88. The following coloring will work: bxyaxzaybxyaxzay (the letter z remained uncolored). After painting:  swap two red characters (with the indices 11 and 44), we get axybxzayaxybxzay;  swap two blue characters (with the indices 55 and 88), we get axybyzaxaxybyzax. Now, for each of the two colors we write out the corresponding characters from left to right, we get two strings abaaba and xyyxxyyx. Both of them are palindromes, the length of the shortest is 33. It can be shown that the greatest length of the shortest palindrome cannot be achieved. In the second set of input data, the following coloring is suitable: [1,1,2,2,3,3][1,1,2,2,3,3]. There is no need to swap characters. Both received strings are equal to aa, they are palindromes and their length is 22. In the third set of input data, you can color any character and take it into a string. In the fourth set of input data, you can color the iith character in the color ii. In the fifth set of input data can be colored in each of the colors of one character. In the sixth set of input data, the following coloring is suitable: [1,1,1,1,1,2,2,2,2,2,0][1,1,1,1,1,2,2,2,2,2,0]. Rearrange the characters so as to get the palindromes abcba and acbca."], "Computer Game": ["https://codeforces.com/problemset/problem/1183/C", "C. Computer Gametime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVova is playing a computer game. There are in total nn turns in the game and Vova really wants to play all of them. The initial charge of his laptop battery (i.e. the charge before the start of the game) is kk.During each turn Vova can choose what to do:   If the current charge of his laptop battery is strictly greater than aa, Vova can just play, and then the charge of his laptop battery will decrease by aa;  if the current charge of his laptop battery is strictly greater than bb (b<ab<a), Vova can play and charge his laptop, and then the charge of his laptop battery will decrease by bb;  if the current charge of his laptop battery is less than or equal to aa and bb at the same time then Vova cannot do anything and loses the game. Regardless of Vova's turns the charge of the laptop battery is always decreases.Vova wants to complete the game (Vova can complete the game if after each of nn turns the charge of the laptop battery is strictly greater than 00). Vova has to play exactly nn turns. Among all possible ways to complete the game, Vova wants to choose the one where the number of turns when he just plays (first type turn) is the maximum possible. It is possible that Vova cannot complete the game at all.Your task is to find out the maximum possible number of turns Vova can just play (make the first type turn) or report that Vova cannot complete the game.You have to answer qq independent queries.InputThe first line of the input contains one integer qq (1\u2264q\u22641051\u2264q\u2264105) \u2014 the number of queries. Each query is presented by a single line.The only line of the query contains four integers k,n,ak,n,a and bb (1\u2264k,n\u2264109,1\u2264b<a\u22641091\u2264k,n\u2264109,1\u2264b<a\u2264109) \u2014 the initial charge of Vova's laptop battery, the number of turns in the game and values aa and bb, correspondingly.OutputFor each query print one integer: -1 if Vova cannot complete the game or the maximum number of turns Vova can just play (make the first type turn) otherwise.ExampleInputCopy6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\nOutputCopy4\n-1\n5\n2\n0\n1\nNoteIn the first example query Vova can just play 44 turns and spend 1212 units of charge and then one turn play and charge and spend 22 more units. So the remaining charge of the battery will be 11.In the second example query Vova cannot complete the game because even if he will play and charge the battery during each turn then the charge of the laptop battery will be 00 after the last turn."], "Great Graphs": ["https://codeforces.com/problemset/problem/1540/A", "A. Great Graphstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputFarmer John has a farm that consists of nn pastures connected by one-directional roads. Each road has a weight, representing the time it takes to go from the start to the end of the road. The roads could have negative weight, where the cows go so fast that they go back in time! However, Farmer John guarantees that it is impossible for the cows to get stuck in a time loop, where they can infinitely go back in time by traveling across a sequence of roads. Also, each pair of pastures is connected by at most one road in each direction.Unfortunately, Farmer John lost the map of the farm. All he remembers is an array dd, where didi is the smallest amount of time it took the cows to reach the ii-th pasture from pasture 11 using a sequence of roads. The cost of his farm is the sum of the weights of each of the roads, and Farmer John needs to know the minimal cost of a farm that is consistent with his memory.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Then tt cases follow.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of pastures.The second line of each test case contains nn space separated integers d1,d2,\u2026,dnd1,d2,\u2026,dn (0\u2264di\u22641090\u2264di\u2264109)\u00a0\u2014 the array dd. It is guaranteed that d1=0d1=0.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case, output the minimum possible cost of a farm that is consistent with Farmer John's memory.ExampleInputCopy3\n3\n0 2 3\n2\n0 1000000000\n1\n0\nOutputCopy-3\n0\n0\nNoteIn the first test case, you can add roads   from pasture 11 to pasture 22 with a time of 22,  from pasture 22 to pasture 33 with a time of 11,  from pasture 33 to pasture 11 with a time of \u22123\u22123,  from pasture 33 to pasture 22 with a time of \u22121\u22121,  from pasture 22 to pasture 11 with a time of \u22122\u22122.  The total cost is 2+1+\u22123+\u22121+\u22122=\u221232+1+\u22123+\u22121+\u22122=\u22123.In the second test case, you can add a road from pasture 11 to pasture 22 with cost 10000000001000000000 and a road from pasture 22 to pasture 11 with cost \u22121000000000\u22121000000000. The total cost is 1000000000+\u22121000000000=01000000000+\u22121000000000=0.In the third test case, you can't add any roads. The total cost is 00."], "Everyone is a Winner!": ["https://codeforces.com/problemset/problem/1263/C", "C. Everyone is a Winner!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOn the well-known testing system MathForces, a draw of nn rating units is arranged. The rating will be distributed according to the following algorithm: if kk participants take part in this event, then the nn rating is evenly distributed between them and rounded to the nearest lower integer, At the end of the drawing, an unused rating may remain\u00a0\u2014 it is not given to any of the participants.For example, if n=5n=5 and k=3k=3, then each participant will recieve an 11 rating unit, and also 22 rating units will remain unused. If n=5n=5, and k=6k=6, then none of the participants will increase their rating.Vasya participates in this rating draw but does not have information on the total number of participants in this event. Therefore, he wants to know what different values of the rating increment are possible to get as a result of this draw and asks you for help.For example, if n=5n=5, then the answer is equal to the sequence 0,1,2,50,1,2,5. Each of the sequence values (and only them) can be obtained as \u230an/k\u230b\u230an/k\u230b for some positive integer kk (where \u230ax\u230b\u230ax\u230b is the value of xx rounded down): 0=\u230a5/7\u230b0=\u230a5/7\u230b, 1=\u230a5/5\u230b1=\u230a5/5\u230b, 2=\u230a5/2\u230b2=\u230a5/2\u230b, 5=\u230a5/1\u230b5=\u230a5/1\u230b.Write a program that, for a given nn, finds a sequence of all possible rating increments.InputThe first line contains integer number tt (1\u2264t\u2264101\u2264t\u226410)\u00a0\u2014 the number of test cases in the input. Then tt test cases follow.Each line contains an integer nn (1\u2264n\u22641091\u2264n\u2264109)\u00a0\u2014 the total number of the rating units being drawn.OutputOutput the answers for each of tt test cases. Each answer should be contained in two lines.In the first line print a single integer mm\u00a0\u2014 the number of different rating increment values that Vasya can get.In the following line print mm integers in ascending order\u00a0\u2014 the values of possible rating increments.ExampleInputCopy4\n5\n11\n1\n3\nOutputCopy4\n0 1 2 5 \n6\n0 1 2 3 5 11 \n2\n0 1 \n3\n0 1 3 \n"], "Suffix Operations": ["https://codeforces.com/problemset/problem/1453/B", "B. Suffix Operationstime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputGildong has an interesting machine that has an array aa with nn integers. The machine supports two kinds of operations:  Increase all elements of a suffix of the array by 11.  Decrease all elements of a suffix of the array by 11. A suffix is a subsegment (contiguous elements) of the array that contains anan. In other words, for all ii where aiai is included in the subsegment, all ajaj's where i<j\u2264ni<j\u2264n must also be included in the subsegment.Gildong wants to make all elements of aa equal \u2014 he will always do so using the minimum number of operations necessary. To make his life even easier, before Gildong starts using the machine, you have the option of changing one of the integers in the array to any other integer. You are allowed to leave the array unchanged. You want to minimize the number of operations Gildong performs. With your help, what is the minimum number of operations Gildong will perform?Note that even if you change one of the integers in the array, you should not count that as one of the operations because Gildong did not perform it.InputEach test contains one or more test cases. The first line contains the number of test cases tt (1\u2264t\u226410001\u2264t\u22641000).Each test case contains two lines. The first line of each test case consists of an integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the number of elements of the array aa.The second line of each test case contains nn integers. The ii-th integer is aiai (\u22125\u22c5108\u2264ai\u22645\u22c5108\u22125\u22c5108\u2264ai\u22645\u22c5108).It is guaranteed that the sum of nn in all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print one integer \u2014 the minimum number of operations Gildong has to perform in order to make all elements of the array equal.ExampleInputCopy7\n2\n1 1\n3\n-1 0 2\n4\n99 96 97 95\n4\n-3 -5 -2 1\n6\n1 4 3 2 4 1\n5\n5 0 0 0 5\n9\n-367741579 319422997 -415264583 -125558838 -300860379 420848004 294512916 -383235489 425814447\nOutputCopy0\n1\n3\n4\n6\n5\n2847372102\nNoteIn the first case, all elements of the array are already equal. Therefore, we do not change any integer and Gildong will perform zero operations.In the second case, we can set a3a3 to be 00, so that the array becomes [\u22121,0,0][\u22121,0,0]. Now Gildong can use the 22-nd operation once on the suffix starting at a2a2, which means a2a2 and a3a3 are decreased by 11, making all elements of the array \u22121\u22121.In the third case, we can set a1a1 to 9696, so that the array becomes [96,96,97,95][96,96,97,95]. Now Gildong needs to:   Use the 22-nd operation on the suffix starting at a3a3 once, making the array [96,96,96,94][96,96,96,94].  Use the 11-st operation on the suffix starting at a4a4 22 times, making the array [96,96,96,96][96,96,96,96]. In the fourth case, we can change the array into [\u22123,\u22123,\u22122,1][\u22123,\u22123,\u22122,1]. Now Gildong needs to:   Use the 22-nd operation on the suffix starting at a4a4 33 times, making the array [\u22123,\u22123,\u22122,\u22122][\u22123,\u22123,\u22122,\u22122].  Use the 22-nd operation on the suffix starting at a3a3 once, making the array [\u22123,\u22123,\u22123,\u22123][\u22123,\u22123,\u22123,\u22123]. "], "Minimize the Permutation": ["https://codeforces.com/problemset/problem/1256/B", "B. Minimize the Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a permutation of length nn. Recall that the permutation is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array) and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).You can perform at most n\u22121n\u22121 operations with the given permutation (it is possible that you don't perform any operations at all). The ii-th operation allows you to swap elements of the given permutation on positions ii and i+1i+1. Each operation can be performed at most once. The operations can be performed in arbitrary order.Your task is to find the lexicographically minimum possible permutation obtained by performing some of the given operations in some order.You can see the definition of the lexicographical order in the notes section.You have to answer qq independent test cases.For example, let's consider the permutation [5,4,1,3,2][5,4,1,3,2]. The minimum possible permutation we can obtain is [1,5,2,4,3][1,5,2,4,3] and we can do it in the following way:  perform the second operation (swap the second and the third elements) and obtain the permutation [5,1,4,3,2][5,1,4,3,2];  perform the fourth operation (swap the fourth and the fifth elements) and obtain the permutation [5,1,4,2,3][5,1,4,2,3];  perform the third operation (swap the third and the fourth elements) and obtain the permutation [5,1,2,4,3][5,1,2,4,3].  perform the first operation (swap the first and the second elements) and obtain the permutation [1,5,2,4,3][1,5,2,4,3]; Another example is [1,2,4,3][1,2,4,3]. The minimum possible permutation we can obtain is [1,2,3,4][1,2,3,4] by performing the third operation (swap the third and the fourth elements).InputThe first line of the input contains one integer qq (1\u2264q\u22641001\u2264q\u2264100) \u2014 the number of test cases. Then qq test cases follow.The first line of the test case contains one integer nn (1\u2264n\u22641001\u2264n\u2264100) \u2014 the number of elements in the permutation.The second line of the test case contains nn distinct integers from 11 to nn \u2014 the given permutation.OutputFor each test case, print the answer on it \u2014 the lexicograhically minimum possible permutation obtained by performing some of the given operations in some order.ExampleInputCopy4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\nOutputCopy1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \nNoteRecall that the permutation pp of length nn is lexicographically less than the permutation qq of length nn if there is such index i\u2264ni\u2264n that for all jj from 11 to i\u22121i\u22121 the condition pj=qjpj=qj is satisfied, and pi<qipi<qi. For example:  p=[1,3,5,2,4]p=[1,3,5,2,4] is less than q=[1,3,5,4,2]q=[1,3,5,4,2] (such i=4i=4 exists, that pi<qipi<qi and for each j<ij<i holds pj=qjpj=qj),  p=[1,2]p=[1,2] is less than q=[2,1]q=[2,1] (such i=1i=1 exists, that pi<qipi<qi and for each j<ij<i holds pj=qjpj=qj). "], "Fixing Typos": ["https://codeforces.com/problemset/problem/363/C", "C. Fixing Typostime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMany modern text editors automatically check the spelling of the user's text. Some editors even suggest how to correct typos.In this problem your task to implement a small functionality to correct two types of typos in a word. We will assume that three identical letters together is a typo (for example, word \"helllo\" contains a typo). Besides, a couple of identical letters immediately followed by another couple of identical letters is a typo too (for example, words \"helloo\" and \"wwaatt\" contain typos).Write a code that deletes the minimum number of letters from a word, correcting described typos in the word. You are allowed to delete letters from both ends and from the middle of the word.InputThe single line of the input contains word s, its length is from 1 to 200000 characters. The given word s consists of lowercase English letters.OutputPrint such word t that it doesn't contain any typos described in the problem statement and is obtained from s by deleting the least number of letters.If there are multiple solutions, print any of them.ExamplesInputCopyhellooOutputCopyhelloInputCopywoooooowOutputCopywoowNoteThe second valid answer to the test from the statement is \"heloo\"."], "Productive Meeting": ["https://codeforces.com/problemset/problem/1579/D", "D. Productive Meetingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn important meeting is to be held and there are exactly nn people invited. At any moment, any two people can step back and talk in private. The same two people can talk several (as many as they want) times per meeting.Each person has limited sociability. The sociability of the ii-th person is a non-negative integer aiai. This means that after exactly aiai talks this person leaves the meeting (and does not talk to anyone else anymore). If ai=0ai=0, the ii-th person leaves the meeting immediately after it starts.A meeting is considered most productive if the maximum possible number of talks took place during it.You are given an array of sociability aa, determine which people should talk to each other so that the total number of talks is as large as possible.InputThe first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The next 2t2t lines contain descriptions of the test cases.The first line of each test case description contains an integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105)\u00a0\u2014the number of people in the meeting. The second line consists of nn space-separated integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22642\u22c51050\u2264ai\u22642\u22c5105)\u00a0\u2014 the sociability parameters of all people. It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105. It is also guaranteed that the sum of all aiai (over all test cases and all ii) does not exceed 2\u22c51052\u22c5105.OutputPrint tt answers to all test cases.On the first line of each answer print the number kk\u00a0\u2014 the maximum number of talks possible in a meeting.On each of the next kk lines print two integers ii and jj (1\u2264i,j\u2264n1\u2264i,j\u2264n and i\u2260ji\u2260j)\u00a0\u2014 the numbers of people who will have another talk.If there are several possible answers, you may print any of them.ExampleInputCopy8\n2\n2 3\n3\n1 2 3\n4\n1 2 3 4\n3\n0 0 2\n2\n6 2\n3\n0 0 2\n5\n8 2 0 1 1\n5\n0 1 0 0 6\nOutputCopy2\n1 2\n1 2\n3\n1 3\n2 3\n2 3\n5\n1 3\n2 4\n2 4\n3 4\n3 4\n0\n2\n1 2\n1 2\n0\n4\n1 2\n1 5\n1 4\n1 2\n1\n5 2\n"], "Candy Box (easy version)": ["https://codeforces.com/problemset/problem/1183/D", "D. Candy Box (easy version)time limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis problem is actually a subproblem of problem G from the same contest.There are nn candies in a candy box. The type of the ii-th candy is aiai (1\u2264ai\u2264n1\u2264ai\u2264n).You have to prepare a gift using some of these candies with the following restriction: the numbers of candies of each type presented in a gift should be all distinct (i.\u2009e. for example, a gift having two candies of type 11 and two candies of type 22 is bad). It is possible that multiple types of candies are completely absent from the gift. It is also possible that not all candies of some types will be taken to a gift.Your task is to find out the maximum possible size of the single gift you can prepare using the candies you have.You have to answer qq independent queries.If you are Python programmer, consider using PyPy instead of Python when you submit your code.InputThe first line of the input contains one integer qq (1\u2264q\u22642\u22c51051\u2264q\u22642\u22c5105) \u2014 the number of queries. Each query is represented by two lines.The first line of each query contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of candies.The second line of each query contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n), where aiai is the type of the ii-th candy in the box.It is guaranteed that the sum of nn over all queries does not exceed 2\u22c51052\u22c5105.OutputFor each query print one integer \u2014 the maximum possible size of the single gift you can compose using candies you got in this query with the restriction described in the problem statement.ExampleInputCopy3\n8\n1 4 8 4 5 6 3 8\n16\n2 1 3 3 4 3 4 4 1 3 2 2 2 4 1 1\n9\n2 2 4 4 4 7 7 7 7\nOutputCopy3\n10\n9\nNoteIn the first query, you can prepare a gift with two candies of type 88 and one candy of type 55, totalling to 33 candies.Note that this is not the only possible solution \u2014 taking two candies of type 44 and one candy of type 66 is also valid."], "Greg and Array": ["https://codeforces.com/problemset/problem/295/A", "A. Greg and Arraytime limit per test1.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputGreg has an array a\u2009=\u2009a1,\u2009a2,\u2009...,\u2009an and m operations. Each operation looks as: li, ri, di, (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009n). To apply operation i to the array means to increase all array elements with numbers li,\u2009li\u2009+\u20091,\u2009...,\u2009ri by value di.Greg wrote down k queries on a piece of paper. Each query has the following form: xi, yi, (1\u2009\u2264\u2009xi\u2009\u2264\u2009yi\u2009\u2264\u2009m). That means that one should apply operations with numbers xi,\u2009xi\u2009+\u20091,\u2009...,\u2009yi to the array.Now Greg is wondering, what the array a will be after all the queries are executed. Help Greg.InputThe first line contains integers n, m, k (1\u2009\u2264\u2009n,\u2009m,\u2009k\u2009\u2264\u2009105). The second line contains n integers: a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009105) \u2014 the initial array.Next m lines contain operations, the operation number i is written as three integers: li, ri, di, (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009n), (0\u2009\u2264\u2009di\u2009\u2264\u2009105).Next k lines contain the queries, the query number i is written as two integers: xi, yi, (1\u2009\u2264\u2009xi\u2009\u2264\u2009yi\u2009\u2264\u2009m).The numbers in the lines are separated by single spaces.OutputOn a single line print n integers a1,\u2009a2,\u2009...,\u2009an \u2014 the array after executing all the queries. Separate the printed numbers by spaces.Please, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams of the %I64d specifier.ExamplesInputCopy3 3 31 2 31 2 11 3 22 3 41 21 32 3OutputCopy9 18 17InputCopy1 1 111 1 11 1OutputCopy2InputCopy4 3 61 2 3 41 2 12 3 23 4 41 21 32 31 21 32 3OutputCopy5 18 31 20"], "Vasya and Wrestling": ["https://codeforces.com/problemset/problem/493/B", "B. Vasya and Wrestlingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has become interested in wrestling. In wrestling wrestlers use techniques for which they are awarded points by judges. The wrestler who gets the most points wins.When the numbers of points of both wrestlers are equal, the wrestler whose sequence of points is lexicographically greater, wins.If the sequences of the awarded points coincide, the wrestler who performed the last technique wins. Your task is to determine which wrestler won.InputThe first line contains number n \u2014 the number of techniques that the wrestlers have used (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105). The following n lines contain integer numbers ai (|ai|\u2009\u2264\u2009109, ai\u2009\u2260\u20090). If ai is positive, that means that the first wrestler performed the technique that was awarded with ai points. And if ai is negative, that means that the second wrestler performed the technique that was awarded with (\u2009-\u2009ai) points.The techniques are given in chronological order.OutputIf the first wrestler wins, print string \"first\", otherwise print \"second\"ExamplesInputCopy512-3-43OutputCopysecondInputCopy3-1-23OutputCopyfirstInputCopy24-4OutputCopysecondNoteSequence x\u2009\u2009=\u2009\u2009x1x2... x|x| is lexicographically larger than sequence y\u2009\u2009=\u2009\u2009y1y2... y|y|, if either |x|\u2009\u2009>\u2009\u2009|y| and x1\u2009\u2009=\u2009\u2009y1,\u2009\u2009x2\u2009\u2009=\u2009\u2009y2,\u2009... ,\u2009\u2009x|y|\u2009\u2009=\u2009\u2009y|y|, or there is such number r (r\u2009\u2009<\u2009\u2009|x|,\u2009r\u2009\u2009<\u2009\u2009|y|), that x1\u2009\u2009=\u2009\u2009y1,\u2009\u2009x2\u2009\u2009=\u2009\u2009y2,\u2009\u2009... ,\u2009\u2009xr\u2009\u2009=\u2009\u2009yr and xr\u2009\u2009+\u2009\u20091\u2009\u2009>\u2009\u2009yr\u2009\u2009+\u2009\u20091.We use notation |a| to denote length of sequence a."], "Vanya and Exams": ["https://codeforces.com/problemset/problem/492/C", "C. Vanya and Examstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVanya wants to pass n exams and get the academic scholarship. He will get the scholarship if the average grade mark for all the exams is at least avg. The exam grade cannot exceed r. Vanya has passed the exams and got grade ai for the i-th exam. To increase the grade for the i-th exam by 1 point, Vanya must write bi essays. He can raise the exam grade multiple times.What is the minimum number of essays that Vanya needs to write to get scholarship?InputThe first line contains three integers n, r, avg (1\u2009\u2264\u2009n\u2009\u2264\u2009105, 1\u2009\u2264\u2009r\u2009\u2264\u2009109, 1\u2009\u2264\u2009avg\u2009\u2264\u2009min(r,\u2009106))\u00a0\u2014 the number of exams, the maximum grade and the required grade point average, respectively.Each of the following n lines contains space-separated integers ai and bi (1\u2009\u2264\u2009ai\u2009\u2264\u2009r, 1\u2009\u2264\u2009bi\u2009\u2264\u2009106).OutputIn the first line print the minimum number of essays.ExamplesInputCopy5 5 45 24 73 13 22 5OutputCopy4InputCopy2 5 45 25 2OutputCopy0NoteIn the first sample Vanya can write 2 essays for the 3rd exam to raise his grade by 2 points and 2 essays for the 4th exam to raise his grade by 1 point.In the second sample, Vanya doesn't need to write any essays as his general point average already is above average."], "Swaps": ["https://codeforces.com/problemset/problem/1573/B", "B. Swapstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays aa and bb of length nn. Array aa contains each odd integer from 11 to 2n2n in an arbitrary order, and array bb contains each even integer from 11 to 2n2n in an arbitrary order.You can perform the following operation on those arrays:   choose one of the two arrays  pick an index ii from 11 to n\u22121n\u22121  swap the ii-th and the (i+1)(i+1)-th elements of the chosen array  Compute the minimum number of operations needed to make array aa lexicographically smaller than array bb.For two different arrays xx and yy of the same length nn, we say that xx is lexicographically smaller than yy if in the first position where xx and yy differ, the array xx has a smaller element than the corresponding element in yy.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104).The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 the length of the arrays.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22642n1\u2264ai\u22642n, all aiai are odd and pairwise distinct) \u2014 array aa.The third line of each test case contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u22642n1\u2264bi\u22642n, all bibi are even and pairwise distinct) \u2014 array bb.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case, print one integer: the minimum number of operations needed to make array aa lexicographically smaller than array bb.We can show that an answer always exists.ExampleInputCopy3\n2\n3 1\n4 2\n3\n5 3 1\n2 4 6\n5\n7 5 9 1 3\n2 4 6 10 8\nOutputCopy0\n2\n3\nNoteIn the first example, the array aa is already lexicographically smaller than array bb, so no operations are required.In the second example, we can swap 55 and 33 and then swap 22 and 44, which results in [3,5,1][3,5,1] and [4,2,6][4,2,6]. Another correct way is to swap 33 and 11 and then swap 55 and 11, which results in [1,5,3][1,5,3] and [2,4,6][2,4,6]. Yet another correct way is to swap 44 and 66 and then swap 22 and 66, which results in [5,3,1][5,3,1] and [6,2,4][6,2,4]."], "Find the Spruce": ["https://codeforces.com/problemset/problem/1461/B", "B. Find the Sprucetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputHolidays are coming up really soon. Rick realized that it's time to think about buying a traditional spruce tree. But Rick doesn't want real trees to get hurt so he decided to find some in an n\u00d7mn\u00d7m matrix consisting of \"*\" and \".\".  To find every spruce first let's define what a spruce in the matrix is. A set of matrix cells is called a spruce of height kk with origin at point (x,y)(x,y) if:  All cells in the set contain an \"*\".  For each 1\u2264i\u2264k1\u2264i\u2264k all cells with the row number x+i\u22121x+i\u22121 and columns in range [y\u2212i+1,y+i\u22121][y\u2212i+1,y+i\u22121] must be a part of the set. All other cells cannot belong to the set.  Examples of correct and incorrect spruce trees:  Now Rick wants to know how many spruces his n\u00d7mn\u00d7m matrix contains. Help Rick solve this problem.InputEach test contains one or more test cases. The first line contains the number of test cases tt (1\u2264t\u2264101\u2264t\u226410).The first line of each test case contains two integers nn and mm (1\u2264n,m\u22645001\u2264n,m\u2264500)\u00a0\u2014 matrix size.Next nn lines of each test case contain mm characters ci,jci,j\u00a0\u2014 matrix contents. It is guaranteed that ci,jci,j is either a \".\" or an \"*\".It is guaranteed that the sum of n\u22c5mn\u22c5m over all test cases does not exceed 50025002 (\u2211n\u22c5m\u22645002\u2211n\u22c5m\u22645002).OutputFor each test case, print single integer\u00a0\u2014 the total number of spruces in the matrix.ExampleInputCopy4\n2 3\n.*.\n***\n2 3\n.*.\n**.\n4 5\n.***.\n*****\n*****\n*.*.*\n5 7\n..*.*..\n.*****.\n*******\n.*****.\n..*.*..\nOutputCopy5\n3\n23\n34\nNoteIn the first test case the first spruce of height 22 has its origin at point (1,2)(1,2), the second spruce of height 11 has its origin at point (1,2)(1,2), the third spruce of height 11 has its origin at point (2,1)(2,1), the fourth spruce of height 11 has its origin at point (2,2)(2,2), the fifth spruce of height 11 has its origin at point (2,3)(2,3).In the second test case the first spruce of height 11 has its origin at point (1,2)(1,2), the second spruce of height 11 has its origin at point (2,1)(2,1), the third spruce of height 11 has its origin at point (2,2)(2,2)."], "Fillomino 2": ["https://codeforces.com/problemset/problem/1517/C", "C. Fillomino 2time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFillomino is a classic logic puzzle. (You do not need to know Fillomino in order to solve this problem.) In one classroom in Yunqi town, some volunteers are playing a board game variant of it:Consider an nn by nn chessboard. Its rows are numbered from 11 to nn from the top to the bottom. Its columns are numbered from 11 to nn from the left to the right. A cell on an intersection of xx-th row and yy-th column is denoted (x,y)(x,y). The main diagonal of the chessboard is cells (x,x)(x,x) for all 1\u2264x\u2264n1\u2264x\u2264n.A permutation of {1,2,3,\u2026,n}{1,2,3,\u2026,n} is written on the main diagonal of the chessboard. There is exactly one number written on each of the cells. The problem is to partition the cells under and on the main diagonal (there are exactly 1+2+\u2026+n1+2+\u2026+n such cells) into nn connected regions satisfying the following constraints:  Every region should be connected. That means that we can move from any cell of a region to any other cell of the same region visiting only cells of the same region and moving from a cell to an adjacent cell.  The xx-th region should contain cell on the main diagonal with number xx for all 1\u2264x\u2264n1\u2264x\u2264n.  The number of cells that belong to the xx-th region should be equal to xx for all 1\u2264x\u2264n1\u2264x\u2264n.  Each cell under and on the main diagonal should belong to exactly one region. InputThe first line contains a single integer nn (1\u2264n\u22645001\u2264n\u2264500) denoting the size of the chessboard.The second line contains nn integers p1p1, p2p2, ..., pnpn. pipi is the number written on cell (i,i)(i,i). It is guaranteed that each integer from {1,\u2026,n}{1,\u2026,n} appears exactly once in p1p1, ..., pnpn.OutputIf no solution exists, output \u22121\u22121.Otherwise, output nn lines. The ii-th line should contain ii numbers. The jj-th number on the ii-th line should be xx if cell (i,j)(i,j) belongs to the the region with xx cells.ExamplesInputCopy3\n2 3 1\nOutputCopy2\n2 3\n3 3 1\nInputCopy5\n1 2 3 4 5\nOutputCopy1\n2 2\n3 3 3\n4 4 4 4\n5 5 5 5 5\nNoteThe solutions to the examples are illustrated in the following pictures:  "], "Palindromifier": ["https://codeforces.com/problemset/problem/1421/C", "C. Palindromifiertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRingo found a string ss of length nn in his yellow submarine. The string contains only lowercase letters from the English alphabet. As Ringo and his friends love palindromes, he would like to turn the string ss into a palindrome by applying two types of operations to the string. The first operation allows him to choose ii (2\u2264i\u2264n\u221212\u2264i\u2264n\u22121) and to append the substring s2s3\u2026sis2s3\u2026si (i\u22121i\u22121 characters) reversed to the front of ss.The second operation allows him to choose ii (2\u2264i\u2264n\u221212\u2264i\u2264n\u22121) and to append the substring sisi+1\u2026sn\u22121sisi+1\u2026sn\u22121 (n\u2212in\u2212i characters) reversed to the end of ss.Note that characters in the string in this problem are indexed from 11.For example suppose s=s=abcdef. If he performs the first operation with i=3i=3 then he appends cb to the front of ss and the result will be cbabcdef. Performing the second operation on the resulted string with i=5i=5 will yield cbabcdefedc.Your task is to help Ringo make the entire string a palindrome by applying any of the two operations (in total) at most 3030 times. The length of the resulting palindrome must not exceed 106106It is guaranteed that under these constraints there always is a solution. Also note you do not have to minimize neither the number of operations applied, nor the length of the resulting string, but they have to fit into the constraints.InputThe only line contains the string SS (3\u2264|s|\u22641053\u2264|s|\u2264105) of lowercase letters from the English alphabet.OutputThe first line should contain kk (0\u2264k\u2264300\u2264k\u226430) \u00a0\u2014 the number of operations performed.Each of the following kk lines should describe an operation in form L i or R i. LL represents the first operation, RR represents the second operation, ii represents the index chosen.The length of the resulting palindrome must not exceed 106106.ExamplesInputCopyabac\nOutputCopy2\nR 2\nR 5\nInputCopyacccc\nOutputCopy2\nL 4\nL 2\nInputCopyhannah\nOutputCopy0NoteFor the first example the following operations are performed:abac \u2192\u2192 abacab \u2192\u2192 abacabaThe second sample performs the following operations: acccc \u2192\u2192 cccacccc \u2192\u2192 ccccaccccThe third example is already a palindrome so no operations are required."], "Three displays": ["https://codeforces.com/problemset/problem/987/C", "C. Three displaystime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt is the middle of 2018 and Maria Stepanovna, who lives outside Krasnokamensk (a town in Zabaikalsky region), wants to rent three displays to highlight an important problem.There are nn displays placed along a road, and the ii-th of them can display a text with font size sisi only. Maria Stepanovna wants to rent such three displays with indices i<j<ki<j<k that the font size increases if you move along the road in a particular direction. Namely, the condition si<sj<sksi<sj<sk should be held.The rent cost is for the ii-th display is cici. Please determine the smallest cost Maria Stepanovna should pay.InputThe first line contains a single integer nn (3\u2264n\u226430003\u2264n\u22643000)\u00a0\u2014 the number of displays.The second line contains nn integers s1,s2,\u2026,sns1,s2,\u2026,sn (1\u2264si\u22641091\u2264si\u2264109)\u00a0\u2014 the font sizes on the displays in the order they stand along the road.The third line contains nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn (1\u2264ci\u22641081\u2264ci\u2264108)\u00a0\u2014 the rent costs for each display.OutputIf there are no three displays that satisfy the criteria, print -1. Otherwise print a single integer\u00a0\u2014 the minimum total rent cost of three displays with indices i<j<ki<j<k such that si<sj<sksi<sj<sk.ExamplesInputCopy52 4 5 4 1040 30 20 10 40OutputCopy90InputCopy3100 101 1002 4 5OutputCopy-1InputCopy101 2 3 4 5 6 7 8 9 1010 13 11 14 15 12 13 13 18 13OutputCopy33NoteIn the first example you can, for example, choose displays 11, 44 and 55, because s1<s4<s5s1<s4<s5 (2<4<102<4<10), and the rent cost is 40+10+40=9040+10+40=90.In the second example you can't select a valid triple of indices, so the answer is -1."], "Adding Digits": ["https://codeforces.com/problemset/problem/260/A", "A. Adding Digitstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has got two number: a and b. However, Vasya finds number a too short. So he decided to repeat the operation of lengthening number a n times.One operation of lengthening a number means adding exactly one digit to the number (in the decimal notation) to the right provided that the resulting number is divisible by Vasya's number b. If it is impossible to obtain the number which is divisible by b, then the lengthening operation cannot be performed.Your task is to help Vasya and print the number he can get after applying the lengthening operation to number a n times.InputThe first line contains three integers: a,\u2009b,\u2009n (1\u2009\u2264\u2009a,\u2009b,\u2009n\u2009\u2264\u2009105).OutputIn a single line print the integer without leading zeros, which Vasya can get when he applies the lengthening operations to number a n times. If no such number exists, then print number -1. If there are multiple possible answers, print any of them.ExamplesInputCopy5 4 5OutputCopy524848InputCopy12 11 1OutputCopy121InputCopy260 150 10OutputCopy-1"], "Karen and Coffee": ["https://codeforces.com/problemset/problem/816/B", "B. Karen and Coffeetime limit per test2.5 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputTo stay woke and attentive during classes, Karen needs some coffee!  Karen, a coffee aficionado, wants to know the optimal temperature for brewing the perfect cup of coffee. Indeed, she has spent some time reading several recipe books, including the universally acclaimed \"The Art of the Covfefe\".She knows n coffee recipes. The i-th recipe suggests that coffee should be brewed between li and ri degrees, inclusive, to achieve the optimal taste.Karen thinks that a temperature is admissible if at least k recipes recommend it.Karen has a rather fickle mind, and so she asks q questions. In each question, given that she only wants to prepare coffee with a temperature between a and b, inclusive, can you tell her how many admissible integer temperatures fall within the range?InputThe first line of input contains three integers, n, k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009200000), and q (1\u2009\u2264\u2009q\u2009\u2264\u2009200000), the number of recipes, the minimum number of recipes a certain temperature must be recommended by to be admissible, and the number of questions Karen has, respectively.The next n lines describe the recipes. Specifically, the i-th line among these contains two integers li and ri (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009200000), describing that the i-th recipe suggests that the coffee be brewed between li and ri degrees, inclusive.The next q lines describe the questions. Each of these lines contains a and b, (1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u2009200000), describing that she wants to know the number of admissible integer temperatures between a and b degrees, inclusive.OutputFor each question, output a single integer on a line by itself, the number of admissible integer temperatures between a and b degrees, inclusive.ExamplesInputCopy3 2 491 9492 9797 9992 9493 9795 9690 100OutputCopy3304InputCopy2 1 11 1200000 20000090 100OutputCopy0NoteIn the first test case, Karen knows 3 recipes.  The first one recommends brewing the coffee between 91 and 94 degrees, inclusive.  The second one recommends brewing the coffee between 92 and 97 degrees, inclusive.  The third one recommends brewing the coffee between 97 and 99 degrees, inclusive. A temperature is admissible if at least 2 recipes recommend it.She asks 4 questions.In her first question, she wants to know the number of admissible integer temperatures between 92 and 94 degrees, inclusive. There are 3: 92, 93 and 94 degrees are all admissible.In her second question, she wants to know the number of admissible integer temperatures between 93 and 97 degrees, inclusive. There are 3: 93, 94 and 97 degrees are all admissible.In her third question, she wants to know the number of admissible integer temperatures between 95 and 96 degrees, inclusive. There are none.In her final question, she wants to know the number of admissible integer temperatures between 90 and 100 degrees, inclusive. There are 4: 92, 93, 94 and 97 degrees are all admissible.In the second test case, Karen knows 2 recipes.  The first one, \"wikiHow to make Cold Brew Coffee\", recommends brewing the coffee at exactly 1 degree.  The second one, \"What good is coffee that isn't brewed at at least 36.3306 times the temperature of the surface of the sun?\", recommends brewing the coffee at exactly 200000 degrees. A temperature is admissible if at least 1 recipe recommends it.In her first and only question, she wants to know the number of admissible integer temperatures that are actually reasonable. There are none."], "AND Sequences": ["https://codeforces.com/problemset/problem/1513/B", "B. AND Sequencestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA sequence of nn non-negative integers (n\u22652n\u22652) a1,a2,\u2026,ana1,a2,\u2026,an is called good if for all ii from 11 to n\u22121n\u22121 the following condition holds true: a1&a2&\u2026&ai=ai+1&ai+2&\u2026&an,a1&a2&\u2026&ai=ai+1&ai+2&\u2026&an, where && denotes the bitwise AND operation.You are given an array aa of size nn (n\u22652n\u22652). Find the number of permutations pp of numbers ranging from 11 to nn, for which the sequence ap1ap1, ap2ap2, ... ,apnapn is good. Since this number can be large, output it modulo 109+7109+7.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104), denoting the number of test cases.The first line of each test case contains a single integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105)\u00a0\u2014 the size of the array.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109) \u2014 the elements of the array.It is guaranteed that the sum of nn over all test cases doesn't exceed 2\u22c51052\u22c5105.OutputOutput tt lines, where the ii-th line contains the number of good permutations in the ii-th test case modulo 109+7109+7.ExampleInputCopy4\n3\n1 1 1\n5\n1 2 3 4 5\n5\n0 2 0 3 0\n4\n1 3 5 1\nOutputCopy6\n0\n36\n4\nNoteIn the first test case, since all the numbers are equal, whatever permutation we take, the sequence is good. There are a total of 66 permutations possible with numbers from 11 to 33: [1,2,3][1,2,3], [1,3,2][1,3,2], [2,1,3][2,1,3], [2,3,1][2,3,1], [3,1,2][3,1,2], [3,2,1][3,2,1].In the second test case, it can be proved that no permutation exists for which the sequence is good.In the third test case, there are a total of 3636 permutations for which the sequence is good. One of them is the permutation [1,5,4,2,3][1,5,4,2,3] which results in the sequence s=[0,0,3,2,0]s=[0,0,3,2,0]. This is a good sequence because   s1=s2&s3&s4&s5=0s1=s2&s3&s4&s5=0,  s1&s2=s3&s4&s5=0s1&s2=s3&s4&s5=0,  s1&s2&s3=s4&s5=0s1&s2&s3=s4&s5=0,  s1&s2&s3&s4=s5=0s1&s2&s3&s4=s5=0.  "], "As Simple as One and Two": ["https://codeforces.com/problemset/problem/1276/A", "A. As Simple as One and Twotime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a non-empty string s=s1s2\u2026sns=s1s2\u2026sn, which consists only of lowercase Latin letters. Polycarp does not like a string if it contains at least one string \"one\" or at least one string \"two\" (or both at the same time) as a substring. In other words, Polycarp does not like the string ss if there is an integer jj (1\u2264j\u2264n\u221221\u2264j\u2264n\u22122), that sjsj+1sj+2=sjsj+1sj+2=\"one\" or sjsj+1sj+2=sjsj+1sj+2=\"two\".For example:  Polycarp does not like strings \"oneee\", \"ontwow\", \"twone\" and \"oneonetwo\" (they all have at least one substring \"one\" or \"two\"),  Polycarp likes strings \"oonnee\", \"twwwo\" and \"twnoe\" (they have no substrings \"one\" and \"two\"). Polycarp wants to select a certain set of indices (positions) and remove all letters on these positions. All removals are made at the same time.For example, if the string looks like s=s=\"onetwone\", then if Polycarp selects two indices 33 and 66, then \"onetwone\" will be selected and the result is \"ontwne\".What is the minimum number of indices (positions) that Polycarp needs to select to make the string liked? What should these positions be?InputThe first line of the input contains an integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases in the input. Next, the test cases are given.Each test case consists of one non-empty string ss. Its length does not exceed 1.5\u22c51051.5\u22c5105. The string ss consists only of lowercase Latin letters.It is guaranteed that the sum of lengths of all lines for all input data in the test does not exceed 1.5\u22c51061.5\u22c5106.OutputPrint an answer for each test case in the input in order of their appearance.The first line of each answer should contain rr (0\u2264r\u2264|s|0\u2264r\u2264|s|) \u2014 the required minimum number of positions to be removed, where |s||s| is the length of the given line. The second line of each answer should contain rr different integers \u2014 the indices themselves for removal in any order. Indices are numbered from left to right from 11 to the length of the string. If r=0r=0, then the second line can be skipped (or you can print empty). If there are several answers, print any of them.ExamplesInputCopy4\nonetwone\ntestme\noneoneone\ntwotwo\nOutputCopy2\n6 3\n0\n\n3\n4 1 7 \n2\n1 4\nInputCopy10\nonetwonetwooneooonetwooo\ntwo\none\ntwooooo\nttttwo\nttwwoo\nooone\nonnne\noneeeee\noneeeeeeetwooooo\nOutputCopy6\n18 11 12 1 6 21 \n1\n1 \n1\n3 \n1\n2 \n1\n6 \n0\n\n1\n4 \n0\n\n1\n1 \n2\n1 11 \nNoteIn the first example, answers are:  \"onetwone\",  \"testme\" \u2014 Polycarp likes it, there is nothing to remove,  \"oneoneone\",  \"twotwo\". In the second example, answers are:   \"onetwonetwooneooonetwooo\",  \"two\",  \"one\",  \"twooooo\",  \"ttttwo\",  \"ttwwoo\" \u2014 Polycarp likes it, there is nothing to remove,  \"ooone\",  \"onnne\" \u2014 Polycarp likes it, there is nothing to remove,  \"oneeeee\",  \"oneeeeeeetwooooo\". "], "Filling the Grid": ["https://codeforces.com/problemset/problem/1228/B", "B. Filling the Gridtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSuppose there is a h\u00d7wh\u00d7w grid consisting of empty or full cells. Let's make some definitions:  riri is the number of consecutive full cells connected to the left side in the ii-th row (1\u2264i\u2264h1\u2264i\u2264h). In particular, ri=0ri=0 if the leftmost cell of the ii-th row is empty.  cjcj is the number of consecutive full cells connected to the top end in the jj-th column (1\u2264j\u2264w1\u2264j\u2264w). In particular, cj=0cj=0 if the topmost cell of the jj-th column is empty. In other words, the ii-th row starts exactly with riri full cells. Similarly, the jj-th column starts exactly with cjcj full cells.  These are the rr and cc values of some 3\u00d743\u00d74 grid. Black cells are full and white cells are empty. You have values of rr and cc. Initially, all cells are empty. Find the number of ways to fill grid cells to satisfy values of rr and cc. Since the answer can be very large, find the answer modulo 1000000007(109+7)1000000007(109+7). In other words, find the remainder after division of the answer by 1000000007(109+7)1000000007(109+7).InputThe first line contains two integers hh and ww (1\u2264h,w\u22641031\u2264h,w\u2264103)\u00a0\u2014 the height and width of the grid.The second line contains hh integers r1,r2,\u2026,rhr1,r2,\u2026,rh (0\u2264ri\u2264w0\u2264ri\u2264w)\u00a0\u2014 the values of rr.The third line contains ww integers c1,c2,\u2026,cwc1,c2,\u2026,cw (0\u2264cj\u2264h0\u2264cj\u2264h)\u00a0\u2014 the values of cc.OutputPrint the answer modulo 1000000007(109+7)1000000007(109+7).ExamplesInputCopy3 4\n0 3 1\n0 2 3 0\nOutputCopy2\nInputCopy1 1\n0\n1\nOutputCopy0\nInputCopy19 16\n16 16 16 16 15 15 0 5 0 4 9 9 1 4 4 0 8 16 12\n6 12 19 15 8 6 19 19 14 6 9 16 10 11 15 4\nOutputCopy797922655\nNoteIn the first example, this is the other possible case.  In the second example, it's impossible to make a grid to satisfy such rr, cc values.In the third example, make sure to print answer modulo (109+7)(109+7)."], "Mocha and Diana (Easy Version)": ["https://codeforces.com/problemset/problem/1559/D1", "D1. Mocha and Diana (Easy Version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The only difference between the two versions is the constraint on nn. You can make hacks only if all versions of the problem are solved.A forest is an undirected graph without cycles (not necessarily connected).Mocha and Diana are friends in Zhijiang, both of them have a forest with nodes numbered from 11 to nn, and they would like to add edges to their forests such that:   After adding edges, both of their graphs are still forests.  They add the same edges. That is, if an edge (u,v)(u,v) is added to Mocha's forest, then an edge (u,v)(u,v) is added to Diana's forest, and vice versa. Mocha and Diana want to know the maximum number of edges they can add, and which edges to add.InputThe first line contains three integers nn, m1m1 and m2m2 (1\u2264n\u226410001\u2264n\u22641000, 0\u2264m1,m2<n0\u2264m1,m2<n) \u2014 the number of nodes and the number of initial edges in Mocha's forest and Diana's forest.Each of the next m1m1 lines contains two integers uu and vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v) \u2014 the edges in Mocha's forest.Each of the next m2m2 lines contains two integers uu and vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v) \u2014 the edges in Diana's forest.OutputThe first line contains only one integer hh, the maximum number of edges Mocha and Diana can add (in each forest).Each of the next hh lines contains two integers uu and vv (1\u2264u,v\u2264n1\u2264u,v\u2264n, u\u2260vu\u2260v) \u2014 the edge you add each time.If there are multiple correct answers, you can print any one of them.ExamplesInputCopy3 2 2\n1 2\n2 3\n1 2\n1 3\nOutputCopy0\nInputCopy5 3 2\n5 4\n2 1\n4 3\n4 3\n1 4\nOutputCopy1\n2 4\nInputCopy8 1 2\n1 7\n2 6\n1 5\nOutputCopy5\n5 2\n2 3\n3 4\n4 7\n6 8\nNoteIn the first example, we cannot add any edge.In the second example, the initial forests are as follows.We can add an edge (2,4)(2,4)."], "Banknotes": ["https://codeforces.com/problemset/problem/1606/C", "C. Banknotestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn Berland, nn different types of banknotes are used. Banknotes of the ii-th type have denomination 10ai10ai burles (burles are the currency used in Berland); the denomination of banknotes of the first type is exactly 11.Let's denote f(s)f(s) as the minimum number of banknotes required to represent exactly ss burles. For example, if the denominations of banknotes used in Berland are 11, 1010 and 100100, then f(59)=14f(59)=14: 99 banknotes with denomination of 11 burle and 55 banknotes with denomination of 1010 burles can be used to represent exactly 9\u22c51+5\u22c510=599\u22c51+5\u22c510=59 burles, and there's no way to do it with fewer banknotes.For a given integer kk, find the minimum positive number of burles ss that cannot be represented with kk or fewer banknotes (that is, f(s)>kf(s)>k).InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 number of test cases.The first line of each test case contains two integers nn and kk (1\u2264n\u226410;1\u2264k\u22641091\u2264n\u226410;1\u2264k\u2264109).The next line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0=a1<a2<\u22ef<an\u226490=a1<a2<\u22ef<an\u22649).OutputFor each test case, print one integer\u00a0\u2014 the minimum positive number of burles ss that cannot be represented with kk or fewer banknotes.ExampleInputCopy4\n3 13\n0 1 2\n2 777\n0 4\n3 255\n0 1 3\n10 1000000000\n0 1 2 3 4 5 6 7 8 9\nOutputCopy59\n778\n148999\n999999920999999999\n"], "Not Assigning": ["https://codeforces.com/problemset/problem/1627/C", "C. Not Assigningtime limit per test1.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a tree of nn vertices numbered from 11 to nn, with edges numbered from 11 to n\u22121n\u22121. A tree is a connected undirected graph without cycles. You have to assign integer weights to each edge of the tree, such that the resultant graph is a prime tree.A prime tree is a tree where the weight of every path consisting of one or two edges is prime. A path should not visit any vertex twice. The weight of a path is the sum of edge weights on that path.Consider the graph below. It is a prime tree as the weight of every path of two or less edges is prime. For example, the following path of two edges: 2\u21921\u219232\u21921\u21923 has a weight of 11+2=1311+2=13, which is prime. Similarly, the path of one edge: 4\u219234\u21923 has a weight of 55, which is also prime.  Print any valid assignment of weights such that the resultant tree is a prime tree. If there is no such assignment, then print \u22121\u22121. It can be proven that if a valid assignment exists, one exists with weights between 11 and 105105 as well.InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains one integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the number of vertices in the tree.Then, n\u22121n\u22121 lines follow. The ii-th line contains two integers uu and vv (1\u2264u,v\u2264n1\u2264u,v\u2264n) denoting that edge number ii is between vertices uu and vv. It is guaranteed that the edges form a tree.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case, if a valid assignment exists, then print a single line containing n\u22121n\u22121 integers a1,a2,\u2026,an\u22121a1,a2,\u2026,an\u22121 (1\u2264ai\u22641051\u2264ai\u2264105), where aiai denotes the weight assigned to the edge numbered ii. Otherwise, print \u22121\u22121.If there are multiple solutions, you may print any.ExampleInputCopy3\n2\n1 2\n4\n1 3\n4 3\n2 1\n7\n1 2\n1 3\n3 4\n3 5\n6 2\n7 2\nOutputCopy17\n2 5 11\n-1NoteFor the first test case, there are only two paths having one edge each: 1\u219221\u21922 and 2\u219212\u21921, both having a weight of 1717, which is prime.  The second test case is described in the statement.It can be proven that no such assignment exists for the third test case."], "The Number of Products": ["https://codeforces.com/problemset/problem/1215/B", "B. The Number of Productstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a sequence a1,a2,\u2026,ana1,a2,\u2026,an consisting of nn non-zero integers (i.e. ai\u22600ai\u22600). You have to calculate two following values:  the number of pairs of indices (l,r)(l,r) (l\u2264r)(l\u2264r) such that al\u22c5al+1\u2026ar\u22121\u22c5aral\u22c5al+1\u2026ar\u22121\u22c5ar is negative;  the number of pairs of indices (l,r)(l,r) (l\u2264r)(l\u2264r) such that al\u22c5al+1\u2026ar\u22121\u22c5aral\u22c5al+1\u2026ar\u22121\u22c5ar is positive; InputThe first line contains one integer nn (1\u2264n\u22642\u22c5105)(1\u2264n\u22642\u22c5105) \u2014 the number of elements in the sequence.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109;ai\u22600)(\u2212109\u2264ai\u2264109;ai\u22600) \u2014 the elements of the sequence.OutputPrint two integers \u2014 the number of subsegments with negative product and the number of subsegments with positive product, respectively.ExamplesInputCopy5\n5 -3 3 -1 1\nOutputCopy8 7\nInputCopy10\n4 2 -4 3 1 2 -4 3 2 3\nOutputCopy28 27\nInputCopy5\n-1 -2 -3 -4 -5\nOutputCopy9 6\n"], "Stack of Presents": ["https://codeforces.com/problemset/problem/1279/C", "C. Stack of Presentstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSanta has to send presents to the kids. He has a large stack of nn presents, numbered from 11 to nn; the topmost present has number a1a1, the next present is a2a2, and so on; the bottom present has number anan. All numbers are distinct.Santa has a list of mm distinct presents he has to send: b1b1, b2b2, ..., bmbm. He will send them in the order they appear in the list.To send a present, Santa has to find it in the stack by removing all presents above it, taking this present and returning all removed presents on top of the stack. So, if there are kk presents above the present Santa wants to send, it takes him 2k+12k+1 seconds to do it. Fortunately, Santa can speed the whole process up \u2014 when he returns the presents to the stack, he may reorder them as he wishes (only those which were above the present he wanted to take; the presents below cannot be affected in any way).What is the minimum time required to send all of the presents, provided that Santa knows the whole list of presents he has to send and reorders the presents optimally? Santa cannot change the order of presents or interact with the stack of presents in any other way.Your program has to answer tt different test cases.InputThe first line contains one integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.Then the test cases follow, each represented by three lines.The first line contains two integers nn and mm (1\u2264m\u2264n\u22641051\u2264m\u2264n\u2264105) \u2014 the number of presents in the stack and the number of presents Santa wants to send, respectively.The second line contains nn integers a1a1, a2a2, ..., anan (1\u2264ai\u2264n1\u2264ai\u2264n, all aiai are unique) \u2014 the order of presents in the stack.The third line contains mm integers b1b1, b2b2, ..., bmbm (1\u2264bi\u2264n1\u2264bi\u2264n, all bibi are unique) \u2014 the ordered list of presents Santa has to send.The sum of nn over all test cases does not exceed 105105.OutputFor each test case print one integer \u2014 the minimum number of seconds which Santa has to spend sending presents, if he reorders the presents optimally each time he returns them into the stack.ExampleInputCopy2\n3 3\n3 1 2\n3 2 1\n7 2\n2 1 7 3 4 5 6\n3 1\nOutputCopy5\n8\n"], "K for the Price of One (Easy Version)": ["https://codeforces.com/problemset/problem/1282/B1", "B1. K for the Price of One (Easy Version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of this problem. The only difference is the constraint on kk \u2014 the number of gifts in the offer. In this version: k=2k=2.Vasya came to the store to buy goods for his friends for the New Year. It turned out that he was very lucky\u00a0\u2014 today the offer \"kk of goods for the price of one\" is held in store. Remember, that in this problem k=2k=2.Using this offer, Vasya can buy exactly kk of any goods, paying only for the most expensive of them. Vasya decided to take this opportunity and buy as many goods as possible for his friends with the money he has.More formally, for each good, its price is determined by aiai\u00a0\u2014 the number of coins it costs. Initially, Vasya has pp coins. He wants to buy the maximum number of goods. Vasya can perform one of the following operations as many times as necessary:  Vasya can buy one good with the index ii if he currently has enough coins (i.e p\u2265aip\u2265ai). After buying this good, the number of Vasya's coins will decrease by aiai, (i.e it becomes p:=p\u2212aip:=p\u2212ai).  Vasya can buy a good with the index ii, and also choose exactly k\u22121k\u22121 goods, the price of which does not exceed aiai, if he currently has enough coins (i.e p\u2265aip\u2265ai). Thus, he buys all these kk goods, and his number of coins decreases by aiai (i.e it becomes p:=p\u2212aip:=p\u2212ai). Please note that each good can be bought no more than once.For example, if the store now has n=5n=5 goods worth a1=2,a2=4,a3=3,a4=5,a5=7a1=2,a2=4,a3=3,a4=5,a5=7, respectively, k=2k=2, and Vasya has 66 coins, then he can buy 33 goods. A good with the index 11 will be bought by Vasya without using the offer and he will pay 22 coins. Goods with the indices 22 and 33 Vasya will buy using the offer and he will pay 44 coins. It can be proved that Vasya can not buy more goods with six coins.Help Vasya to find out the maximum number of goods he can buy.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases in the test.The next lines contain a description of tt test cases. The first line of each test case contains three integers n,p,kn,p,k (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105, 1\u2264p\u22642\u22c51091\u2264p\u22642\u22c5109, k=2k=2)\u00a0\u2014 the number of goods in the store, the number of coins Vasya has and the number of goods that can be bought by the price of the most expensive of them.The second line of each test case contains nn integers aiai (1\u2264ai\u22641041\u2264ai\u2264104)\u00a0\u2014 the prices of goods.It is guaranteed that the sum of nn for all test cases does not exceed 2\u22c51052\u22c5105. It is guaranteed that in this version of the problem k=2k=2 for all test cases.OutputFor each test case in a separate line print one integer mm\u00a0\u2014 the maximum number of goods that Vasya can buy.ExampleInputCopy6\n5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3\nOutputCopy3\n4\n2\n0\n4\n3\n"], "Increase Subarray Sums": ["https://codeforces.com/problemset/problem/1644/C", "C. Increase Subarray Sumstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array a1,a2,\u2026,ana1,a2,\u2026,an, consisting of nn integers. You are also given an integer value xx.Let f(k)f(k) be the maximum sum of a contiguous subarray of aa after applying the following operation: add xx to the elements on exactly kk distinct positions. An empty subarray should also be considered, it has sum 00.Note that the subarray doesn't have to include all of the increased elements.Calculate the maximum value of f(k)f(k) for all kk from 00 to nn independently.InputThe first line contains a single integer tt (1\u2264t\u226450001\u2264t\u22645000)\u00a0\u2014 the number of testcases.The first line of the testcase contains two integers nn and xx (1\u2264n\u226450001\u2264n\u22645000; 0\u2264x\u22641050\u2264x\u2264105)\u00a0\u2014 the number of elements in the array and the value to add.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212105\u2264ai\u2264105\u2212105\u2264ai\u2264105).The sum of nn over all testcases doesn't exceed 50005000.OutputFor each testcase, print n+1n+1 integers\u00a0\u2014 the maximum value of f(k)f(k) for all kk from 00 to nn independently.ExampleInputCopy3\n4 2\n4 1 3 2\n3 5\n-2 -7 -1\n10 2\n-6 -1 -2 4 -6 -1 -4 4 -5 -4\nOutputCopy10 12 14 16 18\n0 4 4 5\n4 6 6 7 7 7 7 8 8 8 8\nNoteIn the first testcase, it doesn't matter which elements you add xx to. The subarray with the maximum sum will always be the entire array. If you increase kk elements by xx, k\u22c5xk\u22c5x will be added to the sum.In the second testcase:   For k=0k=0, the empty subarray is the best option.  For k=1k=1, it's optimal to increase the element at position 33. The best sum becomes \u22121+5=4\u22121+5=4 for a subarray [3,3][3,3].  For k=2k=2, it's optimal to increase the element at position 33 and any other element. The best sum is still 44 for a subarray [3,3][3,3].  For k=3k=3, you have to increase all elements. The best sum becomes (\u22122+5)+(\u22127+5)+(\u22121+5)=5(\u22122+5)+(\u22127+5)+(\u22121+5)=5 for a subarray [1,3][1,3]. "], "Fox and Box Accumulation": ["https://codeforces.com/problemset/problem/388/A", "A. Fox and Box Accumulationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFox Ciel has n boxes in her room. They have the same size and weight, but they might have different strength. The i-th box can hold at most xi boxes on its top (we'll call xi the strength of the box). Since all the boxes have the same size, Ciel cannot put more than one box directly on the top of some box. For example, imagine Ciel has three boxes: the first has strength 2, the second has strength 1 and the third has strength 1. She cannot put the second and the third box simultaneously directly on the top of the first one. But she can put the second box directly on the top of the first one, and then the third box directly on the top of the second one. We will call such a construction of boxes a pile.Fox Ciel wants to construct piles from all the boxes. Each pile will contain some boxes from top to bottom, and there cannot be more than xi boxes on the top of i-th box. What is the minimal number of piles she needs to construct?InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100). The next line contains n integers x1,\u2009x2,\u2009...,\u2009xn (0\u2009\u2264\u2009xi\u2009\u2264\u2009100).OutputOutput a single integer \u2014 the minimal possible number of piles.ExamplesInputCopy30 0 10OutputCopy2InputCopy50 1 2 3 4OutputCopy1InputCopy40 0 0 0OutputCopy4InputCopy90 1 0 2 0 1 1 2 10OutputCopy3NoteIn example 1, one optimal way is to build 2 piles: the first pile contains boxes 1 and 3 (from top to bottom), the second pile contains only box 2.In example 2, we can build only 1 pile that contains boxes 1, 2, 3, 4, 5 (from top to bottom)."], "String Modification": ["https://codeforces.com/problemset/problem/1316/B", "B. String Modificationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has a string ss of length nn. He decides to make the following modification to the string:   Pick an integer kk, (1\u2264k\u2264n1\u2264k\u2264n).  For ii from 11 to n\u2212k+1n\u2212k+1, reverse the substring s[i:i+k\u22121]s[i:i+k\u22121] of ss. For example, if string ss is qwer and k=2k=2, below is the series of transformations the string goes through:   qwer (original string)  wqer (after reversing the first substring of length 22)  weqr (after reversing the second substring of length 22)  werq (after reversing the last substring of length 22)  Hence, the resulting string after modifying ss with k=2k=2 is werq. Vasya wants to choose a kk such that the string obtained after the above-mentioned modification is lexicographically smallest possible among all choices of kk. Among all such kk, he wants to choose the smallest one. Since he is busy attending Felicity 2020, he asks for your help.A string aa is lexicographically smaller than a string bb if and only if one of the following holds:   aa is a prefix of bb, but a\u2260ba\u2260b;  in the first position where aa and bb differ, the string aa has a letter that appears earlier in the alphabet than the corresponding letter in bb. InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u226450001\u2264t\u22645000). The description of the test cases follows.The first line of each test case contains a single integer nn (1\u2264n\u226450001\u2264n\u22645000)\u00a0\u2014 the length of the string ss.The second line of each test case contains the string ss of nn lowercase latin letters.It is guaranteed that the sum of nn over all test cases does not exceed 50005000.OutputFor each testcase output two lines:In the first line output the lexicographically smallest string s\u2032s\u2032 achievable after the above-mentioned modification. In the second line output the appropriate value of kk (1\u2264k\u2264n1\u2264k\u2264n) that you chose for performing the modification. If there are multiple values of kk that give the lexicographically smallest string, output the smallest value of kk among them.ExampleInputCopy6\n4\nabab\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\nOutputCopyabab\n1\nertyqw\n3\naaaaa\n1\naksala\n6\navjsmbpfl\n5\np\n1\nNoteIn the first testcase of the first sample, the string modification results for the sample abab are as follows :   for k=1k=1 : abab  for k=2k=2 : baba  for k=3k=3 : abab  for k=4k=4 : babaThe lexicographically smallest string achievable through modification is abab for k=1k=1 and 33. Smallest value of kk needed to achieve is hence 11. "], "Silly Mistake": ["https://codeforces.com/problemset/problem/1253/B", "B. Silly Mistaketime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Central Company has an office with a sophisticated security system. There are 106106 employees, numbered from 11 to 106106.The security system logs entrances and departures. The entrance of the ii-th employee is denoted by the integer ii, while the departure of the ii-th employee is denoted by the integer \u2212i\u2212i.The company has some strict rules about access to its office:  An employee can enter the office at most once per day.  He obviously can't leave the office if he didn't enter it earlier that day.  In the beginning and at the end of every day, the office is empty (employees can't stay at night). It may also be empty at any moment of the day. Any array of events satisfying these conditions is called a valid day.Some examples of valid or invalid days:  [1,7,\u22127,3,\u22121,\u22123][1,7,\u22127,3,\u22121,\u22123] is a valid day (11 enters, 77 enters, 77 leaves, 33 enters, 11 leaves, 33 leaves).  [2,\u22122,3,\u22123][2,\u22122,3,\u22123] is also a valid day.  [2,5,\u22125,5,\u22125,\u22122][2,5,\u22125,5,\u22125,\u22122] is not a valid day, because 55 entered the office twice during the same day.  [\u22124,4][\u22124,4] is not a valid day, because 44 left the office without being in it.  [4][4] is not a valid day, because 44 entered the office and didn't leave it before the end of the day. There are nn events a1,a2,\u2026,ana1,a2,\u2026,an, in the order they occurred. This array corresponds to one or more consecutive days. The system administrator erased the dates of events by mistake, but he didn't change the order of the events.You must partition (to cut) the array aa of events into contiguous subarrays, which must represent non-empty valid days (or say that it's impossible). Each array element should belong to exactly one contiguous subarray of a partition. Each contiguous subarray of a partition should be a valid day.For example, if n=8n=8 and a=[1,\u22121,1,2,\u22121,\u22122,3,\u22123]a=[1,\u22121,1,2,\u22121,\u22122,3,\u22123] then he can partition it into two contiguous subarrays which are valid days: a=[1,\u22121\u00a0|\u00a01,2,\u22121,\u22122,3,\u22123]a=[1,\u22121\u00a0|\u00a01,2,\u22121,\u22122,3,\u22123].Help the administrator to partition the given array aa in the required way or report that it is impossible to do. Find any required partition, you should not minimize or maximize the number of parts.InputThe first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105).The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212106\u2264ai\u2264106\u2212106\u2264ai\u2264106 and ai\u22600ai\u22600).OutputIf there is no valid partition, print \u22121\u22121. Otherwise, print any valid partition in the following format:  On the first line print the number dd of days (1\u2264d\u2264n1\u2264d\u2264n).  On the second line, print dd integers c1,c2,\u2026,cdc1,c2,\u2026,cd (1\u2264ci\u2264n1\u2264ci\u2264n and c1+c2+\u2026+cd=nc1+c2+\u2026+cd=n), where cici is the number of events in the ii-th day. If there are many valid solutions, you can print any of them. You don't have to minimize nor maximize the number of days.ExamplesInputCopy6\n1 7 -7 3 -1 -3\nOutputCopy1\n6\nInputCopy8\n1 -1 1 2 -1 -2 3 -3\nOutputCopy2\n2 6\nInputCopy6\n2 5 -5 5 -5 -2\nOutputCopy-1\nInputCopy3\n-8 1 1\nOutputCopy-1\nNoteIn the first example, the whole array is a valid day.In the second example, one possible valid solution is to split the array into [1,\u22121][1,\u22121] and [1,2,\u22121,\u22122,3,\u22123][1,2,\u22121,\u22122,3,\u22123] (d=2d=2 and c=[2,6]c=[2,6]). The only other valid solution would be to split the array into [1,\u22121][1,\u22121], [1,2,\u22121,\u22122][1,2,\u22121,\u22122] and [3,\u22123][3,\u22123] (d=3d=3 and c=[2,4,2]c=[2,4,2]). Both solutions are accepted.In the third and fourth examples, we can prove that there exists no valid solution. Please note that the array given in input is not guaranteed to represent a coherent set of events."], "PIN Codes": ["https://codeforces.com/problemset/problem/1263/B", "B. PIN Codestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA PIN code is a string that consists of exactly 44 digits. Examples of possible PIN codes: 7013, 0000 and 0990. Please note that the PIN code can begin with any digit, even with 0.Polycarp has nn (2\u2264n\u2264102\u2264n\u226410) bank cards, the PIN code of the ii-th card is pipi.Polycarp has recently read a recommendation that it is better to set different PIN codes on different cards. Thus he wants to change the minimal number of digits in the PIN codes of his cards so that all nn codes would become different.Formally, in one step, Polycarp picks ii-th card (1\u2264i\u2264n1\u2264i\u2264n), then in its PIN code pipi selects one position (from 11 to 44), and changes the digit in this position to any other. He needs to change the minimum number of digits so that all PIN codes become different.Polycarp quickly solved this problem. Can you solve it?InputThe first line contains integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases in the input. Then test cases follow.The first line of each of tt test sets contains a single integer nn (2\u2264n\u2264102\u2264n\u226410) \u2014 the number of Polycarp's bank cards. The next nn lines contain the PIN codes p1,p2,\u2026,pnp1,p2,\u2026,pn \u2014 one per line. The length of each of them is 44. All PIN codes consist of digits only.OutputPrint the answers to tt test sets. The answer to each set should consist of a n+1n+1 linesIn the first line print kk \u2014 the least number of changes to make all PIN codes different. In the next nn lines output the changed PIN codes in the order corresponding to their appearance in the input. If there are several optimal answers, print any of them.ExampleInputCopy3\n2\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\nOutputCopy0\n1234\n0600\n1\n1337\n1237\n3\n3139\n3138\n3939\n6139\n"], "Magic Powder - 1": ["https://codeforces.com/problemset/problem/670/D1", "D1. Magic Powder - 1time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis problem is given in two versions that differ only by constraints. If you can solve this problem in large constraints, then you can just write a single solution to the both versions. If you find the problem too difficult in large constraints, you can write solution to the simplified version only.Waking up in the morning, Apollinaria decided to bake cookies. To bake one cookie, she needs n ingredients, and for each ingredient she knows the value ai\u00a0\u2014 how many grams of this ingredient one needs to bake a cookie. To prepare one cookie Apollinaria needs to use all n ingredients.Apollinaria has bi gram of the i-th ingredient. Also she has k grams of a magic powder. Each gram of magic powder can be turned to exactly 1 gram of any of the n ingredients and can be used for baking cookies.Your task is to determine the maximum number of cookies, which Apollinaria is able to bake using the ingredients that she has and the magic powder.InputThe first line of the input contains two positive integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u20091000)\u00a0\u2014 the number of ingredients and the number of grams of the magic powder.The second line contains the sequence a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u20091000), where the i-th number is equal to the number of grams of the i-th ingredient, needed to bake one cookie.The third line contains the sequence b1,\u2009b2,\u2009...,\u2009bn (1\u2009\u2264\u2009bi\u2009\u2264\u20091000), where the i-th number is equal to the number of grams of the i-th ingredient, which Apollinaria has.OutputPrint the maximum number of cookies, which Apollinaria will be able to bake using the ingredients that she has and the magic powder.ExamplesInputCopy3 12 1 411 3 16OutputCopy4InputCopy4 34 3 5 611 12 14 20OutputCopy3NoteIn the first sample it is profitably for Apollinaria to make the existing 1 gram of her magic powder to ingredient with the index 2, then Apollinaria will be able to bake 4 cookies.In the second sample Apollinaria should turn 1 gram of magic powder to ingredient with the index 1 and 1 gram of magic powder to ingredient with the index 3. Then Apollinaria will be able to bake 3 cookies. The remaining 1 gram of the magic powder can be left, because it can't be used to increase the answer."], "Bear and Prime 100": ["https://codeforces.com/problemset/problem/679/A", "A. Bear and Prime 100time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an interactive problem. In the output section below you will see the information about flushing the output.Bear Limak thinks of some hidden number\u00a0\u2014 an integer from interval [2,\u2009100]. Your task is to say if the hidden number is prime or composite.Integer x\u2009>\u20091 is called prime if it has exactly two distinct divisors, 1 and x. If integer x\u2009>\u20091 is not prime, it's called composite.You can ask up to 20 queries about divisors of the hidden number. In each query you should print an integer from interval [2,\u2009100]. The system will answer \"yes\" if your integer is a divisor of the hidden number. Otherwise, the answer will be \"no\".For example, if the hidden number is 14 then the system will answer \"yes\" only if you print 2, 7 or 14.When you are done asking queries, print \"prime\" or \"composite\" and terminate your program.You will get the Wrong Answer verdict if you ask more than 20 queries, or if you print an integer not from the range [2,\u2009100]. Also, you will get the Wrong Answer verdict if the printed answer isn't correct.You will get the Idleness Limit Exceeded verdict if you don't print anything (but you should) or if you forget about flushing the output (more info below).InputAfter each query you should read one string from the input. It will be \"yes\" if the printed integer is a divisor of the hidden number, and \"no\" otherwise.OutputUp to 20 times you can ask a query\u00a0\u2014 print an integer from interval [2,\u2009100] in one line. You have to both print the end-of-line character and flush the output. After flushing you should read a response from the input.In any moment you can print the answer \"prime\" or \"composite\" (without the quotes). After that, flush the output and terminate your program.To flush you can use (just after printing an integer and end-of-line):   fflush(stdout) in C++;  System.out.flush() in Java;  stdout.flush() in Python;  flush(output) in Pascal;  See the documentation for other languages. Hacking. To hack someone, as the input you should print the hidden number\u00a0\u2014 one integer from the interval [2,\u2009100]. Of course, his/her solution won't be able to read the hidden number from the input.ExamplesInputCopyyesnoyesOutputCopy2805compositeInputCopynoyesnononoOutputCopy585978782primeNoteThe hidden number in the first query is 30. In a table below you can see a better form of the provided example of the communication process.The hidden number is divisible by both 2 and 5. Thus, it must be composite. Note that it isn't necessary to know the exact value of the hidden number. In this test, the hidden number is 30.59 is a divisor of the hidden number. In the interval [2,\u2009100] there is only one number with this divisor. The hidden number must be 59, which is prime. Note that the answer is known even after the second query and you could print it then and terminate. Though, it isn't forbidden to ask unnecessary queries (unless you exceed the limit of 20 queries)."], "Alice and the Cake": ["https://codeforces.com/problemset/problem/1654/C", "C. Alice and the Caketime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice has a cake, and she is going to cut it. She will perform the following operation n\u22121n\u22121 times: choose a piece of the cake (initially, the cake is all one piece) with weight w\u22652w\u22652 and cut it into two smaller pieces of weight \u230aw2\u230b\u230aw2\u230b and \u2308w2\u2309\u2308w2\u2309 (\u230ax\u230b\u230ax\u230b and \u2308x\u2309\u2308x\u2309 denote floor and ceiling functions, respectively).After cutting the cake in nn pieces, she will line up these nn pieces on a table in an arbitrary order. Let aiai be the weight of the ii-th piece in the line.You are given the array aa. Determine whether there exists an initial weight and sequence of operations which results in aa.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases.The first line of each test case contains a single integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105).The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109).It is guaranteed that the sum of nn for all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print a single line: print YES if the array aa could have resulted from Alice's operations, otherwise print NO.You may print each letter in any case (for example, YES, Yes, yes, yEs will all be recognized as positive answer).ExampleInputCopy14\n1\n327\n2\n869 541\n2\n985214736 985214737\n3\n2 3 1\n3\n2 3 3\n6\n1 1 1 1 1 1\n6\n100 100 100 100 100 100\n8\n100 100 100 100 100 100 100 100\n8\n2 16 1 8 64 1 4 32\n10\n1 2 4 7 1 1 1 1 7 2\n10\n7 1 1 1 3 1 3 3 2 3\n10\n1 4 4 1 1 1 3 3 3 1\n10\n2 3 2 2 1 2 2 2 2 2\n4\n999999999 999999999 999999999 999999999\nOutputCopyYES\nNO\nYES\nYES\nNO\nYES\nNO\nYES\nYES\nYES\nYES\nNO\nNO\nYES\nNoteIn the first test case, it's possible to get the array aa by performing 00 operations on a cake with weight 327327.In the second test case, it's not possible to get the array aa.In the third test case, it's possible to get the array aa by performing 11 operation on a cake with weight 19704294731970429473:   Cut it in half, so that the weights are [985214736,985214737][985214736,985214737].  Note that the starting weight can be greater than 109109.In the fourth test case, it's possible to get the array aa by performing 22 operations on a cake with weight 66:  Cut it in half, so that the weights are [3,3][3,3].  Cut one of the two pieces with weight 33, so that the new weights are [1,2,3][1,2,3] which is equivalent to [2,3,1][2,3,1] up to reordering."], "New Year and Ascent Sequence": ["https://codeforces.com/problemset/problem/1284/B", "B. New Year and Ascent Sequencetime limit per test2 secondsmemory limit per test1024 megabytesinputstandard inputoutputstandard outputA sequence a=[a1,a2,\u2026,al]a=[a1,a2,\u2026,al] of length ll has an ascent if there exists a pair of indices (i,j)(i,j) such that 1\u2264i<j\u2264l1\u2264i<j\u2264l and ai<ajai<aj. For example, the sequence [0,2,0,2,0][0,2,0,2,0] has an ascent because of the pair (1,4)(1,4), but the sequence [4,3,3,3,1][4,3,3,3,1] doesn't have an ascent.Let's call a concatenation of sequences pp and qq the sequence that is obtained by writing down sequences pp and qq one right after another without changing the order. For example, the concatenation of the [0,2,0,2,0][0,2,0,2,0] and [4,3,3,3,1][4,3,3,3,1] is the sequence [0,2,0,2,0,4,3,3,3,1][0,2,0,2,0,4,3,3,3,1]. The concatenation of sequences pp and qq is denoted as p+qp+q.Gyeonggeun thinks that sequences with ascents bring luck. Therefore, he wants to make many such sequences for the new year. Gyeonggeun has nn sequences s1,s2,\u2026,sns1,s2,\u2026,sn which may have different lengths. Gyeonggeun will consider all n2n2 pairs of sequences sxsx and sysy (1\u2264x,y\u2264n1\u2264x,y\u2264n), and will check if its concatenation sx+sysx+sy has an ascent. Note that he may select the same sequence twice, and the order of selection matters.Please count the number of pairs (x,yx,y) of sequences s1,s2,\u2026,sns1,s2,\u2026,sn whose concatenation sx+sysx+sy contains an ascent.InputThe first line contains the number nn (1\u2264n\u22641000001\u2264n\u2264100000) denoting the number of sequences.The next nn lines contain the number lili (1\u2264li1\u2264li) denoting the length of sisi, followed by lili integers si,1,si,2,\u2026,si,lisi,1,si,2,\u2026,si,li (0\u2264si,j\u22641060\u2264si,j\u2264106) denoting the sequence sisi. It is guaranteed that the sum of all lili does not exceed 100000100000.OutputPrint a single integer, the number of pairs of sequences whose concatenation has an ascent.ExamplesInputCopy5\n1 1\n1 1\n1 2\n1 4\n1 3\nOutputCopy9\nInputCopy3\n4 2 0 2 0\n6 9 9 8 8 7 7\n1 6\nOutputCopy7\nInputCopy10\n3 62 24 39\n1 17\n1 99\n1 60\n1 64\n1 30\n2 79 29\n2 20 73\n2 85 37\n1 100\nOutputCopy72\nNoteFor the first example, the following 99 arrays have an ascent: [1,2],[1,2],[1,3],[1,3],[1,4],[1,4],[2,3],[2,4],[3,4][1,2],[1,2],[1,3],[1,3],[1,4],[1,4],[2,3],[2,4],[3,4]. Arrays with the same contents are counted as their occurences."], "Tape": ["https://codeforces.com/problemset/problem/1110/B", "B. Tapetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a long stick, consisting of mm segments enumerated from 11 to mm. Each segment is 11 centimeter long. Sadly, some segments are broken and need to be repaired.You have an infinitely long repair tape. You want to cut some pieces from the tape and use them to cover all of the broken segments. To be precise, a piece of tape of integer length tt placed at some position ss will cover segments s,s+1,\u2026,s+t\u22121s,s+1,\u2026,s+t\u22121.You are allowed to cover non-broken segments; it is also possible that some pieces of tape will overlap.Time is money, so you want to cut at most kk continuous pieces of tape to cover all the broken segments. What is the minimum total length of these pieces?InputThe first line contains three integers nn, mm and kk (1\u2264n\u22641051\u2264n\u2264105, n\u2264m\u2264109n\u2264m\u2264109, 1\u2264k\u2264n1\u2264k\u2264n)\u00a0\u2014 the number of broken segments, the length of the stick and the maximum number of pieces you can use.The second line contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u2264m1\u2264bi\u2264m)\u00a0\u2014 the positions of the broken segments. These integers are given in increasing order, that is, b1<b2<\u2026<bnb1<b2<\u2026<bn.OutputPrint the minimum total length of the pieces.ExamplesInputCopy4 100 220 30 75 80OutputCopy17InputCopy5 100 31 2 4 60 87OutputCopy6NoteIn the first example, you can use a piece of length 1111 to cover the broken segments 2020 and 3030, and another piece of length 66 to cover 7575 and 8080, for a total length of 1717.In the second example, you can use a piece of length 44 to cover broken segments 11, 22 and 44, and two pieces of length 11 to cover broken segments 6060 and 8787."], "Mr. Kitayuta's Colorful Graph": ["https://codeforces.com/problemset/problem/505/B", "B. Mr. Kitayuta's Colorful Graphtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMr. Kitayuta has just bought an undirected graph consisting of n vertices and m edges. The vertices of the graph are numbered from 1 to n. Each edge, namely edge i, has a color ci, connecting vertex ai and bi.Mr. Kitayuta wants you to process the following q queries.In the i-th query, he gives you two integers \u2014 ui and vi.Find the number of the colors that satisfy the following condition: the edges of that color connect vertex ui and vertex vi directly or indirectly.InputThe first line of the input contains space-separated two integers \u2014 n and m (2\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009m\u2009\u2264\u2009100), denoting the number of the vertices and the number of the edges, respectively.The next m lines contain space-separated three integers \u2014 ai, bi (1\u2009\u2264\u2009ai\u2009<\u2009bi\u2009\u2264\u2009n) and ci (1\u2009\u2264\u2009ci\u2009\u2264\u2009m). Note that there can be multiple edges between two vertices. However, there are no multiple edges of the same color between two vertices, that is, if i\u2009\u2260\u2009j, (ai,\u2009bi,\u2009ci)\u2009\u2260\u2009(aj,\u2009bj,\u2009cj).The next line contains a integer \u2014 q (1\u2009\u2264\u2009q\u2009\u2264\u2009100), denoting the number of the queries.Then follows q lines, containing space-separated two integers \u2014 ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n). It is guaranteed that ui\u2009\u2260\u2009vi.OutputFor each query, print the answer in a separate line.ExamplesInputCopy4 51 2 11 2 22 3 12 3 32 4 331 23 41 4OutputCopy210InputCopy5 71 5 12 5 13 5 14 5 11 2 22 3 23 4 251 55 12 51 51 4OutputCopy11112NoteLet's consider the first sample.     The figure above shows the first sample.    Vertex 1 and vertex 2 are connected by color 1 and 2.  Vertex 3 and vertex 4 are connected by color 3.  Vertex 1 and vertex 4 are not connected by any single color. "], "Chess Cheater": ["https://codeforces.com/problemset/problem/1427/B", "B. Chess Cheatertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou like playing chess tournaments online.In your last tournament you played nn games. For the sake of this problem, each chess game is either won or lost (no draws). When you lose a game you get 00 points. When you win you get 11 or 22 points: if you have won also the previous game you get 22 points, otherwise you get 11 point. If you win the very first game of the tournament you get 11 point (since there is not a \"previous game\").The outcomes of the nn games are represented by a string ss of length nn: the ii-th character of ss is W if you have won the ii-th game, while it is L if you have lost the ii-th game.After the tournament, you notice a bug on the website that allows you to change the outcome of at most kk of your games (meaning that at most kk times you can change some symbol L to W, or W to L). Since your only goal is to improve your chess rating, you decide to cheat and use the bug.Compute the maximum score you can get by cheating in the optimal way.InputEach test contains multiple test cases. The first line contains an integer tt (1\u2264t\u226420,0001\u2264t\u226420,000) \u2014 the number of test cases. The description of the test cases follows.The first line of each testcase contains two integers n,kn,k (1\u2264n\u2264100,0001\u2264n\u2264100,000, 0\u2264k\u2264n0\u2264k\u2264n) \u2013 the number of games played and the number of outcomes that you can change.The second line contains a string ss of length nn containing only the characters W and L. If you have won the ii-th game then si=si=W, if you have lost the ii-th game then si=si=L.It is guaranteed that the sum of nn over all testcases does not exceed 200,000200,000.OutputFor each testcase, print a single integer \u2013 the maximum score you can get by cheating in the optimal way.ExampleInputCopy8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\nOutputCopy7\n11\n6\n26\n46\n0\n1\n6\nNoteExplanation of the first testcase. Before changing any outcome, the score is 22. Indeed, you won the first game, so you got 11 point, and you won also the third, so you got another 11 point (and not 22 because you lost the second game).An optimal way to cheat is to change the outcomes of the second and fourth game. Doing so, you end up winning the first four games (the string of the outcomes becomes WWWWL). Hence, the new score is 7=1+2+2+27=1+2+2+2: 11 point for the first game and 22 points for the second, third and fourth game.Explanation of the second testcase. Before changing any outcome, the score is 33. Indeed, you won the fourth game, so you got 11 point, and you won also the fifth game, so you got 22 more points (since you won also the previous game).An optimal way to cheat is to change the outcomes of the first, second, third and sixth game. Doing so, you end up winning all games (the string of the outcomes becomes WWWWWW). Hence, the new score is 11=1+2+2+2+2+211=1+2+2+2+2+2: 11 point for the first game and 22 points for all the other games."], "Binary Palindromes": ["https://codeforces.com/problemset/problem/1251/B", "B. Binary Palindromestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA palindrome is a string tt which reads the same backward as forward (formally, t[i]=t[|t|+1\u2212i]t[i]=t[|t|+1\u2212i] for all i\u2208[1,|t|]i\u2208[1,|t|]). Here |t||t| denotes the length of a string tt. For example, the strings 010, 1001 and 0 are palindromes.You have nn binary strings s1,s2,\u2026,sns1,s2,\u2026,sn (each sisi consists of zeroes and/or ones). You can swap any pair of characters any number of times (possibly, zero). Characters can be either from the same string or from different strings \u2014 there are no restrictions.Formally, in one move you:  choose four integer numbers x,a,y,bx,a,y,b such that 1\u2264x,y\u2264n1\u2264x,y\u2264n and 1\u2264a\u2264|sx|1\u2264a\u2264|sx| and 1\u2264b\u2264|sy|1\u2264b\u2264|sy| (where xx and yy are string indices and aa and bb are positions in strings sxsx and sysy respectively),  swap (exchange) the characters sx[a]sx[a] and sy[b]sy[b]. What is the maximum number of strings you can make palindromic simultaneously?InputThe first line contains single integer QQ (1\u2264Q\u2264501\u2264Q\u226450) \u2014 the number of test cases.The first line on each test case contains single integer nn (1\u2264n\u2264501\u2264n\u226450) \u2014 the number of binary strings you have.Next nn lines contains binary strings s1,s2,\u2026,sns1,s2,\u2026,sn \u2014 one per line. It's guaranteed that 1\u2264|si|\u2264501\u2264|si|\u226450 and all strings constist of zeroes and/or ones.OutputPrint QQ integers \u2014 one per test case. The ii-th integer should be the maximum number of palindromic strings you can achieve simultaneously performing zero or more swaps on strings from the ii-th test case.ExampleInputCopy4\n1\n0\n3\n1110\n100110\n010101\n2\n11111\n000001\n2\n001\n11100111\nOutputCopy1\n2\n2\n2\nNoteIn the first test case, s1s1 is palindrome, so the answer is 11.In the second test case you can't make all three strings palindromic at the same time, but you can make any pair of strings palindromic. For example, let's make s1=0110s1=0110, s2=111111s2=111111 and s3=010000s3=010000.In the third test case we can make both strings palindromic. For example, s1=11011s1=11011 and s2=100001s2=100001.In the last test case s2s2 is palindrome and you can make s1s1 palindrome, for example, by swapping s1[2]s1[2] and s1[3]s1[3]."], "DZY Loves Chemistry": ["https://codeforces.com/problemset/problem/445/B", "B. DZY Loves Chemistrytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDZY loves chemistry, and he enjoys mixing chemicals.DZY has n chemicals, and m pairs of them will react. He wants to pour these chemicals into a test tube, and he needs to pour them in one by one, in any order. Let's consider the danger of a test tube. Danger of an empty test tube is 1. And every time when DZY pours a chemical, if there are already one or more chemicals in the test tube that can react with it, the danger of the test tube will be multiplied by 2. Otherwise the danger remains as it is.Find the maximum possible danger after pouring all the chemicals one by one in optimal order.InputThe first line contains two space-separated integers n and m .Each of the next m lines contains two space-separated integers xi and yi (1\u2009\u2264\u2009xi\u2009<\u2009yi\u2009\u2264\u2009n). These integers mean that the chemical xi will react with the chemical yi. Each pair of chemicals will appear at most once in the input.Consider all the chemicals numbered from 1 to n in some order.OutputPrint a single integer \u2014 the maximum possible danger.ExamplesInputCopy1 0OutputCopy1InputCopy2 11 2OutputCopy2InputCopy3 21 22 3OutputCopy4NoteIn the first sample, there's only one way to pour, and the danger won't increase.In the second sample, no matter we pour the 1st chemical first, or pour the 2nd chemical first, the answer is always 2.In the third sample, there are four ways to achieve the maximum possible danger: 2-1-3, 2-3-1, 1-2-3 and 3-2-1 (that is the numbers of the chemicals in order of pouring)."], "Candies!": ["https://codeforces.com/problemset/problem/1189/C", "C. Candies!time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputConsider a sequence of digits of length 2k2k [a1,a2,\u2026,a2k][a1,a2,\u2026,a2k]. We perform the following operation with it: replace pairs (a2i+1,a2i+2)(a2i+1,a2i+2) with (a2i+1+a2i+2)mod10(a2i+1+a2i+2)mod10 for 0\u2264i<2k\u221210\u2264i<2k\u22121. For every ii where a2i+1+a2i+2\u226510a2i+1+a2i+2\u226510 we get a candy! As a result, we will get a sequence of length 2k\u221212k\u22121.Less formally, we partition sequence of length 2k2k into 2k\u221212k\u22121 pairs, each consisting of 2 numbers: the first pair consists of the first and second numbers, the second of the third and fourth \u2026\u2026, the last pair consists of the (2k\u221212k\u22121)-th and (2k2k)-th numbers. For every pair such that sum of numbers in it is at least 1010, we get a candy. After that, we replace every pair of numbers with a remainder of the division of their sum by 1010 (and don't change the order of the numbers).Perform this operation with a resulting array until it becomes of length 11. Let f([a1,a2,\u2026,a2k])f([a1,a2,\u2026,a2k]) denote the number of candies we get in this process. For example: if the starting sequence is [8,7,3,1,7,0,9,4][8,7,3,1,7,0,9,4] then:After the first operation the sequence becomes [(8+7)mod10,(3+1)mod10,(7+0)mod10,(9+4)mod10][(8+7)mod10,(3+1)mod10,(7+0)mod10,(9+4)mod10] == [5,4,7,3][5,4,7,3], and we get 22 candies as 8+7\u2265108+7\u226510 and 9+4\u2265109+4\u226510.After the second operation the sequence becomes [(5+4)mod10,(7+3)mod10][(5+4)mod10,(7+3)mod10] == [9,0][9,0], and we get one more candy as 7+3\u2265107+3\u226510. After the final operation sequence becomes [(9+0)mod10][(9+0)mod10] == [9][9]. Therefore, f([8,7,3,1,7,0,9,4])=3f([8,7,3,1,7,0,9,4])=3 as we got 33 candies in total.You are given a sequence of digits of length nn s1,s2,\u2026sns1,s2,\u2026sn. You have to answer qq queries of the form (li,ri)(li,ri), where for ii-th query you have to output f([sli,sli+1,\u2026,sri])f([sli,sli+1,\u2026,sri]). It is guaranteed that ri\u2212li+1ri\u2212li+1 is of form 2k2k for some nonnegative integer kk.InputThe first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the length of the sequence.The second line contains nn digits s1,s2,\u2026,sns1,s2,\u2026,sn (0\u2264si\u226490\u2264si\u22649).The third line contains a single integer qq (1\u2264q\u22641051\u2264q\u2264105)\u00a0\u2014 the number of queries.Each of the next qq lines contains two integers lili, riri (1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n)\u00a0\u2014 ii-th query. It is guaranteed that ri\u2212li+1ri\u2212li+1 is a nonnegative integer power of 22.OutputOutput qq lines, in ii-th line output single integer\u00a0\u2014 f([sli,sli+1,\u2026,sri])f([sli,sli+1,\u2026,sri]), answer to the ii-th query.ExamplesInputCopy8\n8 7 3 1 7 0 9 4\n3\n1 8\n2 5\n7 7\nOutputCopy3\n1\n0\nInputCopy6\n0 1 2 3 3 5\n3\n1 2\n1 4\n3 6\nOutputCopy0\n0\n1\nNoteThe first example illustrates an example from the statement.f([7,3,1,7])=1f([7,3,1,7])=1: sequence of operations is [7,3,1,7]\u2192[(7+3)mod10,(1+7)mod10][7,3,1,7]\u2192[(7+3)mod10,(1+7)mod10] == [0,8][0,8] and one candy as 7+3\u2265107+3\u226510 \u2192\u2192 [(0+8)mod10][(0+8)mod10] == [8][8], so we get only 11 candy.f([9])=0f([9])=0 as we don't perform operations with it."], "Bouncing Ball": ["https://codeforces.com/problemset/problem/1415/C", "C. Bouncing Balltime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're creating a game level for some mobile game. The level should contain some number of cells aligned in a row from left to right and numbered with consecutive integers starting from 11, and in each cell you can either put a platform or leave it empty.In order to pass a level, a player must throw a ball from the left so that it first lands on a platform in the cell pp, then bounces off it, then bounces off a platform in the cell (p+k)(p+k), then a platform in the cell (p+2k)(p+2k), and so on every kk-th platform until it goes farther than the last cell. If any of these cells has no platform, you can't pass the level with these pp and kk.You already have some level pattern a1a1, a2a2, a3a3, ..., anan, where ai=0ai=0 means there is no platform in the cell ii, and ai=1ai=1 means there is one. You want to modify it so that the level can be passed with given pp and kk. In xx seconds you can add a platform in some empty cell. In yy seconds you can remove the first cell completely, reducing the number of cells by one, and renumerating the other cells keeping their order. You can't do any other operation. You can not reduce the number of cells to less than pp.  Illustration for the third example test case. Crosses mark deleted cells. Blue platform is the newly added. What is the minimum number of seconds you need to make this level passable with given pp and kk?InputThe first line contains the number of test cases tt (1\u2264t\u22641001\u2264t\u2264100). Description of test cases follows.The first line of each test case contains three integers nn, pp, and kk (1\u2264p\u2264n\u22641051\u2264p\u2264n\u2264105, 1\u2264k\u2264n1\u2264k\u2264n)\u00a0\u2014 the number of cells you have, the first cell that should contain a platform, and the period of ball bouncing required.The second line of each test case contains a string a1a2a3\u2026ana1a2a3\u2026an (ai=0ai=0 or ai=1ai=1)\u00a0\u2014 the initial pattern written without spaces.The last line of each test case contains two integers xx and yy (1\u2264x,y\u22641041\u2264x,y\u2264104)\u00a0\u2014 the time required to add a platform and to remove the first cell correspondingly.The sum of nn over test cases does not exceed 105105.OutputFor each test case output a single integer\u00a0\u2014 the minimum number of seconds you need to modify the level accordingly.It can be shown that it is always possible to make the level passable.ExampleInputCopy3\n10 3 2\n0101010101\n2 2\n5 4 1\n00000\n2 10\n11 2 3\n10110011000\n4 3\nOutputCopy2\n4\n10\nNoteIn the first test case it's best to just remove the first cell, after that all required platforms are in their places: 0101010101. The stroked out digit is removed, the bold ones are where platforms should be located. The time required is y=2y=2.In the second test case it's best to add a platform to both cells 44 and 55: 00000 \u2192\u2192 00011. The time required is x\u22c52=4x\u22c52=4.In the third test case it's best to to remove the first cell twice and then add a platform to the cell which was initially 1010-th: 10110011000 \u2192\u2192 10110011010. The time required is y\u22c52+x=10y\u22c52+x=10."], "Array K-Coloring": ["https://codeforces.com/problemset/problem/1102/B", "B. Array K-Coloringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn integer numbers.You have to color this array in kk colors in such a way that:   Each element of the array should be colored in some color;  For each ii from 11 to kk there should be at least one element colored in the ii-th color in the array;  For each ii from 11 to kk all elements colored in the ii-th color should be distinct. Obviously, such coloring might be impossible. In this case, print \"NO\". Otherwise print \"YES\" and any coloring (i.e. numbers c1,c2,\u2026cnc1,c2,\u2026cn, where 1\u2264ci\u2264k1\u2264ci\u2264k and cici is the color of the ii-th element of the given array) satisfying the conditions above. If there are multiple answers, you can print any.InputThe first line of the input contains two integers nn and kk (1\u2264k\u2264n\u226450001\u2264k\u2264n\u22645000) \u2014 the length of the array aa and the number of colors, respectively.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u226450001\u2264ai\u22645000) \u2014 elements of the array aa.OutputIf there is no answer, print \"NO\". Otherwise print \"YES\" and any coloring (i.e. numbers c1,c2,\u2026cnc1,c2,\u2026cn, where 1\u2264ci\u2264k1\u2264ci\u2264k and cici is the color of the ii-th element of the given array) satisfying the conditions described in the problem statement. If there are multiple answers, you can print any.ExamplesInputCopy4 2\n1 2 2 3\nOutputCopyYES\n1 1 2 2\nInputCopy5 2\n3 2 1 2 3\nOutputCopyYES\n2 1 1 2 1\nInputCopy5 2\n2 1 1 2 1\nOutputCopyNO\nNoteIn the first example the answer 2\u00a01\u00a02\u00a012\u00a01\u00a02\u00a01 is also acceptable.In the second example the answer 1\u00a01\u00a01\u00a02\u00a021\u00a01\u00a01\u00a02\u00a02 is also acceptable.There exist other acceptable answers for both examples."], "Gourmet Cat": ["https://codeforces.com/problemset/problem/1154/C", "C. Gourmet Cattime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has a cat and his cat is a real gourmet! Dependent on a day of the week he eats certain type of food:  on Mondays, Thursdays and Sundays he eats fish food;  on Tuesdays and Saturdays he eats rabbit stew;  on other days of week he eats chicken stake. Polycarp plans to go on a trip and already packed his backpack. His backpack contains:  aa daily rations of fish food;  bb daily rations of rabbit stew;  cc daily rations of chicken stakes. Polycarp has to choose such day of the week to start his trip that his cat can eat without additional food purchases as long as possible. Print the maximum number of days the cat can eat in a trip without additional food purchases, if Polycarp chooses the day of the week to start his trip optimally.InputThe first line of the input contains three positive integers aa, bb and cc (1\u2264a,b,c\u22647\u22c51081\u2264a,b,c\u22647\u22c5108) \u2014 the number of daily rations of fish food, rabbit stew and chicken stakes in Polycarps backpack correspondingly.OutputPrint the maximum number of days the cat can eat in a trip without additional food purchases, if Polycarp chooses the day of the week to start his trip optimally.ExamplesInputCopy2 1 1\nOutputCopy4\nInputCopy3 2 2\nOutputCopy7\nInputCopy1 100 1\nOutputCopy3\nInputCopy30 20 10\nOutputCopy39\nNoteIn the first example the best day for start of the trip is Sunday. In this case, during Sunday and Monday the cat will eat fish food, during Tuesday \u2014 rabbit stew and during Wednesday \u2014 chicken stake. So, after four days of the trip all food will be eaten.In the second example Polycarp can start his trip in any day of the week. In any case there are food supplies only for one week in Polycarps backpack.In the third example Polycarp can start his trip in any day, excluding Wednesday, Saturday and Sunday. In this case, the cat will eat three different dishes in three days. Nevertheless that after three days of a trip there will be 9999 portions of rabbit stew in a backpack, can cannot eat anything in fourth day of a trip."], "Equalize Them All": ["https://codeforces.com/problemset/problem/1144/D", "D. Equalize Them Alltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn integers. You can perform the following operations arbitrary number of times (possibly, zero):  Choose a pair of indices (i,j)(i,j) such that |i\u2212j|=1|i\u2212j|=1 (indices ii and jj are adjacent) and set ai:=ai+|ai\u2212aj|ai:=ai+|ai\u2212aj|;  Choose a pair of indices (i,j)(i,j) such that |i\u2212j|=1|i\u2212j|=1 (indices ii and jj are adjacent) and set ai:=ai\u2212|ai\u2212aj|ai:=ai\u2212|ai\u2212aj|. The value |x||x| means the absolute value of xx. For example, |4|=4|4|=4, |\u22123|=3|\u22123|=3.Your task is to find the minimum number of operations required to obtain the array of equal elements and print the order of operations to do it.It is guaranteed that you always can obtain the array of equal elements using such operations.Note that after each operation each element of the current array should not exceed 10181018 by absolute value.InputThe first line of the input contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of elements in aa.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22642\u22c51050\u2264ai\u22642\u22c5105), where aiai is the ii-th element of aa.OutputIn the first line print one integer kk \u2014 the minimum number of operations required to obtain the array of equal elements.In the next kk lines print operations itself. The pp-th operation should be printed as a triple of integers (tp,ip,jp)(tp,ip,jp), where tptp is either 11 or 22 (11 means that you perform the operation of the first type, and 22 means that you perform the operation of the second type), and ipip and jpjp are indices of adjacent elements of the array such that 1\u2264ip,jp\u2264n1\u2264ip,jp\u2264n, |ip\u2212jp|=1|ip\u2212jp|=1. See the examples for better understanding.Note that after each operation each element of the current array should not exceed 10181018 by absolute value.If there are many possible answers, you can print any.ExamplesInputCopy5\n2 4 6 6 6\nOutputCopy2\n1 2 3 \n1 1 2 \nInputCopy3\n2 8 10\nOutputCopy2\n2 2 1 \n2 3 2 \nInputCopy4\n1 1 1 1\nOutputCopy0\n"], "Pocket Book": ["https://codeforces.com/problemset/problem/152/C", "C. Pocket Booktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day little Vasya found mom's pocket book. The book had n names of her friends and unusually enough, each name was exactly m letters long. Let's number the names from 1 to n in the order in which they are written.As mom wasn't home, Vasya decided to play with names: he chose three integers i, j, k (1\u2009\u2264\u2009i\u2009<\u2009j\u2009\u2264\u2009n, 1\u2009\u2264\u2009k\u2009\u2264\u2009m), then he took names number i and j and swapped their prefixes of length k. For example, if we take names \"CBDAD\" and \"AABRD\" and swap their prefixes with the length of 3, the result will be names \"AABAD\" and \"CBDRD\".You wonder how many different names Vasya can write instead of name number 1, if Vasya is allowed to perform any number of the described actions. As Vasya performs each action, he chooses numbers i, j, k independently from the previous moves and his choice is based entirely on his will. The sought number can be very large, so you should only find it modulo 1000000007 (109\u2009+\u20097).InputThe first input line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the number of names and the length of each name, correspondingly. Then n lines contain names, each name consists of exactly m uppercase Latin letters.OutputPrint the single number \u2014 the number of different names that could end up in position number 1 in the pocket book after the applying the procedures described above. Print the number modulo 1000000007 (109\u2009+\u20097).ExamplesInputCopy2 3AABBAAOutputCopy4InputCopy4 5ABABABCGDGAAAAAYABSAOutputCopy216NoteIn the first sample Vasya can get the following names in the position number 1: \"AAB\", \"AAA\", \"BAA\" and \"BAB\"."], "Queen": ["https://codeforces.com/problemset/problem/1143/C", "C. Queentime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree with vertices numerated from 11 to nn. A tree is a connected graph without cycles. A rooted tree has a special vertex named root.Ancestors of the vertex ii are all vertices on the path from the root to the vertex ii, except the vertex ii itself. The parent of the vertex ii is the nearest to the vertex ii ancestor of ii. Each vertex is a child of its parent. In the given tree the parent of the vertex ii is the vertex pipi. For the root, the value pipi is \u22121\u22121.  An example of a tree with n=8n=8, the root is vertex 55. The parent of the vertex 22 is vertex 33, the parent of the vertex 11 is vertex 55. The ancestors of the vertex 66 are vertices 44 and 55, the ancestors of the vertex 77 are vertices 88, 33 and 55 You noticed that some vertices do not respect others. In particular, if ci=1ci=1, then the vertex ii does not respect any of its ancestors, and if ci=0ci=0, it respects all of them.You decided to delete vertices from the tree one by one. On each step you select such a non-root vertex that it does not respect its parent and none of its children respects it. If there are several such vertices, you select the one with the smallest number. When you delete this vertex vv, all children of vv become connected with the parent of vv.  An example of deletion of the vertex 77. Once there are no vertices matching the criteria for deletion, you stop the process. Print the order in which you will delete the vertices. Note that this order is unique.InputThe first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of vertices in the tree.The next nn lines describe the tree: the ii-th line contains two integers pipi and cici (1\u2264pi\u2264n1\u2264pi\u2264n, 0\u2264ci\u226410\u2264ci\u22641), where pipi is the parent of the vertex ii, and ci=0ci=0, if the vertex ii respects its parents, and ci=1ci=1, if the vertex ii does not respect any of its parents. The root of the tree has \u22121\u22121 instead of the parent index, also, ci=0ci=0 for the root. It is guaranteed that the values pipi define a rooted tree with nn vertices.OutputIn case there is at least one vertex to delete, print the only line containing the indices of the vertices you will delete in the order you delete them. Otherwise print a single integer \u22121\u22121.ExamplesInputCopy5\n3 1\n1 1\n-1 0\n2 1\n3 0\nOutputCopy1 2 4 \nInputCopy5\n-1 0\n1 1\n1 1\n2 0\n3 0\nOutputCopy-1\nInputCopy8\n2 1\n-1 0\n1 0\n1 1\n1 1\n4 0\n5 1\n7 0\nOutputCopy5 \nNoteThe deletion process in the first example is as follows (see the picture below, the vertices with ci=1ci=1 are in yellow):  first you will delete the vertex 11, because it does not respect ancestors and all its children (the vertex 22) do not respect it, and 11 is the smallest index among such vertices;  the vertex 22 will be connected with the vertex 33 after deletion;  then you will delete the vertex 22, because it does not respect ancestors and all its children (the only vertex 44) do not respect it;  the vertex 44 will be connected with the vertex 33;  then you will delete the vertex 44, because it does not respect ancestors and all its children (there are none) do not respect it (vacuous truth);  you will just delete the vertex 44;  there are no more vertices to delete.   In the second example you don't need to delete any vertex:  vertices 22 and 33 have children that respect them;  vertices 44 and 55 respect ancestors.   In the third example the tree will change this way:  "], "Round Corridor": ["https://codeforces.com/problemset/problem/1200/C", "C. Round Corridortime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAmugae is in a very large round corridor. The corridor consists of two areas. The inner area is equally divided by nn sectors, and the outer area is equally divided by mm sectors. A wall exists between each pair of sectors of same area (inner or outer), but there is no wall between the inner area and the outer area. A wall always exists at the 12 o'clock position.  The inner area's sectors are denoted as (1,1),(1,2),\u2026,(1,n)(1,1),(1,2),\u2026,(1,n) in clockwise direction. The outer area's sectors are denoted as (2,1),(2,2),\u2026,(2,m)(2,1),(2,2),\u2026,(2,m) in the same manner. For a clear understanding, see the example image above.Amugae wants to know if he can move from one sector to another sector. He has qq questions.For each question, check if he can move between two given sectors.InputThe first line contains three integers nn, mm and qq (1\u2264n,m\u226410181\u2264n,m\u22641018, 1\u2264q\u22641041\u2264q\u2264104)\u00a0\u2014 the number of sectors in the inner area, the number of sectors in the outer area and the number of questions.Each of the next qq lines contains four integers sxsx, sysy, exex, eyey (1\u2264sx,ex\u226421\u2264sx,ex\u22642; if sx=1sx=1, then 1\u2264sy\u2264n1\u2264sy\u2264n, otherwise 1\u2264sy\u2264m1\u2264sy\u2264m; constraints on eyey are similar). Amague wants to know if it is possible to move from sector (sx,sy)(sx,sy) to sector (ex,ey)(ex,ey).OutputFor each question, print \"YES\" if Amugae can move from (sx,sy)(sx,sy) to (ex,ey)(ex,ey), and \"NO\" otherwise.You can print each letter in any case (upper or lower).ExampleInputCopy4 6 3\n1 1 2 3\n2 6 1 2\n2 6 2 4\nOutputCopyYES\nNO\nYES\nNoteExample is shown on the picture in the statement."], "Grid game": ["https://codeforces.com/problemset/problem/1103/A", "A. Grid gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a 4x4 grid. You play a game\u00a0\u2014 there is a sequence of tiles, each of them is either 2x1 or 1x2. Your task is to consequently place all tiles from the given sequence in the grid. When tile is placed, each cell which is located in fully occupied row or column is deleted (cells are deleted at the same time independently). You can place tile in the grid at any position, the only condition is that tiles (and tile parts) should not overlap. Your goal is to proceed all given figures and avoid crossing at any time.InputThe only line contains a string ss consisting of zeroes and ones (1\u2264|s|\u226410001\u2264|s|\u22641000). Zero describes vertical tile, one describes horizontal tile.OutputOutput |s||s| lines\u00a0\u2014 for each tile you should output two positive integers r,cr,c, not exceeding 44, representing numbers of smallest row and column intersecting with it.If there exist multiple solutions, print any of them.ExampleInputCopy010\nOutputCopy1 1\n1 2\n1 4NoteFollowing image illustrates the example after placing all three tiles:    Then the first row is deleted:   "], "Draw!": ["https://codeforces.com/problemset/problem/1131/B", "B. Draw!time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou still have partial information about the score during the historic football match. You are given a set of pairs (ai,bi)(ai,bi), indicating that at some point during the match the score was \"aiai: bibi\". It is known that if the current score is \u00abxx:yy\u00bb, then after the goal it will change to \"x+1x+1:yy\" or \"xx:y+1y+1\". What is the largest number of times a draw could appear on the scoreboard?The pairs \"aiai:bibi\" are given in chronological order (time increases), but you are given score only for some moments of time. The last pair corresponds to the end of the match.InputThe first line contains a single integer nn (1\u2264n\u2264100001\u2264n\u226410000) \u2014 the number of known moments in the match.Each of the next nn lines contains integers aiai and bibi (0\u2264ai,bi\u22641090\u2264ai,bi\u2264109), denoting the score of the match at that moment (that is, the number of goals by the first team and the number of goals by the second team).All moments are given in chronological order, that is, sequences xixi and yjyj are non-decreasing. The last score denotes the final result of the match.OutputPrint the maximum number of moments of time, during which the score was a draw. The starting moment of the match (with a score 0:0) is also counted.ExamplesInputCopy32 03 13 4OutputCopy2InputCopy30 00 00 0OutputCopy1InputCopy15 4OutputCopy5NoteIn the example one of the possible score sequences leading to the maximum number of draws is as follows: 0:0, 1:0, 2:0, 2:1, 3:1, 3:2, 3:3, 3:4."], "Arrays Sum": ["https://codeforces.com/problemset/problem/1408/B", "B. Arrays Sumtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a non-decreasing array of non-negative integers a1,a2,\u2026,ana1,a2,\u2026,an. Also you are given a positive integer kk.You want to find mm non-decreasing arrays of non-negative integers b1,b2,\u2026,bmb1,b2,\u2026,bm, such that:  The size of bibi is equal to nn for all 1\u2264i\u2264m1\u2264i\u2264m.  For all 1\u2264j\u2264n1\u2264j\u2264n, aj=b1,j+b2,j+\u2026+bm,jaj=b1,j+b2,j+\u2026+bm,j. In the other word, array aa is the sum of arrays bibi.  The number of different elements in the array bibi is at most kk for all 1\u2264i\u2264m1\u2264i\u2264m. Find the minimum possible value of mm, or report that there is no possible mm.InputThe first line contains one integer tt (1\u2264t\u22641001\u2264t\u2264100): the number of test cases.The first line of each test case contains two integers nn, kk (1\u2264n\u22641001\u2264n\u2264100, 1\u2264k\u2264n1\u2264k\u2264n).The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264a1\u2264a2\u2264\u2026\u2264an\u22641000\u2264a1\u2264a2\u2264\u2026\u2264an\u2264100, an>0an>0).OutputFor each test case print a single integer: the minimum possible value of mm. If there is no such mm, print \u22121\u22121.ExampleInputCopy6\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\nOutputCopy-1\n1\n2\n2\n2\n1\nNoteIn the first test case, there is no possible mm, because all elements of all arrays should be equal to 00. But in this case, it is impossible to get a4=1a4=1 as the sum of zeros.In the second test case, we can take b1=[3,3,3]b1=[3,3,3]. 11 is the smallest possible value of mm.In the third test case, we can take b1=[0,1,1,1,2,2,2,2,2,2,2]b1=[0,1,1,1,2,2,2,2,2,2,2] and b2=[0,0,1,1,1,1,1,2,2,2,2]b2=[0,0,1,1,1,1,1,2,2,2,2]. It's easy to see, that ai=b1,i+b2,iai=b1,i+b2,i for all ii and the number of different elements in b1b1 and in b2b2 is equal to 33 (so it is at most 33). It can be proven that 22 is the smallest possible value of mm."], "Minimum number of steps": ["https://codeforces.com/problemset/problem/804/B", "B. Minimum number of stepstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputWe have a string of letters 'a' and 'b'. We want to perform some operations on it. On each step we choose one of substrings \"ab\" in the string and replace it with the string \"bba\". If we have no \"ab\" as a substring, our job is done. Print the minimum number of steps we should perform to make our job done modulo 109\u2009+\u20097.The string \"ab\" appears as a substring if there is a letter 'b' right after the letter 'a' somewhere in the string.InputThe first line contains the initial string consisting of letters 'a' and 'b' only with length from 1 to 106.OutputPrint the minimum number of steps modulo 109\u2009+\u20097.ExamplesInputCopyabOutputCopy1InputCopyaabOutputCopy3NoteThe first example: \"ab\" \u2009\u2192\u2009 \"bba\".The second example: \"aab\" \u2009\u2192\u2009 \"abba\" \u2009\u2192\u2009 \"bbaba\" \u2009\u2192\u2009 \"bbbbaa\"."], "Approximating a Constant Range": ["https://codeforces.com/problemset/problem/602/B", "B. Approximating a Constant Rangetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWhen Xellos was doing a practice course in university, he once had to measure the intensity of an effect that slowly approached equilibrium. A good way to determine the equilibrium intensity would be choosing a sufficiently large number of consecutive data points that seems as constant as possible and taking their average. Of course, with the usual sizes of data, it's nothing challenging\u00a0\u2014 but why not make a similar programming contest problem while we're at it?You're given a sequence of n data points a1,\u2009...,\u2009an. There aren't any big jumps between consecutive data points\u00a0\u2014 for each 1\u2009\u2264\u2009i\u2009<\u2009n, it's guaranteed that |ai\u2009+\u20091\u2009-\u2009ai|\u2009\u2264\u20091.A range [l,\u2009r] of data points is said to be almost constant if the difference between the largest and the smallest value in that range is at most 1. Formally, let M be the maximum and m the minimum value of ai for l\u2009\u2264\u2009i\u2009\u2264\u2009r; the range [l,\u2009r] is almost constant if M\u2009-\u2009m\u2009\u2264\u20091.Find the length of the longest almost constant range.InputThe first line of the input contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of data points.The second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009100\u2009000).OutputPrint a single number\u00a0\u2014 the maximum length of an almost constant range of the given sequence.ExamplesInputCopy51 2 3 3 2OutputCopy4InputCopy115 4 5 5 6 7 8 8 8 7 6OutputCopy5NoteIn the first sample, the longest almost constant range is [2,\u20095]; its length (the number of data points in it) is 4.In the second sample, there are three almost constant ranges of length 4: [1,\u20094], [6,\u20099] and [7,\u200910]; the only almost constant range of the maximum length 5 is [6,\u200910]."], "Tokitsukaze and Discard Items": ["https://codeforces.com/problemset/problem/1190/A", "A. Tokitsukaze and Discard Itemstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently, Tokitsukaze found an interesting game. Tokitsukaze had nn items at the beginning of this game. However, she thought there were too many items, so now she wants to discard mm (1\u2264m\u2264n1\u2264m\u2264n) special items of them.These nn items are marked with indices from 11 to nn. In the beginning, the item with index ii is placed on the ii-th position. Items are divided into several pages orderly, such that each page contains exactly kk positions and the last positions on the last page may be left empty.Tokitsukaze would do the following operation: focus on the first special page that contains at least one special item, and at one time, Tokitsukaze would discard all special items on this page. After an item is discarded or moved, its old position would be empty, and then the item below it, if exists, would move up to this empty position. The movement may bring many items forward and even into previous pages, so Tokitsukaze would keep waiting until all the items stop moving, and then do the operation (i.e. check the special page and discard the special items) repeatedly until there is no item need to be discarded.  Consider the first example from the statement: n=10n=10, m=4m=4, k=5k=5, p=[3,5,7,10]p=[3,5,7,10]. The are two pages. Initially, the first page is special (since it is the first page containing a special item). So Tokitsukaze discards the special items with indices 33 and 55. After, the first page remains to be special. It contains [1,2,4,6,7][1,2,4,6,7], Tokitsukaze discards the special item with index 77. After, the second page is special (since it is the first page containing a special item). It contains [9,10][9,10], Tokitsukaze discards the special item with index 1010. Tokitsukaze wants to know the number of operations she would do in total.InputThe first line contains three integers nn, mm and kk (1\u2264n\u226410181\u2264n\u22641018, 1\u2264m\u22641051\u2264m\u2264105, 1\u2264m,k\u2264n1\u2264m,k\u2264n)\u00a0\u2014 the number of items, the number of special items to be discarded and the number of positions in each page.The second line contains mm distinct integers p1,p2,\u2026,pmp1,p2,\u2026,pm (1\u2264p1<p2<\u2026<pm\u2264n1\u2264p1<p2<\u2026<pm\u2264n)\u00a0\u2014 the indices of special items which should be discarded.OutputPrint a single integer\u00a0\u2014 the number of operations that Tokitsukaze would do in total.ExamplesInputCopy10 4 5\n3 5 7 10\nOutputCopy3\nInputCopy13 4 5\n7 8 9 10\nOutputCopy1\nNoteFor the first example:  In the first operation, Tokitsukaze would focus on the first page [1,2,3,4,5][1,2,3,4,5] and discard items with indices 33 and 55;  In the second operation, Tokitsukaze would focus on the first page [1,2,4,6,7][1,2,4,6,7] and discard item with index 77;  In the third operation, Tokitsukaze would focus on the second page [9,10][9,10] and discard item with index 1010. For the second example, Tokitsukaze would focus on the second page [6,7,8,9,10][6,7,8,9,10] and discard all special items at once."], "Diverse Matrix": ["https://codeforces.com/problemset/problem/1266/C", "C. Diverse Matrixtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet aa be a matrix of size r\u00d7cr\u00d7c containing positive integers, not necessarily distinct. Rows of the matrix are numbered from 11 to rr, columns are numbered from 11 to cc. We can construct an array bb consisting of r+cr+c integers as follows: for each i\u2208[1,r]i\u2208[1,r], let bibi be the greatest common divisor of integers in the ii-th row, and for each j\u2208[1,c]j\u2208[1,c] let br+jbr+j be the greatest common divisor of integers in the jj-th column. We call the matrix diverse if all r+cr+c numbers bkbk (k\u2208[1,r+c]k\u2208[1,r+c]) are pairwise distinct. The magnitude of a matrix equals to the maximum of bkbk.For example, suppose we have the following matrix: (249144784)(297414484) We construct the array bb:  b1b1 is the greatest common divisor of 22, 99, and 77, that is 11;  b2b2 is the greatest common divisor of 44, 144144, and 8484, that is 44;  b3b3 is the greatest common divisor of 22 and 44, that is 22;  b4b4 is the greatest common divisor of 99 and 144144, that is 99;  b5b5 is the greatest common divisor of 77 and 8484, that is 77. So b=[1,4,2,9,7]b=[1,4,2,9,7]. All values in this array are distinct, so the matrix is diverse. The magnitude is equal to 99.For a given rr and cc, find a diverse matrix that minimises the magnitude. If there are multiple solutions, you may output any of them. If there are no solutions, output a single integer 00. InputThe only line in the input contains two space separated integers rr and cc (1\u2264r,c\u22645001\u2264r,c\u2264500)\u00a0\u2014 the number of rows and the number of columns of the matrix to be found.OutputIf there is no solution, output a single integer 00.Otherwise, output rr rows. The ii-th of them should contain cc space-separated integers, the jj-th of which is ai,jai,j \u2014 the positive integer in the ii-th row and jj-th column of a diverse matrix minimizing the magnitude.Furthermore, it must hold that 1\u2264ai,j\u22641091\u2264ai,j\u2264109. It can be shown that if a solution exists, there is also a solution with this additional constraint (still having minimum possible magnitude).ExamplesInputCopy2 2\nOutputCopy4 12\n2 9InputCopy1 1\nOutputCopy0\nNoteIn the first example, the GCDs of rows are b1=4b1=4 and b2=1b2=1, and the GCDs of columns are b3=2b3=2 and b4=3b4=3. All GCDs are pairwise distinct and the maximum of them is 44. Since the GCDs have to be distinct and at least 11, it is clear that there are no diverse matrices of size 2\u00d722\u00d72 with magnitude smaller than 44.In the second example, no matter what a1,1a1,1 is, b1=b2b1=b2 will always hold, so there are no diverse matrices."], "Sereja and Bottles": ["https://codeforces.com/problemset/problem/315/A", "A. Sereja and Bottlestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSereja and his friends went to a picnic. The guys had n soda bottles just for it. Sereja forgot the bottle opener as usual, so the guys had to come up with another way to open bottles.Sereja knows that the i-th bottle is from brand ai, besides, you can use it to open other bottles of brand bi. You can use one bottle to open multiple other bottles. Sereja can open bottle with opened bottle or closed bottle.Knowing this, Sereja wants to find out the number of bottles they've got that they won't be able to open in any way. Help him and find this number.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of bottles. The next n lines contain the bottles' description. The i-th line contains two integers ai,\u2009bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u20091000) \u2014 the description of the i-th bottle.OutputIn a single line print a single integer \u2014 the answer to the problem.ExamplesInputCopy41 12 23 34 4OutputCopy4InputCopy41 22 33 44 1OutputCopy0"], "New Year and the Sphere Transmission": ["https://codeforces.com/problemset/problem/1091/C", "C. New Year and the Sphere Transmissiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn people sitting in a circle, numbered from 11 to nn in the order in which they are seated. That is, for all ii from 11 to n\u22121n\u22121, the people with id ii and i+1i+1 are adjacent. People with id nn and 11 are adjacent as well.The person with id 11 initially has a ball. He picks a positive integer kk at most nn, and passes the ball to his kk-th neighbour in the direction of increasing ids, that person passes the ball to his kk-th neighbour in the same direction, and so on until the person with the id 11 gets the ball back. When he gets it back, people do not pass the ball any more.For instance, if n=6n=6 and k=4k=4, the ball is passed in order [1,5,3,1][1,5,3,1]. Consider the set of all people that touched the ball. The fun value of the game is the sum of the ids of people that touched it. In the above example, the fun value would be 1+5+3=91+5+3=9.Find and report the set of possible fun values for all choices of positive integer kk. It can be shown that under the constraints of the problem, the ball always gets back to the 11-st player after finitely many steps, and there are no more than 105105 possible fun values for given nn.InputThe only line consists of a single integer nn\u00a0(2\u2264n\u22641092\u2264n\u2264109)\u00a0\u2014 the number of people playing with the ball.OutputSuppose the set of all fun values is f1,f2,\u2026,fmf1,f2,\u2026,fm.Output a single line containing mm space separated integers f1f1 through fmfm in increasing order.ExamplesInputCopy6\nOutputCopy1 5 9 21\nInputCopy16\nOutputCopy1 10 28 64 136\nNoteIn the first sample, we've already shown that picking k=4k=4 yields fun value 99, as does k=2k=2. Picking k=6k=6 results in fun value of 11. For k=3k=3 we get fun value 55 and with k=1k=1 or k=5k=5 we get 2121.   In the second sample, the values 11, 1010, 2828, 6464 and 136136 are achieved for instance for k=16k=16, 88, 44, 1010 and 1111, respectively."], "The World is a Theatre": ["https://codeforces.com/problemset/problem/131/C", "C. The World is a Theatretime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n boys and m girls attending a theatre club. To set a play \"The Big Bang Theory\", they need to choose a group containing exactly t actors containing no less than 4 boys and no less than one girl. How many ways are there to choose a group? Of course, the variants that only differ in the composition of the troupe are considered different.Perform all calculations in the 64-bit type: long long for \u0421/\u0421++, int64 for Delphi and long for Java.InputThe only line of the input data contains three integers n, m, t (4\u2009\u2264\u2009n\u2009\u2264\u200930,\u20091\u2009\u2264\u2009m\u2009\u2264\u200930,\u20095\u2009\u2264\u2009t\u2009\u2264\u2009n\u2009+\u2009m).OutputFind the required number of ways.Please do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specificator.ExamplesInputCopy5 2 5OutputCopy10InputCopy4 3 5OutputCopy3"], "Minimum Ternary String": ["https://codeforces.com/problemset/problem/1009/B", "B. Minimum Ternary Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a ternary string (it is a string which consists only of characters '0', '1' and '2').You can swap any two adjacent (consecutive) characters '0' and '1' (i.e. replace \"01\" with \"10\" or vice versa) or any two adjacent (consecutive) characters '1' and '2' (i.e. replace \"12\" with \"21\" or vice versa).For example, for string \"010210\" we can perform the following moves:   \"010210\" \u2192\u2192 \"100210\";  \"010210\" \u2192\u2192 \"001210\";  \"010210\" \u2192\u2192 \"010120\";  \"010210\" \u2192\u2192 \"010201\". Note than you cannot swap \"02\" \u2192\u2192 \"20\" and vice versa. You cannot perform any other operations with the given string excluding described above.You task is to obtain the minimum possible (lexicographically) string by using these swaps arbitrary number of times (possibly, zero).String aa is lexicographically less than string bb (if strings aa and bb have the same length) if there exists some position ii (1\u2264i\u2264|a|1\u2264i\u2264|a|, where |s||s| is the length of the string ss) such that for every j<ij<i holds aj=bjaj=bj, and ai<biai<bi.InputThe first line of the input contains the string ss consisting only of characters '0', '1' and '2', its length is between 11 and 105105 (inclusive).OutputPrint a single string \u2014 the minimum possible (lexicographically) string you can obtain by using the swaps described above arbitrary number of times (possibly, zero).ExamplesInputCopy100210OutputCopy001120InputCopy11222121OutputCopy11112222InputCopy20OutputCopy20"], "Lost Numbers": ["https://codeforces.com/problemset/problem/1167/B", "B. Lost Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an interactive problem. Remember to flush your output while communicating with the testing program. You may use fflush(stdout) in C++, system.out.flush() in Java, stdout.flush() in Python or flush(output) in Pascal to flush the output. If you use some other programming language, consult its documentation. You may also refer to the guide on interactive problems: https://codeforces.com/blog/entry/45307.The jury guessed some array aa consisting of 66 integers. There are 66 special numbers \u2014 44, 88, 1515, 1616, 2323, 4242 \u2014 and each of these numbers occurs in aa exactly once (so, aa is some permutation of these numbers).You don't know anything about their order, but you are allowed to ask up to 44 queries. In each query, you may choose two indices ii and jj (1\u2264i,j\u226461\u2264i,j\u22646, ii and jj are not necessarily distinct), and you will get the value of ai\u22c5ajai\u22c5aj in return.Can you guess the array aa?The array aa is fixed beforehand in each test, the interaction program doesn't try to adapt to your queries.InteractionBefore submitting the answer, you may ask up to 44 queries. To ask a query, print one line in the following format: ?? ii jj, where ii and jj should be two integers such that 1\u2264i,j\u226461\u2264i,j\u22646. The line should be ended with a line break character. After submitting a query, flush the output and read the answer to your query \u2014 one line containing one integer ai\u22c5ajai\u22c5aj. If you submit an incorrect query (or ask more than 44 queries), the answer to it will be one string 0. After receiving such an answer, your program should terminate immediately \u2014 otherwise you may receive verdict \"Runtime error\", \"Time limit exceeded\" or some other verdict instead of \"Wrong answer\".To give the answer, your program should print one line !! a1a1 a2a2 a3a3 a4a4 a5a5 a6a6 with a line break in the end. After that, it should flush the output and terminate gracefully.ExampleInputCopy16\n64\n345\n672OutputCopy? 1 1\n? 2 2\n? 3 5\n? 4 6\n! 4 8 15 16 23 42NoteIf you want to submit a hack for this problem, your test should contain exactly six space-separated integers a1a1, a2a2, ..., a6a6. Each of 66 special numbers should occur exactly once in the test. The test should be ended with a line break character."], "Odd sum": ["https://codeforces.com/problemset/problem/797/B", "B. Odd sumtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given sequence a1,\u2009a2,\u2009...,\u2009an of integer numbers of length n. Your task is to find such subsequence that its sum is odd and maximum among all such subsequences. It's guaranteed that given sequence contains subsequence with odd sum.Subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.You should write a program which finds sum of the best subsequence.InputThe first line contains integer number n (1\u2009\u2264\u2009n\u2009\u2264\u2009105).The second line contains n integer numbers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009104\u2009\u2264\u2009ai\u2009\u2264\u2009104). The sequence contains at least one subsequence with odd sum.OutputPrint sum of resulting subseqeuence.ExamplesInputCopy4-2 2 -3 1OutputCopy3InputCopy32 -5 -3OutputCopy-1NoteIn the first example sum of the second and the fourth elements is 3."], "Equal Sums": ["https://codeforces.com/problemset/problem/988/C", "C. Equal Sumstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given kk sequences of integers. The length of the ii-th sequence equals to nini.You have to choose exactly two sequences ii and jj (i\u2260ji\u2260j) such that you can remove exactly one element in each of them in such a way that the sum of the changed sequence ii (its length will be equal to ni\u22121ni\u22121) equals to the sum of the changed sequence jj (its length will be equal to nj\u22121nj\u22121).Note that it's required to remove exactly one element in each of the two chosen sequences.Assume that the sum of the empty (of the length equals 00) sequence is 00.InputThe first line contains an integer kk (2\u2264k\u22642\u22c51052\u2264k\u22642\u22c5105) \u2014 the number of sequences.Then kk pairs of lines follow, each pair containing a sequence.The first line in the ii-th pair contains one integer nini (1\u2264ni<2\u22c51051\u2264ni<2\u22c5105) \u2014 the length of the ii-th sequence. The second line of the ii-th pair contains a sequence of nini integers ai,1,ai,2,\u2026,ai,niai,1,ai,2,\u2026,ai,ni.The elements of sequences are integer numbers from \u2212104\u2212104 to 104104.The sum of lengths of all given sequences don't exceed 2\u22c51052\u22c5105, i.e. n1+n2+\u22ef+nk\u22642\u22c5105n1+n2+\u22ef+nk\u22642\u22c5105.OutputIf it is impossible to choose two sequences such that they satisfy given conditions, print \"NO\" (without quotes). Otherwise in the first line print \"YES\" (without quotes), in the second line \u2014 two integers ii, xx (1\u2264i\u2264k,1\u2264x\u2264ni1\u2264i\u2264k,1\u2264x\u2264ni), in the third line \u2014 two integers jj, yy (1\u2264j\u2264k,1\u2264y\u2264nj1\u2264j\u2264k,1\u2264y\u2264nj). It means that the sum of the elements of the ii-th sequence without the element with index xx equals to the sum of the elements of the jj-th sequence without the element with index yy.Two chosen sequences must be distinct, i.e. i\u2260ji\u2260j. You can print them in any order.If there are multiple possible answers, print any of them.ExamplesInputCopy252 3 1 3 261 1 2 2 2 1OutputCopyYES2 61 2InputCopy31551 1 1 1 122 3OutputCopyNOInputCopy462 2 2 2 2 252 2 2 2 232 2 252 2 2 2 2OutputCopyYES2 24 1NoteIn the first example there are two sequences [2,3,1,3,2][2,3,1,3,2] and [1,1,2,2,2,1][1,1,2,2,2,1]. You can remove the second element from the first sequence to get [2,1,3,2][2,1,3,2] and you can remove the sixth element from the second sequence to get [1,1,2,2,2][1,1,2,2,2]. The sums of the both resulting sequences equal to 88, i.e. the sums are equal."], "Weird Sum": ["https://codeforces.com/problemset/problem/1648/A", "A. Weird Sumtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEgor has a table of size n\u00d7mn\u00d7m, with lines numbered from 11 to nn and columns numbered from 11 to mm. Each cell has a color that can be presented as an integer from 11 to 105105.Let us denote the cell that lies in the intersection of the rr-th row and the cc-th column as (r,c)(r,c). We define the manhattan distance between two cells (r1,c1)(r1,c1) and (r2,c2)(r2,c2) as the length of a shortest path between them where each consecutive cells in the path must have a common side. The path can go through cells of any color. For example, in the table 3\u00d743\u00d74 the manhattan distance between (1,2)(1,2) and (3,3)(3,3) is 33, one of the shortest paths is the following: (1,2)\u2192(2,2)\u2192(2,3)\u2192(3,3)(1,2)\u2192(2,2)\u2192(2,3)\u2192(3,3). Egor decided to calculate the sum of manhattan distances between each pair of cells of the same color. Help him to calculate this sum.InputThe first line contains two integers nn and mm (1\u2264n\u2264m1\u2264n\u2264m, n\u22c5m\u2264100000n\u22c5m\u2264100000)\u00a0\u2014 number of rows and columns in the table.Each of next nn lines describes a row of the table. The ii-th line contains mm integers ci1,ci2,\u2026,cimci1,ci2,\u2026,cim (1\u2264cij\u22641000001\u2264cij\u2264100000)\u00a0\u2014 colors of cells in the ii-th row.OutputPrint one integer\u00a0\u2014 the the sum of manhattan distances between each pair of cells of the same color.ExamplesInputCopy2 3\n1 2 3\n3 2 1\nOutputCopy7\nInputCopy3 4\n1 1 2 2\n2 1 1 2\n2 2 1 1\nOutputCopy76\nInputCopy4 4\n1 1 2 3\n2 1 1 2\n3 1 2 1\n1 1 2 1\nOutputCopy129\nNoteIn the first sample there are three pairs of cells of same color: in cells (1,1)(1,1) and (2,3)(2,3), in cells (1,2)(1,2) and (2,2)(2,2), in cells (1,3)(1,3) and (2,1)(2,1). The manhattan distances between them are 33, 11 and 33, the sum is 77."], "Pasha and String": ["https://codeforces.com/problemset/problem/525/B", "B. Pasha and Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPasha got a very beautiful string s for his birthday, the string consists of lowercase Latin letters. The letters in the string are numbered from 1 to |s| from left to right, where |s| is the length of the given string.Pasha didn't like his present very much so he decided to change it. After his birthday Pasha spent m days performing the following transformations on his string\u00a0\u2014\u00a0each day he chose integer ai and reversed a piece of string (a segment) from position ai to position |s|\u2009-\u2009ai\u2009+\u20091. It is guaranteed that 2\u00b7ai\u2009\u2264\u2009|s|.You face the following task: determine what Pasha's string will look like after m days.InputThe first line of the input contains Pasha's string s of length from 2 to 2\u00b7105 characters, consisting of lowercase Latin letters.The second line contains a single integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009105)\u00a0\u2014\u00a0 the number of days when Pasha changed his string.The third line contains m space-separated elements ai (1\u2009\u2264\u2009ai; 2\u00b7ai\u2009\u2264\u2009|s|)\u00a0\u2014\u00a0the position from which Pasha started transforming the string on the i-th day.OutputIn the first line of the output print what Pasha's string s will look like after m days.ExamplesInputCopyabcdef12OutputCopyaedcbfInputCopyvwxyz22 2OutputCopyvwxyzInputCopyabcdef31 2 3OutputCopyfbdcea"], "Covered Path": ["https://codeforces.com/problemset/problem/534/B", "B. Covered Pathtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe on-board computer on Polycarp's car measured that the car speed at the beginning of some section of the path equals v1 meters per second, and in the end it is v2 meters per second. We know that this section of the route took exactly t seconds to pass.Assuming that at each of the seconds the speed is constant, and between seconds the speed can change at most by d meters per second in absolute value (i.e., the difference in the speed of any two adjacent seconds does not exceed d in absolute value), find the maximum possible length of the path section in meters.InputThe first line contains two integers v1 and v2 (1\u2009\u2264\u2009v1,\u2009v2\u2009\u2264\u2009100) \u2014 the speeds in meters per second at the beginning of the segment and at the end of the segment, respectively.The second line contains two integers t (2\u2009\u2264\u2009t\u2009\u2264\u2009100) \u2014 the time when the car moves along the segment in seconds, d (0\u2009\u2264\u2009d\u2009\u2264\u200910) \u2014 the maximum value of the speed change between adjacent seconds.It is guaranteed that there is a way to complete the segment so that:  the speed in the first second equals v1,  the speed in the last second equals v2,  the absolute value of difference of speeds between any two adjacent seconds doesn't exceed d. OutputPrint the maximum possible length of the path segment in meters. ExamplesInputCopy5 64 2OutputCopy26InputCopy10 1010 0OutputCopy100NoteIn the first sample the sequence of speeds of Polycarpus' car can look as follows: 5, 7, 8, 6. Thus, the total path is 5\u2009+\u20097\u2009+\u20098\u2009+\u20096\u2009=\u200926 meters.In the second sample, as d\u2009=\u20090, the car covers the whole segment at constant speed v\u2009=\u200910. In t\u2009=\u200910 seconds it covers the distance of 100 meters."], "Physics Practical": ["https://codeforces.com/problemset/problem/253/B", "B. Physics Practicaltime limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtOne day Vasya was on a physics practical, performing the task on measuring the capacitance. He followed the teacher's advice and did as much as n measurements, and recorded the results in the notebook. After that he was about to show the results to the teacher, but he remembered that at the last lesson, the teacher had made his friend Petya redo the experiment because the largest and the smallest results differed by more than two times. Vasya is lazy, and he does not want to redo the experiment. He wants to do the task and go home play computer games. So he decided to cheat: before Vasya shows the measurements to the teacher, he will erase some of them, so as to make the largest and the smallest results of the remaining measurements differ in no more than two times. In other words, if the remaining measurements have the smallest result x, and the largest result y, then the inequality y\u2009\u2264\u20092\u00b7x must fulfill. Of course, to avoid the teacher's suspicion, Vasya wants to remove as few measurement results as possible from his notes.Help Vasya, find what minimum number of measurement results he will have to erase from his notes so that the largest and the smallest of the remaining results of the measurements differed in no more than two times.InputThe first line contains integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of measurements Vasya made. The second line contains n integers c1,\u2009c2,\u2009...,\u2009cn (1\u2009\u2264\u2009ci\u2009\u2264\u20095000) \u2014 the results of the measurements. The numbers on the second line are separated by single spaces.OutputPrint a single integer \u2014 the minimum number of results Vasya will have to remove.ExamplesInputCopy64 5 3 8 3 7OutputCopy2InputCopy44 3 2 4OutputCopy0NoteIn the first sample you can remove the fourth and the sixth measurement results (values 8 and 7). Then the maximum of the remaining values will be 5, and the minimum one will be 3. Or else, you can remove the third and fifth results (both equal 3). After that the largest remaining result will be 8, and the smallest one will be 4."], "Bash's Big Day": ["https://codeforces.com/problemset/problem/757/B", "B. Bash's Big Daytime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputBash has set out on a journey to become the greatest Pokemon master. To get his first Pokemon, he went to Professor Zulu's Lab. Since Bash is Professor Zulu's favourite student, Zulu allows him to take as many Pokemon from his lab as he pleases.But Zulu warns him that a group of k\u2009>\u20091 Pokemon with strengths {s1,\u2009s2,\u2009s3,\u2009...,\u2009sk} tend to fight among each other if gcd(s1,\u2009s2,\u2009s3,\u2009...,\u2009sk)\u2009=\u20091 (see notes for gcd definition).Bash, being smart, does not want his Pokemon to fight among each other. However, he also wants to maximize the number of Pokemon he takes from the lab. Can you help Bash find out the maximum number of Pokemon he can take? Note: A Pokemon cannot fight with itself.InputThe input consists of two lines.The first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105), the number of Pokemon in the lab.The next line contains n space separated integers, where the i-th of them denotes si (1\u2009\u2264\u2009si\u2009\u2264\u2009105), the strength of the i-th Pokemon.OutputPrint single integer\u00a0\u2014 the maximum number of Pokemons Bash can take.ExamplesInputCopy32 3 4OutputCopy2InputCopy52 3 4 6 7OutputCopy3Notegcd (greatest common divisor) of positive integers set {a1,\u2009a2,\u2009...,\u2009an} is the maximum positive integer that divides all the integers {a1,\u2009a2,\u2009...,\u2009an}.In the first sample, we can take Pokemons with strengths {2,\u20094} since gcd(2,\u20094)\u2009=\u20092.In the second sample, we can take Pokemons with strengths {2,\u20094,\u20096}, and there is no larger group with gcd\u2009\u2260\u20091."], "Books Queries": ["https://codeforces.com/problemset/problem/1066/C", "C. Books Queriestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have got a shelf and want to put some books on it.You are given qq queries of three types:  L idid \u2014 put a book having index idid on the shelf to the left from the leftmost existing book;  R idid \u2014 put a book having index idid on the shelf to the right from the rightmost existing book;  ? idid \u2014 calculate the minimum number of books you need to pop from the left or from the right in such a way that the book with index idid will be leftmost or rightmost. You can assume that the first book you will put can have any position (it does not matter) and queries of type 33 are always valid (it is guaranteed that the book in each such query is already placed). You can also assume that you don't put the same book on the shelf twice, so idids don't repeat in queries of first two types.Your problem is to answer all the queries of type 33 in order they appear in the input.Note that after answering the query of type 33 all the books remain on the shelf and the relative order of books does not change.If you are Python programmer, consider using PyPy instead of Python when you submit your code.InputThe first line of the input contains one integer qq (1\u2264q\u22642\u22c51051\u2264q\u22642\u22c5105) \u2014 the number of queries.Then qq lines follow. The ii-th line contains the ii-th query in format as in the problem statement. It is guaranteed that queries are always valid (for query type 33, it is guaranteed that the book in each such query is already placed, and for other types, it is guaranteed that the book was not placed before).It is guaranteed that there is at least one query of type 33 in the input.In each query the constraint 1\u2264id\u22642\u22c51051\u2264id\u22642\u22c5105 is met.OutputPrint answers to queries of the type 33 in order they appear in the input.ExamplesInputCopy8L 1R 2R 3? 2L 4? 1L 5? 1OutputCopy112InputCopy10L 100R 100000R 123L 101? 123L 10R 115? 100R 110? 115OutputCopy021NoteLet's take a look at the first example and let's consider queries:   The shelf will look like [1][1];  The shelf will look like [1,2][1,2];  The shelf will look like [1,2,3][1,2,3];  The shelf looks like [1,2,3][1,2,3] so the answer is 11;  The shelf will look like [4,1,2,3][4,1,2,3];  The shelf looks like [4,1,2,3][4,1,2,3] so the answer is 11;  The shelf will look like [5,4,1,2,3][5,4,1,2,3];  The shelf looks like [5,4,1,2,3][5,4,1,2,3] so the answer is 22. Let's take a look at the second example and let's consider queries:   The shelf will look like [100][100];  The shelf will look like [100,100000][100,100000];  The shelf will look like [100,100000,123][100,100000,123];  The shelf will look like [101,100,100000,123][101,100,100000,123];  The shelf looks like [101,100,100000,123][101,100,100000,123] so the answer is 00;  The shelf will look like [10,101,100,100000,123][10,101,100,100000,123];  The shelf will look like [10,101,100,100000,123,115][10,101,100,100000,123,115];  The shelf looks like [10,101,100,100000,123,115][10,101,100,100000,123,115] so the answer is 22;  The shelf will look like [10,101,100,100000,123,115,110][10,101,100,100000,123,115,110];  The shelf looks like [10,101,100,100000,123,115,110][10,101,100,100000,123,115,110] so the answer is 11. "], "Optimal Currency Exchange": ["https://codeforces.com/problemset/problem/1214/A", "A. Optimal Currency Exchangetime limit per test1.5 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputAndrew was very excited to participate in Olympiad of Metropolises. Days flew by quickly, and Andrew is already at the airport, ready to go home. He has nn rubles left, and would like to exchange them to euro and dollar bills. Andrew can mix dollar bills and euro bills in whatever way he wants. The price of one dollar is dd rubles, and one euro costs ee rubles.Recall that there exist the following dollar bills: 11, 22, 55, 1010, 2020, 5050, 100100, and the following euro bills\u00a0\u2014 55, 1010, 2020, 5050, 100100, 200200 (note that, in this problem we do not consider the 500500 euro bill, it is hard to find such bills in the currency exchange points). Andrew can buy any combination of bills, and his goal is to minimize the total number of rubles he will have after the exchange.Help him\u00a0\u2014 write a program that given integers nn, ee and dd, finds the minimum number of rubles Andrew can get after buying dollar and euro bills.InputThe first line of the input contains one integer nn (1\u2264n\u22641081\u2264n\u2264108)\u00a0\u2014 the initial sum in rubles Andrew has. The second line of the input contains one integer dd (30\u2264d\u226410030\u2264d\u2264100)\u00a0\u2014 the price of one dollar in rubles. The third line of the input contains integer ee (30\u2264e\u226410030\u2264e\u2264100)\u00a0\u2014 the price of one euro in rubles.OutputOutput one integer\u00a0\u2014 the minimum number of rubles Andrew can have after buying dollar and euro bills optimally.ExamplesInputCopy100\n60\n70\nOutputCopy40\nInputCopy410\n55\n70\nOutputCopy5\nInputCopy600\n60\n70\nOutputCopy0\nNoteIn the first example, we can buy just 11 dollar because there is no 11 euro bill.In the second example, optimal exchange is to buy 55 euro and 11 dollar.In the third example, optimal exchange is to buy 1010 dollars in one bill."], "Valhalla Siege": ["https://codeforces.com/problemset/problem/975/C", "C. Valhalla Siegetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIvar the Boneless is a great leader. He is trying to capture Kattegat from Lagertha. The war has begun and wave after wave Ivar's warriors are falling in battle.Ivar has nn warriors, he places them on a straight line in front of the main gate, in a way that the ii-th warrior stands right after (i\u22121)(i\u22121)-th warrior. The first warrior leads the attack.Each attacker can take up to aiai arrows before he falls to the ground, where aiai is the ii-th warrior's strength.Lagertha orders her warriors to shoot kiki arrows during the ii-th minute, the arrows one by one hit the first still standing warrior. After all Ivar's warriors fall and all the currently flying arrows fly by, Thor smashes his hammer and all Ivar's warriors get their previous strengths back and stand up to fight again. In other words, if all warriors die in minute tt, they will all be standing to fight at the end of minute tt.The battle will last for qq minutes, after each minute you should tell Ivar what is the number of his standing warriors.InputThe first line contains two integers nn and qq (1\u2264n,q\u22642000001\u2264n,q\u2264200000)\u00a0\u2014 the number of warriors and the number of minutes in the battle.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) that represent the warriors' strengths.The third line contains qq integers k1,k2,\u2026,kqk1,k2,\u2026,kq (1\u2264ki\u226410141\u2264ki\u22641014), the ii-th of them represents Lagertha's order at the ii-th minute: kiki arrows will attack the warriors.OutputOutput qq lines, the ii-th of them is the number of standing warriors after the ii-th minute.ExamplesInputCopy5 51 2 1 2 13 10 1 1 1OutputCopy35443InputCopy4 41 2 3 49 1 10 6OutputCopy1441NoteIn the first example:   after the 1-st minute, the 1-st and 2-nd warriors die.  after the 2-nd minute all warriors die (and all arrows left over are wasted), then they will be revived thus answer is 5\u00a0\u2014 all warriors are alive.  after the 3-rd minute, the 1-st warrior dies.  after the 4-th minute, the 2-nd warrior takes a hit and his strength decreases by 1.  after the 5-th minute, the 2-nd warrior dies. "], "Our Tanya is Crying Out Loud": ["https://codeforces.com/problemset/problem/940/B", "B. Our Tanya is Crying Out Loudtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRight now she actually isn't. But she will be, if you don't solve this problem.You are given integers n, k, A and B. There is a number x, which is initially equal to n. You are allowed to perform two types of operations:   Subtract 1 from x. This operation costs you A coins.  Divide x by k. Can be performed only if x is divisible by k. This operation costs you B coins.  What is the minimum amount of coins you have to pay to make x equal to 1?InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7109).The second line contains a single integer k (1\u2009\u2264\u2009k\u2009\u2264\u20092\u00b7109).The third line contains a single integer A (1\u2009\u2264\u2009A\u2009\u2264\u20092\u00b7109).The fourth line contains a single integer B (1\u2009\u2264\u2009B\u2009\u2264\u20092\u00b7109).OutputOutput a single integer\u00a0\u2014 the minimum amount of coins you have to pay to make x equal to 1.ExamplesInputCopy9231OutputCopy6InputCopy55220OutputCopy8InputCopy19342OutputCopy12NoteIn the first testcase, the optimal strategy is as follows:   Subtract 1 from x (9\u2009\u2192\u20098) paying 3 coins.  Divide x by 2 (8\u2009\u2192\u20094) paying 1 coin.  Divide x by 2 (4\u2009\u2192\u20092) paying 1 coin.  Divide x by 2 (2\u2009\u2192\u20091) paying 1 coin. The total cost is 6 coins.In the second test case the optimal strategy is to subtract 1 from x 4 times paying 8 coins in total."], "Swap Adjacent Elements": ["https://codeforces.com/problemset/problem/920/C", "C. Swap Adjacent Elementstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have an array a consisting of n integers. Each integer from 1 to n appears exactly once in this array.For some indices i (1\u2009\u2264\u2009i\u2009\u2264\u2009n\u2009-\u20091) it is possible to swap i-th element with (i\u2009+\u20091)-th, for other indices it is not possible. You may perform any number of swapping operations any order. There is no limit on the number of times you swap i-th element with (i\u2009+\u20091)-th (if the position is not forbidden).Can you make this array sorted in ascending order performing some sequence of swapping operations?InputThe first line contains one integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009200000) \u2014 the number of elements in the array.The second line contains n integers a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u2009200000) \u2014 the elements of the array. Each integer from 1 to n appears exactly once.The third line contains a string of n\u2009-\u20091 characters, each character is either 0 or 1. If i-th character is 1, then you can swap i-th element with (i\u2009+\u20091)-th any number of times, otherwise it is forbidden to swap i-th element with (i\u2009+\u20091)-th.OutputIf it is possible to sort the array in ascending order using any sequence of swaps you are allowed to make, print YES. Otherwise, print NO.ExamplesInputCopy61 2 5 3 4 601110OutputCopyYESInputCopy61 2 5 3 4 601010OutputCopyNONoteIn the first example you may swap a3 and a4, and then swap a4 and a5."], "Bus Video System": ["https://codeforces.com/problemset/problem/978/E", "E. Bus Video Systemtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe busses in Berland are equipped with a video surveillance system. The system records information about changes in the number of passengers in a bus after stops.If xx is the number of passengers in a bus just before the current bus stop and yy is the number of passengers in the bus just after current bus stop, the system records the number y\u2212xy\u2212x. So the system records show how number of passengers changed.The test run was made for single bus and nn bus stops. Thus, the system recorded the sequence of integers a1,a2,\u2026,ana1,a2,\u2026,an (exactly one number for each bus stop), where aiai is the record for the bus stop ii. The bus stops are numbered from 11 to nn in chronological order.Determine the number of possible ways how many people could be in the bus before the first bus stop, if the bus has a capacity equals to ww (that is, at any time in the bus there should be from 00 to ww passengers inclusive).InputThe first line contains two integers nn and ww (1\u2264n\u22641000,1\u2264w\u2264109)(1\u2264n\u22641000,1\u2264w\u2264109) \u2014 the number of bus stops and the capacity of the bus.The second line contains a sequence a1,a2,\u2026,ana1,a2,\u2026,an (\u2212106\u2264ai\u2264106)(\u2212106\u2264ai\u2264106), where aiai equals to the number, which has been recorded by the video system after the ii-th bus stop.OutputPrint the number of possible ways how many people could be in the bus before the first bus stop, if the bus has a capacity equals to ww. If the situation is contradictory (i.e. for any initial number of passengers there will be a contradiction), print 0.ExamplesInputCopy3 52 1 -3OutputCopy3InputCopy2 4-1 1OutputCopy4InputCopy4 102 4 1 2OutputCopy2NoteIn the first example initially in the bus could be 00, 11 or 22 passengers.In the second example initially in the bus could be 11, 22, 33 or 44 passengers.In the third example initially in the bus could be 00 or 11 passenger."], "Chris and Magic Square": ["https://codeforces.com/problemset/problem/711/B", "B. Chris and Magic Squaretime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputZS the Coder and Chris the Baboon arrived at the entrance of Udayland. There is a n\u2009\u00d7\u2009n magic grid on the entrance which is filled with integers. Chris noticed that exactly one of the cells in the grid is empty, and to enter Udayland, they need to fill a positive integer into the empty cell.Chris tried filling in random numbers but it didn't work. ZS the Coder realizes that they need to fill in a positive integer such that the numbers in the grid form a magic square. This means that he has to fill in a positive integer so that the sum of the numbers in each row of the grid (), each column of the grid (), and the two long diagonals of the grid (the main diagonal\u00a0\u2014  and the secondary diagonal\u00a0\u2014 ) are equal. Chris doesn't know what number to fill in. Can you help Chris find the correct positive integer to fill in or determine that it is impossible?InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009500)\u00a0\u2014 the number of rows and columns of the magic grid.n lines follow, each of them contains n integers. The j-th number in the i-th of them denotes ai,\u2009j (1\u2009\u2264\u2009ai,\u2009j\u2009\u2264\u2009109 or ai,\u2009j\u2009=\u20090), the number in the i-th row and j-th column of the magic grid. If the corresponding cell is empty, ai,\u2009j will be equal to 0. Otherwise, ai,\u2009j is positive.It is guaranteed that there is exactly one pair of integers i,\u2009j (1\u2009\u2264\u2009i,\u2009j\u2009\u2264\u2009n) such that ai,\u2009j\u2009=\u20090.OutputOutput a single integer, the positive integer x (1\u2009\u2264\u2009x\u2009\u2264\u20091018) that should be filled in the empty cell so that the whole grid becomes a magic square. If such positive integer x does not exist, output \u2009-\u20091 instead.If there are multiple solutions, you may print any of them.ExamplesInputCopy34 0 23 5 78 1 6OutputCopy9InputCopy41 1 1 11 1 0 11 1 1 11 1 1 1OutputCopy1InputCopy41 1 1 11 1 0 11 1 2 11 1 1 1OutputCopy-1NoteIn the first sample case, we can fill in 9 into the empty cell to make the resulting grid a magic square. Indeed, The sum of numbers in each row is:4\u2009+\u20099\u2009+\u20092\u2009=\u20093\u2009+\u20095\u2009+\u20097\u2009=\u20098\u2009+\u20091\u2009+\u20096\u2009=\u200915.The sum of numbers in each column is:4\u2009+\u20093\u2009+\u20098\u2009=\u20099\u2009+\u20095\u2009+\u20091\u2009=\u20092\u2009+\u20097\u2009+\u20096\u2009=\u200915.The sum of numbers in the two diagonals is:4\u2009+\u20095\u2009+\u20096\u2009=\u20092\u2009+\u20095\u2009+\u20098\u2009=\u200915.In the third sample case, it is impossible to fill a number in the empty square such that the resulting grid is a magic square."], "Sonya and Queries": ["https://codeforces.com/problemset/problem/713/A", "A. Sonya and Queriestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputToday Sonya learned about long integers and invited all her friends to share the fun. Sonya has an initially empty multiset with integers. Friends give her t queries, each of one of the following type:  \u2009+\u2009 ai\u00a0\u2014 add non-negative integer ai to the multiset. Note, that she has a multiset, thus there may be many occurrences of the same integer.  \u2009-\u2009 ai\u00a0\u2014 delete a single occurrence of non-negative integer ai from the multiset. It's guaranteed, that there is at least one ai in the multiset.  ? s\u00a0\u2014 count the number of integers in the multiset (with repetitions) that match some pattern s consisting of 0 and 1. In the pattern, 0 stands for the even digits, while 1 stands for the odd. Integer x matches the pattern s, if the parity of the i-th from the right digit in decimal notation matches the i-th from the right digit of the pattern. If the pattern is shorter than this integer, it's supplemented with 0-s from the left. Similarly, if the integer is shorter than the pattern its decimal notation is supplemented with the 0-s from the left. For example, if the pattern is s\u2009=\u2009010, than integers 92, 2212, 50 and 414 match the pattern, while integers 3, 110, 25 and 1030 do not.InputThe first line of the input contains an integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of operation Sonya has to perform.Next t lines provide the descriptions of the queries in order they appear in the input file. The i-th row starts with a character ci\u00a0\u2014 the type of the corresponding operation. If ci is equal to '+' or '-' then it's followed by a space and an integer ai (0\u2009\u2264\u2009ai\u2009<\u20091018) given without leading zeroes (unless it's 0). If ci equals '?' then it's followed by a space and a sequence of zeroes and onse, giving the pattern of length no more than 18.It's guaranteed that there will be at least one query of type '?'.It's guaranteed that any time some integer is removed from the multiset, there will be at least one occurrence of this integer in it.OutputFor each query of the third type print the number of integers matching the given pattern. Each integer is counted as many times, as it appears in the multiset at this moment of time.ExamplesInputCopy12+ 1+ 241? 1+ 361- 241? 0101+ 101? 101- 101? 101+ 4000? 0OutputCopy21211InputCopy4+ 200+ 200- 200? 0OutputCopy1NoteConsider the integers matching the patterns from the queries of the third type. Queries are numbered in the order they appear in the input.   1 and 241.  361.  101 and 361.  361.  4000. "], "Routine Problem": ["https://codeforces.com/problemset/problem/337/B", "B. Routine Problemtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputManao has a monitor. The screen of the monitor has horizontal to vertical length ratio a:b. Now he is going to watch a movie. The movie's frame has horizontal to vertical length ratio c:d. Manao adjusts the view in such a way that the movie preserves the original frame ratio, but also occupies as much space on the screen as possible and fits within it completely. Thus, he may have to zoom the movie in or out, but Manao will always change the frame proportionally in both dimensions.Calculate the ratio of empty screen (the part of the screen not occupied by the movie) to the total screen size. Print the answer as an irreducible fraction p\u2009/\u2009q.InputA single line contains four space-separated integers a, b, c, d (1\u2009\u2264\u2009a,\u2009b,\u2009c,\u2009d\u2009\u2264\u20091000).OutputPrint the answer to the problem as \"p/q\", where p is a non-negative integer, q is a positive integer and numbers p and q don't have a common divisor larger than 1.ExamplesInputCopy1 1 3 2OutputCopy1/3InputCopy4 3 2 2OutputCopy1/4NoteSample 1. Manao's monitor has a square screen. The movie has 3:2 horizontal to vertical length ratio. Obviously, the movie occupies most of the screen if the width of the picture coincides with the width of the screen. In this case, only 2/3 of the monitor will project the movie in the horizontal dimension: Sample 2. This time the monitor's width is 4/3 times larger than its height and the movie's frame is square. In this case, the picture must take up the whole monitor in the vertical dimension and only 3/4 in the horizontal dimension: "], "Anatoly and Cockroaches": ["https://codeforces.com/problemset/problem/719/B", "B. Anatoly and Cockroachestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnatoly lives in the university dorm as many other students do. As you know, cockroaches are also living there together with students. Cockroaches might be of two colors: black and red. There are n cockroaches living in Anatoly's room.Anatoly just made all his cockroaches to form a single line. As he is a perfectionist, he would like the colors of cockroaches in the line to alternate. He has a can of black paint and a can of red paint. In one turn he can either swap any two cockroaches, or take any single cockroach and change it's color.Help Anatoly find out the minimum number of turns he needs to make the colors of cockroaches in the line alternate.InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of cockroaches.The second line contains a string of length n, consisting of characters 'b' and 'r' that denote black cockroach and red cockroach respectively.OutputPrint one integer\u00a0\u2014 the minimum number of moves Anatoly has to perform in order to make the colors of cockroaches in the line to alternate.ExamplesInputCopy5rbbrrOutputCopy1InputCopy5bbbbbOutputCopy2InputCopy3rbrOutputCopy0NoteIn the first sample, Anatoly has to swap third and fourth cockroaches. He needs 1 turn to do this.In the second sample, the optimum answer is to paint the second and the fourth cockroaches red. This requires 2 turns.In the third sample, the colors of cockroaches in the line are alternating already, thus the answer is 0."], "Optimal Point on a Line": ["https://codeforces.com/problemset/problem/710/B", "B. Optimal Point on a Linetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given n points on a line with their coordinates xi. Find the point x so the sum of distances to the given points is minimal.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105) \u2014 the number of points on the line.The second line contains n integers xi (\u2009-\u2009109\u2009\u2264\u2009xi\u2009\u2264\u2009109) \u2014 the coordinates of the given n points.OutputPrint the only integer x \u2014 the position of the optimal point on the line. If there are several optimal points print the position of the leftmost one. It is guaranteed that the answer is always the integer.ExampleInputCopy41 2 3 4OutputCopy2"], "More Cowbell": ["https://codeforces.com/problemset/problem/604/B", "B. More Cowbelltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputKevin Sun wants to move his precious collection of n cowbells from Naperthrill to Exeter, where there is actually grass instead of corn. Before moving, he must pack his cowbells into k boxes of a fixed size. In order to keep his collection safe during transportation, he won't place more than two cowbells into a single box. Since Kevin wishes to minimize expenses, he is curious about the smallest size box he can use to pack his entire collection. Kevin is a meticulous cowbell collector and knows that the size of his i-th (1\u2009\u2264\u2009i\u2009\u2264\u2009n) cowbell is an integer si. In fact, he keeps his cowbells sorted by size, so si\u2009-\u20091\u2009\u2264\u2009si for any i\u2009>\u20091. Also an expert packer, Kevin can fit one or two cowbells into a box of size s if and only if the sum of their sizes does not exceed s. Given this information, help Kevin determine the smallest s for which it is possible to put all of his cowbells into k boxes of size s.InputThe first line of the input contains two space-separated integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7k\u2009\u2264\u2009100\u2009000), denoting the number of cowbells and the number of boxes, respectively.The next line contains n space-separated integers s1,\u2009s2,\u2009...,\u2009sn (1\u2009\u2264\u2009s1\u2009\u2264\u2009s2\u2009\u2264\u2009...\u2009\u2264\u2009sn\u2009\u2264\u20091\u2009000\u2009000), the sizes of Kevin's cowbells. It is guaranteed that the sizes si are given in non-decreasing order.OutputPrint a single integer, the smallest s for which it is possible for Kevin to put all of his cowbells into k boxes of size s.ExamplesInputCopy2 12 5OutputCopy7InputCopy4 32 3 5 9OutputCopy9InputCopy3 23 5 7OutputCopy8NoteIn the first sample, Kevin must pack his two cowbells into the same box. In the second sample, Kevin can pack together the following sets of cowbells: {2,\u20093}, {5} and {9}.In the third sample, the optimal solution is {3,\u20095} and {7}."], "Complex Market Analysis": ["https://codeforces.com/problemset/problem/1609/C", "C. Complex Market Analysistime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output  While performing complex market analysis William encountered the following problem:For a given array aa of size nn and a natural number ee, calculate the number of pairs of natural numbers (i,k)(i,k) which satisfy the following conditions:   1\u2264i,k1\u2264i,k  i+e\u22c5k\u2264ni+e\u22c5k\u2264n.  Product ai\u22c5ai+e\u22c5ai+2\u22c5e\u22c5\u2026\u22c5ai+k\u22c5eai\u22c5ai+e\u22c5ai+2\u22c5e\u22c5\u2026\u22c5ai+k\u22c5e is a prime number. A prime number (or a prime) is a natural number greater than 1 that is not a product of two smaller natural numbers.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u2264100001\u2264t\u226410000). Description of the test cases follows.The first line of each test case contains two integers nn and ee (1\u2264e\u2264n\u22642\u22c5105)(1\u2264e\u2264n\u22642\u22c5105), the number of items in the array and number ee, respectively.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264106)(1\u2264ai\u2264106), the contents of the array.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case output the answer in the following format:Output one line containing the number of pairs of numbers (i,k)(i,k) which satisfy the conditions.ExampleInputCopy6\n7 3\n10 2 1 3 1 19 3\n3 2\n1 13 1\n9 3\n2 4 2 1 1 1 1 4 2\n3 1\n1 1 1\n4 1\n1 2 1 1\n2 2\n1 2\nOutputCopy2\n0\n4\n0\n5\n0\nNoteIn the first example test case two pairs satisfy the conditions:   i=2,k=1i=2,k=1, for which the product is: a2\u22c5a5=2a2\u22c5a5=2 which is a prime number.  i=3,k=1i=3,k=1, for which the product is: a3\u22c5a6=19a3\u22c5a6=19 which is a prime number. In the second example test case there are no pairs that satisfy the conditions.In the third example test case four pairs satisfy the conditions:   i=1,k=1i=1,k=1, for which the product is: a1\u22c5a4=2a1\u22c5a4=2 which is a prime number.  i=1,k=2i=1,k=2, for which the product is: a1\u22c5a4\u22c5a7=2a1\u22c5a4\u22c5a7=2 which is a prime number.  i=3,k=1i=3,k=1, for which the product is: a3\u22c5a6=2a3\u22c5a6=2 which is a prime number.  i=6,k=1i=6,k=1, for which the product is: a6\u22c5a9=2a6\u22c5a9=2 which is a prime number. In the fourth example test case there are no pairs that satisfy the conditions.In the fifth example test case five pairs satisfy the conditions:   i=1,k=1i=1,k=1, for which the product is: a1\u22c5a2=2a1\u22c5a2=2 which is a prime number.  i=1,k=2i=1,k=2, for which the product is: a1\u22c5a2\u22c5a3=2a1\u22c5a2\u22c5a3=2 which is a prime number.  i=1,k=3i=1,k=3, for which the product is: a1\u22c5a2\u22c5a3\u22c5a4=2a1\u22c5a2\u22c5a3\u22c5a4=2 which is a prime number.  i=2,k=1i=2,k=1, for which the product is: a2\u22c5a3=2a2\u22c5a3=2 which is a prime number.  i=2,k=2i=2,k=2, for which the product is: a2\u22c5a3\u22c5a4=2a2\u22c5a3\u22c5a4=2 which is a prime number. In the sixth example test case there are no pairs that satisfy the conditions."], "Mike and Fun": ["https://codeforces.com/problemset/problem/548/B", "B. Mike and Funtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMike and some bears are playing a game just for fun. Mike is the judge. All bears except Mike are standing in an n\u2009\u00d7\u2009m grid, there's exactly one bear in each cell. We denote the bear standing in column number j of row number i by (i,\u2009j). Mike's hands are on his ears (since he's the judge) and each bear standing in the grid has hands either on his mouth or his eyes.  They play for q rounds. In each round, Mike chooses a bear (i,\u2009j) and tells him to change his state i. e. if his hands are on his mouth, then he'll put his hands on his eyes or he'll put his hands on his mouth otherwise. After that, Mike wants to know the score of the bears.Score of the bears is the maximum over all rows of number of consecutive bears with hands on their eyes in that row.Since bears are lazy, Mike asked you for help. For each round, tell him the score of these bears after changing the state of a bear selected in that round. InputThe first line of input contains three integers n, m and q (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009500 and 1\u2009\u2264\u2009q\u2009\u2264\u20095000).The next n lines contain the grid description. There are m integers separated by spaces in each line. Each of these numbers is either 0 (for mouth) or 1 (for eyes).The next q lines contain the information about the rounds. Each of them contains two integers i and j (1\u2009\u2264\u2009i\u2009\u2264\u2009n and 1\u2009\u2264\u2009j\u2009\u2264\u2009m), the row number and the column number of the bear changing his state.OutputAfter each round, print the current score of the bears.ExamplesInputCopy5 4 50 1 1 01 0 0 10 1 1 01 0 0 10 0 0 01 11 41 14 24 3OutputCopy34334"], "Guess a number!": ["https://codeforces.com/problemset/problem/416/A", "A. Guess a number!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA TV show called \"Guess a number!\" is gathering popularity. The whole Berland, the old and the young, are watching the show.The rules are simple. The host thinks of an integer y and the participants guess it by asking questions to the host. There are four types of acceptable questions:  Is it true that y is strictly larger than number x?  Is it true that y is strictly smaller than number x?  Is it true that y is larger than or equal to number x?  Is it true that y is smaller than or equal to number x? On each question the host answers truthfully, \"yes\" or \"no\".Given the sequence of questions and answers, find any integer value of y that meets the criteria of all answers. If there isn't such value, print \"Impossible\".InputThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200910000) \u2014 the number of questions (and answers). Next n lines each contain one question and one answer to it. The format of each line is like that: \"sign x answer\", where the sign is:  \">\" (for the first type queries),  \"<\" (for the second type queries),  \">=\" (for the third type queries),  \"<=\" (for the fourth type queries). All values of x are integer and meet the inequation \u2009-\u2009109\u2009\u2264\u2009x\u2009\u2264\u2009109. The answer is an English letter \"Y\" (for \"yes\") or \"N\" (for \"no\").Consequtive elements in lines are separated by a single space.OutputPrint any of such integers y, that the answers to all the queries are correct. The printed number y must meet the inequation \u2009-\u20092\u00b7109\u2009\u2264\u2009y\u2009\u2264\u20092\u00b7109. If there are many answers, print any of them. If such value doesn't exist, print word \"Impossible\" (without the quotes).ExamplesInputCopy4>= 1 Y< 3 N<= -3 N> 55 NOutputCopy17InputCopy2> 100 Y< -100 YOutputCopyImpossible"], "Yuhao and a Parenthesis": ["https://codeforces.com/problemset/problem/1097/C", "C. Yuhao and a Parenthesistime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day, Yuhao came across a problem about checking if some bracket sequences are correct bracket sequences.A bracket sequence is any non-empty sequence of opening and closing parentheses. A bracket sequence is called a correct bracket sequence if it's possible to obtain a correct arithmetic expression by inserting characters \"+\" and \"1\" into this sequence. For example, the sequences \"(())()\", \"()\" and \"(()(()))\" are correct, while the bracket sequences \")(\", \"(()\" and \"(()))(\" are not correct.Yuhao found this problem too simple for him so he decided to make the problem harder. You are given many (not necessarily correct) bracket sequences. The task is to connect some of them into ordered pairs so that each bracket sequence occurs in at most one pair and the concatenation of the bracket sequences in each pair is a correct bracket sequence. The goal is to create as many pairs as possible.This problem unfortunately turned out to be too difficult for Yuhao. Can you help him and solve it?InputThe first line contains one integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 the number of bracket sequences.Each of the following nn lines contains one bracket sequence \u2014 a non-empty string which consists only of characters \"(\" and \")\".The sum of lengths of all bracket sequences in the input is at most 5\u22c51055\u22c5105.Note that a bracket sequence may appear in the input multiple times. In this case, you can use each copy of the sequence separately. Also note that the order in which strings appear in the input doesn't matter.OutputPrint a single integer \u2014 the maximum number of pairs which can be made, adhering to the conditions in the statement.ExamplesInputCopy7\n)())\n)\n((\n((\n(\n)\n)\nOutputCopy2\nInputCopy4\n(\n((\n(((\n(())\nOutputCopy0\nInputCopy2\n(())\n()\nOutputCopy1\nNoteIn the first example, it's optimal to construct two pairs: \"(( \u00a0\u00a0\u00a0 )())\" and \"( \u00a0\u00a0\u00a0 )\"."], "Ehab and a 2-operation task": ["https://codeforces.com/problemset/problem/1088/C", "C. Ehab and a 2-operation tasktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're given an array aa of length nn. You can perform the following operations on it:  choose an index ii (1\u2264i\u2264n)(1\u2264i\u2264n), an integer xx (0\u2264x\u2264106)(0\u2264x\u2264106), and replace ajaj with aj+xaj+x for all (1\u2264j\u2264i)(1\u2264j\u2264i), which means add xx to all the elements in the prefix ending at ii.  choose an index ii (1\u2264i\u2264n)(1\u2264i\u2264n), an integer xx (1\u2264x\u2264106)(1\u2264x\u2264106), and replace ajaj with aj%xaj%x for all (1\u2264j\u2264i)(1\u2264j\u2264i), which means replace every element in the prefix ending at ii with the remainder after dividing it by xx. Can you make the array strictly increasing in no more than n+1n+1 operations?InputThe first line contains an integer nn (1\u2264n\u22642000)(1\u2264n\u22642000), the number of elements in the array aa.The second line contains nn space-separated integers a1a1, a2a2, \u2026\u2026, anan (0\u2264ai\u2264105)(0\u2264ai\u2264105), the elements of the array aa.OutputOn the first line, print the number of operations you wish to perform. On the next lines, you should print the operations.To print an adding operation, use the format \"11 ii xx\"; to print a modding operation, use the format \"22 ii xx\". If ii or xx don't satisfy the limitations above, or you use more than n+1n+1 operations, you'll get wrong answer verdict.ExamplesInputCopy31 2 3OutputCopy0InputCopy37 6 3OutputCopy21 1 12 2 4NoteIn the first sample, the array is already increasing so we don't need any operations.In the second sample:In the first step: the array becomes [8,6,3][8,6,3].In the second step: the array becomes [0,2,3][0,2,3]."], "Factory": ["https://codeforces.com/problemset/problem/485/A", "A. Factorytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne industrial factory is reforming working plan. The director suggested to set a mythical detail production norm. If at the beginning of the day there were x details in the factory storage, then by the end of the day the factory has to produce  (remainder after dividing x by m) more details. Unfortunately, no customer has ever bought any mythical detail, so all the details produced stay on the factory. The board of directors are worried that the production by the given plan may eventually stop (that means that there will be \u0430 moment when the current number of details on the factory is divisible by m). Given the number of details a on the first day and number m check if the production stops at some moment.InputThe first line contains two integers a and m (1\u2009\u2264\u2009a,\u2009m\u2009\u2264\u2009105).OutputPrint \"Yes\" (without quotes) if the production will eventually stop, otherwise print \"No\".ExamplesInputCopy1 5OutputCopyNoInputCopy3 6OutputCopyYes"], "Connect": ["https://codeforces.com/problemset/problem/1130/C", "C. Connecttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice lives on a flat planet that can be modeled as a square grid of size n\u00d7nn\u00d7n, with rows and columns enumerated from 11 to nn. We represent the cell at the intersection of row rr and column cc with ordered pair (r,c)(r,c). Each cell in the grid is either land or water.  An example planet with n=5n=5. It also appears in the first sample test. Alice resides in land cell (r1,c1)(r1,c1). She wishes to travel to land cell (r2,c2)(r2,c2). At any moment, she may move to one of the cells adjacent to where she is\u2014in one of the four directions (i.e., up, down, left, or right).Unfortunately, Alice cannot swim, and there is no viable transportation means other than by foot (i.e., she can walk only on land). As a result, Alice's trip may be impossible.To help Alice, you plan to create at most one tunnel between some two land cells. The tunnel will allow Alice to freely travel between the two endpoints. Indeed, creating a tunnel is a lot of effort: the cost of creating a tunnel between cells (rs,cs)(rs,cs) and (rt,ct)(rt,ct) is (rs\u2212rt)2+(cs\u2212ct)2(rs\u2212rt)2+(cs\u2212ct)2.For now, your task is to find the minimum possible cost of creating at most one tunnel so that Alice could travel from (r1,c1)(r1,c1) to (r2,c2)(r2,c2). If no tunnel needs to be created, the cost is 00.InputThe first line contains one integer nn (1\u2264n\u2264501\u2264n\u226450) \u2014 the width of the square grid.The second line contains two space-separated integers r1r1 and c1c1 (1\u2264r1,c1\u2264n1\u2264r1,c1\u2264n) \u2014 denoting the cell where Alice resides.The third line contains two space-separated integers r2r2 and c2c2 (1\u2264r2,c2\u2264n1\u2264r2,c2\u2264n) \u2014 denoting the cell to which Alice wishes to travel.Each of the following nn lines contains a string of nn characters. The jj-th character of the ii-th such line (1\u2264i,j\u2264n1\u2264i,j\u2264n) is 0 if (i,j)(i,j) is land or 1 if (i,j)(i,j) is water.It is guaranteed that (r1,c1)(r1,c1) and (r2,c2)(r2,c2) are land.OutputPrint an integer that is the minimum possible cost of creating at most one tunnel so that Alice could travel from (r1,c1)(r1,c1) to (r2,c2)(r2,c2).ExamplesInputCopy5\n1 1\n5 5\n00001\n11111\n00111\n00110\n00110\nOutputCopy10\nInputCopy3\n1 3\n3 1\n010\n101\n010\nOutputCopy8\nNoteIn the first sample, a tunnel between cells (1,4)(1,4) and (4,5)(4,5) should be created. The cost of doing so is (1\u22124)2+(4\u22125)2=10(1\u22124)2+(4\u22125)2=10, which is optimal. This way, Alice could walk from (1,1)(1,1) to (1,4)(1,4), use the tunnel from (1,4)(1,4) to (4,5)(4,5), and lastly walk from (4,5)(4,5) to (5,5)(5,5).In the second sample, clearly a tunnel between cells (1,3)(1,3) and (3,1)(3,1) needs to be created. The cost of doing so is (1\u22123)2+(3\u22121)2=8(1\u22123)2+(3\u22121)2=8."], "Strongly Connected City": ["https://codeforces.com/problemset/problem/475/B", "B. Strongly Connected Citytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputImagine a city with n horizontal streets crossing m vertical streets, forming an (n\u2009-\u20091)\u2009\u00d7\u2009(m\u2009-\u20091) grid. In order to increase the traffic flow, mayor of the city has decided to make each street one way. This means in each horizontal street, the traffic moves only from west to east or only from east to west. Also, traffic moves only from north to south or only from south to north in each vertical street. It is possible to enter a horizontal street from a vertical street, or vice versa, at their intersection.  The mayor has received some street direction patterns. Your task is to check whether it is possible to reach any junction from any other junction in the proposed street direction pattern.InputThe first line of input contains two integers n and m, (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200920), denoting the number of horizontal streets and the number of vertical streets.The second line contains a string of length n, made of characters '<' and '>', denoting direction of each horizontal street. If the i-th character is equal to '<', the street is directed from east to west otherwise, the street is directed from west to east. Streets are listed in order from north to south.The third line contains a string of length m, made of characters '^' and 'v', denoting direction of each vertical street. If the i-th character is equal to '^', the street is directed from south to north, otherwise the street is directed from north to south. Streets are listed in order from west to east.OutputIf the given pattern meets the mayor's criteria, print a single line containing \"YES\", otherwise print a single line containing \"NO\".ExamplesInputCopy3 3><>v^vOutputCopyNOInputCopy4 6<><>v^v^v^OutputCopyYESNoteThe figure above shows street directions in the second sample test case."], "Cd and pwd commands": ["https://codeforces.com/problemset/problem/158/C", "C. Cd and pwd commandstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya is writing an operating system shell, and it should have commands for working with directories. To begin with, he decided to go with just two commands: cd (change the current directory) and pwd (display the current directory).Directories in Vasya's operating system form a traditional hierarchical tree structure. There is a single root directory, denoted by the slash character \"/\". Every other directory has a name \u2014 a non-empty string consisting of lowercase Latin letters. Each directory (except for the root) has a parent directory \u2014 the one that contains the given directory. It is denoted as \"..\".The command cd takes a single parameter, which is a path in the file system. The command changes the current directory to the directory specified by the path. The path consists of the names of directories separated by slashes. The name of the directory can be \"..\", which means a step up to the parent directory. \u00ab..\u00bb can be used in any place of the path, maybe several times. If the path begins with a slash, it is considered to be an absolute path, that is, the directory changes to the specified one, starting from the root. If the parameter begins with a directory name (or \"..\"), it is considered to be a relative path, that is, the directory changes to the specified directory, starting from the current one.The command pwd should display the absolute path to the current directory. This path must not contain \"..\".Initially, the current directory is the root. All directories mentioned explicitly or passed indirectly within any command cd are considered to exist. It is guaranteed that there is no attempt of transition to the parent directory of the root directory.InputThe first line of the input data contains the single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950) \u2014 the number of commands.Then follow n lines, each contains one command. Each of these lines contains either command pwd, or command cd, followed by a space-separated non-empty parameter.The command parameter cd only contains lower case Latin letters, slashes and dots, two slashes cannot go consecutively, dots occur only as the name of a parent pseudo-directory. The command parameter cd does not end with a slash, except when it is the only symbol that points to the root directory. The command parameter has a length from 1 to 200 characters, inclusive.Directories in the file system can have the same names.OutputFor each command pwd you should print the full absolute path of the given directory, ending with a slash. It should start with a slash and contain the list of slash-separated directories in the order of being nested from the root to the current folder. It should contain no dots.ExamplesInputCopy7pwdcd /home/vasyapwdcd ..pwdcd vasya/../petyapwdOutputCopy//home/vasya//home//home/petya/InputCopy4cd /a/bpwdcd ../a/bpwdOutputCopy/a/b//a/a/b/"], "Skier": ["https://codeforces.com/problemset/problem/1351/C", "C. Skiertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSkier rides on a snowy field. Its movements can be described by a string of characters 'S', 'N', 'W', 'E' (which correspond to 11 meter movement in the south, north, west or east direction respectively).It is known that if he moves along a previously unvisited segment of a path (i.e. this segment of the path is visited the first time), then the time of such movement is 55 seconds. If he rolls along previously visited segment of a path (i.e., this segment of the path has been covered by his path before), then it takes 11 second.Find the skier's time to roll all the path.InputThe first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of test cases in the input. Then tt test cases follow.Each set is given by one nonempty string of the characters 'S', 'N', 'W', 'E'. The length of the string does not exceed 105105 characters.The sum of the lengths of tt given lines over all test cases in the input does not exceed 105105.OutputFor each test case, print the desired path time in seconds.ExampleInputCopy5\nNNN\nNS\nWWEN\nWWEE\nNWNWS\nOutputCopy15\n6\n16\n12\n25\n"], "Inscribed Figures": ["https://codeforces.com/problemset/problem/1156/A", "A. Inscribed Figurestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe math faculty of Berland State University has suffered the sudden drop in the math skills of enrolling students. This year the highest grade on the entrance math test was 8. Out of 100! Thus, the decision was made to make the test easier.Future students will be asked just a single question. They are given a sequence of integer numbers a1,a2,\u2026,ana1,a2,\u2026,an, each number is from 11 to 33 and ai\u2260ai+1ai\u2260ai+1 for each valid ii. The ii-th number represents a type of the ii-th figure:  circle;  isosceles triangle with the length of height equal to the length of base;  square. The figures of the given sequence are placed somewhere on a Cartesian plane in such a way that:  (i+1)(i+1)-th figure is inscribed into the ii-th one;  each triangle base is parallel to OX;  the triangle is oriented in such a way that the vertex opposite to its base is at the top;  each square sides are parallel to the axes;  for each ii from 22 to nn figure ii has the maximum possible length of side for triangle and square and maximum radius for circle. Note that the construction is unique for some fixed position and size of just the first figure.The task is to calculate the number of distinct points (not necessarily with integer coordinates) where figures touch. The trick is, however, that the number is sometimes infinite. But that won't make the task difficult for you, will it?So can you pass the math test and enroll into Berland State University?InputThe first line contains a single integer nn (2\u2264n\u22641002\u2264n\u2264100) \u2014 the number of figures.The second line contains nn integer numbers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u226431\u2264ai\u22643, ai\u2260ai+1ai\u2260ai+1) \u2014 types of the figures.OutputThe first line should contain either the word \"Infinite\" if the number of distinct points where figures touch is infinite or \"Finite\" otherwise.If the number is finite than print it in the second line. It's guaranteed that the number fits into 32-bit integer type.ExamplesInputCopy3\n2 1 3\nOutputCopyFinite\n7\nInputCopy3\n1 2 3\nOutputCopyInfinite\nNoteHere are the glorious pictures for the examples. Note that the triangle is not equilateral but just isosceles with the length of height equal to the length of base. Thus it fits into a square in a unique way.The distinct points where figures touch are marked red.In the second example the triangle and the square touch each other for the whole segment, it contains infinite number of points.  "], "Plug-in": ["https://codeforces.com/problemset/problem/81/A", "A. Plug-intime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp thinks about the meaning of life very often. He does this constantly, even when typing in the editor. Every time he starts brooding he can no longer fully concentrate and repeatedly presses the keys that need to be pressed only once. For example, instead of the phrase \"how are you\" he can type \"hhoow aaaare yyoouu\". Polycarp decided to automate the process of correcting such errors. He decided to write a plug-in to the text editor that will remove pairs of identical consecutive letters (if there are any in the text). Of course, this is not exactly what Polycarp needs, but he's got to start from something! Help Polycarp and write the main plug-in module. Your program should remove from a string all pairs of identical letters, which are consecutive. If after the removal there appear new pairs, the program should remove them as well. Technically, its work should be equivalent to the following: while the string contains a pair of consecutive identical letters, the pair should be deleted. Note that deleting of the consecutive identical letters can be done in any order, as any order leads to the same result. InputThe input data consists of a single line to be processed. The length of the line is from 1 to 2\u00b7105 characters inclusive. The string contains only lowercase Latin letters. OutputPrint the given string after it is processed. It is guaranteed that the result will contain at least one character.ExamplesInputCopyhhoowaaaareyyoouuOutputCopywreInputCopyreallazyOutputCopyrezyInputCopyabacabaabacabaaOutputCopya"], "Flag Day": ["https://codeforces.com/problemset/problem/357/B", "B. Flag Daytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn Berland, there is the national holiday coming \u2014 the Flag Day. In the honor of this event the president of the country decided to make a big dance party and asked your agency to organize it. He has several conditions:  overall, there must be m dances; exactly three people must take part in each dance; each dance must have one dancer in white clothes, one dancer in red clothes and one dancer in blue clothes (these are the colors of the national flag of Berland). The agency has n dancers, and their number can be less than 3m. That is, some dancers will probably have to dance in more than one dance. All of your dancers must dance on the party. However, if some dance has two or more dancers from a previous dance, then the current dance stops being spectacular. Your agency cannot allow that to happen, so each dance has at most one dancer who has danced in some previous dance. You considered all the criteria and made the plan for the m dances: each dance had three dancers participating in it. Your task is to determine the clothes color for each of the n dancers so that the President's third condition fulfilled: each dance must have a dancer in white, a dancer in red and a dancer in blue. The dancers cannot change clothes between the dances.InputThe first line contains two space-separated integers n (3\u2009\u2264\u2009n\u2009\u2264\u2009105) and m (1\u2009\u2264\u2009m\u2009\u2264\u2009105) \u2014 the number of dancers and the number of dances, correspondingly. Then m lines follow, describing the dances in the order of dancing them. The i-th line contains three distinct integers \u2014 the numbers of the dancers that take part in the i-th dance. The dancers are numbered from 1 to n. Each dancer takes part in at least one dance.OutputPrint n space-separated integers: the i-th number must represent the color of the i-th dancer's clothes (1 for white, 2 for red, 3 for blue). If there are multiple valid solutions, print any of them. It is guaranteed that at least one solution exists.ExamplesInputCopy7 31 2 31 4 54 6 7OutputCopy1 2 3 3 2 2 1 InputCopy9 33 6 92 5 81 4 7OutputCopy1 1 1 2 2 2 3 3 3 InputCopy5 24 1 53 1 2OutputCopy2 3 1 1 3 "], "Make a Square": ["https://codeforces.com/problemset/problem/962/C", "C. Make a Squaretime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a positive integer nn, written without leading zeroes (for example, the number 04 is incorrect). In one operation you can delete any digit of the given integer so that the result remains a positive integer without leading zeros.Determine the minimum number of operations that you need to consistently apply to the given integer nn to make from it the square of some positive integer or report that it is impossible.An integer xx is the square of some positive integer if and only if x=y2x=y2 for some positive integer yy.InputThe first line contains a single integer nn (1\u2264n\u22642\u22c51091\u2264n\u22642\u22c5109). The number is given without leading zeroes.OutputIf it is impossible to make the square of some positive integer from nn, print -1. In the other case, print the minimal number of operations required to do it.ExamplesInputCopy8314OutputCopy2InputCopy625OutputCopy0InputCopy333OutputCopy-1NoteIn the first example we should delete from 83148314 the digits 33 and 44. After that 83148314 become equals to 8181, which is the square of the integer 99.In the second example the given 625625 is the square of the integer 2525, so you should not delete anything. In the third example it is impossible to make the square from 333333, so the answer is -1."], "Tanya and Postcard": ["https://codeforces.com/problemset/problem/518/B", "B. Tanya and Postcardtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Tanya decided to present her dad a postcard on his Birthday. She has already created a message \u2014 string s of length n, consisting of uppercase and lowercase English letters. Tanya can't write yet, so she found a newspaper and decided to cut out the letters and glue them into the postcard to achieve string s. The newspaper contains string t, consisting of uppercase and lowercase English letters. We know that the length of string t greater or equal to the length of the string s.The newspaper may possibly have too few of some letters needed to make the text and too many of some other letters. That's why Tanya wants to cut some n letters out of the newspaper and make a message of length exactly n, so that it looked as much as possible like s. If the letter in some position has correct value and correct letter case (in the string s and in the string that Tanya will make), then she shouts joyfully \"YAY!\", and if the letter in the given position has only the correct value but it is in the wrong case, then the girl says \"WHOOPS\".Tanya wants to make such message that lets her shout \"YAY!\" as much as possible. If there are multiple ways to do this, then her second priority is to maximize the number of times she says \"WHOOPS\". Your task is to help Tanya make the message.InputThe first line contains line s (1\u2009\u2264\u2009|s|\u2009\u2264\u20092\u00b7105), consisting of uppercase and lowercase English letters \u2014 the text of Tanya's message.The second line contains line t (|s|\u2009\u2264\u2009|t|\u2009\u2264\u20092\u00b7105), consisting of uppercase and lowercase English letters \u2014 the text written in the newspaper.Here |a| means the length of the string a.OutputPrint two integers separated by a space:  the first number is the number of times Tanya shouts \"YAY!\" while making the message,  the second number is the number of times Tanya says \"WHOOPS\" while making the message. ExamplesInputCopyAbCDCbAOutputCopy3 0InputCopyABCabcOutputCopy0 3InputCopyabacabaAbaCaBAOutputCopy3 4"], "Developing Skills": ["https://codeforces.com/problemset/problem/581/C", "C. Developing Skillstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPetya loves computer games. Finally a game that he's been waiting for so long came out!The main character of this game has n different skills, each of which is characterized by an integer ai from 0 to 100. The higher the number ai is, the higher is the i-th skill of the character. The total rating of the character is calculated as the sum of the values \u200b\u200bof  for all i from 1 to n. The expression \u230a x\u230b denotes the result of rounding the number x down to the nearest integer.At the beginning of the game Petya got k improvement units as a bonus that he can use to increase the skills of his character and his total rating. One improvement unit can increase any skill of Petya's character by exactly one. For example, if a4\u2009=\u200946, after using one imporvement unit to this skill, it becomes equal to 47. A hero's skill cannot rise higher more than 100. Thus, it is permissible that some of the units will remain unused.Your task is to determine the optimal way of using the improvement units so as to maximize the overall rating of the character. It is not necessary to use all the improvement units.InputThe first line of the input contains two positive integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009105, 0\u2009\u2264\u2009k\u2009\u2264\u2009107) \u2014 the number of skills of the character and the number of units of improvements at Petya's disposal.The second line of the input contains a sequence of n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009100), where ai characterizes the level of the i-th skill of the character.OutputThe first line of the output should contain a single non-negative integer \u2014 the maximum total rating of the character that Petya can get using k or less improvement units.ExamplesInputCopy2 47 9OutputCopy2InputCopy3 817 15 19OutputCopy5InputCopy2 299 100OutputCopy20NoteIn the first test case the optimal strategy is as follows. Petya has to improve the first skill to 10 by spending 3 improvement units, and the second skill to 10, by spending one improvement unit. Thus, Petya spends all his improvement units and the total rating of the character becomes equal to  lfloor frac{100}{10} rfloor\u2009+\u2009 lfloor frac{100}{10} rfloor\u2009=\u200910\u2009+\u200910\u2009=\u2009 20.In the second test the optimal strategy for Petya is to improve the first skill to 20 (by spending 3 improvement units) and to improve the third skill to 20 (in this case by spending 1 improvement units). Thus, Petya is left with 4 improvement units and he will be able to increase the second skill to 19 (which does not change the overall rating, so Petya does not necessarily have to do it). Therefore, the highest possible total rating in this example is .In the third test case the optimal strategy for Petya is to increase the first skill to 100 by spending 1 improvement unit. Thereafter, both skills of the character will be equal to 100, so Petya will not be able to spend the remaining improvement unit. So the answer is equal to . "], "Dima and Continuous Line": ["https://codeforces.com/problemset/problem/358/A", "A. Dima and Continuous Linetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDima and Seryozha live in an ordinary dormitory room for two. One day Dima had a date with his girl and he asked Seryozha to leave the room. As a compensation, Seryozha made Dima do his homework.The teacher gave Seryozha the coordinates of n distinct points on the abscissa axis and asked to consecutively connect them by semi-circus in a certain order: first connect the first point with the second one, then connect the second point with the third one, then the third one with the fourth one and so on to the n-th point. Two points with coordinates (x1,\u20090) and (x2,\u20090) should be connected by a semi-circle that passes above the abscissa axis with the diameter that coincides with the segment between points. Seryozha needs to find out if the line on the picture intersects itself. For clarifications, see the picture Seryozha showed to Dima (the left picture has self-intersections, the right picture doesn't have any).  Seryozha is not a small boy, so the coordinates of the points can be rather large. Help Dima cope with the problem.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009103). The second line contains n distinct integers x1,\u2009x2,\u2009...,\u2009xn (\u2009-\u2009106\u2009\u2264\u2009xi\u2009\u2264\u2009106) \u2014 the i-th point has coordinates (xi,\u20090). The points are not necessarily sorted by their x coordinate.OutputIn the single line print \"yes\" (without the quotes), if the line has self-intersections. Otherwise, print \"no\" (without the quotes).ExamplesInputCopy40 10 5 15OutputCopyyesInputCopy40 15 5 10OutputCopynoNoteThe first test from the statement is on the picture to the left, the second test is on the picture to the right."], "Sonya and Robots": ["https://codeforces.com/problemset/problem/1004/C", "C. Sonya and Robotstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSince Sonya is interested in robotics too, she decided to construct robots that will read and recognize numbers.Sonya has drawn nn numbers in a row, aiai is located in the ii-th position. She also has put a robot at each end of the row (to the left of the first number and to the right of the last number). Sonya will give a number to each robot (they can be either same or different) and run them. When a robot is running, it is moving toward to another robot, reading numbers in the row. When a robot is reading a number that is equal to the number that was given to that robot, it will turn off and stay in the same position.Sonya does not want robots to break, so she will give such numbers that robots will stop before they meet. That is, the girl wants them to stop at different positions so that the first robot is to the left of the second one.For example, if the numbers [1,5,4,1,3][1,5,4,1,3] are written, and Sonya gives the number 11 to the first robot and the number 44 to the second one, the first robot will stop in the 11-st position while the second one in the 33-rd position. In that case, robots will not meet each other. As a result, robots will not be broken. But if Sonya gives the number 44 to the first robot and the number 55 to the second one, they will meet since the first robot will stop in the 33-rd position while the second one is in the 22-nd position.Sonya understands that it does not make sense to give a number that is not written in the row because a robot will not find this number and will meet the other robot.Sonya is now interested in finding the number of different pairs that she can give to robots so that they will not meet. In other words, she wants to know the number of pairs (pp, qq), where she will give pp to the first robot and qq to the second one. Pairs (pipi, qiqi) and (pjpj, qjqj) are different if pi\u2260pjpi\u2260pj or qi\u2260qjqi\u2260qj.Unfortunately, Sonya is busy fixing robots that broke after a failed launch. That is why she is asking you to find the number of pairs that she can give to robots so that they will not meet.InputThe first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of numbers in a row.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641051\u2264ai\u2264105)\u00a0\u2014 the numbers in a row.OutputPrint one number\u00a0\u2014 the number of possible pairs that Sonya can give to robots so that they will not meet.ExamplesInputCopy51 5 4 1 3OutputCopy9InputCopy71 2 1 1 1 3 2OutputCopy7NoteIn the first example, Sonya can give pairs (11, 11), (11, 33), (11, 44), (11, 55), (44, 11), (44, 33), (55, 11), (55, 33), and (55, 44).In the second example, Sonya can give pairs (11, 11), (11, 22), (11, 33), (22, 11), (22, 22), (22, 33), and (33, 22)."], "Views Matter": ["https://codeforces.com/problemset/problem/1061/B", "B. Views Mattertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou came to the exhibition and one exhibit has drawn your attention. It consists of nn stacks of blocks, where the ii-th stack consists of aiai blocks resting on the surface.The height of the exhibit is equal to mm. Consequently, the number of blocks in each stack is less than or equal to mm.There is a camera on the ceiling that sees the top view of the blocks and a camera on the right wall that sees the side view of the blocks. Find the maximum number of blocks you can remove such that the views for both the cameras would not change.Note, that while originally all blocks are stacked on the floor, it is not required for them to stay connected to the floor after some blocks are removed. There is no gravity in the whole exhibition, so no block would fall down, even if the block underneath is removed. It is not allowed to move blocks by hand either.InputThe first line contains two integers nn and mm (1\u2264n\u22641000001\u2264n\u2264100000, 1\u2264m\u22641091\u2264m\u2264109)\u00a0\u2014 the number of stacks and the height of the exhibit.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264m1\u2264ai\u2264m)\u00a0\u2014 the number of blocks in each stack from left to right.OutputPrint exactly one integer\u00a0\u2014 the maximum number of blocks that can be removed.ExamplesInputCopy5 63 3 3 3 3OutputCopy10InputCopy3 51 2 4OutputCopy3InputCopy5 52 3 1 4 4OutputCopy9InputCopy1 1000548OutputCopy0InputCopy3 33 1 1OutputCopy1NoteThe following pictures illustrate the first example and its possible solution.Blue cells indicate removed blocks. There are 1010 blue cells, so the answer is 1010. "], "Sea and Islands": ["https://codeforces.com/problemset/problem/544/B", "B. Sea and Islandstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA map of some object is a rectangular field consisting of n rows and n columns. Each cell is initially occupied by the sea but you can cover some some cells of the map with sand so that exactly k islands appear on the map. We will call a set of sand cells to be island if it is possible to get from each of them to each of them by moving only through sand cells and by moving from a cell only to a side-adjacent cell. The cells are called to be side-adjacent if they share a vertical or horizontal side. It is easy to see that islands do not share cells (otherwise they together form a bigger island).Find a way to cover some cells with sand so that exactly k islands appear on the n\u2009\u00d7\u2009n map, or determine that no such way exists. InputThe single line contains two positive integers n, k (1\u2009\u2264\u2009n\u2009\u2264\u2009100, 0\u2009\u2264\u2009k\u2009\u2264\u2009n2) \u2014 the size of the map and the number of islands you should form.OutputIf the answer doesn't exist, print \"NO\" (without the quotes) in a single line.Otherwise, print \"YES\" in the first line. In the next n lines print the description of the map. Each of the lines of the description must consist only of characters 'S' and 'L', where 'S' is a cell that is occupied by the sea and 'L' is the cell covered with sand. The length of each line of the description must equal n.If there are multiple answers, you may print any of them.You should not maximize the sizes of islands.ExamplesInputCopy5 2OutputCopyYESSSSSSLLLLLSSSSSLLLLLSSSSSInputCopy5 25OutputCopyNO"], "One Bomb": ["https://codeforces.com/problemset/problem/699/B", "B. One Bombtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a description of a depot. It is a rectangular checkered field of n\u2009\u00d7\u2009m size. Each cell in a field can be empty (\".\") or it can be occupied by a wall (\"*\"). You have one bomb. If you lay the bomb at the cell (x,\u2009y), then after triggering it will wipe out all walls in the row x and all walls in the column y.You are to determine if it is possible to wipe out all walls in the depot by placing and triggering exactly one bomb. The bomb can be laid both in an empty cell or in a cell occupied by a wall.InputThe first line contains two positive integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000)\u00a0\u2014 the number of rows and columns in the depot field. The next n lines contain m symbols \".\" and \"*\" each\u00a0\u2014 the description of the field. j-th symbol in i-th of them stands for cell (i,\u2009j). If the symbol is equal to \".\", then the corresponding cell is empty, otherwise it equals \"*\" and the corresponding cell is occupied by a wall.OutputIf it is impossible to wipe out all walls by placing and triggering exactly one bomb, then print \"NO\" in the first line (without quotes).Otherwise print \"YES\" (without quotes) in the first line and two integers in the second line\u00a0\u2014 the coordinates of the cell at which the bomb should be laid. If there are multiple answers, print any of them.ExamplesInputCopy3 4.*.......*..OutputCopyYES1 2InputCopy3 3..*.*.*..OutputCopyNOInputCopy6 5..*....*..*****..*....*....*..OutputCopyYES3 3"], "Restoring Painting": ["https://codeforces.com/problemset/problem/675/B", "B. Restoring Paintingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya works as a watchman in the gallery. Unfortunately, one of the most expensive paintings was stolen while he was on duty. He doesn't want to be fired, so he has to quickly restore the painting. He remembers some facts about it.  The painting is a square 3\u2009\u00d7\u20093, each cell contains a single integer from 1 to n, and different cells may contain either different or equal integers.  The sum of integers in each of four squares 2\u2009\u00d7\u20092 is equal to the sum of integers in the top left square 2\u2009\u00d7\u20092.  Four elements a, b, c and d are known and are located as shown on the picture below. Help Vasya find out the number of distinct squares the satisfy all the conditions above. Note, that this number may be equal to 0, meaning Vasya remembers something wrong.Two squares are considered to be different, if there exists a cell that contains two different integers in different squares.InputThe first line of the input contains five integers n, a, b, c and d (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009a,\u2009b,\u2009c,\u2009d\u2009\u2264\u2009n)\u00a0\u2014 maximum possible value of an integer in the cell and four integers that Vasya remembers.OutputPrint one integer\u00a0\u2014 the number of distinct valid squares.ExamplesInputCopy2 1 1 1 2OutputCopy2InputCopy3 3 1 2 3OutputCopy6NoteBelow are all the possible paintings for the first sample.  In the second sample, only paintings displayed below satisfy all the rules.      "], "Vanya and Food Processor": ["https://codeforces.com/problemset/problem/677/B", "B. Vanya and Food Processortime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVanya smashes potato in a vertical food processor. At each moment of time the height of the potato in the processor doesn't exceed h and the processor smashes k centimeters of potato each second. If there are less than k centimeters remaining, than during this second processor smashes all the remaining potato.Vanya has n pieces of potato, the height of the i-th piece is equal to ai. He puts them in the food processor one by one starting from the piece number 1 and finishing with piece number n. Formally, each second the following happens:  If there is at least one piece of potato remaining, Vanya puts them in the processor one by one, until there is not enough space for the next piece.  Processor smashes k centimeters of potato (or just everything that is inside). Provided the information about the parameter of the food processor and the size of each potato in a row, compute how long will it take for all the potato to become smashed.InputThe first line of the input contains integers n, h and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009h\u2009\u2264\u2009109)\u00a0\u2014 the number of pieces of potato, the height of the food processor and the amount of potato being smashed each second, respectively.The second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009h)\u00a0\u2014 the heights of the pieces.OutputPrint a single integer\u00a0\u2014 the number of seconds required to smash all the potatoes following the process described in the problem statement.ExamplesInputCopy5 6 35 4 3 2 1OutputCopy5InputCopy5 6 35 5 5 5 5OutputCopy10InputCopy5 6 31 2 1 1 1OutputCopy2NoteConsider the first sample.   First Vanya puts the piece of potato of height 5 into processor. At the end of the second there is only amount of height 2 remaining inside.  Now Vanya puts the piece of potato of height 4. At the end of the second there is amount of height 3 remaining.  Vanya puts the piece of height 3 inside and again there are only 3 centimeters remaining at the end of this second.  Vanya finally puts the pieces of height 2 and 1 inside. At the end of the second the height of potato in the processor is equal to 3.  During this second processor finally smashes all the remaining potato and the process finishes. In the second sample, Vanya puts the piece of height 5 inside and waits for 2 seconds while it is completely smashed. Then he repeats the same process for 4 other pieces. The total time is equal to 2\u00b75\u2009=\u200910 seconds.In the third sample, Vanya simply puts all the potato inside the processor and waits 2 seconds."], "T-shirt buying": ["https://codeforces.com/problemset/problem/799/B", "B. T-shirt buyingtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA new pack of n t-shirts came to a shop. Each of the t-shirts is characterized by three integers pi, ai and bi, where pi is the price of the i-th t-shirt, ai is front color of the i-th t-shirt and bi is back color of the i-th t-shirt. All values pi are distinct, and values ai and bi are integers from 1 to 3.m buyers will come to the shop. Each of them wants to buy exactly one t-shirt. For the j-th buyer we know his favorite color cj.A buyer agrees to buy a t-shirt, if at least one side (front or back) is painted in his favorite color. Among all t-shirts that have colors acceptable to this buyer he will choose the cheapest one. If there are no such t-shirts, the buyer won't buy anything. Assume that the buyers come one by one, and each buyer is served only after the previous one is served.You are to compute the prices each buyer will pay for t-shirts.InputThe first line contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of t-shirts.The following line contains sequence of integers p1,\u2009p2,\u2009...,\u2009pn (1\u2009\u2264\u2009pi\u2009\u2264\u20091\u2009000\u2009000\u2009000), where pi equals to the price of the i-th t-shirt.The following line contains sequence of integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u20093), where ai equals to the front color of the i-th t-shirt.The following line contains sequence of integers b1,\u2009b2,\u2009...,\u2009bn (1\u2009\u2264\u2009bi\u2009\u2264\u20093), where bi equals to the back color of the i-th t-shirt.The next line contains single integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of buyers. The following line contains sequence c1,\u2009c2,\u2009...,\u2009cm (1\u2009\u2264\u2009cj\u2009\u2264\u20093), where cj equals to the favorite color of the j-th buyer. The buyers will come to the shop in the order they are given in the input. Each buyer is served only after the previous one is served. OutputPrint to the first line m integers \u2014 the j-th integer should be equal to the price of the t-shirt which the j-th buyer will buy. If the j-th buyer won't buy anything, print -1.ExamplesInputCopy5300 200 400 500 9111 2 1 2 32 1 3 2 162 3 1 2 1 1OutputCopy200 400 300 500 911 -1 InputCopy21000000000 11 11 222 1OutputCopy1 1000000000 "], "Suit and Tie": ["https://codeforces.com/problemset/problem/995/B", "B. Suit and Tietime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAllen is hosting a formal dinner party. 2n2n people come to the event in nn pairs (couples). After a night of fun, Allen wants to line everyone up for a final picture. The 2n2n people line up, but Allen doesn't like the ordering. Allen prefers if each pair occupies adjacent positions in the line, as this makes the picture more aesthetic.Help Allen find the minimum number of swaps of adjacent positions he must perform to make it so that each couple occupies adjacent positions in the line.InputThe first line contains a single integer nn (1\u2264n\u22641001\u2264n\u2264100), the number of pairs of people.The second line contains 2n2n integers a1,a2,\u2026,a2na1,a2,\u2026,a2n. For each ii with 1\u2264i\u2264n1\u2264i\u2264n, ii appears exactly twice. If aj=ak=iaj=ak=i, that means that the jj-th and kk-th people in the line form a couple.OutputOutput a single integer, representing the minimum number of adjacent swaps needed to line the people up so that each pair occupies adjacent positions.ExamplesInputCopy41 1 2 3 3 2 4 4OutputCopy2InputCopy31 1 2 2 3 3OutputCopy0InputCopy33 1 2 3 1 2OutputCopy3NoteIn the first sample case, we can transform 11233244\u219211232344\u21921122334411233244\u219211232344\u219211223344 in two steps. Note that the sequence 11233244\u219211323244\u21921133224411233244\u219211323244\u219211332244 also works in the same number of steps.The second sample case already satisfies the constraints; therefore we need 00 swaps."], "K-Dominant Character": ["https://codeforces.com/problemset/problem/888/C", "C. K-Dominant Charactertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string s consisting of lowercase Latin letters. Character c is called k-dominant iff each substring of s with length at least k contains this character c.You have to find minimum k such that there exists at least one k-dominant character.InputThe first line contains string s consisting of lowercase Latin letters (1\u2009\u2264\u2009|s|\u2009\u2264\u2009100000).OutputPrint one number \u2014 the minimum value of k such that there exists at least one k-dominant character.ExamplesInputCopyabacabaOutputCopy2InputCopyzzzzzOutputCopy1InputCopyabcdeOutputCopy3"], "Three Garlands": ["https://codeforces.com/problemset/problem/911/C", "C. Three Garlandstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMishka is decorating the Christmas tree. He has got three garlands, and all of them will be put on the tree. After that Mishka will switch these garlands on.When a garland is switched on, it periodically changes its state \u2014 sometimes it is lit, sometimes not. Formally, if i-th garland is switched on during x-th second, then it is lit only during seconds x, x\u2009+\u2009ki, x\u2009+\u20092ki, x\u2009+\u20093ki and so on.Mishka wants to switch on the garlands in such a way that during each second after switching the garlands on there would be at least one lit garland. Formally, Mishka wants to choose three integers x1, x2 and x3 (not necessarily distinct) so that he will switch on the first garland during x1-th second, the second one \u2014 during x2-th second, and the third one \u2014 during x3-th second, respectively, and during each second starting from max(x1,\u2009x2,\u2009x3) at least one garland will be lit.Help Mishka by telling him if it is possible to do this!InputThe first line contains three integers k1, k2 and k3 (1\u2009\u2264\u2009ki\u2009\u2264\u20091500) \u2014 time intervals of the garlands.OutputIf Mishka can choose moments of time to switch on the garlands in such a way that each second after switching the garlands on at least one garland will be lit, print YES.Otherwise, print NO.ExamplesInputCopy2 2 3OutputCopyYESInputCopy4 2 3OutputCopyNONoteIn the first example Mishka can choose x1\u2009=\u20091, x2\u2009=\u20092, x3\u2009=\u20091. The first garland will be lit during seconds 1,\u20093,\u20095,\u20097,\u2009..., the second \u2014 2,\u20094,\u20096,\u20098,\u2009..., which already cover all the seconds after the 2-nd one. It doesn't even matter what x3 is chosen. Our choice will lead third to be lit during seconds 1,\u20094,\u20097,\u200910,\u2009..., though.In the second example there is no way to choose such moments of time, there always be some seconds when no garland is lit."], "Maximum Crossings (Easy Version)": ["https://codeforces.com/problemset/problem/1676/H1", "H1. Maximum Crossings (Easy Version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between the two versions is that in this version n\u22641000n\u22641000 and the sum of nn over all test cases does not exceed 10001000.A terminal is a row of nn equal segments numbered 11 to nn in order. There are two terminals, one above the other. You are given an array aa of length nn. For all i=1,2,\u2026,ni=1,2,\u2026,n, there should be a straight wire from some point on segment ii of the top terminal to some point on segment aiai of the bottom terminal. You can't select the endpoints of a segment. For example, the following pictures show two possible wirings if n=7n=7 and a=[4,1,4,6,7,7,5]a=[4,1,4,6,7,7,5].  A crossing occurs when two wires share a point in common. In the picture above, crossings are circled in red.What is the maximum number of crossings there can be if you place the wires optimally?InputThe first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains an integer nn (1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the length of the array.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n)\u00a0\u2014 the elements of the array.The sum of nn across all test cases does not exceed 10001000.OutputFor each test case, output a single integer\u00a0\u2014 the maximum number of crossings there can be if you place the wires optimally.ExampleInputCopy4\n7\n4 1 4 6 7 7 5\n2\n2 1\n1\n1\n3\n2 2 2\nOutputCopy6\n1\n0\n3\nNoteThe first test case is shown in the second picture in the statement.In the second test case, the only wiring possible has the two wires cross, so the answer is 11.In the third test case, the only wiring possible has one wire, so the answer is 00."], "Vile Grasshoppers": ["https://codeforces.com/problemset/problem/937/B", "B. Vile Grasshopperstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe weather is fine today and hence it's high time to climb the nearby pine and enjoy the landscape.The pine's trunk includes several branches, located one above another and numbered from 2 to y. Some of them (more precise, from 2 to p) are occupied by tiny vile grasshoppers which you're at war with. These grasshoppers are known for their awesome jumping skills: the grasshopper at branch x can jump to branches .Keeping this in mind, you wisely decided to choose such a branch that none of the grasshoppers could interrupt you. At the same time you wanna settle as high as possible since the view from up there is simply breathtaking.In other words, your goal is to find the highest branch that cannot be reached by any of the grasshoppers or report that it's impossible.InputThe only line contains two integers p and y (2\u2009\u2264\u2009p\u2009\u2264\u2009y\u2009\u2264\u2009109).OutputOutput the number of the highest suitable branch. If there are none, print -1 instead.ExamplesInputCopy3 6OutputCopy5InputCopy3 4OutputCopy-1NoteIn the first sample case grasshopper from branch 2 reaches branches 2, 4 and 6 while branch 3 is initially settled by another grasshopper. Therefore the answer is 5.It immediately follows that there are no valid branches in second sample case."], "Permutation": ["https://codeforces.com/problemset/problem/359/B", "B. Permutationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA permutation p is an ordered group of numbers p1,\u2009\u2009\u2009p2,\u2009\u2009\u2009...,\u2009\u2009\u2009pn, consisting of n distinct positive integers, each is no more than n. We'll define number n as the length of permutation p1,\u2009\u2009\u2009p2,\u2009\u2009\u2009...,\u2009\u2009\u2009pn.Simon has a positive integer n and a non-negative integer k, such that 2k\u2009\u2264\u2009n. Help him find permutation a of length 2n, such that it meets this equation: .InputThe first line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u200950000, 0\u2009\u2264\u20092k\u2009\u2264\u2009n).OutputPrint 2n integers a1,\u2009a2,\u2009...,\u2009a2n \u2014 the required permutation a. It is guaranteed that the solution exists. If there are multiple solutions, you can print any of them.ExamplesInputCopy1 0OutputCopy1 2InputCopy2 1OutputCopy3 2 1 4InputCopy4 0OutputCopy2 7 4 6 1 3 5 8NoteRecord |x| represents the absolute value of number x. In the first sample |1\u2009-\u20092|\u2009-\u2009|1\u2009-\u20092|\u2009=\u20090.In the second sample |3\u2009-\u20092|\u2009+\u2009|1\u2009-\u20094|\u2009-\u2009|3\u2009-\u20092\u2009+\u20091\u2009-\u20094|\u2009=\u20091\u2009+\u20093\u2009-\u20092\u2009=\u20092.In the third sample |2\u2009-\u20097|\u2009+\u2009|4\u2009-\u20096|\u2009+\u2009|1\u2009-\u20093|\u2009+\u2009|5\u2009-\u20098|\u2009-\u2009|2\u2009-\u20097\u2009+\u20094\u2009-\u20096\u2009+\u20091\u2009-\u20093\u2009+\u20095\u2009-\u20098|\u2009=\u200912\u2009-\u200912\u2009=\u20090."], "Cutting Banner": ["https://codeforces.com/problemset/problem/538/A", "A. Cutting Bannertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA large banner with word CODEFORCES was ordered for the 1000-th onsite round of Codeforces\u03c9 that takes place on the Miami beach. Unfortunately, the company that made the banner mixed up two orders and delivered somebody else's banner that contains someone else's word. The word on the banner consists only of upper-case English letters.There is very little time to correct the mistake. All that we can manage to do is to cut out some substring from the banner, i.e. several consecutive letters. After that all the resulting parts of the banner will be glued into a single piece (if the beginning or the end of the original banner was cut out, only one part remains); it is not allowed change the relative order of parts of the banner (i.e. after a substring is cut, several first and last letters are left, it is allowed only to glue the last letters to the right of the first letters). Thus, for example, for example, you can cut a substring out from string 'TEMPLATE' and get string 'TEMPLE' (if you cut out string AT), 'PLATE' (if you cut out TEM), 'T' (if you cut out EMPLATE), etc.Help the organizers of the round determine whether it is possible to cut out of the banner some substring in such a way that the remaining parts formed word CODEFORCES.InputThe single line of the input contains the word written on the banner. The word only consists of upper-case English letters. The word is non-empty and its length doesn't exceed 100 characters. It is guaranteed that the word isn't word CODEFORCES.OutputPrint 'YES', if there exists a way to cut out the substring, and 'NO' otherwise (without the quotes).ExamplesInputCopyCODEWAITFORITFORCESOutputCopyYESInputCopyBOTTOMCODEROutputCopyNOInputCopyDECODEFORCESOutputCopyYESInputCopyDOGEFORCESOutputCopyNO"], "Win or Freeze": ["https://codeforces.com/problemset/problem/150/A", "A. Win or Freezetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou can't possibly imagine how cold our friends are this winter in Nvodsk! Two of them play the following game to warm up: initially a piece of paper has an integer q. During a move a player should write any integer number that is a non-trivial divisor of the last written number. Then he should run this number of circles around the hotel. Let us remind you that a number's divisor is called non-trivial if it is different from one and from the divided number itself. The first person who can't make a move wins as he continues to lie in his warm bed under three blankets while the other one keeps running. Determine which player wins considering that both players play optimally. If the first player wins, print any winning first move.InputThe first line contains the only integer q (1\u2009\u2264\u2009q\u2009\u2264\u20091013).Please do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specificator.OutputIn the first line print the number of the winning player (1 or 2). If the first player wins then the second line should contain another integer \u2014 his first move (if the first player can't even make the first move, print 0). If there are multiple solutions, print any of them.ExamplesInputCopy6OutputCopy2InputCopy30OutputCopy16InputCopy1OutputCopy10NoteNumber 6 has only two non-trivial divisors: 2 and 3. It is impossible to make a move after the numbers 2 and 3 are written, so both of them are winning, thus, number 6 is the losing number. A player can make a move and write number 6 after number 30; 6, as we know, is a losing number. Thus, this move will bring us the victory."], "A Compatible Pair": ["https://codeforces.com/problemset/problem/934/A", "A. A Compatible Pairtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNian is a monster which lives deep in the oceans. Once a year, it shows up on the land, devouring livestock and even people. In order to keep the monster away, people fill their villages with red colour, light, and cracking noise, all of which frighten the monster out of coming.Little Tommy has n lanterns and Big Banban has m lanterns. Tommy's lanterns have brightness a1,\u2009a2,\u2009...,\u2009an, and Banban's have brightness b1,\u2009b2,\u2009...,\u2009bm respectively.Tommy intends to hide one of his lanterns, then Banban picks one of Tommy's non-hidden lanterns and one of his own lanterns to form a pair. The pair's brightness will be the product of the brightness of two lanterns.Tommy wants to make the product as small as possible, while Banban tries to make it as large as possible.You are asked to find the brightness of the chosen pair if both of them choose optimally.InputThe first line contains two space-separated integers n and m (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200950).The second line contains n space-separated integers a1,\u2009a2,\u2009...,\u2009an.The third line contains m space-separated integers b1,\u2009b2,\u2009...,\u2009bm.All the integers range from \u2009-\u2009109 to 109.OutputPrint a single integer\u00a0\u2014 the brightness of the chosen pair.ExamplesInputCopy2 220 182 14OutputCopy252InputCopy5 3-1 0 1 2 3-1 0 1OutputCopy2NoteIn the first example, Tommy will hide 20 and Banban will choose 18 from Tommy and 14 from himself.In the second example, Tommy will hide 3 and Banban will choose 2 from Tommy and 1 from himself."], "String Typing": ["https://codeforces.com/problemset/problem/954/B", "B. String Typingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string s consisting of n lowercase Latin letters. You have to type this string using your keyboard.Initially, you have an empty string. Until you type the whole string, you may perform the following operation:  add a character to the end of the string. Besides, at most once you may perform one additional operation: copy the string and append it to itself.For example, if you have to type string abcabca, you can type it in 7 operations if you type all the characters one by one. However, you can type it in 5 operations if you type the string abc first and then copy it and type the last character.If you have to type string aaaaaaaaa, the best option is to type 4 characters one by one, then copy the string, and then type the remaining character.Print the minimum number of operations you need to type the given string.InputThe first line of the input containing only one integer number n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 the length of the string you have to type. The second line containing the string s consisting of n lowercase Latin letters.OutputPrint one integer number\u00a0\u2014 the minimum number of operations you need to type the given string.ExamplesInputCopy7abcabcaOutputCopy5InputCopy8abcdefghOutputCopy8NoteThe first test described in the problem statement.In the second test you can only type all the characters one by one."], "Valera and Fruits": ["https://codeforces.com/problemset/problem/441/B", "B. Valera and Fruitstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputValera loves his garden, where n fruit trees grow.This year he will enjoy a great harvest! On the i-th tree bi fruit grow, they will ripen on a day number ai. Unfortunately, the fruit on the tree get withered, so they can only be collected on day ai and day ai\u2009+\u20091 (all fruits that are not collected in these two days, become unfit to eat).Valera is not very fast, but there are some positive points. Valera is ready to work every day. In one day, Valera can collect no more than v fruits. The fruits may be either from the same tree, or from different ones. What is the maximum amount of fruit Valera can collect for all time, if he operates optimally well?InputThe first line contains two space-separated integers n and v (1\u2009\u2264\u2009n,\u2009v\u2009\u2264\u20093000) \u2014 the number of fruit trees in the garden and the number of fruits that Valera can collect in a day. Next n lines contain the description of trees in the garden. The i-th line contains two space-separated integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u20093000) \u2014 the day the fruits ripen on the i-th tree and the number of fruits on the i-th tree.OutputPrint a single integer \u2014 the maximum number of fruit that Valera can collect. ExamplesInputCopy2 31 52 3OutputCopy8InputCopy5 103 202 201 204 205 20OutputCopy60NoteIn the first sample, in order to obtain the optimal answer, you should act as follows.   On the first day collect 3 fruits from the 1-st tree.  On the second day collect 1 fruit from the 2-nd tree and 2 fruits from the 1-st tree.  On the third day collect the remaining fruits from the 2-nd tree.  In the second sample, you can only collect 60 fruits, the remaining fruit will simply wither."], "Non-square Equation": ["https://codeforces.com/problemset/problem/233/B", "B. Non-square Equationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's consider equation:x2\u2009+\u2009s(x)\u00b7x\u2009-\u2009n\u2009=\u20090,\u2009 where x,\u2009n are positive integers, s(x) is the function, equal to the sum of digits of number x in the decimal number system.You are given an integer n, find the smallest positive integer root of equation x, or else determine that there are no such roots.InputA single line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091018) \u2014 the equation parameter.Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier. OutputPrint -1, if the equation doesn't have integer positive roots. Otherwise print such smallest integer x (x\u2009>\u20090), that the equation given in the statement holds.ExamplesInputCopy2OutputCopy1InputCopy110OutputCopy10InputCopy4OutputCopy-1NoteIn the first test case x\u2009=\u20091 is the minimum root. As s(1)\u2009=\u20091 and 12\u2009+\u20091\u00b71\u2009-\u20092\u2009=\u20090.In the second test case x\u2009=\u200910 is the minimum root. As s(10)\u2009=\u20091\u2009+\u20090\u2009=\u20091 and 102\u2009+\u20091\u00b710\u2009-\u2009110\u2009=\u20090.In the third test case the equation has no roots."], "Design Tutorial: Make It Nondeterministic": ["https://codeforces.com/problemset/problem/472/C", "C. Design Tutorial: Make It Nondeterministictime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA way to make a new task is to make it nondeterministic or probabilistic. For example, the hard task of Topcoder SRM 595, Constellation, is the probabilistic version of a convex hull.Let's try to make a new task. Firstly we will use the following task. There are n people, sort them by their name. It is just an ordinary sorting problem, but we can make it more interesting by adding nondeterministic element. There are n people, each person will use either his/her first name or last name as a handle. Can the lexicographical order of the handles be exactly equal to the given permutation p?More formally, if we denote the handle of the i-th person as hi, then the following condition must hold: .InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of people.The next n lines each contains two strings. The i-th line contains strings fi and si (1\u2009\u2264\u2009|fi|,\u2009|si|\u2009\u2264\u200950) \u2014 the first name and last name of the i-th person. Each string consists only of lowercase English letters. All of the given 2n strings will be distinct.The next line contains n distinct integers: p1,\u2009p2,\u2009...,\u2009pn (1\u2009\u2264\u2009pi\u2009\u2264\u2009n).OutputIf it is possible, output \"YES\", otherwise output \"NO\".ExamplesInputCopy3gennady korotkevichpetr mitrichevgaoyuan chen1 2 3OutputCopyNOInputCopy3gennady korotkevichpetr mitrichevgaoyuan chen3 1 2OutputCopyYESInputCopy2galileo galileinicolaus copernicus2 1OutputCopyYESInputCopy10rean schwarzerfei claussellalisa reinfordeliot craiglaura arseidjusis albareamachias regnitzsara valestinemma millsteingaius worzel1 2 3 4 5 6 7 8 9 10OutputCopyNOInputCopy10rean schwarzerfei claussellalisa reinfordeliot craiglaura arseidjusis albareamachias regnitzsara valestinemma millsteingaius worzel2 4 9 6 5 7 1 3 8 10OutputCopyYESNoteIn example 1 and 2, we have 3 people: tourist, Petr and me (cgy4ever). You can see that whatever handle is chosen, I must be the first, then tourist and Petr must be the last.In example 3, if Copernicus uses \"copernicus\" as his handle, everything will be alright."], "Replace To Make Regular Bracket Sequence": ["https://codeforces.com/problemset/problem/612/C", "C. Replace To Make Regular Bracket Sequencetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given string s consists of opening and closing brackets of four kinds <>, {}, [], (). There are two types of brackets: opening and closing. You can replace any bracket by another of the same type. For example, you can replace < by the bracket {, but you can't replace it by ) or >.The following definition of a regular bracket sequence is well-known, so you can be familiar with it.Let's define a regular bracket sequence (RBS). Empty string is RBS. Let s1 and s2 be a RBS then the strings <s1>s2, {s1}s2, [s1]s2, (s1)s2 are also RBS.For example the string \"[[(){}]<>]\" is RBS, but the strings \"[)()\" and \"][()()\" are not.Determine the least number of replaces to make the string s RBS.InputThe only line contains a non empty string s, consisting of only opening and closing brackets of four kinds. The length of s does not exceed 106.OutputIf it's impossible to get RBS from s print Impossible.Otherwise print the least number of replaces needed to get RBS from s.ExamplesInputCopy[<}){}OutputCopy2InputCopy{()}[]OutputCopy0InputCopy]]OutputCopyImpossible"], "New Year Ratings Change": ["https://codeforces.com/problemset/problem/379/C", "C. New Year Ratings Changetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne very well-known internet resource site (let's call it X) has come up with a New Year adventure. Specifically, they decided to give ratings to all visitors.There are n users on the site, for each user we know the rating value he wants to get as a New Year Present. We know that user i wants to get at least ai rating units as a present.The X site is administered by very creative and thrifty people. On the one hand, they want to give distinct ratings and on the other hand, the total sum of the ratings in the present must be as small as possible.Help site X cope with the challenging task of rating distribution. Find the optimal distribution.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105) \u2014 the number of users on the site. The next line contains integer sequence a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109).OutputPrint a sequence of integers b1,\u2009b2,\u2009...,\u2009bn. Number bi means that user i gets bi of rating as a present. The printed sequence must meet the problem conditions. If there are multiple optimal solutions, print any of them.ExamplesInputCopy35 1 1OutputCopy5 1 2InputCopy11000000000OutputCopy1000000000"], "Gena's Code": ["https://codeforces.com/problemset/problem/614/B", "B. Gena's Codetime limit per test0.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt's the year 4527 and the tanks game that we all know and love still exists. There also exists Great Gena's code, written in 2016. The problem this code solves is: given the number of tanks that go into the battle from each country, find their product. If it is turns to be too large, then the servers might have not enough time to assign tanks into teams and the whole game will collapse!There are exactly n distinct countries in the world and the i-th country added ai tanks to the game. As the developers of the game are perfectionists, the number of tanks from each country is beautiful. A beautiful number, according to the developers, is such number that its decimal representation consists only of digits '1' and '0', moreover it contains at most one digit '1'. However, due to complaints from players, some number of tanks of one country was removed from the game, hence the number of tanks of this country may not remain beautiful.Your task is to write the program that solves exactly the same problem in order to verify Gena's code correctness. Just in case.InputThe first line of the input contains the number of countries n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000). The second line contains n non-negative integers ai without leading zeroes\u00a0\u2014 the number of tanks of the i-th country.It is guaranteed that the second line contains at least n\u2009-\u20091 beautiful numbers and the total length of all these number's representations doesn't exceed 100\u2009000.OutputPrint a single number without leading zeroes\u00a0\u2014 the product of the number of tanks presented by each country.ExamplesInputCopy35 10 1OutputCopy50InputCopy41 1 10 11OutputCopy110InputCopy50 3 1 100 1OutputCopy0NoteIn sample 1 numbers 10 and 1 are beautiful, number 5 is not not.In sample 2 number 11 is not beautiful (contains two '1's), all others are beautiful.In sample 3 number 3 is not beautiful, all others are beautiful."], "Little Elephant and Sorting": ["https://codeforces.com/problemset/problem/205/B", "B. Little Elephant and Sortingtime limit per test0.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Little Elephant loves sortings.He has an array a consisting of n integers. Let's number the array elements from 1 to n, then the i-th element will be denoted as ai. The Little Elephant can make one move to choose an arbitrary pair of integers l and r (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009n) and increase ai by 1 for all i such that l\u2009\u2264\u2009i\u2009\u2264\u2009r.Help the Little Elephant find the minimum number of moves he needs to convert array a to an arbitrary array sorted in the non-decreasing order. Array a, consisting of n elements, is sorted in the non-decreasing order if for any i (1\u2009\u2264\u2009i\u2009<\u2009n) ai\u2009\u2264\u2009ai\u2009+\u20091 holds.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the size of array a. The next line contains n integers, separated by single spaces \u2014 array a (1\u2009\u2264\u2009ai\u2009\u2264\u2009109). The array elements are listed in the line in the order of their index's increasing.OutputIn a single line print a single integer \u2014 the answer to the problem.Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.ExamplesInputCopy31 2 3OutputCopy0InputCopy33 2 1OutputCopy2InputCopy47 4 1 47OutputCopy6NoteIn the first sample the array is already sorted in the non-decreasing order, so the answer is 0.In the second sample you need to perform two operations: first increase numbers from second to third (after that the array will be: [3, 3, 2]), and second increase only the last element (the array will be: [3, 3, 3]).In the third sample you should make at least 6 steps. The possible sequence of the operations is: (2; 3), (2; 3), (2; 3), (3; 3), (3; 3), (3; 3). After that the array converts to [7, 7, 7, 47]."], "Guess the Array": ["https://codeforces.com/problemset/problem/727/C", "C. Guess the Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an interactive problem. You should use flush operation after each printed line. For example, in C++ you should use fflush(stdout), in Java you should use System.out.flush(), and in Pascal\u00a0\u2014 flush(output).In this problem you should guess an array a which is unknown for you. The only information you have initially is the length n of the array a.The only allowed action is to ask the sum of two elements by their indices. Formally, you can print two indices i and j (the indices should be distinct). Then your program should read the response: the single integer equals to ai\u2009+\u2009aj.It is easy to prove that it is always possible to guess the array using at most n requests.Write a program that will guess the array a by making at most n requests.InteractionIn each test your program should guess a single array.The input starts with a line containing integer n (3\u2009\u2264\u2009n\u2009\u2264\u20095000)\u00a0\u2014 the length of the array. Your program should read it at first.After that your program should print to the standard output the requests about the sum of two elements or inform that the array is guessed.  In case your program is making a request to ask the sum of two elements, it should print line in the format \"? i j\" (i and j are distinct integers between 1 and n), where i and j are indices in the array a. In case your program informs that the array is guessed, it should print line in the format \"!\u00a0a1\u00a0a2\u00a0...\u00a0an\" (it is guaranteed that all ai are positive integers not exceeding 105), where ai is the i-th element of the array a. The response on a request is a single integer equal to ai\u2009+\u2009aj, printed on a separate line.Your program can do at most n requests. Note that the final line \u00ab!\u00a0a1\u00a0a2\u00a0...\u00a0an\u00bb is not counted as a request.Do not forget about flush operation after each printed line.After you program prints the guessed array, it should terminate normally.ExampleInputCopy5\u00a09\u00a07\u00a09\u00a011\u00a06\u00a0OutputCopy\u00a0? 1 5\u00a0? 2 3\u00a0? 4 1\u00a0? 5 2\u00a0? 3 4\u00a0! 4 6 1 5 5NoteThe format of a test to make a hack is:  The first line contains an integer number n (3\u2009\u2264\u2009n\u2009\u2264\u20095000)\u00a0\u2014 the length of the array. The second line contains n numbers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105)\u00a0\u2014 the elements of the array to guess. "], "Tea Party": ["https://codeforces.com/problemset/problem/808/C", "C. Tea Partytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp invited all his friends to the tea party to celebrate the holiday. He has n cups, one for each of his n friends, with volumes a1,\u2009a2,\u2009...,\u2009an. His teapot stores w milliliters of tea (w\u2009\u2264\u2009a1\u2009+\u2009a2\u2009+\u2009...\u2009+\u2009an). Polycarp wants to pour tea in cups in such a way that:  Every cup will contain tea for at least half of its volume  Every cup will contain integer number of milliliters of tea  All the tea from the teapot will be poured into cups  All friends will be satisfied. Friend with cup i won't be satisfied, if there exists such cup j that cup i contains less tea than cup j but ai\u2009>\u2009aj.For each cup output how many milliliters of tea should be poured in it. If it's impossible to pour all the tea and satisfy all conditions then output -1.InputThe first line contains two integer numbers n and w (1\u2009\u2264\u2009n\u2009\u2264\u2009100, ).The second line contains n numbers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009100).OutputOutput how many milliliters of tea every cup should contain. If there are multiple answers, print any of them.If it's impossible to pour all the tea and satisfy all conditions then output -1.ExamplesInputCopy2 108 7OutputCopy6 4 InputCopy4 41 1 1 1OutputCopy1 1 1 1 InputCopy3 109 8 10OutputCopy-1NoteIn the third example you should pour to the first cup at least 5 milliliters, to the second one at least 4, to the third one at least 5. It sums up to 14, which is greater than 10 milliliters available."], "Knights of a Polygonal Table": ["https://codeforces.com/problemset/problem/994/B", "B. Knights of a Polygonal Tabletime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputUnlike Knights of a Round Table, Knights of a Polygonal Table deprived of nobility and happy to kill each other. But each knight has some power and a knight can kill another knight if and only if his power is greater than the power of victim. However, even such a knight will torment his conscience, so he can kill no more than kk other knights. Also, each knight has some number of coins. After a kill, a knight can pick up all victim's coins.Now each knight ponders: how many coins he can have if only he kills other knights?You should answer this question for each knight.InputThe first line contains two integers nn and kk (1\u2264n\u2264105,0\u2264k\u2264min(n\u22121,10))(1\u2264n\u2264105,0\u2264k\u2264min(n\u22121,10)) \u2014 the number of knights and the number kk from the statement.The second line contains nn integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264109)(1\u2264pi\u2264109) \u2014 powers of the knights. All pipi are distinct.The third line contains nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn (0\u2264ci\u2264109)(0\u2264ci\u2264109) \u2014 the number of coins each knight has.OutputPrint nn integers \u2014 the maximum number of coins each knight can have it only he kills other knights.ExamplesInputCopy4 24 5 9 71 2 11 33OutputCopy1 3 46 36 InputCopy5 11 2 3 4 51 2 3 4 5OutputCopy1 3 5 7 9 InputCopy1 023OutputCopy3 NoteConsider the first example.   The first knight is the weakest, so he can't kill anyone. That leaves him with the only coin he initially has.  The second knight can kill the first knight and add his coin to his own two.  The third knight is the strongest, but he can't kill more than k=2k=2 other knights. It is optimal to kill the second and the fourth knights: 2+11+33=462+11+33=46.  The fourth knight should kill the first and the second knights: 33+1+2=3633+1+2=36. In the second example the first knight can't kill anyone, while all the others should kill the one with the index less by one than their own.In the third example there is only one knight, so he can't kill anyone."], "Colorful Field": ["https://codeforces.com/problemset/problem/79/B", "B. Colorful Fieldtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputFox Ciel saw a large field while she was on a bus. The field was a n\u2009\u00d7\u2009m rectangle divided into 1\u2009\u00d7\u20091 cells. Some cells were wasteland, and other each cell contained crop plants: either carrots or kiwis or grapes. After seeing the field carefully, Ciel found that the crop plants of each cell were planted in following procedure:  Assume that the rows are numbered 1 to n from top to bottom and the columns are numbered 1 to m from left to right, and a cell in row i and column j is represented as (i,\u2009j).  First, each field is either cultivated or waste. Crop plants will be planted in the cultivated cells in the order of (1,\u20091)\u2009\u2192\u2009...\u2009\u2192\u2009(1,\u2009m)\u2009\u2192\u2009(2,\u20091)\u2009\u2192\u2009...\u2009\u2192\u2009(2,\u2009m)\u2009\u2192\u2009...\u2009\u2192\u2009(n,\u20091)\u2009\u2192\u2009...\u2009\u2192\u2009(n,\u2009m). Waste cells will be ignored.  Crop plants (either carrots or kiwis or grapes) will be planted in each cell one after another cyclically. Carrots will be planted in the first cell, then kiwis in the second one, grapes in the third one, carrots in the forth one, kiwis in the fifth one, and so on. The following figure will show you the example of this procedure. Here, a white square represents a cultivated cell, and a black square represents a waste cell.  Now she is wondering how to determine the crop plants in some certain cells. InputIn the first line there are four positive integers n,\u2009m,\u2009k,\u2009t (1\u2009\u2264\u2009n\u2009\u2264\u20094\u00b7104,\u20091\u2009\u2264\u2009m\u2009\u2264\u20094\u00b7104,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009103,\u20091\u2009\u2264\u2009t\u2009\u2264\u2009103), each of which represents the height of the field, the width of the field, the number of waste cells and the number of queries that ask the kind of crop plants in a certain cell.Following each k lines contains two integers a,\u2009b (1\u2009\u2264\u2009a\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009b\u2009\u2264\u2009m), which denotes a cell (a,\u2009b) is waste. It is guaranteed that the same cell will not appear twice in this section.Following each t lines contains two integers i,\u2009j (1\u2009\u2264\u2009i\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009j\u2009\u2264\u2009m), which is a query that asks you the kind of crop plants of a cell (i,\u2009j).OutputFor each query, if the cell is waste, print Waste. Otherwise, print the name of crop plants in the cell: either Carrots or Kiwis or Grapes.ExamplesInputCopy4 5 5 64 31 33 32 53 21 31 42 32 41 11 1OutputCopyWasteGrapesCarrotsKiwisCarrotsCarrotsNoteThe sample corresponds to the figure in the statement."], "Sorting by Subsequences": ["https://codeforces.com/problemset/problem/843/A", "A. Sorting by Subsequencestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a sequence a1,\u2009a2,\u2009...,\u2009an consisting of different integers. It is required to split this sequence into the maximum number of subsequences such that after sorting integers in each of them in increasing order, the total sequence also will be sorted in increasing order.Sorting integers in a subsequence is a process such that the numbers included in a subsequence are ordered in increasing order, and the numbers which are not included in a subsequence don't change their places.Every element of the sequence must appear in exactly one subsequence.InputThe first line of input data contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105)\u00a0\u2014 the length of the sequence.The second line of input data contains n different integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 the elements of the sequence. It is guaranteed that all elements of the sequence are distinct.OutputIn the first line print the maximum number of subsequences k, which the original sequence can be split into while fulfilling the requirements.In the next k lines print the description of subsequences in the following format: the number of elements in subsequence ci (0\u2009<\u2009ci\u2009\u2264\u2009n), then ci integers l1,\u2009l2,\u2009...,\u2009lci (1\u2009\u2264\u2009lj\u2009\u2264\u2009n)\u00a0\u2014 indices of these elements in the original sequence. Indices could be printed in any order. Every index from 1 to n must appear in output exactly once.If there are several possible answers, print any of them.ExamplesInputCopy63 2 1 6 5 4OutputCopy42 1 31 22 4 61 5InputCopy683 -75 -49 11 37 62OutputCopy16 1 2 3 4 5 6NoteIn the first sample output:After sorting the first subsequence we will get sequence 1\u00a02\u00a03\u00a06\u00a05\u00a04.Sorting the second subsequence changes nothing.After sorting the third subsequence we will get sequence 1\u00a02\u00a03\u00a04\u00a05\u00a06.Sorting the last subsequence changes nothing."], "Ilya and Matrix": ["https://codeforces.com/problemset/problem/313/C", "C. Ilya and Matrixtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIlya is a very good-natured lion. He likes maths. Of all mathematical objects, his favourite one is matrices. Now he's faced a complicated matrix problem he needs to solve.He's got a square 2n\u2009\u00d7\u20092n-sized matrix and 4n integers. You need to arrange all these numbers in the matrix (put each number in a single individual cell) so that the beauty of the resulting matrix with numbers is maximum.The beauty of a 2n\u2009\u00d7\u20092n-sized matrix is an integer, obtained by the following algorithm:  Find the maximum element in the matrix. Let's denote it as m.  If n\u2009=\u20090, then the beauty of the matrix equals m. Otherwise, a matrix can be split into 4 non-intersecting 2n\u2009-\u20091\u2009\u00d7\u20092n\u2009-\u20091-sized submatrices, then the beauty of the matrix equals the sum of number m and other four beauties of the described submatrices. As you can see, the algorithm is recursive.Help Ilya, solve the problem and print the resulting maximum beauty of the matrix.InputThe first line contains integer 4n (1\u2009\u2264\u20094n\u2009\u2264\u20092\u00b7106). The next line contains 4n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the numbers you need to arrange in the 2n\u2009\u00d7\u20092n-sized matrix.OutputOn a single line print the maximum value of the beauty of the described matrix.Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.ExamplesInputCopy113OutputCopy13InputCopy41 2 3 4OutputCopy14NoteConsider the second sample. You need to arrange the numbers in the matrix as follows:1 23 4Then the beauty of the matrix will equal: 4 + 1 + 2 + 3 + 4 = 14."], "Double Matrix": ["https://codeforces.com/problemset/problem/1162/B", "B. Double Matrixtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two n\u00d7mn\u00d7m matrices containing integers. A sequence of integers is strictly increasing if each next number is greater than the previous one. A row is strictly increasing if all numbers from left to right are strictly increasing. A column is strictly increasing if all numbers from top to bottom are strictly increasing. A matrix is increasing if all rows are strictly increasing and all columns are strictly increasing. For example, the matrix [91110121114][91011111214] is increasing because each individual row and column is strictly increasing. On the other hand, the matrix [1213][1123] is not increasing because the first row is not strictly increasing.Let a position in the ii-th row (from top) and jj-th column (from left) in a matrix be denoted as (i,j)(i,j). In one operation, you can choose any two numbers ii and jj and swap the number located in (i,j)(i,j) in the first matrix with the number in (i,j)(i,j) in the second matrix. In other words, you can swap two numbers in different matrices if they are located in the corresponding positions.You would like to make both matrices increasing by performing some number of operations (possibly none). Determine if it is possible to do this. If it is, print \"Possible\", otherwise, print \"Impossible\".InputThe first line contains two integers nn and mm (1\u2264n,m\u2264501\u2264n,m\u226450)\u00a0\u2014 the dimensions of each matrix.Each of the next nn lines contains mm integers ai1,ai2,\u2026,aimai1,ai2,\u2026,aim (1\u2264aij\u22641091\u2264aij\u2264109)\u00a0\u2014 the number located in position (i,j)(i,j) in the first matrix.Each of the next nn lines contains mm integers bi1,bi2,\u2026,bimbi1,bi2,\u2026,bim (1\u2264bij\u22641091\u2264bij\u2264109)\u00a0\u2014 the number located in position (i,j)(i,j) in the second matrix.OutputPrint a string \"Impossible\" or \"Possible\".ExamplesInputCopy2 2\n2 10\n11 5\n9 4\n3 12\nOutputCopyPossible\nInputCopy2 3\n2 4 5\n4 5 6\n3 6 7\n8 10 11\nOutputCopyPossible\nInputCopy3 2\n1 3\n2 4\n5 10\n3 1\n3 6\n4 8\nOutputCopyImpossible\nNoteThe first example, we can do an operation on the top left and bottom right cells of the matrices. The resulting matrices will be [9111012][9101112] and [2345][2435].In the second example, we don't need to do any operations.In the third example, no matter what we swap, we can't fix the first row to be strictly increasing in both matrices. "], "Mike and Cellphone": ["https://codeforces.com/problemset/problem/689/A", "A. Mike and Cellphonetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputWhile swimming at the beach, Mike has accidentally dropped his cellphone into the water. There was no worry as he bought a cheap replacement phone with an old-fashioned keyboard. The keyboard has only ten digital equal-sized keys, located in the following way:  Together with his old phone, he lost all his contacts and now he can only remember the way his fingers moved when he put some number in. One can formally consider finger movements as a sequence of vectors connecting centers of keys pressed consecutively to put in a number. For example, the finger movements for number \"586\" are the same as finger movements for number \"253\":    Mike has already put in a number by his \"finger memory\" and started calling it, so he is now worrying, can he be sure that he is calling the correct number? In other words, is there any other number, that has the same finger movements?InputThe first line of the input contains the only integer n (1\u2009\u2264\u2009n\u2009\u2264\u20099)\u00a0\u2014 the number of digits in the phone number that Mike put in.The second line contains the string consisting of n digits (characters from '0' to '9') representing the number that Mike put in.OutputIf there is no other phone number with the same finger movements and Mike can be sure he is calling the correct number, print \"YES\" (without quotes) in the only line.Otherwise print \"NO\" (without quotes) in the first line.ExamplesInputCopy3586OutputCopyNOInputCopy209OutputCopyNOInputCopy9123456789OutputCopyYESInputCopy3911OutputCopyYESNoteYou can find the picture clarifying the first sample case in the statement above."], "Point on Spiral": ["https://codeforces.com/problemset/problem/279/A", "A. Point on Spiraltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputValera the horse lives on a plane. The Cartesian coordinate system is defined on this plane. Also an infinite spiral is painted on the plane. The spiral consists of segments: [(0,\u20090),\u2009(1,\u20090)], [(1,\u20090),\u2009(1,\u20091)], [(1,\u20091),\u2009(\u2009-\u20091,\u20091)], [(\u2009-\u20091,\u20091),\u2009(\u2009-\u20091,\u2009\u2009-\u20091)], [(\u2009-\u20091,\u2009\u2009-\u20091),\u2009(2,\u2009\u2009-\u20091)], [(2,\u2009\u2009-\u20091),\u2009(2,\u20092)] and so on. Thus, this infinite spiral passes through each integer point of the plane.Valera the horse lives on the plane at coordinates (0,\u20090). He wants to walk along the spiral to point (x,\u2009y). Valera the horse has four legs, so he finds turning very difficult. Count how many times he will have to turn if he goes along a spiral from point (0,\u20090) to point (x,\u2009y).InputThe first line contains two space-separated integers x and y (|x|,\u2009|y|\u2009\u2264\u2009100).OutputPrint a single integer, showing how many times Valera has to turn.ExamplesInputCopy0 0OutputCopy0InputCopy1 0OutputCopy0InputCopy0 1OutputCopy2InputCopy-1 -1OutputCopy3"], "Arena of Greed": ["https://codeforces.com/problemset/problem/1425/A", "A. Arena of Greedtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLately, Mr. Chanek frequently plays the game Arena of Greed. As the name implies, the game's goal is to find the greediest of them all, who will then be crowned king of Compfestnesia.The game is played by two people taking turns, where Mr. Chanek takes the first turn. Initially, there is a treasure chest containing NN gold coins. The game ends if there are no more gold coins in the chest. In each turn, the players can make one of the following moves:  Take one gold coin from the chest.  Take half of the gold coins on the chest. This move is only available if the number of coins in the chest is even. Both players will try to maximize the number of coins they have. Mr. Chanek asks your help to find the maximum number of coins he can get at the end of the game if both he and the opponent plays optimally.InputThe first line contains a single integer TT (1\u2264T\u2264105)(1\u2264T\u2264105) denotes the number of test cases.The next TT lines each contain a single integer NN (1\u2264N\u22641018)(1\u2264N\u22641018).OutputTT lines, each line is the answer requested by Mr. Chanek.ExampleInputCopy2\n5\n6\nOutputCopy2\n4\nNoteFor the first case, the game is as follows:   Mr. Chanek takes one coin.  The opponent takes two coins.  Mr. Chanek takes one coin.  The opponent takes one coin. For the second case, the game is as follows:   Mr. Chanek takes three coins.  The opponent takes one coin.  Mr. Chanek takes one coin.  The opponent takes one coin. "], "Photographer": ["https://codeforces.com/problemset/problem/203/C", "C. Photographertime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputValera's lifelong ambition was to be a photographer, so he bought a new camera. Every day he got more and more clients asking for photos, and one day Valera needed a program that would determine the maximum number of people he can serve.The camera's memory is d megabytes. Valera's camera can take photos of high and low quality. One low quality photo takes a megabytes of memory, one high quality photo take b megabytes of memory. For unknown reasons, each client asks him to make several low quality photos and several high quality photos. More formally, the i-th client asks to make xi low quality photos and yi high quality photos.Valera wants to serve as many clients per day as possible, provided that they will be pleased with his work. To please the i-th client, Valera needs to give him everything he wants, that is, to make xi low quality photos and yi high quality photos. To make one low quality photo, the camera must have at least a megabytes of free memory space. Similarly, to make one high quality photo, the camera must have at least b megabytes of free memory space. Initially the camera's memory is empty. Valera also does not delete photos from the camera so that the camera's memory gradually fills up.Calculate the maximum number of clients Valera can successfully serve and print the numbers of these clients.InputThe first line contains two integers n and d (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20091\u2009\u2264\u2009d\u2009\u2264\u2009109) \u2014 the number of clients and the camera memory size, correspondingly. The second line contains two integers a and b (1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u2009104) \u2014 the size of one low quality photo and of one high quality photo, correspondingly. Next n lines describe the clients. The i-th line contains two integers xi and yi (0\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009105) \u2014 the number of low quality photos and high quality photos the i-th client wants, correspondingly. All numbers on all lines are separated by single spaces. OutputOn the first line print the answer to the problem \u2014 the maximum number of clients that Valera can successfully serve. Print on the second line the numbers of the client in any order. All numbers must be distinct. If there are multiple answers, print any of them. The clients are numbered starting with 1 in the order in which they are defined in the input data.ExamplesInputCopy3 102 31 42 11 0OutputCopy23 2 InputCopy3 66 61 11 01 0OutputCopy12 "], "Special Offer! Super Price 999 Bourles!": ["https://codeforces.com/problemset/problem/219/B", "B. Special Offer! Super Price 999 Bourles!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarpus is an amateur businessman. Recently he was surprised to find out that the market for paper scissors is completely free! Without further ado, Polycarpus decided to start producing and selling such scissors.Polycaprus calculated that the optimal celling price for such scissors would be p bourles. However, he read somewhere that customers are attracted by prices that say something like \"Special Offer! Super price 999 bourles!\". So Polycarpus decided to lower the price a little if it leads to the desired effect.Polycarpus agrees to lower the price by no more than d bourles so that the number of nines at the end of the resulting price is maximum. If there are several ways to do it, he chooses the maximum possible price.Note, Polycarpus counts only the trailing nines in a price.InputThe first line contains two integers p and d (1\u2009\u2264\u2009p\u2009\u2264\u20091018; 0\u2009\u2264\u2009d\u2009<\u2009p) \u2014 the initial price of scissors and the maximum possible price reduction.Please, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.OutputPrint the required price \u2014 the maximum price that ends with the largest number of nines and that is less than p by no more than d.The required number shouldn't have leading zeroes.ExamplesInputCopy1029 102OutputCopy999InputCopy27191 17OutputCopy27189"], "Arpa and an exam about geometry": ["https://codeforces.com/problemset/problem/851/B", "B. Arpa and an exam about geometrytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputArpa is taking a geometry exam. Here is the last problem of the exam.You are given three points a,\u2009b,\u2009c.Find a point and an angle such that if we rotate the page around the point by the angle, the new position of a is the same as the old position of b, and the new position of b is the same as the old position of c.Arpa is doubting if the problem has a solution or not (i.e. if there exists a point and an angle satisfying the condition). Help Arpa determine if the question has a solution or not.InputThe only line contains six integers ax,\u2009ay,\u2009bx,\u2009by,\u2009cx,\u2009cy (|ax|,\u2009|ay|,\u2009|bx|,\u2009|by|,\u2009|cx|,\u2009|cy|\u2009\u2264\u2009109). It's guaranteed that the points are distinct.OutputPrint \"Yes\" if the problem has a solution, \"No\" otherwise.You can print each letter in any case (upper or lower).ExamplesInputCopy0 1 1 1 1 0OutputCopyYesInputCopy1 1 0 0 1000 1000OutputCopyNoNoteIn the first sample test, rotate the page around (0.5,\u20090.5) by .In the second sample test, you can't find any solution."], "Chessboard": ["https://codeforces.com/problemset/problem/961/C", "C. Chessboardtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputMagnus decided to play a classic chess game. Though what he saw in his locker shocked him! His favourite chessboard got broken into 4 pieces, each of size n by n, n is always odd. And what's even worse, some squares were of wrong color. j-th square of the i-th row of k-th piece of the board has color ak,\u2009i,\u2009j; 1 being black and 0 being white. Now Magnus wants to change color of some squares in such a way that he recolors minimum number of squares and obtained pieces form a valid chessboard. Every square has its color different to each of the neightbouring by side squares in a valid board. Its size should be 2n by 2n. You are allowed to move pieces but not allowed to rotate or flip them.InputThe first line contains odd integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the size of all pieces of the board. Then 4 segments follow, each describes one piece of the board. Each consists of n lines of n characters; j-th one of i-th line is equal to 1 if the square is black initially and 0 otherwise. Segments are separated by an empty line.OutputPrint one number \u2014 minimum number of squares Magnus should recolor to be able to obtain a valid chessboard.ExamplesInputCopy10010OutputCopy1InputCopy3101010101101000101010101011010101010OutputCopy2"], "Maxim and Discounts": ["https://codeforces.com/problemset/problem/261/A", "A. Maxim and Discountstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMaxim always goes to the supermarket on Sundays. Today the supermarket has a special offer of discount systems.There are m types of discounts. We assume that the discounts are indexed from 1 to m. To use the discount number i, the customer takes a special basket, where he puts exactly qi items he buys. Under the terms of the discount system, in addition to the items in the cart the customer can receive at most two items from the supermarket for free. The number of the \"free items\" (0, 1 or 2) to give is selected by the customer. The only condition imposed on the selected \"free items\" is as follows: each of them mustn't be more expensive than the cheapest item out of the qi items in the cart.Maxim now needs to buy n items in the shop. Count the minimum sum of money that Maxim needs to buy them, if he use the discount system optimally well.Please assume that the supermarket has enough carts for any actions. Maxim can use the same discount multiple times. Of course, Maxim can buy items without any discounts.InputThe first line contains integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009105) \u2014 the number of discount types. The second line contains m integers: q1,\u2009q2,\u2009...,\u2009qm (1\u2009\u2264\u2009qi\u2009\u2264\u2009105). The third line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of items Maxim needs. The fourth line contains n integers: a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009104) \u2014 the items' prices.The numbers in the lines are separated by single spaces.OutputIn a single line print a single integer \u2014 the answer to the problem.ExamplesInputCopy12450 50 100 100OutputCopy200InputCopy22 3550 50 50 50 50OutputCopy150InputCopy1171 1 1 1 1 1 1OutputCopy3NoteIn the first sample Maxim needs to buy two items that cost 100 and get a discount for two free items that cost 50. In that case, Maxim is going to pay 200.In the second sample the best strategy for Maxim is to buy 3 items and get 2 items for free using the discount. In that case, Maxim is going to pay 150."], "Hopscotch": ["https://codeforces.com/problemset/problem/141/B", "B. Hopscotchtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSo nearly half of the winter is over and Maria is dreaming about summer. She's fed up with skates and sleds, she was dreaming about Hopscotch all night long. It's a very popular children's game. The game field, the court, looks as is shown in the figure (all blocks are square and are numbered from bottom to top, blocks in the same row are numbered from left to right). Let us describe the hopscotch with numbers that denote the number of squares in the row, staring from the lowest one: 1-1-2-1-2-1-2-(1-2)..., where then the period is repeated (1-2).  The coordinate system is defined as shown in the figure. Side of all the squares are equal and have length a.Maria is a very smart and clever girl, and she is concerned with quite serious issues: if she throws a stone into a point with coordinates (x,\u2009y), then will she hit some square? If the answer is positive, you are also required to determine the number of the square.It is believed that the stone has fallen into the square if it is located strictly inside it. In other words a stone that has fallen on the square border is not considered a to hit a square.InputThe only input line contains three integers: a, x, y, where a (1\u2009\u2264\u2009a\u2009\u2264\u2009100) is the side of the square, x and y (\u2009-\u2009106\u2009\u2264\u2009x\u2009\u2264\u2009106,\u20090\u2009\u2264\u2009y\u2009\u2264\u2009106) are coordinates of the stone.OutputPrint the number of the square, inside which the stone fell. If the stone is on a border of some stone or outside the court, print \"-1\" without the quotes.ExamplesInputCopy1 0 0OutputCopy-1InputCopy3 1 1OutputCopy1InputCopy3 0 10OutputCopy5InputCopy3 0 7OutputCopy-1InputCopy3 4 0OutputCopy-1"], "Chilly Willy": ["https://codeforces.com/problemset/problem/248/B", "B. Chilly Willytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputChilly Willy loves playing with numbers. He only knows prime numbers that are digits yet. These numbers are 2, 3, 5 and 7. But Willy grew rather bored of such numbers, so he came up with a few games that were connected with them.Chilly Willy wants to find the minimum number of length n, such that it is simultaneously divisible by all numbers Willy already knows (2, 3, 5 and 7). Help him with that.A number's length is the number of digits in its decimal representation without leading zeros.InputA single input line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105).OutputPrint a single integer \u2014 the answer to the problem without leading zeroes, or \"-1\" (without the quotes), if the number that meet the problem condition does not exist.ExamplesInputCopy1OutputCopy-1InputCopy5OutputCopy10080"], "Santa Claus and Robot": ["https://codeforces.com/problemset/problem/748/C", "C. Santa Claus and Robottime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSanta Claus has Robot which lives on the infinite grid and can move along its lines. He can also, having a sequence of m points p1,\u2009p2,\u2009...,\u2009pm with integer coordinates, do the following: denote its initial location by p0. First, the robot will move from p0 to p1 along one of the shortest paths between them (please notice that since the robot moves only along the grid lines, there can be several shortest paths). Then, after it reaches p1, it'll move to p2, again, choosing one of the shortest ways, then to p3, and so on, until he has visited all points in the given order. Some of the points in the sequence may coincide, in that case Robot will visit that point several times according to the sequence order.While Santa was away, someone gave a sequence of points to Robot. This sequence is now lost, but Robot saved the protocol of its unit movements. Please, find the minimum possible length of the sequence.InputThe first line of input contains the only positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) which equals the number of unit segments the robot traveled. The second line contains the movements protocol, which consists of n letters, each being equal either L, or R, or U, or D. k-th letter stands for the direction which Robot traveled the k-th unit segment in: L means that it moved to the left, R\u00a0\u2014 to the right, U\u00a0\u2014 to the top and D\u00a0\u2014 to the bottom. Have a look at the illustrations for better explanation.OutputThe only line of input should contain the minimum possible length of the sequence.ExamplesInputCopy4RURDOutputCopy2InputCopy6RRULDDOutputCopy2InputCopy26RRRULURURUULULLLDLDDRDRDLDOutputCopy7InputCopy3RLLOutputCopy2InputCopy4LRLROutputCopy4NoteThe illustrations to the first three tests are given below.  The last example illustrates that each point in the sequence should be counted as many times as it is presented in the sequence."], "Om Nom and Dark Park": ["https://codeforces.com/problemset/problem/526/B", "B. Om Nom and Dark Parktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOm Nom is the main character of a game \"Cut the Rope\". He is a bright little monster who likes visiting friends living at the other side of the park. However the dark old parks can scare even somebody as fearless as Om Nom, so he asks you to help him.  The park consists of 2n\u2009+\u20091\u2009-\u20091 squares connected by roads so that the scheme of the park is a full binary tree of depth n. More formally, the entrance to the park is located at the square 1. The exits out of the park are located at squares 2n,\u20092n\u2009+\u20091,\u2009...,\u20092n\u2009+\u20091\u2009-\u20091 and these exits lead straight to the Om Nom friends' houses. From each square i (2\u2009\u2264\u2009i\u2009<\u20092n\u2009+\u20091) there is a road to the square . Thus, it is possible to go from the park entrance to each of the exits by walking along exactly n roads.    To light the path roads in the evening, the park keeper installed street lights along each road. The road that leads from square i to square  has ai lights.Om Nom loves counting lights on the way to his friend. Om Nom is afraid of spiders who live in the park, so he doesn't like to walk along roads that are not enough lit. What he wants is that the way to any of his friends should have in total the same number of lights. That will make him feel safe. He asked you to help him install additional lights. Determine what minimum number of lights it is needed to additionally place on the park roads so that a path from the entrance to any exit of the park contains the same number of street lights. You may add an arbitrary number of street lights to each of the roads.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u200910) \u2014 the number of roads on the path from the entrance to any exit.The next line contains 2n\u2009+\u20091\u2009-\u20092 numbers a2,\u2009a3,\u2009... a2n\u2009+\u20091\u2009-\u20091 \u2014 the initial numbers of street lights on each road of the park. Here ai is the number of street lights on the road between squares i and . All numbers ai are positive integers, not exceeding 100.OutputPrint the minimum number of street lights that we should add to the roads of the park to make Om Nom feel safe.ExamplesInputCopy21 2 3 4 5 6OutputCopy5NotePicture for the sample test. Green color denotes the additional street lights.  "], "Not simply beatiful strings": ["https://codeforces.com/problemset/problem/955/B", "B. Not simply beatiful stringstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call a string adorable if its letters can be realigned in such a way that they form two consequent groups of equal symbols (note that different groups must contain different symbols). For example, ababa is adorable (you can transform it to aaabb, where the first three letters form a group of a-s and others \u2014 a group of b-s), but cccc is not since in each possible consequent partition letters in these two groups coincide.You're given a string s. Check whether it can be split into two non-empty subsequences such that the strings formed by these subsequences are adorable. Here a subsequence is an arbitrary set of indexes of the string.InputThe only line contains s (1\u2009\u2264\u2009|s|\u2009\u2264\u2009105) consisting of lowercase latin letters.OutputPrint \u00abYes\u00bb if the string can be split according to the criteria above or \u00abNo\u00bb otherwise.Each letter can be printed in arbitrary case.ExamplesInputCopyababaOutputCopyYesInputCopyzzcxxOutputCopyYesInputCopyyeeeOutputCopyNoNoteIn sample case two zzcxx can be split into subsequences zc and zxx each of which is adorable.There's no suitable partition in sample case three."], "Useful Decomposition": ["https://codeforces.com/problemset/problem/981/C", "C. Useful Decompositiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputRamesses knows a lot about problems involving trees (undirected connected graphs without cycles)!He created a new useful tree decomposition, but he does not know how to construct it, so he asked you for help!The decomposition is the splitting the edges of the tree in some simple paths in such a way that each two paths have at least one common vertex. Each edge of the tree should be in exactly one path.Help Remesses, find such a decomposition of the tree or derermine that there is no such decomposition.InputThe first line contains a single integer nn (2\u2264n\u22641052\u2264n\u2264105) the number of nodes in the tree.Each of the next n\u2009\u2212\u20091n\u2009\u2212\u20091 lines contains two integers aiai and bibi (1\u2264ai,bi\u2264n1\u2264ai,bi\u2264n, ai\u2260biai\u2260bi)\u00a0\u2014 the edges of the tree. It is guaranteed that the given edges form a tree.OutputIf there are no decompositions, print the only line containing \"No\".Otherwise in the first line print \"Yes\", and in the second line print the number of paths in the decomposition mm. Each of the next mm lines should contain two integers uiui, vivi (1\u2264ui,vi\u2264n1\u2264ui,vi\u2264n, ui\u2260viui\u2260vi) denoting that one of the paths in the decomposition is the simple path between nodes uiui and vivi. Each pair of paths in the decomposition should have at least one common vertex, and each edge of the tree should be presented in exactly one path. You can print the paths and the ends of each path in arbitrary order.If there are multiple decompositions, print any.ExamplesInputCopy41 22 33 4OutputCopyYes11 4InputCopy61 22 33 42 53 6OutputCopyNoInputCopy51 21 31 41 5OutputCopyYes41 21 31 41 5NoteThe tree from the first example is shown on the picture below:  The number next to each edge corresponds to the path number in the decomposition. It is easy to see that this decomposition suits the required conditions.The tree from the second example is shown on the picture below:  We can show that there are no valid decompositions of this tree.The tree from the third example is shown on the picture below:  The number next to each edge corresponds to the path number in the decomposition. It is easy to see that this decomposition suits the required conditions."], "Football": ["https://codeforces.com/problemset/problem/417/C", "C. Footballtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day, at the \"Russian Code Cup\" event it was decided to play football as an out of competition event. All participants was divided into n teams and played several matches, two teams could not play against each other more than once.The appointed Judge was the most experienced member \u2014 Pavel. But since he was the wisest of all, he soon got bored of the game and fell asleep. Waking up, he discovered that the tournament is over and the teams want to know the results of all the matches.Pavel didn't want anyone to discover about him sleeping and not keeping an eye on the results, so he decided to recover the results of all games. To do this, he asked all the teams and learned that the real winner was friendship, that is, each team beat the other teams exactly k times. Help Pavel come up with chronology of the tournir that meets all the conditions, or otherwise report that there is no such table.InputThe first line contains two integers \u2014 n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u20091000).OutputIn the first line print an integer m \u2014 number of the played games. The following m lines should contain the information about all the matches, one match per line. The i-th line should contain two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n; ai\u2009\u2260\u2009bi). The numbers ai and bi mean, that in the i-th match the team with number ai won against the team with number bi. You can assume, that the teams are numbered from 1 to n.If a tournir that meets the conditions of the problem does not exist, then print -1.ExamplesInputCopy3 1OutputCopy31 22 33 1"], "Petya and Inequiations": ["https://codeforces.com/problemset/problem/111/A", "A. Petya and Inequiationstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Petya loves inequations. Help him find n positive integers a1,\u2009a2,\u2009...,\u2009an, such that the following two conditions are satisfied: a12\u2009+\u2009a22\u2009+\u2009...\u2009+\u2009an2\u2009\u2265\u2009x a1\u2009+\u2009a2\u2009+\u2009...\u2009+\u2009an\u2009\u2264\u2009yInputThe first line contains three space-separated integers n, x and y (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20091\u2009\u2264\u2009x\u2009\u2264\u20091012,\u20091\u2009\u2264\u2009y\u2009\u2264\u2009106).Please do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is recommended to use cin, cout streams or the %I64d specificator.OutputPrint n positive integers that satisfy the conditions, one integer per line. If such numbers do not exist, print a single number \"-1\". If there are several solutions, print any of them.ExamplesInputCopy5 15 15OutputCopy44112InputCopy2 3 2OutputCopy-1InputCopy1 99 11OutputCopy11"], "The Doctor Meets Vader (Easy)": ["https://codeforces.com/problemset/problem/1184/B1", "B1. The Doctor Meets Vader (Easy)time limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHeidi and Doctor Who hopped out of the TARDIS and found themselves at EPFL in 2018. They were surrounded by stormtroopers and Darth Vader was approaching. Miraculously, they managed to escape to a nearby rebel base but the Doctor was very confused. Heidi reminded him that last year's HC2 theme was Star Wars. Now he understood, and he's ready to face the evils of the Empire!The rebels have ss spaceships, each with a certain attacking power aa.They want to send their spaceships to destroy the empire bases and steal enough gold and supplies in order to keep the rebellion alive.The empire has bb bases, each with a certain defensive power dd, and a certain amount of gold gg.A spaceship can attack all the bases which have a defensive power less than or equal to its attacking power.If a spaceship attacks a base, it steals all the gold in that base.The rebels are still undecided which spaceship to send out first, so they asked for the Doctor's help. They would like to know, for each spaceship, the maximum amount of gold it can steal.InputThe first line contains integers ss and bb (1\u2264s,b\u22641051\u2264s,b\u2264105), the number of spaceships and the number of bases, respectively.The second line contains ss integers aa (0\u2264a\u22641090\u2264a\u2264109), the attacking power of each spaceship.The next bb lines contain integers d,gd,g (0\u2264d\u22641090\u2264d\u2264109, 0\u2264g\u22641040\u2264g\u2264104), the defensive power and the gold of each base, respectively.OutputPrint ss integers, the maximum amount of gold each spaceship can steal, in the same order as the spaceships are given in the input.ExampleInputCopy5 4\n1 3 5 2 4\n0 1\n4 2\n2 8\n9 4\nOutputCopy1 9 11 9 11\nNoteThe first spaceship can only attack the first base.The second spaceship can attack the first and third bases.The third spaceship can attack the first, second and third bases."], "Limit": ["https://codeforces.com/problemset/problem/197/B", "B. Limittime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two polynomials:  P(x)\u2009=\u2009a0\u00b7xn\u2009+\u2009a1\u00b7xn\u2009-\u20091\u2009+\u2009...\u2009+\u2009an\u2009-\u20091\u00b7x\u2009+\u2009an and  Q(x)\u2009=\u2009b0\u00b7xm\u2009+\u2009b1\u00b7xm\u2009-\u20091\u2009+\u2009...\u2009+\u2009bm\u2009-\u20091\u00b7x\u2009+\u2009bm.  Calculate limit .InputThe first line contains two space-separated integers n and m (0\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 degrees of polynomials P(x) and Q(x) correspondingly.The second line contains n\u2009+\u20091 space-separated integers \u2014 the factors of polynomial P(x): a0, a1, ..., an\u2009-\u20091, an (\u2009-\u2009100\u2009\u2264\u2009ai\u2009\u2264\u2009100,\u2009a0\u2009\u2260\u20090).The third line contains m\u2009+\u20091 space-separated integers \u2014 the factors of polynomial Q(x): b0, b1, ..., bm\u2009-\u20091, bm (\u2009-\u2009100\u2009\u2264\u2009bi\u2009\u2264\u2009100,\u2009b0\u2009\u2260\u20090).OutputIf the limit equals \u2009+\u2009\u221e, print \"Infinity\" (without quotes). If the limit equals \u2009-\u2009\u221e, print \"-Infinity\" (without the quotes).If the value of the limit equals zero, print \"0/1\" (without the quotes).Otherwise, print an irreducible fraction \u2014 the value of limit , in the format \"p/q\" (without the quotes), where p is the \u2014 numerator, q (q\u2009>\u20090) is the denominator of the fraction.ExamplesInputCopy2 11 1 12 5OutputCopyInfinityInputCopy1 0-1 32OutputCopy-InfinityInputCopy0 111 0OutputCopy0/1InputCopy2 22 1 64 5 -7OutputCopy1/2InputCopy1 19 0-5 2OutputCopy-9/5NoteLet's consider all samples:           You can learn more about the definition and properties of limits if you follow the link: http://en.wikipedia.org/wiki/Limit_of_a_function"], "Dorm Water Supply": ["https://codeforces.com/problemset/problem/107/A", "A. Dorm Water Supplytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe German University in Cairo (GUC) dorm houses are numbered from 1 to n. Underground water pipes connect these houses together. Each pipe has certain direction (water can flow only in this direction and not vice versa), and diameter (which characterizes the maximal amount of water it can handle).For each house, there is at most one pipe going into it and at most one pipe going out of it. With the new semester starting, GUC student and dorm resident, Lulu, wants to install tanks and taps at the dorms. For every house with an outgoing water pipe and without an incoming water pipe, Lulu should install a water tank at that house. For every house with an incoming water pipe and without an outgoing water pipe, Lulu should install a water tap at that house. Each tank house will convey water to all houses that have a sequence of pipes from the tank to it. Accordingly, each tap house will receive water originating from some tank house.In order to avoid pipes from bursting one week later (like what happened last semester), Lulu also has to consider the diameter of the pipes. The amount of water each tank conveys should not exceed the diameter of the pipes connecting a tank to its corresponding tap. Lulu wants to find the maximal amount of water that can be safely conveyed from each tank to its corresponding tap.InputThe first line contains two space-separated integers n and p (1\u2009\u2264\u2009n\u2009\u2264\u20091000,\u20090\u2009\u2264\u2009p\u2009\u2264\u2009n) \u2014 the number of houses and the number of pipes correspondingly. Then p lines follow \u2014 the description of p pipes. The i-th line contains three integers ai bi di, indicating a pipe of diameter di going from house ai to house bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n,\u2009ai\u2009\u2260\u2009bi,\u20091\u2009\u2264\u2009di\u2009\u2264\u2009106).It is guaranteed that for each house there is at most one pipe going into it and at most one pipe going out of it.OutputPrint integer t in the first line \u2014 the number of tank-tap pairs of houses.For the next t lines, print 3 integers per line, separated by spaces: tanki, tapi, and diameteri, where tanki\u2009\u2260\u2009tapi (1\u2009\u2264\u2009i\u2009\u2264\u2009t). Here tanki and tapi are indexes of tank and tap houses respectively, and diameteri is the maximum amount of water that can be conveyed. All the t lines should be ordered (increasingly) by tanki.ExamplesInputCopy3 21 2 102 3 20OutputCopy11 3 10InputCopy3 31 2 202 3 103 1 5OutputCopy0InputCopy4 21 2 603 4 50OutputCopy21 2 603 4 50"], "Maximal Binary Matrix": ["https://codeforces.com/problemset/problem/803/A", "A. Maximal Binary Matrixtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given matrix with n rows and n columns filled with zeroes. You should put k ones in it in such a way that the resulting matrix is symmetrical with respect to the main diagonal (the diagonal that goes from the top left to the bottom right corner) and is lexicographically maximal.One matrix is lexicographically greater than the other if the first different number in the first different row from the top in the first matrix is greater than the corresponding number in the second one.If there exists no such matrix then output -1.InputThe first line consists of two numbers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100, 0\u2009\u2264\u2009k\u2009\u2264\u2009106).OutputIf the answer exists then output resulting matrix. Otherwise output -1.ExamplesInputCopy2 1OutputCopy1 0 0 0 InputCopy3 2OutputCopy1 0 0 0 1 0 0 0 0 InputCopy2 5OutputCopy-1"], "Gabriel and Caterpillar": ["https://codeforces.com/problemset/problem/652/A", "A. Gabriel and Caterpillartime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe 9-th grade student Gabriel noticed a caterpillar on a tree when walking around in a forest after the classes. The caterpillar was on the height h1 cm from the ground. On the height h2 cm (h2\u2009>\u2009h1) on the same tree hung an apple and the caterpillar was crawling to the apple.Gabriel is interested when the caterpillar gets the apple. He noted that the caterpillar goes up by a cm per hour by day and slips down by b cm per hour by night.In how many days Gabriel should return to the forest to see the caterpillar get the apple. You can consider that the day starts at 10 am and finishes at 10 pm. Gabriel's classes finish at 2 pm. You can consider that Gabriel noticed the caterpillar just after the classes at 2 pm.Note that the forest is magic so the caterpillar can slip down under the ground and then lift to the apple.InputThe first line contains two integers h1,\u2009h2 (1\u2009\u2264\u2009h1\u2009<\u2009h2\u2009\u2264\u2009105) \u2014 the heights of the position of the caterpillar and the apple in centimeters.The second line contains two integers a,\u2009b (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009105) \u2014 the distance the caterpillar goes up by day and slips down by night, in centimeters per hour.OutputPrint the only integer k \u2014 the number of days Gabriel should wait to return to the forest and see the caterpillar getting the apple.If the caterpillar can't get the apple print the only integer \u2009-\u20091.ExamplesInputCopy10 302 1OutputCopy1InputCopy10 131 1OutputCopy0InputCopy10 191 2OutputCopy-1InputCopy1 505 4OutputCopy1NoteIn the first example at 10 pm of the first day the caterpillar gets the height 26. At 10 am of the next day it slips down to the height 14. And finally at 6 pm of the same day the caterpillar gets the apple.Note that in the last example the caterpillar was slipping down under the ground and getting the apple on the next day."], "Save the problem!": ["https://codeforces.com/problemset/problem/865/A", "A. Save the problem!time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAttention: we lost all the test cases for this problem, so instead of solving the problem, we need you to generate test cases. We're going to give you the answer, and you need to print a test case that produces the given answer. The original problem is in the following paragraph.People don't use cash as often as they used to. Having a credit card solves some of the hassles of cash, such as having to receive change when you can't form the exact amount of money needed to purchase an item. Typically cashiers will give you as few coins as possible in change, but they don't have to. For example, if your change is 30 cents, a cashier could give you a 5 cent piece and a 25 cent piece, or they could give you three 10 cent pieces, or ten 1 cent pieces, two 5 cent pieces, and one 10 cent piece. Altogether there are 18 different ways to make 30 cents using only 1 cent pieces, 5 cent pieces, 10 cent pieces, and 25 cent pieces. Two ways are considered different if they contain a different number of at least one type of coin. Given the denominations of the coins and an amount of change to be made, how many different ways are there to make change?As we mentioned before, we lost all the test cases for this problem, so we're actually going to give you the number of ways, and want you to produce a test case for which the number of ways is the given number. There could be many ways to achieve this (we guarantee there's always at least one), so you can print any, as long as it meets the constraints described below.InputInput will consist of a single integer A (1\u2009\u2264\u2009A\u2009\u2264\u2009105), the desired number of ways.OutputIn the first line print integers N and M (1\u2009\u2264\u2009N\u2009\u2264\u2009106,\u20091\u2009\u2264\u2009M\u2009\u2264\u200910), the amount of change to be made, and the number of denominations, respectively.Then print M integers D1,\u2009D2,\u2009...,\u2009DM (1\u2009\u2264\u2009Di\u2009\u2264\u2009106), the denominations of the coins. All denominations must be distinct: for any i\u2009\u2260\u2009j we must have Di\u2009\u2260\u2009Dj.If there are multiple tests, print any of them. You can print denominations in atbitrary order.ExamplesInputCopy18OutputCopy30 41 5 10 25InputCopy3OutputCopy20 25 2InputCopy314OutputCopy183 46 5 2 139"], "Multithreading": ["https://codeforces.com/problemset/problem/270/B", "B. Multithreadingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEmuskald is addicted to Codeforces, and keeps refreshing the main page not to miss any changes in the \"recent actions\" list. He likes to read thread conversations where each thread consists of multiple messages.Recent actions shows a list of n different threads ordered by the time of the latest message in the thread. When a new message is posted in a thread that thread jumps on the top of the list. No two messages of different threads are ever posted at the same time.Emuskald has just finished reading all his opened threads and refreshes the main page for some more messages to feed his addiction. He notices that no new threads have appeared in the list and at the i-th place in the list there is a thread that was at the ai-th place before the refresh. He doesn't want to waste any time reading old messages so he wants to open only threads with new messages.Help Emuskald find out the number of threads that surely have new messages. A thread x surely has a new message if there is no such sequence of thread updates (posting messages) that both conditions hold:   thread x is not updated (it has no new messages);  the list order 1, 2, ..., n changes to a1, a2, ..., an. InputThe first line of input contains an integer n, the number of threads (1\u2009\u2264\u2009n\u2009\u2264\u2009105). The next line contains a list of n space-separated integers a1, a2, ..., an where ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009n) is the old position of the i-th thread in the new list. It is guaranteed that all of the ai are distinct.OutputOutput a single integer \u2014 the number of threads that surely contain a new message.ExamplesInputCopy55 2 1 3 4OutputCopy2InputCopy31 2 3OutputCopy0InputCopy44 3 2 1OutputCopy3NoteIn the first test case, threads 2 and 5 are placed before the thread 1, so these threads must contain new messages. Threads 1, 3 and 4 may contain no new messages, if only threads 2 and 5 have new messages.In the second test case, there may be no new messages at all, since the thread order hasn't changed.In the third test case, only thread 1 can contain no new messages."], "Tic-Tac-Toe": ["https://codeforces.com/problemset/problem/907/B", "B. Tic-Tac-Toetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTwo bears are playing tic-tac-toe via mail. It's boring for them to play usual tic-tac-toe game, so they are a playing modified version of this game. Here are its rules.The game is played on the following field.  Players are making moves by turns. At first move a player can put his chip in any cell of any small field. For following moves, there are some restrictions: if during last move the opposite player put his chip to cell with coordinates (xl,\u2009yl) in some small field, the next move should be done in one of the cells of the small field with coordinates (xl,\u2009yl). For example, if in the first move a player puts his chip to lower left cell of central field, then the second player on his next move should put his chip into some cell of lower left field (pay attention to the first test case). If there are no free cells in the required field, the player can put his chip to any empty cell on any field.You are given current state of the game and coordinates of cell in which the last move was done. You should find all cells in which the current player can put his chip.A hare works as a postman in the forest, he likes to foul bears. Sometimes he changes the game field a bit, so the current state of the game could be unreachable. However, after his changes the cell where the last move was done is not empty. You don't need to find if the state is unreachable or not, just output possible next moves according to the rules.InputFirst 11 lines contains descriptions of table with 9 rows and 9 columns which are divided into 9 small fields by spaces and empty lines. Each small field is described by 9 characters without spaces and empty lines. character \"x\" (ASCII-code 120) means that the cell is occupied with chip of the first player, character \"o\" (ASCII-code 111) denotes a field occupied with chip of the second player, character \".\" (ASCII-code 46) describes empty cell.The line after the table contains two integers x and y (1\u2009\u2264\u2009x,\u2009y\u2009\u2264\u20099). They describe coordinates of the cell in table where the last move was done. Rows in the table are numbered from up to down and columns are numbered from left to right.It's guaranteed that cell where the last move was done is filled with \"x\" or \"o\". Also, it's guaranteed that there is at least one empty cell. It's not guaranteed that current state of game is reachable.OutputOutput the field in same format with characters \"!\" (ASCII-code 33) on positions where the current player can put his chip. All other cells should not be modified.ExamplesInputCopy... ... ...... ... ...... ... ...... ... ...... ... ...... x.. ...... ... ...... ... ...... ... ...6 4OutputCopy... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... x.. ... !!! ... ... !!! ... ... !!! ... ... InputCopyxoo x.. x..ooo ... ...ooo ... ...x.. x.. x..... ... ...... ... ...x.. x.. x..... ... ...... ... ...7 4OutputCopyxoo x!! x!! ooo !!! !!! ooo !!! !!! x!! x!! x!! !!! !!! !!! !!! !!! !!! x!! x!! x!! !!! !!! !!! !!! !!! !!! InputCopyo.. ... ...... ... ...... ... ...... xxx ...... xox ...... ooo ...... ... ...... ... ...... ... ...5 5OutputCopyo!! !!! !!! !!! !!! !!! !!! !!! !!! !!! xxx !!! !!! xox !!! !!! ooo !!! !!! !!! !!! !!! !!! !!! !!! !!! !!! NoteIn the first test case the first player made a move to lower left cell of central field, so the second player can put a chip only to cells of lower left field.In the second test case the last move was done to upper left cell of lower central field, however all cells in upper left field are occupied, so the second player can put his chip to any empty cell.In the third test case the last move was done to central cell of central field, so current player can put his chip to any cell of central field, which is already occupied, so he can move anywhere. Pay attention that this state of the game is unreachable."], "Ring road": ["https://codeforces.com/problemset/problem/24/A", "A. Ring roadtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputNowadays the one-way traffic is introduced all over the world in order to improve driving safety and reduce traffic jams. The government of Berland decided to keep up with new trends. Formerly all n cities of Berland were connected by n two-way roads in the ring, i. e. each city was connected directly to exactly two other cities, and from each city it was possible to get to any other city. Government of Berland introduced one-way traffic on all n roads, but it soon became clear that it's impossible to get from some of the cities to some others. Now for each road is known in which direction the traffic is directed at it, and the cost of redirecting the traffic. What is the smallest amount of money the government should spend on the redirecting of roads so that from every city you can get to any other?InputThe first line contains integer n (3\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 amount of cities (and roads) in Berland. Next n lines contain description of roads. Each road is described by three integers ai, bi, ci (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n,\u2009ai\u2009\u2260\u2009bi,\u20091\u2009\u2264\u2009ci\u2009\u2264\u2009100) \u2014 road is directed from city ai to city bi, redirecting the traffic costs ci.OutputOutput single integer \u2014 the smallest amount of money the government should spend on the redirecting of roads so that from every city you can get to any other.ExamplesInputCopy31 3 11 2 13 2 1OutputCopy1InputCopy31 3 11 2 53 2 1OutputCopy2InputCopy61 5 45 3 82 4 151 6 162 3 234 6 42OutputCopy39InputCopy41 2 92 3 83 4 74 1 5OutputCopy0"], "Anfisa the Monkey": ["https://codeforces.com/problemset/problem/44/E", "E. Anfisa the Monkeytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnfisa the monkey learns to type. She is yet unfamiliar with the \"space\" key and can only type in lower-case Latin letters. Having typed for a fairly long line, Anfisa understood that it would be great to divide what she has written into k lines not shorter than a and not longer than b, for the text to resemble human speech more. Help Anfisa.InputThe first line contains three integers k, a and b (1\u2009\u2264\u2009k\u2009\u2264\u2009200, 1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u2009200). The second line contains a sequence of lowercase Latin letters \u2014 the text typed by Anfisa. It is guaranteed that the given line is not empty and its length does not exceed 200 symbols.OutputPrint k lines, each of which contains no less than a and no more than b symbols \u2014 Anfisa's text divided into lines. It is not allowed to perform any changes in the text, such as: deleting or adding symbols, changing their order, etc. If the solution is not unique, print any of them. If there is no solution, print \"No solution\" (without quotes). ExamplesInputCopy3 2 5abrakadabraOutputCopyabrakadabraInputCopy4 1 2abrakadabraOutputCopyNo solution"], "Flamingoes of Mystery": ["https://codeforces.com/problemset/problem/1425/F", "F. Flamingoes of Mysterytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is an interactive problem. You have to use a flush operation right after printing each line. For example, in C++ you should use the function fflush(stdout), in Java \u2014 System.out.flush(), in Pascal \u2014 flush(output) and in Python \u2014 sys.stdout.flush().Mr. Chanek wants to buy a flamingo to accompany his chickens on his farm. Before going to the pet shop, Mr. Chanek stops at an animal festival to have fun. It turns out there is a carnival game with a flamingo as the prize.There are NN mysterious cages, which are numbered from 11 to NN. Cage ii has AiAi (0\u2264Ai\u2264103)(0\u2264Ai\u2264103) flamingoes inside (1\u2264i\u2264N)(1\u2264i\u2264N). However, the game master keeps the number of flamingoes inside a secret. To win the flamingo, Mr. Chanek must guess the number of flamingoes in each cage.Coincidentally, Mr. Chanek has NN coins. Each coin can be used to ask once, what is the total number of flamingoes inside cages numbered LL to RR inclusive? With L<RL<R.InputUse standard input to read the responses of your questions.Initially, the judge will give an integer NN (3\u2264N\u2264103)(3\u2264N\u2264103), the number of cages, and the number of coins Mr. Chanek has.For each of your questions, the jury will give an integer that denotes the number of flamingoes from cage LL to RR inclusive.If your program does not guess the flamingoes or ask other questions, you will get \"Wrong Answer\". Of course, if your program asks more questions than the allowed number, your program will get \"Wrong Answer\".OutputTo ask questions, your program must use standard output.Then, you can ask at most NN questions. Questions are asked in the format \"? L R\", (1\u2264L<R\u2264N1\u2264L<R\u2264N). To guess the flamingoes, print a line that starts with \"!\" followed by NN integers where the ii-th integer denotes the number of flamingo in cage ii. After answering, your program must terminate or will receive the \"idle limit exceeded\" verdict. You can only guess the flamingoes once.ExamplesInputCopy6\u00a05\u00a015\u00a010\u00a0OutputCopy\u00a0? 1 2\u00a0? 5 6\u00a0? 3 4\u00a0! 1 4 4 6 7 8NoteIn the sample input, the correct flamingoes amount is [1,4,4,6,7,8][1,4,4,6,7,8]."], "Little Artem and Matrix": ["https://codeforces.com/problemset/problem/641/B", "B. Little Artem and Matrixtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Artem likes electronics. He can spend lots of time making different schemas and looking for novelties in the nearest electronics store. The new control element was delivered to the store recently and Artem immediately bought it.That element can store information about the matrix of integers size n\u2009\u00d7\u2009m. There are n\u2009+\u2009m inputs in that element, i.e. each row and each column can get the signal. When signal comes to the input corresponding to some row, this row cyclically shifts to the left, that is the first element of the row becomes last element, second element becomes first and so on. When signal comes to the input corresponding to some column, that column shifts cyclically to the top, that is first element of the column becomes last element, second element becomes first and so on. Rows are numbered with integers from 1 to n from top to bottom, while columns are numbered with integers from 1 to m from left to right.Artem wants to carefully study this element before using it. For that purpose he is going to set up an experiment consisting of q turns. On each turn he either sends the signal to some input or checks what number is stored at some position of the matrix.Artem has completed his experiment and has written down the results, but he has lost the chip! Help Artem find any initial matrix that will match the experiment results. It is guaranteed that experiment data is consistent, which means at least one valid matrix exists.InputThe first line of the input contains three integers n, m and q (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009q\u2009\u2264\u200910\u2009000)\u00a0\u2014 dimensions of the matrix and the number of turns in the experiment, respectively.Next q lines contain turns descriptions, one per line. Each description starts with an integer ti (1\u2009\u2264\u2009ti\u2009\u2264\u20093) that defines the type of the operation. For the operation of first and second type integer ri (1\u2009\u2264\u2009ri\u2009\u2264\u2009n) or ci (1\u2009\u2264\u2009ci\u2009\u2264\u2009m) follows, while for the operations of the third type three integers ri, ci and xi (1\u2009\u2264\u2009ri\u2009\u2264\u2009n, 1\u2009\u2264\u2009ci\u2009\u2264\u2009m, \u2009-\u2009109\u2009\u2264\u2009xi\u2009\u2264\u2009109) are given.Operation of the first type (ti\u2009=\u20091) means that signal comes to the input corresponding to row ri, that is it will shift cyclically. Operation of the second type (ti\u2009=\u20092) means that column ci will shift cyclically. Finally, operation of the third type means that at this moment of time cell located in the row ri and column ci stores value xi.OutputPrint the description of any valid initial matrix as n lines containing m integers each. All output integers should not exceed 109 by their absolute value.If there are multiple valid solutions, output any of them.ExamplesInputCopy2 2 62 12 23 1 1 13 2 2 23 1 2 83 2 1 8OutputCopy8 2 1 8 InputCopy3 3 21 23 2 2 5OutputCopy0 0 0 0 0 5 0 0 0 "], "Serial Time!": ["https://codeforces.com/problemset/problem/60/B", "B. Serial Time!time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Cereal Guy's friend Serial Guy likes to watch soap operas. An episode is about to start, and he hasn't washed his plate yet. But he decided to at least put in under the tap to be filled with water. The plate can be represented by a parallelepiped k\u2009\u00d7\u2009n\u2009\u00d7\u2009m, that is, it has k layers (the first layer is the upper one), each of which is a rectangle n\u2009\u00d7\u2009m with empty squares ('.') and obstacles ('#'). The water can only be present in the empty squares. The tap is positioned above the square (x,\u2009y) of the first layer, it is guaranteed that this square is empty. Every minute a cubical unit of water falls into the plate. Find out in how many minutes the Serial Guy should unglue himself from the soap opera and turn the water off for it not to overfill the plate. That is, you should find the moment of time when the plate is absolutely full and is going to be overfilled in the next moment.Note: the water fills all the area within reach (see sample 4). Water flows in each of the 6 directions, through faces of 1\u2009\u00d7\u20091\u2009\u00d7\u20091 cubes.InputThe first line contains three numbers k, n, m (1\u2009\u2264\u2009k,\u2009n,\u2009m\u2009\u2264\u200910) which are the sizes of the plate. Then follow k rectangles consisting of n lines each containing m characters '.' or '#', which represents the \"layers\" of the plate in the order from the top to the bottom. The rectangles are separated by empty lines (see the samples). The last line contains x and y (1\u2009\u2264\u2009x\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009y\u2009\u2264\u2009m) which are the tap's coordinates. x is the number of the line and y is the number of the column. Lines of each layer are numbered from left to right by the integers from 1 to n, columns of each layer are numbered from top to bottom by the integers from 1 to m.OutputThe answer should contain a single number, showing in how many minutes the plate will be filled.ExamplesInputCopy1 1 1.1 1OutputCopy1InputCopy2 1 1.#1 1OutputCopy1InputCopy2 2 2.###....1 1OutputCopy5InputCopy3 2 2#.###..#....1 2OutputCopy7InputCopy3 3 3.#.#####..#######..........1 1OutputCopy13"], "Dima and Sequence": ["https://codeforces.com/problemset/problem/272/B", "B. Dima and Sequencetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDima got into number sequences. Now he's got sequence a1,\u2009a2,\u2009...,\u2009an, consisting of n positive integers. Also, Dima has got a function f(x), which can be defined with the following recurrence:  f(0)\u2009=\u20090;  f(2\u00b7x)\u2009=\u2009f(x);  f(2\u00b7x\u2009+\u20091)\u2009=\u2009f(x)\u2009+\u20091. Dima wonders, how many pairs of indexes (i,\u2009j) (1\u2009\u2264\u2009i\u2009<\u2009j\u2009\u2264\u2009n) are there, such that f(ai)\u2009=\u2009f(aj). Help him, count the number of such pairs. InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105). The second line contains n positive integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109).The numbers in the lines are separated by single spaces.OutputIn a single line print the answer to the problem.Please, don't use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.ExamplesInputCopy31 2 4OutputCopy3InputCopy35 3 1OutputCopy1NoteIn the first sample any pair (i,\u2009j) will do, so the answer is 3.In the second sample only pair (1,\u20092) will do."], "Hongcow Solves A Puzzle": ["https://codeforces.com/problemset/problem/745/B", "B. Hongcow Solves A Puzzletime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHongcow likes solving puzzles.One day, Hongcow finds two identical puzzle pieces, with the instructions \"make a rectangle\" next to them. The pieces can be described by an n by m grid of characters, where the character 'X' denotes a part of the puzzle and '.' denotes an empty part of the grid. It is guaranteed that the puzzle pieces are one 4-connected piece. See the input format and samples for the exact details on how a jigsaw piece will be specified.The puzzle pieces are very heavy, so Hongcow cannot rotate or flip the puzzle pieces. However, he is allowed to move them in any directions. The puzzle pieces also cannot overlap.You are given as input the description of one of the pieces. Determine if it is possible to make a rectangle from two identical copies of the given input. The rectangle should be solid, i.e. there should be no empty holes inside it or on its border. Keep in mind that Hongcow is not allowed to flip or rotate pieces and they cannot overlap, i.e. no two 'X' from different pieces can share the same position.InputThe first line of input will contain two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009500), the dimensions of the puzzle piece.The next n lines will describe the jigsaw piece. Each line will have length m and will consist of characters '.' and 'X' only. 'X' corresponds to a part of the puzzle piece, '.' is an empty space.It is guaranteed there is at least one 'X' character in the input and that the 'X' characters form a 4-connected region.OutputOutput \"YES\" if it is possible for Hongcow to make a rectangle. Output \"NO\" otherwise.ExamplesInputCopy2 3XXXXXXOutputCopyYESInputCopy2 2.XXXOutputCopyNOInputCopy5 5.......X.................OutputCopyYESNoteFor the first sample, one example of a rectangle we can form is as follows 111222111222For the second sample, it is impossible to put two of those pieces without rotating or flipping to form a rectangle.In the third sample, we can shift the first tile by one to the right, and then compose the following rectangle: .......XX................"], "Berstagram": ["https://codeforces.com/problemset/problem/1250/A", "A. Berstagramtime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputPolycarp recently signed up to a new social network Berstagram. He immediately published nn posts there. He assigned numbers from 11 to nn to all posts and published them one by one. So, just after publishing Polycarp's news feed contained posts from 11 to nn \u2014 the highest post had number 11, the next one had number 22, ..., the lowest post had number nn.After that he wrote down all likes from his friends. Likes were coming consecutively from the 11-st one till the mm-th one. You are given a sequence a1,a2,\u2026,ama1,a2,\u2026,am (1\u2264aj\u2264n1\u2264aj\u2264n), where ajaj is the post that received the jj-th like.News feed in Berstagram works in the following manner. Let's assume the jj-th like was given to post ajaj. If this post is not the highest (first) one then it changes its position with the one above. If ajaj is the highest post nothing changes. For example, if n=3n=3, m=5m=5 and a=[3,2,1,3,3]a=[3,2,1,3,3], then Polycarp's news feed had the following states:  before the first like: [1,2,3][1,2,3];  after the first like: [1,3,2][1,3,2];  after the second like: [1,2,3][1,2,3];  after the third like: [1,2,3][1,2,3];  after the fourth like: [1,3,2][1,3,2];  after the fifth like: [3,1,2][3,1,2]. Polycarp wants to know the highest (minimum) and the lowest (maximum) positions for each post. Polycarp considers all moments of time, including the moment \"before all likes\".InputThe first line contains two integer numbers nn and mm (1\u2264n\u22641051\u2264n\u2264105, 1\u2264m\u22644\u22c51051\u2264m\u22644\u22c5105) \u2014 number of posts and number of likes. The second line contains integers a1,a2,\u2026,ama1,a2,\u2026,am (1\u2264aj\u2264n1\u2264aj\u2264n), where ajaj is the post that received the jj-th like.OutputPrint nn pairs of integer numbers. The ii-th line should contain the highest (minimum) and the lowest (maximum) positions of the ii-th post. You should take into account positions at all moments of time: before all likes, after each like and after all likes. Positions are numbered from 11 (highest) to nn (lowest).ExamplesInputCopy3 5\n3 2 1 3 3\nOutputCopy1 2\n2 3\n1 3\nInputCopy10 6\n7 3 5 7 3 6\nOutputCopy1 2\n2 3\n1 3\n4 7\n4 5\n6 7\n5 7\n8 8\n9 9\n10 10\n"], "Alice, Bob, Two Teams": ["https://codeforces.com/problemset/problem/632/B", "B. Alice, Bob, Two Teamstime limit per test1.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice and Bob are playing a game. The game involves splitting up game pieces into two teams. There are n pieces, and the i-th piece has a strength pi.The way to split up game pieces is split into several steps:  First, Alice will split the pieces into two different groups A and B. This can be seen as writing the assignment of teams of a piece in an n character string, where each character is A or B.  Bob will then choose an arbitrary prefix or suffix of the string, and flip each character in that suffix (i.e. change A to B and B to A). He can do this step at most once.  Alice will get all the pieces marked A and Bob will get all the pieces marked B. The strength of a player is then the sum of strengths of the pieces in the group.Given Alice's initial split into two teams, help Bob determine an optimal strategy. Return the maximum strength he can achieve.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105) \u2014 the number of game pieces.The second line contains n integers pi (1\u2009\u2264\u2009pi\u2009\u2264\u2009109) \u2014 the strength of the i-th piece.The third line contains n characters A or B \u2014 the assignment of teams after the first step (after Alice's step).OutputPrint the only integer a \u2014 the maximum strength Bob can achieve.ExamplesInputCopy51 2 3 4 5ABABAOutputCopy11InputCopy51 2 3 4 5AAAAAOutputCopy15InputCopy11BOutputCopy1NoteIn the first sample Bob should flip the suffix of length one.In the second sample Bob should flip the prefix or the suffix (here it is the same) of length 5.In the third sample Bob should do nothing."], "Flying Saucer Segments": ["https://codeforces.com/problemset/problem/226/A", "A. Flying Saucer Segmentstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn expedition group flew from planet ACM-1 to Earth in order to study the bipedal species (its representatives don't even have antennas on their heads!).The flying saucer, on which the brave pioneers set off, consists of three sections. These sections are connected by a chain: the 1-st section is adjacent only to the 2-nd one, the 2-nd one \u2014 to the 1-st and the 3-rd ones, the 3-rd one \u2014 only to the 2-nd one. The transitions are possible only between the adjacent sections.The spacecraft team consists of n aliens. Each of them is given a rank \u2014 an integer from 1 to n. The ranks of all astronauts are distinct. The rules established on the Saucer, state that an alien may move from section a to section b only if it is senior in rank to all aliens who are in the segments a and b (besides, the segments a and b are of course required to be adjacent). Any alien requires exactly 1 minute to make a move. Besides, safety regulations require that no more than one alien moved at the same minute along the ship.Alien A is senior in rank to alien B, if the number indicating rank A, is more than the corresponding number for B.At the moment the whole saucer team is in the 3-rd segment. They all need to move to the 1-st segment. One member of the crew, the alien with the identification number CFR-140, decided to calculate the minimum time (in minutes) they will need to perform this task.Help CFR-140, figure out the minimum time (in minutes) that all the astronauts will need to move from the 3-rd segment to the 1-st one. Since this number can be rather large, count it modulo m.InputThe first line contains two space-separated integers: n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009109) \u2014 the number of aliens on the saucer and the number, modulo which you should print the answer, correspondingly.OutputPrint a single number \u2014 the answer to the problem modulo m.ExamplesInputCopy1 10OutputCopy2InputCopy3 8OutputCopy2NoteIn the first sample the only crew member moves from segment 3 to segment 2, and then from segment 2 to segment 1 without any problems. Thus, the whole moving will take two minutes.To briefly describe the movements in the second sample we will use value , which would correspond to an alien with rank i moving from the segment in which it is at the moment, to the segment number j. Using these values, we will describe the movements between the segments in the second sample: , , , , , , , , , , , , , , , , , , , , , , , , , ; In total: the aliens need 26 moves. The remainder after dividing 26 by 8 equals 2, so the answer to this test is 2."], "Race Against Time": ["https://codeforces.com/problemset/problem/868/B", "B. Race Against Timetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHave you ever tried to explain to the coordinator, why it is eight hours to the contest and not a single problem has been prepared yet? Misha had. And this time he has a really strong excuse: he faced a space-time paradox! Space and time replaced each other.The entire universe turned into an enormous clock face with three hands\u00a0\u2014 hour, minute, and second. Time froze, and clocks now show the time h hours, m minutes, s seconds.Last time Misha talked with the coordinator at t1 o'clock, so now he stands on the number t1 on the clock face. The contest should be ready by t2 o'clock. In the terms of paradox it means that Misha has to go to number t2 somehow. Note that he doesn't have to move forward only: in these circumstances time has no direction.Clock hands are very long, and Misha cannot get round them. He also cannot step over as it leads to the collapse of space-time. That is, if hour clock points 12 and Misha stands at 11 then he cannot move to 1 along the top arc. He has to follow all the way round the clock center (of course, if there are no other hands on his way).Given the hands' positions, t1, and t2, find if Misha can prepare the contest on time (or should we say on space?). That is, find if he can move from t1 to t2 by the clock face.InputFive integers h, m, s, t1, t2 (1\u2009\u2264\u2009h\u2009\u2264\u200912, 0\u2009\u2264\u2009m,\u2009s\u2009\u2264\u200959, 1\u2009\u2264\u2009t1,\u2009t2\u2009\u2264\u200912, t1\u2009\u2260\u2009t2).Misha's position and the target time do not coincide with the position of any hand.OutputPrint \"YES\" (quotes for clarity), if Misha can prepare the contest on time, and \"NO\" otherwise.You can print each character either upper- or lowercase (\"YeS\" and \"yes\" are valid when the answer is \"YES\").ExamplesInputCopy12 30 45 3 11OutputCopyNOInputCopy12 0 1 12 1OutputCopyYESInputCopy3 47 0 4 9OutputCopyYESNoteThe three examples are shown on the pictures below from left to right. The starting position of Misha is shown with green, the ending position is shown with pink. Note that the positions of the hands on the pictures are not exact, but are close to the exact and the answer is the same.  "], "Trees in a Row": ["https://codeforces.com/problemset/problem/402/B", "B. Trees in a Rowtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Queen of England has n trees growing in a row in her garden. At that, the i-th (1\u2009\u2264\u2009i\u2009\u2264\u2009n) tree from the left has height ai meters. Today the Queen decided to update the scenery of her garden. She wants the trees' heights to meet the condition: for all i (1\u2009\u2264\u2009i\u2009<\u2009n), ai\u2009+\u20091\u2009-\u2009ai\u2009=\u2009k, where k is the number the Queen chose.Unfortunately, the royal gardener is not a machine and he cannot fulfill the desire of the Queen instantly! In one minute, the gardener can either decrease the height of a tree to any positive integer height or increase the height of a tree to any positive integer height. How should the royal gardener act to fulfill a whim of Her Majesty in the minimum number of minutes?InputThe first line contains two space-separated integers: n, k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u20091000). The second line contains n space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u20091000) \u2014 the heights of the trees in the row. OutputIn the first line print a single integer p \u2014 the minimum number of minutes the gardener needs. In the next p lines print the description of his actions. If the gardener needs to increase the height of the j-th (1\u2009\u2264\u2009j\u2009\u2264\u2009n) tree from the left by x (x\u2009\u2265\u20091) meters, then print in the corresponding line \"+\u00a0j\u00a0x\". If the gardener needs to decrease the height of the j-th (1\u2009\u2264\u2009j\u2009\u2264\u2009n) tree from the left by x (x\u2009\u2265\u20091) meters, print on the corresponding line \"-\u00a0j\u00a0x\".If there are multiple ways to make a row of trees beautiful in the minimum number of actions, you are allowed to print any of them.ExamplesInputCopy4 11 2 1 5OutputCopy2+ 3 2- 4 1InputCopy4 11 2 3 4OutputCopy0"], "Eight Point Sets": ["https://codeforces.com/problemset/problem/334/B", "B. Eight Point Setstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGerald is very particular to eight point sets. He thinks that any decent eight point set must consist of all pairwise intersections of three distinct integer vertical straight lines and three distinct integer horizontal straight lines, except for the average of these nine points. In other words, there must be three integers x1,\u2009x2,\u2009x3 and three more integers y1,\u2009y2,\u2009y3, such that x1\u2009<\u2009x2\u2009<\u2009x3, y1\u2009<\u2009y2\u2009<\u2009y3 and the eight point set consists of all points (xi,\u2009yj) (1\u2009\u2264\u2009i,\u2009j\u2009\u2264\u20093), except for point (x2,\u2009y2).You have a set of eight points. Find out if Gerald can use this set?InputThe input consists of eight lines, the i-th line contains two space-separated integers xi and yi (0\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009106). You do not have any other conditions for these points.OutputIn a single line print word \"respectable\", if the given set of points corresponds to Gerald's decency rules, and \"ugly\" otherwise.ExamplesInputCopy0 00 10 21 01 22 02 12 2OutputCopyrespectableInputCopy0 01 02 03 04 05 06 07 0OutputCopyuglyInputCopy1 11 21 32 12 22 33 13 2OutputCopyugly"], "Balls Game": ["https://codeforces.com/problemset/problem/430/B", "B. Balls Gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIahub is training for the IOI. What is a better way to train than playing a Zuma-like game? There are n balls put in a row. Each ball is colored in one of k colors. Initially the row doesn't contain three or more contiguous balls with the same color. Iahub has a single ball of color x. He can insert his ball at any position in the row (probably, between two other balls). If at any moment there are three or more contiguous balls of the same color in the row, they are destroyed immediately. This rule is applied multiple times, until there are no more sets of 3 or more contiguous balls of the same color. For example, if Iahub has the row of balls [black, black, white, white, black, black] and a white ball, he can insert the ball between two white balls. Thus three white balls are destroyed, and then four black balls become contiguous, so all four balls are destroyed. The row will not contain any ball in the end, so Iahub can destroy all 6 balls.Iahub wants to destroy as many balls as possible. You are given the description of the row of balls, and the color of Iahub's ball. Help Iahub train for the IOI by telling him the maximum number of balls from the row he can destroy.InputThe first line of input contains three integers: n (1\u2009\u2264\u2009n\u2009\u2264\u2009100), k (1\u2009\u2264\u2009k\u2009\u2264\u2009100) and x (1\u2009\u2264\u2009x\u2009\u2264\u2009k). The next line contains n space-separated integers c1,\u2009c2,\u2009...,\u2009cn (1\u2009\u2264\u2009ci\u2009\u2264\u2009k). Number ci means that the i-th ball in the row has color ci.It is guaranteed that the initial row of balls will never contain three or more contiguous balls of the same color. OutputPrint a single integer \u2014 the maximum number of balls Iahub can destroy.ExamplesInputCopy6 2 21 1 2 2 1 1OutputCopy6InputCopy1 1 11OutputCopy0"], "Obsession with Robots": ["https://codeforces.com/problemset/problem/8/B", "B. Obsession with Robotstime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputThe whole world got obsessed with robots,and to keep pace with the progress, great Berland's programmer Draude decided to build his own robot. He was working hard at the robot. He taught it to walk the shortest path from one point to another, to record all its movements, but like in many Draude's programs, there was a bug \u2014 the robot didn't always walk the shortest path. Fortunately, the robot recorded its own movements correctly. Now Draude wants to find out when his robot functions wrong. Heh, if Draude only remembered the map of the field, where he tested the robot, he would easily say if the robot walked in the right direction or not. But the field map was lost never to be found, that's why he asks you to find out if there exist at least one map, where the path recorded by the robot is the shortest.The map is an infinite checkered field, where each square is either empty, or contains an obstruction. It is also known that the robot never tries to run into the obstruction. By the recorded robot's movements find out if there exist at least one such map, that it is possible to choose for the robot a starting square (the starting square should be empty) such that when the robot moves from this square its movements coincide with the recorded ones (the robot doesn't run into anything, moving along empty squares only), and the path from the starting square to the end one is the shortest.In one movement the robot can move into the square (providing there are no obstrutions in this square) that has common sides with the square the robot is currently in.InputThe first line of the input file contains the recording of the robot's movements. This recording is a non-empty string, consisting of uppercase Latin letters L, R, U and D, standing for movements left, right, up and down respectively. The length of the string does not exceed 100.OutputIn the first line output the only word OK (if the above described map exists), or BUG (if such a map does not exist).ExamplesInputCopyLLUUUROutputCopyOKInputCopyRRUULLDDOutputCopyBUG"], "Jumping on Walls": ["https://codeforces.com/problemset/problem/198/B", "B. Jumping on Wallstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya plays a computer game with ninjas. At this stage Vasya's ninja should get out of a deep canyon.The canyon consists of two vertical parallel walls, their height is n meters. Let's imagine that we split these walls into 1 meter-long areas and number them with positive integers from 1 to n from bottom to top. Some areas are safe and the ninja can climb them. Others are spiky and ninja can't be there. Let's call such areas dangerous.Initially the ninja is on the lower area of the left wall. He can use each second to perform one of the following actions:   climb one area up;  climb one area down;  jump to the opposite wall. That gets the ninja to the area that is exactly k meters higher than the area he jumped from. More formally, if before the jump the ninja is located at area x of one wall, then after the jump he is located at area x\u2009+\u2009k of the other wall. If at some point of time the ninja tries to get to an area with a number larger than n, then we can assume that the ninja got out of the canyon.The canyon gets flooded and each second the water level raises one meter. Initially the water level is at the lower border of the first area. Ninja cannot be on the area covered by water. We can assume that the ninja and the water \"move in turns\" \u2014 first the ninja performs some action, then the water raises for one meter, then the ninja performs one more action and so on.The level is considered completed if the ninja manages to get out of the canyon.After several failed attempts Vasya started to doubt whether it is possible to complete the level at all. Help him answer the question.InputThe first line contains two integers n and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009105) \u2014 the height of the canyon and the height of ninja's jump, correspondingly.The second line contains the description of the left wall \u2014 a string with the length of n characters. The i-th character represents the state of the i-th wall area: character \"X\" represents a dangerous area and character \"-\" represents a safe area.The third line describes the right wall in the same format.It is guaranteed that the first area of the left wall is not dangerous.OutputPrint \"YES\" (without the quotes) if the ninja can get out from the canyon, otherwise, print \"NO\" (without the quotes).ExamplesInputCopy7 3---X--X-X--XX-OutputCopyYESInputCopy6 2--X-X-X--XX-OutputCopyNONoteIn the first sample the ninja should first jump to the right wall, then go one meter down along the right wall, then jump to the left wall. The next jump can get the ninja from the canyon. In the second sample there's no way the ninja can get out of the canyon."], "Martian Dollar": ["https://codeforces.com/problemset/problem/41/B", "B. Martian Dollartime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Vasya got hold of information on the Martian dollar course in bourles for the next n days. The buying prices and the selling prices for one dollar on day i are the same and are equal to ai. Vasya has b bourles. He can buy a certain number of dollars and then sell it no more than once in n days. According to Martian laws, one can buy only an integer number of dollars. Which maximal sum of money in bourles can Vasya get by the end of day n?InputThe first line contains two integers n and b (1\u2009\u2264\u2009n,\u2009b\u2009\u2264\u20092000) \u2014 the number of days and the initial number of money in bourles. The next line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u20092000) \u2014 the prices of Martian dollars.OutputPrint the single number \u2014 which maximal sum of money in bourles can Vasya get by the end of day n.ExamplesInputCopy2 43 7OutputCopy8InputCopy4 104 3 2 1OutputCopy10InputCopy4 104 2 3 1OutputCopy15"], "Spiders": ["https://codeforces.com/problemset/problem/120/F", "F. Spiderstime limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtOne day mum asked Petya to sort his toys and get rid of some of them. Petya found a whole box of toy spiders. They were quite dear to him and the boy didn't want to throw them away. Petya conjured a cunning plan: he will glue all the spiders together and attach them to the ceiling. Besides, Petya knows that the lower the spiders will hang, the more mum is going to like it and then she won't throw his favourite toys away. Help Petya carry out the plan.A spider consists of k beads tied together by k\u2009-\u20091 threads. Each thread connects two different beads, at that any pair of beads that make up a spider is either directly connected by a thread, or is connected via some chain of threads and beads.Petya may glue spiders together directly gluing their beads. The length of each thread equals 1. The sizes of the beads can be neglected. That's why we can consider that gluing spiders happens by identifying some of the beads (see the picture). Besides, the construction resulting from the gluing process should also represent a spider, that is, it should have the given features. After Petya glues all spiders together, he measures the length of the resulting toy. The distance between a pair of beads is identified as the total length of the threads that connect these two beads. The length of the resulting construction is the largest distance between all pairs of beads. Petya wants to make the spider whose length is as much as possible.    The picture two shows two spiders from the second sample. We can glue to the bead number 2 of the first spider the bead number 1 of the second spider. The threads in the spiders that form the sequence of threads of maximum lengths are highlighted on the picture.InputThe first input file line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of spiders. Next n lines contain the descriptions of each spider: integer ni (2\u2009\u2264\u2009ni\u2009\u2264\u2009100) \u2014 the number of beads, then ni\u2009-\u20091 pairs of numbers denoting the numbers of the beads connected by threads. The beads that make up each spider are numbered from 1 to ni.OutputPrint a single number \u2014 the length of the required construction.ExamplesInputCopy13 1 2 2 3OutputCopy2InputCopy23 1 2 1 34 1 2 2 3 2 4OutputCopy4InputCopy25 1 2 2 3 3 4 3 57 3 4 1 2 2 4 4 6 2 7 6 5OutputCopy7"], "Shopping": ["https://codeforces.com/problemset/problem/665/B", "B. Shoppingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAyush is a cashier at the shopping center. Recently his department has started a ''click and collect\" service which allows users to shop online. The store contains k items. n customers have already used the above service. Each user paid for m items. Let aij denote the j-th item in the i-th person's order.Due to the space limitations all the items are arranged in one single row. When Ayush receives the i-th order he will find one by one all the items aij (1\u2009\u2264\u2009j\u2009\u2264\u2009m) in the row. Let pos(x) denote the position of the item x in the row at the moment of its collection. Then Ayush takes time equal to pos(ai1)\u2009+\u2009pos(ai2)\u2009+\u2009...\u2009+\u2009pos(aim) for the i-th customer.When Ayush accesses the x-th element he keeps a new stock in the front of the row and takes away the x-th element. Thus the values are updating.Your task is to calculate the total time it takes for Ayush to process all the orders.You can assume that the market has endless stock.InputThe first line contains three integers n, m and k (1\u2009\u2264\u2009n,\u2009k\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009m\u2009\u2264\u2009k) \u2014 the number of users, the number of items each user wants to buy and the total number of items at the market.The next line contains k distinct integers pl (1\u2009\u2264\u2009pl\u2009\u2264\u2009k) denoting the initial positions of the items in the store. The items are numbered with integers from 1 to k.Each of the next n lines contains m distinct integers aij (1\u2009\u2264\u2009aij\u2009\u2264\u2009k) \u2014 the order of the i-th person.OutputPrint the only integer t \u2014 the total time needed for Ayush to process all the orders.ExampleInputCopy2 2 53 4 1 2 51 53 1OutputCopy14NoteCustomer 1 wants the items 1 and 5.pos(1)\u2009=\u20093, so the new positions are: [1,\u20093,\u20094,\u20092,\u20095].pos(5)\u2009=\u20095, so the new positions are: [5,\u20091,\u20093,\u20094,\u20092].Time taken for the first customer is 3\u2009+\u20095\u2009=\u20098.Customer 2 wants the items 3 and 1.pos(3)\u2009=\u20093, so the new positions are: [3,\u20095,\u20091,\u20094,\u20092].pos(1)\u2009=\u20093, so the new positions are: [1,\u20093,\u20095,\u20094,\u20092].Time taken for the second customer is 3\u2009+\u20093\u2009=\u20096.Total time is 8\u2009+\u20096\u2009=\u200914.Formally pos(x) is the index of x in the current row."], "Om Nom and Spiders": ["https://codeforces.com/problemset/problem/436/B", "B. Om Nom and Spiderstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOm Nom really likes candies and doesn't like spiders as they frequently steal candies. One day Om Nom fancied a walk in a park. Unfortunately, the park has some spiders and Om Nom doesn't want to see them at all.  The park can be represented as a rectangular n\u2009\u00d7\u2009m field. The park has k spiders, each spider at time 0 is at some cell of the field. The spiders move all the time, and each spider always moves in one of the four directions (left, right, down, up). In a unit of time, a spider crawls from his cell to the side-adjacent cell in the corresponding direction. If there is no cell in the given direction, then the spider leaves the park. The spiders do not interfere with each other as they move. Specifically, one cell can have multiple spiders at the same time.Om Nom isn't yet sure where to start his walk from but he definitely wants:  to start walking at time 0 at an upper row cell of the field (it is guaranteed that the cells in this row do not contain any spiders);  to walk by moving down the field towards the lowest row (the walk ends when Om Nom leaves the boundaries of the park). We know that Om Nom moves by jumping. One jump takes one time unit and transports the little monster from his cell to either a side-adjacent cell on the lower row or outside the park boundaries.Each time Om Nom lands in a cell he sees all the spiders that have come to that cell at this moment of time. Om Nom wants to choose the optimal cell to start the walk from. That's why he wonders: for each possible starting cell, how many spiders will he see during the walk if he starts from this cell? Help him and calculate the required value for each possible starting cell.InputThe first line contains three integers n,\u2009m,\u2009k (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20092000;\u00a00\u2009\u2264\u2009k\u2009\u2264\u2009m(n\u2009-\u20091)). Each of the next n lines contains m characters \u2014 the description of the park. The characters in the i-th line describe the i-th row of the park field. If the character in the line equals \".\", that means that the corresponding cell of the field is empty; otherwise, the character in the line will equal one of the four characters: \"L\" (meaning that this cell has a spider at time 0, moving left), \"R\" (a spider moving right), \"U\" (a spider moving up), \"D\" (a spider moving down). It is guaranteed that the first row doesn't contain any spiders. It is guaranteed that the description of the field contains no extra characters. It is guaranteed that at time 0 the field contains exactly k spiders.OutputPrint m integers: the j-th integer must show the number of spiders Om Nom will see if he starts his walk from the j-th cell of the first row. The cells in any row of the field are numbered from left to right.ExamplesInputCopy3 3 4...R.LR.UOutputCopy0 2 2 InputCopy2 2 2..RLOutputCopy1 1 InputCopy2 2 2..LROutputCopy0 0 InputCopy3 4 8....RRLLUUUUOutputCopy1 3 3 1 InputCopy2 2 2..UUOutputCopy0 0 NoteConsider the first sample. The notes below show how the spider arrangement changes on the field over time:...        ...        ..U       ...R.L   ->   .*U   ->   L.R   ->  ...R.U        .R.        ..R       ...Character \"*\" represents a cell that contains two spiders at the same time.  If Om Nom starts from the first cell of the first row, he won't see any spiders.  If he starts from the second cell, he will see two spiders at time 1.  If he starts from the third cell, he will see two spiders: one at time 1, the other one at time 2. "], "Mishap in Club": ["https://codeforces.com/problemset/problem/245/E", "E. Mishap in Clubtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarpus just has been out of luck lately! As soon as he found a job in the \"Binary Cat\" cafe, the club got burgled. All ice-cream was stolen.On the burglary night Polycarpus kept a careful record of all club visitors. Each time a visitor entered the club, Polycarpus put down character \"+\" in his notes. Similarly, each time a visitor left the club, Polycarpus put character \"-\" in his notes. We know that all cases of going in and out happened consecutively, that is, no two events happened at the same time. Polycarpus doesn't remember whether there was somebody in the club at the moment when his shift begun and at the moment when it ended.Right now the police wonders what minimum number of distinct people Polycarpus could have seen. Assume that he sees anybody coming in or out of the club. Each person could have come in or out an arbitrary number of times.InputThe only line of the input contains a sequence of characters \"+\" and \"-\", the characters are written one after another without any separators. The characters are written in the order, in which the corresponding events occurred. The given sequence has length from 1 to 300 characters, inclusive.OutputPrint the sought minimum number of peopleExamplesInputCopy+-+-+OutputCopy1InputCopy---OutputCopy3"], "Cracking the Code": ["https://codeforces.com/problemset/problem/630/L", "L. Cracking the Codetime limit per test0.5 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputThe protection of a popular program developed by one of IT City companies is organized the following way. After installation it outputs a random five digit number which should be sent in SMS to a particular phone number. In response an SMS activation code arrives.A young hacker Vasya disassembled the program and found the algorithm that transforms the shown number into the activation code. Note: it is clear that Vasya is a law-abiding hacker, and made it for a noble purpose \u2014 to show the developer the imperfection of their protection.The found algorithm looks the following way. At first the digits of the number are shuffled in the following order <first digit><third digit><fifth digit><fourth digit><second digit>. For example the shuffle of 12345 should lead to 13542. On the second stage the number is raised to the fifth power. The result of the shuffle and exponentiation of the number 12345 is 455\u00a0422\u00a0043\u00a0125\u00a0550\u00a0171\u00a0232. The answer is the 5 last digits of this result. For the number 12345 the answer should be 71232.Vasya is going to write a keygen program implementing this algorithm. Can you do the same?InputThe only line of the input contains a positive integer five digit number for which the activation code should be found.OutputOutput exactly 5 digits without spaces between them \u2014 the found activation code of the program.ExamplesInputCopy12345OutputCopy71232"], "Send the Fool Further! (easy)": ["https://codeforces.com/problemset/problem/802/J", "J. Send the Fool Further! (easy)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputHeidi's friend Jenny is asking Heidi to deliver an important letter to one of their common friends. Since Jenny is Irish, Heidi thinks that this might be a prank. More precisely, she suspects that the message she is asked to deliver states: \"Send the fool further!\", and upon reading it the recipient will ask Heidi to deliver the same message to yet another friend (that the recipient has in common with Heidi), and so on.Heidi believes that her friends want to avoid awkward situations, so she will not be made to visit the same person (including Jenny) twice. She also knows how much it costs to travel between any two of her friends who know each other. She wants to know: what is the maximal amount of money she will waste on travel if it really is a prank?Heidi's n friends are labeled 0 through n\u2009-\u20091, and their network of connections forms a tree. In other words, every two of her friends a, b know each other, possibly indirectly (there is a sequence of friends starting from a and ending on b and such that each two consecutive friends in the sequence know each other directly), and there are exactly n\u2009-\u20091 pairs of friends who know each other directly.Jenny is given the number 0.InputThe first line of the input contains the number of friends n (3\u2009\u2264\u2009n\u2009\u2264\u2009100). The next n\u2009-\u20091 lines each contain three space-separated integers u, v and c (0\u2009\u2264\u2009u,\u2009v\u2009\u2264\u2009n\u2009-\u20091, 1\u2009\u2264\u2009c\u2009\u2264\u2009104), meaning that u and v are friends (know each other directly) and the cost for travelling between u and v is c.It is guaranteed that the social network of the input forms a tree.OutputOutput a single integer \u2013 the maximum sum of costs.ExamplesInputCopy40 1 40 2 22 3 3OutputCopy5InputCopy61 2 30 2 1001 4 20 3 73 5 10OutputCopy105InputCopy111 0 16642 0 8813 2 46704 2 15555 1 18706 2 12657 2 2888 7 22669 2 153610 6 3378OutputCopy5551NoteIn the second example, the worst-case scenario goes like this: Jenny sends Heidi to the friend labeled by number 2 (incurring a cost of 100), then friend 2 sends her to friend 1 (costing Heidi 3), and finally friend 1 relays her to friend 4 (incurring an additional cost of 2)."], "Lucky Permutation": ["https://codeforces.com/problemset/problem/286/A", "A. Lucky Permutationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA permutation p of size n is the sequence p1,\u2009p2,\u2009...,\u2009pn, consisting of n distinct integers, each of them is from 1 to n (1\u2009\u2264\u2009pi\u2009\u2264\u2009n).A lucky permutation is such permutation p, that any integer i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) meets this condition ppi\u2009=\u2009n\u2009-\u2009i\u2009+\u20091.You have integer n. Find some lucky permutation p of size n.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the required permutation size.OutputPrint \"-1\" (without the quotes) if the lucky permutation p of size n doesn't exist.Otherwise, print n distinct integers p1,\u2009p2,\u2009...,\u2009pn (1\u2009\u2264\u2009pi\u2009\u2264\u2009n) after a space \u2014 the required permutation.If there are multiple answers, you can print any of them.ExamplesInputCopy1OutputCopy1 InputCopy2OutputCopy-1InputCopy4OutputCopy2 4 1 3 InputCopy5OutputCopy2 5 3 1 4 "], "Robot Factory": ["https://codeforces.com/problemset/problem/1600/J", "J. Robot Factorytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have received data from a Bubble bot. You know your task is to make factory facilities, but before you even start, you need to know how big the factory is and how many rooms it has. When you look at the data you see that you have the dimensions of the construction, which is in rectangle shape: N x M. Then in the next N lines you have M numbers. These numbers represent factory tiles and they can go from 0 to 15. Each of these numbers should be looked in its binary form. Because from each number you know on which side the tile has walls. For example number 10 in it's binary form is 1010, which means that it has a wall from the North side, it doesn't have a wall from the East, it has a wall on the South side and it doesn't have a wall on the West side. So it goes North, East, South, West. It is guaranteed that the construction always has walls on it's edges. The input will be correct. Your task is to print the size of the rooms from biggest to smallest. InputThe first line has two numbers which are N and M, the size of the construction. Both are integers: nn (1\u2264n\u22641031\u2264n\u2264103)mm (1\u2264m\u22641031\u2264m\u2264103)Next N x M numbers represent each tile of construction.OutputOnce you finish processing the data your output consists of one line sorted from biggest to smallest room sizes. ExampleInputCopy4 5\n9 14 11 12 13\n5 15 11 6 7\n5 9 14 9 14\n3 2 14 3 14\nOutputCopy9 4 4 2 1 \n"], "Mysterious strings": ["https://codeforces.com/problemset/problem/290/A", "A. Mysterious stringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputInputThe input contains a single integer a (1\u2009\u2264\u2009a\u2009\u2264\u200940).OutputOutput a single string.ExamplesInputCopy2OutputCopyAdamsInputCopy8OutputCopyVan BurenInputCopy29OutputCopyHarding "], "Accounting": ["https://codeforces.com/problemset/problem/30/A", "A. Accountingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA long time ago in some far country lived king Copa. After the recent king's reform, he got so large powers that started to keep the books by himself.The total income A of his kingdom during 0-th year is known, as well as the total income B during n-th year (these numbers can be negative \u2014 it means that there was a loss in the correspondent year). King wants to show financial stability. To do this, he needs to find common coefficient X \u2014 the coefficient of income growth during one year. This coefficient should satisfy the equation:A\u00b7Xn\u2009=\u2009B.Surely, the king is not going to do this job by himself, and demands you to find such number X.It is necessary to point out that the fractional numbers are not used in kingdom's economy. That's why all input numbers as well as coefficient X must be integers. The number X may be zero or negative.InputThe input contains three integers A, B, n (|A|,\u2009|B|\u2009\u2264\u20091000, 1\u2009\u2264\u2009n\u2009\u2264\u200910).OutputOutput the required integer coefficient X, or \u00abNo solution\u00bb, if such a coefficient does not exist or it is fractional. If there are several possible solutions, output any of them.ExamplesInputCopy2 18 2OutputCopy3InputCopy-1 8 3OutputCopy-2InputCopy0 0 10OutputCopy5InputCopy1 16 5OutputCopyNo solution"], "Space Formula": ["https://codeforces.com/problemset/problem/1046/C", "C. Space Formulatime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFormula 1 officials decided to introduce new competition. Cars are replaced by space ships and number of points awarded can differ per race.Given the current ranking in the competition and points distribution for the next race, your task is to calculate the best possible ranking for a given astronaut after the next race. It's guaranteed that given astronaut will have unique number of points before the race.InputThe first line contains two integer numbers NN (1\u2264N\u22642000001\u2264N\u2264200000) representing number of F1 astronauts, and current position of astronaut DD (1\u2264D\u2264N1\u2264D\u2264N) you want to calculate best ranking for (no other competitor will have the same number of points before the race).The second line contains NN integer numbers SkSk (0\u2264Sk\u22641080\u2264Sk\u2264108, k=1...Nk=1...N), separated by a single space, representing current ranking of astronauts. Points are sorted in non-increasing order.The third line contains NN integer numbers PkPk (0\u2264Pk\u22641080\u2264Pk\u2264108, k=1...Nk=1...N), separated by a single space, representing point awards for the next race. Points are sorted in non-increasing order, so winner of the race gets the maximum number of points.OutputOutput contains one integer number \u2014 the best possible ranking for astronaut after the race. If multiple astronauts have the same score after the race, they all share the best ranking.ExampleInputCopy4 350 30 20 1015 10 7 3OutputCopy2NoteIf the third ranked astronaut wins the race, he will have 35 points. He cannot take the leading position, but he can overtake the second position if the second ranked astronaut finishes the race at the last position."], "String Manipulation 1.0": ["https://codeforces.com/problemset/problem/159/C", "C. String Manipulation 1.0time limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne popular website developed an unusual username editing procedure. One can change the username only by deleting some characters from it: to change the current name s, a user can pick number p and character c and delete the p-th occurrence of character c from the name. After the user changed his name, he can't undo the change.For example, one can change name \"arca\" by removing the second occurrence of character \"a\" to get \"arc\". Polycarpus learned that some user initially registered under nickname t, where t is a concatenation of k copies of string s. Also, Polycarpus knows the sequence of this user's name changes. Help Polycarpus figure out the user's final name.InputThe first line contains an integer k (1\u2009\u2264\u2009k\u2009\u2264\u20092000). The second line contains a non-empty string s, consisting of lowercase Latin letters, at most 100 characters long. The third line contains an integer n (0\u2009\u2264\u2009n\u2009\u2264\u200920000) \u2014 the number of username changes. Each of the next n lines contains the actual changes, one per line. The changes are written as \"pi ci\" (without the quotes), where pi (1\u2009\u2264\u2009pi\u2009\u2264\u2009200000) is the number of occurrences of letter ci, ci is a lowercase Latin letter. It is guaranteed that the operations are correct, that is, the letter to be deleted always exists, and after all operations not all letters are deleted from the name. The letters' occurrences are numbered starting from 1.OutputPrint a single string \u2014 the user's final name after all changes are applied to it.ExamplesInputCopy2bac32 a1 b2 cOutputCopyacbInputCopy1abacaba41 a1 a1 c2 bOutputCopybaaNoteLet's consider the first sample. Initially we have name \"bacbac\"; the first operation transforms it into \"bacbc\", the second one \u2014 to \"acbc\", and finally, the third one transforms it into \"acb\"."], "\u041f\u0440\u043e\u043a\u0430\u0442 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u043e\u0432": ["https://codeforces.com/problemset/problem/929/A", "A. \u041f\u0440\u043e\u043a\u0430\u0442 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u043e\u0432\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0430 \u0442\u0435\u0441\u04421 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u043f\u0430\u043c\u044f\u0442\u0438 \u043d\u0430 \u0442\u0435\u0441\u0442256 \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442\u0432\u0432\u043e\u0434\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0432\u0432\u043e\u0434\u0432\u044b\u0432\u043e\u0434\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434\u041a\u0430\u043a \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0432 \u0442\u0435\u043f\u043b\u0443\u044e \u043f\u043e\u0433\u043e\u0434\u0443 \u043c\u043d\u043e\u0433\u0438\u0435 \u0436\u0438\u0442\u0435\u043b\u0438 \u043a\u0440\u0443\u043f\u043d\u044b\u0445 \u0433\u043e\u0440\u043e\u0434\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438 \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0433\u043e \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u0430. \u0412\u043e\u0442 \u0438 \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0438\u0440\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0448\u043a\u043e\u043b\u044b \u0434\u043e \u0434\u043e\u043c\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u0438\u0435 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u044b.\u0428\u043a\u043e\u043b\u0430 \u0438 \u0434\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u043d\u0430 \u043e\u0434\u043d\u043e\u0439 \u043f\u0440\u044f\u043c\u043e\u0439 \u0443\u043b\u0438\u0446\u0435, \u043a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u043d\u0430 \u0442\u043e\u0439 \u0436\u0435 \u0443\u043b\u0438\u0446\u0435 \u0435\u0441\u0442\u044c n \u0442\u043e\u0447\u0435\u043a, \u0433\u0434\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u0437\u044f\u0442\u044c \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434 \u0432 \u043f\u0440\u043e\u043a\u0430\u0442 \u0438\u043b\u0438 \u0441\u0434\u0430\u0442\u044c \u0435\u0433\u043e. \u041f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0442\u043e\u0447\u043a\u0435 x1 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432 \u0432\u0434\u043e\u043b\u044c \u0443\u043b\u0438\u0446\u044b, \u0432\u0442\u043e\u0440\u043e\u0439\u00a0\u2014 \u0432 \u0442\u043e\u0447\u043a\u0435 x2 \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435, n-\u0439 \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0442\u043e\u0447\u043a\u0435 xn. \u0428\u043a\u043e\u043b\u0430 \u0410\u0440\u043a\u0430\u0434\u0438\u044f \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0442\u043e\u0447\u043a\u0435 x1 (\u0442\u043e \u0435\u0441\u0442\u044c \u0442\u0430\u043c \u0436\u0435, \u0433\u0434\u0435 \u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442), \u0430 \u0434\u043e\u043c\u00a0\u2014 \u0432 \u0442\u043e\u0447\u043a\u0435 xn (\u0442\u043e \u0435\u0441\u0442\u044c \u0442\u0430\u043c \u0436\u0435, \u0433\u0434\u0435 \u0438 n-\u0439 \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442). \u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e xi\u2009<\u2009xi\u2009+\u20091 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 1\u2009\u2264\u2009i\u2009<\u2009n.\u0421\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u0430, \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u0440\u0430\u0442\u044c \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434 \u0432 \u043f\u0440\u043e\u043a\u0430\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0435\u0433\u043e \u0432 \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u0442\u043e\u0447\u0435\u043a \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u0430, \u043e\u0434\u043d\u0430\u043a\u043e, \u043e\u043d \u0442\u0443\u0442 \u0436\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u0437\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434, \u0438 \u043e\u0442\u0441\u0447\u0435\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0439\u0434\u0435\u0442 \u0437\u0430\u043d\u043e\u0432\u043e. \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u0440\u0430\u0442\u044c \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u0430 \u0432 \u043f\u0440\u043e\u043a\u0430\u0442 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e. \u0415\u0441\u043b\u0438 \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u0440\u0435\u0448\u0430\u0435\u0442 \u0432\u0437\u044f\u0442\u044c \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434 \u0432 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0442\u043e\u0447\u043a\u0435 \u043f\u0440\u043e\u043a\u0430\u0442\u0430, \u0442\u043e \u043e\u043d \u0441\u0434\u0430\u0451\u0442 \u0442\u043e\u0442 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d \u0434\u043e \u043d\u0435\u0433\u043e \u0434\u043e\u0435\u0445\u0430\u043b, \u0431\u0435\u0440\u0451\u0442 \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u0438\u043d \u043d\u043e\u0432\u044b\u0439 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434 \u0438 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442 \u043d\u0430 \u043d\u0451\u043c \u0441\u0432\u043e\u0451 \u0434\u0432\u0438\u0436\u0435\u043d\u0438\u0435.\u0417\u0430 \u043e\u0442\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u0430, \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u0443\u0441\u043f\u0435\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0435\u0445\u0430\u0442\u044c \u043d\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 k \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u043e\u0432 \u0432\u0434\u043e\u043b\u044c \u0443\u043b\u0438\u0446\u044b. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u0441\u043c\u043e\u0436\u0435\u0442 \u043b\u0438 \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u0434\u043e\u0435\u0445\u0430\u0442\u044c \u043d\u0430 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u0430\u0445 \u043e\u0442 \u0448\u043a\u043e\u043b\u044b \u0434\u043e \u0434\u043e\u043c\u0430, \u0438 \u0435\u0441\u043b\u0438 \u0434\u0430, \u0442\u043e \u043a\u0430\u043a\u043e\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0440\u0430\u0437 \u0435\u043c\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u044f\u0442\u044c \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434 \u0432 \u043f\u0440\u043e\u043a\u0430\u0442, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434? \u0423\u0447\u0442\u0438\u0442\u0435, \u0447\u0442\u043e \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u043d\u0435 \u043d\u0430\u043c\u0435\u0440\u0435\u043d \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u0445\u043e\u0434\u0438\u0442\u044c \u043f\u0435\u0448\u043a\u043e\u043c.\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0442 \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 n \u0438 k (2\u2009\u2264\u2009n\u2009\u2264\u20091\u2009000, 1\u2009\u2264\u2009k\u2009\u2264\u2009100\u2009000) \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u043e\u0432 \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0435\u0445\u0430\u0442\u044c \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u0435.\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b x1,\u2009x2,\u2009...,\u2009xn (0\u2009\u2264\u2009x1\u2009<\u2009x2\u2009<\u2009...\u2009<\u2009xn\u2009\u2264\u2009100\u2009000) \u2014 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0442\u043e\u0447\u0435\u043a, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u044b. \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u043e\u0432 \u0437\u0430\u0434\u0430\u043d\u044b \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f.\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\u0415\u0441\u043b\u0438 \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u043d\u0435 \u0441\u043c\u043e\u0436\u0435\u0442 \u0434\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0448\u043a\u043e\u043b\u044b \u0434\u043e \u0434\u043e\u043c\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u0430\u0445, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 -1. \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0410\u0440\u043a\u0430\u0434\u0438\u044e \u043d\u0443\u0436\u043d\u043e \u0432\u0437\u044f\u0442\u044c \u0432 \u0442\u043e\u0447\u043a\u0430\u0445 \u043f\u0440\u043e\u043a\u0430\u0442\u0430.\u041f\u0440\u0438\u043c\u0435\u0440\u044b\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy4 43 6 8 10\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy2\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy2 910 20\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy-1\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy12 34 6 7 9 10 11 13 15 17 18 20 21\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435Copy6\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u0437\u044f\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u0435 \u0438 \u0434\u043e\u0435\u0445\u0430\u0442\u044c \u043d\u0430 \u043d\u0451\u043c \u0434\u043e \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u0430. \u0412\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u0435 \u043e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u0437\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d \u0441\u043c\u043e\u0436\u0435\u0442 \u0434\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0434\u043e \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u043e\u0433\u043e \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u0430, \u0440\u044f\u0434\u043e\u043c \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0435\u0433\u043e \u0434\u043e\u043c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0410\u0440\u043a\u0430\u0434\u0438\u044e \u043d\u0443\u0436\u043d\u043e \u0432\u0441\u0435\u0433\u043e \u0434\u0432\u0430 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u0430, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0448\u043a\u043e\u043b\u044b \u0434\u043e \u0434\u043e\u043c\u0430.\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u0432\u0441\u0435\u0433\u043e \u0434\u0432\u0430 \u0432\u0435\u043b\u043e\u043f\u0440\u043e\u043a\u0430\u0442\u0430, \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 10. \u041d\u043e \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0435\u0445\u0430\u0442\u044c \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u0435, \u0440\u0430\u0432\u043d\u043e 9. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0410\u0440\u043a\u0430\u0434\u0438\u0439 \u043d\u0435 \u0441\u043c\u043e\u0436\u0435\u0442 \u0434\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0448\u043a\u043e\u043b\u044b \u0434\u043e \u0434\u043e\u043c\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u0430\u0445."], "Name Quest": ["https://codeforces.com/problemset/problem/523/C", "C. Name Questtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA Martian boy is named s \u2014 he has got this name quite recently from his parents for his coming of age birthday. Now he enjoys looking for his name everywhere. If he sees that he can obtain his name from some string by removing zero or more letters (at that, the remaining letters remain in the same order), he gets happy. For example, if s=\u00ababa\u00bb, then strings \u00abbaobab\u00bb, \u00abaabbaa\u00bb, \u00abhelloabahello\u00bb make him very happy and strings \u00abaab\u00bb, \u00abbaaa\u00bb and \u00abhelloabhello\u00bb do not.However rather than being happy once, he loves twice as much being happy twice! So, when he got string t as a present, he wanted to cut it in two parts (the left part and the right part) so that each part made him happy.Help s determine the number of distinct ways to cut the given string t into two parts in the required manner.InputThe first line contains string s, consisting of lowercase English letters. The length of string s is from 1 to 1000 letters.The second line contains string t, that also consists of lowercase English letters. The length of string t is from 1 to 106 letters.OutputPrint the sought number of ways to cut string t in two so that each part made s happy. ExamplesInputCopyababaobababbahOutputCopy2InputCopymarssunvenusearthmarsjupitersaturnuranusneptuneOutputCopy0"], "Promocodes with Mistakes": ["https://codeforces.com/problemset/problem/637/C", "C. Promocodes with Mistakestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDuring a New Year special offer the \"Sudislavl Bars\" offered n promo codes. Each promo code consists of exactly six digits and gives right to one free cocktail at the bar \"Mosquito Shelter\". Of course, all the promocodes differ.As the \"Mosquito Shelter\" opens only at 9, and partying in Sudislavl usually begins at as early as 6, many problems may arise as to how to type a promotional code without errors. It is necessary to calculate such maximum k, that the promotional code could be uniquely identified if it was typed with no more than k errors. At that, k\u2009=\u20090 means that the promotional codes must be entered exactly.A mistake in this problem should be considered as entering the wrong numbers. For example, value \"123465\" contains two errors relative to promocode \"123456\". Regardless of the number of errors the entered value consists of exactly six digits.InputThe first line of the output contains number n (1\u2009\u2264\u2009n\u2009\u2264\u20091000)\u00a0\u2014 the number of promocodes.Each of the next n lines contains a single promocode, consisting of exactly 6 digits. It is guaranteed that all the promocodes are distinct. Promocodes can start from digit \"0\".OutputPrint the maximum k (naturally, not exceeding the length of the promocode), such that any promocode can be uniquely identified if it is typed with at most k mistakes.ExamplesInputCopy2000000999999OutputCopy2InputCopy6211111212111222111111111112111121111OutputCopy0NoteIn the first sample k\u2009<\u20093, so if a bar customer types in value \"090909\", then it will be impossible to define which promocode exactly corresponds to it."], "Splitting money": ["https://codeforces.com/problemset/problem/1046/F", "F. Splitting moneytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter finding and moving to the new planet that supports human life, discussions started on which currency should be used. After long negotiations, Bitcoin was ultimately chosen as the universal currency.These were the great news for Alice, whose grandfather got into Bitcoin mining in 2013, and accumulated a lot of them throughout the years. Unfortunately, when paying something in bitcoin everyone can see how many bitcoins you have in your public address wallet. This worried Alice, so she decided to split her bitcoins among multiple different addresses, so that every address has at most xx satoshi (1 bitcoin = 108108 satoshi). She can create new public address wallets for free and is willing to pay ff fee in satoshi per transaction to ensure acceptable speed of transfer. The fee is deducted from the address the transaction was sent from. Tell Alice how much total fee in satoshi she will need to pay to achieve her goal.InputFirst line contains number NN (1\u2264N\u22642000001\u2264N\u2264200000) representing total number of public addresses Alice has.Next line contains NN integer numbers aiai (1\u2264ai\u22641091\u2264ai\u2264109) separated by a single space, representing how many satoshi Alice has in her public addresses.Last line contains two numbers xx, ff (1\u2264f<x\u22641091\u2264f<x\u2264109) representing maximum number of satoshies Alice can have in one address, as well as fee in satoshies she is willing to pay per transaction. OutputOutput one integer number representing total fee in satoshi Alice will need to pay to achieve her goal.ExampleInputCopy313 7 66 2OutputCopy4NoteAlice can make two transactions in a following way:0. 13 7 6 (initial state)1. 6 7 6 5 (create new address and transfer from first public address 5 satoshies)2. 6 4 6 5 1 (create new address and transfer from second address 1 satoshi)Since cost per transaction is 2 satoshies, total fee is 4."], "Chat": ["https://codeforces.com/problemset/problem/928/B", "B. Chattime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are times you recall a good old friend and everything you've come through together. Luckily there are social networks\u00a0\u2014 they store all your message history making it easy to know what you argued over 10 years ago.More formal, your message history is a sequence of messages ordered by time sent numbered from 1 to n where n is the total number of messages in the chat.Each message might contain a link to an earlier message which it is a reply to. When opening a message x or getting a link to it, the dialogue is shown in such a way that k previous messages, message x and k next messages are visible (with respect to message x). In case there are less than k messages somewhere, they are yet all shown.Digging deep into your message history, you always read all visible messages and then go by the link in the current message x (if there is one) and continue reading in the same manner.Determine the number of messages you'll read if your start from message number t for all t from 1 to n. Calculate these numbers independently. If you start with message x, the initial configuration is x itself, k previous and k next messages. Messages read multiple times are considered as one.InputThe first line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009105, 0\u2009\u2264\u2009k\u2009\u2264\u2009n) \u2014 the total amount of messages and the number of previous and next messages visible.The second line features a sequence of integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009<\u2009i), where ai denotes the i-th message link destination or zero, if there's no link from i. All messages are listed in chronological order. It's guaranteed that the link from message x goes to message with number strictly less than x.OutputPrint n integers with i-th denoting the number of distinct messages you can read starting from message i and traversing the links while possible.ExamplesInputCopy6 00 1 1 2 3 2OutputCopy1 2 2 3 3 3 InputCopy10 10 1 0 3 4 5 2 3 7 0OutputCopy2 3 3 4 5 6 6 6 8 2 InputCopy2 20 1OutputCopy2 2 NoteConsider i\u2009=\u20096 in sample case one. You will read message 6, then 2, then 1 and then there will be no link to go.In the second sample case i\u2009=\u20096 gives you messages 5,\u20096,\u20097 since k\u2009=\u20091, then 4,\u20095,\u20096, then 2,\u20093,\u20094 and then the link sequence breaks. The number of distinct messages here is equal to 6."], "Put Knight!": ["https://codeforces.com/problemset/problem/120/E", "E. Put Knight!time limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtPetya and Gena play a very interesting game \"Put a Knight!\" on a chessboard n\u2009\u00d7\u2009n in size. In this game they take turns to put chess pieces called \"knights\" on the board so that no two knights could threat each other. A knight located in square (r,\u2009c) can threat squares (r\u2009-\u20091,\u2009c\u2009+\u20092), (r\u2009-\u20091,\u2009c\u2009-\u20092), (r\u2009+\u20091,\u2009c\u2009+\u20092), (r\u2009+\u20091,\u2009c\u2009-\u20092), (r\u2009-\u20092,\u2009c\u2009+\u20091), (r\u2009-\u20092,\u2009c\u2009-\u20091), (r\u2009+\u20092,\u2009c\u2009+\u20091) and (r\u2009+\u20092,\u2009c\u2009-\u20091) (some of the squares may be located outside the chessboard). The player who can't put a new knight during his move loses. Determine which player wins considering that both players play optimally well and Petya starts.InputThe first line contains integer T (1\u2009\u2264\u2009T\u2009\u2264\u2009100) \u2014 the number of boards, for which you should determine the winning player. Next T lines contain T integers ni (1\u2009\u2264\u2009ni\u2009\u2264\u200910000) \u2014 the sizes of the chessboards.OutputFor each ni\u2009\u00d7\u2009ni board print on a single line \"0\" if Petya wins considering both players play optimally well. Otherwise, print \"1\".ExamplesInputCopy221OutputCopy10"], "Guilty --- to the kitchen!": ["https://codeforces.com/problemset/problem/42/A", "A. Guilty \u2014 to the kitchen!time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt's a very unfortunate day for Volodya today. He got bad mark in algebra and was therefore forced to do some work in the kitchen, namely to cook borscht (traditional Russian soup). This should also improve his algebra skills.According to the borscht recipe it consists of n ingredients that have to be mixed in proportion  litres (thus, there should be a1\u2009\u00b7x,\u2009...,\u2009an\u2009\u00b7x litres of corresponding ingredients mixed for some non-negative x). In the kitchen Volodya found out that he has b1,\u2009...,\u2009bn litres of these ingredients at his disposal correspondingly. In order to correct his algebra mistakes he ought to cook as much soup as possible in a V litres volume pan (which means the amount of soup cooked can be between 0 and V litres). What is the volume of borscht Volodya will cook ultimately?InputThe first line of the input contains two space-separated integers n and V (1\u2009\u2264\u2009n\u2009\u2264\u200920,\u20091\u2009\u2264\u2009V\u2009\u2264\u200910000). The next line contains n space-separated integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009100). Finally, the last line contains n space-separated integers bi (0\u2009\u2264\u2009bi\u2009\u2264\u2009100).OutputYour program should output just one real number \u2014 the volume of soup that Volodya will cook. Your answer must have a relative or absolute error less than 10\u2009-\u20094.ExamplesInputCopy1 100140OutputCopy40.0InputCopy2 1001 125 30OutputCopy50.0InputCopy2 1001 160 60OutputCopy100.0"], "Friends or Not": ["https://codeforces.com/problemset/problem/159/A", "A. Friends or Nottime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarpus has a hobby \u2014 he develops an unusual social network. His work is almost completed, and there is only one more module to implement \u2014 the module which determines friends. Oh yes, in this social network one won't have to add friends manually! Pairs of friends are deduced in the following way. Let's assume that user A sent user B a message at time t1, and user B sent user A a message at time t2. If 0\u2009<\u2009t2\u2009-\u2009t1\u2009\u2264\u2009d, then user B's message was an answer to user A's one. Users A and B are considered to be friends if A answered at least one B's message or B answered at least one A's message.You are given the log of messages in chronological order and a number d. Find all pairs of users who will be considered to be friends.InputThe first line of the input contains two integers n and d (1\u2009\u2264\u2009n,\u2009d\u2009\u2264\u20091000). The next n lines contain the messages log. The i-th line contains one line of the log formatted as \"Ai Bi ti\" (without the quotes), which means that user Ai sent a message to user Bi at time ti (1\u2009\u2264\u2009i\u2009\u2264\u2009n). Ai and Bi are non-empty strings at most 20 characters long, consisting of lowercase letters ('a' ... 'z'), and ti is an integer (0\u2009\u2264\u2009ti\u2009\u2264\u200910000). It is guaranteed that the lines are given in non-decreasing order of ti's and that no user sent a message to himself. The elements in the lines are separated by single spaces.OutputIn the first line print integer k \u2014 the number of pairs of friends. In the next k lines print pairs of friends as \"Ai Bi\" (without the quotes). You can print users in pairs and the pairs themselves in any order. Each pair must be printed exactly once.ExamplesInputCopy4 1vasya petya 1petya vasya 2anya ivan 2ivan anya 4OutputCopy1petya vasyaInputCopy1 1000a b 0OutputCopy0NoteIn the first sample test case Vasya and Petya are friends because their messages' sending times are one second apart. Anya and Ivan are not, because their messages' sending times differ by more than one second."], "Measuring Lengths in Baden": ["https://codeforces.com/problemset/problem/125/A", "A. Measuring Lengths in Badentime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLengths are measures in Baden in inches and feet. To a length from centimeters it is enough to know that an inch equals three centimeters in Baden and one foot contains 12 inches.You are given a length equal to n centimeters. Your task is to convert it to feet and inches so that the number of feet was maximum. The result should be an integer rounded to the closest value containing an integral number of inches.Note that when you round up, 1 cm rounds up to 0 inches and 2 cm round up to 1 inch.InputThe only line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u200910000).OutputPrint two non-negative space-separated integers a and b, where a is the numbers of feet and b is the number of inches.ExamplesInputCopy42OutputCopy1 2InputCopy5OutputCopy0 2"], "Robot Bicorn Attack": ["https://codeforces.com/problemset/problem/175/A", "A. Robot Bicorn Attacktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya plays Robot Bicorn Attack.The game consists of three rounds. For each one a non-negative integer amount of points is given. The result of the game is the sum of obtained points. Vasya has already played three rounds and wrote obtained points one by one (without leading zeros) into the string s. Vasya decided to brag about his achievement to the friends. However, he has forgotten how many points he got for each round. The only thing he remembers is the string s.Help Vasya to find out what is the maximum amount of points he could get. Take into account that Vasya played Robot Bicorn Attack for the first time, so he could not get more than 1000000 (106) points for one round.InputThe only line of input contains non-empty string s obtained by Vasya. The string consists of digits only. The string length does not exceed 30 characters.OutputPrint the only number \u2014 the maximum amount of points Vasya could get. If Vasya is wrong and the string could not be obtained according to the rules then output number -1.ExamplesInputCopy1234OutputCopy37InputCopy9000OutputCopy90InputCopy0009OutputCopy-1NoteIn the first example the string must be split into numbers 1, 2 and 34.In the second example the string must be split into numbers 90, 0 and 0. In the third example the string is incorrect, because after splitting the string into 3 numbers number 00 or 09 will be obtained, but numbers cannot have leading zeroes."], "Banana": ["https://codeforces.com/problemset/problem/335/A", "A. Bananatime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPiegirl is buying stickers for a project. Stickers come on sheets, and each sheet of stickers contains exactly n stickers. Each sticker has exactly one character printed on it, so a sheet of stickers can be described by a string of length n. Piegirl wants to create a string s using stickers. She may buy as many sheets of stickers as she wants, and may specify any string of length n for the sheets, but all the sheets must be identical, so the string is the same for all sheets. Once she attains the sheets of stickers, she will take some of the stickers from the sheets and arrange (in any order) them to form s. Determine the minimum number of sheets she has to buy, and provide a string describing a possible sheet of stickers she should buy.InputThe first line contains string s (1\u2009\u2264\u2009|s|\u2009\u2264\u20091000), consisting of lowercase English characters only. The second line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000).OutputOn the first line, print the minimum number of sheets Piegirl has to buy. On the second line, print a string consisting of n lower case English characters. This string should describe a sheet of stickers that Piegirl can buy in order to minimize the number of sheets. If Piegirl cannot possibly form the string s, print instead a single line with the number -1.ExamplesInputCopybanana4OutputCopy2baanInputCopybanana3OutputCopy3nabInputCopybanana2OutputCopy-1NoteIn the second example, Piegirl can order 3 sheets of stickers with the characters \"nab\". She can take characters \"nab\" from the first sheet, \"na\" from the second, and \"a\" from the third, and arrange them to from \"banana\"."], "Datatypes": ["https://codeforces.com/problemset/problem/108/B", "B. Datatypestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTattah's youngest brother, Tuftuf, is new to programming.Since his older brother is such a good programmer, his biggest dream is to outshine him. Tuftuf is a student at the German University in Cairo (GUC) where he learns to write programs in Gava.Today, Tuftuf was introduced to Gava's unsigned integer datatypes. Gava has n unsigned integer datatypes of sizes (in bits) a1,\u2009a2,\u2009... an. The i-th datatype have size ai bits, so it can represent every integer between 0 and 2ai\u2009-\u20091 inclusive. Tuftuf is thinking of learning a better programming language. If there exists an integer x, such that x fits in some type i (in ai bits) and x\u00b7x does not fit in some other type j (in aj bits) where ai\u2009<\u2009aj, then Tuftuf will stop using Gava.Your task is to determine Tuftuf's destiny.InputThe first line contains integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of Gava's unsigned integer datatypes' sizes. The second line contains a single-space-separated list of n integers (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 sizes of datatypes in bits. Some datatypes may have equal sizes.OutputPrint \"YES\" if Tuftuf will stop using Gava, and \"NO\" otherwise.ExamplesInputCopy364 16 32OutputCopyNOInputCopy44 2 1 3OutputCopyYESNoteIn the second example, x\u2009=\u20097 (1112) fits in 3 bits, but x2\u2009=\u200949 (1100012) does not fit in 4 bits."], "World Football Cup": ["https://codeforces.com/problemset/problem/19/A", "A. World Football Cuptime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputEveryone knows that 2010 FIFA World Cup is being held in South Africa now. By the decision of BFA (Berland's Football Association) next World Cup will be held in Berland. BFA took the decision to change some World Cup regulations:  the final tournament features n teams (n is always even)  the first n\u2009/\u20092 teams (according to the standings) come through to the knockout stage  the standings are made on the following principle: for a victory a team gets 3 points, for a draw \u2014 1 point, for a defeat \u2014 0 points. In the first place, teams are ordered in the standings in decreasing order of their points; in the second place \u2014 in decreasing order of the difference between scored and missed goals; in the third place \u2014 in the decreasing order of scored goals  it's written in Berland's Constitution that the previous regulation helps to order the teams without ambiguity. You are asked to write a program that, by the given list of the competing teams and the results of all the matches, will find the list of teams that managed to get through to the knockout stage.InputThe first input line contains the only integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950) \u2014 amount of the teams, taking part in the final tournament of World Cup. The following n lines contain the names of these teams, a name is a string of lower-case and upper-case Latin letters, its length doesn't exceed 30 characters. The following n\u00b7(n\u2009-\u20091)\u2009/\u20092 lines describe the held matches in the format name1-name2 num1:num2, where name1, name2 \u2014 names of the teams; num1, num2 (0\u2009\u2264\u2009num1,\u2009num2\u2009\u2264\u2009100) \u2014 amount of the goals, scored by the corresponding teams. Accuracy of the descriptions is guaranteed: there are no two team names coinciding accurate to the letters' case; there is no match, where a team plays with itself; each match is met in the descriptions only once.OutputOutput n\u2009/\u20092 lines \u2014 names of the teams, which managed to get through to the knockout stage in lexicographical order. Output each name in a separate line. No odd characters (including spaces) are allowed. It's guaranteed that the described regulations help to order the teams without ambiguity.ExamplesInputCopy4ABCDA-B 1:1A-C 2:2A-D 1:0B-C 1:0B-D 0:3C-D 0:3OutputCopyADInputCopy2aAa-A 2:1OutputCopya"], "Jeopardy!": ["https://codeforces.com/problemset/problem/413/C", "C. Jeopardy!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard output'Jeopardy!' is an intellectual game where players answer questions and earn points. Company Q conducts a simplified 'Jeopardy!' tournament among the best IT companies. By a lucky coincidence, the old rivals made it to the finals: company R1 and company R2. The finals will have n questions, m of them are auction questions and n\u2009-\u2009m of them are regular questions. Each question has a price. The price of the i-th question is ai points. During the game the players chose the questions. At that, if the question is an auction, then the player who chose it can change the price if the number of his current points is strictly larger than the price of the question. The new price of the question cannot be less than the original price and cannot be greater than the current number of points of the player who chose the question. The correct answer brings the player the points equal to the price of the question. The wrong answer to the question reduces the number of the player's points by the value of the question price.The game will go as follows. First, the R2 company selects a question, then the questions are chosen by the one who answered the previous question correctly. If no one answered the question, then the person who chose last chooses again.All R2 employees support their team. They want to calculate what maximum possible number of points the R2 team can get if luck is on their side during the whole game (they will always be the first to correctly answer questions). Perhaps you are not going to be surprised, but this problem was again entrusted for you to solve.InputThe first line contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100;\u00a0m\u2009\u2264\u2009min(n,\u200930)) \u2014 the total number of questions and the number of auction questions, correspondingly. The second line contains n space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009107) \u2014 the prices of the questions. The third line contains m distinct integers bi (1\u2009\u2264\u2009bi\u2009\u2264\u2009n) \u2014 the numbers of auction questions. Assume that the questions are numbered from 1 to n.OutputIn the single line, print the answer to the problem \u2014 the maximum points the R2 company can get if it plays optimally well. It is guaranteed that the answer fits into the integer 64-bit signed type.ExamplesInputCopy4 11 3 7 53OutputCopy18InputCopy3 210 3 82 3OutputCopy40InputCopy2 2100 2001 2OutputCopy400"], "File List": ["https://codeforces.com/problemset/problem/174/B", "B. File Listtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputEudokimus, a system administrator is in trouble again. As a result of an error in some script, a list of names of very important files has been damaged. Since they were files in the BerFS file system, it is known that each file name has a form \"name.ext\", where:   name is a string consisting of lowercase Latin letters, its length is from 1 to 8 characters;  ext is a string consisting of lowercase Latin letters, its length is from 1 to 3 characters. For example, \"read.me\", \"example.txt\" and \"b.cpp\" are valid file names and \"version.info\", \"ntldr\" and \"contestdata.zip\" are not.Damage to the list meant that all the file names were recorded one after another, without any separators. So now Eudokimus has a single string.Eudokimus needs to set everything right as soon as possible. He should divide the resulting string into parts so that each part would be a valid file name in BerFS. Since Eudokimus has already proved that he is not good at programming, help him. The resulting file list can contain the same file names.InputThe input data consists of a single string s, its length is from 1 to 4\u00b7105 characters. The string can contain only lowercase Latin letters ('a' - 'z') and periods ('.').OutputIn the first line print \"YES\" (without the quotes), if it is possible to divide s into parts as required. In this case, the following lines should contain the parts of the required partition, one per line in the order in which they appear in s. The required partition can contain the same file names. If there are multiple solutions, print any of them.If the solution does not exist, then print in a single line \"NO\" (without the quotes).ExamplesInputCopyread.meexample.txtb.cppOutputCopyYESread.meexample.txtb.cppInputCopyversion.infontldrcontestdata.zipOutputCopyNO"], "Fly, freebies, fly!": ["https://codeforces.com/problemset/problem/386/B", "B. Fly, freebies, fly!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputEveryone loves a freebie. Especially students.It is well-known that if in the night before exam a student opens window, opens the student's record-book and shouts loudly three times \"Fly, freebie, fly!\" \u2014 then flown freebie helps him to pass the upcoming exam.In the night before the exam on mathematical analysis n students living in dormitory shouted treasured words. The i-th student made a sacrament at the time ti, where ti is the number of seconds elapsed since the beginning of the night.It is known that the freebie is a capricious and willful lady. That night the freebie was near dormitory only for T seconds. Therefore, if for two students their sacrament times differ for more than T, then the freebie didn't visit at least one of them.Since all students are optimists, they really want to know what is the maximal number of students visited by the freebie can be.InputThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100), where n \u2014 the number of students shouted \"Fly, freebie, fly!\" The second line contains n positive integers ti (1\u2009\u2264\u2009ti\u2009\u2264\u20091000).The last line contains integer T (1\u2009\u2264\u2009T\u2009\u2264\u20091000) \u2014 the time interval during which the freebie was near the dormitory.OutputPrint a single integer \u2014 the largest number of people who will pass exam tomorrow because of the freebie visit.ExamplesInputCopy64 1 7 8 3 81OutputCopy3"], "Blinds": ["https://codeforces.com/problemset/problem/38/C", "C. Blindstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe blinds are known to consist of opaque horizontal stripes that can be rotated thus regulating the amount of light flowing in the room. There are n blind stripes with the width of 1 in the factory warehouse for blind production. The problem is that all of them are spare details from different orders, that is, they may not have the same length (it is even possible for them to have different lengths)Every stripe can be cut into two or more parts. The cuttings are made perpendicularly to the side along which the length is measured. Thus the cuttings do not change the width of a stripe but each of the resulting pieces has a lesser length (the sum of which is equal to the length of the initial stripe)After all the cuttings the blinds are constructed through consecutive joining of several parts, similar in length, along sides, along which length is measured. Also, apart from the resulting pieces an initial stripe can be used as a blind if it hasn't been cut. It is forbidden to construct blinds in any other way.Thus, if the blinds consist of k pieces each d in length, then they are of form of a rectangle of k\u2009\u00d7\u2009d bourlemeters. Your task is to find for what window possessing the largest possible area the blinds can be made from the given stripes if on technical grounds it is forbidden to use pieces shorter than l bourlemeter. The window is of form of a rectangle with side lengths as positive integers.InputThe first output line contains two space-separated integers n and l (1\u2009\u2264\u2009n,\u2009l\u2009\u2264\u2009100). They are the number of stripes in the warehouse and the minimal acceptable length of a blind stripe in bourlemeters. The second line contains space-separated n integers ai. They are the lengths of initial stripes in bourlemeters (1\u2009\u2264\u2009ai\u2009\u2264\u2009100).OutputPrint the single number \u2014 the maximal area of the window in square bourlemeters that can be completely covered. If no window with a positive area that can be covered completely without breaking any of the given rules exist, then print the single number 0.ExamplesInputCopy4 21 2 3 4OutputCopy8InputCopy5 35 5 7 3 1OutputCopy15InputCopy2 31 2OutputCopy0NoteIn the first sample test the required window is 2\u2009\u00d7\u20094 in size and the blinds for it consist of 4 parts, each 2 bourlemeters long. One of the parts is the initial stripe with the length of 2, the other one is a part of a cut stripe with the length of 3 and the two remaining stripes are parts of a stripe with the length of 4 cut in halves."], "Hyperspace Jump (easy)": ["https://codeforces.com/problemset/problem/958/D1", "D1. Hyperspace Jump (easy)time limit per test5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Rebel fleet is on the run. It consists of m ships currently gathered around a single planet. Just a few seconds ago, the vastly more powerful Empire fleet has appeared in the same solar system, and the Rebels will need to escape into hyperspace. In order to spread the fleet, the captain of each ship has independently come up with the coordinate to which that ship will jump. In the obsolete navigation system used by the Rebels, this coordinate is given as the value of an arithmetic expression of the form .To plan the future of the resistance movement, Princess Heidi needs to know, for each ship, how many ships are going to end up at the same coordinate after the jump. You are her only hope!InputThe first line of the input contains a single integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009200\u2009000) \u2013 the number of ships. The next m lines describe one jump coordinate each, given as an arithmetic expression. An expression has the form (a+b)/c. Namely, it consists of: an opening parenthesis (, a positive integer a of up to two decimal digits, a plus sign +, a positive integer b of up to two decimal digits, a closing parenthesis ), a slash /, and a positive integer c of up to two decimal digits.OutputPrint a single line consisting of m space-separated integers. The i-th integer should be equal to the number of ships whose coordinate is equal to that of the i-th ship (including the i-th ship itself).ExampleInputCopy4(99+98)/97(26+4)/10(12+33)/15(5+1)/7OutputCopy1 2 2 1 NoteIn the sample testcase, the second and the third ship will both end up at the coordinate 3.Note that this problem has only two versions \u2013 easy and hard."], "Three Sons": ["https://codeforces.com/problemset/problem/120/D", "D. Three Sonstime limit per test1 secondmemory limit per test256 megabytesinputinput.txtoutputoutput.txtThree sons inherited from their father a rectangular corn fiend divided into n\u2009\u00d7\u2009m squares. For each square we know how many tons of corn grows on it. The father, an old farmer did not love all three sons equally, which is why he bequeathed to divide his field into three parts containing A, B and C tons of corn.The field should be divided by two parallel lines. The lines should be parallel to one side of the field and to each other. The lines should go strictly between the squares of the field. Each resulting part of the field should consist of at least one square. Your task is to find the number of ways to divide the field as is described above, that is, to mark two lines, dividing the field in three parts so that on one of the resulting parts grew A tons of corn, B on another one and C on the remaining one.InputThe first line contains space-separated integers n and m \u2014 the sizes of the original (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200950,\u2009max(n,\u2009m)\u2009\u2265\u20093). Then the field's description follows: n lines, each containing m space-separated integers cij, (0\u2009\u2264\u2009cij\u2009\u2264\u2009100) \u2014 the number of tons of corn each square contains. The last line contains space-separated integers A,\u2009B,\u2009C (0\u2009\u2264\u2009A,\u2009B,\u2009C\u2009\u2264\u2009106).OutputPrint the answer to the problem: the number of ways to divide the father's field so that one of the resulting parts contained A tons of corn, another one contained B tons, and the remaining one contained C tons. If no such way exists, print 0.ExamplesInputCopy3 31 1 11 1 11 1 13 3 3OutputCopy2InputCopy2 51 1 1 1 12 2 2 2 23 6 6OutputCopy3InputCopy3 31 2 33 1 22 3 15 6 7OutputCopy0NoteThe lines dividing the field can be horizontal or vertical, but they should be parallel to each other."], "TCMCF+++": ["https://codeforces.com/problemset/problem/45/I", "I. TCMCF+++time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has gotten interested in programming contests in TCMCF+++ rules. On the contest n problems were suggested and every problem had a cost \u2014 a certain integral number of points (perhaps, negative or even equal to zero). According to TCMCF+++ rules, only accepted problems can earn points and the overall number of points of a contestant was equal to the product of the costs of all the problems he/she had completed. If a person didn't solve anything, then he/she didn't even appear in final standings and wasn't considered as participant. Vasya understood that to get the maximal number of points it is not always useful to solve all the problems. Unfortunately, he understood it only after the contest was finished. Now he asks you to help him: find out what problems he had to solve to earn the maximal number of points.InputThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of the suggested problems. The next line contains n space-separated integers ci (\u2009-\u2009100\u2009\u2264\u2009ci\u2009\u2264\u2009100) \u2014 the cost of the i-th task. The tasks' costs may coin\u0441ide.OutputPrint space-separated the costs of the problems that needed to be solved to get the maximal possible number of points. Do not forget, please, that it was necessary to solve at least one problem. If there are several solutions to that problem, print any of them.ExamplesInputCopy51 2 -3 3 3OutputCopy3 1 2 3 InputCopy13100 100 100 100 100 100 100 100 100 100 100 100 100OutputCopy100 100 100 100 100 100 100 100 100 100 100 100 100 InputCopy4-2 -2 -2 -2OutputCopy-2 -2 -2 -2 "], "Orange": ["https://codeforces.com/problemset/problem/290/D", "D. Orangetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output  InputThe first line of the input is a string (between 1 and 50 characters long, inclusive). Each character will be a letter of English alphabet, lowercase or uppercase.The second line of the input is an integer between 0 and 26, inclusive.OutputOutput the required string.ExamplesInputCopyAprilFool14OutputCopyAprILFooL"], "Crash": ["https://codeforces.com/problemset/problem/417/B", "B. Crashtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputDuring the \"Russian Code Cup\" programming competition, the testing system stores all sent solutions for each participant. We know that many participants use random numbers in their programs and are often sent several solutions with the same source code to check.Each participant is identified by some unique positive integer k, and each sent solution A is characterized by two numbers: x\u00a0\u2014 the number of different solutions that are sent before the first solution identical to A, and k \u2014 the number of the participant, who is the author of the solution. Consequently, all identical solutions have the same x.It is known that the data in the testing system are stored in the chronological order, that is, if the testing system has a solution with number x (x\u2009>\u20090) of the participant with number k, then the testing system has a solution with number x\u2009-\u20091 of the same participant stored somewhere before.During the competition the checking system crashed, but then the data of the submissions of all participants have been restored. Now the jury wants to verify that the recovered data is in chronological order. Help the jury to do so.InputThe first line of the input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105)\u00a0\u2014 the number of solutions. Each of the following n lines contains two integers separated by space x and k (0\u2009\u2264\u2009x\u2009\u2264\u2009105; 1\u2009\u2264\u2009k\u2009\u2264\u2009105)\u00a0\u2014 the number of previous unique solutions and the identifier of the participant.OutputA single line of the output should contain \u00abYES\u00bb if the data is in chronological order, and \u00abNO\u00bb otherwise.ExamplesInputCopy20 11 1OutputCopyYESInputCopy40 11 21 10 2OutputCopyNOInputCopy40 11 10 10 2OutputCopyYES"], "DDoS": ["https://codeforces.com/problemset/problem/1057/B", "B. DDoStime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputWe get more and more news about DDoS-attacks of popular websites.Arseny is an admin and he thinks that a website is under a DDoS-attack if the total number of requests for a some period of time exceeds 100\u22c5t100\u22c5t, where tt \u2014 the number of seconds in this time segment. Arseny knows statistics on the number of requests per second since the server is booted. He knows the sequence r1,r2,\u2026,rnr1,r2,\u2026,rn, where riri \u2014 the number of requests in the ii-th second after boot. Determine the length of the longest continuous period of time, which Arseny considers to be a DDoS-attack. A seeking time period should not go beyond the boundaries of the segment [1,n][1,n].InputThe first line contains nn (1\u2264n\u226450001\u2264n\u22645000) \u2014 number of seconds since server has been booted. The second line contains sequence of integers r1,r2,\u2026,rnr1,r2,\u2026,rn (0\u2264ri\u226450000\u2264ri\u22645000), riri \u2014 number of requests in the ii-th second.OutputPrint the only integer number \u2014 the length of the longest time period which is considered to be a DDoS-attack by Arseny. If it doesn't exist print 0.ExamplesInputCopy5100 200 1 1 1OutputCopy3InputCopy51 2 3 4 5OutputCopy0InputCopy2101 99OutputCopy1"], "Heroes": ["https://codeforces.com/problemset/problem/77/A", "A. Heroestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe year of 2012 is coming...According to an ancient choradrican legend in this very year, in 2012, Diablo and his brothers Mephisto and Baal will escape from hell, and innumerable hordes of demons will enslave the human world. But seven brave heroes have already gathered on the top of a mountain Arreat to protect us mere mortals from the effect of this terrible evil.The seven great heroes are: amazon Anka, barbarian Chapay, sorceress Cleo, druid Troll, necromancer Dracul, paladin Snowy and a professional hit girl Hexadecimal. Heroes already know how much experience will be given for each of the three megabosses: a for Mephisto, b for Diablo and c for Baal.Here's the problem: heroes are as much as seven and megabosses are only three! Then our heroes decided to split into three teams, where each team will go to destroy their own megaboss. Each team member will receive a  of experience, rounded down, where x will be the amount of experience for the killed megaboss and y \u2014 the number of people in the team.Heroes do not want to hurt each other's feelings, so they want to split into teams so that the difference between the hero who received the maximum number of experience and the hero who received the minimum number of experience were minimal. Since there can be several divisions into teams, then you need to find the one in which the total amount of liking in teams were maximum.It is known that some heroes like others. But if hero p likes hero q, this does not mean that the hero q likes hero p. No hero likes himself.The total amount of liking in teams is the amount of ordered pairs (p,\u2009q), such that heroes p and q are in the same group, and hero p likes hero q (but it is not important if hero q likes hero p). In case of heroes p and q likes each other and they are in the same group, this pair should be counted twice, as (p,\u2009q) and (q,\u2009p).A team can consist even of a single hero, but it is important that every megaboss was destroyed. All heroes must be involved in the campaign against evil. None of the heroes can be in more than one team.It is guaranteed that every hero is able to destroy any megaboss alone.InputThe first line contains a single non-negative integer n (0\u2009\u2264\u2009n\u2009\u2264\u200942) \u2014 amount of liking between the heroes. Next n lines describe liking in the form \"p likes q\", meaning that the hero p likes the hero q (p \u2009\u2260\u2009 q). Every liking is described in the input exactly once, no hero likes himself.In the last line are given three integers a, b and c (1\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u20092\u00b7109), separated by spaces: the experience for Mephisto, the experience for Diablo and experience for Baal.In all the pretests, except for examples from the statement, the following condition is satisfied: a\u2009=\u2009b\u2009=\u2009c.OutputPrint two integers \u2014 the minimal difference in the experience between two heroes who will receive the maximum and minimum number of experience points, and the maximal total amount of liking in teams (the number of friendships between heroes that end up in one team).When calculating the second answer, the team division should satisfy the difference-minimizing contraint. I.e. primary you should minimize the difference in the experience and secondary you should maximize the total amount of liking.ExamplesInputCopy3Troll likes DraculDracul likes AnkaSnowy likes Hexadecimal210 200 180OutputCopy30 3InputCopy2Anka likes ChapayChapay likes Anka10000 50 50OutputCopy1950 2NoteA note to first example: it the first team should be Dracul, Troll and Anka, in the second one Hexadecimal and Snowy, and in the third Cleo \u0438 Chapay."], "Draw Brackets!": ["https://codeforces.com/problemset/problem/770/D", "D. Draw Brackets!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA sequence of square brackets is regular if by inserting symbols \"+\" and \"1\" into it, you can get a regular mathematical expression from it. For example, sequences \"[[]][]\", \"[]\" and \"[[][[]]]\" \u2014 are regular, at the same time \"][\", \"[[]\" and \"[[]]][\" \u2014 are irregular. Draw the given sequence using a minimalistic pseudographics in the strip of the lowest possible height \u2014 use symbols '+', '-' and '|'. For example, the sequence \"[[][]][]\" should be represented as: +-        -++- -+    |+- -++- -+||   |||   ||   |||   ||+- -++- -+||   |+-        -++- -+Each bracket should be represented with the hepl of one or more symbols '|' (the vertical part) and symbols '+' and '-' as on the example which is given above.Brackets should be drawn without spaces one by one, only dividing pairs of consecutive pairwise brackets with a single-space bar (so that the two brackets do not visually merge into one symbol). The image should have the minimum possible height. The enclosed bracket is always smaller than the surrounding bracket, but each bracket separately strives to maximize the height of the image. So the pair of final brackets in the example above occupies the entire height of the image.Study carefully the examples below, they adequately explain the condition of the problem. Pay attention that in this problem the answer (the image) is unique. InputThe first line contains an even integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the length of the sequence of brackets.The second line contains the sequence of brackets \u2014 these are n symbols \"[\" and \"]\". It is guaranteed that the given sequence of brackets is regular. OutputPrint the drawn bracket sequence in the format which is given in the condition. Don't print extra (unnecessary) spaces. ExamplesInputCopy8[[][]][]OutputCopy+-        -++- -+|+- -++- -+||   |||   ||   |||   ||+- -++- -+||   |+-        -++- -+InputCopy6[[[]]]OutputCopy+-     -+|+-   -+|||+- -+|||||   |||||+- -+|||+-   -+|+-     -+InputCopy6[[][]]OutputCopy+-        -+|+- -++- -+|||   ||   |||+- -++- -+|+-        -+InputCopy2[]OutputCopy+- -+|   |+- -+InputCopy4[][]OutputCopy+- -++- -+|   ||   |+- -++- -+"], "Death Stars (easy)": ["https://codeforces.com/problemset/problem/958/A1", "A1. Death Stars (easy)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe stardate is 1977 and the science and art of detecting Death Stars is in its infancy. Princess Heidi has received information about the stars in the nearby solar system from the Rebel spies and now, to help her identify the exact location of the Death Star, she needs to know whether this information is correct. Two rebel spies have provided her with the maps of the solar system. Each map is an N\u2009\u00d7\u2009N grid, where each cell is either occupied by a star or empty. To see whether the information is correct, Heidi needs to know whether the two maps are of the same solar system, or if possibly one of the spies is actually an Empire double agent, feeding her false information.Unfortunately, spies may have accidentally rotated a map by 90, 180, or 270 degrees, or flipped it along the vertical or the horizontal axis, before delivering it to Heidi. If Heidi can rotate or flip the maps so that two of them become identical, then those maps are of the same solar system. Otherwise, there are traitors in the Rebel ranks! Help Heidi find out.InputThe first line of the input contains one number N (1\u2009\u2264\u2009N\u2009\u2264\u200910) \u2013 the dimension of each map. Next N lines each contain N characters, depicting the first map: 'X' indicates a star, while 'O' indicates an empty quadrant of space. Next N lines each contain N characters, depicting the second map in the same format.OutputThe only line of output should contain the word Yes if the maps are identical, or No if it is impossible to match them by performing rotations and translations.ExamplesInputCopy4XOOOXXOOOOOOXXXXXOOOXOOOXOXOXOXXOutputCopyYesInputCopy2XXOOXOOXOutputCopyNoNoteIn the first test, you can match the first map to the second map by first flipping the first map along the vertical axis, and then by rotating it 90 degrees clockwise. "], "Plane of Tanks: Pro": ["https://codeforces.com/problemset/problem/175/B", "B. Plane of Tanks: Protime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has been playing Plane of Tanks with his friends the whole year. Now it is time to divide the participants into several categories depending on their results. A player is given a non-negative integer number of points in each round of the Plane of Tanks. Vasya wrote results for each round of the last year. He has n records in total.In order to determine a player's category consider the best result obtained by the player and the best results of other players. The player belongs to category:   \"noob\" \u2014 if more than 50% of players have better results;  \"random\" \u2014 if his result is not worse than the result that 50% of players have, but more than 20% of players have better results;  \"average\" \u2014 if his result is not worse than the result that 80% of players have, but more than 10% of players have better results;  \"hardcore\" \u2014 if his result is not worse than the result that 90% of players have, but more than 1% of players have better results;  \"pro\" \u2014 if his result is not worse than the result that 99% of players have.  When the percentage is calculated the player himself is taken into account. That means that if two players played the game and the first one gained 100 points and the second one 1000 points, then the first player's result is not worse than the result that 50% of players have, and the second one is not worse than the result that 100% of players have.Vasya gave you the last year Plane of Tanks results. Help Vasya determine each player's category.InputThe first line contains the only integer number n (1\u2009\u2264\u2009n\u2009\u2264\u20091000) \u2014 a number of records with the players' results.Each of the next n lines contains a player's name and the amount of points, obtained by the player for the round, separated with a space. The name contains not less than 1 and no more than 10 characters. The name consists of lowercase Latin letters only. It is guaranteed that any two different players have different names. The amount of points, obtained by the player for the round, is a non-negative integer number and does not exceed 1000.OutputPrint on the first line the number m \u2014 the number of players, who participated in one round at least.Each one of the next m lines should contain a player name and a category he belongs to, separated with space. Category can be one of the following: \"noob\", \"random\", \"average\", \"hardcore\" or \"pro\" (without quotes). The name of each player should be printed only once. Player names with respective categories can be printed in an arbitrary order.ExamplesInputCopy5vasya 100vasya 200artem 100kolya 200igor 250OutputCopy4artem noobigor prokolya randomvasya randomInputCopy3vasya 200kolya 1000vasya 1000OutputCopy2kolya provasya proNoteIn the first example the best result, obtained by artem is not worse than the result that 25% of players have (his own result), so he belongs to category \"noob\". vasya and kolya have best results not worse than the results that 75% players have (both of them and artem), so they belong to category \"random\". igor has best result not worse than the result that 100% of players have (all other players and himself), so he belongs to category \"pro\".In the second example both players have the same amount of points, so they have results not worse than 100% players have, so they belong to category \"pro\"."], "Oh Sweet Beaverette": ["https://codeforces.com/problemset/problem/331/A1", "A1. Oh Sweet Beaverettetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard output \u2014 Oh my sweet Beaverette, would you fancy a walk along a wonderful woodland belt with me?   \u2014 Of course, my Smart Beaver! Let us enjoy the splendid view together. How about Friday night? At this point the Smart Beaver got rushing. Everything should be perfect by Friday, so he needed to prepare the belt to the upcoming walk. He needed to cut down several trees.Let's consider the woodland belt as a sequence of trees. Each tree i is described by the esthetic appeal ai \u2014 some trees are very esthetically pleasing, others are 'so-so', and some trees are positively ugly!The Smart Beaver calculated that he needed the following effects to win the Beaverette's heart:   The first objective is to please the Beaverette: the sum of esthetic appeal of the remaining trees must be maximum possible;  the second objective is to surprise the Beaverette: the esthetic appeal of the first and the last trees in the resulting belt must be the same;  and of course, the walk should be successful: there must be at least two trees in the woodland belt left. Now help the Smart Beaver! Which trees does he need to cut down to win the Beaverette's heart?InputThe first line contains a single integer n \u2014 the initial number of trees in the woodland belt, 2\u2009\u2264\u2009n. The second line contains space-separated integers ai \u2014 the esthetic appeals of each tree. All esthetic appeals do not exceed 109 in their absolute value.  to get 30 points, you need to solve the problem with constraints: n\u2009\u2264\u2009100 (subproblem A1);  to get 100 points, you need to solve the problem with constraints: n\u2009\u2264\u20093\u00b7105 (subproblems A1+A2). OutputIn the first line print two integers \u2014 the total esthetic appeal of the woodland belt after the Smart Beaver's intervention and the number of the cut down trees k.In the next line print k integers \u2014 the numbers of the trees the Beaver needs to cut down. Assume that the trees are numbered from 1 to n from left to right.If there are multiple solutions, print any of them. It is guaranteed that at least two trees have equal esthetic appeal.ExamplesInputCopy51 2 3 1 2OutputCopy8 11 InputCopy51 -2 3 1 -2OutputCopy5 22 5 "], "Boot Camp": ["https://codeforces.com/problemset/problem/1346/B", "B. Boot Camptime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBerland State University (BSU) is conducting a programming boot camp. The boot camp will last for nn days, and the BSU lecturers are planning to give some number of lectures during these days.Some days of the boot camp are already planned as excursion days, and no lectures should be held during these days. To make sure the participants don't get too tired of learning to program, the number of lectures for each day should not exceed k1k1, and the number of lectures for each pair of consecutive days should not exceed k2k2.Can you calculate the maximum number of lectures that can be conducted during the boot camp? Formally, find the maximum integer mm such that it is possible to choose nn non-negative integers c1c1, c2c2, ..., cncn (where cici is the number of lectures held during day ii) so that:  c1+c2+\u22ef+cn=mc1+c2+\u22ef+cn=m;  for each excursion day dd, cd=0cd=0;  for each day ii, ci\u2264k1ci\u2264k1;  for each pair of consecutive days (i,i+1)(i,i+1), ci+ci+1\u2264k2ci+ci+1\u2264k2. Note that there might be some non-excursion days without lectures (i.\u2009e., it is possible that ci=0ci=0 even if ii is not an excursion day).InputThe first line contains one integer tt (1\u2264t\u2264501\u2264t\u226450) \u2014 the number of testcases.Then the testcases follow, each consists of two lines. The first line contains three integers nn, k1k1, k2k2 (1\u2264n\u226450001\u2264n\u22645000; 1\u2264k1\u2264k2\u22642000001\u2264k1\u2264k2\u2264200000).The second line contains one string ss consisting of exactly nn characters, each character is either 0 or 1. If si=0si=0, then day ii is an excursion day (so there should be no lectures during that day); if si=1si=1, then day ii is not an excursion day.OutputFor each test case, print one integer \u2014 the maximum possible value of mm (the number of lectures that can be conducted).ExampleInputCopy4\n4 5 7\n1011\n4 4 10\n0101\n5 3 4\n11011\n6 4 6\n011101\nOutputCopy12\n8\n8\n14\n"], "Polycarp and the Language of Gods": ["https://codeforces.com/problemset/problem/1431/B", "B. Polycarp and the Language of Godstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has just finished writing down the lecture on elvish languages. The language this week was \"VwV\" (pronounced as \"uwu\"). The writing system of this language consists of only two lowercase Latin letters: 'v' and 'w'.Unfortunately, Polycarp has written all the lecture in cursive and without any spaces, so the notes look like a neverending sequence of squiggles. To be exact, Polycarp can't tell 'w' apart from 'vv' in his notes as both of them consist of the same two squiggles.Luckily, his brother Monocarp has better writing habits, so Polycarp managed to take his notes and now wants to make his own notes more readable. To do that he can follow the notes of Monocarp and underline some letters in his own notes in such a way that there is no more ambiguity. If he underlines a 'v', then it can't be mistaken for a part of some 'w', and if the underlines a 'w', then it can't be mistaken for two adjacent letters 'v'.What is the minimum number of letters Polycarp should underline to make his notes unambiguous?InputThe first line contains a single integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number of testcases.Each of the next tt lines contains a non-empty string in VwV language, which consists only of lowercase Latin letters 'v' and 'w'. The length of the string does not exceed 100100.OutputFor each testcase print a single integer: the minimum number of letters Polycarp should underline so that there is no ambiguity in his notes.ExampleInputCopy5\nvv\nv\nw\nvwv\nvwvvwv\nOutputCopy1\n0\n1\n1\n3\nNoteIn the first testcase it's enough to underline any of the two letters 'v'.In the second testcase the letter 'v' is not ambiguous by itself already, so you don't have to underline anything.In the third testcase you have to underline 'w', so that you don't mix it up with two letters 'v'.In the fourth testcase you can underline 'w' to avoid all the ambiguity.In the fifth testcase you can underline both letters 'w' and any of the two letters 'v' between them."], "Binary Blocks": ["https://codeforces.com/problemset/problem/838/A", "A. Binary Blockstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an image, that can be represented with a 2-d n by m grid of pixels. Each pixel of the image is either on or off, denoted by the characters \"0\" or \"1\", respectively. You would like to compress this image. You want to choose an integer k\u2009>\u20091 and split the image into k by k blocks. If n and m are not divisible by k, the image is padded with only zeros on the right and bottom so that they are divisible by k. Each pixel in each individual block must have the same value. The given image may not be compressible in its current state. Find the minimum number of pixels you need to toggle (after padding) in order for the image to be compressible for some k. More specifically, the steps are to first choose k, then the image is padded with zeros, then, we can toggle the pixels so it is compressible for this k. The image must be compressible in that state.InputThe first line of input will contain two integers n,\u2009m (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20092\u2009500), the dimensions of the image.The next n lines of input will contain a binary string with exactly m characters, representing the image.OutputPrint a single integer, the minimum number of pixels needed to toggle to make the image compressible.ExampleInputCopy3 5001001011011001OutputCopy5NoteWe first choose k\u2009=\u20092.The image is padded as follows: 001000101100110010000000We can toggle the image to look as follows: 001100001100000000000000We can see that this image is compressible for k\u2009=\u20092."], "Generate Bell state": ["https://codeforces.com/problemset/problem/1001/B", "B. Generate Bell statetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two qubits in state  and an integer index. Your task is to create one of the Bell states on them according to the index:    InputYou have to implement an operation which takes an array of 2 qubits and an integer as an input and has no output. The \"output\" of your solution is the state in which it left the input qubits.Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (qs : Qubit[], index : Int) : ()    {        body        {            // your code here        }    }}"], "Distinguish plus state and minus state": ["https://codeforces.com/problemset/problem/1001/D", "D. Distinguish plus state and minus statetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a qubit which is guaranteed to be either in  or in  state. Your task is to perform necessary operations and measurements to figure out which state it was and to return 1 if it was a  state or -1 if it was  state. The state of the qubit after the operations does not matter.InputYou have to implement an operation which takes a qubit as an input and returns an integer. Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (q : Qubit) : Int    {        body        {            // your code here        }    }}"], "Generate GHZ state": ["https://codeforces.com/problemset/problem/1001/C", "C. Generate GHZ statetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given N qubits (1\u2009\u2264\u2009N\u2009\u2264\u20098) in zero state . Your task is to create Greenberger\u2013Horne\u2013Zeilinger (GHZ) state on them:Note that for N\u2009=\u20091 and N\u2009=\u20092 GHZ state becomes states  and  from the previous tasks, respectively.InputYou have to implement an operation which takes an array of N qubits as an input and has no output. The \"output\" of your solution is the state in which it left the input qubits.Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (qs : Qubit[]) : ()    {        body        {            // your code here        }    }}"], "Oracle for f(x) = k-th element of x": ["https://codeforces.com/problemset/problem/1001/G", "G. Oracle for f(x) = k-th element of xtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a quantum oracle on N qubits which implements a function f(x)\u2009=\u2009xk, i.e. the value of the function is the value of the k-th qubit.For an explanation on how the quantum oracles work, see the tutorial blog post.InputYou have to implement an operation which takes the following inputs: an array of qubits x (input register), a qubit y (output qubit), 0-based index of the qubit from input register K ().The operation doesn't have an output; the \"output\" of your solution is the state in which it left the qubits.Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (x : Qubit[], y : Qubit, k : Int) : ()    {        body        {            // your code here        }    }}"], "Crystal Ball Sequence": ["https://codeforces.com/problemset/problem/470/A", "A. Crystal Ball Sequencetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputCrystal ball sequence on hexagonal lattice is defined as follows: n-th element is the number of lattice points inside a hexagon with (n\u2009+\u20091) points on each side. The formula is Hn\u2009=\u20093\u00b7n\u00b7(n\u2009+\u20091)\u2009+\u20091. You are given n; calculate n-th element of the sequence.InputThe only line of input contains an integer n (0\u2009\u2264\u2009n\u2009\u2264\u20099).OutputOutput the n-th element of crystal ball sequence.ExamplesInputCopy1OutputCopy7InputCopy3OutputCopy37"], "Gnikool Ssalg": ["https://codeforces.com/problemset/problem/130/B", "B. Gnikool Ssalgtime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputYou are given a string. Reverse its characters.InputThe only line of input contains a string between 1 and 100 characters long. Each character of the string has ASCII-code between 33 (exclamation mark) and 126 (tilde), inclusive.OutputOutput the characters of this string in reverse order.ExamplesInputCopysecrofedocOutputCopycodeforcesInputCopy!ssalg-gnikool5OutputCopy5looking-glass!"], "A+B": ["https://codeforces.com/problemset/problem/100/C", "C. A+Btime limit per test2 secondsmemory limit per test64 megabytesinputstandard inputoutputstandard outputBijan is new to programming. He learned recently that programmers do not code every bit of their apps from scratch.For example they never write a code to sum two integers, because their languages have the ability to do the sum. But can they use it? Can an experienced coder who has attended more than 100 contests, sum two integers?Bijan is not sure about this. What's your opinion?InputYou are given two integers a and b, one per line (1\u2009\u2264\u2009a,\u2009b\u2009<\u200910500). These numbers will not have any leading zeros.OutputWrite sum of the two integers. Do not put any leading zeros.ExamplesInputCopy23OutputCopy5InputCopy13902011OutputCopy3401InputCopy1234554321OutputCopy66666"], "Chocolate Bar": ["https://codeforces.com/problemset/problem/683/D", "D. Chocolate Bartime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA chocolate bar has a rectangular shape and consists of n\u2009\u00d7\u2009m slices. In other words, a bar consists of n rows with m slices of chocolate in each row.Each slice of chocolate is known to weigh 1 gram. Your task is to determine for each of the q chocolate bars whether it is possible to obtain a piece weighing p grams by breaking the bar several (possibly zero) times. The final piece of the chocolate bar should be whole, and breaks are made along the line of slices' section for the whole length of the current piece.InputThe first line contains the positive integer q (1\u2009\u2264\u2009q\u2009\u2264\u2009100) \u2014 the number of chocolate bars. Each of the following q lines contains three positive integers n, m and p (1\u2009\u2264\u2009n,\u2009m,\u2009p\u2009\u2264\u20091000) \u2014 the size of the chocolate bar, and the weight of the piece which should be obtained.OutputThe output should contain q lines and the i-th line must contain \"Yes\" (without the quotes), if it is possible to perform the task for i-th chocolate bar, or \"No\" otherwise.ExampleInputCopy23 3 44 4 7OutputCopyYesNo"], "HQ9+": ["https://codeforces.com/problemset/problem/188/E", "E. HQ9+time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHQ9+ is a joke programming language which has only four one-character instructions: \"H\" prints \"Hello, World!\", \"Q\" prints the whole source code of the program itself (at each call), \"9\" prints the lyrics of \"99 Bottles of Beer\" song,  \"+\" increments the value stored in the internal accumulator.Instructions \"H\" and \"Q\" are case-sensitive and must be uppercase. The characters of the program which are not instructions are ignored.You are given a program written in HQ9+. You have to figure out whether executing this program will produce any output.InputThe input will consist of a single line p which will give a program in HQ9+. String p will contain between 1 and 100 characters, inclusive. ASCII-code of each character of p will be between 33 (exclamation mark) and 126 (tilde), inclusive.OutputOutput \"YES\", if executing the program will produce any output, and \"NO\" otherwise (quotes for clarity only).ExamplesInputCopyHello!OutputCopyYESInputCopyProgopediaOutputCopyNONoteIn the first case the program contains only one instruction \u2014 \"H\", which prints \"Hello, World!\".In the second case none of the program characters are language instructions."], "Binary Notation": ["https://codeforces.com/problemset/problem/188/F", "F. Binary Notationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a positive integer n. Output its binary notation.InputThe only line of input data contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009106).OutputOutput the binary notation of n (without any leading zeros).ExamplesInputCopy5OutputCopy101InputCopy101OutputCopy1100101NoteIn the first example 5\u2009=\u20091\u2009*\u200922\u2009+\u20090\u2009*\u200921\u2009+\u20091\u2009*\u200920."], "Boredom": ["https://codeforces.com/problemset/problem/455/A", "A. Boredomtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlex doesn't like boredom. That's why whenever he gets bored, he comes up with games. One long winter evening he came up with a game and decided to play it.Given a sequence a consisting of n integers. The player can make several steps. In a single step he can choose an element of the sequence (let's denote it ak) and delete it, at that all elements equal to ak\u2009+\u20091 and ak\u2009-\u20091 also must be deleted from the sequence. That step brings ak points to the player. Alex is a perfectionist, so he decided to get as many points as possible. Help him.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) that shows how many numbers are in Alex's sequence. The second line contains n integers a1, a2, ..., an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105).OutputPrint a single integer \u2014 the maximum number of points that Alex can earn.ExamplesInputCopy21 2OutputCopy2InputCopy31 2 3OutputCopy4InputCopy91 2 1 3 2 2 2 2 3OutputCopy10NoteConsider the third test example. At first step we need to choose any element equal to 2. After that step our sequence looks like this [2,\u20092,\u20092,\u20092]. Then we do 4 steps, on each step we choose any element equals to 2. In total we earn 10 points."], "Two Substrings": ["https://codeforces.com/problemset/problem/550/A", "A. Two Substringstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given string s. Your task is to determine if the given string s contains two non-overlapping substrings \"AB\" and \"BA\" (the substrings can go in any order).InputThe only line of input contains a string s of length between 1 and 105 consisting of uppercase Latin letters.OutputPrint \"YES\" (without the quotes), if string s contains two non-overlapping substrings \"AB\" and \"BA\", and \"NO\" otherwise.ExamplesInputCopyABAOutputCopyNOInputCopyBACFABOutputCopyYESInputCopyAXBYBXAOutputCopyNONoteIn the first sample test, despite the fact that there are substrings \"AB\" and \"BA\", their occurrences overlap, so the answer is \"NO\".In the second sample test there are the following occurrences of the substrings: BACFAB.In the third sample test there is no substring \"AB\" nor substring \"BA\"."], "Kefa and Park": ["https://codeforces.com/problemset/problem/580/C", "C. Kefa and Parktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputKefa decided to celebrate his first big salary by going to the restaurant. He lives by an unusual park. The park is a rooted tree consisting of n vertices with the root at vertex 1. Vertex 1 also contains Kefa's house. Unfortunaely for our hero, the park also contains cats. Kefa has already found out what are the vertices with cats in them.The leaf vertices of the park contain restaurants. Kefa wants to choose a restaurant where he will go, but unfortunately he is very afraid of cats, so there is no way he will go to the restaurant if the path from the restaurant to his house contains more than m consecutive vertices with cats. Your task is to help Kefa count the number of restaurants where he can go.InputThe first line contains two integers, n and m (2\u2009\u2264\u2009n\u2009\u2264\u2009105, 1\u2009\u2264\u2009m\u2009\u2264\u2009n) \u2014 the number of vertices of the tree and the maximum number of consecutive vertices with cats that is still ok for Kefa.The second line contains n integers a1,\u2009a2,\u2009...,\u2009an, where each ai either equals to 0 (then vertex i has no cat), or equals to 1 (then vertex i has a cat).Next n\u2009-\u20091 lines contains the edges of the tree in the format \"xi yi\" (without the quotes) (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n, xi\u2009\u2260\u2009yi), where xi and yi are the vertices of the tree, connected by an edge. It is guaranteed that the given set of edges specifies a tree.OutputA single integer \u2014 the number of distinct leaves of a tree the path to which from Kefa's home contains at most m consecutive vertices with cats.ExamplesInputCopy4 11 1 0 01 21 31 4OutputCopy2InputCopy7 11 0 1 1 0 0 01 21 32 42 53 63 7OutputCopy2NoteLet us remind you that a tree is a connected graph on n vertices and n\u2009-\u20091 edge. A rooted tree is a tree with a special vertex called root. In a rooted tree among any two vertices connected by an edge, one vertex is a parent (the one closer to the root), and the other one is a child. A vertex is called a leaf, if it has no children.Note to the first sample test:  The vertices containing cats are marked red. The restaurants are at vertices 2, 3, 4. Kefa can't go only to the restaurant located at vertex 2.Note to the second sample test:  The restaurants are located at vertices 4, 5, 6, 7. Kefa can't go to restaurants 6, 7."], "Divisibility by Eight": ["https://codeforces.com/problemset/problem/550/C", "C. Divisibility by Eighttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a non-negative integer n, its decimal representation consists of at most 100 digits and doesn't contain leading zeroes.Your task is to determine if it is possible in this case to remove some of the digits (possibly not remove any digit at all) so that the result contains at least one digit, forms a non-negative integer, doesn't have leading zeroes and is divisible by 8. After the removing, it is forbidden to rearrange the digits.If a solution exists, you should print it.InputThe single line of the input contains a non-negative integer n. The representation of number n doesn't contain any leading zeroes and its length doesn't exceed 100 digits. OutputPrint \"NO\" (without quotes), if there is no such way to remove some digits from number n. Otherwise, print \"YES\" in the first line and the resulting number after removing digits from number n in the second line. The printed number must be divisible by 8.If there are multiple possible answers, you may print any of them.ExamplesInputCopy3454OutputCopyYES344InputCopy10OutputCopyYES0InputCopy111111OutputCopyNO"], "Woodcutters": ["https://codeforces.com/problemset/problem/545/C", "C. Woodcutterstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Susie listens to fairy tales before bed every day. Today's fairy tale was about wood cutters and the little girl immediately started imagining the choppers cutting wood. She imagined the situation that is described below.There are n trees located along the road at points with coordinates x1,\u2009x2,\u2009...,\u2009xn. Each tree has its height hi. Woodcutters can cut down a tree and fell it to the left or to the right. After that it occupies one of the segments [xi\u2009-\u2009hi,\u2009xi] or [xi;xi\u2009+\u2009hi]. The tree that is not cut down occupies a single point with coordinate xi. Woodcutters can fell a tree if the segment to be occupied by the fallen tree doesn't contain any occupied point. The woodcutters want to process as many trees as possible, so Susie wonders, what is the maximum number of trees to fell. InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of trees.Next n lines contain pairs of integers xi,\u2009hi (1\u2009\u2264\u2009xi,\u2009hi\u2009\u2264\u2009109) \u2014 the coordinate and the height of the \u0456-th tree.The pairs are given in the order of ascending xi. No two trees are located at the point with the same coordinate.OutputPrint a single number \u2014 the maximum number of trees that you can cut down by the given rules.ExamplesInputCopy51 22 15 1010 919 1OutputCopy3InputCopy51 22 15 1010 920 1OutputCopy4NoteIn the first sample you can fell the trees like that:   fell the 1-st tree to the left \u2014 now it occupies segment [\u2009-\u20091;1]  fell the 2-nd tree to the right \u2014 now it occupies segment [2;3]  leave the 3-rd tree \u2014 it occupies point 5  leave the 4-th tree \u2014 it occupies point 10  fell the 5-th tree to the right \u2014 now it occupies segment [19;20] In the second sample you can also fell 4-th tree to the right, after that it will occupy segment [10;19]."], "Powered Addition": ["https://codeforces.com/problemset/problem/1338/A", "A. Powered Additiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have an array aa of length nn. For every positive integer xx you are going to perform the following operation during the xx-th second:  Select some distinct indices i1,i2,\u2026,iki1,i2,\u2026,ik which are between 11 and nn inclusive, and add 2x\u221212x\u22121 to each corresponding position of aa. Formally, aij:=aij+2x\u22121aij:=aij+2x\u22121 for j=1,2,\u2026,kj=1,2,\u2026,k. Note that you are allowed to not select any indices at all. You have to make aa nondecreasing as fast as possible. Find the smallest number TT such that you can make the array nondecreasing after at most TT seconds.Array aa is nondecreasing if and only if a1\u2264a2\u2264\u2026\u2264ana1\u2264a2\u2264\u2026\u2264an.You have to answer tt independent test cases.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.The first line of each test case contains single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the length of array aa. It is guaranteed that the sum of values of nn over all test cases in the input does not exceed 105105.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109).OutputFor each test case, print the minimum number of seconds in which you can make aa nondecreasing.ExampleInputCopy3\n4\n1 7 6 5\n5\n1 2 3 4 5\n2\n0 -4\nOutputCopy2\n0\n3\nNoteIn the first test case, if you select indices 3,43,4 at the 11-st second and 44 at the 22-nd second, then aa will become [1,7,7,8][1,7,7,8]. There are some other possible ways to make aa nondecreasing in 22 seconds, but you can't do it faster.In the second test case, aa is already nondecreasing, so answer is 00.In the third test case, if you do nothing at first 22 seconds and select index 22 at the 33-rd second, aa will become [0,0][0,0]."], "Kefa and Company": ["https://codeforces.com/problemset/problem/580/B", "B. Kefa and Companytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputKefa wants to celebrate his first big salary by going to restaurant. However, he needs company. Kefa has n friends, each friend will agree to go to the restaurant if Kefa asks. Each friend is characterized by the amount of money he has and the friendship factor in respect to Kefa. The parrot doesn't want any friend to feel poor compared to somebody else in the company (Kefa doesn't count). A friend feels poor if in the company there is someone who has at least d units of money more than he does. Also, Kefa wants the total friendship factor of the members of the company to be maximum. Help him invite an optimal company!InputThe first line of the input contains two space-separated integers, n and d (1\u2009\u2264\u2009n\u2009\u2264\u2009105, ) \u2014 the number of Kefa's friends and the minimum difference between the amount of money in order to feel poor, respectively.Next n lines contain the descriptions of Kefa's friends, the (i\u2009+\u20091)-th line contains the description of the i-th friend of type mi, si (0\u2009\u2264\u2009mi,\u2009si\u2009\u2264\u2009109) \u2014 the amount of money and the friendship factor, respectively. OutputPrint the maximum total friendship factir that can be reached.ExamplesInputCopy4 575 50 100150 2075 1OutputCopy100InputCopy5 1000 711 3299 1046 887 54OutputCopy111NoteIn the first sample test the most profitable strategy is to form a company from only the second friend. At all other variants the total degree of friendship will be worse.In the second sample test we can take all the friends."], "Winner": ["https://codeforces.com/problemset/problem/2/A", "A. Winnertime limit per test1 secondmemory limit per test64 megabytesinputstandard inputoutputstandard outputThe winner of the card game popular in Berland \"Berlogging\" is determined according to the following rules. If at the end of the game there is only one player with the maximum number of points, he is the winner. The situation becomes more difficult if the number of such players is more than one. During each round a player gains or loses a particular number of points. In the course of the game the number of points is registered in the line \"name score\", where name is a player's name, and score is the number of points gained in this round, which is an integer number. If score is negative, this means that the player has lost in the round. So, if two or more players have the maximum number of points (say, it equals to m) at the end of the game, than wins the one of them who scored at least m points first. Initially each player has 0 points. It's guaranteed that at the end of the game at least one player has a positive number of points.InputThe first line contains an integer number n (1\u2009\u2009\u2264\u2009\u2009n\u2009\u2009\u2264\u2009\u20091000), n is the number of rounds played. Then follow n lines, containing the information about the rounds in \"name score\" format in chronological order, where name is a string of lower-case Latin letters with the length from 1 to 32, and score is an integer number between -1000 and 1000, inclusive.OutputPrint the name of the winner.ExamplesInputCopy3mike 3andrew 5mike 2OutputCopyandrewInputCopy3andrew 3andrew 2mike 5OutputCopyandrew"], "Little Girl and Maximum Sum": ["https://codeforces.com/problemset/problem/276/C", "C. Little Girl and Maximum Sumtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe little girl loves the problems on array queries very much.One day she came across a rather well-known problem: you've got an array of nn elements (the elements of the array are indexed starting from 1); also, there are qq queries, each one is defined by a pair of integers lili, riri (1\u2264li\u2264ri\u2264n)(1\u2264li\u2264ri\u2264n). You need to find for each query the sum of elements of the array with indexes from lili to riri, inclusive.The little girl found the problem rather boring. She decided to reorder the array elements before replying to the queries in a way that makes the sum of query replies maximum possible. Your task is to find the value of this maximum sum.InputThe first line contains two space-separated integers nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) and qq (1\u2264q\u22642\u22c51051\u2264q\u22642\u22c5105) \u2014 the number of elements in the array and the number of queries, correspondingly.The next line contains nn space-separated integers aiai (1\u2264ai\u22642\u22c51051\u2264ai\u22642\u22c5105) \u2014 the array elements.Each of the following qq lines contains two space-separated integers lili and riri (1\u2264li\u2264ri\u2264n1\u2264li\u2264ri\u2264n) \u2014 the ii-th query.OutputIn a single line print, a single integer \u2014 the maximum sum of query replies after the array elements are reordered.Please, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.ExamplesInputCopy3 35 3 21 22 31 3OutputCopy25InputCopy5 35 2 4 1 31 52 32 3OutputCopy33"], "Plus and Multiply": ["https://codeforces.com/problemset/problem/1542/B", "B. Plus and Multiplytime limit per test3 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputThere is an infinite set generated as follows:  11 is in this set.  If xx is in this set, x\u22c5ax\u22c5a and x+bx+b both are in this set. For example, when a=3a=3 and b=6b=6, the five smallest elements of the set are:  11,  33 (11 is in this set, so 1\u22c5a=31\u22c5a=3 is in this set),  77 (11 is in this set, so 1+b=71+b=7 is in this set),  99 (33 is in this set, so 3\u22c5a=93\u22c5a=9 is in this set),  1313 (77 is in this set, so 7+b=137+b=13 is in this set). Given positive integers aa, bb, nn, determine if nn is in this set.InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u22641051\u2264t\u2264105) \u2014 the number of test cases. The description of the test cases follows.The only line describing each test case contains three integers nn, aa, bb (1\u2264n,a,b\u22641091\u2264n,a,b\u2264109) separated by a single space.OutputFor each test case, print \"Yes\" if nn is in this set, and \"No\" otherwise. You can print each letter in any case.ExampleInputCopy5\n24 3 5\n10 3 6\n2345 1 4\n19260817 394 485\n19260817 233 264\nOutputCopyYes\nNo\nYes\nNo\nYes\nNoteIn the first test case, 2424 is generated as follows:  11 is in this set, so 33 and 66 are in this set;  33 is in this set, so 99 and 88 are in this set;  88 is in this set, so 2424 and 1313 are in this set. Thus we can see 2424 is in this set.The five smallest elements of the set in the second test case is described in statements. We can see that 1010 isn't among them."], "Codeforces Subsequences": ["https://codeforces.com/problemset/problem/1368/B", "B. Codeforces Subsequencestime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputKarl likes Codeforces and subsequences. He wants to find a string of lowercase English letters that contains at least kk subsequences codeforces. Out of all possible strings, Karl wants to find a shortest one.Formally, a codeforces subsequence of a string ss is a subset of ten characters of ss that read codeforces from left to right. For example, codeforces contains codeforces a single time, while codeforcesisawesome contains codeforces four times: codeforcesisawesome, codeforcesisawesome, codeforcesisawesome, codeforcesisawesome.Help Karl find any shortest string that contains at least kk codeforces subsequences.InputThe only line contains a single integer kk (1\u2264k\u22641016)1\u2264k\u22641016).OutputPrint a shortest string of lowercase English letters that contains at least kk codeforces subsequences. If there are several such strings, print any of them.ExamplesInputCopy1\nOutputCopycodeforces\nInputCopy3\nOutputCopycodeforcesss"], "Tetrahedron": ["https://codeforces.com/problemset/problem/166/E", "E. Tetrahedrontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a tetrahedron. Let's mark its vertices with letters A, B, C and D correspondingly.  An ant is standing in the vertex D of the tetrahedron. The ant is quite active and he wouldn't stay idle. At each moment of time he makes a step from one vertex to another one along some edge of the tetrahedron. The ant just can't stand on one place.You do not have to do much to solve the problem: your task is to count the number of ways in which the ant can go from the initial vertex D to itself in exactly n steps. In other words, you are asked to find out the number of different cyclic paths with the length of n from vertex D to itself. As the number can be quite large, you should print it modulo 1000000007 (109\u2009+\u20097). InputThe first line contains the only integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009107) \u2014 the required length of the cyclic path.OutputPrint the only integer \u2014 the required number of ways modulo 1000000007 (109\u2009+\u20097).ExamplesInputCopy2OutputCopy3InputCopy4OutputCopy21NoteThe required paths in the first sample are:   D\u2009-\u2009A\u2009-\u2009D  D\u2009-\u2009B\u2009-\u2009D  D\u2009-\u2009C\u2009-\u2009D "], "Decrease the Sum of Digits": ["https://codeforces.com/problemset/problem/1409/D", "D. Decrease the Sum of Digitstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a positive integer nn. In one move, you can increase nn by one (i.e. make n:=n+1n:=n+1). Your task is to find the minimum number of moves you need to perform in order to make the sum of digits of nn be less than or equal to ss.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u2014 the number of test cases. Then tt test cases follow.The only line of the test case contains two integers nn and ss (1\u2264n\u226410181\u2264n\u22641018; 1\u2264s\u22641621\u2264s\u2264162).OutputFor each test case, print the answer: the minimum number of moves you need to perform in order to make the sum of digits of nn be less than or equal to ss.ExampleInputCopy5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\nOutputCopy8\n0\n500\n2128012501878\n899999999999999999\n"], "Binary String To Subsequences": ["https://codeforces.com/problemset/problem/1399/D", "D. Binary String To Subsequencestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a binary string ss consisting of nn zeros and ones.Your task is to divide the given string into the minimum number of subsequences in such a way that each character of the string belongs to exactly one subsequence and each subsequence looks like \"010101 ...\" or \"101010 ...\" (i.e. the subsequence should not contain two adjacent zeros or ones).Recall that a subsequence is a sequence that can be derived from the given sequence by deleting zero or more elements without changing the order of the remaining elements. For example, subsequences of \"1011101\" are \"0\", \"1\", \"11111\", \"0111\", \"101\", \"1001\", but not \"000\", \"101010\" and \"11100\".You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u2014 the number of test cases. Then tt test cases follow.The first line of the test case contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the length of ss. The second line of the test case contains nn characters '0' and '1' \u2014 the string ss.It is guaranteed that the sum of nn does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105).OutputFor each test case, print the answer: in the first line print one integer kk (1\u2264k\u2264n1\u2264k\u2264n) \u2014 the minimum number of subsequences you can divide the string ss to. In the second line print nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264k1\u2264ai\u2264k), where aiai is the number of subsequence the ii-th character of ss belongs to.If there are several answers, you can print any.ExampleInputCopy4\n4\n0011\n6\n111111\n5\n10101\n8\n01010000\nOutputCopy2\n1 2 2 1 \n6\n1 2 3 4 5 6 \n1\n1 1 1 1 1 \n4\n1 1 1 1 1 2 3 4 \n"], "Omkar and Baseball": ["https://codeforces.com/problemset/problem/1372/C", "C. Omkar and Baseballtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPatrick likes to play baseball, but sometimes he will spend so many hours hitting home runs that his mind starts to get foggy! Patrick is sure that his scores across nn sessions follow the identity permutation (ie. in the first game he scores 11 point, in the second game he scores 22 points and so on). However, when he checks back to his record, he sees that all the numbers are mixed up! Define a special exchange as the following: choose any subarray of the scores and permute elements such that no element of subarray gets to the same position as it was before the exchange. For example, performing a special exchange on [1,2,3][1,2,3] can yield [3,1,2][3,1,2] but it cannot yield [3,2,1][3,2,1] since the 22 is in the same position. Given a permutation of nn integers, please help Patrick find the minimum number of special exchanges needed to make the permutation sorted! It can be proved that under given constraints this number doesn't exceed 10181018.An array aa is a subarray of an array bb if aa can be obtained from bb by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641001\u2264t\u2264100). Description of the test cases follows.The first line of each test case contains integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u00a0\u2014 the length of the given permutation.The second line of each test case contains nn integers a1,a2,...,ana1,a2,...,an (1\u2264ai\u2264n1\u2264ai\u2264n) \u00a0\u2014 the initial permutation.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output one integer: the minimum number of special exchanges needed to sort the permutation.ExampleInputCopy2\n5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7\nOutputCopy0\n2\nNoteIn the first permutation, it is already sorted so no exchanges are needed.It can be shown that you need at least 22 exchanges to sort the second permutation.[3,2,4,5,1,6,7][3,2,4,5,1,6,7]Perform special exchange on range (1,51,5)[4,1,2,3,5,6,7][4,1,2,3,5,6,7]Perform special exchange on range (1,41,4)[1,2,3,4,5,6,7][1,2,3,4,5,6,7]"], "a-Good String": ["https://codeforces.com/problemset/problem/1385/D", "D. a-Good Stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a string s[1\u2026n]s[1\u2026n] consisting of lowercase Latin letters. It is guaranteed that n=2kn=2k for some integer k\u22650k\u22650.The string s[1\u2026n]s[1\u2026n] is called cc-good if at least one of the following three conditions is satisfied:  The length of ss is 11, and it consists of the character cc (i.e. s1=cs1=c); The length of ss is greater than 11, the first half of the string consists of only the character cc (i.e. s1=s2=\u22ef=sn2=cs1=s2=\u22ef=sn2=c) and the second half of the string (i.e. the string sn2+1sn2+2\u2026snsn2+1sn2+2\u2026sn) is a (c+1)(c+1)-good string;  The length of ss is greater than 11, the second half of the string consists of only the character cc (i.e. sn2+1=sn2+2=\u22ef=sn=csn2+1=sn2+2=\u22ef=sn=c) and the first half of the string (i.e. the string s1s2\u2026sn2s1s2\u2026sn2) is a (c+1)(c+1)-good string. For example: \"aabc\" is 'a'-good, \"ffgheeee\" is 'e'-good.In one move, you can choose one index ii from 11 to nn and replace sisi with any lowercase Latin letter (any character from 'a' to 'z').Your task is to find the minimum number of moves required to obtain an 'a'-good string from ss (i.e. cc-good string for c=c= 'a'). It is guaranteed that the answer always exists.You have to answer tt independent test cases.Another example of an 'a'-good string is as follows. Consider the string s=s=\"cdbbaaaa\". It is an 'a'-good string, because:  the second half of the string (\"aaaa\") consists of only the character 'a';  the first half of the string (\"cdbb\") is 'b'-good string, because:   the second half of the string (\"bb\") consists of only the character 'b';  the first half of the string (\"cd\") is 'c'-good string, because:   the first half of the string (\"c\") consists of only the character 'c';  the second half of the string (\"d\") is 'd'-good string.   InputThe first line of the input contains one integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u2014 the number of test cases. Then tt test cases follow.The first line of the test case contains one integer nn (1\u2264n\u2264131\u00a00721\u2264n\u2264131\u00a0072) \u2014 the length of ss. It is guaranteed that n=2kn=2k for some integer k\u22650k\u22650. The second line of the test case contains the string ss consisting of nn lowercase Latin letters.It is guaranteed that the sum of nn does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105).OutputFor each test case, print the answer \u2014 the minimum number of moves required to obtain an 'a'-good string from ss (i.e. cc-good string with c=c= 'a'). It is guaranteed that the answer exists.ExampleInputCopy6\n8\nbbdcaaaa\n8\nasdfghjk\n8\nceaaaabb\n8\nbbaaddcc\n1\nz\n2\nac\nOutputCopy0\n7\n4\n5\n1\n1\n"], "Potions (Easy Version)": ["https://codeforces.com/problemset/problem/1526/C1", "C1. Potions (Easy Version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The only difference is that in this version n\u22642000n\u22642000. You can make hacks only if both versions of the problem are solved.There are nn potions in a line, with potion 11 on the far left and potion nn on the far right. Each potion will increase your health by aiai when drunk. aiai can be negative, meaning that potion will decrease will health.You start with 00 health and you will walk from left to right, from first potion to the last one. At each potion, you may choose to drink it or ignore it. You must ensure that your health is always non-negative.What is the largest number of potions you can drink?InputThe first line contains a single integer nn (1\u2264n\u226420001\u2264n\u22642000) \u2014 the number of potions. The next line contains nn integers a1a1, a2a2, ... ,anan (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109) which represent the change in health after drinking that potion.OutputOutput a single integer, the maximum number of potions you can drink without your health becoming negative.ExampleInputCopy6\n4 -4 1 -3 1 -3\nOutputCopy5NoteFor the sample, you can drink 55 potions by taking potions 11, 33, 44, 55 and 66. It is not possible to drink all 66 potions because your health will go negative at some point"], "Binary String Reconstruction": ["https://codeforces.com/problemset/problem/1352/F", "F. Binary String Reconstructiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFor some binary string ss (i.e. each character sisi is either '0' or '1'), all pairs of consecutive (adjacent) characters were written. In other words, all substrings of length 22 were written. For each pair (substring of length 22), the number of '1' (ones) in it was calculated.You are given three numbers:  n0n0 \u2014 the number of such pairs of consecutive characters (substrings) where the number of ones equals 00;  n1n1 \u2014 the number of such pairs of consecutive characters (substrings) where the number of ones equals 11;  n2n2 \u2014 the number of such pairs of consecutive characters (substrings) where the number of ones equals 22. For example, for the string s=s=\"1110011110\", the following substrings would be written: \"11\", \"11\", \"10\", \"00\", \"01\", \"11\", \"11\", \"11\", \"10\". Thus, n0=1n0=1, n1=3n1=3, n2=5n2=5.Your task is to restore any suitable binary string ss from the given values n0,n1,n2n0,n1,n2. It is guaranteed that at least one of the numbers n0,n1,n2n0,n1,n2 is greater than 00. Also, it is guaranteed that a solution exists.InputThe first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases in the input. Then test cases follow.Each test case consists of one line which contains three integers n0,n1,n2n0,n1,n2 (0\u2264n0,n1,n2\u22641000\u2264n0,n1,n2\u2264100; n0+n1+n2>0n0+n1+n2>0). It is guaranteed that the answer for given n0,n1,n2n0,n1,n2 exists.OutputPrint tt lines. Each of the lines should contain a binary string corresponding to a test case. If there are several possible solutions, print any of them.ExampleInputCopy7\n1 3 5\n1 1 1\n3 9 3\n0 1 0\n3 1 2\n0 0 3\n2 0 0\nOutputCopy1110011110\n0011\n0110001100101011\n10\n0000111\n1111\n000\n"], "Special Elements": ["https://codeforces.com/problemset/problem/1352/E", "E. Special Elementstime limit per test1 secondmemory limit per test64 megabytesinputstandard inputoutputstandard outputPay attention to the non-standard memory limit in this problem.In order to cut off efficient solutions from inefficient ones in this problem, the time limit is rather strict. Prefer to use compiled statically typed languages (e.g. C++). If you use Python, then submit solutions on PyPy. Try to write an efficient solution.The array a=[a1,a2,\u2026,an]a=[a1,a2,\u2026,an] (1\u2264ai\u2264n1\u2264ai\u2264n) is given. Its element aiai is called special if there exists a pair of indices ll and rr (1\u2264l<r\u2264n1\u2264l<r\u2264n) such that ai=al+al+1+\u2026+arai=al+al+1+\u2026+ar. In other words, an element is called special if it can be represented as the sum of two or more consecutive elements of an array (no matter if they are special or not).Print the number of special elements of the given array aa.For example, if n=9n=9 and a=[3,1,4,1,5,9,2,6,5]a=[3,1,4,1,5,9,2,6,5], then the answer is 55:  a3=4a3=4 is a special element, since a3=4=a1+a2=3+1a3=4=a1+a2=3+1;  a5=5a5=5 is a special element, since a5=5=a2+a3=1+4a5=5=a2+a3=1+4;  a6=9a6=9 is a special element, since a6=9=a1+a2+a3+a4=3+1+4+1a6=9=a1+a2+a3+a4=3+1+4+1;  a8=6a8=6 is a special element, since a8=6=a2+a3+a4=1+4+1a8=6=a2+a3+a4=1+4+1;  a9=5a9=5 is a special element, since a9=5=a2+a3=1+4a9=5=a2+a3=1+4. Please note that some of the elements of the array aa may be equal \u2014 if several elements are equal and special, then all of them should be counted in the answer.InputThe first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases in the input. Then tt test cases follow.Each test case is given in two lines. The first line contains an integer nn (1\u2264n\u226480001\u2264n\u22648000) \u2014 the length of the array aa. The second line contains integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n).It is guaranteed that the sum of the values of nn for all test cases in the input does not exceed 80008000.OutputPrint tt numbers \u2014 the number of special elements for each of the given arrays.ExampleInputCopy5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\nOutputCopy5\n1\n0\n4\n0\n"], "Zero Array": ["https://codeforces.com/problemset/problem/1201/B", "B. Zero Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array a1,a2,\u2026,ana1,a2,\u2026,an.In one operation you can choose two elements aiai and ajaj (i\u2260ji\u2260j) and decrease each of them by one.You need to check whether it is possible to make all the elements equal to zero or not.InputThe first line contains a single integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the size of the array.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the elements of the array.OutputPrint \"YES\" if it is possible to make all elements zero, otherwise print \"NO\".ExamplesInputCopy4\n1 1 2 2\nOutputCopyYESInputCopy6\n1 2 3 4 5 6\nOutputCopyNONoteIn the first example, you can make all elements equal to zero in 33 operations:   Decrease a1a1 and a2a2,  Decrease a3a3 and a4a4,  Decrease a3a3 and a4a4 In the second example, one can show that it is impossible to make all elements equal to zero."], "AGAGA XOOORRR": ["https://codeforces.com/problemset/problem/1516/B", "B. AGAGA XOOORRRtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBaby Ehab is known for his love for a certain operation. He has an array aa of length nn, and he decided to keep doing the following operation on it:   he picks 22 adjacent elements; he then removes them and places a single integer in their place: their bitwise XOR. Note that the length of the array decreases by one. Now he asks you if he can make all elements of the array equal. Since babies like to make your life harder, he requires that you leave at least 22 elements remaining.InputThe first line contains an integer tt (1\u2264t\u2264151\u2264t\u226415)\u00a0\u2014 the number of test cases you need to solve.The first line of each test case contains an integers nn (2\u2264n\u226420002\u2264n\u22642000)\u00a0\u2014 the number of elements in the array aa.The second line contains nn space-separated integers a1a1, a2a2, \u2026\u2026, anan (0\u2264ai<2300\u2264ai<230)\u00a0\u2014 the elements of the array aa.OutputIf Baby Ehab can make all elements equal while leaving at least 22 elements standing, print \"YES\". Otherwise, print \"NO\".ExampleInputCopy2\n3\n0 2 2\n4\n2 3 1 10\nOutputCopyYES\nNO\nNoteIn the first sample, he can remove the first 22 elements, 00 and 22, and replace them by 0\u22952=20\u22952=2. The array will be [2,2][2,2], so all the elements are equal.In the second sample, there's no way to make all the elements equal."], "Vasya and String": ["https://codeforces.com/problemset/problem/676/C", "C. Vasya and Stringtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputHigh school student Vasya got a string of length n as a birthday present. This string consists of letters 'a' and 'b' only. Vasya denotes beauty of the string as the maximum length of a substring (consecutive subsequence) consisting of equal letters.Vasya can change no more than k characters of the original string. What is the maximum beauty of the string he can achieve?InputThe first line of the input contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000,\u20090\u2009\u2264\u2009k\u2009\u2264\u2009n)\u00a0\u2014 the length of the string and the maximum number of characters to change.The second line contains the string, consisting of letters 'a' and 'b' only.OutputPrint the only integer\u00a0\u2014 the maximum beauty of the string Vasya can achieve by changing no more than k characters.ExamplesInputCopy4 2abbaOutputCopy4InputCopy8 1aabaabaaOutputCopy5NoteIn the first sample, Vasya can obtain both strings \"aaaa\" and \"bbbb\".In the second sample, the optimal answer is obtained with the string \"aaaaabaa\" or with the string \"aabaaaaa\"."], "Interesting Function": ["https://codeforces.com/problemset/problem/1538/F", "F. Interesting Functiontime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two integers ll and rr, where l<rl<r. We will add 11 to ll until the result is equal to rr. Thus, there will be exactly r\u2212lr\u2212l additions performed. For each such addition, let's look at the number of digits that will be changed after it.For example:   if l=909l=909, then adding one will result in 910910 and 22 digits will be changed;  if you add one to l=9l=9, the result will be 1010 and 22 digits will also be changed;  if you add one to l=489999l=489999, the result will be 490000490000 and 55 digits will be changed. Changed digits always form a suffix of the result written in the decimal system.Output the total number of changed digits, if you want to get rr from ll, adding 11 each time.InputThe first line contains an integer tt (1\u2264t\u22641041\u2264t\u2264104). Then tt test cases follow.Each test case is characterized by two integers ll and rr (1\u2264l<r\u22641091\u2264l<r\u2264109).OutputFor each test case, calculate the total number of changed digits if you want to get rr from ll, adding one each time.ExampleInputCopy4\n1 9\n9 10\n10 20\n1 1000000000\nOutputCopy8\n2\n11\n1111111110\n"], "K-Complete Word": ["https://codeforces.com/problemset/problem/1332/C", "C. K-Complete Wordtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputWord ss of length nn is called kk-complete if   ss is a palindrome, i.e. si=sn+1\u2212isi=sn+1\u2212i for all 1\u2264i\u2264n1\u2264i\u2264n;  ss has a period of kk, i.e. si=sk+isi=sk+i for all 1\u2264i\u2264n\u2212k1\u2264i\u2264n\u2212k. For example, \"abaaba\" is a 33-complete word, while \"abccba\" is not.Bob is given a word ss of length nn consisting of only lowercase Latin letters and an integer kk, such that nn is divisible by kk. He wants to convert ss to any kk-complete word.To do this Bob can choose some ii (1\u2264i\u2264n1\u2264i\u2264n) and replace the letter at position ii with some other lowercase Latin letter.So now Bob wants to know the minimum number of letters he has to replace to convert ss to any kk-complete word.Note that Bob can do zero changes if the word ss is already kk-complete.You are required to answer tt test cases independently.InputThe first line contains a single integer tt (1\u2264t\u22641051\u2264t\u2264105) \u2014 the number of test cases.The first line of each test case contains two integers nn and kk (1\u2264k<n\u22642\u22c51051\u2264k<n\u22642\u22c5105, nn is divisible by kk).The second line of each test case contains a word ss of length nn.It is guaranteed that word ss only contains lowercase Latin letters. And it is guaranteed that the sum of nn over all test cases will not exceed 2\u22c51052\u22c5105.OutputFor each test case, output one integer, representing the minimum number of characters he has to replace to convert ss to any kk-complete word.ExampleInputCopy4\n6 2\nabaaba\n6 3\nabaaba\n36 9\nhippopotomonstrosesquippedaliophobia\n21 7\nwudixiaoxingxingheclp\nOutputCopy2\n0\n23\n16\nNoteIn the first test case, one optimal solution is aaaaaa.In the second test case, the given word itself is kk-complete."], "Cyclic Components": ["https://codeforces.com/problemset/problem/977/E", "E. Cyclic Componentstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an undirected graph consisting of nn vertices and mm edges. Your task is to find the number of connected components which are cycles.Here are some definitions of graph theory.An undirected graph consists of two sets: set of nodes (called vertices) and set of edges. Each edge connects a pair of vertices. All edges are bidirectional (i.e. if a vertex aa is connected with a vertex bb, a vertex bb is also connected with a vertex aa). An edge can't connect vertex with itself, there is at most one edge between a pair of vertices.Two vertices uu and vv belong to the same connected component if and only if there is at least one path along edges connecting uu and vv.A connected component is a cycle if and only if its vertices can be reordered in such a way that:  the first vertex is connected with the second vertex by an edge,  the second vertex is connected with the third vertex by an edge,  ...  the last vertex is connected with the first vertex by an edge,  all the described edges of a cycle are distinct. A cycle doesn't contain any other edges except described above. By definition any cycle contains three or more vertices.  There are 66 connected components, 22 of them are cycles: [7,10,16][7,10,16] and [5,11,9,15][5,11,9,15]. InputThe first line contains two integer numbers nn and mm (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105, 0\u2264m\u22642\u22c51050\u2264m\u22642\u22c5105) \u2014 number of vertices and edges.The following mm lines contains edges: edge ii is given as a pair of vertices vivi, uiui (1\u2264vi,ui\u2264n1\u2264vi,ui\u2264n, ui\u2260viui\u2260vi). There is no multiple edges in the given graph, i.e. for each pair (vi,uivi,ui) there no other pairs (vi,uivi,ui) and (ui,viui,vi) in the list of edges.OutputPrint one integer \u2014 the number of connected components which are also cycles.ExamplesInputCopy5 41 23 45 43 5OutputCopy1InputCopy17 151 81 125 1111 99 1515 54 133 134 310 167 1016 714 314 417 6OutputCopy2NoteIn the first example only component [3,4,5][3,4,5] is also a cycle.The illustration above corresponds to the second example."], "Air Conditioner": ["https://codeforces.com/problemset/problem/1304/C", "C. Air Conditionertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputGildong owns a bulgogi restaurant. The restaurant has a lot of customers, so many of them like to make a reservation before visiting it.Gildong tries so hard to satisfy the customers that he even memorized all customers' preferred temperature ranges! Looking through the reservation list, he wants to satisfy all customers by controlling the temperature of the restaurant.The restaurant has an air conditioner that has 3 states: off, heating, and cooling. When it's off, the restaurant's temperature remains the same. When it's heating, the temperature increases by 1 in one minute. Lastly, when it's cooling, the temperature decreases by 1 in one minute. Gildong can change the state as many times as he wants, at any integer minutes. The air conditioner is off initially.Each customer is characterized by three values: titi \u2014 the time (in minutes) when the ii-th customer visits the restaurant, lili \u2014 the lower bound of their preferred temperature range, and hihi \u2014 the upper bound of their preferred temperature range.A customer is satisfied if the temperature is within the preferred range at the instant they visit the restaurant. Formally, the ii-th customer is satisfied if and only if the temperature is between lili and hihi (inclusive) in the titi-th minute.Given the initial temperature, the list of reserved customers' visit times and their preferred temperature ranges, you're going to help him find if it's possible to satisfy all customers.InputEach test contains one or more test cases. The first line contains the number of test cases qq (1\u2264q\u22645001\u2264q\u2264500). Description of the test cases follows.The first line of each test case contains two integers nn and mm (1\u2264n\u22641001\u2264n\u2264100, \u2212109\u2264m\u2264109\u2212109\u2264m\u2264109), where nn is the number of reserved customers and mm is the initial temperature of the restaurant.Next, nn lines follow. The ii-th line of them contains three integers titi, lili, and hihi (1\u2264ti\u22641091\u2264ti\u2264109, \u2212109\u2264li\u2264hi\u2264109\u2212109\u2264li\u2264hi\u2264109), where titi is the time when the ii-th customer visits, lili is the lower bound of their preferred temperature range, and hihi is the upper bound of their preferred temperature range. The preferred temperature ranges are inclusive.The customers are given in non-decreasing order of their visit time, and the current time is 00.OutputFor each test case, print \"YES\" if it is possible to satisfy all customers. Otherwise, print \"NO\".You can print each letter in any case (upper or lower).ExampleInputCopy4\n3 0\n5 1 2\n7 3 5\n10 -1 0\n2 12\n5 7 10\n10 16 20\n3 -100\n100 0 0\n100 -50 50\n200 100 100\n1 100\n99 -100 0\nOutputCopyYES\nNO\nYES\nNO\nNoteIn the first case, Gildong can control the air conditioner to satisfy all customers in the following way:  At 00-th minute, change the state to heating (the temperature is 0).  At 22-nd minute, change the state to off (the temperature is 2).  At 55-th minute, change the state to heating (the temperature is 2, the 11-st customer is satisfied).  At 66-th minute, change the state to off (the temperature is 3).  At 77-th minute, change the state to cooling (the temperature is 3, the 22-nd customer is satisfied).  At 1010-th minute, the temperature will be 0, which satisfies the last customer. In the third case, Gildong can change the state to heating at 00-th minute and leave it be. Then all customers will be satisfied. Note that the 11-st customer's visit time equals the 22-nd customer's visit time.In the second and the fourth case, Gildong has to make at least one customer unsatisfied."], "Balanced Bitstring": ["https://codeforces.com/problemset/problem/1404/A", "A. Balanced Bitstringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA bitstring is a string consisting only of the characters 0 and 1. A bitstring is called kk-balanced if every substring of size kk of this bitstring has an equal amount of 0 and 1 characters (k2k2 of each).You are given an integer kk and a string ss which is composed only of characters 0, 1, and ?. You need to determine whether you can make a kk-balanced bitstring by replacing every ? characters in ss with either 0 or 1.A string aa is a substring of a string bb if aa can be obtained from bb by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641041\u2264t\u2264104). Description of the test cases follows.The first line of each test case contains two integers nn and kk (2\u2264k\u2264n\u22643\u22c51052\u2264k\u2264n\u22643\u22c5105, kk is even) \u00a0\u2014 the length of the string and the parameter for a balanced bitstring.The next line contains the string ss (|s|=n|s|=n). It is given that ss consists of only 0, 1, and ?.It is guaranteed that the sum of nn over all test cases does not exceed 3\u22c51053\u22c5105.OutputFor each test case, print YES if we can replace every ? in ss with 0 or 1 such that the resulting bitstring is kk-balanced, or NO if it is not possible.ExampleInputCopy9\n6 4\n100110\n3 2\n1?1\n3 2\n1?0\n4 4\n????\n7 4\n1?0??1?\n10 10\n11??11??11\n4 2\n1??1\n4 4\n?0?0\n6 2\n????00\nOutputCopyYES\nYES\nNO\nYES\nYES\nNO\nNO\nYES\nNO\nNoteFor the first test case, the string is already a 44-balanced bitstring.For the second test case, the string can be transformed into 101.For the fourth test case, the string can be transformed into 0110.For the fifth test case, the string can be transformed into 1100110."], "Cyclic Permutations": ["https://codeforces.com/problemset/problem/1391/C", "C. Cyclic Permutations time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array) and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).Consider a permutation pp of length nn, we build a graph of size nn using it as follows:   For every 1\u2264i\u2264n1\u2264i\u2264n, find the largest jj such that 1\u2264j<i1\u2264j<i and pj>pipj>pi, and add an undirected edge between node ii and node jj  For every 1\u2264i\u2264n1\u2264i\u2264n, find the smallest jj such that i<j\u2264ni<j\u2264n and pj>pipj>pi, and add an undirected edge between node ii and node jj In cases where no such jj exists, we make no edges. Also, note that we make edges between the corresponding indices, not the values at those indices.For clarity, consider as an example n=4n=4, and p=[3,1,4,2]p=[3,1,4,2]; here, the edges of the graph are (1,3),(2,1),(2,3),(4,3)(1,3),(2,1),(2,3),(4,3).A permutation pp is cyclic if the graph built using pp has at least one simple cycle. Given nn, find the number of cyclic permutations of length nn. Since the number may be very large, output it modulo 109+7109+7.Please refer to the Notes section for the formal definition of a simple cycleInputThe first and only line contains a single integer nn (3\u2264n\u22641063\u2264n\u2264106).OutputOutput a single integer 0\u2264x<109+70\u2264x<109+7, the number of cyclic permutations of length nn modulo 109+7109+7.ExamplesInputCopy4\nOutputCopy16InputCopy583291\nOutputCopy135712853NoteThere are 1616 cyclic permutations for n=4n=4. [4,2,1,3][4,2,1,3] is one such permutation, having a cycle of length four: 4\u21923\u21922\u21921\u219244\u21923\u21922\u21921\u21924.Nodes v1v1, v2v2, \u2026\u2026, vkvk form a simple cycle if the following conditions hold:   k\u22653k\u22653.  vi\u2260vjvi\u2260vj for any pair of indices ii and jj. (1\u2264i<j\u2264k1\u2264i<j\u2264k)  vivi and vi+1vi+1 share an edge for all ii (1\u2264i<k1\u2264i<k), and v1v1 and vkvk share an edge. "], "Pythagorean Triples": ["https://codeforces.com/problemset/problem/707/C", "C. Pythagorean Triplestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputKatya studies in a fifth grade. Recently her class studied right triangles and the Pythagorean theorem. It appeared, that there are triples of positive integers such that you can construct a right triangle with segments of lengths corresponding to triple. Such triples are called Pythagorean triples.For example, triples (3,\u20094,\u20095), (5,\u200912,\u200913) and (6,\u20098,\u200910) are Pythagorean triples.Here Katya wondered if she can specify the length of some side of right triangle and find any Pythagorean triple corresponding to such length? Note that the side which length is specified can be a cathetus as well as hypotenuse.Katya had no problems with completing this task. Will you do the same?InputThe only line of the input contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009109)\u00a0\u2014 the length of some side of a right triangle.OutputPrint two integers m and k (1\u2009\u2264\u2009m,\u2009k\u2009\u2264\u20091018), such that n, m and k form a Pythagorean triple, in the only line.In case if there is no any Pythagorean triple containing integer n, print \u2009-\u20091 in the only line. If there are many answers, print any of them.ExamplesInputCopy3OutputCopy4 5InputCopy6OutputCopy8 10InputCopy1OutputCopy-1InputCopy17OutputCopy144 145InputCopy67OutputCopy2244 2245NoteIllustration for the first sample."], "Eastern Exhibition": ["https://codeforces.com/problemset/problem/1486/B", "B. Eastern Exhibitiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou and your friends live in nn houses. Each house is located on a 2D plane, in a point with integer coordinates. There might be different houses located in the same point. The mayor of the city is asking you for places for the building of the Eastern exhibition. You have to find the number of places (points with integer coordinates), so that the summary distance from all the houses to the exhibition is minimal. The exhibition can be built in the same point as some house. The distance between two points (x1,y1)(x1,y1) and (x2,y2)(x2,y2) is |x1\u2212x2|+|y1\u2212y2||x1\u2212x2|+|y1\u2212y2|, where |x||x| is the absolute value of xx. InputFirst line contains a single integer tt (1\u2264t\u22641000)(1\u2264t\u22641000) \u2014 the number of test cases.The first line of each test case contains a single integer nn (1\u2264n\u22641000)(1\u2264n\u22641000). Next nn lines describe the positions of the houses (xi,yi)(xi,yi) (0\u2264xi,yi\u2264109)(0\u2264xi,yi\u2264109).It's guaranteed that the sum of all nn does not exceed 10001000.OutputFor each test case output a single integer - the number of different positions for the exhibition. The exhibition can be built in the same point as some house.ExampleInputCopy6\n3\n0 0\n2 0\n1 2\n4\n1 0\n0 2\n2 3\n3 1\n4\n0 0\n0 1\n1 0\n1 1\n2\n0 0\n1 1\n2\n0 0\n2 0\n2\n0 0\n0 0\nOutputCopy1\n4\n4\n4\n3\n1\nNoteHere are the images for the example test cases. Blue dots stand for the houses, green \u2014 possible positions for the exhibition.First test case.Second test case. Third test case. Fourth test case. Fifth test case. Sixth test case. Here both houses are located at (0,0)(0,0)."], "Mortal Kombat Tower": ["https://codeforces.com/problemset/problem/1418/C", "C. Mortal Kombat Towertime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou and your friend are playing the game Mortal Kombat XI. You are trying to pass a challenge tower. There are nn bosses in this tower, numbered from 11 to nn. The type of the ii-th boss is aiai. If the ii-th boss is easy then its type is ai=0ai=0, otherwise this boss is hard and its type is ai=1ai=1.During one session, either you or your friend can kill one or two bosses (neither you nor your friend can skip the session, so the minimum number of bosses killed during one session is at least one). After your friend session, your session begins, then again your friend session begins, your session begins, and so on. The first session is your friend's session.Your friend needs to get good because he can't actually kill hard bosses. To kill them, he uses skip points. One skip point can be used to kill one hard boss.Your task is to find the minimum number of skip points your friend needs to use so you and your friend kill all nn bosses in the given order.For example: suppose n=8n=8, a=[1,0,1,1,0,1,1,1]a=[1,0,1,1,0,1,1,1]. Then the best course of action is the following:  your friend kills two first bosses, using one skip point for the first boss;  you kill the third and the fourth bosses;  your friend kills the fifth boss;  you kill the sixth and the seventh bosses;  your friend kills the last boss, using one skip point, so the tower is completed using two skip points. You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u22642\u22c51041\u2264t\u22642\u22c5104) \u2014 the number of test cases. Then tt test cases follow.The first line of the test case contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of bosses. The second line of the test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u226410\u2264ai\u22641), where aiai is the type of the ii-th boss.It is guaranteed that the sum of nn does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105).OutputFor each test case, print the answer: the minimum number of skip points your friend needs to use so you and your friend kill all nn bosses in the given order.ExampleInputCopy6\n8\n1 0 1 1 0 1 1 1\n5\n1 1 1 1 0\n7\n1 1 1 1 0 0 1\n6\n1 1 1 1 1 1\n1\n1\n1\n0\nOutputCopy2\n2\n2\n2\n1\n0\n"], "Power Sequence": ["https://codeforces.com/problemset/problem/1397/B", "B. Power Sequencetime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's call a list of positive integers a0,a1,...,an\u22121a0,a1,...,an\u22121 a power sequence if there is a positive integer cc, so that for every 0\u2264i\u2264n\u221210\u2264i\u2264n\u22121 then ai=ciai=ci.Given a list of nn positive integers a0,a1,...,an\u22121a0,a1,...,an\u22121, you are allowed to:  Reorder the list (i.e. pick a permutation pp of {0,1,...,n\u22121}{0,1,...,n\u22121} and change aiai to apiapi), then  Do the following operation any number of times: pick an index ii and change aiai to ai\u22121ai\u22121 or ai+1ai+1 (i.e. increment or decrement aiai by 11) with a cost of 11. Find the minimum cost to transform a0,a1,...,an\u22121a0,a1,...,an\u22121 into a power sequence.InputThe first line contains an integer nn (3\u2264n\u22641053\u2264n\u2264105).The second line contains nn integers a0,a1,...,an\u22121a0,a1,...,an\u22121 (1\u2264ai\u22641091\u2264ai\u2264109).OutputPrint the minimum cost to transform a0,a1,...,an\u22121a0,a1,...,an\u22121 into a power sequence.ExamplesInputCopy3\n1 3 2\nOutputCopy1\nInputCopy3\n1000000000 1000000000 1000000000\nOutputCopy1999982505\nNoteIn the first example, we first reorder {1,3,2}{1,3,2} into {1,2,3}{1,2,3}, then increment a2a2 to 44 with cost 11 to get a power sequence {1,2,4}{1,2,4}."], "Yet Another Walking Robot": ["https://codeforces.com/problemset/problem/1296/C", "C. Yet Another Walking Robottime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a robot on a coordinate plane. Initially, the robot is located at the point (0,0)(0,0). Its path is described as a string ss of length nn consisting of characters 'L', 'R', 'U', 'D'.Each of these characters corresponds to some move:   'L' (left): means that the robot moves from the point (x,y)(x,y) to the point (x\u22121,y)(x\u22121,y);  'R' (right): means that the robot moves from the point (x,y)(x,y) to the point (x+1,y)(x+1,y);  'U' (up): means that the robot moves from the point (x,y)(x,y) to the point (x,y+1)(x,y+1);  'D' (down): means that the robot moves from the point (x,y)(x,y) to the point (x,y\u22121)(x,y\u22121). The company that created this robot asked you to optimize the path of the robot somehow. To do this, you can remove any non-empty substring of the path. But this company doesn't want their customers to notice the change in the robot behavior. It means that if before the optimization the robot ended its path at the point (xe,ye)(xe,ye), then after optimization (i.e. removing some single substring from ss) the robot also ends its path at the point (xe,ye)(xe,ye).This optimization is a low-budget project so you need to remove the shortest possible non-empty substring to optimize the robot's path such that the endpoint of his path doesn't change. It is possible that you can't optimize the path. Also, it is possible that after the optimization the target path is an empty string (i.e. deleted substring is the whole string ss).Recall that the substring of ss is such string that can be obtained from ss by removing some amount of characters (possibly, zero) from the prefix and some amount of characters (possibly, zero) from the suffix. For example, the substrings of \"LURLLR\" are \"LU\", \"LR\", \"LURLLR\", \"URL\", but not \"RR\" and \"UL\".You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases.The next 2t2t lines describe test cases. Each test case is given on two lines. The first line of the test case contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the length of the robot's path. The second line of the test case contains one string ss consisting of nn characters 'L', 'R', 'U', 'D' \u2014 the robot's path.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105 (\u2211n\u22642\u22c5105\u2211n\u22642\u22c5105).OutputFor each test case, print the answer on it. If you cannot remove such non-empty substring that the endpoint of the robot's path doesn't change, print -1. Otherwise, print two integers ll and rr such that 1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n \u2014 endpoints of the substring you remove. The value r\u2212l+1r\u2212l+1 should be minimum possible. If there are several answers, print any of them.ExampleInputCopy4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\nOutputCopy1 2\n1 4\n3 4\n-1\n"], "Killjoy": ["https://codeforces.com/problemset/problem/1419/C", "C. Killjoytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA new agent called Killjoy invented a virus COVID-2069 that infects accounts on Codeforces. Each account has a rating, described by an integer (it can possibly be negative or very large).Killjoy's account is already infected and has a rating equal to xx. Its rating is constant. There are nn accounts except hers, numbered from 11 to nn. The ii-th account's initial rating is aiai. Any infected account (initially the only infected account is Killjoy's) instantly infects any uninfected account if their ratings are equal. This can happen at the beginning (before any rating changes) and after each contest. If an account is infected, it can not be healed.Contests are regularly held on Codeforces. In each contest, any of these nn accounts (including infected ones) can participate. Killjoy can't participate. After each contest ratings are changed this way: each participant's rating is changed by an integer, but the sum of all changes must be equal to zero. New ratings can be any integer.Find out the minimal number of contests needed to infect all accounts. You can choose which accounts will participate in each contest and how the ratings will change.It can be proven that all accounts can be infected in some finite number of contests.InputThe first line contains a single integer tt (1\u2264t\u2264100)(1\u2264t\u2264100)\u00a0\u2014 the number of test cases. The next 2t2t lines contain the descriptions of all test cases.The first line of each test case contains two integers nn and xx (2\u2264n\u22641032\u2264n\u2264103, \u22124000\u2264x\u22644000\u22124000\u2264x\u22644000)\u00a0\u2014 the number of accounts on Codeforces and the rating of Killjoy's account.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u22124000\u2264ai\u22644000)(\u22124000\u2264ai\u22644000)\u00a0\u2014 the ratings of other accounts.OutputFor each test case output the minimal number of contests needed to infect all accounts.ExampleInputCopy3\n2 69\n68 70\n6 4\n4 4 4 4 4 4\n9 38\n-21 83 50 -59 -77 15 -71 -78 20\nOutputCopy1\n0\n2\nNoteIn the first test case it's possible to make all ratings equal to 6969. First account's rating will increase by 11, and second account's rating will decrease by 11, so the sum of all changes will be equal to zero.In the second test case all accounts will be instantly infected, because all ratings (including Killjoy's account's rating) are equal to 44."], "Nastya and Strange Generator": ["https://codeforces.com/problemset/problem/1340/A", "A. Nastya and Strange Generatortime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard output Denis was very sad after Nastya rejected him. So he decided to walk through the gateways to have some fun. And luck smiled at him! When he entered the first courtyard, he met a strange man who was selling something. Denis bought a mysterious item and it was... Random permutation generator! Denis could not believed his luck.When he arrived home, he began to study how his generator works and learned the algorithm. The process of generating a permutation consists of nn steps. At the ii-th step, a place is chosen for the number ii (1\u2264i\u2264n)(1\u2264i\u2264n). The position for the number ii is defined as follows:  For all jj from 11 to nn, we calculate rjrj \u00a0\u2014 the minimum index such that j\u2264rj\u2264nj\u2264rj\u2264n, and the position rjrj is not yet occupied in the permutation. If there are no such positions, then we assume that the value of rjrj is not defined.  For all tt from 11 to nn, we calculate counttcountt \u00a0\u2014 the number of positions 1\u2264j\u2264n1\u2264j\u2264n such that rjrj is defined and rj=trj=t.  Consider the positions that are still not occupied by permutation and among those we consider the positions for which the value in the countcount array is maximum.  The generator selects one of these positions for the number ii. The generator can choose any position. Let's have a look at the operation of the algorithm in the following example:  Let n=5n=5 and the algorithm has already arranged the numbers 1,2,31,2,3 in the permutation. Consider how the generator will choose a position for the number 44:  The values of rr will be r=[3,3,3,4,\u00d7]r=[3,3,3,4,\u00d7], where \u00d7\u00d7 means an indefinite value.  Then the countcount values will be count=[0,0,3,1,0]count=[0,0,3,1,0].  There are only two unoccupied positions in the permutation: 33 and 44. The value in the countcount array for position 33 is 33, for position 44 it is 11.  The maximum value is reached only for position 33, so the algorithm will uniquely select this position for number 44. Satisfied with his purchase, Denis went home. For several days without a break, he generated permutations. He believes that he can come up with random permutations no worse than a generator. After that, he wrote out the first permutation that came to mind p1,p2,\u2026,pnp1,p2,\u2026,pn and decided to find out if it could be obtained as a result of the generator.Unfortunately, this task was too difficult for him, and he asked you for help. It is necessary to define whether the written permutation could be obtained using the described algorithm if the generator always selects the position Denis needs.InputThe first line contains a single integer tt (1\u2264t\u2264105)(1\u2264t\u2264105) \u00a0\u2014 the number of test cases. Then the descriptions of the test cases follow.The first line of the test case contains a single integer nn (1\u2264n\u2264105)(1\u2264n\u2264105) \u00a0\u2014 the size of the permutation.The second line of the test case contains nn different integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n) \u00a0\u2014 the permutation written by Denis.It is guaranteed that the sum of nn over all test cases doesn't exceed 105105.OutputPrint \"Yes\" if this permutation could be obtained as a result of the generator. Otherwise, print \"No\".All letters can be displayed in any case.ExampleInputCopy5\n5\n2 3 4 5 1\n1\n1\n3\n1 3 2\n4\n4 2 3 1\n5\n1 5 2 4 3\nOutputCopyYes\nYes\nNo\nYes\nNo\nNoteLet's simulate the operation of the generator in the first test.At the 11 step, r=[1,2,3,4,5],count=[1,1,1,1,1]r=[1,2,3,4,5],count=[1,1,1,1,1]. The maximum value is reached in any free position, so the generator can choose a random position from 11 to 55. In our example, it chose 55.At the 22 step, r=[1,2,3,4,\u00d7],count=[1,1,1,1,0]r=[1,2,3,4,\u00d7],count=[1,1,1,1,0]. The maximum value is reached in positions from 11 to 44, so the generator can choose a random position among them. In our example, it chose 11.At the 33 step, r=[2,2,3,4,\u00d7],count=[0,2,1,1,0]r=[2,2,3,4,\u00d7],count=[0,2,1,1,0]. The maximum value is 22 and is reached only at the 22 position, so the generator will choose this position.At the 44 step, r=[3,3,3,4,\u00d7],count=[0,0,3,1,0]r=[3,3,3,4,\u00d7],count=[0,0,3,1,0]. The maximum value is 33 and is reached only at the 33 position, so the generator will choose this position.At the 55 step, r=[4,4,4,4,\u00d7],count=[0,0,0,4,0]r=[4,4,4,4,\u00d7],count=[0,0,0,4,0]. The maximum value is 44 and is reached only at the 44 position, so the generator will choose this position.In total, we got a permutation of 2,3,4,5,12,3,4,5,1, that is, a generator could generate it."], "Maximum width": ["https://codeforces.com/problemset/problem/1492/C", "C. Maximum widthtime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputYour classmate, whom you do not like because he is boring, but whom you respect for his intellect, has two strings: ss of length nn and tt of length mm.A sequence p1,p2,\u2026,pmp1,p2,\u2026,pm, where 1\u2264p1<p2<\u2026<pm\u2264n1\u2264p1<p2<\u2026<pm\u2264n, is called beautiful, if spi=tispi=ti for all ii from 11 to mm. The width of a sequence is defined as max1\u2264i<m(pi+1\u2212pi)max1\u2264i<m(pi+1\u2212pi).Please help your classmate to identify the beautiful sequence with the maximum width. Your classmate promised you that for the given strings ss and tt there is at least one beautiful sequence.InputThe first input line contains two integers nn and mm (2\u2264m\u2264n\u22642\u22c51052\u2264m\u2264n\u22642\u22c5105)\u00a0\u2014 the lengths of the strings ss and tt.The following line contains a single string ss of length nn, consisting of lowercase letters of the Latin alphabet.The last line contains a single string tt of length mm, consisting of lowercase letters of the Latin alphabet.It is guaranteed that there is at least one beautiful sequence for the given strings.OutputOutput one integer\u00a0\u2014 the maximum width of a beautiful sequence.ExamplesInputCopy5 3\nabbbc\nabc\nOutputCopy3\nInputCopy5 2\naaaaa\naa\nOutputCopy4\nInputCopy5 5\nabcdf\nabcdf\nOutputCopy1\nInputCopy2 2\nab\nab\nOutputCopy1\nNoteIn the first example there are two beautiful sequences of width 33: they are {1,2,5}{1,2,5} and {1,4,5}{1,4,5}.In the second example the beautiful sequence with the maximum width is {1,5}{1,5}.In the third example there is exactly one beautiful sequence\u00a0\u2014 it is {1,2,3,4,5}{1,2,3,4,5}.In the fourth example there is exactly one beautiful sequence\u00a0\u2014 it is {1,2}{1,2}."], "Remove One Element": ["https://codeforces.com/problemset/problem/1272/D", "D. Remove One Elementtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn integers.You can remove at most one element from this array. Thus, the final length of the array is n\u22121n\u22121 or nn.Your task is to calculate the maximum possible length of the strictly increasing contiguous subarray of the remaining array.Recall that the contiguous subarray aa with indices from ll to rr is a[l\u2026r]=al,al+1,\u2026,ara[l\u2026r]=al,al+1,\u2026,ar. The subarray a[l\u2026r]a[l\u2026r] is called strictly increasing if al<al+1<\u22ef<aral<al+1<\u22ef<ar.InputThe first line of the input contains one integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the number of elements in aa.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109), where aiai is the ii-th element of aa.OutputPrint one integer \u2014 the maximum possible length of the strictly increasing contiguous subarray of the array aa after removing at most one element.ExamplesInputCopy5\n1 2 5 3 4\nOutputCopy4\nInputCopy2\n1 2\nOutputCopy2\nInputCopy7\n6 5 4 3 2 4 3\nOutputCopy2\nNoteIn the first example, you can delete a3=5a3=5. Then the resulting array will be equal to [1,2,3,4][1,2,3,4] and the length of its largest increasing subarray will be equal to 44."], "Journey": ["https://codeforces.com/problemset/problem/839/C", "C. Journeytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are n cities and n\u2009-\u20091 roads in the Seven Kingdoms, each road connects two cities and we can reach any city from any other by the roads.Theon and Yara Greyjoy are on a horse in the first city, they are starting traveling through the roads. But the weather is foggy, so they can\u2019t see where the horse brings them. When the horse reaches a city (including the first one), it goes to one of the cities connected to the current city. But it is a strange horse, it only goes to cities in which they weren't before. In each such city, the horse goes with equal probabilities and it stops when there are no such cities. Let the length of each road be 1. The journey starts in the city 1. What is the expected length (expected value of length) of their journey? You can read about expected (average) value by the link https://en.wikipedia.org/wiki/Expected_value.InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100000)\u00a0\u2014 number of cities.Then n\u2009-\u20091 lines follow. The i-th line of these lines contains two integers ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n, ui\u2009\u2260\u2009vi)\u00a0\u2014 the cities connected by the i-th road.It is guaranteed that one can reach any city from any other by the roads.OutputPrint a number\u00a0\u2014 the expected length of their journey. The journey starts in the city 1.Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096.Namely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .ExamplesInputCopy41 21 32 4OutputCopy1.500000000000000InputCopy51 21 33 42 5OutputCopy2.000000000000000NoteIn the first sample, their journey may end in cities 3 or 4 with equal probability. The distance to city 3 is 1 and to city 4 is 2, so the expected length is 1.5.In the second sample, their journey may end in city 4 or 5. The distance to the both cities is 2, so the expected length is 2."], "Motarack's Birthday": ["https://codeforces.com/problemset/problem/1301/B", "B. Motarack's Birthdaytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputDark is going to attend Motarack's birthday. Dark decided that the gift he is going to give to Motarack is an array aa of nn non-negative integers.Dark created that array 10001000 years ago, so some elements in that array disappeared. Dark knows that Motarack hates to see an array that has two adjacent elements with a high absolute difference between them. He doesn't have much time so he wants to choose an integer kk (0\u2264k\u22641090\u2264k\u2264109) and replaces all missing elements in the array aa with kk.Let mm be the maximum absolute difference between all adjacent elements (i.e. the maximum value of |ai\u2212ai+1||ai\u2212ai+1| for all 1\u2264i\u2264n\u221211\u2264i\u2264n\u22121) in the array aa after Dark replaces all missing elements with kk.Dark should choose an integer kk so that mm is minimized. Can you help him?InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104) \u00a0\u2014 the number of test cases. The description of the test cases follows.The first line of each test case contains one integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the size of the array aa.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u22121\u2264ai\u2264109\u22121\u2264ai\u2264109). If ai=\u22121ai=\u22121, then the ii-th integer is missing. It is guaranteed that at least one integer is missing in every test case.It is guaranteed, that the sum of nn for all test cases does not exceed 4\u22c51054\u22c5105.OutputPrint the answers for each test case in the following format:You should print two integers, the minimum possible value of mm and an integer kk (0\u2264k\u22641090\u2264k\u2264109) that makes the maximum absolute difference between adjacent elements in the array aa equal to mm.Make sure that after replacing all the missing elements with kk, the maximum absolute difference between adjacent elements becomes mm.If there is more than one possible kk, you can print any of them.ExampleInputCopy7\n5\n-1 10 -1 12 -1\n5\n-1 40 35 -1 35\n6\n-1 -1 9 -1 3 -1\n2\n-1 -1\n2\n0 -1\n4\n1 -1 3 -1\n7\n1 -1 7 5 2 -1 5\nOutputCopy1 11\n5 35\n3 6\n0 42\n0 0\n1 2\n3 4\nNoteIn the first test case after replacing all missing elements with 1111 the array becomes [11,10,11,12,11][11,10,11,12,11]. The absolute difference between any adjacent elements is 11. It is impossible to choose a value of kk, such that the absolute difference between any adjacent element will be \u22640\u22640. So, the answer is 11.In the third test case after replacing all missing elements with 66 the array becomes [6,6,9,6,3,6][6,6,9,6,3,6].  |a1\u2212a2|=|6\u22126|=0|a1\u2212a2|=|6\u22126|=0;  |a2\u2212a3|=|6\u22129|=3|a2\u2212a3|=|6\u22129|=3;  |a3\u2212a4|=|9\u22126|=3|a3\u2212a4|=|9\u22126|=3;  |a4\u2212a5|=|6\u22123|=3|a4\u2212a5|=|6\u22123|=3;  |a5\u2212a6|=|3\u22126|=3|a5\u2212a6|=|3\u22126|=3. So, the maximum difference between any adjacent elements is 33."], "Non-zero Segments": ["https://codeforces.com/problemset/problem/1426/D", "D. Non-zero Segmentstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputKolya got an integer array a1,a2,\u2026,ana1,a2,\u2026,an. The array can contain both positive and negative integers, but Kolya doesn't like 00, so the array doesn't contain any zeros.Kolya doesn't like that the sum of some subsegments of his array can be 00. The subsegment is some consecutive segment of elements of the array. You have to help Kolya and change his array in such a way that it doesn't contain any subsegments with the sum 00. To reach this goal, you can insert any integers between any pair of adjacent elements of the array (integers can be really any: positive, negative, 00, any by absolute value, even such a huge that they can't be represented in most standard programming languages).Your task is to find the minimum number of integers you have to insert into Kolya's array in such a way that the resulting array doesn't contain any subsegments with the sum 00.InputThe first line of the input contains one integer nn (2\u2264n\u22642000002\u2264n\u2264200000) \u2014 the number of elements in Kolya's array.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109,ai\u22600\u2212109\u2264ai\u2264109,ai\u22600) \u2014 the description of Kolya's array.OutputPrint the minimum number of integers you have to insert into Kolya's array in such a way that the resulting array doesn't contain any subsegments with the sum 00.ExamplesInputCopy4\n1 -5 3 2\nOutputCopy1\nInputCopy5\n4 -2 3 -9 2\nOutputCopy0\nInputCopy9\n-1 1 -1 1 -1 1 1 -1 -1\nOutputCopy6\nInputCopy8\n16 -5 -11 -15 10 5 4 -4\nOutputCopy3\nNoteConsider the first example. There is only one subsegment with the sum 00. It starts in the second element and ends in the fourth element. It's enough to insert one element so the array doesn't contain any subsegments with the sum equal to zero. For example, it is possible to insert the integer 11 between second and third elements of the array.There are no subsegments having sum 00 in the second example so you don't need to do anything."], "Running for Gold": ["https://codeforces.com/problemset/problem/1552/B", "B. Running for Goldtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Olympic Games have just started and Federico is eager to watch the marathon race.There will be nn athletes, numbered from 11 to nn, competing in the marathon, and all of them have taken part in 55 important marathons, numbered from 11 to 55, in the past. For each 1\u2264i\u2264n1\u2264i\u2264n and 1\u2264j\u226451\u2264j\u22645, Federico remembers that athlete ii ranked ri,jri,j-th in marathon jj (e.g., r2,4=3r2,4=3 means that athlete 22 was third in marathon 44).Federico considers athlete xx superior to athlete yy if athlete xx ranked better than athlete yy in at least 33 past marathons, i.e., rx,j<ry,jrx,j<ry,j for at least 33 distinct values of jj.Federico believes that an athlete is likely to get the gold medal at the Olympics if he is superior to all other athletes.Find any athlete who is likely to get the gold medal (that is, an athlete who is superior to all other athletes), or determine that there is no such athlete.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains a single integer nn (1\u2264n\u2264500001\u2264n\u226450000) \u2014 the number of athletes.Then nn lines follow, each describing the ranking positions of one athlete.The ii-th of these lines contains the 55 integers ri,1,ri,2,ri,3,ri,4,ri,5ri,1,ri,2,ri,3,ri,4,ri,5 (1\u2264ri,j\u2264500001\u2264ri,j\u226450000) \u2014 the ranking positions of athlete ii in the past 55 marathons. It is guaranteed that, in each of the 55 past marathons, the nn athletes have distinct ranking positions, i.e., for each 1\u2264j\u226451\u2264j\u22645, the nn values r1,j,r2,j,\u2026,rn,jr1,j,r2,j,\u2026,rn,j are distinct.It is guaranteed that the sum of nn over all test cases does not exceed 5000050000.OutputFor each test case, print a single integer \u2014 the number of an athlete who is likely to get the gold medal (that is, an athlete who is superior to all other athletes). If there are no such athletes, print \u22121\u22121. If there is more than such one athlete, print any of them.ExampleInputCopy4\n1\n50000 1 50000 50000 50000\n3\n10 10 20 30 30\n20 20 30 10 10\n30 30 10 20 20\n3\n1 1 1 1 1\n2 2 2 2 2\n3 3 3 3 3\n6\n9 5 3 7 1\n7 4 1 6 8\n5 6 7 3 2\n6 7 8 8 6\n4 2 2 4 5\n8 3 6 9 4\nOutputCopy1\n-1\n1\n5\nNoteExplanation of the first test case: There is only one athlete, therefore he is superior to everyone else (since there is no one else), and thus he is likely to get the gold medal.Explanation of the second test case: There are n=3n=3 athletes.   Athlete 11 is superior to athlete 22. Indeed athlete 11 ranks better than athlete 22 in the marathons 11, 22 and 33.  Athlete 22 is superior to athlete 33. Indeed athlete 22 ranks better than athlete 33 in the marathons 11, 22, 44 and 55.  Athlete 33 is superior to athlete 11. Indeed athlete 33 ranks better than athlete 11 in the marathons 33, 44 and 55. Explanation of the third test case: There are n=3n=3 athletes.   Athlete 11 is superior to athletes 22 and 33. Since he is superior to all other athletes, he is likely to get the gold medal.  Athlete 22 is superior to athlete 33.  Athlete 33 is not superior to any other athlete. Explanation of the fourth test case: There are n=6n=6 athletes.   Athlete 11 is superior to athletes 33, 44, 66.  Athlete 22 is superior to athletes 11, 44, 66.  Athlete 33 is superior to athletes 22, 44, 66.  Athlete 44 is not superior to any other athlete.  Athlete 55 is superior to athletes 11, 22, 33, 44, 66. Since he is superior to all other athletes, he is likely to get the gold medal.  Athlete 66 is only superior to athlete 44. "], "Fight with Monsters": ["https://codeforces.com/problemset/problem/1296/D", "D. Fight with Monsterstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn monsters standing in a row numbered from 11 to nn. The ii-th monster has hihi health points (hp). You have your attack power equal to aa hp and your opponent has his attack power equal to bb hp.You and your opponent are fighting these monsters. Firstly, you and your opponent go to the first monster and fight it till his death, then you and your opponent go the second monster and fight it till his death, and so on. A monster is considered dead if its hp is less than or equal to 00.The fight with a monster happens in turns.   You hit the monster by aa hp. If it is dead after your hit, you gain one point and you both proceed to the next monster.  Your opponent hits the monster by bb hp. If it is dead after his hit, nobody gains a point and you both proceed to the next monster. You have some secret technique to force your opponent to skip his turn. You can use this technique at most kk times in total (for example, if there are two monsters and k=4k=4, then you can use the technique 22 times on the first monster and 11 time on the second monster, but not 22 times on the first monster and 33 times on the second monster).Your task is to determine the maximum number of points you can gain if you use the secret technique optimally.InputThe first line of the input contains four integers n,a,bn,a,b and kk (1\u2264n\u22642\u22c5105,1\u2264a,b,k\u22641091\u2264n\u22642\u22c5105,1\u2264a,b,k\u2264109) \u2014 the number of monsters, your attack power, the opponent's attack power and the number of times you can use the secret technique.The second line of the input contains nn integers h1,h2,\u2026,hnh1,h2,\u2026,hn (1\u2264hi\u22641091\u2264hi\u2264109), where hihi is the health points of the ii-th monster.OutputPrint one integer \u2014 the maximum number of points you can gain if you use the secret technique optimally.ExamplesInputCopy6 2 3 3\n7 10 50 12 1 8\nOutputCopy5\nInputCopy1 1 100 99\n100\nOutputCopy1\nInputCopy7 4 2 1\n1 3 5 4 2 7 6\nOutputCopy6\n"], "Sage's Birthday (hard version)": ["https://codeforces.com/problemset/problem/1419/D2", "D2. Sage's Birthday (hard version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the hard version of the problem. The difference between the versions is that in the easy version all prices aiai are different. You can make hacks if and only if you solved both versions of the problem.Today is Sage's birthday, and she will go shopping to buy ice spheres. All nn ice spheres are placed in a row and they are numbered from 11 to nn from left to right. Each ice sphere has a positive integer price. In this version, some prices can be equal.An ice sphere is cheap if it costs strictly less than two neighboring ice spheres: the nearest to the left and the nearest to the right. The leftmost and the rightmost ice spheres are not cheap. Sage will choose all cheap ice spheres and then buy only them.You can visit the shop before Sage and reorder the ice spheres as you wish. Find out the maximum number of ice spheres that Sage can buy, and show how the ice spheres should be reordered.InputThe first line contains a single integer nn (1\u2264n\u2264105)(1\u2264n\u2264105)\u00a0\u2014 the number of ice spheres in the shop.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264109)(1\u2264ai\u2264109)\u00a0\u2014 the prices of ice spheres.OutputIn the first line print the maximum number of ice spheres that Sage can buy.In the second line print the prices of ice spheres in the optimal order. If there are several correct answers, you can print any of them.ExampleInputCopy7\n1 3 2 2 4 5 4\nOutputCopy3\n3 1 4 2 4 2 5 NoteIn the sample it's not possible to place the ice spheres in any order so that Sage would buy 44 of them. If the spheres are placed in the order (3,1,4,2,4,2,5)(3,1,4,2,4,2,5), then Sage will buy one sphere for 11 and two spheres for 22 each."], "Even Picture": ["https://codeforces.com/problemset/problem/1368/C", "C. Even Picturetime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputLeo Jr. draws pictures in his notebook with checkered sheets (that is, each sheet has a regular square grid printed on it). We can assume that the sheets are infinitely large in any direction.To draw a picture, Leo Jr. colors some of the cells on a sheet gray. He considers the resulting picture beautiful if the following conditions are satisfied: The picture is connected, that is, it is possible to get from any gray cell to any other by following a chain of gray cells, with each pair of adjacent cells in the path being neighbours (that is, sharing a side). Each gray cell has an even number of gray neighbours. There are exactly nn gray cells with all gray neighbours. The number of other gray cells can be arbitrary (but reasonable, so that they can all be listed).Leo Jr. is now struggling to draw a beautiful picture with a particular choice of nn. Help him, and provide any example of a beautiful picture.To output cell coordinates in your answer, assume that the sheet is provided with a Cartesian coordinate system such that one of the cells is chosen to be the origin (0,0)(0,0), axes 0x0x and 0y0y are orthogonal and parallel to grid lines, and a unit step along any axis in any direction takes you to a neighbouring cell.InputThe only line contains a single integer nn (1\u2264n\u22645001\u2264n\u2264500)\u00a0\u2014 the number of gray cells with all gray neighbours in a beautiful picture.OutputIn the first line, print a single integer kk\u00a0\u2014 the number of gray cells in your picture. For technical reasons, kk should not exceed 5\u22c51055\u22c5105.Each of the following kk lines should contain two integers\u00a0\u2014 coordinates of a gray cell in your picture. All listed cells should be distinct, and the picture should satisdfy all the properties listed above. All coordinates should not exceed 109109 by absolute value.One can show that there exists an answer satisfying all requirements with a small enough kk.ExampleInputCopy4\nOutputCopy12\n1 0\n2 0\n0 1\n1 1\n2 1\n3 1\n0 2\n1 2\n2 2\n3 2\n1 3\n2 3\nNoteThe answer for the sample is pictured below:  "], "Palindromic Paths": ["https://codeforces.com/problemset/problem/1366/C", "C. Palindromic Pathstime limit per test1.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a matrix with nn rows (numbered from 11 to nn) and mm columns (numbered from 11 to mm). A number ai,jai,j is written in the cell belonging to the ii-th row and the jj-th column, each number is either 00 or 11.A chip is initially in the cell (1,1)(1,1), and it will be moved to the cell (n,m)(n,m). During each move, it either moves to the next cell in the current row, or in the current column (if the current cell is (x,y)(x,y), then after the move it can be either (x+1,y)(x+1,y) or (x,y+1)(x,y+1)). The chip cannot leave the matrix.Consider each path of the chip from (1,1)(1,1) to (n,m)(n,m). A path is called palindromic if the number in the first cell is equal to the number in the last cell, the number in the second cell is equal to the number in the second-to-last cell, and so on.Your goal is to change the values in the minimum number of cells so that every path is palindromic.InputThe first line contains one integer tt (1\u2264t\u22642001\u2264t\u2264200) \u2014 the number of test cases.The first line of each test case contains two integers nn and mm (2\u2264n,m\u2264302\u2264n,m\u226430) \u2014 the dimensions of the matrix.Then nn lines follow, the ii-th line contains mm integers ai,1ai,1, ai,2ai,2, ..., ai,mai,m (0\u2264ai,j\u226410\u2264ai,j\u22641).OutputFor each test case, print one integer \u2014 the minimum number of cells you have to change so that every path in the matrix is palindromic.ExampleInputCopy4\n2 2\n1 1\n0 1\n2 3\n1 1 0\n1 0 0\n3 7\n1 0 1 1 1 1 1\n0 0 0 0 0 0 0\n1 1 1 1 1 0 1\n3 5\n1 0 1 0 0\n1 1 1 1 0\n0 0 1 0 0\nOutputCopy0\n3\n4\n4\nNoteThe resulting matrices in the first three test cases: (1011)(1101)  (000000)(000000)  \u239b\u239d\u239c101011111101111110101\u239e\u23a0\u239f(101111101101101111101) "], "Beautiful Sets of Points": ["https://codeforces.com/problemset/problem/268/C", "C. Beautiful Sets of Pointstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputManao has invented a new mathematical term \u2014 a beautiful set of points. He calls a set of points on a plane beautiful if it meets the following conditions:  The coordinates of each point in the set are integers.  For any two points from the set, the distance between them is a non-integer. Consider all points (x,\u2009y) which satisfy the inequations: 0\u2009\u2264\u2009x\u2009\u2264\u2009n; 0\u2009\u2264\u2009y\u2009\u2264\u2009m; x\u2009+\u2009y\u2009>\u20090. Choose their subset of maximum size such that it is also a beautiful set of points.InputThe single line contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100).OutputIn the first line print a single integer \u2014 the size k of the found beautiful set. In each of the next k lines print a pair of space-separated integers \u2014 the x- and y- coordinates, respectively, of a point from the set.If there are several optimal solutions, you may print any of them.ExamplesInputCopy2 2OutputCopy30 11 22 0InputCopy4 3OutputCopy40 32 13 04 2NoteConsider the first sample. The distance between points (0, 1) and (1, 2) equals , between (0, 1) and (2, 0) \u2014 , between (1, 2) and (2, 0) \u2014 . Thus, these points form a beautiful set. You cannot form a beautiful set with more than three points out of the given points. Note that this is not the only solution."], "Bear and Friendship Condition": ["https://codeforces.com/problemset/problem/771/A", "A. Bear and Friendship Conditiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputBear Limak examines a social network. Its main functionality is that two members can become friends (then they can talk with each other and share funny pictures).There are n members, numbered 1 through n. m pairs of members are friends. Of course, a member can't be a friend with themselves.Let A-B denote that members A and B are friends. Limak thinks that a network is reasonable if and only if the following condition is satisfied: For every three distinct members (X, Y, Z), if X-Y and Y-Z then also X-Z.For example: if Alan and Bob are friends, and Bob and Ciri are friends, then Alan and Ciri should be friends as well.Can you help Limak and check if the network is reasonable? Print \"YES\" or \"NO\" accordingly, without the quotes.InputThe first line of the input contain two integers n and m (3\u2009\u2264\u2009n\u2009\u2264\u2009150\u2009000, )\u00a0\u2014 the number of members and the number of pairs of members that are friends.The i-th of the next m lines contains two distinct integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n,\u2009ai\u2009\u2260\u2009bi). Members ai and bi are friends with each other. No pair of members will appear more than once in the input.OutputIf the given network is reasonable, print \"YES\" in a single line (without the quotes). Otherwise, print \"NO\" in a single line (without the quotes).ExamplesInputCopy4 31 33 41 4OutputCopyYESInputCopy4 43 12 33 41 2OutputCopyNOInputCopy10 44 35 108 91 2OutputCopyYESInputCopy3 21 22 3OutputCopyNONoteThe drawings below show the situation in the first sample (on the left) and in the second sample (on the right). Each edge represents two members that are friends. The answer is \"NO\" in the second sample because members (2,\u20093) are friends and members (3,\u20094) are friends, while members (2,\u20094) are not.  "], "Equalize the Array": ["https://codeforces.com/problemset/problem/1490/F", "F. Equalize the Arraytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp was gifted an array aa of length nn. Polycarp considers an array beautiful if there exists a number CC, such that each number in the array occurs either zero or CC times. Polycarp wants to remove some elements from the array aa to make it beautiful.For example, if n=6n=6 and a=[1,3,2,1,4,2]a=[1,3,2,1,4,2], then the following options are possible to make the array aa array beautiful:   Polycarp removes elements at positions 22 and 55, array aa becomes equal to [1,2,1,2][1,2,1,2];  Polycarp removes elements at positions 11 and 66, array aa becomes equal to [3,2,1,4][3,2,1,4];  Polycarp removes elements at positions 1,21,2 and 66, array aa becomes equal to [2,1,4][2,1,4]; Help Polycarp determine the minimum number of elements to remove from the array aa to make it beautiful.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Then tt test cases follow.The first line of each test case consists of one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the length of the array aa.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 array aa.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output one integer\u00a0\u2014 the minimum number of elements that Polycarp has to remove from the array aa to make it beautiful.ExampleInputCopy3\n6\n1 3 2 1 4 2\n4\n100 100 4 100\n8\n1 2 3 3 3 2 6 6\nOutputCopy2\n1\n2\n"], "Burning Midnight Oil": ["https://codeforces.com/problemset/problem/165/B", "B. Burning Midnight Oiltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day a highly important task was commissioned to Vasya \u2014 writing a program in a night. The program consists of n lines of code. Vasya is already exhausted, so he works like that: first he writes v lines of code, drinks a cup of tea, then he writes as much as  lines, drinks another cup of tea, then he writes  lines and so on: , , , ...The expression  is regarded as the integral part from dividing number a by number b.The moment the current value  equals 0, Vasya immediately falls asleep and he wakes up only in the morning, when the program should already be finished.Vasya is wondering, what minimum allowable value v can take to let him write not less than n lines of code before he falls asleep.InputThe input consists of two integers n and k, separated by spaces \u2014 the size of the program in lines and the productivity reduction coefficient, 1\u2009\u2264\u2009n\u2009\u2264\u2009109, 2\u2009\u2264\u2009k\u2009\u2264\u200910.OutputPrint the only integer \u2014 the minimum value of v that lets Vasya write the program in one night.ExamplesInputCopy7 2OutputCopy4InputCopy59 9OutputCopy54NoteIn the first sample the answer is v\u2009=\u20094. Vasya writes the code in the following portions: first 4 lines, then 2, then 1, and then Vasya falls asleep. Thus, he manages to write 4\u2009+\u20092\u2009+\u20091\u2009=\u20097 lines in a night and complete the task.In the second sample the answer is v\u2009=\u200954. Vasya writes the code in the following portions: 54, 6. The total sum is 54\u2009+\u20096\u2009=\u200960, that's even more than n\u2009=\u200959."], "Ehab and Path-etic MEXs": ["https://codeforces.com/problemset/problem/1325/C", "C. Ehab and Path-etic MEXstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a tree consisting of nn nodes. You want to write some labels on the tree's edges such that the following conditions hold:  Every label is an integer between 00 and n\u22122n\u22122 inclusive.  All the written labels are distinct.  The largest value among MEX(u,v)MEX(u,v) over all pairs of nodes (u,v)(u,v) is as small as possible. Here, MEX(u,v)MEX(u,v) denotes the smallest non-negative integer that isn't written on any edge on the unique simple path from node uu to node vv.InputThe first line contains the integer nn (2\u2264n\u22641052\u2264n\u2264105)\u00a0\u2014 the number of nodes in the tree.Each of the next n\u22121n\u22121 lines contains two space-separated integers uu and vv (1\u2264u,v\u2264n1\u2264u,v\u2264n) that mean there's an edge between nodes uu and vv. It's guaranteed that the given graph is a tree.OutputOutput n\u22121n\u22121 integers. The ithith of them will be the number written on the ithith edge (in the input order).ExamplesInputCopy3\n1 2\n1 3\nOutputCopy0\n1\nInputCopy6\n1 2\n1 3\n2 4\n2 5\n5 6\nOutputCopy0\n3\n2\n4\n1NoteThe tree from the second sample:"], "Sweets Eating": ["https://codeforces.com/problemset/problem/1253/C", "C. Sweets Eatingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputTsumugi brought nn delicious sweets to the Light Music Club. They are numbered from 11 to nn, where the ii-th sweet has a sugar concentration described by an integer aiai.Yui loves sweets, but she can eat at most mm sweets each day for health reasons.Days are 11-indexed (numbered 1,2,3,\u20261,2,3,\u2026). Eating the sweet ii at the dd-th day will cause a sugar penalty of (d\u22c5ai)(d\u22c5ai), as sweets become more sugary with time. A sweet can be eaten at most once.The total sugar penalty will be the sum of the individual penalties of each sweet eaten.Suppose that Yui chooses exactly kk sweets, and eats them in any order she wants. What is the minimum total sugar penalty she can get?Since Yui is an undecided girl, she wants you to answer this question for every value of kk between 11 and nn.InputThe first line contains two integers nn and mm (1\u2264m\u2264n\u2264200\u00a00001\u2264m\u2264n\u2264200\u00a0000).The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264200\u00a00001\u2264ai\u2264200\u00a0000).OutputYou have to output nn integers x1,x2,\u2026,xnx1,x2,\u2026,xn on a single line, separed by spaces, where xkxk is the minimum total sugar penalty Yui can get if she eats exactly kk sweets.ExamplesInputCopy9 2\n6 19 3 4 4 2 6 7 8\nOutputCopy2 5 11 18 30 43 62 83 121\nInputCopy1 1\n7\nOutputCopy7\nNoteLet's analyze the answer for k=5k=5 in the first example. Here is one of the possible ways to eat 55 sweets that minimize total sugar penalty:  Day 11: sweets 11 and 44  Day 22: sweets 55 and 33  Day 33 : sweet 66 Total penalty is 1\u22c5a1+1\u22c5a4+2\u22c5a5+2\u22c5a3+3\u22c5a6=6+4+8+6+6=301\u22c5a1+1\u22c5a4+2\u22c5a5+2\u22c5a3+3\u22c5a6=6+4+8+6+6=30. We can prove that it's the minimum total sugar penalty Yui can achieve if she eats 55 sweets, hence x5=30x5=30."], "Boxers": ["https://codeforces.com/problemset/problem/1203/E", "E. Boxerstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn boxers, the weight of the ii-th boxer is aiai. Each of them can change the weight by no more than 11 before the competition (the weight cannot become equal to zero, that is, it must remain positive). Weight is always an integer number.It is necessary to choose the largest boxing team in terms of the number of people, that all the boxers' weights in the team are different (i.e. unique).Write a program that for given current values \u200baiai will find the maximum possible number of boxers in a team.It is possible that after some change the weight of some boxer is 150001150001 (but no more).InputThe first line contains an integer nn (1\u2264n\u22641500001\u2264n\u2264150000) \u2014 the number of boxers. The next line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an, where aiai (1\u2264ai\u22641500001\u2264ai\u2264150000) is the weight of the ii-th boxer.OutputPrint a single integer \u2014 the maximum possible number of people in a team.ExamplesInputCopy43 2 4 1OutputCopy4InputCopy61 1 1 4 4 4OutputCopy5NoteIn the first example, boxers should not change their weights \u2014 you can just make a team out of all of them.In the second example, one boxer with a weight of 11 can be increased by one (get the weight of 22), one boxer with a weight of 44 can be reduced by one, and the other can be increased by one (resulting the boxers with a weight of 33 and 55, respectively). Thus, you can get a team consisting of boxers with weights of 5,4,3,2,15,4,3,2,1."], "NP-Hard Problem": ["https://codeforces.com/problemset/problem/687/A", "A. NP-Hard Problemtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently, Pari and Arya did some research about NP-Hard problems and they found the minimum vertex cover problem very interesting.Suppose the graph G is given. Subset A of its vertices is called a vertex cover of this graph, if for each edge uv there is at least one endpoint of it in this set, i.e.  or  (or both).Pari and Arya have won a great undirected graph as an award in a team contest. Now they have to split it in two parts, but both of them want their parts of the graph to be a vertex cover.They have agreed to give you their graph and you need to find two disjoint subsets of its vertices A and B, such that both A and B are vertex cover or claim it's impossible. Each vertex should be given to no more than one of the friends (or you can even keep it for yourself).InputThe first line of the input contains two integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009m\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of vertices and the number of edges in the prize graph, respectively.Each of the next m lines contains a pair of integers ui and vi (1\u2009\u2009\u2264\u2009\u2009ui,\u2009\u2009vi\u2009\u2009\u2264\u2009\u2009n), denoting an undirected edge between ui and vi. It's guaranteed the graph won't contain any self-loops or multiple edges.OutputIf it's impossible to split the graph between Pari and Arya as they expect, print \"-1\" (without quotes).If there are two disjoint sets of vertices, such that both sets are vertex cover, print their descriptions. Each description must contain two lines. The first line contains a single integer k denoting the number of vertices in that vertex cover, and the second line contains k integers\u00a0\u2014 the indices of vertices. Note that because of m\u2009\u2265\u20091, vertex cover cannot be empty.ExamplesInputCopy4 21 22 3OutputCopy12 21 3 InputCopy3 31 22 31 3OutputCopy-1NoteIn the first sample, you can give the vertex number 2 to Arya and vertices numbered 1 and 3 to Pari and keep vertex number 4 for yourself (or give it someone, if you wish).In the second sample, there is no way to satisfy both Pari and Arya."], "Lunar New Year and a Wander": ["https://codeforces.com/problemset/problem/1106/D", "D. Lunar New Year and a Wandertime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLunar New Year is approaching, and Bob decides to take a wander in a nearby park.The park can be represented as a connected graph with nn nodes and mm bidirectional edges. Initially Bob is at the node 11 and he records 11 on his notebook. He can wander from one node to another through those bidirectional edges. Whenever he visits a node not recorded on his notebook, he records it. After he visits all nodes at least once, he stops wandering, thus finally a permutation of nodes a1,a2,\u2026,ana1,a2,\u2026,an is recorded.Wandering is a boring thing, but solving problems is fascinating. Bob wants to know the lexicographically smallest sequence of nodes he can record while wandering. Bob thinks this problem is trivial, and he wants you to solve it.A sequence xx is lexicographically smaller than a sequence yy if and only if one of the following holds:   xx is a prefix of yy, but x\u2260yx\u2260y (this is impossible in this problem as all considered sequences have the same length);  in the first position where xx and yy differ, the sequence xx has a smaller element than the corresponding element in yy. InputThe first line contains two positive integers nn and mm (1\u2264n,m\u22641051\u2264n,m\u2264105), denoting the number of nodes and edges, respectively.The following mm lines describe the bidirectional edges in the graph. The ii-th of these lines contains two integers uiui and vivi (1\u2264ui,vi\u2264n1\u2264ui,vi\u2264n), representing the nodes the ii-th edge connects.Note that the graph can have multiple edges connecting the same two nodes and self-loops. It is guaranteed that the graph is connected.OutputOutput a line containing the lexicographically smallest sequence a1,a2,\u2026,ana1,a2,\u2026,an Bob can record.ExamplesInputCopy3 2\n1 2\n1 3\nOutputCopy1 2 3 \nInputCopy5 5\n1 4\n3 4\n5 4\n3 2\n1 5\nOutputCopy1 4 3 2 5 \nInputCopy10 10\n1 4\n6 8\n2 5\n3 7\n9 4\n5 6\n3 4\n8 10\n8 9\n1 10\nOutputCopy1 4 3 7 9 8 6 5 2 10 \nNoteIn the first sample, Bob's optimal wandering path could be 1\u21922\u21921\u219231\u21922\u21921\u21923. Therefore, Bob will obtain the sequence {1,2,3}{1,2,3}, which is the lexicographically smallest one.In the second sample, Bob's optimal wandering path could be 1\u21924\u21923\u21922\u21923\u21924\u21921\u219251\u21924\u21923\u21922\u21923\u21924\u21921\u21925. Therefore, Bob will obtain the sequence {1,4,3,2,5}{1,4,3,2,5}, which is the lexicographically smallest one."], "AquaMoon and Strange Sort": ["https://codeforces.com/problemset/problem/1545/A", "A. AquaMoon and Strange Sorttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAquaMoon has nn friends. They stand in a row from left to right, and the ii-th friend from the left wears a T-shirt with a number aiai written on it. Each friend has a direction (left or right). In the beginning, the direction of each friend is right.AquaMoon can make some operations on friends. On each operation, AquaMoon can choose two adjacent friends and swap their positions. After each operation, the direction of both chosen friends will also be flipped: left to right and vice versa.AquaMoon hopes that after some operations, the numbers written on the T-shirt of nn friends in the row, read from left to right, become non-decreasing. Also she wants, that all friends will have a direction of right at the end. Please find if it is possible.InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u2264501\u2264t\u226450) \u2014 the number of test cases.The first line of each test case contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105) \u2014 the number of Aquamoon's friends.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641051\u2264ai\u2264105) \u2014 the numbers, written on the T-shirts.It is guaranteed that the sum of nn for all test cases does not exceed 105105.OutputFor each test case, if there exists a possible sequence of operations, print \"YES\" (without quotes); otherwise, print \"NO\" (without quotes).You can print each letter in any case (upper or lower).ExampleInputCopy3\n4\n4 3 2 5\n4\n3 3 2 2\n5\n1 2 3 5 4\nOutputCopyYES\nYES\nNO\nNoteThe possible list of operations in the first test case:  Swap a1a1 and a2a2. The resulting sequence is 3,4,2,53,4,2,5. The directions are: left, left, right, right.  Swap a2a2 and a3a3. The resulting sequence is 3,2,4,53,2,4,5. The directions are: left, left, right, right.  Swap a1a1 and a2a2. The resulting sequence is 2,3,4,52,3,4,5. The directions are: right, right, right, right. "], "Dubious Cyrpto": ["https://codeforces.com/problemset/problem/1379/B", "B. Dubious Cyrptotime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputPasha loves to send strictly positive integers to his friends. Pasha cares about security, therefore when he wants to send an integer nn, he encrypts it in the following way: he picks three integers aa, bb and cc such that l\u2264a,b,c\u2264rl\u2264a,b,c\u2264r, and then he computes the encrypted value m=n\u22c5a+b\u2212cm=n\u22c5a+b\u2212c.Unfortunately, an adversary intercepted the values ll, rr and mm. Is it possible to recover the original values of aa, bb and cc from this information? More formally, you are asked to find any values of aa, bb and cc such that  aa, bb and cc are integers,  l\u2264a,b,c\u2264rl\u2264a,b,c\u2264r,  there exists a strictly positive integer nn, such that n\u22c5a+b\u2212c=mn\u22c5a+b\u2212c=m. InputThe first line contains the only integer tt (1\u2264t\u2264201\u2264t\u226420)\u00a0\u2014 the number of test cases. The following tt lines describe one test case each.Each test case consists of three integers ll, rr and mm (1\u2264l\u2264r\u22645000001\u2264l\u2264r\u2264500000, 1\u2264m\u226410101\u2264m\u22641010). The numbers are such that the answer to the problem exists.OutputFor each test case output three integers aa, bb and cc such that, l\u2264a,b,c\u2264rl\u2264a,b,c\u2264r and there exists a strictly positive integer nn such that n\u22c5a+b\u2212c=mn\u22c5a+b\u2212c=m. It is guaranteed that there is at least one possible solution, and you can output any possible combination if there are multiple solutions.ExampleInputCopy2\n4 6 13\n2 3 1\nOutputCopy4 6 5\n2 2 3\nNoteIn the first example n=3n=3 is possible, then n\u22c54+6\u22125=13=mn\u22c54+6\u22125=13=m. Other possible solutions include: a=4a=4, b=5b=5, c=4c=4 (when n=3n=3); a=5a=5, b=4b=4, c=6c=6 (when n=3n=3); a=6a=6, b=6b=6, c=5c=5 (when n=2n=2); a=6a=6, b=5b=5, c=4c=4 (when n=2n=2).In the second example the only possible case is n=1n=1: in this case n\u22c52+2\u22123=1=mn\u22c52+2\u22123=1=m. Note that, n=0n=0 is not possible, since in that case nn is not a strictly positive integer."], "Friends and Gifts": ["https://codeforces.com/problemset/problem/1283/C", "C. Friends and Giftstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn friends who want to give gifts for the New Year to each other. Each friend should give exactly one gift and receive exactly one gift. The friend cannot give the gift to himself.For each friend the value fifi is known: it is either fi=0fi=0 if the ii-th friend doesn't know whom he wants to give the gift to or 1\u2264fi\u2264n1\u2264fi\u2264n if the ii-th friend wants to give the gift to the friend fifi.You want to fill in the unknown values (fi=0fi=0) in such a way that each friend gives exactly one gift and receives exactly one gift and there is no friend who gives the gift to himself. It is guaranteed that the initial information isn't contradictory.If there are several answers, you can print any.InputThe first line of the input contains one integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the number of friends.The second line of the input contains nn integers f1,f2,\u2026,fnf1,f2,\u2026,fn (0\u2264fi\u2264n0\u2264fi\u2264n, fi\u2260ifi\u2260i, all fi\u22600fi\u22600 are distinct), where fifi is the either fi=0fi=0 if the ii-th friend doesn't know whom he wants to give the gift to or 1\u2264fi\u2264n1\u2264fi\u2264n if the ii-th friend wants to give the gift to the friend fifi. It is also guaranteed that there is at least two values fi=0fi=0.OutputPrint nn integers nf1,nf2,\u2026,nfnnf1,nf2,\u2026,nfn, where nfinfi should be equal to fifi if fi\u22600fi\u22600 or the number of friend whom the ii-th friend wants to give the gift to. All values nfinfi should be distinct, nfinfi cannot be equal to ii. Each friend gives exactly one gift and receives exactly one gift and there is no friend who gives the gift to himself.If there are several answers, you can print any.ExamplesInputCopy5\n5 0 0 2 4\nOutputCopy5 3 1 2 4 \nInputCopy7\n7 0 0 1 4 0 6\nOutputCopy7 3 2 1 4 5 6 \nInputCopy7\n7 4 0 3 0 5 1\nOutputCopy7 4 2 3 6 5 1 \nInputCopy5\n2 1 0 0 0\nOutputCopy2 1 4 5 3 \n"], "Fox And Two Dots": ["https://codeforces.com/problemset/problem/510/B", "B. Fox And Two Dotstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputFox Ciel is playing a mobile puzzle game called \"Two Dots\". The basic levels are played on a board of size n\u2009\u00d7\u2009m cells, like this:Each cell contains a dot that has some color. We will use different uppercase Latin characters to express different colors.The key of this game is to find a cycle that contain dots of same color. Consider 4 blue dots on the picture forming a circle as an example. Formally, we call a sequence of dots d1,\u2009d2,\u2009...,\u2009dk a cycle if and only if it meets the following condition:  These k dots are different: if i\u2009\u2260\u2009j then di is different from dj.  k is at least 4.  All dots belong to the same color.  For all 1\u2009\u2264\u2009i\u2009\u2264\u2009k\u2009-\u20091: di and di\u2009+\u20091 are adjacent. Also, dk and d1 should also be adjacent. Cells x and y are called adjacent if they share an edge. Determine if there exists a cycle on the field.InputThe first line contains two integers n and m (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200950): the number of rows and columns of the board.Then n lines follow, each line contains a string consisting of m characters, expressing colors of dots in each line. Each character is an uppercase Latin letter.OutputOutput \"Yes\" if there exists a cycle, and \"No\" otherwise.ExamplesInputCopy3 4AAAAABCAAAAAOutputCopyYesInputCopy3 4AAAAABCAAADAOutputCopyNoInputCopy4 4YYYRBYBYBBBYBBBYOutputCopyYesInputCopy7 6AAAAABABBBABABAAABABABBBABAAABABBBABAAAAABOutputCopyYesInputCopy2 13ABCDEFGHIJKLMNOPQRSTUVWXYZOutputCopyNoNoteIn first sample test all 'A' form a cycle.In second sample there is no such cycle.The third sample is displayed on the picture above ('Y' = Yellow, 'B' = Blue, 'R' = Red)."], "Tile Painting": ["https://codeforces.com/problemset/problem/1242/A", "A. Tile Paintingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputUjan has been lazy lately, but now has decided to bring his yard to good shape. First, he decided to paint the path from his house to the gate.The path consists of nn consecutive tiles, numbered from 11 to nn. Ujan will paint each tile in some color. He will consider the path aesthetic if for any two different tiles with numbers ii and jj, such that |j\u2212i||j\u2212i| is a divisor of nn greater than 11, they have the same color. Formally, the colors of two tiles with numbers ii and jj should be the same if |i\u2212j|>1|i\u2212j|>1 and nmod|i\u2212j|=0nmod|i\u2212j|=0 (where xmodyxmody is the remainder when dividing xx by yy).Ujan wants to brighten up space. What is the maximum number of different colors that Ujan can use, so that the path is aesthetic?InputThe first line of input contains a single integer nn (1\u2264n\u226410121\u2264n\u22641012), the length of the path.OutputOutput a single integer, the maximum possible number of colors that the path can be painted in.ExamplesInputCopy4\nOutputCopy2\nInputCopy5\nOutputCopy5\nNoteIn the first sample, two colors is the maximum number. Tiles 11 and 33 should have the same color since 4mod|3\u22121|=04mod|3\u22121|=0. Also, tiles 22 and 44 should have the same color since 4mod|4\u22122|=04mod|4\u22122|=0.In the second sample, all five colors can be used.  "], "Minimum Ties": ["https://codeforces.com/problemset/problem/1487/C", "C. Minimum Tiestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputA big football championship will occur soon! nn teams will compete in it, and each pair of teams will play exactly one game against each other.There are two possible outcomes of a game:  the game may result in a tie, then both teams get 11 point;  one team might win in a game, then the winning team gets 33 points and the losing team gets 00 points. The score of a team is the number of points it gained during all games that it played.You are interested in a hypothetical situation when all teams get the same score at the end of the championship. A simple example of that situation is when all games result in ties, but you want to minimize the number of ties as well.Your task is to describe a situation (choose the result of each game) so that all teams get the same score, and the number of ties is the minimum possible.InputThe first line contains one integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.Then the test cases follow. Each test case is described by one line containing one integer nn (2\u2264n\u22641002\u2264n\u2264100) \u2014 the number of teams.OutputFor each test case, print n(n\u22121)2n(n\u22121)2 integers describing the results of the games in the following order: the first integer should correspond to the match between team 11 and team 22, the second \u2014 between team 11 and team 33, then 11 and 44, ..., 11 and nn, 22 and 33, 22 and 44, ..., 22 and nn, and so on, until the game between the team n\u22121n\u22121 and the team nn.The integer corresponding to the game between the team xx and the team yy should be 11 if xx wins, \u22121\u22121 if yy wins, or 00 if the game results in a tie.All teams should get the same score, and the number of ties should be the minimum possible. If there are multiple optimal answers, print any of them. It can be shown that there always exists a way to make all teams have the same score.ExampleInputCopy2\n2\n3\nOutputCopy0 \n1 -1 1 \nNoteIn the first test case of the example, both teams get 11 point since the game between them is a tie.In the second test case of the example, team 11 defeats team 22 (team 11 gets 33 points), team 11 loses to team 33 (team 33 gets 33 points), and team 22 wins against team 33 (team 22 gets 33 points)."], "A and B": ["https://codeforces.com/problemset/problem/1278/B", "B. A and Btime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two integers aa and bb. You can perform a sequence of operations: during the first operation you choose one of these numbers and increase it by 11; during the second operation you choose one of these numbers and increase it by 22, and so on. You choose the number of these operations yourself.For example, if a=1a=1 and b=3b=3, you can perform the following sequence of three operations:   add 11 to aa, then a=2a=2 and b=3b=3;  add 22 to bb, then a=2a=2 and b=5b=5;  add 33 to aa, then a=5a=5 and b=5b=5. Calculate the minimum number of operations required to make aa and bb equal. InputThe first line contains one integer tt (1\u2264t\u22641001\u2264t\u2264100) \u2014 the number of test cases.The only line of each test case contains two integers aa and bb (1\u2264a,b\u22641091\u2264a,b\u2264109).OutputFor each test case print one integer \u2014 the minimum numbers of operations required to make aa and bb equal. ExampleInputCopy3\n1 3\n11 11\n30 20\nOutputCopy3\n0\n4\nNoteFirst test case considered in the statement.In the second test case integers aa and bb are already equal, so you don't need to perform any operations.In the third test case you have to apply the first, the second, the third and the fourth operation to bb (bb turns into 20+1+2+3+4=3020+1+2+3+4=30)."], "And Matching": ["https://codeforces.com/problemset/problem/1630/A", "A. And Matchingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a set of nn (nn is always a power of 22) elements containing all integers 0,1,2,\u2026,n\u221210,1,2,\u2026,n\u22121 exactly once.Find n2n2 pairs of elements such that:  Each element in the set is in exactly one pair.  The sum over all pairs of the bitwise AND of its elements must be exactly equal to kk. Formally, if aiai and bibi are the elements of the ii-th pair, then the following must hold: \u2211i=1n/2ai&bi=k,\u2211i=1n/2ai&bi=k, where && denotes the bitwise AND operation. If there are many solutions, print any of them, if there is no solution, print \u22121\u22121 instead.InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u22644001\u2264t\u2264400) \u2014 the number of test cases. Description of the test cases follows.Each test case consists of a single line with two integers nn and kk (4\u2264n\u22642164\u2264n\u2264216, nn is a power of 22, 0\u2264k\u2264n\u221210\u2264k\u2264n\u22121).The sum of nn over all test cases does not exceed 216216. All test cases in each individual input will be pairwise different.OutputFor each test case, if there is no solution, print a single line with the integer \u22121\u22121.Otherwise, print n2n2 lines, the ii-th of them must contain aiai and bibi, the elements in the ii-th pair. If there are many solutions, print any of them. Print the pairs and the elements in the pairs in any order.ExampleInputCopy4\n4 0\n4 1\n4 2\n4 3\nOutputCopy0 3\n1 2\n0 2\n1 3\n0 1\n2 3\n-1\nNoteIn the first test, (0&3)+(1&2)=0(0&3)+(1&2)=0.In the second test, (0&2)+(1&3)=1(0&2)+(1&3)=1.In the third test, (0&1)+(2&3)=2(0&1)+(2&3)=2.In the fourth test, there is no solution."], "Diluc and Kaeya": ["https://codeforces.com/problemset/problem/1536/C", "C. Diluc and Kaeyatime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe tycoon of a winery empire in Mondstadt, unmatched in every possible way. A thinker in the Knights of Favonius with an exotic appearance.This time, the brothers are dealing with a strange piece of wood marked with their names. This plank of wood can be represented as a string of nn characters. Each character is either a 'D' or a 'K'. You want to make some number of cuts (possibly 00) on this string, partitioning it into several contiguous pieces, each with length at least 11. Both brothers act with dignity, so they want to split the wood as evenly as possible. They want to know the maximum number of pieces you can split the wood into such that the ratios of the number of occurrences of 'D' to the number of occurrences of 'K' in each chunk are the same.Kaeya, the curious thinker, is interested in the solution for multiple scenarios. He wants to know the answer for every prefix of the given string. Help him to solve this problem!For a string we define a ratio as a:ba:b where 'D' appears in it aa times, and 'K' appears bb times. Note that aa or bb can equal 00, but not both. Ratios a:ba:b and c:dc:d are considered equal if and only if a\u22c5d=b\u22c5ca\u22c5d=b\u22c5c. For example, for the string 'DDD' the ratio will be 3:03:0, for 'DKD' \u2014 2:12:1, for 'DKK' \u2014 1:21:2, and for 'KKKKDD' \u2014 2:42:4. Note that the ratios of the latter two strings are equal to each other, but they are not equal to the ratios of the first two strings.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u226410001\u2264t\u22641000). Description of the test cases follows.The first line of each test case contains an integer nn (1\u2264n\u22645\u22c51051\u2264n\u22645\u22c5105)\u00a0\u2014 the length of the wood.The second line of each test case contains a string ss of length nn. Every character of ss will be either 'D' or 'K'.It is guaranteed that the sum of nn over all test cases does not exceed 5\u22c51055\u22c5105.OutputFor each test case, output nn space separated integers. The ii-th of these numbers should equal the answer for the prefix s1,s2,\u2026,sis1,s2,\u2026,si.ExampleInputCopy5\n3\nDDK\n6\nDDDDDD\n4\nDKDK\n1\nD\n9\nDKDKDDDDK\nOutputCopy1 2 1 \n1 2 3 4 5 6 \n1 1 1 2 \n1 \n1 1 1 2 1 2 1 1 3 \nNoteFor the first test case, there is no way to partition 'D' or 'DDK' into more than one block with equal ratios of numbers of 'D' and 'K', while you can split 'DD' into 'D' and 'D'.For the second test case, you can split each prefix of length ii into ii blocks 'D'."], "No More Inversions": ["https://codeforces.com/problemset/problem/1473/C", "C. No More Inversionstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have a sequence aa with nn elements 1,2,3,\u2026,k\u22121,k,k\u22121,k\u22122,\u2026,k\u2212(n\u2212k)1,2,3,\u2026,k\u22121,k,k\u22121,k\u22122,\u2026,k\u2212(n\u2212k) (k\u2264n<2kk\u2264n<2k).Let's call as inversion in aa a pair of indices i<ji<j such that a[i]>a[j]a[i]>a[j].Suppose, you have some permutation pp of size kk and you build a sequence bb of size nn in the following manner: b[i]=p[a[i]]b[i]=p[a[i]].Your goal is to find such permutation pp that the total number of inversions in bb doesn't exceed the total number of inversions in aa, and bb is lexicographically maximum.Small reminder: the sequence of kk integers is called a permutation if it contains all integers from 11 to kk exactly once.Another small reminder: a sequence ss is lexicographically smaller than another sequence tt, if either ss is a prefix of tt, or for the first ii such that si\u2260tisi\u2260ti, si<tisi<ti holds (in the first position that these sequences are different, ss has smaller number than tt).InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first and only line of each test case contains two integers nn and kk (k\u2264n<2kk\u2264n<2k; 1\u2264k\u22641051\u2264k\u2264105)\u00a0\u2014 the length of the sequence aa and its maximum.It's guaranteed that the total sum of kk over test cases doesn't exceed 105105.OutputFor each test case, print kk integers\u00a0\u2014 the permutation pp which maximizes bb lexicographically without increasing the total number of inversions.It can be proven that pp exists and is unique.ExampleInputCopy4\n1 1\n2 2\n3 2\n4 3\nOutputCopy1 \n1 2 \n2 1 \n1 3 2 \nNoteIn the first test case, the sequence a=[1]a=[1], there is only one permutation p=[1]p=[1].In the second test case, the sequence a=[1,2]a=[1,2]. There is no inversion in aa, so there is only one permutation p=[1,2]p=[1,2] which doesn't increase the number of inversions.In the third test case, a=[1,2,1]a=[1,2,1] and has 11 inversion. If we use p=[2,1]p=[2,1], then b=[p[a[1]],p[a[2]],p[a[3]]]=[2,1,2]b=[p[a[1]],p[a[2]],p[a[3]]]=[2,1,2] and also has 11 inversion.In the fourth test case, a=[1,2,3,2]a=[1,2,3,2], and since p=[1,3,2]p=[1,3,2] then b=[1,3,2,3]b=[1,3,2,3]. Both aa and bb have 11 inversion and bb is the lexicographically maximum."], "Vasya and Petya's Game": ["https://codeforces.com/problemset/problem/576/A", "A. Vasya and Petya's Gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya and Petya are playing a simple game. Vasya thought of number x between 1 and n, and Petya tries to guess the number.Petya can ask questions like: \"Is the unknown number divisible by number y?\".The game is played by the following rules: first Petya asks all the questions that interest him (also, he can ask no questions), and then Vasya responds to each question with a 'yes' or a 'no'. After receiving all the answers Petya should determine the number that Vasya thought of.Unfortunately, Petya is not familiar with the number theory. Help him find the minimum number of questions he should ask to make a guaranteed guess of Vasya's number, and the numbers yi, he should ask the questions about.InputA single line contains number n (1\u2009\u2264\u2009n\u2009\u2264\u2009103).OutputPrint the length of the sequence of questions k (0\u2009\u2264\u2009k\u2009\u2264\u2009n), followed by k numbers \u2014 the questions yi (1\u2009\u2264\u2009yi\u2009\u2264\u2009n).If there are several correct sequences of questions of the minimum length, you are allowed to print any of them.ExamplesInputCopy4OutputCopy32 4 3 InputCopy6OutputCopy42 4 3 5 NoteThe sequence from the answer to the first sample test is actually correct.If the unknown number is not divisible by one of the sequence numbers, it is equal to 1.If the unknown number is divisible by 4, it is 4.If the unknown number is divisible by 3, then the unknown number is 3.Otherwise, it is equal to 2. Therefore, the sequence of questions allows you to guess the unknown number. It can be shown that there is no correct sequence of questions of length 2 or shorter."], "Rings": ["https://codeforces.com/problemset/problem/1562/C", "C. Ringstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard output Frodo was caught by Saruman. He tore a pouch from Frodo's neck, shook out its contents\u00a0\u2014there was a pile of different rings: gold and silver...\"How am I to tell which is the One?!\" the mage howled.\"Throw them one by one into the Cracks of Doom and watch when Mordor falls!\" Somewhere in a parallel Middle-earth, when Saruman caught Frodo, he only found nn rings. And the ii-th ring was either gold or silver. For convenience Saruman wrote down a binary string ss of nn characters, where the ii-th character was 0 if the ii-th ring was gold, and 1 if it was silver.Saruman has a magic function ff, which takes a binary string and returns a number obtained by converting the string into a binary number and then converting the binary number into a decimal number. For example, f(001010)=10,f(111)=7,f(11011101)=221f(001010)=10,f(111)=7,f(11011101)=221.Saruman, however, thinks that the order of the rings plays some important role. He wants to find 22 pairs of integers (l1,r1),(l2,r2)(l1,r1),(l2,r2), such that: 1\u2264l1\u2264n1\u2264l1\u2264n, 1\u2264r1\u2264n1\u2264r1\u2264n, r1\u2212l1+1\u2265\u230an2\u230br1\u2212l1+1\u2265\u230an2\u230b  1\u2264l2\u2264n1\u2264l2\u2264n, 1\u2264r2\u2264n1\u2264r2\u2264n, r2\u2212l2+1\u2265\u230an2\u230br2\u2212l2+1\u2265\u230an2\u230b  Pairs (l1,r1)(l1,r1) and (l2,r2)(l2,r2) are distinct. That is, at least one of l1\u2260l2l1\u2260l2 and r1\u2260r2r1\u2260r2 must hold. Let tt be the substring s[l1:r1]s[l1:r1] of ss, and ww be the substring s[l2:r2]s[l2:r2] of ss. Then there exists non-negative integer kk, such that f(t)=f(w)\u22c5kf(t)=f(w)\u22c5k.Here substring s[l:r]s[l:r] denotes slsl+1\u2026sr\u22121srslsl+1\u2026sr\u22121sr, and \u230ax\u230b\u230ax\u230b denotes rounding the number down to the nearest integer.Help Saruman solve this problem! It is guaranteed that under the constraints of the problem at least one solution exists.InputEach test contains multiple test cases.The first line contains one positive integer tt (1\u2264t\u22641031\u2264t\u2264103), denoting the number of test cases. Description of the test cases follows.The first line of each test case contains one positive integer nn (2\u2264n\u22642\u22c51042\u2264n\u22642\u22c5104)\u00a0\u2014 length of the string.The second line of each test case contains a non-empty binary string of length nn.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor every test case print four integers l1l1, r1r1, l2l2, r2r2, which denote the beginning of the first substring, the end of the first substring, the beginning of the second substring, and the end of the second substring, respectively.If there are multiple solutions, print any.ExampleInputCopy7\n6\n101111\n9\n111000111\n8\n10000000\n5\n11011\n6\n001111\n3\n101\n30\n100000000000000100000000000000\nOutputCopy3 6 1 3\n1 9 4 9\n5 8 1 4\n1 5 3 5\n1 6 2 4\n1 2 2 3\n1 15 16 30NoteIn the first testcase f(t)=f(1111)=15f(t)=f(1111)=15, f(w)=f(101)=5f(w)=f(101)=5.In the second testcase f(t)=f(111000111)=455f(t)=f(111000111)=455, f(w)=f(000111)=7f(w)=f(000111)=7.In the third testcase f(t)=f(0000)=0f(t)=f(0000)=0, f(w)=f(1000)=8f(w)=f(1000)=8.In the fourth testcase f(t)=f(11011)=27f(t)=f(11011)=27, f(w)=f(011)=3f(w)=f(011)=3.In the fifth testcase f(t)=f(001111)=15f(t)=f(001111)=15, f(w)=f(011)=3f(w)=f(011)=3."], "Pipes": ["https://codeforces.com/problemset/problem/1234/C", "C. Pipestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a system of pipes. It consists of two rows, each row consists of nn pipes. The top left pipe has the coordinates (1,1)(1,1) and the bottom right \u2014 (2,n)(2,n).There are six types of pipes: two types of straight pipes and four types of curved pipes. Here are the examples of all six types:  Types of pipes You can turn each of the given pipes 9090 degrees clockwise or counterclockwise arbitrary (possibly, zero) number of times (so the types 11 and 22 can become each other and types 3,4,5,63,4,5,6 can become each other).You want to turn some pipes in a way that the water flow can start at (1,0)(1,0) (to the left of the top left pipe), move to the pipe at (1,1)(1,1), flow somehow by connected pipes to the pipe at (2,n)(2,n) and flow right to (2,n+1)(2,n+1).Pipes are connected if they are adjacent in the system and their ends are connected. Here are examples of connected pipes:  Examples of connected pipes Let's describe the problem using some example:  The first example input And its solution is below:   The first example answer As you can see, the water flow is the poorly drawn blue line. To obtain the answer, we need to turn the pipe at (1,2)(1,2) 9090 degrees clockwise, the pipe at (2,3)(2,3) 9090 degrees, the pipe at (1,6)(1,6) 9090 degrees, the pipe at (1,7)(1,7) 180180 degrees and the pipe at (2,7)(2,7) 180180 degrees. Then the flow of water can reach (2,n+1)(2,n+1) from (1,0)(1,0).You have to answer qq independent queries.InputThe first line of the input contains one integer qq (1\u2264q\u22641041\u2264q\u2264104) \u2014 the number of queries. Then qq queries follow.Each query consists of exactly three lines. The first line of the query contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of pipes in each row. The next two lines contain a description of the first and the second rows correspondingly. Each row description consists of nn digits from 11 to 66 without any whitespaces between them, each digit corresponds to the type of pipe in the corresponding cell. See the problem statement to understand which digits correspond to which types of pipes.It is guaranteed that the sum of nn over all queries does not exceed 2\u22c51052\u22c5105.OutputFor the ii-th query print the answer for it \u2014 \"YES\" (without quotes) if it is possible to turn some pipes in a way that the water flow can reach (2,n+1)(2,n+1) from (1,0)(1,0), and \"NO\" otherwise.ExampleInputCopy6\n7\n2323216\n1615124\n1\n3\n4\n2\n13\n24\n2\n12\n34\n3\n536\n345\n2\n46\n54\nOutputCopyYES\nYES\nYES\nNO\nYES\nNO\nNoteThe first query from the example is described in the problem statement."], "Close Tuples (easy version)": ["https://codeforces.com/problemset/problem/1462/E1", "E1. Close Tuples (easy version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of this problem. The only difference between easy and hard versions is the constraints on kk and mm (in this version k=2k=2 and m=3m=3). Also, in this version of the problem, you DON'T NEED to output the answer by modulo.You are given a sequence aa of length nn consisting of integers from 11 to nn. The sequence may contain duplicates (i.e. some elements can be equal).Find the number of tuples of m=3m=3 elements such that the maximum number in the tuple differs from the minimum by no more than k=2k=2. Formally, you need to find the number of triples of indices i<j<zi<j<z such thatmax(ai,aj,az)\u2212min(ai,aj,az)\u22642.max(ai,aj,az)\u2212min(ai,aj,az)\u22642.For example, if n=4n=4 and a=[1,2,4,3]a=[1,2,4,3], then there are two such triples (i=1,j=2,z=4i=1,j=2,z=4 and i=2,j=3,z=4i=2,j=3,z=4). If n=4n=4 and a=[1,1,1,1]a=[1,1,1,1], then all four possible triples are suitable.InputThe first line contains a single integer tt (1\u2264t\u22642\u22c51051\u2264t\u22642\u22c5105)\u00a0\u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains an integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105)\u00a0\u2014 the length of the sequence aa.The next line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n)\u00a0\u2014 the sequence aa.It is guaranteed that the sum of nn for all test cases does not exceed 2\u22c51052\u22c5105.OutputOutput tt answers to the given test cases. Each answer is the required number of triples of elements, such that the maximum value in the triple differs from the minimum by no more than 22. Note that in difference to the hard version of the problem, you don't need to output the answer by modulo. You must output the exact value of the answer.ExampleInputCopy4\n4\n1 2 4 3\n4\n1 1 1 1\n1\n1\n10\n5 6 1 3 2 9 8 1 2 4\nOutputCopy2\n4\n0\n15\n"], "Air Conditioners": ["https://codeforces.com/problemset/problem/1547/E", "E. Air Conditionerstime limit per test2 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputOn a strip of land of length nn there are kk air conditioners: the ii-th air conditioner is placed in cell aiai (1\u2264ai\u2264n1\u2264ai\u2264n). Two or more air conditioners cannot be placed in the same cell (i.e. all aiai are distinct).Each air conditioner is characterized by one parameter: temperature. The ii-th air conditioner is set to the temperature titi.  Example of strip of length n=6n=6, where k=2k=2, a=[2,5]a=[2,5] and t=[14,16]t=[14,16]. For each cell ii (1\u2264i\u2264n1\u2264i\u2264n) find it's temperature, that can be calculated by the formula min1\u2264j\u2264k(tj+|aj\u2212i|),min1\u2264j\u2264k(tj+|aj\u2212i|),where |aj\u2212i||aj\u2212i| denotes absolute value of the difference aj\u2212iaj\u2212i.In other words, the temperature in cell ii is equal to the minimum among the temperatures of air conditioners, increased by the distance from it to the cell ii.Let's look at an example. Consider that n=6,k=2n=6,k=2, the first air conditioner is placed in cell a1=2a1=2 and is set to the temperature t1=14t1=14 and the second air conditioner is placed in cell a2=5a2=5 and is set to the temperature t2=16t2=16. In that case temperatures in cells are:  temperature in cell 11 is: min(14+|2\u22121|,16+|5\u22121|)=min(14+1,16+4)=min(15,20)=15min(14+|2\u22121|,16+|5\u22121|)=min(14+1,16+4)=min(15,20)=15;  temperature in cell 22 is: min(14+|2\u22122|,16+|5\u22122|)=min(14+0,16+3)=min(14,19)=14min(14+|2\u22122|,16+|5\u22122|)=min(14+0,16+3)=min(14,19)=14;  temperature in cell 33 is: min(14+|2\u22123|,16+|5\u22123|)=min(14+1,16+2)=min(15,18)=15min(14+|2\u22123|,16+|5\u22123|)=min(14+1,16+2)=min(15,18)=15;  temperature in cell 44 is: min(14+|2\u22124|,16+|5\u22124|)=min(14+2,16+1)=min(16,17)=16min(14+|2\u22124|,16+|5\u22124|)=min(14+2,16+1)=min(16,17)=16;  temperature in cell 55 is: min(14+|2\u22125|,16+|5\u22125|)=min(14+3,16+0)=min(17,16)=16min(14+|2\u22125|,16+|5\u22125|)=min(14+3,16+0)=min(17,16)=16;  temperature in cell 66 is: min(14+|2\u22126|,16+|5\u22126|)=min(14+4,16+1)=min(18,17)=17min(14+|2\u22126|,16+|5\u22126|)=min(14+4,16+1)=min(18,17)=17. For each cell from 11 to nn find the temperature in it.InputThe first line contains one integer qq (1\u2264q\u22641041\u2264q\u2264104)\u00a0\u2014 the number of test cases in the input. Then test cases follow. Before each test case, there is an empty line.Each test case contains three lines. The first line contains two integers nn (1\u2264n\u22643\u22c51051\u2264n\u22643\u22c5105) and kk (1\u2264k\u2264n1\u2264k\u2264n)\u00a0\u2014 the length of the strip of land and the number of air conditioners respectively.The second line contains kk integers a1,a2,\u2026,aka1,a2,\u2026,ak (1\u2264ai\u2264n1\u2264ai\u2264n)\u00a0\u2014 positions of air conditioners on the strip of land.The third line contains kk integers t1,t2,\u2026,tkt1,t2,\u2026,tk (1\u2264ti\u22641091\u2264ti\u2264109)\u00a0\u2014 temperatures of air conditioners.It is guaranteed that the sum of nn over all test cases does not exceed 3\u22c51053\u22c5105.OutputFor each test case output nn integers separated by space: temperatures of air in cells.ExampleInputCopy5\n\n6 2\n2 5\n14 16\n\n10 1\n7\n30\n\n5 5\n3 1 4 2 5\n3 1 4 2 5\n\n7 1\n1\n1000000000\n\n6 3\n6 1 3\n5 5 5\nOutputCopy15 14 15 16 16 17 \n36 35 34 33 32 31 30 31 32 33 \n1 2 3 4 5 \n1000000000 1000000001 1000000002 1000000003 1000000004 1000000005 1000000006 \n5 6 5 6 6 5 \n"], "Anu Has a Function": ["https://codeforces.com/problemset/problem/1299/A", "A. Anu Has a Functiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAnu has created her own function ff: f(x,y)=(x|y)\u2212yf(x,y)=(x|y)\u2212y where || denotes the bitwise OR operation. For example, f(11,6)=(11|6)\u22126=15\u22126=9f(11,6)=(11|6)\u22126=15\u22126=9. It can be proved that for any nonnegative numbers xx and yy value of f(x,y)f(x,y) is also nonnegative. She would like to research more about this function and has created multiple problems for herself. But she isn't able to solve all of them and needs your help. Here is one of these problems.A value of an array [a1,a2,\u2026,an][a1,a2,\u2026,an] is defined as f(f(\u2026f(f(a1,a2),a3),\u2026an\u22121),an)f(f(\u2026f(f(a1,a2),a3),\u2026an\u22121),an) (see notes). You are given an array with not necessarily distinct elements. How should you reorder its elements so that the value of the array is maximal possible?InputThe first line contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105).The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109). Elements of the array are not guaranteed to be different.OutputOutput nn integers, the reordering of the array with maximum value. If there are multiple answers, print any.ExamplesInputCopy4\n4 0 11 6\nOutputCopy11 6 4 0InputCopy1\n13\nOutputCopy13 NoteIn the first testcase, value of the array [11,6,4,0][11,6,4,0] is f(f(f(11,6),4),0)=f(f(9,4),0)=f(9,0)=9f(f(f(11,6),4),0)=f(f(9,4),0)=f(9,0)=9.[11,4,0,6][11,4,0,6] is also a valid answer."], "Integers Shop": ["https://codeforces.com/problemset/problem/1621/B", "B. Integers Shoptime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe integers shop sells nn segments. The ii-th of them contains all integers from lili to riri and costs cici coins.Tomorrow Vasya will go to this shop and will buy some segments there. He will get all integers that appear in at least one of bought segments. The total cost of the purchase is the sum of costs of all segments in it.After shopping, Vasya will get some more integers as a gift. He will get integer xx as a gift if and only if all of the following conditions are satisfied:   Vasya hasn't bought xx.  Vasya has bought integer ll that is less than xx.  Vasya has bought integer rr that is greater than xx. Vasya can get integer xx as a gift only once so he won't have the same integers after receiving a gift.For example, if Vasya buys segment [2,4][2,4] for 2020 coins and segment [7,8][7,8] for 2222 coins, he spends 4242 coins and receives integers 2,3,4,7,82,3,4,7,8 from these segments. He also gets integers 55 and 66 as a gift.Due to the technical issues only the first ss segments (that is, segments [l1,r1],[l2,r2],\u2026,[ls,rs][l1,r1],[l2,r2],\u2026,[ls,rs]) will be available tomorrow in the shop.Vasya wants to get (to buy or to get as a gift) as many integers as possible. If he can do this in differents ways, he selects the cheapest of them.For each ss from 11 to nn, find how many coins will Vasya spend if only the first ss segments will be available.InputThe first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains the single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of segments in the shop.Each of next nn lines contains three integers lili, riri, cici (1\u2264li\u2264ri\u2264109,1\u2264ci\u22641091\u2264li\u2264ri\u2264109,1\u2264ci\u2264109)\u00a0\u2014 the ends of the ii-th segments and its cost.It is guaranteed that the total sum of nn over all test cases doesn't exceed 2\u22c51052\u22c5105.OutputFor each test case output nn integers: the ss-th (1\u2264s\u2264n1\u2264s\u2264n) of them should be the number of coins Vasia will spend in the shop if only the first ss segments will be available.ExampleInputCopy3\n2\n2 4 20\n7 8 22\n2\n5 11 42\n5 11 42\n6\n1 4 4\n5 8 9\n7 8 7\n2 10 252\n1 11 271\n1 10 1\nOutputCopy20\n42\n42\n42\n4\n13\n11\n256\n271\n271\nNoteIn the first test case if s=1s=1 then Vasya can buy only the segment [2,4][2,4] for 2020 coins and get 33 integers.The way to get 77 integers for 4242 coins in case s=2s=2 is described in the statement.In the second test case note, that there can be the same segments in the shop."], "Acacius and String": ["https://codeforces.com/problemset/problem/1379/A", "A. Acacius and Stringtime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputAcacius is studying strings theory. Today he came with the following problem.You are given a string ss of length nn consisting of lowercase English letters and question marks. It is possible to replace question marks with lowercase English letters in such a way that a string \"abacaba\" occurs as a substring in a resulting string exactly once?Each question mark should be replaced with exactly one lowercase English letter. For example, string \"a?b?c\" can be transformed into strings \"aabbc\" and \"azbzc\", but can't be transformed into strings \"aabc\", \"a?bbc\" and \"babbc\".Occurrence of a string tt of length mm in the string ss of length nn as a substring is a index ii (1\u2264i\u2264n\u2212m+11\u2264i\u2264n\u2212m+1) such that string s[i..i+m\u22121]s[i..i+m\u22121] consisting of mm consecutive symbols of ss starting from ii-th equals to string tt. For example string \"ababa\" has two occurrences of a string \"aba\" as a substring with i=1i=1 and i=3i=3, but there are no occurrences of a string \"aba\" in the string \"acba\" as a substring.Please help Acacius to check if it is possible to replace all question marks with lowercase English letters in such a way that a string \"abacaba\" occurs as a substring in a resulting string exactly once.InputFirst line of input contains an integer TT (1\u2264T\u226450001\u2264T\u22645000), number of test cases. TT pairs of lines with test case descriptions follow.The first line of a test case description contains a single integer nn (7\u2264n\u2264507\u2264n\u226450), length of a string ss.The second line of a test case description contains string ss of length nn consisting of lowercase English letters and question marks.OutputFor each test case output an answer for it.In case if there is no way to replace question marks in string ss with a lowercase English letters in such a way that there is exactly one occurrence of a string \"abacaba\" in the resulting string as a substring output \"No\".Otherwise output \"Yes\" and in the next line output a resulting string consisting of nn lowercase English letters. If there are multiple possible strings, output any.You may print every letter in \"Yes\" and \"No\" in any case you want (so, for example, the strings yEs, yes, Yes, and YES will all be recognized as positive answer).ExampleInputCopy6\n7\nabacaba\n7\n???????\n11\naba?abacaba\n11\nabacaba?aba\n15\nasdf???f???qwer\n11\nabacabacaba\nOutputCopyYes\nabacaba\nYes\nabacaba\nYes\nabadabacaba\nYes\nabacabadaba\nNo\nNo\nNoteIn first example there is exactly one occurrence of a string \"abacaba\" in the string \"abacaba\" as a substring.In second example seven question marks can be replaced with any seven lowercase English letters and with \"abacaba\" in particular.In sixth example there are two occurrences of a string \"abacaba\" as a substring."], "Minimum Grid Path": ["https://codeforces.com/problemset/problem/1499/C", "C. Minimum Grid Pathtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputLet's say you are standing on the XYXY-plane at point (0,0)(0,0) and you want to reach point (n,n)(n,n).You can move only in two directions:   to the right, i.\u00a0e. horizontally and in the direction that increase your xx coordinate,  or up, i.\u00a0e. vertically and in the direction that increase your yy coordinate. In other words, your path will have the following structure:   initially, you choose to go to the right or up;  then you go some positive integer distance in the chosen direction (distances can be chosen independently);  after that you change your direction (from right to up, or from up to right) and repeat the process. You don't like to change your direction too much, so you will make no more than n\u22121n\u22121 direction changes.As a result, your path will be a polygonal chain from (0,0)(0,0) to (n,n)(n,n), consisting of at most nn line segments where each segment has positive integer length and vertical and horizontal segments alternate.Not all paths are equal. You have nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn where cici is the cost of the ii-th segment.Using these costs we can define the cost of the path as the sum of lengths of the segments of this path multiplied by their cost, i.\u00a0e. if the path consists of kk segments (k\u2264nk\u2264n), then the cost of the path is equal to \u2211i=1kci\u22c5lengthi\u2211i=1kci\u22c5lengthi (segments are numbered from 11 to kk in the order they are in the path).Find the path of the minimum cost and print its cost.InputThe first line contains the single integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains the single integer nn (2\u2264n\u22641052\u2264n\u2264105).The second line of each test case contains nn integers c1,c2,\u2026,cnc1,c2,\u2026,cn (1\u2264ci\u22641091\u2264ci\u2264109)\u00a0\u2014 the costs of each segment.It's guaranteed that the total sum of nn doesn't exceed 105105.OutputFor each test case, print the minimum possible cost of the path from (0,0)(0,0) to (n,n)(n,n) consisting of at most nn alternating segments.ExampleInputCopy3\n2\n13 88\n3\n2 3 1\n5\n4 3 2 1 4\nOutputCopy202\n13\n19\nNoteIn the first test case, to reach (2,2)(2,2) you need to make at least one turn, so your path will consist of exactly 22 segments: one horizontal of length 22 and one vertical of length 22. The cost of the path will be equal to 2\u22c5c1+2\u22c5c2=26+176=2022\u22c5c1+2\u22c5c2=26+176=202.In the second test case, one of the optimal paths consists of 33 segments: the first segment of length 11, the second segment of length 33 and the third segment of length 22.The cost of the path is 1\u22c52+3\u22c53+2\u22c51=131\u22c52+3\u22c53+2\u22c51=13.In the third test case, one of the optimal paths consists of 44 segments: the first segment of length 11, the second one\u00a0\u2014 11, the third one\u00a0\u2014 44, the fourth one\u00a0\u2014 44. The cost of the path is 1\u22c54+1\u22c53+4\u22c52+4\u22c51=191\u22c54+1\u22c53+4\u22c52+4\u22c51=19."], "Secret Passwords": ["https://codeforces.com/problemset/problem/1263/D", "D. Secret Passwordstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne unknown hacker wants to get the admin's password of AtForces testing system, to get problems from the next contest. To achieve that, he sneaked into the administrator's office and stole a piece of paper with a list of nn passwords \u2014 strings, consists of small Latin letters.Hacker went home and started preparing to hack AtForces. He found that the system contains only passwords from the stolen list and that the system determines the equivalence of the passwords aa and bb as follows:  two passwords aa and bb are equivalent if there is a letter, that exists in both aa and bb;  two passwords aa and bb are equivalent if there is a password cc from the list, which is equivalent to both aa and bb. If a password is set in the system and an equivalent one is applied to access the system, then the user is accessed into the system.For example, if the list contain passwords \"a\", \"b\", \"ab\", \"d\", then passwords \"a\", \"b\", \"ab\" are equivalent to each other, but the password \"d\" is not equivalent to any other password from list. In other words, if:  admin's password is \"b\", then you can access to system by using any of this passwords: \"a\", \"b\", \"ab\";  admin's password is \"d\", then you can access to system by using only \"d\". Only one password from the list is the admin's password from the testing system. Help hacker to calculate the minimal number of passwords, required to guaranteed access to the system. Keep in mind that the hacker does not know which password is set in the system.InputThe first line contain integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 number of passwords in the list. Next nn lines contains passwords from the list \u2013 non-empty strings sisi, with length at most 5050 letters. Some of the passwords may be equal.It is guaranteed that the total length of all passwords does not exceed 106106 letters. All of them consist only of lowercase Latin letters.OutputIn a single line print the minimal number of passwords, the use of which will allow guaranteed to access the system.ExamplesInputCopy4\na\nb\nab\nd\nOutputCopy2InputCopy3\nab\nbc\nabc\nOutputCopy1InputCopy1\ncodeforces\nOutputCopy1NoteIn the second example hacker need to use any of the passwords to access the system."], "Painting Eggs": ["https://codeforces.com/problemset/problem/282/B", "B. Painting Eggstime limit per test5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Bitlandians are quite weird people. They have very peculiar customs.As is customary, Uncle J. wants to have n eggs painted for Bitruz (an ancient Bitland festival). He has asked G. and A. to do the work.The kids are excited because just as is customary, they're going to be paid for the job! Overall uncle J. has got n eggs. G. named his price for painting each egg. Similarly, A. named his price for painting each egg. It turns out that for each egg the sum of the money both A. and G. want for the painting equals 1000.Uncle J. wants to distribute the eggs between the children so as to give each egg to exactly one child. Also, Uncle J. wants the total money paid to A. to be different from the total money paid to G. by no more than 500.Help Uncle J. Find the required distribution of eggs or otherwise say that distributing the eggs in the required manner is impossible.InputThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009106) \u2014 the number of eggs.Next n lines contain two integers ai and gi each (0\u2009\u2264\u2009ai,\u2009gi\u2009\u2264\u20091000;\u00a0ai\u2009+\u2009gi\u2009=\u20091000): ai is the price said by A. for the i-th egg and gi is the price said by G. for the i-th egg.OutputIf it is impossible to assign the painting, print \"-1\" (without quotes).Otherwise print a string, consisting of n letters \"G\" and \"A\". The i-th letter of this string should represent the child who will get the i-th egg in the required distribution. Letter \"A\" represents A. and letter \"G\" represents G. If we denote the money Uncle J. must pay A. for the painting as Sa, and the money Uncle J. must pay G. for the painting as Sg, then this inequality must hold: |Sa\u2009\u2009-\u2009\u2009Sg|\u2009\u2009\u2264\u2009\u2009500. If there are several solutions, you are allowed to print any of them.ExamplesInputCopy21 999999 1OutputCopyAGInputCopy3400 600400 600400 600OutputCopyAGA"], "Good Numbers (hard version)": ["https://codeforces.com/problemset/problem/1249/C2", "C2. Good Numbers (hard version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is the maximum value of nn.You are given a positive integer number nn. You really love good numbers so you want to find the smallest good number greater than or equal to nn.The positive integer is called good if it can be represented as a sum of distinct powers of 33 (i.e. no duplicates of powers of 33 are allowed).For example:  3030 is a good number: 30=33+3130=33+31,  11 is a good number: 1=301=30,  1212 is a good number: 12=32+3112=32+31,  but 22 is not a good number: you can't represent it as a sum of distinct powers of 33 (2=30+302=30+30),  1919 is not a good number: you can't represent it as a sum of distinct powers of 33 (for example, the representations 19=32+32+30=32+31+31+31+3019=32+32+30=32+31+31+31+30 are invalid),  2020 is also not a good number: you can't represent it as a sum of distinct powers of 33 (for example, the representation 20=32+32+30+3020=32+32+30+30 is invalid). Note, that there exist other representations of 1919 and 2020 as sums of powers of 33 but none of them consists of distinct powers of 33.For the given positive integer nn find such smallest mm (n\u2264mn\u2264m) that mm is a good number.You have to answer qq independent queries.InputThe first line of the input contains one integer qq (1\u2264q\u22645001\u2264q\u2264500) \u2014 the number of queries. Then qq queries follow.The only line of the query contains one integer nn (1\u2264n\u226410181\u2264n\u22641018).OutputFor each query, print such smallest integer mm (where n\u2264mn\u2264m) that mm is a good number.ExampleInputCopy8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\nOutputCopy1\n3\n9\n13\n27\n6561\n19683\n1350851717672992089\n"], "Division": ["https://codeforces.com/problemset/problem/1444/A", "A. Divisiontime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputOleg's favorite subjects are History and Math, and his favorite branch of mathematics is division.To improve his division skills, Oleg came up with tt pairs of integers pipi and qiqi and for each pair decided to find the greatest integer xixi, such that:   pipi is divisible by xixi;  xixi is not divisible by qiqi.  Oleg is really good at division and managed to find all the answers quickly, how about you?InputThe first line contains an integer tt (1\u2264t\u2264501\u2264t\u226450)\u00a0\u2014 the number of pairs.Each of the following tt lines contains two integers pipi and qiqi (1\u2264pi\u226410181\u2264pi\u22641018; 2\u2264qi\u22641092\u2264qi\u2264109)\u00a0\u2014 the ii-th pair of integers.OutputPrint tt integers: the ii-th integer is the largest xixi such that pipi is divisible by xixi, but xixi is not divisible by qiqi.One can show that there is always at least one value of xixi satisfying the divisibility conditions for the given constraints.ExampleInputCopy3\n10 4\n12 6\n179 822\nOutputCopy10\n4\n179\nNoteFor the first pair, where p1=10p1=10 and q1=4q1=4, the answer is x1=10x1=10, since it is the greatest divisor of 1010 and 1010 is not divisible by 44.For the second pair, where p2=12p2=12 and q2=6q2=6, note that   1212 is not a valid x2x2, since 1212 is divisible by q2=6q2=6;  66 is not valid x2x2 as well: 66 is also divisible by q2=6q2=6.  The next available divisor of p2=12p2=12 is 44, which is the answer, since 44 is not divisible by 66."], "Backspace": ["https://codeforces.com/problemset/problem/1553/D", "D. Backspacetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two strings ss and tt, both consisting of lowercase English letters. You are going to type the string ss character by character, from the first character to the last one.When typing a character, instead of pressing the button corresponding to it, you can press the \"Backspace\" button. It deletes the last character you have typed among those that aren't deleted yet (or does nothing if there are no characters in the current string). For example, if ss is \"abcbd\" and you press Backspace instead of typing the first and the fourth characters, you will get the string \"bd\" (the first press of Backspace deletes no character, and the second press deletes the character 'c'). Another example, if ss is \"abcaa\" and you press Backspace instead of the last two letters, then the resulting text is \"a\".Your task is to determine whether you can obtain the string tt, if you type the string ss and press \"Backspace\" instead of typing several (maybe zero) characters of ss.InputThe first line contains a single integer qq (1\u2264q\u22641051\u2264q\u2264105) \u2014 the number of test cases.The first line of each test case contains the string ss (1\u2264|s|\u22641051\u2264|s|\u2264105). Each character of ss is a lowercase English letter.The second line of each test case contains the string tt (1\u2264|t|\u22641051\u2264|t|\u2264105). Each character of tt is a lowercase English letter.It is guaranteed that the total number of characters in the strings over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print \"YES\" if you can obtain the string tt by typing the string ss and replacing some characters with presses of \"Backspace\" button, or \"NO\" if you cannot.You may print each letter in any case (YES, yes, Yes will all be recognized as positive answer, NO, no and nO will all be recognized as negative answer).ExampleInputCopy4\nababa\nba\nababa\nbb\naaa\naaaa\naababa\nababa\nOutputCopyYES\nNO\nNO\nYES\nNoteConsider the example test from the statement.In order to obtain \"ba\" from \"ababa\", you may press Backspace instead of typing the first and the fourth characters.There's no way to obtain \"bb\" while typing \"ababa\".There's no way to obtain \"aaaa\" while typing \"aaa\".In order to obtain \"ababa\" while typing \"aababa\", you have to press Backspace instead of typing the first character, then type all the remaining characters."], "Cow and Message": ["https://codeforces.com/problemset/problem/1307/C", "C. Cow and Messagetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBessie the cow has just intercepted a text that Farmer John sent to Burger Queen! However, Bessie is sure that there is a secret message hidden inside.The text is a string ss of lowercase Latin letters. She considers a string tt as hidden in string ss if tt exists as a subsequence of ss whose indices form an arithmetic progression. For example, the string aab is hidden in string aaabb because it occurs at indices 11, 33, and 55, which form an arithmetic progression with a common difference of 22. Bessie thinks that any hidden string that occurs the most times is the secret message. Two occurrences of a subsequence of SS are distinct if the sets of indices are different. Help her find the number of occurrences of the secret message!For example, in the string aaabb, a is hidden 33 times, b is hidden 22 times, ab is hidden 66 times, aa is hidden 33 times, bb is hidden 11 time, aab is hidden 22 times, aaa is hidden 11 time, abb is hidden 11 time, aaab is hidden 11 time, aabb is hidden 11 time, and aaabb is hidden 11 time. The number of occurrences of the secret message is 66.InputThe first line contains a string ss of lowercase Latin letters (1\u2264|s|\u22641051\u2264|s|\u2264105) \u2014 the text that Bessie intercepted.OutputOutput a single integer \u00a0\u2014 the number of occurrences of the secret message.ExamplesInputCopyaaabb\nOutputCopy6\nInputCopyusaco\nOutputCopy1\nInputCopylol\nOutputCopy2\nNoteIn the first example, these are all the hidden strings and their indice sets:   a occurs at (1)(1), (2)(2), (3)(3)  b occurs at (4)(4), (5)(5)  ab occurs at (1,4)(1,4), (1,5)(1,5), (2,4)(2,4), (2,5)(2,5), (3,4)(3,4), (3,5)(3,5)  aa occurs at (1,2)(1,2), (1,3)(1,3), (2,3)(2,3)  bb occurs at (4,5)(4,5)  aab occurs at (1,3,5)(1,3,5), (2,3,4)(2,3,4)  aaa occurs at (1,2,3)(1,2,3)  abb occurs at (3,4,5)(3,4,5)  aaab occurs at (1,2,3,4)(1,2,3,4)  aabb occurs at (2,3,4,5)(2,3,4,5)  aaabb occurs at (1,2,3,4,5)(1,2,3,4,5)  Note that all the sets of indices are arithmetic progressions.In the second example, no hidden string occurs more than once.In the third example, the hidden string is the letter l."], "Sagheer and Nubian Market": ["https://codeforces.com/problemset/problem/812/C", "C. Sagheer and Nubian Markettime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOn his trip to Luxor and Aswan, Sagheer went to a Nubian market to buy some souvenirs for his friends and relatives. The market has some strange rules. It contains n different items numbered from 1 to n. The i-th item has base cost ai Egyptian pounds. If Sagheer buys k items with indices x1,\u2009x2,\u2009...,\u2009xk, then the cost of item xj is axj\u2009+\u2009xj\u00b7k for 1\u2009\u2264\u2009j\u2009\u2264\u2009k. In other words, the cost of an item is equal to its base cost in addition to its index multiplied by the factor k.Sagheer wants to buy as many souvenirs as possible without paying more than S Egyptian pounds. Note that he cannot buy a souvenir more than once. If there are many ways to maximize the number of souvenirs, he will choose the way that will minimize the total cost. Can you help him with this task?InputThe first line contains two integers n and S (1\u2009\u2264\u2009n\u2009\u2264\u2009105 and 1\u2009\u2264\u2009S\u2009\u2264\u2009109)\u00a0\u2014 the number of souvenirs in the market and Sagheer's budget.The second line contains n space-separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105)\u00a0\u2014 the base costs of the souvenirs.OutputOn a single line, print two integers k, T\u00a0\u2014 the maximum number of souvenirs Sagheer can buy and the minimum total cost to buy these k souvenirs.ExamplesInputCopy3 112 3 5OutputCopy2 11InputCopy4 1001 2 5 6OutputCopy4 54InputCopy1 77OutputCopy0 0NoteIn the first example, he cannot take the three items because they will cost him [5,\u20099,\u200914] with total cost 28. If he decides to take only two items, then the costs will be [4,\u20097,\u200911]. So he can afford the first and second items.In the second example, he can buy all items as they will cost him [5,\u200910,\u200917,\u200922].In the third example, there is only one souvenir in the market which will cost him 8 pounds, so he cannot buy it."], "Prefix-Suffix Palindrome (Easy version)": ["https://codeforces.com/problemset/problem/1326/D1", "D1. Prefix-Suffix Palindrome (Easy version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The difference is the constraint on the sum of lengths of strings and the number of test cases. You can make hacks only if you solve all versions of this task.You are given a string ss, consisting of lowercase English letters. Find the longest string, tt, which satisfies the following conditions:   The length of tt does not exceed the length of ss.  tt is a palindrome.  There exists two strings aa and bb (possibly empty), such that t=a+bt=a+b ( \"++\" represents concatenation), and aa is prefix of ss while bb is suffix of ss. InputThe input consists of multiple test cases. The first line contains a single integer tt (1\u2264t\u226410001\u2264t\u22641000), the number of test cases. The next tt lines each describe a test case.Each test case is a non-empty string ss, consisting of lowercase English letters.It is guaranteed that the sum of lengths of strings over all test cases does not exceed 50005000.OutputFor each test case, print the longest string which satisfies the conditions described above. If there exists multiple possible solutions, print any of them.ExampleInputCopy5\na\nabcdfdcecba\nabbaxyzyx\ncodeforces\nacbba\nOutputCopya\nabcdfdcba\nxyzyx\nc\nabba\nNoteIn the first test, the string s=s=\"a\" satisfies all conditions.In the second test, the string \"abcdfdcba\" satisfies all conditions, because:  Its length is 99, which does not exceed the length of the string ss, which equals 1111.  It is a palindrome.  \"abcdfdcba\" == \"abcdfdc\" ++ \"ba\", and \"abcdfdc\" is a prefix of ss while \"ba\" is a suffix of ss. It can be proven that there does not exist a longer string which satisfies the conditions.In the fourth test, the string \"c\" is correct, because \"c\" == \"c\" ++ \"\" and aa or bb can be empty. The other possible solution for this test is \"s\"."], "Binary String Minimizing": ["https://codeforces.com/problemset/problem/1256/D", "D. Binary String Minimizingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a binary string of length nn (i.\u2009e. a string consisting of nn characters '0' and '1').In one move you can swap two adjacent characters of the string. What is the lexicographically minimum possible string you can obtain from the given one if you can perform no more than kk moves? It is possible that you do not perform any moves at all.Note that you can swap the same pair of adjacent characters with indices ii and i+1i+1 arbitrary (possibly, zero) number of times. Each such swap is considered a separate move.You have to answer qq independent test cases.InputThe first line of the input contains one integer qq (1\u2264q\u22641041\u2264q\u2264104) \u2014 the number of test cases.The first line of the test case contains two integers nn and kk (1\u2264n\u2264106,1\u2264k\u2264n21\u2264n\u2264106,1\u2264k\u2264n2) \u2014 the length of the string and the number of moves you can perform.The second line of the test case contains one string consisting of nn characters '0' and '1'.It is guaranteed that the sum of nn over all test cases does not exceed 106106 (\u2211n\u2264106\u2211n\u2264106).OutputFor each test case, print the answer on it: the lexicographically minimum possible string of length nn you can obtain from the given one if you can perform no more than kk moves.ExampleInputCopy3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\nOutputCopy01011110\n0101111\n0011111\nNoteIn the first example, you can change the string as follows: 110\u2013\u2013\u201311010\u219210\u2013\u2013\u2013111010\u2192011110\u2013\u2013\u201310\u219201110\u2013\u2013\u2013110\u21920110\u2013\u2013\u20131110\u219201011110110_11010\u219210_111010\u2192011110_10\u219201110_110\u21920110_1110\u219201011110. In the third example, there are enough operations to make the string sorted."], "Interesting Story": ["https://codeforces.com/problemset/problem/1551/C", "C. Interesting Storytime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputStephen Queen wants to write a story. He is a very unusual writer, he uses only letters 'a', 'b', 'c', 'd' and 'e'!To compose a story, Stephen wrote out nn words consisting of the first 55 lowercase letters of the Latin alphabet. He wants to select the maximum number of words to make an interesting story.Let a story be a sequence of words that are not necessarily different. A story is called interesting if there exists a letter which occurs among all words of the story more times than all other letters together.For example, the story consisting of three words \"bac\", \"aaada\", \"e\" is interesting (the letter 'a' occurs 55 times, all other letters occur 44 times in total). But the story consisting of two words \"aba\", \"abcde\" is not (no such letter that it occurs more than all other letters in total).You are given a sequence of nn words consisting of letters 'a', 'b', 'c', 'd' and 'e'. Your task is to choose the maximum number of them to make an interesting story. If there's no way to make a non-empty story, output 00.InputThe first line contains one integer tt (1\u2264t\u226450001\u2264t\u22645000) \u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of the words in the sequence. Then nn lines follow, each of them contains a word \u2014 a non-empty string consisting of lowercase letters of the Latin alphabet. The words in the sequence may be non-distinct (i.\u2009e. duplicates are allowed). Only the letters 'a', 'b', 'c', 'd' and 'e' may occur in the words.It is guaranteed that the sum of nn over all test cases doesn't exceed 2\u22c51052\u22c5105; the sum of the lengths of all words over all test cases doesn't exceed 4\u22c51054\u22c5105.OutputFor each test case, output the maximum number of words that compose an interesting story. Print 0 if there's no way to make a non-empty interesting story.ExampleInputCopy6\n3\nbac\naaada\ne\n3\naba\nabcde\naba\n2\nbaba\nbaba\n4\nab\nab\nc\nbc\n5\ncbdca\nd\na\nd\ne\n3\nb\nc\nca\nOutputCopy3\n2\n0\n2\n3\n2\nNoteIn the first test case of the example, all 33 words can be used to make an interesting story. The interesting story is \"bac aaada e\".In the second test case of the example, the 11-st and the 33-rd words can be used to make an interesting story. The interesting story is \"aba aba\". Stephen can't use all three words at the same time.In the third test case of the example, Stephen can't make a non-empty interesting story. So the answer is 00.In the fourth test case of the example, Stephen can use the 33-rd and the 44-th words to make an interesting story. The interesting story is \"c bc\"."], "Restoring the Permutation": ["https://codeforces.com/problemset/problem/1506/E", "E. Restoring the Permutationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA permutation is a sequence of nn integers from 11 to nn, in which all numbers occur exactly once. For example, [1][1], [3,5,2,1,4][3,5,2,1,4], [1,3,2][1,3,2] are permutations, and [2,3,2][2,3,2], [4,3,1][4,3,1], [0][0] are not.Polycarp was presented with a permutation pp of numbers from 11 to nn. However, when Polycarp came home, he noticed that in his pocket, the permutation pp had turned into an array qq according to the following rule:   qi=max(p1,p2,\u2026,pi)qi=max(p1,p2,\u2026,pi). Now Polycarp wondered what lexicographically minimal and lexicographically maximal permutations could be presented to him.An array aa of length nn is lexicographically smaller than an array bb of length nn if there is an index ii (1\u2264i\u2264n1\u2264i\u2264n) such that the first i\u22121i\u22121 elements of arrays aa and bb are the same, and the ii-th element of the array aa is less than the ii-th element of the array bb. For example, the array a=[1,3,2,3]a=[1,3,2,3] is lexicographically smaller than the array b=[1,3,4,2]b=[1,3,4,2].For example, if n=7n=7 and p=[3,2,4,1,7,5,6]p=[3,2,4,1,7,5,6], then q=[3,3,4,4,7,7,7]q=[3,3,4,4,7,7,7] and the following permutations could have been as pp initially:   [3,1,4,2,7,5,6][3,1,4,2,7,5,6] (lexicographically minimal permutation);  [3,1,4,2,7,6,5][3,1,4,2,7,6,5];  [3,2,4,1,7,5,6][3,2,4,1,7,5,6];  [3,2,4,1,7,6,5][3,2,4,1,7,6,5] (lexicographically maximum permutation). For a given array qq, find the lexicographically minimal and lexicographically maximal permutations that could have been originally presented to Polycarp.InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104). Then tt test cases follow.The first line of each test case contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105).The second line of each test case contains nn integers q1,q2,\u2026,qnq1,q2,\u2026,qn (1\u2264qi\u2264n1\u2264qi\u2264n).It is guaranteed that the array qq was obtained by applying the rule from the statement to some permutation pp.It is guaranteed that the sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, output two lines:   on the first line output nn integers\u00a0\u2014 lexicographically minimal permutation that could have been originally presented to Polycarp;  on the second line print nn integers\u00a0\u2014 lexicographically maximal permutation that could have been originally presented to Polycarp; ExampleInputCopy4\n7\n3 3 4 4 7 7 7\n4\n1 2 3 4\n7\n3 4 5 5 5 7 7\n1\n1\nOutputCopy3 1 4 2 7 5 6 \n3 2 4 1 7 6 5 \n1 2 3 4 \n1 2 3 4 \n3 4 5 1 2 7 6 \n3 4 5 2 1 7 6 \n1 \n1 \n"], "Little Dima and Equation": ["https://codeforces.com/problemset/problem/460/B", "B. Little Dima and Equationtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle Dima misbehaved during a math lesson a lot and the nasty teacher Mr. Pickles gave him the following problem as a punishment. Find all integer solutions x (0\u2009<\u2009x\u2009<\u2009109) of the equation:x\u2009=\u2009b\u00b7s(x)a\u2009+\u2009c,\u2009 where a, b, c are some predetermined constant values and function s(x) determines the sum of all digits in the decimal representation of number x.The teacher gives this problem to Dima for each lesson. He changes only the parameters of the equation: a, b, c. Dima got sick of getting bad marks and he asks you to help him solve this challenging problem.InputThe first line contains three space-separated integers: a,\u2009b,\u2009c (1\u2009\u2264\u2009a\u2009\u2264\u20095;\u00a01\u2009\u2264\u2009b\u2009\u2264\u200910000;\u00a0\u2009-\u200910000\u2009\u2264\u2009c\u2009\u2264\u200910000).OutputPrint integer n \u2014 the number of the solutions that you've found. Next print n integers in the increasing order \u2014 the solutions of the given equation. Print only integer solutions that are larger than zero and strictly less than 109.ExamplesInputCopy3 2 8OutputCopy310 2008 13726 InputCopy1 2 -18OutputCopy0InputCopy2 2 -1OutputCopy41 31 337 967 "], "Polycarp Restores Permutation": ["https://codeforces.com/problemset/problem/1141/C", "C. Polycarp Restores Permutationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn array of integers p1,p2,\u2026,pnp1,p2,\u2026,pn is called a permutation if it contains each number from 11 to nn exactly once. For example, the following arrays are permutations: [3,1,2][3,1,2], [1][1], [1,2,3,4,5][1,2,3,4,5] and [4,3,1,2][4,3,1,2]. The following arrays are not permutations: [2][2], [1,1][1,1], [2,3,4][2,3,4].Polycarp invented a really cool permutation p1,p2,\u2026,pnp1,p2,\u2026,pn of length nn. It is very disappointing, but he forgot this permutation. He only remembers the array q1,q2,\u2026,qn\u22121q1,q2,\u2026,qn\u22121 of length n\u22121n\u22121, where qi=pi+1\u2212piqi=pi+1\u2212pi.Given nn and q=q1,q2,\u2026,qn\u22121q=q1,q2,\u2026,qn\u22121, help Polycarp restore the invented permutation.InputThe first line contains the integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u2014 the length of the permutation to restore. The second line contains n\u22121n\u22121 integers q1,q2,\u2026,qn\u22121q1,q2,\u2026,qn\u22121 (\u2212n<qi<n\u2212n<qi<n).OutputPrint the integer -1 if there is no such permutation of length nn which corresponds to the given array qq. Otherwise, if it exists, print p1,p2,\u2026,pnp1,p2,\u2026,pn. Print any such permutation if there are many of them.ExamplesInputCopy3\n-2 1\nOutputCopy3 1 2 InputCopy5\n1 1 1 1\nOutputCopy1 2 3 4 5 InputCopy4\n-1 2 2\nOutputCopy-1\n"], "k-Amazing Numbers": ["https://codeforces.com/problemset/problem/1416/A", "A. k-Amazing Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array aa consisting of nn integers numbered from 11 to nn.Let's define the kk-amazing number of the array as the minimum number that occurs in all of the subsegments of the array having length kk (recall that a subsegment of aa of length kk is a contiguous part of aa containing exactly kk elements). If there is no integer occuring in all subsegments of length kk for some value of kk, then the kk-amazing number is \u22121\u22121.For each kk from 11 to nn calculate the kk-amazing number of the array aa.InputThe first line contains one integer tt (1\u2264t\u226410001\u2264t\u22641000) \u2014 the number of test cases. Then tt test cases follow.The first line of each test case contains one integer nn (1\u2264n\u22643\u22c51051\u2264n\u22643\u22c5105) \u2014 the number of elements in the array. The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n1\u2264ai\u2264n) \u2014 the elements of the array. It is guaranteed that the sum of nn over all test cases does not exceed 3\u22c51053\u22c5105.OutputFor each test case print nn integers, where the ii-th integer is equal to the ii-amazing number of the array.ExampleInputCopy3\n5\n1 2 3 4 5\n5\n4 4 4 4 2\n6\n1 3 1 5 3 1\nOutputCopy-1 -1 3 2 1 \n-1 4 4 4 2 \n-1 -1 1 1 1 1 \n"], "Knight Tournament": ["https://codeforces.com/problemset/problem/356/A", "A. Knight Tournamenttime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputHooray! Berl II, the king of Berland is making a knight tournament. The king has already sent the message to all knights in the kingdom and they in turn agreed to participate in this grand event.As for you, you're just a simple peasant. There's no surprise that you slept in this morning and were late for the tournament (it was a weekend, after all). Now you are really curious about the results of the tournament. This time the tournament in Berland went as follows:  There are n knights participating in the tournament. Each knight was assigned his unique number \u2014 an integer from 1 to n.  The tournament consisted of m fights, in the i-th fight the knights that were still in the game with numbers at least li and at most ri have fought for the right to continue taking part in the tournament.  After the i-th fight among all participants of the fight only one knight won \u2014 the knight number xi, he continued participating in the tournament. Other knights left the tournament.  The winner of the last (the m-th) fight (the knight number xm) became the winner of the tournament. You fished out all the information about the fights from your friends. Now for each knight you want to know the name of the knight he was conquered by. We think that the knight number b was conquered by the knight number a, if there was a fight with both of these knights present and the winner was the knight number a.Write the code that calculates for each knight, the name of the knight that beat him.InputThe first line contains two integers n, m (2\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105;\u00a01\u2009\u2264\u2009m\u2009\u2264\u20093\u00b7105) \u2014 the number of knights and the number of fights. Each of the following m lines contains three integers li,\u2009ri,\u2009xi (1\u2009\u2264\u2009li\u2009<\u2009ri\u2009\u2264\u2009n;\u00a0li\u2009\u2264\u2009xi\u2009\u2264\u2009ri) \u2014 the description of the i-th fight.It is guaranteed that the input is correct and matches the problem statement. It is guaranteed that at least two knights took part in each battle.OutputPrint n integers. If the i-th knight lost, then the i-th number should equal the number of the knight that beat the knight number i. If the i-th knight is the winner, then the i-th number must equal 0.ExamplesInputCopy4 31 2 11 3 31 4 4OutputCopy3 1 4 0 InputCopy8 43 5 43 7 62 8 81 8 1OutputCopy0 8 4 6 4 8 6 1 NoteConsider the first test case. Knights 1 and 2 fought the first fight and knight 1 won. Knights 1 and 3 fought the second fight and knight 3 won. The last fight was between knights 3 and 4, knight 4 won."], "They Are Everywhere": ["https://codeforces.com/problemset/problem/701/C", "C. They Are Everywheretime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSergei B., the young coach of Pokemons, has found the big house which consists of n flats ordered in a row from left to right. It is possible to enter each flat from the street. It is possible to go out from each flat. Also, each flat is connected with the flat to the left and the flat to the right. Flat number 1 is only connected with the flat number 2 and the flat number n is only connected with the flat number n\u2009-\u20091.There is exactly one Pokemon of some type in each of these flats. Sergei B. asked residents of the house to let him enter their flats in order to catch Pokemons. After consulting the residents of the house decided to let Sergei B. enter one flat from the street, visit several flats and then go out from some flat. But they won't let him visit the same flat more than once. Sergei B. was very pleased, and now he wants to visit as few flats as possible in order to collect Pokemons of all types that appear in this house. Your task is to help him and determine this minimum number of flats he has to visit. InputThe first line contains the integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000) \u2014 the number of flats in the house.The second line contains the row s with the length n, it consists of uppercase and lowercase letters of English alphabet, the i-th letter equals the type of Pokemon, which is in the flat number i. OutputPrint the minimum number of flats which Sergei B. should visit in order to catch Pokemons of all types which there are in the house. ExamplesInputCopy3AaAOutputCopy2InputCopy7bcAAcbcOutputCopy3InputCopy6aaBCCeOutputCopy5NoteIn the first test Sergei B. can begin, for example, from the flat number 1 and end in the flat number 2.In the second test Sergei B. can begin, for example, from the flat number 4 and end in the flat number 6. In the third test Sergei B. must begin from the flat number 2 and end in the flat number 6."], "13th Labour of Heracles": ["https://codeforces.com/problemset/problem/1466/D", "D. 13th Labour of Heraclestime limit per test2.5 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou've probably heard about the twelve labors of Heracles, but do you have any idea about the thirteenth? It is commonly assumed it took him a dozen years to complete the twelve feats, so on average, a year to accomplish every one of them. As time flows faster these days, you have minutes rather than months to solve this task. But will you manage?In this problem, you are given a tree with nn weighted vertices. A tree is a connected graph with n\u22121n\u22121 edges.Let us define its kk-coloring as an assignment of kk colors to the edges so that each edge has exactly one color assigned to it. Note that you don't have to use all kk colors.A subgraph of color xx consists of these edges from the original tree, which are assigned color xx, and only those vertices that are adjacent to at least one such edge. So there are no vertices of degree 00 in such a subgraph.The value of a connected component is the sum of weights of its vertices. Let us define the value of a subgraph as a maximum of values of its connected components. We will assume that the value of an empty subgraph equals 00.There is also a value of a kk-coloring, which equals the sum of values of subgraphs of all kk colors. Given a tree, for each kk from 11 to n\u22121n\u22121 calculate the maximal value of a kk-coloring.InputIn the first line of input, there is a single integer tt (1\u2264t\u22641051\u2264t\u2264105) denoting the number of test cases. Then tt test cases follow. First line of each test case contains a single integer nn (2\u2264n\u22641052\u2264n\u2264105). The second line consists of nn integers w1,w2,\u2026,wnw1,w2,\u2026,wn (0\u2264wi\u22641090\u2264wi\u2264109), wiwi equals the weight of ii-th vertex. In each of the following n\u22121n\u22121 lines, there are two integers uu, vv (1\u2264u,v\u2264n1\u2264u,v\u2264n) describing an edge between vertices uu and vv. It is guaranteed that these edges form a tree. The sum of nn in all test cases will not exceed 2\u22c51052\u22c5105.OutputFor every test case, your program should print one line containing n\u22121n\u22121 integers separated with a single space. The ii-th number in a line should be the maximal value of a ii-coloring of the tree.ExampleInputCopy4\n4\n3 5 4 6\n2 1\n3 1\n4 3\n2\n21 32\n2 1\n6\n20 13 17 13 13 11\n2 1\n3 1\n4 1\n5 1\n6 1\n4\n10 6 6 6\n1 2\n2 3\n4 1\nOutputCopy18 22 25\n53\n87 107 127 147 167\n28 38 44\nNoteThe optimal kk-colorings from the first test case are the following:  In the 11-coloring all edges are given the same color. The subgraph of color 11 contains all the edges and vertices from the original graph. Hence, its value equals 3+5+4+6=183+5+4+6=18.  In an optimal 22-coloring edges (2,1)(2,1) and (3,1)(3,1) are assigned color 11. Edge (4,3)(4,3) is of color 22. Hence the subgraph of color 11 consists of a single connected component (vertices 1,2,31,2,3) and its value equals 3+5+4=123+5+4=12. The subgraph of color 22 contains two vertices and one edge. Its value equals 4+6=104+6=10.  In an optimal 33-coloring all edges are assigned distinct colors. Hence subgraphs of each color consist of a single edge. They values are as follows: 3+4=73+4=7, 4+6=104+6=10, 3+5=83+5=8."], "Kolya and Tanya": ["https://codeforces.com/problemset/problem/584/B", "B. Kolya and Tanya time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputKolya loves putting gnomes at the circle table and giving them coins, and Tanya loves studying triplets of gnomes, sitting in the vertexes of an equilateral triangle.More formally, there are 3n gnomes sitting in a circle. Each gnome can have from 1 to 3 coins. Let's number the places in the order they occur in the circle by numbers from 0 to 3n\u2009-\u20091, let the gnome sitting on the i-th place have ai coins. If there is an integer i (0\u2009\u2264\u2009i\u2009<\u2009n) such that ai\u2009+\u2009ai\u2009+\u2009n\u2009+\u2009ai\u2009+\u20092n\u2009\u2260\u20096, then Tanya is satisfied. Count the number of ways to choose ai so that Tanya is satisfied. As there can be many ways of distributing coins, print the remainder of this number modulo 109\u2009+\u20097. Two ways, a and b, are considered distinct if there is index i (0\u2009\u2264\u2009i\u2009<\u20093n), such that ai\u2009\u2260\u2009bi (that is, some gnome got different number of coins in these two ways).InputA single line contains number n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of the gnomes divided by three.OutputPrint a single number \u2014 the remainder of the number of variants of distributing coins that satisfy Tanya modulo 109\u2009+\u20097.ExamplesInputCopy1OutputCopy20InputCopy2OutputCopy680Note20 ways for n\u2009=\u20091 (gnome with index 0 sits on the top of the triangle, gnome 1 on the right vertex, gnome 2 on the left vertex):   "], "Valera and Tubes": ["https://codeforces.com/problemset/problem/441/C", "C. Valera and Tubes time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputValera has got a rectangle table consisting of n rows and m columns. Valera numbered the table rows starting from one, from top to bottom and the columns \u2013 starting from one, from left to right. We will represent cell that is on the intersection of row x and column y by a pair of integers (x,\u2009y).Valera wants to place exactly k tubes on his rectangle table. A tube is such sequence of table cells (x1,\u2009y1), (x2,\u2009y2), ..., (xr,\u2009yr), that:   r\u2009\u2265\u20092;  for any integer i (1\u2009\u2264\u2009i\u2009\u2264\u2009r\u2009-\u20091) the following equation |xi\u2009-\u2009xi\u2009+\u20091|\u2009+\u2009|yi\u2009-\u2009yi\u2009+\u20091|\u2009=\u20091 holds;  each table cell, which belongs to the tube, must occur exactly once in the sequence. Valera thinks that the tubes are arranged in a fancy manner if the following conditions are fulfilled:   no pair of tubes has common cells;  each cell of the table belongs to some tube. Help Valera to arrange k tubes on his rectangle table in a fancy manner.InputThe first line contains three space-separated integers n,\u2009m,\u2009k (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009300; 2\u2009\u2264\u20092k\u2009\u2264\u2009n\u00b7m) \u2014 the number of rows, the number of columns and the number of tubes, correspondingly. OutputPrint k lines. In the i-th line print the description of the i-th tube: first print integer ri (the number of tube cells), then print 2ri integers xi1,\u2009yi1,\u2009xi2,\u2009yi2,\u2009...,\u2009xiri,\u2009yiri (the sequence of table cells).If there are multiple solutions, you can print any of them. It is guaranteed that at least one solution exists. ExamplesInputCopy3 3 3OutputCopy3 1 1 1 2 1 33 2 1 2 2 2 33 3 1 3 2 3 3InputCopy2 3 1OutputCopy6 1 1 1 2 1 3 2 3 2 2 2 1NotePicture for the first sample:   Picture for the second sample:   "], "Vladik and fractions": ["https://codeforces.com/problemset/problem/743/C", "C. Vladik and fractionstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVladik and Chloe decided to determine who of them is better at math. Vladik claimed that for any positive integer n he can represent fraction  as a sum of three distinct positive fractions in form .Help Vladik with that, i.e for a given n find three distinct positive integers x, y and z such that . Because Chloe can't check Vladik's answer if the numbers are large, he asks you to print numbers not exceeding 109.If there is no such answer, print -1.InputThe single line contains single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009104).OutputIf the answer exists, print 3 distinct numbers x, y and z (1\u2009\u2264\u2009x,\u2009y,\u2009z\u2009\u2264\u2009109, x\u2009\u2260\u2009y, x\u2009\u2260\u2009z, y\u2009\u2260\u2009z). Otherwise print -1.If there are multiple answers, print any of them.ExamplesInputCopy3OutputCopy2 7 42InputCopy7OutputCopy7 8 56"], "Representative Edges": ["https://codeforces.com/problemset/problem/1616/C", "C. Representative Edgestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn array a1,a2,\u2026,ana1,a2,\u2026,an is good if and only if for every subsegment 1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n, the following holds: al+al+1+\u2026+ar=12(al+ar)\u22c5(r\u2212l+1)al+al+1+\u2026+ar=12(al+ar)\u22c5(r\u2212l+1). You are given an array of integers a1,a2,\u2026,ana1,a2,\u2026,an. In one operation, you can replace any one element of this array with any real number. Find the minimum number of operations you need to make this array good.InputThe first line of input contains one integer tt (1\u2264t\u22641001\u2264t\u2264100): the number of test cases.Each of the next tt lines contains the description of a test case.In the first line you are given one integer nn (1\u2264n\u2264701\u2264n\u226470): the number of integers in the array.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212100\u2264ai\u2264100\u2212100\u2264ai\u2264100): the initial array.OutputFor each test case, print one integer: the minimum number of elements that you need to replace to make the given array good.ExampleInputCopy5\n4\n1 2 3 4\n4\n1 1 2 2\n2\n0 -1\n6\n3 -2 4 -1 -4 0\n1\n-100\nOutputCopy0\n2\n0\n3\n0\nNoteIn the first test case, the array is good already.In the second test case, one of the possible good arrays is [1,1,1\u2013,1\u2013][1,1,1_,1_] (replaced elements are underlined).In the third test case, the array is good already.In the fourth test case, one of the possible good arrays is [\u22122.5\u2013\u2013\u2013\u2013\u2013,\u22122,\u22121.5\u2013\u2013\u2013\u2013\u2013,\u22121,\u22120.5\u2013\u2013\u2013\u2013\u2013,0][\u22122.5_,\u22122,\u22121.5_,\u22121,\u22120.5_,0]."], "Edgy Trees": ["https://codeforces.com/problemset/problem/1139/C", "C. Edgy Treestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a tree (a connected undirected graph without cycles) of nn vertices. Each of the n\u22121n\u22121 edges of the tree is colored in either black or red.You are also given an integer kk. Consider sequences of kk vertices. Let's call a sequence [a1,a2,\u2026,ak][a1,a2,\u2026,ak] good if it satisfies the following criterion:  We will walk a path (possibly visiting same edge/vertex multiple times) on the tree, starting from a1a1 and ending at akak.  Start at a1a1, then go to a2a2 using the shortest path between a1a1 and a2a2, then go to a3a3 in a similar way, and so on, until you travel the shortest path between ak\u22121ak\u22121 and akak. If you walked over at least one black edge during this process, then the sequence is good.   Consider the tree on the picture. If k=3k=3 then the following sequences are good: [1,4,7][1,4,7], [5,5,3][5,5,3] and [2,3,7][2,3,7]. The following sequences are not good: [1,4,6][1,4,6], [5,5,5][5,5,5], [3,7,3][3,7,3].There are nknk sequences of vertices, count how many of them are good. Since this number can be quite large, print it modulo 109+7109+7.InputThe first line contains two integers nn and kk (2\u2264n\u22641052\u2264n\u2264105, 2\u2264k\u22641002\u2264k\u2264100), the size of the tree and the length of the vertex sequence.Each of the next n\u22121n\u22121 lines contains three integers uiui, vivi and xixi (1\u2264ui,vi\u2264n1\u2264ui,vi\u2264n, xi\u2208{0,1}xi\u2208{0,1}), where uiui and vivi denote the endpoints of the corresponding edge and xixi is the color of this edge (00 denotes red edge and 11 denotes black edge).OutputPrint the number of good sequences modulo 109+7109+7.ExamplesInputCopy4 4\n1 2 1\n2 3 1\n3 4 1\nOutputCopy252InputCopy4 6\n1 2 0\n1 3 0\n1 4 0\nOutputCopy0InputCopy3 5\n1 2 1\n2 3 0\nOutputCopy210NoteIn the first example, all sequences (4444) of length 44 except the following are good:   [1,1,1,1][1,1,1,1] [2,2,2,2][2,2,2,2] [3,3,3,3][3,3,3,3] [4,4,4,4][4,4,4,4] In the second example, all edges are red, hence there aren't any good sequences."], "Equalizing by Division (easy version)": ["https://codeforces.com/problemset/problem/1213/D1", "D1. Equalizing by Division (easy version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is the number of elements in the array.You are given an array aa consisting of nn integers. In one move you can choose any aiai and divide it by 22 rounding down (in other words, in one move you can set ai:=\u230aai2\u230bai:=\u230aai2\u230b).You can perform such an operation any (possibly, zero) number of times with any aiai.Your task is to calculate the minimum possible number of operations required to obtain at least kk equal numbers in the array.Don't forget that it is possible to have ai=0ai=0 after some operations, thus the answer always exists.InputThe first line of the input contains two integers nn and kk (1\u2264k\u2264n\u2264501\u2264k\u2264n\u226450) \u2014 the number of elements in the array and the number of equal numbers required.The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22642\u22c51051\u2264ai\u22642\u22c5105), where aiai is the ii-th element of aa.OutputPrint one integer \u2014 the minimum possible number of operations required to obtain at least kk equal numbers in the array.ExamplesInputCopy5 3\n1 2 2 4 5\nOutputCopy1\nInputCopy5 3\n1 2 3 4 5\nOutputCopy2\nInputCopy5 3\n1 2 3 3 3\nOutputCopy0\n"], "Phoenix and Socks": ["https://codeforces.com/problemset/problem/1515/D", "D. Phoenix and Sockstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputTo satisfy his love of matching socks, Phoenix has brought his nn socks (nn is even) to the sock store. Each of his socks has a color cici and is either a left sock or right sock. Phoenix can pay one dollar to the sock store to either:   recolor a sock to any color c\u2032c\u2032 (1\u2264c\u2032\u2264n)(1\u2264c\u2032\u2264n)  turn a left sock into a right sock  turn a right sock into a left sock  The sock store may perform each of these changes any number of times. Note that the color of a left sock doesn't change when it turns into a right sock, and vice versa. A matching pair of socks is a left and right sock with the same color. What is the minimum cost for Phoenix to make n/2n/2 matching pairs? Each sock must be included in exactly one matching pair.InputThe input consists of multiple test cases. The first line contains an integer tt (1\u2264t\u226410001\u2264t\u22641000)\u00a0\u2014 the number of test cases.The first line of each test case contains three integers nn, ll, and rr (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105; nn is even; 0\u2264l,r\u2264n0\u2264l,r\u2264n; l+r=nl+r=n)\u00a0\u2014 the total number of socks, and the number of left and right socks, respectively.The next line contains nn integers cici (1\u2264ci\u2264n1\u2264ci\u2264n)\u00a0\u2014 the colors of the socks. The first ll socks are left socks, while the next rr socks are right socks.It is guaranteed that the sum of nn across all the test cases will not exceed 2\u22c51052\u22c5105.OutputFor each test case, print one integer\u00a0\u2014 the minimum cost for Phoenix to make n/2n/2 matching pairs. Each sock must be included in exactly one matching pair.ExampleInputCopy4\n6 3 3\n1 2 3 2 2 2\n6 2 4\n1 1 2 2 2 2\n6 5 1\n6 5 4 3 2 1\n4 0 4\n4 4 4 3\nOutputCopy2\n3\n5\n3\nNoteIn the first test case, Phoenix can pay 22 dollars to:   recolor sock 11 to color 22  recolor sock 33 to color 22  There are now 33 matching pairs. For example, pairs (1,4)(1,4), (2,5)(2,5), and (3,6)(3,6) are matching.In the second test case, Phoenix can pay 33 dollars to:   turn sock 66 from a right sock to a left sock  recolor sock 33 to color 11  recolor sock 44 to color 11  There are now 33 matching pairs. For example, pairs (1,3)(1,3), (2,4)(2,4), and (5,6)(5,6) are matching."], "Alice and the List of Presents": ["https://codeforces.com/problemset/problem/1236/B", "B. Alice and the List of Presentstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAlice got many presents these days. So she decided to pack them into boxes and send them to her friends.There are nn kinds of presents. Presents of one kind are identical (i.e. there is no way to distinguish two gifts of the same kind). Presents of different kinds are different (i.e. that is, two gifts of different kinds are distinguishable). The number of presents of each kind, that Alice has is very big, so we can consider Alice has an infinite number of gifts of each kind.Also, there are mm boxes. All of them are for different people, so they are pairwise distinct (consider that the names of mm friends are written on the boxes). For example, putting the first kind of present into the first box but not into the second box, is different from putting the first kind of present into the second box but not into the first box.Alice wants to pack presents with the following rules:  She won't pack more than one present of each kind into the same box, so each box should contain presents of different kinds (i.e. each box contains a subset of nn kinds, empty boxes are allowed);  For each kind at least one present should be packed into some box. Now Alice wants to know how many different ways to pack the presents exists. Please, help her and calculate this number. Since the answer can be huge, output it by modulo 109+7109+7.See examples and their notes for clarification.InputThe first line contains two integers nn and mm, separated by spaces (1\u2264n,m\u22641091\u2264n,m\u2264109)\u00a0\u2014 the number of kinds of presents and the number of boxes that Alice has.OutputPrint one integer \u00a0\u2014 the number of ways to pack the presents with Alice's rules, calculated by modulo 109+7109+7ExamplesInputCopy1 3\nOutputCopy7InputCopy2 2\nOutputCopy9NoteIn the first example, there are seven ways to pack presents:{1}{}{}{1}{}{}{}{1}{}{}{1}{}{}{}{1}{}{}{1}{1}{1}{}{1}{1}{}{}{1}{1}{}{1}{1}{1}{}{1}{1}{}{1}{1}{1}{1}{1}{1}{1}In the second example there are nine ways to pack presents:{}{1,2}{}{1,2}{1}{2}{1}{2}{1}{1,2}{1}{1,2}{2}{1}{2}{1}{2}{1,2}{2}{1,2}{1,2}{}{1,2}{}{1,2}{1}{1,2}{1}{1,2}{2}{1,2}{2}{1,2}{1,2}{1,2}{1,2}For example, the way {2}{2}{2}{2} is wrong, because presents of the first kind should be used in the least one box."], "Swap Letters": ["https://codeforces.com/problemset/problem/1215/C", "C. Swap Letterstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputMonocarp has got two strings ss and tt having equal length. Both strings consist of lowercase Latin letters \"a\" and \"b\". Monocarp wants to make these two strings ss and tt equal to each other. He can do the following operation any number of times: choose an index pos1pos1 in the string ss, choose an index pos2pos2 in the string tt, and swap spos1spos1 with tpos2tpos2.You have to determine the minimum number of operations Monocarp has to perform to make ss and tt equal, and print any optimal sequence of operations \u2014 or say that it is impossible to make these strings equal.InputThe first line contains one integer nn (1\u2264n\u22642\u22c5105)(1\u2264n\u22642\u22c5105) \u2014 the length of ss and tt.The second line contains one string ss consisting of nn characters \"a\" and \"b\". The third line contains one string tt consisting of nn characters \"a\" and \"b\". OutputIf it is impossible to make these strings equal, print \u22121\u22121.Otherwise, in the first line print kk \u2014 the minimum number of operations required to make the strings equal. In each of the next kk lines print two integers \u2014 the index in the string ss and the index in the string tt that should be used in the corresponding swap operation. ExamplesInputCopy4\nabab\naabb\nOutputCopy2\n3 3\n3 2\nInputCopy1\na\nb\nOutputCopy-1\nInputCopy8\nbabbaabb\nabababaa\nOutputCopy3\n2 6\n1 3\n7 8\nNoteIn the first example two operations are enough. For example, you can swap the third letter in ss with the third letter in tt. Then s=s= \"abbb\", t=t= \"aaab\". Then swap the third letter in ss and the second letter in tt. Then both ss and tt are equal to \"abab\".In the second example it's impossible to make two strings equal."], "Jury Meeting": ["https://codeforces.com/problemset/problem/1569/C", "C. Jury Meetingtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputnn people gathered to hold a jury meeting of the upcoming competition, the ii-th member of the jury came up with aiai tasks, which they want to share with each other.First, the jury decides on the order which they will follow while describing the tasks. Let that be a permutation pp of numbers from 11 to nn (an array of size nn where each integer from 11 to nn occurs exactly once).Then the discussion goes as follows:  If a jury member p1p1 has some tasks left to tell, then they tell one task to others. Otherwise, they are skipped.  If a jury member p2p2 has some tasks left to tell, then they tell one task to others. Otherwise, they are skipped.  ...  If a jury member pnpn has some tasks left to tell, then they tell one task to others. Otherwise, they are skipped.  If there are still members with tasks left, then the process repeats from the start. Otherwise, the discussion ends. A permutation pp is nice if none of the jury members tell two or more of their own tasks in a row. Count the number of nice permutations. The answer may be really large, so print it modulo 998244353998244353.InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases.The first line of the test case contains a single integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105)\u00a0\u2014 number of jury members.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the number of problems that the ii-th member of the jury came up with.The sum of nn over all test cases does not exceed 2\u22c51052\u22c5105.OutputFor each test case, print one integer\u00a0\u2014 the number of nice permutations, taken modulo 998244353998244353.ExampleInputCopy4\n2\n1 2\n3\n5 5 5\n4\n1 3 3 7\n6\n3 4 2 1 3 3\nOutputCopy1\n6\n0\n540\nNoteExplanation of the first test case from the example:There are two possible permutations, p=[1,2]p=[1,2] and p=[2,1]p=[2,1]. For p=[1,2]p=[1,2], the process is the following:  the first jury member tells a task;  the second jury member tells a task;  the first jury member doesn't have any tasks left to tell, so they are skipped;  the second jury member tells a task. So, the second jury member has told two tasks in a row (in succession), so the permutation is not nice.For p=[2,1]p=[2,1], the process is the following:  the second jury member tells a task;  the first jury member tells a task;  the second jury member tells a task. So, this permutation is nice."], "Random Events": ["https://codeforces.com/problemset/problem/1461/C", "C. Random Eventstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRon is a happy owner of a permutation aa of length nn.A permutation of length nn is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array) and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).  Ron's permutation is subjected to mm experiments of the following type: (riri, pipi). This means that elements in range [1,ri][1,ri] (in other words, the prefix of length riri) have to be sorted in ascending order with the probability of pipi. All experiments are performed in the same order in which they are specified in the input data.As an example, let's take a look at a permutation [4,2,1,5,3][4,2,1,5,3] and an experiment (3,0.63,0.6). After such an experiment with the probability of 60%60% the permutation will assume the form [1,2,4,5,3][1,2,4,5,3] and with a 40%40% probability it will remain unchanged.You have to determine the probability of the permutation becoming completely sorted in ascending order after mm experiments.InputEach test contains one or more test cases. The first line contains the number of test cases tt (1\u2264t\u22641001\u2264t\u2264100).The first line of each test case contains two integers nn and mm (1\u2264n,m\u2264105)(1\u2264n,m\u2264105)\u00a0\u2014 the length of the permutation and the number of experiments, respectively.The second line of each test case contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u2264n)(1\u2264ai\u2264n)\u00a0\u2014 contents of the permutation.The following mm lines of each test case each contain an integer riri and a real number pipi (1\u2264ri\u2264n,0\u2264pi\u22641)(1\u2264ri\u2264n,0\u2264pi\u22641)\u00a0\u2014 the length of the prefix and the probability of it being sorted. All probabilities are given with at most 66 decimal places.It is guaranteed that the sum of nn and the sum of mm does not exceed 105105 (\u2211n,\u2211m\u2264105\u2211n,\u2211m\u2264105).OutputFor each test case, print a single number\u00a0\u2014 the probability that after all experiments the permutation becomes sorted in ascending order. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2212610\u22126.Formally, let your answer be aa, and the jury's answer be bb. Your answer is accepted if and only if |a\u2212b|max(1,|b|)\u226410\u22126|a\u2212b|max(1,|b|)\u226410\u22126.ExampleInputCopy4\n4 3\n4 3 2 1\n1 0.3\n3 1\n4 0.6\n5 3\n4 2 1 3 5\n3 0.8\n4 0.6\n5 0.3\n6 5\n1 3 2 4 5 6\n4 0.9\n5 0.3\n2 0.4\n6 0.7\n3 0.5\n4 2\n1 2 3 4\n2 0.5\n4 0.1\nOutputCopy0.600000\n0.720000\n0.989500\n1.000000\nNoteExplanation of the first test case: It can be demonstrated that whether the final permutation is sorted or not depends solely on sorting being performed in the (4,0.6)(4,0.6) experiment."], "Binary Search": ["https://codeforces.com/problemset/problem/1436/C", "C. Binary Searchtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAndrey thinks he is truly a successful developer, but in reality he didn't know about the binary search algorithm until recently. After reading some literature Andrey understood that this algorithm allows to quickly find a certain number xx in an array. For an array aa indexed from zero, and an integer xx the pseudocode of the algorithm is as follows:  Note that the elements of the array are indexed from zero, and the division is done in integers (rounding down).Andrey read that the algorithm only works if the array is sorted. However, he found this statement untrue, because there certainly exist unsorted arrays for which the algorithm find xx!Andrey wants to write a letter to the book authors, but before doing that he must consider the permutations of size nn such that the algorithm finds xx in them. A permutation of size nn is an array consisting of nn distinct integers between 11 and nn in arbitrary order.Help Andrey and find the number of permutations of size nn which contain xx at position pospos and for which the given implementation of the binary search algorithm finds xx (returns true). As the result may be extremely large, print the remainder of its division by 109+7109+7.InputThe only line of input contains integers nn, xx and pospos (1\u2264x\u2264n\u226410001\u2264x\u2264n\u22641000, 0\u2264pos\u2264n\u221210\u2264pos\u2264n\u22121) \u2014 the required length of the permutation, the number to search, and the required position of that number, respectively.OutputPrint a single number\u00a0\u2014 the remainder of the division of the number of valid permutations by 109+7109+7.ExamplesInputCopy4 1 2\nOutputCopy6\nInputCopy123 42 24\nOutputCopy824071958\nNoteAll possible permutations in the first test case: (2,3,1,4)(2,3,1,4), (2,4,1,3)(2,4,1,3), (3,2,1,4)(3,2,1,4), (3,4,1,2)(3,4,1,2), (4,2,1,3)(4,2,1,3), (4,3,1,2)(4,3,1,2)."], "Beautiful Regional Contest": ["https://codeforces.com/problemset/problem/1264/A", "A. Beautiful Regional Contesttime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSo the Beautiful Regional Contest (BeRC) has come to an end! nn students took part in the contest. The final standings are already known: the participant in the ii-th place solved pipi problems. Since the participants are primarily sorted by the number of solved problems, then p1\u2265p2\u2265\u22ef\u2265pnp1\u2265p2\u2265\u22ef\u2265pn.Help the jury distribute the gold, silver and bronze medals. Let their numbers be gg, ss and bb, respectively. Here is a list of requirements from the rules, which all must be satisfied:  for each of the three types of medals, at least one medal must be awarded (that is, g>0g>0, s>0s>0 and b>0b>0);  the number of gold medals must be strictly less than the number of silver and the number of bronze (that is, g<sg<s and g<bg<b, but there are no requirements between ss and bb);  each gold medalist must solve strictly more problems than any awarded with a silver medal;  each silver medalist must solve strictly more problems than any awarded a bronze medal;  each bronze medalist must solve strictly more problems than any participant not awarded a medal;  the total number of medalists g+s+bg+s+b should not exceed half of all participants (for example, if n=21n=21, then you can award a maximum of 1010 participants, and if n=26n=26, then you can award a maximum of 1313 participants). The jury wants to reward with medals the total maximal number participants (i.e. to maximize g+s+bg+s+b) so that all of the items listed above are fulfilled. Help the jury find such a way to award medals.InputThe first line of the input contains an integer tt (1\u2264t\u2264100001\u2264t\u226410000) \u2014 the number of test cases in the input. Then tt test cases follow.The first line of a test case contains an integer nn (1\u2264n\u22644\u22c51051\u2264n\u22644\u22c5105) \u2014 the number of BeRC participants. The second line of a test case contains integers p1,p2,\u2026,pnp1,p2,\u2026,pn (0\u2264pi\u22641060\u2264pi\u2264106), where pipi is equal to the number of problems solved by the ii-th participant from the final standings. The values pipi are sorted in non-increasing order, i.e. p1\u2265p2\u2265\u22ef\u2265pnp1\u2265p2\u2265\u22ef\u2265pn.The sum of nn over all test cases in the input does not exceed 4\u22c51054\u22c5105.OutputPrint tt lines, the jj-th line should contain the answer to the jj-th test case.The answer consists of three non-negative integers g,s,bg,s,b.  Print g=s=b=0g=s=b=0 if there is no way to reward participants with medals so that all requirements from the statement are satisfied at the same time.  Otherwise, print three positive numbers g,s,bg,s,b \u2014 the possible number of gold, silver and bronze medals, respectively. The sum of g+s+bg+s+b should be the maximum possible. If there are several answers, print any of them. ExampleInputCopy5\n12\n5 4 4 3 2 2 1 1 1 1 1 1\n4\n4 3 2 1\n1\n1000000\n20\n20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\n32\n64 64 63 58 58 58 58 58 37 37 37 37 34 34 28 28 28 28 28 28 24 24 19 17 17 17 17 16 16 16 16 11\nOutputCopy1 2 3\n0 0 0\n0 0 0\n2 5 3\n2 6 6\nNoteIn the first test case, it is possible to reward 11 gold, 22 silver and 33 bronze medals. In this case, the participant solved 55 tasks will be rewarded with the gold medal, participants solved 44 tasks will be rewarded with silver medals, participants solved 22 or 33 tasks will be rewarded with bronze medals. Participants solved exactly 11 task won't be rewarded. It's easy to see, that in this case, all conditions are satisfied and it is possible to reward participants in this way. It is impossible to give more than 66 medals because the number of medals should not exceed half of the number of participants. The answer 11, 33, 22 is also correct in this test case.In the second and third test cases, it is impossible to reward medals, because at least one medal of each type should be given, but the number of medals should not exceed half of the number of participants."], "Powers of Two": ["https://codeforces.com/problemset/problem/702/B", "B. Powers of Twotime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given n integers a1,\u2009a2,\u2009...,\u2009an. Find the number of pairs of indexes i,\u2009j (i\u2009<\u2009j) that ai\u2009+\u2009aj is a power of 2 (i. e. some integer x exists so that ai\u2009+\u2009aj\u2009=\u20092x).InputThe first line contains the single positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of integers.The second line contains n positive integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109).OutputPrint the number of pairs of indexes i,\u2009j (i\u2009<\u2009j) that ai\u2009+\u2009aj is a power of 2.ExamplesInputCopy47 3 2 1OutputCopy2InputCopy31 1 1OutputCopy3NoteIn the first example the following pairs of indexes include in answer: (1,\u20094) and (2,\u20094).In the second example all pairs of indexes (i,\u2009j) (where i\u2009<\u2009j) include in answer."], "Factorials and Powers of Two": ["https://codeforces.com/problemset/problem/1646/C", "C. Factorials and Powers of Twotime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA number is called powerful if it is a power of two or a factorial. In other words, the number mm is powerful if there exists a non-negative integer dd such that m=2dm=2d or m=d!m=d!, where d!=1\u22c52\u22c5\u2026\u22c5dd!=1\u22c52\u22c5\u2026\u22c5d (in particular, 0!=10!=1). For example 11, 44, and 66 are powerful numbers, because 1=1!1=1!, 4=224=22, and 6=3!6=3! but 77, 1010, or 1818 are not.You are given a positive integer nn. Find the minimum number kk such that nn can be represented as the sum of kk distinct powerful numbers, or say that there is no such kk.InputEach test contains multiple test cases. The first line contains the number of test cases tt (1\u2264t\u22641001\u2264t\u2264100). Description of the test cases follows.A test case consists of only one line, containing one integer nn (1\u2264n\u226410121\u2264n\u22641012).OutputFor each test case print the answer on a separate line.If nn can not be represented as the sum of distinct powerful numbers, print \u22121\u22121.Otherwise, print a single positive integer \u00a0\u2014 the minimum possible value of kk.ExampleInputCopy4\n7\n11\n240\n17179869184\nOutputCopy2\n3\n4\n1\nNoteIn the first test case, 77 can be represented as 7=1+67=1+6, where 11 and 66 are powerful numbers. Because 77 is not a powerful number, we know that the minimum possible value of kk in this case is k=2k=2.In the second test case, a possible way to represent 1111 as the sum of three powerful numbers is 11=1+4+611=1+4+6. We can show that there is no way to represent 1111 as the sum of two or less powerful numbers. In the third test case, 240240 can be represented as 240=24+32+64+120240=24+32+64+120. Observe that 240=120+120240=120+120 is not a valid representation, because the powerful numbers have to be distinct. In the fourth test case, 17179869184=23417179869184=234, so 1717986918417179869184 is a powerful number and the minimum kk in this case is k=1k=1."], "RGB Substring (easy version)": ["https://codeforces.com/problemset/problem/1196/D1", "D1. RGB Substring (easy version)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is the size of the input.You are given a string ss consisting of nn characters, each character is 'R', 'G' or 'B'.You are also given an integer kk. Your task is to change the minimum number of characters in the initial string ss so that after the changes there will be a string of length kk that is a substring of ss, and is also a substring of the infinite string \"RGBRGBRGB ...\".A string aa is a substring of string bb if there exists a positive integer ii such that a1=bia1=bi, a2=bi+1a2=bi+1, a3=bi+2a3=bi+2, ..., a|a|=bi+|a|\u22121a|a|=bi+|a|\u22121. For example, strings \"GBRG\", \"B\", \"BR\" are substrings of the infinite string \"RGBRGBRGB ...\" while \"GR\", \"RGR\" and \"GGG\" are not.You have to answer qq independent queries.InputThe first line of the input contains one integer qq (1\u2264q\u226420001\u2264q\u22642000)\u00a0\u2014 the number of queries. Then qq queries follow.The first line of the query contains two integers nn and kk (1\u2264k\u2264n\u226420001\u2264k\u2264n\u22642000)\u00a0\u2014 the length of the string ss and the length of the substring.The second line of the query contains a string ss consisting of nn characters 'R', 'G' and 'B'.It is guaranteed that the sum of nn over all queries does not exceed 20002000 (\u2211n\u22642000\u2211n\u22642000).OutputFor each query print one integer\u00a0\u2014 the minimum number of characters you need to change in the initial string ss so that after changing there will be a substring of length kk in ss that is also a substring of the infinite string \"RGBRGBRGB ...\".ExampleInputCopy3\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\nOutputCopy1\n0\n3\nNoteIn the first example, you can change the first character to 'R' and obtain the substring \"RG\", or change the second character to 'R' and obtain \"BR\", or change the third, fourth or fifth character to 'B' and obtain \"GB\".In the second example, the substring is \"BRG\"."], "Skyscrapers (easy version)": ["https://codeforces.com/problemset/problem/1313/C1", "C1. Skyscrapers (easy version)time limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputThis is an easier version of the problem. In this version n\u22641000n\u22641000The outskirts of the capital are being actively built up in Berland. The company \"Kernel Panic\" manages the construction of a residential complex of skyscrapers in New Berlskva. All skyscrapers are built along the highway. It is known that the company has already bought nn plots along the highway and is preparing to build nn skyscrapers, one skyscraper per plot.Architects must consider several requirements when planning a skyscraper. Firstly, since the land on each plot has different properties, each skyscraper has a limit on the largest number of floors it can have. Secondly, according to the design code of the city, it is unacceptable for a skyscraper to simultaneously have higher skyscrapers both to the left and to the right of it.Formally, let's number the plots from 11 to nn. Then if the skyscraper on the ii-th plot has aiai floors, it must hold that aiai is at most mimi (1\u2264ai\u2264mi1\u2264ai\u2264mi). Also there mustn't be integers jj and kk such that j<i<kj<i<k and aj>ai<akaj>ai<ak. Plots jj and kk are not required to be adjacent to ii.The company wants the total number of floors in the built skyscrapers to be as large as possible. Help it to choose the number of floors for each skyscraper in an optimal way, i.e. in such a way that all requirements are fulfilled, and among all such construction plans choose any plan with the maximum possible total number of floors.InputThe first line contains a single integer nn (1\u2264n\u226410001\u2264n\u22641000)\u00a0\u2014 the number of plots.The second line contains the integers m1,m2,\u2026,mnm1,m2,\u2026,mn (1\u2264mi\u22641091\u2264mi\u2264109)\u00a0\u2014 the limit on the number of floors for every possible number of floors for a skyscraper on each plot.OutputPrint nn integers aiai\u00a0\u2014 the number of floors in the plan for each skyscraper, such that all requirements are met, and the total number of floors in all skyscrapers is the maximum possible.If there are multiple answers possible, print any of them.ExamplesInputCopy51 2 3 2 1OutputCopy1 2 3 2 1 InputCopy310 6 8OutputCopy10 6 6 NoteIn the first example, you can build all skyscrapers with the highest possible height.In the second test example, you cannot give the maximum height to all skyscrapers as this violates the design code restriction. The answer [10,6,6][10,6,6] is optimal. Note that the answer of [6,6,8][6,6,8] also satisfies all restrictions, but is not optimal."], "Ayoub and Lost Array": ["https://codeforces.com/problemset/problem/1105/C", "C. Ayoub and Lost Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAyoub had an array aa of integers of size nn and this array had two interesting properties:   All the integers in the array were between ll and rr (inclusive).  The sum of all the elements was divisible by 33. Unfortunately, Ayoub has lost his array, but he remembers the size of the array nn and the numbers ll and rr, so he asked you to find the number of ways to restore the array. Since the answer could be very large, print it modulo 109+7109+7 (i.e. the remainder when dividing by 109+7109+7). In case there are no satisfying arrays (Ayoub has a wrong memory), print 00.InputThe first and only line contains three integers nn, ll and rr (1\u2264n\u22642\u22c5105,1\u2264l\u2264r\u22641091\u2264n\u22642\u22c5105,1\u2264l\u2264r\u2264109)\u00a0\u2014 the size of the lost array and the range of numbers in the array.OutputPrint the remainder when dividing by 109+7109+7 the number of ways to restore the array.ExamplesInputCopy2 1 3\nOutputCopy3\nInputCopy3 2 2\nOutputCopy1\nInputCopy9 9 99\nOutputCopy711426616\nNoteIn the first example, the possible arrays are : [1,2],[2,1],[3,3][1,2],[2,1],[3,3].In the second example, the only possible array is [2,2,2][2,2,2]."], "Zero Quantity Maximization": ["https://codeforces.com/problemset/problem/1133/D", "D. Zero Quantity Maximizationtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given two arrays aa and bb, each contains nn integers.You want to create a new array cc as follows: choose some real (i.e. not necessarily integer) number dd, and then for every i\u2208[1,n]i\u2208[1,n] let ci:=d\u22c5ai+bici:=d\u22c5ai+bi.Your goal is to maximize the number of zeroes in array cc. What is the largest possible answer, if you choose dd optimally?InputThe first line contains one integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105) \u2014 the number of elements in both arrays.The second line contains nn integers a1a1, a2a2, ..., anan (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109).The third line contains nn integers b1b1, b2b2, ..., bnbn (\u2212109\u2264bi\u2264109\u2212109\u2264bi\u2264109).OutputPrint one integer \u2014 the maximum number of zeroes in array cc, if you choose dd optimally.ExamplesInputCopy5\n1 2 3 4 5\n2 4 7 11 3\nOutputCopy2\nInputCopy3\n13 37 39\n1 2 3\nOutputCopy2\nInputCopy4\n0 0 0 0\n1 2 3 4\nOutputCopy0\nInputCopy3\n1 2 -1\n-6 -12 6\nOutputCopy3\nNoteIn the first example, we may choose d=\u22122d=\u22122.In the second example, we may choose d=\u2212113d=\u2212113.In the third example, we cannot obtain any zero in array cc, no matter which dd we choose.In the fourth example, we may choose d=6d=6."], "Cut 'em all!": ["https://codeforces.com/problemset/problem/982/C", "C. Cut 'em all!time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're given a tree with nn vertices.Your task is to determine the maximum possible number of edges that can be removed in such a way that all the remaining connected components will have even size.InputThe first line contains an integer nn (1\u2264n\u22641051\u2264n\u2264105) denoting the size of the tree. The next n\u22121n\u22121 lines contain two integers uu, vv (1\u2264u,v\u2264n1\u2264u,v\u2264n) each, describing the vertices connected by the ii-th edge.It's guaranteed that the given edges form a tree.OutputOutput a single integer kk \u2014 the maximum number of edges that can be removed to leave all connected components with even size, or \u22121\u22121 if it is impossible to remove edges in order to satisfy this property.ExamplesInputCopy42 44 13 1OutputCopy1InputCopy31 21 3OutputCopy-1InputCopy107 18 48 104 76 59 33 52 102 5OutputCopy4InputCopy21 2OutputCopy0NoteIn the first example you can remove the edge between vertices 11 and 44. The graph after that will have two connected components with two vertices in each.In the second example you can't remove edges in such a way that all components have even number of vertices, so the answer is \u22121\u22121."], "Mashmokh and Numbers": ["https://codeforces.com/problemset/problem/414/A", "A. Mashmokh and Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputIt's holiday. Mashmokh and his boss, Bimokh, are playing a game invented by Mashmokh. In this game Mashmokh writes sequence of n distinct integers on the board. Then Bimokh makes several (possibly zero) moves. On the first move he removes the first and the second integer from from the board, on the second move he removes the first and the second integer of the remaining sequence from the board, and so on. Bimokh stops when the board contains less than two numbers. When Bimokh removes numbers x and y from the board, he gets gcd(x,\u2009y) points. At the beginning of the game Bimokh has zero points.Mashmokh wants to win in the game. For this reason he wants his boss to get exactly k points in total. But the guy doesn't know how choose the initial sequence in the right way. Please, help him. Find n distinct integers a1,\u2009a2,\u2009...,\u2009an such that his boss will score exactly k points. Also Mashmokh can't memorize too huge numbers. Therefore each of these integers must be at most 109.InputThe first line of input contains two space-separated integers n,\u2009k\u00a0(1\u2009\u2264\u2009n\u2009\u2264\u2009105;\u00a00\u2009\u2264\u2009k\u2009\u2264\u2009108).OutputIf such sequence doesn't exist output -1 otherwise output n distinct space-separated integers a1,\u2009a2,\u2009...,\u2009an\u00a0(1\u2009\u2264\u2009ai\u2009\u2264\u2009109).ExamplesInputCopy5 2OutputCopy1 2 3 4 5InputCopy5 3OutputCopy2 4 3 7 1InputCopy7 2OutputCopy-1Notegcd(x,\u2009y) is greatest common divisor of x and y."], "Uniqueness": ["https://codeforces.com/problemset/problem/1208/B", "B. Uniquenesstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array a1,a2,\u2026,ana1,a2,\u2026,an. You can remove at most one subsegment from it. The remaining elements should be pairwise distinct.In other words, at most one time you can choose two integers ll and rr (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n) and delete integers al,al+1,\u2026,aral,al+1,\u2026,ar from the array. Remaining elements should be pairwise distinct. Find the minimum size of the subsegment you need to remove to make all remaining elements distinct.InputThe first line of the input contains a single integer nn (1\u2264n\u226420001\u2264n\u22642000)\u00a0\u2014 the number of elements in the given array.The next line contains nn spaced integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the elements of the array. OutputPrint a single integer\u00a0\u2014 the minimum size of the subsegment you need to remove to make all elements of the array pairwise distinct. If no subsegment needs to be removed, print 00.ExamplesInputCopy3\n1 2 3\nOutputCopy0\nInputCopy4\n1 1 2 2\nOutputCopy2\nInputCopy5\n1 4 1 4 9\nOutputCopy2\nNoteIn the first example all the elements are already distinct, therefore no subsegment needs to be removed.In the second example you can remove the subsegment from index 22 to 33.In the third example you can remove the subsegments from index 11 to 22, or from index 22 to 33, or from index 33 to 44."], "Walking Robot": ["https://codeforces.com/problemset/problem/1154/D", "D. Walking Robottime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a robot staying at X=0X=0 on the OxOx axis. He has to walk to X=nX=n. You are controlling this robot and controlling how he goes. The robot has a battery and an accumulator with a solar panel.The ii-th segment of the path (from X=i\u22121X=i\u22121 to X=iX=i) can be exposed to sunlight or not. The array ss denotes which segments are exposed to sunlight: if segment ii is exposed, then si=1si=1, otherwise si=0si=0.The robot has one battery of capacity bb and one accumulator of capacity aa. For each segment, you should choose which type of energy storage robot will use to go to the next point (it can be either battery or accumulator). If the robot goes using the battery, the current charge of the battery is decreased by one (the robot can't use the battery if its charge is zero). And if the robot goes using the accumulator, the current charge of the accumulator is decreased by one (and the robot also can't use the accumulator if its charge is zero).If the current segment is exposed to sunlight and the robot goes through it using the battery, the charge of the accumulator increases by one (of course, its charge can't become higher than it's maximum capacity).If accumulator is used to pass some segment, its charge decreases by 1 no matter if the segment is exposed or not.You understand that it is not always possible to walk to X=nX=n. You want your robot to go as far as possible. Find the maximum number of segments of distance the robot can pass if you control him optimally.InputThe first line of the input contains three integers n,b,an,b,a (1\u2264n,b,a\u22642\u22c51051\u2264n,b,a\u22642\u22c5105) \u2014 the robot's destination point, the battery capacity and the accumulator capacity, respectively.The second line of the input contains nn integers s1,s2,\u2026,sns1,s2,\u2026,sn (0\u2264si\u226410\u2264si\u22641), where sisi is 11 if the ii-th segment of distance is exposed to sunlight, and 00 otherwise.OutputPrint one integer \u2014 the maximum number of segments the robot can pass if you control him optimally.ExamplesInputCopy5 2 1\n0 1 0 1 0\nOutputCopy5\nInputCopy6 2 1\n1 0 0 1 0 1\nOutputCopy3\nNoteIn the first example the robot can go through the first segment using the accumulator, and charge levels become b=2b=2 and a=0a=0. The second segment can be passed using the battery, and charge levels become b=1b=1 and a=1a=1. The third segment can be passed using the accumulator, and charge levels become b=1b=1 and a=0a=0. The fourth segment can be passed using the battery, and charge levels become b=0b=0 and a=1a=1. And the fifth segment can be passed using the accumulator.In the second example the robot can go through the maximum number of segments using battery two times and accumulator one time in any order."], "Valeriy and Deque": ["https://codeforces.com/problemset/problem/1179/A", "A. Valeriy and Dequetime limit per test6 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently, on the course of algorithms and data structures, Valeriy learned how to use a deque. He built a deque filled with nn elements. The ii-th element is aiai (ii = 1,2,\u2026,n1,2,\u2026,n). He gradually takes the first two leftmost elements from the deque (let's call them AA and BB, respectively), and then does the following: if A>BA>B, he writes AA to the beginning and writes BB to the end of the deque, otherwise, he writes to the beginning BB, and AA writes to the end of the deque. We call this sequence of actions an operation.For example, if deque was [2,3,4,5,1][2,3,4,5,1], on the operation he will write B=3B=3 to the beginning and A=2A=2 to the end, so he will get [3,4,5,1,2][3,4,5,1,2].The teacher of the course, seeing Valeriy, who was passionate about his work, approached him and gave him qq queries. Each query consists of the singular number mjmj (j=1,2,\u2026,q)(j=1,2,\u2026,q). It is required for each query to answer which two elements he will pull out on the mjmj-th operation.Note that the queries are independent and for each query the numbers AA and BB should be printed in the order in which they will be pulled out of the deque.Deque is a data structure representing a list of elements where insertion of new elements or deletion of existing elements can be made from both sides.InputThe first line contains two integers nn and qq (2\u2264n\u22641052\u2264n\u2264105, 0\u2264q\u22643\u22c51050\u2264q\u22643\u22c5105)\u00a0\u2014 the number of elements in the deque and the number of queries. The second line contains nn integers a1a1, a2a2, ..., anan, where aiai (0\u2264ai\u2264109)(0\u2264ai\u2264109)\u00a0\u2014 the deque element in ii-th position. The next qq lines contain one number each, meaning mjmj (1\u2264mj\u226410181\u2264mj\u22641018).OutputFor each teacher's query, output two numbers AA and BB\u00a0\u2014 the numbers that Valeriy pulls out of the deque for the mjmj-th operation.ExamplesInputCopy5 3\n1 2 3 4 5\n1\n2\n10\nOutputCopy1 2\n2 3\n5 2\nInputCopy2 0\n0 0\nOutputCopyNote Consider all 10 steps for the first test in detail: [1,2,3,4,5][1,2,3,4,5]\u00a0\u2014 on the first operation, AA and BB are 11 and 22, respectively.So, 22 we write to the beginning of the deque, and 11\u00a0\u2014 to the end.We get the following status of the deque: [2,3,4,5,1][2,3,4,5,1]. [2,3,4,5,1]\u21d2A=2,B=3[2,3,4,5,1]\u21d2A=2,B=3. [3,4,5,1,2][3,4,5,1,2] [4,5,1,2,3][4,5,1,2,3] [5,1,2,3,4][5,1,2,3,4] [5,2,3,4,1][5,2,3,4,1] [5,3,4,1,2][5,3,4,1,2] [5,4,1,2,3][5,4,1,2,3] [5,1,2,3,4][5,1,2,3,4] [5,2,3,4,1]\u21d2A=5,B=2[5,2,3,4,1]\u21d2A=5,B=2. "], "k-Multiple Free Set": ["https://codeforces.com/problemset/problem/274/A", "A. k-Multiple Free Settime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputA k-multiple free set is a set of integers where there is no pair of integers where one is equal to another integer multiplied by k. That is, there are no two integers x and y (x\u2009<\u2009y) from the set, such that y\u2009=\u2009x\u00b7k.You're given a set of n distinct positive integers. Your task is to find the size of it's largest k-multiple free subset.InputThe first line of the input contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009109). The next line contains a list of n distinct positive integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109).All the numbers in the lines are separated by single spaces.OutputOn the only line of the output print the size of the largest k-multiple free subset of {a1,\u2009a2,\u2009...,\u2009an}.ExamplesInputCopy6 22 3 6 5 4 10OutputCopy3NoteIn the sample input one of the possible maximum 2-multiple free subsets is {4, 5, 6}."], "Gas Pipeline": ["https://codeforces.com/problemset/problem/1207/C", "C. Gas Pipelinetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are responsible for installing a gas pipeline along a road. Let's consider the road (for simplicity) as a segment [0,n][0,n] on OXOX axis. The road can have several crossroads, but for simplicity, we'll denote each crossroad as an interval (x,x+1)(x,x+1) with integer xx. So we can represent the road as a binary string consisting of nn characters, where character 0 means that current interval doesn't contain a crossroad, and 1 means that there is a crossroad.Usually, we can install the pipeline along the road on height of 11 unit with supporting pillars in each integer point (so, if we are responsible for [0,n][0,n] road, we must install n+1n+1 pillars). But on crossroads we should lift the pipeline up to the height 22, so the pipeline won't obstruct the way for cars.We can do so inserting several zig-zag-like lines. Each zig-zag can be represented as a segment [x,x+1][x,x+1] with integer xx consisting of three parts: 0.50.5 units of horizontal pipe + 11 unit of vertical pipe + 0.50.5 of horizontal. Note that if pipeline is currently on height 22, the pillars that support it should also have length equal to 22 units.  Each unit of gas pipeline costs us aa bourles, and each unit of pillar \u2014 bb bourles. So, it's not always optimal to make the whole pipeline on the height 22. Find the shape of the pipeline with minimum possible cost and calculate that cost.Note that you must start and finish the pipeline on height 11 and, also, it's guaranteed that the first and last characters of the input string are equal to 0.InputThe fist line contains one integer TT (1\u2264T\u22641001\u2264T\u2264100) \u2014 the number of queries. Next 2\u22c5T2\u22c5T lines contain independent queries \u2014 one query per two lines.The first line contains three integers nn, aa, bb (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105, 1\u2264a\u22641081\u2264a\u2264108, 1\u2264b\u22641081\u2264b\u2264108) \u2014 the length of the road, the cost of one unit of the pipeline and the cost of one unit of the pillar, respectively.The second line contains binary string ss (|s|=n|s|=n, si\u2208{0,1}si\u2208{0,1}, s1=sn=0s1=sn=0) \u2014 the description of the road.It's guaranteed that the total length of all strings ss doesn't exceed 2\u22c51052\u22c5105.OutputPrint TT integers \u2014 one per query. For each query print the minimum possible cost of the constructed pipeline.ExampleInputCopy4\n8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\nOutputCopy94\n25\n2900000000\n13\nNoteThe optimal pipeline for the first query is shown at the picture above.The optimal pipeline for the second query is pictured below:  The optimal (and the only possible) pipeline for the third query is shown below:  The optimal pipeline for the fourth query is shown below:  "], "Nick and Array": ["https://codeforces.com/problemset/problem/1180/B", "B. Nick and Arraytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNick had received an awesome array of integers a=[a1,a2,\u2026,an]a=[a1,a2,\u2026,an] as a gift for his 55 birthday from his mother. He was already going to explore its various properties but after unpacking he was disappointed a lot because the product a1\u22c5a2\u22c5\u2026ana1\u22c5a2\u22c5\u2026an of its elements seemed to him not large enough.He was ready to throw out the array, but his mother reassured him. She told him, that array would not be spoiled after the following operation: choose any index ii (1\u2264i\u2264n1\u2264i\u2264n) and do ai:=\u2212ai\u22121ai:=\u2212ai\u22121.For example, he can change array [3,\u22121,\u22124,1][3,\u22121,\u22124,1] to an array [\u22124,\u22121,3,1][\u22124,\u22121,3,1] after applying this operation to elements with indices i=1i=1 and i=3i=3. Kolya had immediately understood that sometimes it's possible to increase the product of integers of the array a lot. Now he has decided that he wants to get an array with the maximal possible product of integers using only this operation with its elements (possibly zero, one or more times, as many as he wants), it is not forbidden to do this operation several times for the same index. Help Kolya and print the array with the maximal possible product of elements a1\u22c5a2\u22c5\u2026ana1\u22c5a2\u22c5\u2026an which can be received using only this operation in some order.If there are multiple answers, print any of them.InputThe first line contains integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 number of integers in the array.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212106\u2264ai\u2264106\u2212106\u2264ai\u2264106)\u00a0\u2014 elements of the arrayOutputPrint nn numbers\u00a0\u2014 elements of the array with the maximal possible product of elements which can be received using only this operation in some order from the given array.If there are multiple answers, print any of them.ExamplesInputCopy4\n2 2 2 2\nOutputCopy-3 -3 -3 -3 InputCopy1\n0\nOutputCopy0 InputCopy3\n-3 -3 2\nOutputCopy-3 -3 2 "], "Magic Powder - 2": ["https://codeforces.com/problemset/problem/670/D2", "D2. Magic Powder - 2time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe term of this problem is the same as the previous one, the only exception \u2014 increased restrictions.InputThe first line contains two positive integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009109) \u2014 the number of ingredients and the number of grams of the magic powder.The second line contains the sequence a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109), where the i-th number is equal to the number of grams of the i-th ingredient, needed to bake one cookie.The third line contains the sequence b1,\u2009b2,\u2009...,\u2009bn (1\u2009\u2264\u2009bi\u2009\u2264\u2009109), where the i-th number is equal to the number of grams of the i-th ingredient, which Apollinaria has.OutputPrint the maximum number of cookies, which Apollinaria will be able to bake using the ingredients that she has and the magic powder.ExamplesInputCopy1 100000000011000000000OutputCopy2000000000InputCopy10 11000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 10000000001 1 1 1 1 1 1 1 1 1OutputCopy0InputCopy3 12 1 411 3 16OutputCopy4InputCopy4 34 3 5 611 12 14 20OutputCopy3"], "Hyperset": ["https://codeforces.com/problemset/problem/1287/B", "B. Hypersettime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputBees Alice and Alesya gave beekeeper Polina famous card game \"Set\" as a Christmas present. The deck consists of cards that vary in four features across three options for each kind of feature: number of shapes, shape, shading, and color. In this game, some combinations of three cards are said to make up a set. For every feature \u2014 color, number, shape, and shading \u2014 the three cards must display that feature as either all the same, or pairwise different. The picture below shows how sets look.Polina came up with a new game called \"Hyperset\". In her game, there are nn cards with kk features, each feature has three possible values: \"S\", \"E\", or \"T\". The original \"Set\" game can be viewed as \"Hyperset\" with k=4k=4.Similarly to the original game, three cards form a set, if all features are the same for all cards or are pairwise different. The goal of the game is to compute the number of ways to choose three cards that form a set.Unfortunately, winter holidays have come to an end, and it's time for Polina to go to school. Help Polina find the number of sets among the cards lying on the table.InputThe first line of each test contains two integers nn and kk (1\u2264n\u226415001\u2264n\u22641500, 1\u2264k\u2264301\u2264k\u226430)\u00a0\u2014 number of cards and number of features.Each of the following nn lines contains a card description: a string consisting of kk letters \"S\", \"E\", \"T\". The ii-th character of this string decribes the ii-th feature of that card. All cards are distinct.OutputOutput a single integer\u00a0\u2014 the number of ways to choose three cards that form a set.ExamplesInputCopy3 3\nSET\nETS\nTSE\nOutputCopy1InputCopy3 4\nSETE\nETSE\nTSES\nOutputCopy0InputCopy5 4\nSETT\nTEST\nEEET\nESTE\nSTES\nOutputCopy2NoteIn the third example test, these two triples of cards are sets:  \"SETT\", \"TEST\", \"EEET\"  \"TEST\", \"ESTE\", \"STES\" "], "Yet Another Array Partitioning Task": ["https://codeforces.com/problemset/problem/1114/B", "B. Yet Another Array Partitioning Tasktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAn array bb is called to be a subarray of aa if it forms a continuous subsequence of aa, that is, if it is equal to alal, al+1al+1, \u2026\u2026, arar for some l,rl,r.Suppose mm is some known constant. For any array, having mm or more elements, let's define it's beauty as the sum of mm largest elements of that array. For example:   For array x=[4,3,1,5,2]x=[4,3,1,5,2] and m=3m=3, the 33 largest elements of xx are 55, 44 and 33, so the beauty of xx is 5+4+3=125+4+3=12. For array x=[10,10,10]x=[10,10,10] and m=2m=2, the beauty of xx is 10+10=2010+10=20.You are given an array a1,a2,\u2026,ana1,a2,\u2026,an, the value of the said constant mm and an integer kk. Your need to split the array aa into exactly kk subarrays such that:  Each element from aa belongs to exactly one subarray. Each subarray has at least mm elements. The sum of all beauties of kk subarrays is maximum possible.InputThe first line contains three integers nn, mm and kk (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105, 1\u2264m1\u2264m, 2\u2264k2\u2264k, m\u22c5k\u2264nm\u22c5k\u2264n)\u00a0\u2014 the number of elements in aa, the constant mm in the definition of beauty and the number of subarrays to split to.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109).OutputIn the first line, print the maximum possible sum of the beauties of the subarrays in the optimal partition.In the second line, print k\u22121k\u22121 integers p1,p2,\u2026,pk\u22121p1,p2,\u2026,pk\u22121 (1\u2264p1<p2<\u2026<pk\u22121<n1\u2264p1<p2<\u2026<pk\u22121<n) representing the partition of the array, in which: All elements with indices from 11 to p1p1 belong to the first subarray. All elements with indices from p1+1p1+1 to p2p2 belong to the second subarray. \u2026\u2026. All elements with indices from pk\u22121+1pk\u22121+1 to nn belong to the last, kk-th subarray.If there are several optimal partitions, print any of them.ExamplesInputCopy9 2 3\n5 2 5 2 4 1 1 3 2\nOutputCopy21\n3 5 InputCopy6 1 4\n4 1 3 2 2 3\nOutputCopy12\n1 3 5 InputCopy2 1 2\n-1000000000 1000000000\nOutputCopy0\n1 NoteIn the first example, one of the optimal partitions is [5,2,5][5,2,5], [2,4][2,4], [1,1,3,2][1,1,3,2].  The beauty of the subarray [5,2,5][5,2,5] is 5+5=105+5=10.  The beauty of the subarray [2,4][2,4] is 2+4=62+4=6.  The beauty of the subarray [1,1,3,2][1,1,3,2] is 3+2=53+2=5. The sum of their beauties is 10+6+5=2110+6+5=21.In the second example, one optimal partition is [4][4], [1,3][1,3], [2,2][2,2], [3][3]."], "Polycarp and Div 3": ["https://codeforces.com/problemset/problem/1005/D", "D. Polycarp and Div 3time limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp likes numbers that are divisible by 3.He has a huge number ss. Polycarp wants to cut from it the maximum number of numbers that are divisible by 33. To do this, he makes an arbitrary number of vertical cuts between pairs of adjacent digits. As a result, after mm such cuts, there will be m+1m+1 parts in total. Polycarp analyzes each of the obtained numbers and finds the number of those that are divisible by 33.For example, if the original number is s=3121s=3121, then Polycarp can cut it into three parts with two cuts: 3|1|213|1|21. As a result, he will get two numbers that are divisible by 33.Polycarp can make an arbitrary number of vertical cuts, where each cut is made between a pair of adjacent digits. The resulting numbers cannot contain extra leading zeroes (that is, the number can begin with 0 if and only if this number is exactly one character '0'). For example, 007, 01 and 00099 are not valid numbers, but 90, 0 and 10001 are valid.What is the maximum number of numbers divisible by 33 that Polycarp can obtain?InputThe first line of the input contains a positive integer ss. The number of digits of the number ss is between 11 and 2\u22c51052\u22c5105, inclusive. The first (leftmost) digit is not equal to 0.OutputPrint the maximum number of numbers divisible by 33 that Polycarp can get by making vertical cuts in the given number ss.ExamplesInputCopy3121OutputCopy2InputCopy6OutputCopy1InputCopy1000000000000000000000000000000000OutputCopy33InputCopy201920181OutputCopy4NoteIn the first example, an example set of optimal cuts on the number is 3|1|21.In the second example, you do not need to make any cuts. The specified number 6 forms one number that is divisible by 33.In the third example, cuts must be made between each pair of digits. As a result, Polycarp gets one digit 1 and 3333 digits 0. Each of the 3333 digits 0 forms a number that is divisible by 33.In the fourth example, an example set of optimal cuts is 2|0|1|9|201|81. The numbers 00, 99, 201201 and 8181 are divisible by 33."], "Candies": ["https://codeforces.com/problemset/problem/991/C", "C. Candiestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter passing a test, Vasya got himself a box of nn candies. He decided to eat an equal amount of candies each morning until there are no more candies. However, Petya also noticed the box and decided to get some candies for himself.This means the process of eating candies is the following: in the beginning Vasya chooses a single integer kk, same for all days. After that, in the morning he eats kk candies from the box (if there are less than kk candies in the box, he eats them all), then in the evening Petya eats 10%10% of the candies remaining in the box. If there are still candies left in the box, the process repeats\u00a0\u2014 next day Vasya eats kk candies again, and Petya\u00a0\u2014 10%10% of the candies left in a box, and so on.If the amount of candies in the box is not divisible by 1010, Petya rounds the amount he takes from the box down. For example, if there were 9797 candies in the box, Petya would eat only 99 of them. In particular, if there are less than 1010 candies in a box, Petya won't eat any at all.Your task is to find out the minimal amount of kk that can be chosen by Vasya so that he would eat at least half of the nn candies he initially got. Note that the number kk must be integer.InputThe first line contains a single integer nn (1\u2264n\u226410181\u2264n\u22641018)\u00a0\u2014 the initial amount of candies in the box.OutputOutput a single integer\u00a0\u2014 the minimal amount of kk that would allow Vasya to eat at least half of candies he got.ExampleInputCopy68OutputCopy3NoteIn the sample, the amount of candies, with k=3k=3, would change in the following way (Vasya eats first):68\u219265\u219259\u219256\u219251\u219248\u219244\u219241\u219237\u219234\u219231\u219228\u219226\u219223\u219221\u219218\u219217\u219214\u219213\u219210\u21929\u21926\u21926\u21923\u21923\u2192068\u219265\u219259\u219256\u219251\u219248\u219244\u219241\u219237\u219234\u219231\u219228\u219226\u219223\u219221\u219218\u219217\u219214\u219213\u219210\u21929\u21926\u21926\u21923\u21923\u21920.In total, Vasya would eat 3939 candies, while Petya\u00a0\u2014 2929."], "Robot Breakout": ["https://codeforces.com/problemset/problem/1196/C", "C. Robot Breakouttime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputnn robots have escaped from your laboratory! You have to find them as soon as possible, because these robots are experimental, and their behavior is not tested yet, so they may be really dangerous!Fortunately, even though your robots have escaped, you still have some control over them. First of all, you know the location of each robot: the world you live in can be modeled as an infinite coordinate plane, and the ii-th robot is currently located at the point having coordinates (xixi, yiyi). Furthermore, you may send exactly one command to all of the robots. The command should contain two integer numbers XX and YY, and when each robot receives this command, it starts moving towards the point having coordinates (XX, YY). The robot stops its movement in two cases:  either it reaches (XX, YY);  or it cannot get any closer to (XX, YY). Normally, all robots should be able to get from any point of the coordinate plane to any other point. Each robot usually can perform four actions to move. Let's denote the current coordinates of the robot as (xcxc, ycyc). Then the movement system allows it to move to any of the four adjacent points:  the first action allows it to move from (xcxc, ycyc) to (xc\u22121xc\u22121, ycyc);  the second action allows it to move from (xcxc, ycyc) to (xcxc, yc+1yc+1);  the third action allows it to move from (xcxc, ycyc) to (xc+1xc+1, ycyc);  the fourth action allows it to move from (xcxc, ycyc) to (xcxc, yc\u22121yc\u22121). Unfortunately, it seems that some movement systems of some robots are malfunctioning. For each robot you know which actions it can perform, and which it cannot perform.You want to send a command so all robots gather at the same point. To do so, you have to choose a pair of integer numbers XX and YY so that each robot can reach the point (XX, YY). Is it possible to find such a point?InputThe first line contains one integer qq (1\u2264q\u22641051\u2264q\u2264105)\u00a0\u2014 the number of queries.Then qq queries follow. Each query begins with one line containing one integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of robots in the query. Then nn lines follow, the ii-th of these lines describes the ii-th robot in the current query: it contains six integer numbers xixi, yiyi, fi,1fi,1, fi,2fi,2, fi,3fi,3 and fi,4fi,4 (\u2212105\u2264xi,yi\u2264105\u2212105\u2264xi,yi\u2264105, 0\u2264fi,j\u226410\u2264fi,j\u22641). The first two numbers describe the initial location of the ii-th robot, and the following four numbers describe which actions the ii-th robot can use to move (fi,j=1fi,j=1 if the ii-th robot can use the jj-th action, and fi,j=0fi,j=0 if it cannot use the jj-th action).It is guaranteed that the total number of robots over all queries does not exceed 105105.OutputYou should answer each query independently, in the order these queries appear in the input.To answer a query, you should do one of the following:  if it is impossible to find a point that is reachable by all nn robots, print one number 00 on a separate line;  if it is possible to find a point that is reachable by all nn robots, print three space-separated integers on the same line: 11 XX YY, where XX and YY are the coordinates of the point reachable by all nn robots. Both XX and YY should not exceed 105105 by absolute value; it is guaranteed that if there exists at least one point reachable by all robots, then at least one of such points has both coordinates not exceeding 105105 by absolute value.ExampleInputCopy4\n2\n-1 -2 0 0 0 0\n-1 -2 0 0 0 0\n3\n1 5 1 1 1 1\n2 5 0 1 0 1\n3 5 1 0 0 0\n2\n1337 1337 0 1 1 1\n1336 1337 1 1 0 1\n1\n3 5 1 1 1 1\nOutputCopy1 -1 -2\n1 2 5\n0\n1 -100000 -100000\n"], "Binary Table (Easy Version)": ["https://codeforces.com/problemset/problem/1439/A1", "A1. Binary Table (Easy Version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis is the easy version of the problem. The difference between the versions is in the number of possible operations that can be made. You can make hacks if and only if you solved both versions of the problem.You are given a binary table of size n\u00d7mn\u00d7m. This table consists of symbols 00 and 11.You can make such operation: select 33 different cells that belong to one 2\u00d722\u00d72 square and change the symbols in these cells (change 00 to 11 and 11 to 00).Your task is to make all symbols in the table equal to 00. You are allowed to make at most 3nm3nm operations. You don't need to minimize the number of operations.It can be proved that it is always possible.InputThe first line contains a single integer tt (1\u2264t\u226450001\u2264t\u22645000)\u00a0\u2014 the number of test cases. The next lines contain descriptions of test cases.The first line of the description of each test case contains two integers nn, mm (2\u2264n,m\u22641002\u2264n,m\u2264100).Each of the next nn lines contains a binary string of length mm, describing the symbols of the next row of the table.It is guaranteed that the sum of nmnm for all test cases does not exceed 2000020000.OutputFor each test case print the integer kk (0\u2264k\u22643nm0\u2264k\u22643nm)\u00a0\u2014 the number of operations.In the each of the next kk lines print 66 integers x1,y1,x2,y2,x3,y3x1,y1,x2,y2,x3,y3 (1\u2264x1,x2,x3\u2264n,1\u2264y1,y2,y3\u2264m1\u2264x1,x2,x3\u2264n,1\u2264y1,y2,y3\u2264m) describing the next operation. This operation will be made with three cells (x1,y1)(x1,y1), (x2,y2)(x2,y2), (x3,y3)(x3,y3). These three cells should be different. These three cells should belong into some 2\u00d722\u00d72 square.ExampleInputCopy5\n2 2\n10\n11\n3 3\n011\n101\n110\n4 4\n1111\n0110\n0110\n1111\n5 5\n01011\n11001\n00010\n11011\n10000\n2 3\n011\n101\nOutputCopy1\n1 1 2 1 2 2\n2 \n2 1 3 1 3 2\n1 2 1 3 2 3\n4\n1 1 1 2 2 2 \n1 3 1 4 2 3\n3 2 4 1 4 2\n3 3 4 3 4 4\n4\n1 2 2 1 2 2 \n1 4 1 5 2 5 \n4 1 4 2 5 1\n4 4 4 5 3 4\n2\n1 3 2 2 2 3\n1 2 2 1 2 2\nNoteIn the first test case, it is possible to make only one operation with cells (1,1)(1,1), (2,1)(2,1), (2,2)(2,2). After that, all symbols will be equal to 00.In the second test case:  operation with cells (2,1)(2,1), (3,1)(3,1), (3,2)(3,2). After it the table will be: 011001000  operation with cells (1,2)(1,2), (1,3)(1,3), (2,3)(2,3). After it the table will be: 000000000 In the fifth test case:  operation with cells (1,3)(1,3), (2,2)(2,2), (2,3)(2,3). After it the table will be: 010110  operation with cells (1,2)(1,2), (2,1)(2,1), (2,2)(2,2). After it the table will be: 000000 "], "Ticks": ["https://codeforces.com/problemset/problem/1579/C", "C. Tickstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputCasimir has a rectangular piece of paper with a checkered field of size n\u00d7mn\u00d7m. Initially, all cells of the field are white.Let us denote the cell with coordinates ii vertically and jj horizontally by (i,j)(i,j). The upper left cell will be referred to as (1,1)(1,1) and the lower right cell as (n,m)(n,m).Casimir draws ticks of different sizes on the field. A tick of size dd (d>0d>0) with its center in cell (i,j)(i,j) is drawn as follows:   First, the center cell (i,j)(i,j) is painted black.  Then exactly dd cells on the top-left diagonally to the center and exactly dd cells on the top-right diagonally to the center are also painted black.  That is all the cells with coordinates (i\u2212h,j\u00b1h)(i\u2212h,j\u00b1h) for all hh between 00 and dd are painted. In particular, a tick consists of 2d+12d+1 black cells. An already painted cell will remain black if painted again. Below you can find an example of the 4\u00d794\u00d79 box, with two ticks of sizes 22 and 33.  You are given a description of a checkered field of size n\u00d7mn\u00d7m. Casimir claims that this field came about after he drew some (possibly 00) ticks on it. The ticks could be of different sizes, but the size of each tick is at least kk (that is, d\u2265kd\u2265k for all the ticks).Determine whether this field can indeed be obtained by drawing some (possibly none) ticks of sizes d\u2265kd\u2265k or not.InputThe first line contains an integer tt (1\u2264t\u22641001\u2264t\u2264100)\u00a0\u2014 the number test cases.The following lines contain the descriptions of the test cases. The first line of the test case description contains the integers nn, mm, and kk (1\u2264k\u2264n\u2264101\u2264k\u2264n\u226410; 1\u2264m\u2264191\u2264m\u226419)\u00a0\u2014 the field size and the minimum size of the ticks that Casimir drew. The following nn lines describe the field: each line consists of mm characters either being '.' if the corresponding cell is not yet painted or '*' otherwise.OutputPrint tt lines, each line containing the answer to the corresponding test case. The answer to a test case should be YES if the given field can be obtained by drawing ticks of at least the given size and NO otherwise.You may print every letter in any case you want (so, for example, the strings yEs, yes, Yes, and YES will all be recognized as positive answers).ExampleInputCopy8\n2 3 1\n*.*\n...\n4 9 2\n*.*.*...*\n.*.*...*.\n..*.*.*..\n.....*...\n4 4 1\n*.*.\n****\n.**.\n....\n5 5 1\n.....\n*...*\n.*.*.\n..*.*\n...*.\n5 5 2\n.....\n*...*\n.*.*.\n..*.*\n...*.\n4 7 1\n*.....*\n.....*.\n..*.*..\n...*...\n3 3 1\n***\n***\n***\n3 5 1\n*...*\n.***.\n.**..\nOutputCopyNO\nYES\nYES\nYES\nNO\nNO\nNO\nNO\nNoteThe first sample test case consists of two asterisks neither of which can be independent ticks since ticks of size 00 don't exist.The second sample test case is already described in the statement (check the picture in the statement). This field can be obtained by drawing ticks of sizes 22 and 33, as shown in the figure.The field in the third sample test case corresponds to three ticks of size 11. Their center cells are marked with blueblue, redred and greengreen colors: *.*.*****.****.....The field in the fourth sample test case could have been obtained by drawing two ticks of sizes 11 and 22. Their vertices are marked below with blueblue and redred colors respectively: .....*...*.*.*...**.*...**.The field in the fifth sample test case can not be obtained because k=2k=2, and the last asterisk in the fourth row from the top with coordinates (4,5)(4,5) can only be a part of a tick of size 11.The field in the sixth sample test case can not be obtained because the top left asterisk (1,1)(1,1) can't be an independent tick, since the sizes of the ticks must be positive, and cannot be part of a tick with the center cell in the last row, since it is separated from it by a gap (a point, '.') in (2,2)(2,2).In the seventh sample test case, similarly, the field can not be obtained by the described process because the asterisks with coordinates (1,2)(1,2) (second cell in the first row), (3,1)(3,1) and (3,3)(3,3) (leftmost and rightmost cells in the bottom) can not be parts of any ticks."], "Vasya and Multisets": ["https://codeforces.com/problemset/problem/1051/C", "C. Vasya and Multisetstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVasya has a multiset ss consisting of nn integer numbers. Vasya calls some number xx nice if it appears in the multiset exactly once. For example, multiset {1,1,2,3,3,3,4}{1,1,2,3,3,3,4} contains nice numbers 22 and 44.Vasya wants to split multiset ss into two multisets aa and bb (one of which may be empty) in such a way that the quantity of nice numbers in multiset aa would be the same as the quantity of nice numbers in multiset bb (the quantity of numbers to appear exactly once in multiset aa and the quantity of numbers to appear exactly once in multiset bb).InputThe first line contains a single integer n\u00a0(2\u2264n\u2264100)n\u00a0(2\u2264n\u2264100).The second line contains nn integers s1,s2,\u2026sn\u00a0(1\u2264si\u2264100)s1,s2,\u2026sn\u00a0(1\u2264si\u2264100) \u2014 the multiset ss.OutputIf there exists no split of ss to satisfy the given requirements, then print \"NO\" in the first line.Otherwise print \"YES\" in the first line.The second line should contain a string, consisting of nn characters. ii-th character should be equal to 'A' if the ii-th element of multiset ss goes to multiset aa and 'B' if if the ii-th element of multiset ss goes to multiset bb. Elements are numbered from 11 to nn in the order they are given in the input.If there exist multiple solutions, then print any of them.ExamplesInputCopy43 5 7 1OutputCopyYESBABAInputCopy33 5 1OutputCopyNO"], "Nikita and string": ["https://codeforces.com/problemset/problem/877/B", "B. Nikita and stringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOne day Nikita found the string containing letters \"a\" and \"b\" only. Nikita thinks that string is beautiful if it can be cut into 3 strings (possibly empty) without changing the order of the letters, where the 1-st and the 3-rd one contain only letters \"a\" and the 2-nd contains only letters \"b\".Nikita wants to make the string beautiful by removing some (possibly none) of its characters, but without changing their order. What is the maximum length of the string he can get?InputThe first line contains a non-empty string of length not greater than 5\u2009000 containing only lowercase English letters \"a\" and \"b\". OutputPrint a single integer\u00a0\u2014 the maximum possible size of beautiful string Nikita can get.ExamplesInputCopyabbaOutputCopy4InputCopybabOutputCopy2NoteIt the first sample the string is already beautiful.In the second sample he needs to delete one of \"b\" to make it beautiful."], "Modulo Equality": ["https://codeforces.com/problemset/problem/1269/B", "B. Modulo Equalitytime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a positive integer mm and two integer sequence: a=[a1,a2,\u2026,an]a=[a1,a2,\u2026,an] and b=[b1,b2,\u2026,bn]b=[b1,b2,\u2026,bn]. Both of these sequence have a length nn.Permutation is a sequence of nn different positive integers from 11 to nn. For example, these sequences are permutations: [1][1], [1,2][1,2], [2,1][2,1], [6,7,3,4,1,2,5][6,7,3,4,1,2,5]. These are not: [0][0], [1,1][1,1], [2,3][2,3].You need to find the non-negative integer xx, and increase all elements of aiai by xx, modulo mm (i.e. you want to change aiai to (ai+x)modm(ai+x)modm), so it would be possible to rearrange elements of aa to make it equal bb, among them you need to find the smallest possible xx.In other words, you need to find the smallest non-negative integer xx, for which it is possible to find some permutation p=[p1,p2,\u2026,pn]p=[p1,p2,\u2026,pn], such that for all 1\u2264i\u2264n1\u2264i\u2264n, (ai+x)modm=bpi(ai+x)modm=bpi, where ymodmymodm\u00a0\u2014 remainder of division of yy by mm.For example, if m=3m=3, a=[0,0,2,1],b=[2,0,1,1]a=[0,0,2,1],b=[2,0,1,1], you can choose x=1x=1, and aa will be equal to [1,1,0,2][1,1,0,2] and you can rearrange it to make it equal [2,0,1,1][2,0,1,1], which is equal to bb.InputThe first line contains two integers n,mn,m (1\u2264n\u22642000,1\u2264m\u22641091\u2264n\u22642000,1\u2264m\u2264109): number of elemens in arrays and mm.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai<m0\u2264ai<m).The third line contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (0\u2264bi<m0\u2264bi<m).It is guaranteed that there exists some non-negative integer xx, such that it would be possible to find some permutation p1,p2,\u2026,pnp1,p2,\u2026,pn such that (ai+x)modm=bpi(ai+x)modm=bpi.OutputPrint one integer, the smallest non-negative integer xx, such that it would be possible to find some permutation p1,p2,\u2026,pnp1,p2,\u2026,pn such that (ai+x)modm=bpi(ai+x)modm=bpi for all 1\u2264i\u2264n1\u2264i\u2264n.ExamplesInputCopy4 3\n0 0 2 1\n2 0 1 1\nOutputCopy1\nInputCopy3 2\n0 0 0\n1 1 1\nOutputCopy1\nInputCopy5 10\n0 0 0 1 2\n2 1 0 0 0\nOutputCopy0\n"], "Arpa\u2019s obvious problem and Mehrdad\u2019s terrible solution": ["https://codeforces.com/problemset/problem/742/B", "B. Arpa\u2019s obvious problem and Mehrdad\u2019s terrible solutiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are some beautiful girls in Arpa\u2019s land as mentioned before.Once Arpa came up with an obvious problem:Given an array and a number x, count the number of pairs of indices i,\u2009j (1\u2009\u2264\u2009i\u2009<\u2009j\u2009\u2264\u2009n) such that , where  is bitwise xor operation (see notes for explanation).  Immediately, Mehrdad discovered a terrible solution that nobody trusted. Now Arpa needs your help to implement the solution to that problem.InputFirst line contains two integers n and x (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009x\u2009\u2264\u2009105)\u00a0\u2014 the number of elements in the array and the integer x.Second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009105)\u00a0\u2014 the elements of the array.OutputPrint a single integer: the answer to the problem.ExamplesInputCopy2 31 2OutputCopy1InputCopy6 15 1 2 3 4 1OutputCopy2NoteIn the first sample there is only one pair of i\u2009=\u20091 and j\u2009=\u20092.  so the answer is 1.In the second sample the only two pairs are i\u2009=\u20093, j\u2009=\u20094 (since ) and i\u2009=\u20091, j\u2009=\u20095 (since ).A bitwise xor takes two bit integers of equal length and performs the logical xor operation on each pair of corresponding bits. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1. You can read more about bitwise xor operation here: https://en.wikipedia.org/wiki/Bitwise_operation#XOR."], "Fault-tolerant Network": ["https://codeforces.com/problemset/problem/1651/C", "C. Fault-tolerant Networktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a classroom with two rows of computers. There are nn computers in each row and each computer has its own grade. Computers in the first row has grades a1,a2,\u2026,ana1,a2,\u2026,an and in the second row\u00a0\u2014 b1,b2,\u2026,bnb1,b2,\u2026,bn.Initially, all pairs of neighboring computers in each row are connected by wire (pairs (i,i+1)(i,i+1) for all 1\u2264i<n1\u2264i<n), so two rows form two independent computer networks.Your task is to combine them in one common network by connecting one or more pairs of computers from different rows. Connecting the ii-th computer from the first row and the jj-th computer from the second row costs |ai\u2212bj||ai\u2212bj|.You can connect one computer to several other computers, but you need to provide at least a basic fault tolerance: you need to connect computers in such a way that the network stays connected, despite one of its computer failing. In other words, if one computer is broken (no matter which one), the network won't split in two or more parts.That is the minimum total cost to make a fault-tolerant network?InputThe first line contains a single integer tt (1\u2264t\u22641041\u2264t\u2264104)\u00a0\u2014 the number of test cases. Next tt cases follow.The first line of each test case contains the single integer nn (3\u2264n\u22642\u22c51053\u2264n\u22642\u22c5105)\u00a0\u2014 the number of computers in each row.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109)\u00a0\u2014 the grades of computers in the first row.The third line contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u22641091\u2264bi\u2264109)\u00a0\u2014 the grades of computers in the second row.It's guaranteed that the total sum of nn doesn't exceed 2\u22c51052\u22c5105.OutputFor each test case, print a single integer\u00a0\u2014 the minimum total cost to make a fault-tolerant network.ExampleInputCopy2\n3\n1 10 1\n20 4 25\n4\n1 1 1 1\n1000000000 1000000000 1000000000 1000000000\nOutputCopy31\n1999999998\nNoteIn the first test case, it's optimal to connect four pairs of computers:   computer 11 from the first row with computer 22 from the second row: cost |1\u22124|=3|1\u22124|=3;  computer 33 from the first row with computer 22 from the second row: cost |1\u22124|=3|1\u22124|=3;  computer 22 from the first row with computer 11 from the second row: cost |10\u221220|=10|10\u221220|=10;  computer 22 from the first row with computer 33 from the second row: cost |10\u221225|=15|10\u221225|=15;  In total, 3+3+10+15=313+3+10+15=31.In the second test case, it's optimal to connect 11 from the first row with 11 from the second row, and 44 from the first row with 44 from the second row."], "Pairs": ["https://codeforces.com/problemset/problem/1169/B", "B. Pairstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputToad Ivan has mm pairs of integers, each integer is between 11 and nn, inclusive. The pairs are (a1,b1),(a2,b2),\u2026,(am,bm)(a1,b1),(a2,b2),\u2026,(am,bm). He asks you to check if there exist two integers xx and yy (1\u2264x<y\u2264n1\u2264x<y\u2264n) such that in each given pair at least one integer is equal to xx or yy.InputThe first line contains two space-separated integers nn and mm (2\u2264n\u22643000002\u2264n\u2264300000, 1\u2264m\u22643000001\u2264m\u2264300000)\u00a0\u2014 the upper bound on the values of integers in the pairs, and the number of given pairs.The next mm lines contain two integers each, the ii-th of them contains two space-separated integers aiai and bibi (1\u2264ai,bi\u2264n,ai\u2260bi1\u2264ai,bi\u2264n,ai\u2260bi)\u00a0\u2014 the integers in the ii-th pair.OutputOutput \"YES\" if there exist two integers xx and yy (1\u2264x<y\u2264n1\u2264x<y\u2264n) such that in each given pair at least one integer is equal to xx or yy. Otherwise, print \"NO\". You can print each letter in any case (upper or lower).ExamplesInputCopy4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\nOutputCopyNO\nInputCopy5 4\n1 2\n2 3\n3 4\n4 5\nOutputCopyYES\nInputCopy300000 5\n1 2\n1 2\n1 2\n1 2\n1 2\nOutputCopyYES\nNoteIn the first example, you can't choose any xx, yy because for each such pair you can find a given pair where both numbers are different from chosen integers.In the second example, you can choose x=2x=2 and y=4y=4.In the third example, you can choose x=1x=1 and y=2y=2."], "Pride": ["https://codeforces.com/problemset/problem/891/A", "A. Pridetime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou have an array a with length n, you can perform operations. Each operation is like this: choose two adjacent elements from a, say x and y, and replace one of them with gcd(x,\u2009y), where gcd denotes the greatest common divisor.What is the minimum number of operations you need to make all of the elements equal to 1?InputThe first line of the input contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092000) \u2014 the number of elements in the array.The second line contains n space separated integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 the elements of the array.OutputPrint -1, if it is impossible to turn all numbers to 1. Otherwise, print the minimum number of operations needed to make all numbers equal to 1.ExamplesInputCopy52 2 3 4 6OutputCopy5InputCopy42 4 6 8OutputCopy-1InputCopy32 6 9OutputCopy4NoteIn the first sample you can turn all numbers to 1 using the following 5 moves:  [2,\u20092,\u20093,\u20094,\u20096].  [2,\u20091,\u20093,\u20094,\u20096]  [2,\u20091,\u20093,\u20091,\u20096]  [2,\u20091,\u20091,\u20091,\u20096]  [1,\u20091,\u20091,\u20091,\u20096]  [1,\u20091,\u20091,\u20091,\u20091] We can prove that in this case it is not possible to make all numbers one using less than 5 moves."], "Restore Modulo": ["https://codeforces.com/problemset/problem/1482/B", "B. Restore Modulotime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputFor the first place at the competition, Alex won many arrays of integers and was assured that these arrays are very expensive. After the award ceremony Alex decided to sell them. There is a rule in arrays pawnshop: you can sell array only if it can be compressed to a generator.This generator takes four non-negative numbers nn, mm, cc, ss. nn and mm must be positive, ss non-negative and for cc it must be true that 0\u2264c<m0\u2264c<m. The array aa of length nn is created according to the following rules:   a1=smodma1=smodm, here xmodyxmody denotes remainder of the division of xx by yy;  ai=(ai\u22121+c)modmai=(ai\u22121+c)modm for all ii such that 1<i\u2264n1<i\u2264n. For example, if n=5n=5, m=7m=7, c=4c=4, and s=10s=10, then a=[3,0,4,1,5]a=[3,0,4,1,5].Price of such an array is the value of mm in this generator.Alex has a question: how much money he can get for each of the arrays. Please, help him to understand for every array whether there exist four numbers nn, mm, cc, ss that generate this array. If yes, then maximize mm.InputThe first line contains a single integer tt (1\u2264t\u22641051\u2264t\u2264105)\u00a0\u2014 the number of arrays.The first line of array description contains a single integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the size of this array.The second line of array description contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u22641090\u2264ai\u2264109 )\u00a0\u2014 elements of the array. It is guaranteed that the sum of array sizes does not exceed 105105.OutputFor every array print:   \u22121\u22121, if there are no such four numbers that generate this array;  00, if mm can be arbitrary large;  the maximum value mm and any appropriate cc (0\u2264c<m0\u2264c<m) in other cases. ExampleInputCopy6\n6\n1 9 17 6 14 3\n3\n4 2 2\n3\n7 3 4\n3\n2 2 4\n5\n0 1000000000 0 1000000000 0\n2\n1 1\nOutputCopy19 8\n-1\n-1\n-1\n2000000000 1000000000\n0\n"], "Good Sequences": ["https://codeforces.com/problemset/problem/264/B", "B. Good Sequencestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputSquirrel Liss is interested in sequences. She also has preferences of integers. She thinks n integers a1,\u2009a2,\u2009...,\u2009an are good.Now she is interested in good sequences. A sequence x1,\u2009x2,\u2009...,\u2009xk is called good if it satisfies the following three conditions:  The sequence is strictly increasing, i.e. xi\u2009<\u2009xi\u2009+\u20091 for each i (1\u2009\u2264\u2009i\u2009\u2264\u2009k\u2009-\u20091).  No two adjacent elements are coprime, i.e. gcd(xi,\u2009xi\u2009+\u20091)\u2009>\u20091 for each i (1\u2009\u2264\u2009i\u2009\u2264\u2009k\u2009-\u20091) (where gcd(p,\u2009q) denotes the greatest common divisor of the integers p and q).  All elements of the sequence are good integers. Find the length of the longest good sequence.InputThe input consists of two lines. The first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of good integers. The second line contains a single-space separated list of good integers a1,\u2009a2,\u2009...,\u2009an in strictly increasing order (1\u2009\u2264\u2009ai\u2009\u2264\u2009105;\u00a0ai\u2009<\u2009ai\u2009+\u20091).OutputPrint a single integer \u2014 the length of the longest good sequence.ExamplesInputCopy52 3 4 6 9OutputCopy4InputCopy91 2 3 5 6 7 8 9 10OutputCopy4NoteIn the first example, the following sequences are examples of good sequences: [2; 4; 6; 9], [2; 4; 6], [3; 9], [6]. The length of the longest good sequence is 4."], "Meaningless Operations": ["https://codeforces.com/problemset/problem/1110/C", "C. Meaningless Operationstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputCan the greatest common divisor and bitwise operations have anything in common? It is time to answer this question.Suppose you are given a positive integer aa. You want to choose some integer bb from 11 to a\u22121a\u22121 inclusive in such a way that the greatest common divisor (GCD) of integers a\u2295ba\u2295b and a&ba&b is as large as possible. In other words, you'd like to compute the following function:f(a)=max0<b<agcd(a\u2295b,a&b).f(a)=max0<b<agcd(a\u2295b,a&b).Here \u2295\u2295 denotes the bitwise XOR operation, and && denotes the bitwise AND operation.The greatest common divisor of two integers xx and yy is the largest integer gg such that both xx and yy are divided by gg without remainder.You are given qq integers a1,a2,\u2026,aqa1,a2,\u2026,aq. For each of these integers compute the largest possible value of the greatest common divisor (when bb is chosen optimally). InputThe first line contains an integer qq (1\u2264q\u22641031\u2264q\u2264103)\u00a0\u2014 the number of integers you need to compute the answer for.After that qq integers are given, one per line: a1,a2,\u2026,aqa1,a2,\u2026,aq (2\u2264ai\u2264225\u221212\u2264ai\u2264225\u22121)\u00a0\u2014 the integers you need to compute the answer for. OutputFor each integer, print the answer in the same order as the integers are given in input.ExampleInputCopy3\n2\n3\n5\nOutputCopy3\n1\n7\nNoteFor the first integer the optimal choice is b=1b=1, then a\u2295b=3a\u2295b=3, a&b=0a&b=0, and the greatest common divisor of 33 and 00 is 33.For the second integer one optimal choice is b=2b=2, then a\u2295b=1a\u2295b=1, a&b=2a&b=2, and the greatest common divisor of 11 and 22 is 11.For the third integer the optimal choice is b=2b=2, then a\u2295b=7a\u2295b=7, a&b=0a&b=0, and the greatest common divisor of 77 and 00 is 77."], "Vus the Cossack and Numbers": ["https://codeforces.com/problemset/problem/1186/D", "D. Vus the Cossack and Numberstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVus the Cossack has nn real numbers aiai. It is known that the sum of all numbers is equal to 00. He wants to choose a sequence bb the size of which is nn such that the sum of all numbers is 00 and each bibi is either \u230aai\u230b\u230aai\u230b or \u2308ai\u2309\u2308ai\u2309. In other words, bibi equals aiai rounded up or down. It is not necessary to round to the nearest integer.For example, if a=[4.58413,1.22491,\u22122.10517,\u22123.70387]a=[4.58413,1.22491,\u22122.10517,\u22123.70387], then bb can be equal, for example, to [4,2,\u22122,\u22124][4,2,\u22122,\u22124]. Note that if aiai is an integer, then there is no difference between \u230aai\u230b\u230aai\u230b and \u2308ai\u2309\u2308ai\u2309, bibi will always be equal to aiai.Help Vus the Cossack find such sequence!InputThe first line contains one integer nn (1\u2264n\u22641051\u2264n\u2264105)\u00a0\u2014 the number of numbers.Each of the next nn lines contains one real number aiai (|ai|<105|ai|<105). It is guaranteed that each aiai has exactly 55 digits after the decimal point. It is guaranteed that the sum of all the numbers is equal to 00.OutputIn each of the next nn lines, print one integer bibi. For each ii, |ai\u2212bi|<1|ai\u2212bi|<1 must be met.If there are multiple answers, print any.ExamplesInputCopy4\n4.58413\n1.22491\n-2.10517\n-3.70387\nOutputCopy4\n2\n-2\n-4\nInputCopy5\n-6.32509\n3.30066\n-0.93878\n2.00000\n1.96321\nOutputCopy-6\n3\n-1\n2\n2\nNoteThe first example is explained in the legend.In the second example, we can round the first and fifth numbers up, and the second and third numbers down. We can round the fourth number neither up, nor down."], "XOR and OR": ["https://codeforces.com/problemset/problem/282/C", "C. XOR and ORtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Bitlandians are quite weird people. They do everything differently. They have a different alphabet so they have a different definition for a string.A Bitlandish string is a string made only of characters \"0\" and \"1\".BitHaval (the mayor of Bitland) loves to play with Bitlandish strings. He takes some Bitlandish string a, and applies several (possibly zero) operations to it. In one operation the mayor may take any two adjacent characters of a string, define one of them as x and the other one as y. Then he calculates two values p and q: p\u2009=\u2009x\u00a0xor\u00a0y, q\u2009=\u2009x\u00a0or\u00a0y. Then he replaces one of the two taken characters by p and the other one by q.The xor operation means the bitwise excluding OR operation. The or operation is the bitwise OR operation.So for example one operation can transform string 11 to string 10 or to string 01. String 1 cannot be transformed into any other string.You've got two Bitlandish strings a and b. Your task is to check if it is possible for BitHaval to transform string a to string b in several (possibly zero) described operations.InputThe first line contains Bitlandish string a, the second line contains Bitlandish string b. The strings can have different lengths.It is guaranteed that the given strings only consist of characters \"0\" and \"1\". The strings are not empty, their length doesn't exceed 106.OutputPrint \"YES\" if a can be transformed into b, otherwise print \"NO\". Please do not print the quotes.ExamplesInputCopy1110OutputCopyYESInputCopy101OutputCopyNOInputCopy000101OutputCopyNO"], "New Year and Domino": ["https://codeforces.com/problemset/problem/611/C", "C. New Year and Dominotime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThey say \"years are like dominoes, tumbling one after the other\". But would a year fit into a grid? I don't think so.Limak is a little polar bear who loves to play. He has recently got a rectangular grid with h rows and w columns. Each cell is a square, either empty (denoted by '.') or forbidden (denoted by '#'). Rows are numbered 1 through h from top to bottom. Columns are numbered 1 through w from left to right.Also, Limak has a single domino. He wants to put it somewhere in a grid. A domino will occupy exactly two adjacent cells, located either in one row or in one column. Both adjacent cells must be empty and must be inside a grid.Limak needs more fun and thus he is going to consider some queries. In each query he chooses some rectangle and wonders, how many way are there to put a single domino inside of the chosen rectangle?InputThe first line of the input contains two integers h and w (1\u2009\u2264\u2009h,\u2009w\u2009\u2264\u2009500)\u00a0\u2013 the number of rows and the number of columns, respectively.The next h lines describe a grid. Each line contains a string of the length w. Each character is either '.' or '#'\u00a0\u2014 denoting an empty or forbidden cell, respectively.The next line contains a single integer q (1\u2009\u2264\u2009q\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of queries.Each of the next q lines contains four integers r1i, c1i, r2i, c2i (1\u2009\u2264\u2009r1i\u2009\u2264\u2009r2i\u2009\u2264\u2009h,\u20091\u2009\u2264\u2009c1i\u2009\u2264\u2009c2i\u2009\u2264\u2009w)\u00a0\u2014 the i-th query. Numbers r1i and c1i denote the row and the column (respectively) of the upper left cell of the rectangle. Numbers r2i and c2i denote the row and the column (respectively) of the bottom right cell of the rectangle.OutputPrint q integers, i-th should be equal to the number of ways to put a single domino inside the i-th rectangle.ExamplesInputCopy5 8....#..#.#......##.#....##..#.##........41 1 2 34 1 4 11 2 4 52 5 5 8OutputCopy401015InputCopy7 39........................................###..###..#..###.....###..###..#..###....#..#.#..#..#.........#..#.#..#..#....###..#.#..#..###.....###..#.#..#..###..#....#.#..#....#.....#....#.#..#..#.#..###..###..#..###.....###..###..#..###........................................61 1 3 202 10 6 302 10 7 302 2 7 71 7 7 71 8 7 8OutputCopy53891202302NoteA red frame below corresponds to the first query of the first sample. A domino can be placed in 4 possible ways.  "], "A Tale of Two Lands": ["https://codeforces.com/problemset/problem/1166/C", "C. A Tale of Two Landstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe legend of the foundation of Vectorland talks of two integers xx and yy. Centuries ago, the array king placed two markers at points |x||x| and |y||y| on the number line and conquered all the land in between (including the endpoints), which he declared to be Arrayland. Many years later, the vector king placed markers at points |x\u2212y||x\u2212y| and |x+y||x+y| and conquered all the land in between (including the endpoints), which he declared to be Vectorland. He did so in such a way that the land of Arrayland was completely inside (including the endpoints) the land of Vectorland.Here |z||z| denotes the absolute value of zz.Now, Jose is stuck on a question of his history exam: \"What are the values of xx and yy?\" Jose doesn't know the answer, but he believes he has narrowed the possible answers down to nn integers a1,a2,\u2026,ana1,a2,\u2026,an. Now, he wants to know the number of unordered pairs formed by two different elements from these nn integers such that the legend could be true if xx and yy were equal to these two values. Note that it is possible that Jose is wrong, and that no pairs could possibly make the legend true.InputThe first line contains a single integer nn (2\u2264n\u22642\u22c51052\u2264n\u22642\u22c5105) \u00a0\u2014 the number of choices.The second line contains nn pairwise distinct integers a1,a2,\u2026,ana1,a2,\u2026,an (\u2212109\u2264ai\u2264109\u2212109\u2264ai\u2264109)\u00a0\u2014 the choices Jose is considering.OutputPrint a single integer number\u00a0\u2014 the number of unordered pairs {x,y}{x,y} formed by different numbers from Jose's choices that could make the legend true.ExamplesInputCopy3\n2 5 -3\nOutputCopy2\nInputCopy2\n3 6\nOutputCopy1\nNoteConsider the first sample. For the pair {2,5}{2,5}, the situation looks as follows, with the Arrayland markers at |2|=2|2|=2 and |5|=5|5|=5, while the Vectorland markers are located at |2\u22125|=3|2\u22125|=3 and |2+5|=7|2+5|=7:  The legend is not true in this case, because the interval [2,3][2,3] is not conquered by Vectorland. For the pair {5,\u22123}{5,\u22123} the situation looks as follows, with Arrayland consisting of the interval [3,5][3,5] and Vectorland consisting of the interval [2,8][2,8]:  As Vectorland completely contains Arrayland, the legend is true. It can also be shown that the legend is true for the pair {2,\u22123}{2,\u22123}, for a total of two pairs.In the second sample, the only pair is {3,6}{3,6}, and the situation looks as follows:  Note that even though Arrayland and Vectorland share 33 as endpoint, we still consider Arrayland to be completely inside of Vectorland."], "Discrete Acceleration": ["https://codeforces.com/problemset/problem/1408/C", "C. Discrete Accelerationtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere is a road with length ll meters. The start of the road has coordinate 00, the end of the road has coordinate ll.There are two cars, the first standing at the start of the road and the second standing at the end of the road. They will start driving simultaneously. The first car will drive from the start to the end and the second car will drive from the end to the start.Initially, they will drive with a speed of 11 meter per second. There are nn flags at different coordinates a1,a2,\u2026,ana1,a2,\u2026,an. Each time when any of two cars drives through a flag, the speed of that car increases by 11 meter per second.Find how long will it take for cars to meet (to reach the same coordinate). InputThe first line contains one integer tt (1\u2264t\u22641041\u2264t\u2264104): the number of test cases.The first line of each test case contains two integers nn, ll (1\u2264n\u22641051\u2264n\u2264105, 1\u2264l\u22641091\u2264l\u2264109): the number of flags and the length of the road.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an in the increasing order (1\u2264a1<a2<\u2026<an<l1\u2264a1<a2<\u2026<an<l).It is guaranteed that the sum of nn among all test cases does not exceed 105105.OutputFor each test case print a single real number: the time required for cars to meet.Your answer will be considered correct, if its absolute or relative error does not exceed 10\u2212610\u22126. More formally, if your answer is aa and jury's answer is bb, your answer will be considered correct if |a\u2212b|max(1,b)\u226410\u22126|a\u2212b|max(1,b)\u226410\u22126.ExampleInputCopy5\n2 10\n1 9\n1 10\n1\n5 7\n1 2 3 4 6\n2 1000000000\n413470354 982876160\n9 478\n1 10 25 33 239 445 453 468 477\nOutputCopy3.000000000000000\n3.666666666666667\n2.047619047619048\n329737645.750000000000000\n53.700000000000000\nNoteIn the first test case cars will meet in the coordinate 55.The first car will be in the coordinate 11 in 11 second and after that its speed will increase by 11 and will be equal to 22 meters per second. After 22 more seconds it will be in the coordinate 55. So, it will be in the coordinate 55 in 33 seconds.The second car will be in the coordinate 99 in 11 second and after that its speed will increase by 11 and will be equal to 22 meters per second. After 22 more seconds it will be in the coordinate 55. So, it will be in the coordinate 55 in 33 seconds.In the second test case after 11 second the first car will be in the coordinate 11 and will have the speed equal to 22 meters per second, the second car will be in the coordinate 99 and will have the speed equal to 11 meter per second. So, they will meet after 9\u221212+1=839\u221212+1=83 seconds. So, the answer is equal to 1+83=1131+83=113."], "Count Subrectangles": ["https://codeforces.com/problemset/problem/1323/B", "B. Count Subrectanglestime limit per test1 secondmemory limit per test512 megabytesinputstandard inputoutputstandard outputYou are given an array aa of length nn and array bb of length mm both consisting of only integers 00 and 11. Consider a matrix cc of size n\u00d7mn\u00d7m formed by following rule: ci,j=ai\u22c5bjci,j=ai\u22c5bj (i.e. aiai multiplied by bjbj). It's easy to see that cc consists of only zeroes and ones too.How many subrectangles of size (area) kk consisting only of ones are there in cc?A subrectangle is an intersection of a consecutive (subsequent) segment of rows and a consecutive (subsequent) segment of columns. I.e. consider four integers x1,x2,y1,y2x1,x2,y1,y2 (1\u2264x1\u2264x2\u2264n1\u2264x1\u2264x2\u2264n, 1\u2264y1\u2264y2\u2264m1\u2264y1\u2264y2\u2264m) a subrectangle c[x1\u2026x2][y1\u2026y2]c[x1\u2026x2][y1\u2026y2] is an intersection of the rows x1,x1+1,x1+2,\u2026,x2x1,x1+1,x1+2,\u2026,x2 and the columns y1,y1+1,y1+2,\u2026,y2y1,y1+1,y1+2,\u2026,y2.The size (area) of a subrectangle is the total number of cells in it.InputThe first line contains three integers nn, mm and kk (1\u2264n,m\u226440000,1\u2264k\u2264n\u22c5m1\u2264n,m\u226440000,1\u2264k\u2264n\u22c5m), length of array aa, length of array bb and required size of subrectangles.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u226410\u2264ai\u22641), elements of aa.The third line contains mm integers b1,b2,\u2026,bmb1,b2,\u2026,bm (0\u2264bi\u226410\u2264bi\u22641), elements of bb.OutputOutput single integer\u00a0\u2014 the number of subrectangles of cc with size (area) kk consisting only of ones.ExamplesInputCopy3 3 2\n1 0 1\n1 1 1\nOutputCopy4\nInputCopy3 5 4\n1 1 1\n1 1 1 1 1\nOutputCopy14\nNoteIn first example matrix cc is:  There are 44 subrectangles of size 22 consisting of only ones in it:  In second example matrix cc is:  "], "The Child and Set": ["https://codeforces.com/problemset/problem/437/B", "B. The Child and Settime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAt the children's day, the child came to Picks's house, and messed his house up. Picks was angry at him. A lot of important things were lost, in particular the favorite set of Picks.Fortunately, Picks remembers something about his set S:  its elements were distinct integers from 1 to limit;  the value of  was equal to sum; here lowbit(x) equals 2k where k is the position of the first one in the binary representation of x. For example, lowbit(100102)\u2009=\u2009102,\u2009lowbit(100012)\u2009=\u200912,\u2009lowbit(100002)\u2009=\u2009100002 (binary representation). Can you help Picks and find any set S, that satisfies all the above conditions?InputThe first line contains two integers: sum,\u2009limit (1\u2009\u2264\u2009sum,\u2009limit\u2009\u2264\u2009105).OutputIn the first line print an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105), denoting the size of S. Then print the elements of set S in any order. If there are multiple answers, print any of them.If it's impossible to find a suitable set, print -1.ExamplesInputCopy5 5OutputCopy24 5InputCopy4 3OutputCopy32 3 1InputCopy5 1OutputCopy-1NoteIn sample test 1: lowbit(4)\u2009=\u20094,\u2009lowbit(5)\u2009=\u20091,\u20094\u2009+\u20091\u2009=\u20095.In sample test 2: lowbit(1)\u2009=\u20091,\u2009lowbit(2)\u2009=\u20092,\u2009lowbit(3)\u2009=\u20091,\u20091\u2009+\u20092\u2009+\u20091\u2009=\u20094."], "Divan and bitwise operations": ["https://codeforces.com/problemset/problem/1614/C", "C. Divan and bitwise operationstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce Divan analyzed a sequence a1,a2,\u2026,ana1,a2,\u2026,an consisting of nn non-negative integers as follows. He considered each non-empty subsequence of the sequence aa, computed the bitwise XOR of its elements and added up all the XORs, obtaining the coziness of the sequence aa.A sequence cc is a subsequence of a sequence dd if cc can be obtained from dd by deletion of several (possibly, zero or all) elements. For example, [1,2,3,4][1,2,3,4], [2,4][2,4], and [2][2] are subsequences of [1,2,3,4][1,2,3,4], but [4,3][4,3] and [0][0] are not.Divan was very proud of his analysis, but now he lost the sequence aa, and also the coziness value! However, Divan remembers the value of bitwise OR on mm contiguous subsegments of the sequence aa. It turns out that each element of the original sequence is contained in at least one of these mm segments.Divan asks you to help find the coziness of the sequence aa using the information he remembers. If several coziness values are possible, print any.As the result can be very large, print the value modulo 109+7109+7.InputThe first line contains one integer number tt (1\u2264t\u22641031\u2264t\u2264103) \u2014 the number of test cases.The first line of each test case contains two integer numbers nn and mm (1\u2264n,m\u22642\u22c51051\u2264n,m\u22642\u22c5105) \u2014 the length of the sequence and the number of contiguous segments whose bitwise OR values Divan remembers, respectively.The following mm lines describe the segments, one per line.Each segment is described with three integers ll, rr, and xx (1\u2264l\u2264r\u2264n1\u2264l\u2264r\u2264n, 0\u2264x\u2264230\u221210\u2264x\u2264230\u22121) \u2014 the first and last elements of the segment and the bitwise OR of al,al+1,\u2026,aral,al+1,\u2026,ar, respectively.It is guaranteed that each element of the sequence is contained in at least one of the segments. It is guaranteed that there exists a sequence that satisfies all constraints.It is guaranteed that the sum of nn and the sum of mm over all test cases do not exceed 2\u22c51052\u22c5105. OutputFor each test case print the coziness any suitable sequence aa modulo 109+7109+7.ExampleInputCopy3\n2 1\n1 2 2\n3 2\n1 3 5\n2 3 5\n5 4\n1 2 7\n3 3 7\n4 4 0\n4 5 2\nOutputCopy4\n20\n112\nNoteIn first example, one of the sequences that fits the constraints is [0,2][0,2]. Consider all its non-empty subsequences:  [0][0]: the bitwise XOR of this subsequence is 00;  [2][2]: the bitwise XOR of this subsequence is 22;  [0,2][0,2]: the bitwise XOR of this subsequence is 22. The sum of all results is 44, so it is the answer.In second example, one of the sequences that fits the constraints is [0,5,5][0,5,5].In third example, one of the sequences that fits the constraints is [5,6,7,0,2][5,6,7,0,2]."], "Fly": ["https://codeforces.com/problemset/problem/1010/A", "A. Flytime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputNatasha is going to fly on a rocket to Mars and return to Earth. Also, on the way to Mars, she will land on n\u22122n\u22122 intermediate planets. Formally: we number all the planets from 11 to nn. 11 is Earth, nn is Mars. Natasha will make exactly nn flights: 1\u21922\u2192\u2026n\u219211\u21922\u2192\u2026n\u21921.Flight from xx to yy consists of two phases: take-off from planet xx and landing to planet yy. This way, the overall itinerary of the trip will be: the 11-st planet \u2192\u2192 take-off from the 11-st planet \u2192\u2192 landing to the 22-nd planet \u2192\u2192 22-nd planet \u2192\u2192 take-off from the 22-nd planet \u2192\u2192 \u2026\u2026 \u2192\u2192 landing to the nn-th planet \u2192\u2192 the nn-th planet \u2192\u2192 take-off from the nn-th planet \u2192\u2192 landing to the 11-st planet \u2192\u2192 the 11-st planet.The mass of the rocket together with all the useful cargo (but without fuel) is mm tons. However, Natasha does not know how much fuel to load into the rocket. Unfortunately, fuel can only be loaded on Earth, so if the rocket runs out of fuel on some other planet, Natasha will not be able to return home. Fuel is needed to take-off from each planet and to land to each planet. It is known that 11 ton of fuel can lift off aiai tons of rocket from the ii-th planet or to land bibi tons of rocket onto the ii-th planet. For example, if the weight of rocket is 99 tons, weight of fuel is 33 tons and take-off coefficient is 88 (ai=8ai=8), then 1.51.5 tons of fuel will be burnt (since 1.5\u22c58=9+31.5\u22c58=9+3). The new weight of fuel after take-off will be 1.51.5 tons. Please note, that it is allowed to burn non-integral amount of fuel during take-off or landing, and the amount of initial fuel can be non-integral as well.Help Natasha to calculate the minimum mass of fuel to load into the rocket. Note, that the rocket must spend fuel to carry both useful cargo and the fuel itself. However, it doesn't need to carry the fuel which has already been burnt. Assume, that the rocket takes off and lands instantly.InputThe first line contains a single integer nn (2\u2264n\u226410002\u2264n\u22641000)\u00a0\u2014 number of planets.The second line contains the only integer mm (1\u2264m\u226410001\u2264m\u22641000)\u00a0\u2014 weight of the payload.The third line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u226410001\u2264ai\u22641000), where aiai is the number of tons, which can be lifted off by one ton of fuel.The fourth line contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u226410001\u2264bi\u22641000), where bibi is the number of tons, which can be landed by one ton of fuel. It is guaranteed, that if Natasha can make a flight, then it takes no more than 109109 tons of fuel.OutputIf Natasha can fly to Mars through (n\u22122)(n\u22122) planets and return to Earth, print the minimum mass of fuel (in tons) that Natasha should take. Otherwise, print a single number \u22121\u22121.It is guaranteed, that if Natasha can make a flight, then it takes no more than 109109 tons of fuel.The answer will be considered correct if its absolute or relative error doesn't exceed 10\u2212610\u22126. Formally, let your answer be pp, and the jury's answer be qq. Your answer is considered correct if |p\u2212q|max(1,|q|)\u226410\u22126|p\u2212q|max(1,|q|)\u226410\u22126.ExamplesInputCopy21211 87 5OutputCopy10.0000000000InputCopy311 4 12 5 3OutputCopy-1InputCopy624 6 3 3 5 62 6 3 6 5 3OutputCopy85.4800000000NoteLet's consider the first example.Initially, the mass of a rocket with fuel is 2222 tons. At take-off from Earth one ton of fuel can lift off 1111 tons of cargo, so to lift off 2222 tons you need to burn 22 tons of fuel. Remaining weight of the rocket with fuel is 2020 tons. During landing on Mars, one ton of fuel can land 55 tons of cargo, so for landing 2020 tons you will need to burn 44 tons of fuel. There will be 1616 tons of the rocket with fuel remaining. While taking off from Mars, one ton of fuel can raise 88 tons of cargo, so to lift off 1616 tons you will need to burn 22 tons of fuel. There will be 1414 tons of rocket with fuel after that. During landing on Earth, one ton of fuel can land 77 tons of cargo, so for landing 1414 tons you will need to burn 22 tons of fuel. Remaining weight is 1212 tons, that is, a rocket without any fuel.In the second case, the rocket will not be able even to take off from Earth."], "Convert to Ones": ["https://codeforces.com/problemset/problem/997/A", "A. Convert to Onestime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou've got a string a1,a2,\u2026,ana1,a2,\u2026,an, consisting of zeros and ones.Let's call a sequence of consecutive elements ai,ai\u2009+\u20091,\u2026,\u2009ajai,ai\u2009+\u20091,\u2026,\u2009aj (1\u2264\u2009i\u2264\u2009j\u2264\u2009n1\u2264\u2009i\u2264\u2009j\u2264\u2009n) a substring of string aa. You can apply the following operations any number of times:  Choose some substring of string aa (for example, you can choose entire string) and reverse it, paying xx coins for it (for example, \u00ab0101101\u00bb \u2192\u2192 \u00ab0111001\u00bb);  Choose some substring of string aa (for example, you can choose entire string or just one symbol) and replace each symbol to the opposite one (zeros are replaced by ones, and ones\u00a0\u2014 by zeros), paying yy coins for it (for example, \u00ab0101101\u00bb \u2192\u2192 \u00ab0110001\u00bb). You can apply these operations in any order. It is allowed to apply the operations multiple times to the same substring.What is the minimum number of coins you need to spend to get a string consisting only of ones?InputThe first line of input contains integers nn, xx and yy (1\u2009\u2264\u2009n\u2009\u2264\u2009300000,0\u2264x,y\u22641091\u2009\u2264\u2009n\u2009\u2264\u2009300000,0\u2264x,y\u2264109)\u00a0\u2014 length of the string, cost of the first operation (substring reverse) and cost of the second operation (inverting all elements of substring).The second line contains the string aa of length nn, consisting of zeros and ones.OutputPrint a single integer\u00a0\u2014 the minimum total cost of operations you need to spend to get a string consisting only of ones. Print 00, if you do not need to perform any operations.ExamplesInputCopy5 1 1001000OutputCopy11InputCopy5 10 101000OutputCopy2InputCopy7 2 31111111OutputCopy0NoteIn the first sample, at first you need to reverse substring [1\u20262][1\u20262], and then you need to invert substring [2\u20265][2\u20265]. Then the string was changed as follows:\u00ab01000\u00bb \u2192\u2192 \u00ab10000\u00bb \u2192\u2192 \u00ab11111\u00bb.The total cost of operations is 1+10=111+10=11.In the second sample, at first you need to invert substring [1\u20261][1\u20261], and then you need to invert substring [3\u20265][3\u20265]. Then the string was changed as follows:\u00ab01000\u00bb \u2192\u2192 \u00ab11000\u00bb \u2192\u2192 \u00ab11111\u00bb.The overall cost is 1+1=21+1=2.In the third example, string already consists only of ones, so the answer is 00."], "Kyoya and Colored Balls": ["https://codeforces.com/problemset/problem/553/A", "A. Kyoya and Colored Ballstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputKyoya Ootori has a bag with n colored balls that are colored with k different colors. The colors are labeled from 1 to k. Balls of the same color are indistinguishable. He draws balls from the bag one by one until the bag is empty. He noticed that he drew the last ball of color i before drawing the last ball of color i\u2009+\u20091 for all i from 1 to k\u2009-\u20091. Now he wonders how many different ways this can happen. InputThe first line of input will have one integer k (1\u2009\u2264\u2009k\u2009\u2264\u20091000) the number of colors.Then, k lines will follow. The i-th line will contain ci, the number of balls of the i-th color (1\u2009\u2264\u2009ci\u2009\u2264\u20091000).The total number of balls doesn't exceed 1000.OutputA single integer, the number of ways that Kyoya can draw the balls from the bag as described in the statement, modulo 1\u2009000\u2009000\u2009007. ExamplesInputCopy3221OutputCopy3InputCopy41234OutputCopy1680NoteIn the first sample, we have 2 balls of color 1, 2 balls of color 2, and 1 ball of color 3. The three ways for Kyoya are: 1 2 1 2 31 1 2 2 32 1 1 2 3"], "Colored Boots": ["https://codeforces.com/problemset/problem/1141/D", "D. Colored Bootstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn left boots and nn right boots. Each boot has a color which is denoted as a lowercase Latin letter or a question mark ('?'). Thus, you are given two strings ll and rr, both of length nn. The character lili stands for the color of the ii-th left boot and the character riri stands for the color of the ii-th right boot.A lowercase Latin letter denotes a specific color, but the question mark ('?') denotes an indefinite color. Two specific colors are compatible if they are exactly the same. An indefinite color is compatible with any (specific or indefinite) color.For example, the following pairs of colors are compatible: ('f', 'f'), ('?', 'z'), ('a', '?') and ('?', '?'). The following pairs of colors are not compatible: ('f', 'g') and ('a', 'z').Compute the maximum number of pairs of boots such that there is one left and one right boot in a pair and their colors are compatible.Print the maximum number of such pairs and the pairs themselves. A boot can be part of at most one pair.InputThe first line contains nn (1\u2264n\u22641500001\u2264n\u2264150000), denoting the number of boots for each leg (i.e. the number of left boots and the number of right boots).The second line contains the string ll of length nn. It contains only lowercase Latin letters or question marks. The ii-th character stands for the color of the ii-th left boot.The third line contains the string rr of length nn. It contains only lowercase Latin letters or question marks. The ii-th character stands for the color of the ii-th right boot.OutputPrint kk \u2014 the maximum number of compatible left-right pairs of boots, i.e. pairs consisting of one left and one right boot which have compatible colors.The following kk lines should contain pairs aj,bjaj,bj (1\u2264aj,bj\u2264n1\u2264aj,bj\u2264n). The jj-th of these lines should contain the index ajaj of the left boot in the jj-th pair and index bjbj of the right boot in the jj-th pair. All the numbers ajaj should be distinct (unique), all the numbers bjbj should be distinct (unique).If there are many optimal answers, print any of them.ExamplesInputCopy10\ncodeforces\ndodivthree\nOutputCopy5\n7 8\n4 9\n2 2\n9 10\n3 1\nInputCopy7\nabaca?b\nzabbbcc\nOutputCopy5\n6 5\n2 3\n4 6\n7 4\n1 2\nInputCopy9\nbambarbia\nhellocode\nOutputCopy0\nInputCopy10\ncode??????\n??????test\nOutputCopy10\n6 2\n1 6\n7 3\n3 5\n4 8\n9 7\n5 1\n2 4\n10 9\n8 10\n"], "Cellular Network": ["https://codeforces.com/problemset/problem/702/C", "C. Cellular Networktime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given n points on the straight line \u2014 the positions (x-coordinates) of the cities and m points on the same line \u2014 the positions (x-coordinates) of the cellular towers. All towers work in the same way \u2014 they provide cellular network for all cities, which are located at the distance which is no more than r from this tower.Your task is to find minimal r that each city has been provided by cellular network, i.e. for each city there is at least one cellular tower at the distance which is no more than r.If r\u2009=\u20090 then a tower provides cellular network only for the point where it is located. One tower can provide cellular network for any number of cities, but all these cities must be at the distance which is no more than r from this tower.InputThe first line contains two positive integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the number of cities and the number of cellular towers.The second line contains a sequence of n integers a1,\u2009a2,\u2009...,\u2009an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the coordinates of cities. It is allowed that there are any number of cities in the same point. All coordinates ai are given in non-decreasing order.The third line contains a sequence of m integers b1,\u2009b2,\u2009...,\u2009bm (\u2009-\u2009109\u2009\u2264\u2009bj\u2009\u2264\u2009109) \u2014 the coordinates of cellular towers. It is allowed that there are any number of towers in the same point. All coordinates bj are given in non-decreasing order.OutputPrint minimal r so that each city will be covered by cellular network.ExamplesInputCopy3 2-2 2 4-3 0OutputCopy4InputCopy5 31 5 10 14 174 11 15OutputCopy3"], "Polycarp's New Job": ["https://codeforces.com/problemset/problem/1101/E", "E. Polycarp's New Jobtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has recently got himself a new job. He now earns so much that his old wallet can't even store all the money he has.Berland bills somehow come in lots of different sizes. However, all of them are shaped as rectangles (possibly squares). All wallets are also produced in form of rectangles (possibly squares).A bill x\u00d7yx\u00d7y fits into some wallet h\u00d7wh\u00d7w if either x\u2264hx\u2264h and y\u2264wy\u2264w or y\u2264hy\u2264h and x\u2264wx\u2264w. Bills can overlap with each other in a wallet and an infinite amount of bills can fit into a wallet. That implies that all the bills Polycarp currently have fit into a wallet if every single one of them fits into it independently of the others.Now you are asked to perform the queries of two types:  +\u00a0x\u00a0y+\u00a0x\u00a0y \u2014 Polycarp earns a bill of size x\u00d7yx\u00d7y;  ?\u00a0h\u00a0w?\u00a0h\u00a0w \u2014 Polycarp wants to check if all the bills he has earned to this moment fit into a wallet of size h\u00d7wh\u00d7w. It is guaranteed that there is at least one query of type 11 before the first query of type 22 and that there is at least one query of type 22 in the input data.For each query of type 22 print \"YES\" if all the bills he has earned to this moment fit into a wallet of given size. Print \"NO\" otherwise.InputThe first line contains a single integer nn (2\u2264n\u22645\u22c51052\u2264n\u22645\u22c5105) \u2014 the number of queries.Each of the next nn lines contains a query of one of these two types:  +\u00a0x\u00a0y+\u00a0x\u00a0y (1\u2264x,y\u22641091\u2264x,y\u2264109) \u2014 Polycarp earns a bill of size x\u00d7yx\u00d7y;  ?\u00a0h\u00a0w?\u00a0h\u00a0w (1\u2264h,w\u22641091\u2264h,w\u2264109) \u2014 Polycarp wants to check if all the bills he has earned to this moment fit into a wallet of size h\u00d7wh\u00d7w. It is guaranteed that there is at least one query of type 11 before the first query of type 22 and that there is at least one query of type 22 in the input data.OutputFor each query of type 22 print \"YES\" if all the bills he has earned to this moment fit into a wallet of given size. Print \"NO\" otherwise.ExampleInputCopy9\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\nOutputCopyNO\nYES\nYES\nYES\nNO\nNoteThe queries of type 22 of the example:  Neither bill fits;  Both bills fit (just checking that you got that bills can overlap);  Both bills fit (both bills are actually the same);  All bills fit (too much of free space in a wallet is not a problem);  Only bill 1\u00d751\u00d75 fit (all the others don't, thus it's \"NO\"). "], "Submarine in the Rybinsk Sea (easy edition)": ["https://codeforces.com/problemset/problem/1195/D1", "D1. Submarine in the Rybinsk Sea (easy edition)time limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThis problem differs from the next one only in the presence of the constraint on the equal length of all numbers a1,a2,\u2026,ana1,a2,\u2026,an. Actually, this problem is a subtask of the problem D2 from the same contest and the solution of D2 solves this subtask too.A team of SIS students is going to make a trip on a submarine. Their target is an ancient treasure in a sunken ship lying on the bottom of the Great Rybinsk sea. Unfortunately, the students don't know the coordinates of the ship, so they asked Meshanya (who is a hereditary mage) to help them. He agreed to help them, but only if they solve his problem.Let's denote a function that alternates digits of two numbers f(a1a2\u2026ap\u22121ap,b1b2\u2026bq\u22121bq)f(a1a2\u2026ap\u22121ap,b1b2\u2026bq\u22121bq), where a1\u2026apa1\u2026ap and b1\u2026bqb1\u2026bq are digits of two integers written in the decimal notation without leading zeros.In other words, the function f(x,y)f(x,y) alternately shuffles the digits of the numbers xx and yy by writing them from the lowest digits to the older ones, starting with the number yy. The result of the function is also built from right to left (that is, from the lower digits to the older ones). If the digits of one of the arguments have ended, then the remaining digits of the other argument are written out. Familiarize with examples and formal definitions of the function below.For example: f(1111,2222)=12121212f(1111,2222)=12121212 f(7777,888)=7787878f(7777,888)=7787878 f(33,44444)=4443434f(33,44444)=4443434 f(555,6)=5556f(555,6)=5556 f(111,2222)=2121212f(111,2222)=2121212Formally,  if p\u2265qp\u2265q then f(a1\u2026ap,b1\u2026bq)=a1a2\u2026ap\u2212q+1b1ap\u2212q+2b2\u2026ap\u22121bq\u22121apbqf(a1\u2026ap,b1\u2026bq)=a1a2\u2026ap\u2212q+1b1ap\u2212q+2b2\u2026ap\u22121bq\u22121apbq;  if p<qp<q then f(a1\u2026ap,b1\u2026bq)=b1b2\u2026bq\u2212pa1bq\u2212p+1a2\u2026ap\u22121bq\u22121apbqf(a1\u2026ap,b1\u2026bq)=b1b2\u2026bq\u2212pa1bq\u2212p+1a2\u2026ap\u22121bq\u22121apbq. Mishanya gives you an array consisting of nn integers aiai. All numbers in this array are of equal length (that is, they consist of the same number of digits). Your task is to help students to calculate \u2211ni=1\u2211nj=1f(ai,aj)\u2211i=1n\u2211j=1nf(ai,aj) modulo 998244353998244353.InputThe first line of the input contains a single integer nn (1\u2264n\u22641000001\u2264n\u2264100000) \u2014 the number of elements in the array. The second line of the input contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (1\u2264ai\u22641091\u2264ai\u2264109) \u2014 the elements of the array. All numbers a1,a2,\u2026,ana1,a2,\u2026,an are of equal length (that is, they consist of the same number of digits).OutputPrint the answer modulo 998244353998244353.ExamplesInputCopy3\n12 33 45\nOutputCopy26730InputCopy2\n123 456\nOutputCopy1115598InputCopy1\n1\nOutputCopy11InputCopy5\n1000000000 1000000000 1000000000 1000000000 1000000000\nOutputCopy265359409"], "Weights Assignment For Tree Edges": ["https://codeforces.com/problemset/problem/1611/D", "D. Weights Assignment For Tree Edgestime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a rooted tree consisting of nn vertices. Vertices are numbered from 11 to nn. Any vertex can be the root of a tree.A tree is a connected undirected graph without cycles. A rooted tree is a tree with a selected vertex, which is called the root.The tree is specified by an array of ancestors bb containing nn numbers: bibi is an ancestor of the vertex with the number ii. The ancestor of a vertex uu is a vertex that is the next vertex on a simple path from uu to the root. For example, on the simple path from 55 to 33 (the root), the next vertex would be 11, so the ancestor of 55 is 11.The root has no ancestor, so for it, the value of bibi is ii (the root is the only vertex for which bi=ibi=i).For example, if n=5n=5 and b=[3,1,3,3,1]b=[3,1,3,3,1], then the tree looks like this.  An example of a rooted tree for n=5n=5, the root of the tree is a vertex number 33. You are given an array pp\u00a0\u2014 a permutation of the vertices of the tree. If it is possible, assign any positive integer weights on the edges, so that the vertices sorted by distance from the root would form the given permutation pp.In other words, for a given permutation of vertices pp, it is necessary to choose such edge weights so that the condition dist[pi]<dist[pi+1]dist[pi]<dist[pi+1] is true for each ii from 11 to n\u22121n\u22121. dist[u]dist[u] is a sum of the weights of the edges on the path from the root to uu. In particular, dist[u]=0dist[u]=0 if the vertex uu is the root of the tree.For example, assume that p=[3,1,2,5,4]p=[3,1,2,5,4]. In this case, the following edge weights satisfy this permutation:  the edge (3,43,4) has a weight of 102102;  the edge (3,13,1) has weight of 11;  the edge (1,21,2) has a weight of 1010;  the edge (1,51,5) has a weight of 100100. The array of distances from the root looks like: dist=[1,11,0,102,101]dist=[1,11,0,102,101]. The vertices sorted by increasing the distance from the root form the given permutation pp.Print the required edge weights or determine that there is no suitable way to assign weights. If there are several solutions, then print any of them.InputThe first line of input data contains an integer tt (1\u2264t\u22641041\u2264t\u2264104) \u2014 the number of input data sets in the test.Each test case consists of three lines.The first of them contains an integer nn (1\u2264n\u22642\u22c51051\u2264n\u22642\u22c5105). It is the number of vertices in the tree.The second line contains nn integers b1,b2,\u2026,bnb1,b2,\u2026,bn (1\u2264bi\u2264n1\u2264bi\u2264n). It is guaranteed that the bb array encodes some rooted tree.The third line contains the given permutation pp: nn of different integers p1,p2,\u2026,pnp1,p2,\u2026,pn (1\u2264pi\u2264n1\u2264pi\u2264n).It is guaranteed that the sum of the values nn over all test cases in the test does not exceed 2\u22c51052\u22c5105.OutputFor each set of input data print the answer on a separate line.If the solution exists, print an array of nn integers w1,w2,\u2026,wnw1,w2,\u2026,wn, where wiwi is the weight of the edge that leads from bibi to ii. For the root there is no such edge, so use the value wi=0wi=0. For all other vertices, the values of wiwi must satisfy the inequality 1\u2264wi\u22641091\u2264wi\u2264109. There can be equal numbers among wiwi values, but all sums of weights of edges from the root to vertices must be different and satisfy the given permutation.If there are several solutions, output any of them.If no solution exists, output -1.ExampleInputCopy4\n5\n3 1 3 3 1\n3 1 2 5 4\n3\n1 1 2\n3 1 2\n7\n1 1 2 3 4 5 6\n1 2 3 4 5 6 7\n6\n4 4 4 4 1 1\n4 2 1 5 6 3\nOutputCopy1 10 0 102 100\n-1\n0 3 100 1 1 2 4\n6 5 10 0 2 3NoteThe first set of input data of the example is analyzed in the main part of the statement.In the second set of input data of the example, it is impossible to assign the positive weights to obtain a given permutation of vertices."], "Marvolo Gaunt's Ring": ["https://codeforces.com/problemset/problem/855/B", "B. Marvolo Gaunt's Ringtime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputProfessor Dumbledore is helping Harry destroy the Horcruxes. He went to Gaunt Shack as he suspected a Horcrux to be present there. He saw Marvolo Gaunt's Ring and identified it as a Horcrux. Although he destroyed it, he is still affected by its curse. Professor Snape is helping Dumbledore remove the curse. For this, he wants to give Dumbledore exactly x drops of the potion he made. Value of x is calculated as maximum of p\u00b7ai\u2009+\u2009q\u00b7aj\u2009+\u2009r\u00b7ak for given p,\u2009q,\u2009r and array a1,\u2009a2,\u2009... an such that 1\u2009\u2264\u2009i\u2009\u2264\u2009j\u2009\u2264\u2009k\u2009\u2264\u2009n. Help Snape find the value of x. Do note that the value of x may be negative.InputFirst line of input contains 4 integers n,\u2009p,\u2009q,\u2009r (\u2009-\u2009109\u2009\u2264\u2009p,\u2009q,\u2009r\u2009\u2264\u2009109,\u20091\u2009\u2264\u2009n\u2009\u2264\u2009105).Next line of input contains n space separated integers a1,\u2009a2,\u2009... an (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109).OutputOutput a single integer the maximum value of p\u00b7ai\u2009+\u2009q\u00b7aj\u2009+\u2009r\u00b7ak that can be obtained provided 1\u2009\u2264\u2009i\u2009\u2264\u2009j\u2009\u2264\u2009k\u2009\u2264\u2009n.ExamplesInputCopy5 1 2 31 2 3 4 5OutputCopy30InputCopy5 1 2 -3-1 -2 -3 -4 -5OutputCopy12NoteIn the first sample case, we can take i\u2009=\u2009j\u2009=\u2009k\u2009=\u20095, thus making the answer as 1\u00b75\u2009+\u20092\u00b75\u2009+\u20093\u00b75\u2009=\u200930.In second sample case, selecting i\u2009=\u2009j\u2009=\u20091 and k\u2009=\u20095 gives the answer 12."], "24 Game": ["https://codeforces.com/problemset/problem/468/A", "A. 24 Gametime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputLittle X used to play a card game called \"24 Game\", but recently he has found it too easy. So he invented a new game.Initially you have a sequence of n integers: 1,\u20092,\u2009...,\u2009n. In a single step, you can pick two of them, let's denote them a and b, erase them from the sequence, and append to the sequence either a\u2009+\u2009b, or a\u2009-\u2009b, or a\u2009\u00d7\u2009b.After n\u2009-\u20091 steps there is only one number left. Can you make this number equal to 24?InputThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105).OutputIf it's possible, print \"YES\" in the first line. Otherwise, print \"NO\" (without the quotes).If there is a way to obtain 24 as the result number, in the following n\u2009-\u20091 lines print the required operations an operation per line. Each operation should be in form: \"a op b = c\". Where a and b are the numbers you've picked at this operation; op is either \"+\", or \"-\", or \"*\"; c is the result of corresponding operation. Note, that the absolute value of c mustn't be greater than 1018. The result of the last operation must be equal to 24. Separate operator sign and equality sign from numbers with spaces.If there are multiple valid answers, you may print any of them.ExamplesInputCopy1OutputCopyNOInputCopy8OutputCopyYES8 * 7 = 566 * 5 = 303 - 4 = -11 - 2 = -130 - -1 = 3156 - 31 = 2525 + -1 = 24"], "Math": ["https://codeforces.com/problemset/problem/1062/B", "B. Mathtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputJATC's math teacher always gives the class some interesting math problems so that they don't get bored. Today the problem is as follows. Given an integer nn, you can perform the following operations zero or more times:  mul xx: multiplies nn by xx (where xx is an arbitrary positive integer).  sqrt: replaces nn with n\u2212\u2212\u221an (to apply this operation, n\u2212\u2212\u221an must be an integer). You can perform these operations as many times as you like. What is the minimum value of nn, that can be achieved and what is the minimum number of operations, to achieve that minimum value?Apparently, no one in the class knows the answer to this problem, maybe you can help them?InputThe only line of the input contains a single integer nn (1\u2264n\u22641061\u2264n\u2264106)\u00a0\u2014 the initial number.OutputPrint two integers: the minimum integer nn that can be achieved using the described operations and the minimum number of operations required.ExamplesInputCopy20OutputCopy10 2InputCopy5184OutputCopy6 4NoteIn the first example, you can apply the operation mul 55 to get 100100 and then sqrt to get 1010.In the second example, you can first apply sqrt to get 7272, then mul 1818 to get 12961296 and finally two more sqrt and you get 66.Note, that even if the initial value of nn is less or equal 106106, it can still become greater than 106106 after applying one or more operations."], "Maximum Absurdity": ["https://codeforces.com/problemset/problem/332/B", "B. Maximum Absurditytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputReforms continue entering Berland. For example, during yesterday sitting the Berland Parliament approved as much as n laws (each law has been assigned a unique number from 1 to n). Today all these laws were put on the table of the President of Berland, G.W. Boosch, to be signed.This time mr. Boosch plans to sign 2k laws. He decided to choose exactly two non-intersecting segments of integers from 1 to n of length k and sign all laws, whose numbers fall into these segments. More formally, mr. Boosch is going to choose two integers a, b (1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u2009n\u2009-\u2009k\u2009+\u20091,\u2009b\u2009-\u2009a\u2009\u2265\u2009k) and sign all laws with numbers lying in the segments [a;\u00a0a\u2009+\u2009k\u2009-\u20091] and [b;\u00a0b\u2009+\u2009k\u2009-\u20091] (borders are included).As mr. Boosch chooses the laws to sign, he of course considers the public opinion. Allberland Public Opinion Study Centre (APOSC) conducted opinion polls among the citizens, processed the results into a report and gave it to the president. The report contains the absurdity value for each law, in the public opinion. As mr. Boosch is a real patriot, he is keen on signing the laws with the maximum total absurdity. Help him.InputThe first line contains two integers n and k (2\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105, 0\u2009<\u20092k\u2009\u2264\u2009n) \u2014 the number of laws accepted by the parliament and the length of one segment in the law list, correspondingly. The next line contains n integers x1,\u2009x2,\u2009...,\u2009xn \u2014 the absurdity of each law (1\u2009\u2264\u2009xi\u2009\u2264\u2009109).OutputPrint two integers a, b \u2014 the beginning of segments that mr. Boosch should choose. That means that the president signs laws with numbers from segments [a;\u00a0a\u2009+\u2009k\u2009-\u20091] and [b;\u00a0b\u2009+\u2009k\u2009-\u20091]. If there are multiple solutions, print the one with the minimum number a. If there still are multiple solutions, print the one with the minimum b.ExamplesInputCopy5 23 6 1 1 6OutputCopy1 4InputCopy6 21 1 1 1 1 1OutputCopy1 3NoteIn the first sample mr. Boosch signs laws with numbers from segments [1;2] and [4;5]. The total absurdity of the signed laws equals 3\u2009+\u20096\u2009+\u20091\u2009+\u20096\u2009=\u200916.In the second sample mr. Boosch signs laws with numbers from segments [1;2] and [3;4]. The total absurdity of the signed laws equals 1\u2009+\u20091\u2009+\u20091\u2009+\u20091\u2009=\u20094."], "Removing Columns": ["https://codeforces.com/problemset/problem/496/C", "C. Removing Columnstime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an n\u2009\u00d7\u2009m rectangular table consisting of lower case English letters. In one operation you can completely remove one column from the table. The remaining parts are combined forming a new table. For example, after removing the second column from the tableabcdedfghijk\u00a0we obtain the table:acdefghjk\u00a0A table is called good if its rows are ordered from top to bottom lexicographically, i.e. each row is lexicographically no larger than the following one. Determine the minimum number of operations of removing a column needed to make a given table good.InputThe first line contains two integers \u00a0\u2014 n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100).Next n lines contain m small English letters each\u00a0\u2014 the characters of the table.OutputPrint a single number\u00a0\u2014 the minimum number of columns that you need to remove in order to make the table good.ExamplesInputCopy1 10codeforcesOutputCopy0InputCopy4 4casecaretestcodeOutputCopy2InputCopy5 4codeforcescodeforcesOutputCopy4NoteIn the first sample the table is already good.In the second sample you may remove the first and third column.In the third sample you have to remove all the columns (note that the table where all rows are empty is considered good by definition).Let strings s and t have equal length. Then, s is lexicographically larger than t if they are not equal and the character following the largest common prefix of s and t (the prefix may be empty) in s is alphabetically larger than the corresponding character of t."], "Heaters": ["https://codeforces.com/problemset/problem/1066/B", "B. Heaterstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputVova's house is an array consisting of nn elements (yeah, this is the first problem, I think, where someone lives in the array). There are heaters in some positions of the array. The ii-th element of the array is 11 if there is a heater in the position ii, otherwise the ii-th element of the array is 00.Each heater has a value rr (rr is the same for all heaters). This value means that the heater at the position pospos can warm up all the elements in range [pos\u2212r+1;pos+r\u22121][pos\u2212r+1;pos+r\u22121].Vova likes to walk through his house while he thinks, and he hates cold positions of his house. Vova wants to switch some of his heaters on in such a way that each element of his house will be warmed up by at least one heater. Vova's target is to warm up the whole house (all the elements of the array), i.e. if n=6n=6, r=2r=2 and heaters are at positions 22 and 55, then Vova can warm up the whole house if he switches all the heaters in the house on (then the first 33 elements will be warmed up by the first heater and the last 33 elements will be warmed up by the second heater).Initially, all the heaters are off.But from the other hand, Vova didn't like to pay much for the electricity. So he wants to switch the minimum number of heaters on in such a way that each element of his house is warmed up by at least one heater.Your task is to find this number of heaters or say that it is impossible to warm up the whole house.InputThe first line of the input contains two integers nn and rr (1\u2264n,r\u226410001\u2264n,r\u22641000) \u2014 the number of elements in the array and the value of heaters.The second line contains nn integers a1,a2,\u2026,ana1,a2,\u2026,an (0\u2264ai\u226410\u2264ai\u22641) \u2014 the Vova's house description.OutputPrint one integer \u2014 the minimum number of heaters needed to warm up the whole house or -1 if it is impossible to do it.ExamplesInputCopy6 20 1 1 0 0 1OutputCopy3InputCopy5 31 0 0 0 1OutputCopy2InputCopy5 100 0 0 0 0OutputCopy-1InputCopy10 30 0 1 1 0 1 0 0 0 1OutputCopy3NoteIn the first example the heater at the position 22 warms up elements [1;3][1;3], the heater at the position 33 warms up elements [2,4][2,4] and the heater at the position 66 warms up elements [5;6][5;6] so the answer is 33.In the second example the heater at the position 11 warms up elements [1;3][1;3] and the heater at the position 55 warms up elements [3;5][3;5] so the answer is 22.In the third example there are no heaters so the answer is -1.In the fourth example the heater at the position 33 warms up elements [1;5][1;5], the heater at the position 66 warms up elements [4;8][4;8] and the heater at the position 1010 warms up elements [8;10][8;10] so the answer is 33."]}