
Sammy and Simmy love candies and frequently visit the local candy shop. Sammy and Simmy have bought NN candy packs. Packet ii contains AiAi candies. Sammy being the elder one is happy only if she has strictly more candies than Simmy. However Simmy, the more sensible one, is happy only if the difference between their number of candies is not more than 11.
The shopkeeper, being a generous lady, agrees to help Sammy and Simmy by distributing the candies among them in a way that makes both of them happy. The shopkeeper can open the packs and distribute the candies even within a single pack to different people.
Input:

The first line will contain TT, the number of testcases.
The first line of every test case will contain NN, the number of candy packs.
The next line has NN integers, the ithith integer denoting AiAi, 
the number of candies in the ithith pack.

Output:
Output "YES" if its possible for the shopkeeper to make both the sisters happy otherwise output "NO".  
Constraints

1≤T≤1031≤T≤103
1≤N≤1031≤N≤103
1≤Ai≤1001≤Ai≤100


                        Sample Input 1
                        





1  
2  
5 2



                        Sample Output 1
                        





YES


Explanation
Sammy gets 4 candies from the first pack.
Simmy gets 1 candy from the first pack and 2 from the second one.
So in total, Sammy has 4, and Simmy has 3. Since Sammy has strictly more candies than Simmy, Sammy is happy. And since the difference is not more then 1, Simmy is also happy. Thus both of them are happy.



Author:
6★kr_abhinav


Editorial:
https://discuss.codechef.com/problems/CNDLOVE


Tags:

               
                 Basic Maths, Observation
                 
                     
                     Mathematics, Algorithms
                 
               
             
             



                        Difficulty Rating:
                    

1054


Date Added:
3-04-2018


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

