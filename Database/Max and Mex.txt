B. Max and Mextime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a multiset SS initially consisting of nn distinct non-negative integers. A multiset is a set, that can contain some elements multiple times.You will perform the following operation kk times:   Add the element ⌈a+b2⌉⌈a+b2⌉ (rounded up) into SS, where a=mex(S)a=mex⁡(S) and b=max(S)b=max(S). If this number is already in the set, it is added again. Here maxmax of a multiset denotes the maximum integer in the multiset, and mexmex of a multiset denotes the smallest non-negative integer that is not present in the multiset. For example:   mex({1,4,0,2})=3mex⁡({1,4,0,2})=3;   mex({2,5,1})=0mex⁡({2,5,1})=0. Your task is to calculate the number of distinct elements in SS after kk operations will be done.InputThe input consists of multiple test cases. The first line contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases. The description of the test cases follows.The first line of each test case contains two integers nn, kk (1≤n≤1051≤n≤105, 0≤k≤1090≤k≤109) — the initial size of the multiset SS and how many operations you need to perform.The second line of each test case contains nn distinct integers a1,a2,…,ana1,a2,…,an (0≤ai≤1090≤ai≤109) — the numbers in the initial multiset.It is guaranteed that the sum of nn over all test cases does not exceed 105105.OutputFor each test case, print the number of distinct elements in SS after kk operations will be done.ExampleInputCopy5
4 1
0 1 3 4
3 1
0 1 4
3 0
0 1 4
3 2
0 1 2
3 2
1 2 3
OutputCopy4
4
3
5
3
NoteIn the first test case, S={0,1,3,4}S={0,1,3,4}, a=mex(S)=2a=mex⁡(S)=2, b=max(S)=4b=max(S)=4, ⌈a+b2⌉=3⌈a+b2⌉=3. So 33 is added into SS, and SS becomes {0,1,3,3,4}{0,1,3,3,4}. The answer is 44.In the second test case, S={0,1,4}S={0,1,4}, a=mex(S)=2a=mex⁡(S)=2, b=max(S)=4b=max(S)=4, ⌈a+b2⌉=3⌈a+b2⌉=3. So 33 is added into SS, and SS becomes {0,1,3,4}{0,1,3,4}. The answer is 44.