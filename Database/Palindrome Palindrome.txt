

A string is called beautiful if it has the form AArAAr where A is some non-empty string and Ar is the reversed A.
You are given a string S composed only of lowercase letters of the English alphabet. Find the number of its beautiful substrings. Equal substrings in different positions are considered different. For example, the string aaaaa has 2 different substrings because we have beautiful substring aaaa in two different positions.

Input
 The first line contains a single integer T <= 10, the number of test cases. T test cases follow. The only line of each test case contains a non-empty string composed only of lowercase letters of the English alphabet. The length of the string is not greater than 100000.

Output
 For each test case, output a single line containing the number of beautiful substrings of the corresponding string.

Example
Input:
6
aaaa
aaaaa
abbaabba
abbaabb
abaaba
xxyyxxxxyyxx

Output:
1
2
1
0
0
2




Author:
2â˜…anton_adm


Tester:
friggstad


Editorial:
https://discuss.codechef.com/problems/PALIPALI


Tags:

               
                 Balanced Binary Search Tree, Segment Trees, Fenwick Trees, Hashing, Binary Search, Manachers Algorithm
                 
                     
                     Data Structures, Tree Data Structure, Advanced Data Structures, Advanced Tree Structures, Algorithms, Searching, String Algos
                 
               
             
             



                        Difficulty Rating:
                    

2392


Date Added:
6-03-2011


Time Limit:
0.24 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM





Submit

