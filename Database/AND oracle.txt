G1. AND oracletime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputImplement a quantum oracle on NN qubits which implements the following function: f(x⃗ )=x0∧x1∧⋯∧xN−1f(x→)=x0∧x1∧⋯∧xN−1You have to implement an operation which takes the following inputs: an array of NN (1≤N≤81≤N≤8) qubits xx in an arbitrary state (input register), a qubit yy in an arbitrary state (output qubit),and performs a transformation |x⟩|y⟩→|x⟩|y⊕f(x)⟩|x⟩|y⟩→|x⟩|y⊕f(x)⟩. The operation doesn't have an output; its "output" is the state in which it leaves the qubits.Your code should have the following signature:namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (x : Qubit[], y : Qubit) : Unit {        body (...) {            // your code here        }        adjoint auto;    }}