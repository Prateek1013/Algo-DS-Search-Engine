B. Modulo Equalitytime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a positive integer mm and two integer sequence: a=[a1,a2,…,an]a=[a1,a2,…,an] and b=[b1,b2,…,bn]b=[b1,b2,…,bn]. Both of these sequence have a length nn.Permutation is a sequence of nn different positive integers from 11 to nn. For example, these sequences are permutations: [1][1], [1,2][1,2], [2,1][2,1], [6,7,3,4,1,2,5][6,7,3,4,1,2,5]. These are not: [0][0], [1,1][1,1], [2,3][2,3].You need to find the non-negative integer xx, and increase all elements of aiai by xx, modulo mm (i.e. you want to change aiai to (ai+x)modm(ai+x)modm), so it would be possible to rearrange elements of aa to make it equal bb, among them you need to find the smallest possible xx.In other words, you need to find the smallest non-negative integer xx, for which it is possible to find some permutation p=[p1,p2,…,pn]p=[p1,p2,…,pn], such that for all 1≤i≤n1≤i≤n, (ai+x)modm=bpi(ai+x)modm=bpi, where ymodmymodm — remainder of division of yy by mm.For example, if m=3m=3, a=[0,0,2,1],b=[2,0,1,1]a=[0,0,2,1],b=[2,0,1,1], you can choose x=1x=1, and aa will be equal to [1,1,0,2][1,1,0,2] and you can rearrange it to make it equal [2,0,1,1][2,0,1,1], which is equal to bb.InputThe first line contains two integers n,mn,m (1≤n≤2000,1≤m≤1091≤n≤2000,1≤m≤109): number of elemens in arrays and mm.The second line contains nn integers a1,a2,…,ana1,a2,…,an (0≤ai<m0≤ai<m).The third line contains nn integers b1,b2,…,bnb1,b2,…,bn (0≤bi<m0≤bi<m).It is guaranteed that there exists some non-negative integer xx, such that it would be possible to find some permutation p1,p2,…,pnp1,p2,…,pn such that (ai+x)modm=bpi(ai+x)modm=bpi.OutputPrint one integer, the smallest non-negative integer xx, such that it would be possible to find some permutation p1,p2,…,pnp1,p2,…,pn such that (ai+x)modm=bpi(ai+x)modm=bpi for all 1≤i≤n1≤i≤n.ExamplesInputCopy4 3
0 0 2 1
2 0 1 1
OutputCopy1
InputCopy3 2
0 0 0
1 1 1
OutputCopy1
InputCopy5 10
0 0 0 1 2
2 1 0 0 0
OutputCopy0
