C. Ehab and a 2-operation tasktime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou're given an array aa of length nn. You can perform the following operations on it:  choose an index ii (1≤i≤n)(1≤i≤n), an integer xx (0≤x≤106)(0≤x≤106), and replace ajaj with aj+xaj+x for all (1≤j≤i)(1≤j≤i), which means add xx to all the elements in the prefix ending at ii.  choose an index ii (1≤i≤n)(1≤i≤n), an integer xx (1≤x≤106)(1≤x≤106), and replace ajaj with aj%xaj%x for all (1≤j≤i)(1≤j≤i), which means replace every element in the prefix ending at ii with the remainder after dividing it by xx. Can you make the array strictly increasing in no more than n+1n+1 operations?InputThe first line contains an integer nn (1≤n≤2000)(1≤n≤2000), the number of elements in the array aa.The second line contains nn space-separated integers a1a1, a2a2, ……, anan (0≤ai≤105)(0≤ai≤105), the elements of the array aa.OutputOn the first line, print the number of operations you wish to perform. On the next lines, you should print the operations.To print an adding operation, use the format "11 ii xx"; to print a modding operation, use the format "22 ii xx". If ii or xx don't satisfy the limitations above, or you use more than n+1n+1 operations, you'll get wrong answer verdict.ExamplesInputCopy31 2 3OutputCopy0InputCopy37 6 3OutputCopy21 1 12 2 4NoteIn the first sample, the array is already increasing so we don't need any operations.In the second sample:In the first step: the array becomes [8,6,3][8,6,3].In the second step: the array becomes [0,2,3][0,2,3].