
You are given a graph with NN vertices (numbered 11 to NN) and M bidirectional edges, which doesn't contain multiple edges or self-loops — that is, the given graph is a simple undirected graph.
For each pair of vertices a,b such that 1≤a,b≤N, it is possible to add a new edge between vertices a and b to the graph, with a cost of (a−b)2.
Find the minimum cost of adding edges so that vertex N is reachable from vertex 1.
Input Format

The first line of input contains a single integer T, denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains 2 space-separated integers, N and M.
The ith of the next M lines contains 2 space-separated integers ui and vi, denoting a bidirectional edge between vertex ui and vertex vi in the graph.

Output Format
For each test case, output the answer in a single line.
Constraints

1≤T≤1000
2≤N≤2⋅105
0≤M≤2⋅105
1≤ui,vi≤N
The graph doesn't contain self-loops or multiple edges
Sum of N over all testcases is no more than 2⋅105.
Sum of M over all testcases is no more than 2⋅105.


                        Sample Input 1
                        





3
2 0
5 4
3 2
1 4
5 3
4 2
6 3
1 2
3 2
1 3



                        Sample Output 1
                        





1
0
3


Explanation
Test Case 1: Add an edge between vertices 1 and 2, with cost (1−2)2=1.
Test Case 2: Vertices 1 and 5 are already connected, so no edges need to be added.



Author:
4★vishesh_s


Editorial:
https://discuss.codechef.com/problems/TRAVELLING


Tags:

               
                 easy, graphs, shortest-path, start28, vishesh_s
                 
               
             
             



                        Difficulty Rating:
                    

2108


Date Added:
25-02-2022


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

