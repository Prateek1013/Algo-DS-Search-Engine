B. Make Them Oddtime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn positive integers a1,a2,…,ana1,a2,…,an. For the one move you can choose any even value cc and divide by two all elements that equal cc.For example, if a=[6,8,12,6,3,12]a=[6,8,12,6,3,12] and you choose c=6c=6, and aa is transformed into a=[3,8,12,3,3,12]a=[3,8,12,3,3,12] after the move.You need to find the minimal number of moves for transforming aa to an array of only odd integers (each element shouldn't be divisible by 22).InputThe first line of the input contains one integer tt (1≤t≤1041≤t≤104) — the number of test cases in the input. Then tt test cases follow.The first line of a test case contains nn (1≤n≤2⋅1051≤n≤2⋅105) — the number of integers in the sequence aa. The second line contains positive integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109).The sum of nn for all test cases in the input doesn't exceed 2⋅1052⋅105.OutputFor tt test cases print the answers in the order of test cases in the input. The answer for the test case is the minimal number of moves needed to make all numbers in the test case odd (i.e. not divisible by 22).ExampleInputCopy4
6
40 6 40 3 20 1
1
1024
4
2 4 8 16
3
3 1 7
OutputCopy4
10
4
0
NoteIn the first test case of the example, the optimal sequence of moves can be as follows:  before making moves a=[40,6,40,3,20,1]a=[40,6,40,3,20,1];  choose c=6c=6;  now a=[40,3,40,3,20,1]a=[40,3,40,3,20,1];  choose c=40c=40;  now a=[20,3,20,3,20,1]a=[20,3,20,3,20,1];  choose c=20c=20;  now a=[10,3,10,3,10,1]a=[10,3,10,3,10,1];  choose c=10c=10;  now a=[5,3,5,3,5,1]a=[5,3,5,3,5,1] — all numbers are odd. Thus, all numbers became odd after 44 moves. In 33 or fewer moves, you cannot make them all odd.