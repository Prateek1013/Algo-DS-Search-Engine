
Chef received an array AA of NN integers as a valentine's day present. He wants to maximize the length of the longest strictly increasing subsequence by choosing a subarray and adding a fixed integer XX to all its elements.
More formally, Chef wants to maximize the length of the longest strictly increasing subsequence of A by performing the following operation at most once:

Pick 3 integers L,R and X (1≤L≤R≤N, X∈Z) and assign Ai:=Ai+X ∀ i∈[L,R].

Find the length of the longest strictly increasing sequence Chef can obtain after performing the operation at most once.
Input Format

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains one integer N, the size of the array.
The next line contains N space-separated integers, where the ith integer denotes Ai.

Output Format
For each test case, print a single line containing one integer ― the length of the longest strictly increasing sequence Chef can obtain.
Constraints

1≤T≤103
1≤N≤2×105
1≤Ai≤109
Sum of N over all test cases does not exceed 2⋅105.


                        Sample Input 1
                        





3
3
1 2 1
5
1 5 8 6 9
4
1 2 2 1



                        Sample Output 1
                        





3
5
3


Explanation
Test case 1: Chef can pick (L,R,X)=(3,3,2). On performing the operation, A becomes [1,2,3]. The LIS of the updated array has length 3. The elements of the LIS are [1,2,3].
Test case 2: Chef can pick (L,R,X)=(2,3,−3). On performing the operation, A becomes [1,2,5,6,9]. The LIS of the updated array has length 5. The elements of the LIS are [1,2,5,6,9].
Test case 3: Chef can pick (L,R,X)=(4,4,4). On performing the operation, A becomes [1,2,2,5]. The LIS of the updated array has length 3. The elements of the LIS are [1,2,5].



Author:
4★youknow_who


Editorial:
https://discuss.codechef.com/problems/MLIS


Tags:

               
                 Data Structures, DP on sequences, Longest Increasing Subsequence, Greedy
                 
                     
                     Algorithms, Dynamic Programming
                 
               
             
             



                        Difficulty Rating:
                    

2079


Date Added:
12-03-2022


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
CPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

