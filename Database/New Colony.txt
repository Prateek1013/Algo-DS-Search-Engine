B. New Colonytime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputAfter reaching your destination, you want to build a new colony on the new planet. Since this planet has many mountains and the colony must be built on a flat surface you decided to flatten the mountains using boulders (you are still dreaming so this makes sense to you).  You are given an array h1,h2,…,hnh1,h2,…,hn, where hihi is the height of the ii-th mountain, and kk — the number of boulders you have.You will start throwing boulders from the top of the first mountain one by one and they will roll as follows (let's assume that the height of the current mountain is hihi):   if hi≥hi+1hi≥hi+1, the boulder will roll to the next mountain;  if hi<hi+1hi<hi+1, the boulder will stop rolling and increase the mountain height by 11 (hi=hi+1hi=hi+1);  if the boulder reaches the last mountain it will fall to the waste collection system and disappear. You want to find the position of the kk-th boulder or determine that it will fall into the waste collection system.InputThe first line contains a single integer tt (1≤t≤1001≤t≤100) — the number of test cases.Each test case consists of two lines. The first line in each test case contains two integers nn and kk (1≤n≤1001≤n≤100; 1≤k≤1091≤k≤109) — the number of mountains and the number of boulders.The second line contains nn integers h1,h2,…,hnh1,h2,…,hn (1≤hi≤1001≤hi≤100) — the height of the mountains.It is guaranteed that the sum of nn over all test cases does not exceed 100100.OutputFor each test case, print −1−1 if the kk-th boulder will fall into the collection system. Otherwise, print the position of the kk-th boulder.ExampleInputCopy4
4 3
4 1 2 3
2 7
1 8
4 5
4 1 2 3
3 1
5 3 1
OutputCopy2
1
-1
-1
NoteLet's simulate the first case:  The first boulder starts at i=1i=1; since h1≥h2h1≥h2 it rolls to i=2i=2 and stops there because h2<h3h2<h3.  The new heights are [4,2,2,3][4,2,2,3].  The second boulder starts at i=1i=1; since h1≥h2h1≥h2 the boulder rolls to i=2i=2; since h2≥h3h2≥h3 the boulder rolls to i=3i=3 and stops there because h3<h4h3<h4.  The new heights are [4,2,3,3][4,2,3,3].  The third boulder starts at i=1i=1; since h1≥h2h1≥h2 it rolls to i=2i=2 and stops there because h2<h3h2<h3.  The new heights are [4,3,3,3][4,3,3,3]. The positions where each boulder stopped are the following: [2,3,2][2,3,2].In the second case, all 77 boulders will stop right at the first mountain rising its height from 11 to 88.The third case is similar to the first one but now you'll throw 55 boulders. The first three will roll in the same way as in the first test case. After that, mountain heights will be equal to [4,3,3,3][4,3,3,3], that's why the other two boulders will fall into the collection system.In the fourth case, the first and only boulders will fall straight into the collection system.