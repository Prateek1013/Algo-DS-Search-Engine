B. Trouble Sorttime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputAshish has nn elements arranged in a line. These elements are represented by two integers aiai — the value of the element and bibi — the type of the element (there are only two possible types: 00 and 11). He wants to sort the elements in non-decreasing values of aiai.He can perform the following operation any number of times:  Select any two elements ii and jj such that bi≠bjbi≠bj and swap them. That is, he can only swap two elements of different types in one move. Tell him if he can sort the elements in non-decreasing values of aiai after performing any number of operations.InputThe first line contains one integer tt (1≤t≤100)(1≤t≤100) — the number of test cases. The description of the test cases follows.The first line of each test case contains one integer nn (1≤n≤500)(1≤n≤500) — the size of the arrays.The second line contains nn integers aiai (1≤ai≤105)(1≤ai≤105)  — the value of the ii-th element.The third line containts nn integers bibi (bi∈{0,1})(bi∈{0,1})  — the type of the ii-th element.OutputFor each test case, print "Yes" or "No" (without quotes) depending on whether it is possible to sort elements in non-decreasing order of their value.You may print each letter in any case (upper or lower).ExampleInputCopy5
4
10 20 20 30
0 1 0 1
3
3 1 2
0 1 1
4
2 2 4 8
1 1 1 1
3
5 15 4
0 0 0
4
20 10 100 50
1 0 0 1
OutputCopyYes
Yes
Yes
No
Yes
NoteFor the first case: The elements are already in sorted order.For the second case: Ashish may first swap elements at positions 11 and 22, then swap elements at positions 22 and 33.For the third case: The elements are already in sorted order.For the fourth case: No swap operations may be performed as there is no pair of elements ii and jj such that bi≠bjbi≠bj. The elements cannot be sorted.For the fifth case: Ashish may swap elements at positions 33 and 44, then elements at positions 11 and 22.