D. Districts Connectiontime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThere are nn districts in the town, the ii-th district belongs to the aiai-th bandit gang. Initially, no districts are connected to each other.You are the mayor of the city and want to build n−1n−1 two-way roads to connect all districts (two districts can be connected directly or through other connected districts).If two districts belonging to the same gang are connected directly with a road, this gang will revolt.You don't want this so your task is to build n−1n−1 two-way roads in such a way that all districts are reachable from each other (possibly, using intermediate districts) and each pair of directly connected districts belong to different gangs, or determine that it is impossible to build n−1n−1 roads to satisfy all the conditions.You have to answer tt independent test cases.InputThe first line of the input contains one integer tt (1≤t≤5001≤t≤500) — the number of test cases. Then tt test cases follow.The first line of the test case contains one integer nn (2≤n≤50002≤n≤5000) — the number of districts. The second line of the test case contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1091≤ai≤109), where aiai is the gang the ii-th district belongs to.It is guaranteed that the sum of nn does not exceed 50005000 (∑n≤5000∑n≤5000).OutputFor each test case, print:  NO on the only line if it is impossible to connect all districts satisfying the conditions from the problem statement.  YES on the first line and n−1n−1 roads on the next n−1n−1 lines. Each road should be presented as a pair of integers xixi and yiyi (1≤xi,yi≤n;xi≠yi1≤xi,yi≤n;xi≠yi), where xixi and yiyi are two districts the ii-th road connects. For each road ii, the condition a[xi]≠a[yi]a[xi]≠a[yi] should be satisfied. Also, all districts should be reachable from each other (possibly, using intermediate districts).ExampleInputCopy4
5
1 2 2 1 3
3
1 1 1
4
1 1000 101 1000
4
1 2 3 4
OutputCopyYES
1 3
3 5
5 4
1 2
NO
YES
1 2
2 3
3 4
YES
1 2
1 3
1 4
