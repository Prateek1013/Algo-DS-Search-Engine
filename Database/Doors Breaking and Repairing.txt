C. Doors Breaking and Repairingtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are policeman and you are playing a game with Slavik. The game is turn-based and each turn consists of two phases. During the first phase you make your move and during the second phase Slavik makes his move.There are nn doors, the ii-th door initially has durability equal to aiai.During your move you can try to break one of the doors. If you choose door ii and its current durability is bibi then you reduce its durability to max(0,bi−x)max(0,bi−x) (the value xx is given).During Slavik's move he tries to repair one of the doors. If he chooses door ii and its current durability is bibi then he increases its durability to bi+ybi+y (the value yy is given). Slavik cannot repair doors with current durability equal to 00.The game lasts 1010010100 turns. If some player cannot make his move then he has to skip it.Your goal is to maximize the number of doors with durability equal to 00 at the end of the game. You can assume that Slavik wants to minimize the number of such doors. What is the number of such doors in the end if you both play optimally?InputThe first line of the input contains three integers nn, xx and yy (1≤n≤1001≤n≤100, 1≤x,y≤1051≤x,y≤105) — the number of doors, value xx and value yy, respectively.The second line of the input contains nn integers a1,a2,…,ana1,a2,…,an (1≤ai≤1051≤ai≤105), where aiai is the initial durability of the ii-th door.OutputPrint one integer — the number of doors with durability equal to 00 at the end of the game, if you and Slavik both play optimally.ExamplesInputCopy6 3 2
2 3 1 3 4 2
OutputCopy6
InputCopy5 3 3
1 2 4 2 3
OutputCopy2
InputCopy5 5 6
1 2 6 10 3
OutputCopy2
NoteClarifications about the optimal strategy will be ignored.