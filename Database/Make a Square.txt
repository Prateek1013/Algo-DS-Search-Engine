C. Make a Squaretime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given a positive integer nn, written without leading zeroes (for example, the number 04 is incorrect). In one operation you can delete any digit of the given integer so that the result remains a positive integer without leading zeros.Determine the minimum number of operations that you need to consistently apply to the given integer nn to make from it the square of some positive integer or report that it is impossible.An integer xx is the square of some positive integer if and only if x=y2x=y2 for some positive integer yy.InputThe first line contains a single integer nn (1≤n≤2⋅1091≤n≤2⋅109). The number is given without leading zeroes.OutputIf it is impossible to make the square of some positive integer from nn, print -1. In the other case, print the minimal number of operations required to do it.ExamplesInputCopy8314OutputCopy2InputCopy625OutputCopy0InputCopy333OutputCopy-1NoteIn the first example we should delete from 83148314 the digits 33 and 44. After that 83148314 become equals to 8181, which is the square of the integer 99.In the second example the given 625625 is the square of the integer 2525, so you should not delete anything. In the third example it is impossible to make the square from 333333, so the answer is -1.