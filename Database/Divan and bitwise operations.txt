C. Divan and bitwise operationstime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce Divan analyzed a sequence a1,a2,…,ana1,a2,…,an consisting of nn non-negative integers as follows. He considered each non-empty subsequence of the sequence aa, computed the bitwise XOR of its elements and added up all the XORs, obtaining the coziness of the sequence aa.A sequence cc is a subsequence of a sequence dd if cc can be obtained from dd by deletion of several (possibly, zero or all) elements. For example, [1,2,3,4][1,2,3,4], [2,4][2,4], and [2][2] are subsequences of [1,2,3,4][1,2,3,4], but [4,3][4,3] and [0][0] are not.Divan was very proud of his analysis, but now he lost the sequence aa, and also the coziness value! However, Divan remembers the value of bitwise OR on mm contiguous subsegments of the sequence aa. It turns out that each element of the original sequence is contained in at least one of these mm segments.Divan asks you to help find the coziness of the sequence aa using the information he remembers. If several coziness values are possible, print any.As the result can be very large, print the value modulo 109+7109+7.InputThe first line contains one integer number tt (1≤t≤1031≤t≤103) — the number of test cases.The first line of each test case contains two integer numbers nn and mm (1≤n,m≤2⋅1051≤n,m≤2⋅105) — the length of the sequence and the number of contiguous segments whose bitwise OR values Divan remembers, respectively.The following mm lines describe the segments, one per line.Each segment is described with three integers ll, rr, and xx (1≤l≤r≤n1≤l≤r≤n, 0≤x≤230−10≤x≤230−1) — the first and last elements of the segment and the bitwise OR of al,al+1,…,aral,al+1,…,ar, respectively.It is guaranteed that each element of the sequence is contained in at least one of the segments. It is guaranteed that there exists a sequence that satisfies all constraints.It is guaranteed that the sum of nn and the sum of mm over all test cases do not exceed 2⋅1052⋅105. OutputFor each test case print the coziness any suitable sequence aa modulo 109+7109+7.ExampleInputCopy3
2 1
1 2 2
3 2
1 3 5
2 3 5
5 4
1 2 7
3 3 7
4 4 0
4 5 2
OutputCopy4
20
112
NoteIn first example, one of the sequences that fits the constraints is [0,2][0,2]. Consider all its non-empty subsequences:  [0][0]: the bitwise XOR of this subsequence is 00;  [2][2]: the bitwise XOR of this subsequence is 22;  [0,2][0,2]: the bitwise XOR of this subsequence is 22. The sum of all results is 44, so it is the answer.In second example, one of the sequences that fits the constraints is [0,5,5][0,5,5].In third example, one of the sequences that fits the constraints is [5,6,7,0,2][5,6,7,0,2].