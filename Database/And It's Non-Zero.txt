B. And It's Non-Zerotime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputYou are given an array consisting of all integers from [l,r][l,r] inclusive. For example, if l=2l=2 and r=5r=5, the array would be [2,3,4,5][2,3,4,5]. What's the minimum number of elements you can delete to make the bitwise AND of the array non-zero?A bitwise AND is a binary operation that takes two equal-length binary representations and performs the AND operation on each pair of the corresponding bits.InputThe first line contains one integer tt (1≤t≤1041≤t≤104) — the number of test cases. Then tt cases follow.The first line of each test case contains two integers ll and rr (1≤l≤r≤2⋅1051≤l≤r≤2⋅105) — the description of the array.OutputFor each test case, output a single integer — the answer to the problem.ExampleInputCopy5
1 2
2 8
4 5
1 5
100000 200000
OutputCopy1
3
0
2
31072
NoteIn the first test case, the array is [1,2][1,2]. Currently, the bitwise AND is 00, as 1 & 2=01 & 2=0. However, after deleting 11 (or 22), the array becomes [2][2] (or [1][1]), and the bitwise AND becomes 22 (or 11). This can be proven to be the optimal, so the answer is 11.In the second test case, the array is [2,3,4,5,6,7,8][2,3,4,5,6,7,8]. Currently, the bitwise AND is 00. However, after deleting 44, 55, and 88, the array becomes [2,3,6,7][2,3,6,7], and the bitwise AND becomes 22. This can be proven to be the optimal, so the answer is 33. Note that there may be other ways to delete 33 elements.